{"sha": "f89d6e77d72b81f2b5c6b2f591db7499df1189d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5ZDZlNzdkNzJiODFmMmI1YzZiMmY1OTFkYjc0OTlkZjExODlkMQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-10-28T17:47:56Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-10-28T17:47:56Z"}, "message": "re PR target/49313 (Inefficient libgcc implementations for avr)\n\n\tPR target/49313\n\t* config/avr/avr.md (parityhi2): Expand allowing pseudos.\n\t(*parityhi2): New pre-reload insn-and-split to map 16-bit parity\n\tto the libgcc insn.\n\t(*parityqihi2): Same for 8-bit parity.\n\nFrom-SVN: r180620", "tree": {"sha": "0fec04061b0c2d1ab43862a1abbbf1568013b936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fec04061b0c2d1ab43862a1abbbf1568013b936"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f89d6e77d72b81f2b5c6b2f591db7499df1189d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89d6e77d72b81f2b5c6b2f591db7499df1189d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89d6e77d72b81f2b5c6b2f591db7499df1189d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89d6e77d72b81f2b5c6b2f591db7499df1189d1/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58a9e3c406cfb58bddba83cf9e74b8cd7a139471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58a9e3c406cfb58bddba83cf9e74b8cd7a139471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58a9e3c406cfb58bddba83cf9e74b8cd7a139471"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "33651a263cfed88cd08279182f66c2b492303915", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89d6e77d72b81f2b5c6b2f591db7499df1189d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89d6e77d72b81f2b5c6b2f591db7499df1189d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f89d6e77d72b81f2b5c6b2f591db7499df1189d1", "patch": "@@ -1,3 +1,11 @@\n+2011-10-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/49313\n+\t* config/avr/avr.md (parityhi2): Expand allowing pseudos.\n+\t(*parityhi2): New pre-reload insn-and-split to map 16-bit parity\n+\tto the libgcc insn.\n+\t(*parityqihi2): Same for 8-bit parity.\n+\n 2011-10-28  Julian Brown  <julian@codesourcery.com>\n \n \tPR rtl-optimization/47918"}, {"sha": "064db2cc00046194b61f1c63ba1d3addac72ebcb", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89d6e77d72b81f2b5c6b2f591db7499df1189d1/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89d6e77d72b81f2b5c6b2f591db7499df1189d1/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=f89d6e77d72b81f2b5c6b2f591db7499df1189d1", "patch": "@@ -4288,15 +4288,41 @@\n \n ;; Parity\n \n+;; Postpone expansion of 16-bit parity to libgcc call until after combine for\n+;; better 8-bit parity recognition.\n+\n (define_expand \"parityhi2\"\n+  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+                   (parity:HI (match_operand:HI 1 \"register_operand\" \"\")))\n+              (clobber (reg:HI 24))])])\n+\n+(define_insn_and_split \"*parityhi2\"\n+  [(set (match_operand:HI 0 \"register_operand\"           \"=r\")\n+        (parity:HI (match_operand:HI 1 \"register_operand\" \"r\")))\n+   (clobber (reg:HI 24))]\n+  \"!reload_completed\"\n+  { gcc_unreachable(); }\n+  \"&& 1\"\n   [(set (reg:HI 24)\n-        (match_operand:HI 1 \"register_operand\" \"\"))\n+        (match_dup 1))\n    (set (reg:HI 24)\n         (parity:HI (reg:HI 24)))\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n-        (reg:HI 24))]\n-  \"\"\n-  \"\")\n+   (set (match_dup 0)\n+        (reg:HI 24))])\n+\n+(define_insn_and_split \"*parityqihi2\"\n+  [(set (match_operand:HI 0 \"register_operand\"           \"=r\")\n+        (parity:HI (match_operand:QI 1 \"register_operand\" \"r\")))\n+   (clobber (reg:HI 24))]\n+  \"!reload_completed\"\n+  { gcc_unreachable(); }\n+  \"&& 1\"\n+  [(set (reg:QI 24)\n+        (match_dup 1))\n+   (set (reg:HI 24)\n+        (zero_extend:HI (parity:QI (reg:QI 24))))\n+   (set (match_dup 0)\n+        (reg:HI 24))])\n \n (define_expand \"paritysi2\"\n   [(set (reg:SI 22)"}]}