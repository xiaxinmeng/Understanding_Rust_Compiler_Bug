{"sha": "64b7b7a3f678339c8f6ecccb073fb8a56bf716f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRiN2I3YTNmNjc4MzM5YzhmNmVjY2NiMDczZmI4YTU2YmY3MTZmMA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-13T17:09:04Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-13T17:09:04Z"}, "message": "(mostly_false_jump): Recognize a sequence properly.\n\nFrom-SVN: r2428", "tree": {"sha": "6a92403c67b5643f3fafd4db5e0445489310f433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a92403c67b5643f3fafd4db5e0445489310f433"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64b7b7a3f678339c8f6ecccb073fb8a56bf716f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b7b7a3f678339c8f6ecccb073fb8a56bf716f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64b7b7a3f678339c8f6ecccb073fb8a56bf716f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b7b7a3f678339c8f6ecccb073fb8a56bf716f0/comments", "author": null, "committer": null, "parents": [{"sha": "68403115dd3819c02a4e75fc085192b95f69dce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68403115dd3819c02a4e75fc085192b95f69dce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68403115dd3819c02a4e75fc085192b95f69dce0"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "cae25eb86863939584fea66984bfa1d7949ba2d5", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64b7b7a3f678339c8f6ecccb073fb8a56bf716f0/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64b7b7a3f678339c8f6ecccb073fb8a56bf716f0/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=64b7b7a3f678339c8f6ecccb073fb8a56bf716f0", "patch": "@@ -47,7 +47,7 @@ extern char *ctime ();\n extern int flag_traditional;\n extern FILE *asm_out_file;\n \n-static char out_sccs_id[] = \"@(#)m88k.c\t2.2.13.1 10/07/92 06:31:13\";\n+static char out_sccs_id[] = \"@(#)m88k.c\t2.2.13.2 10/13/92 09:26:24\";\n static char tm_sccs_id [] = TM_SCCS_ID;\n \n char *m88k_pound_sign = \"\";\t/* Either # for SVR4 or empty for SVR3 */\n@@ -917,10 +917,11 @@ mostly_false_jump (jump_insn, condition)\n     {\n       if (GET_CODE (insnt) == JUMP_INSN)\n \tbreak;\n-      else if (GET_CODE (insnt) == SEQUENCE\n-\t       && GET_CODE (XVECEXP (insnt, 0, 0)) == JUMP_INSN)\n+      else if (GET_CODE (insnt) == INSN\n+\t       && GET_CODE (PATTERN (insnt)) == SEQUENCE\n+\t       && GET_CODE (XVECEXP (PATTERN (insnt), 0, 0)) == JUMP_INSN)\n \t{\n-\t  insnt = XVECEXP (insnt, 0, 0);\n+\t  insnt = XVECEXP (PATTERN (insnt), 0, 0);\n \t  break;\n \t}\n     }\n@@ -937,10 +938,11 @@ mostly_false_jump (jump_insn, condition)\n     {\n       if (GET_CODE (insnj) == JUMP_INSN)\n \tbreak;\n-      else if (GET_CODE (insnj) == SEQUENCE\n-\t       && GET_CODE (XVECEXP (insnj, 0, 0)) == JUMP_INSN)\n+      else if (GET_CODE (insnj) == INSN\n+\t       && GET_CODE (PATTERN (insnj)) == SEQUENCE\n+\t       && GET_CODE (XVECEXP (PATTERN (insnj), 0, 0)) == JUMP_INSN)\n \t{\n-\t  insnj = XVECEXP (insnj, 0, 0);\n+\t  insnj = XVECEXP (PATTERN (insnj), 0, 0);\n \t  break;\n \t}\n     }\n@@ -949,7 +951,7 @@ mostly_false_jump (jump_insn, condition)\n \t  || (GET_CODE (PATTERN (insnj)) == SET\n \t      && GET_CODE (SET_SRC (PATTERN (insnj))) == REG\n \t      && REGNO (SET_SRC (PATTERN (insnj))) == 1)))\n-    insnt = 0;\n+    insnj = 0;\n \n   /* Predict to not return.  */\n   if ((insnt == 0) != (insnj == 0))"}]}