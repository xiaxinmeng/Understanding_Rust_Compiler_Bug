{"sha": "dd1c7792d6ff70e830e0ff8028bbac8379f5a79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxYzc3OTJkNmZmNzBlODMwZTBmZjgwMjhiYmFjODM3OWY1YTc5Yw==", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2021-06-24T13:20:14Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-24T13:33:19Z"}, "message": "libstdc++: Remove incorrect fabs(simd) overload\n\nfabs(int) returns double, this one didn't. This overload is not\nspecified in the Parallelism TS 2. Also remove the comment about labs\nand llabs: it doesn't belong here.\n\nSigned-off-by: Matthias Kretz <m.kretz@gsi.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/simd_math.h (fabs): Remove\n\tfabs(simd<integral>) overload.", "tree": {"sha": "41982e2210fb7cb5e904f5dea5712257fa2d7ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41982e2210fb7cb5e904f5dea5712257fa2d7ccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd1c7792d6ff70e830e0ff8028bbac8379f5a79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1c7792d6ff70e830e0ff8028bbac8379f5a79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1c7792d6ff70e830e0ff8028bbac8379f5a79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1c7792d6ff70e830e0ff8028bbac8379f5a79c/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "343f01f4cde17003b6721722361e190bd6cffd15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343f01f4cde17003b6721722361e190bd6cffd15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343f01f4cde17003b6721722361e190bd6cffd15"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "fe670e60961c26e6de96d2c37c3a3121a3e5615b", "filename": "libstdc++-v3/include/experimental/bits/simd_math.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1c7792d6ff70e830e0ff8028bbac8379f5a79c/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_math.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1c7792d6ff70e830e0ff8028bbac8379f5a79c/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_math.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_math.h?ref=dd1c7792d6ff70e830e0ff8028bbac8379f5a79c", "patch": "@@ -865,22 +865,6 @@ template <typename _Tp, typename _Abi>\n   abs(const simd<_Tp, _Abi>& __x)\n   { return {__private_init, _Abi::_SimdImpl::_S_abs(__data(__x))}; }\n \n-template <typename _Tp, typename _Abi>\n-  enable_if_t<!is_floating_point_v<_Tp> && is_signed_v<_Tp>, simd<_Tp, _Abi>>\n-  fabs(const simd<_Tp, _Abi>& __x)\n-  { return {__private_init, _Abi::_SimdImpl::_S_abs(__data(__x))}; }\n-\n-// the following are overloads for functions in <cstdlib> and not covered by\n-// [parallel.simd.math]. I don't see much value in making them work, though\n-/*\n-template <typename _Abi> simd<long, _Abi> labs(const simd<long, _Abi> &__x)\n-{ return {__private_init, _Abi::_SimdImpl::abs(__data(__x))}; }\n-\n-template <typename _Abi> simd<long long, _Abi> llabs(const simd<long long, _Abi>\n-&__x)\n-{ return {__private_init, _Abi::_SimdImpl::abs(__data(__x))}; }\n-*/\n-\n #define _GLIBCXX_SIMD_CVTING2(_NAME)                                           \\\n template <typename _Tp, typename _Abi>                                         \\\n   _GLIBCXX_SIMD_INTRINSIC simd<_Tp, _Abi> _NAME(                               \\"}]}