{"sha": "0df69870f149a0576e6d2b9699583d22fb2583fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRmNjk4NzBmMTQ5YTA1NzZlNmQyYjk2OTk1ODNkMjJmYjI1ODNmZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-02-27T06:09:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-02-27T06:09:33Z"}, "message": "New builtins: __REGISTER_PREFIX__ and __USER_LABEL_PREFIX__\n\nFrom-SVN: r3552", "tree": {"sha": "8fb77943a3c4833d5d761dce90a8915968cb4a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb77943a3c4833d5d761dce90a8915968cb4a1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0df69870f149a0576e6d2b9699583d22fb2583fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df69870f149a0576e6d2b9699583d22fb2583fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df69870f149a0576e6d2b9699583d22fb2583fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df69870f149a0576e6d2b9699583d22fb2583fe/comments", "author": null, "committer": null, "parents": [{"sha": "0a111fa6df221deb134fe8c58a868194f80bfc32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a111fa6df221deb134fe8c58a868194f80bfc32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a111fa6df221deb134fe8c58a868194f80bfc32"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "9f75cc0e188ecaf7f8cff73ce3a282bc276d40bf", "filename": "gcc/cccp.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df69870f149a0576e6d2b9699583d22fb2583fe/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df69870f149a0576e6d2b9699583d22fb2583fe/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=0df69870f149a0576e6d2b9699583d22fb2583fe", "patch": "@@ -738,6 +738,8 @@ enum node_type {\n  T_SIZE_TYPE,   /* `__SIZE_TYPE__' */\n  T_PTRDIFF_TYPE,   /* `__PTRDIFF_TYPE__' */\n  T_WCHAR_TYPE,   /* `__WCHAR_TYPE__' */\n+ T_USER_LABEL_PREFIX_TYPE, /* `__USER_LABEL_PREFIX__' */\n+ T_REGISTER_PREFIX_TYPE,   /* `__REGISTER_PREFIX__' */\n  T_TIME,\t/* `__TIME__' */\n  T_CONST,\t/* Constant value, used by `__STDC__' */\n  T_MACRO,\t/* macro defined by `#define' */\n@@ -804,6 +806,18 @@ static char *predefs = \"\";\n #ifndef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n #endif\n+\n+/* The string value for __USER_LABEL_PREFIX__ */\n+\n+#ifndef USER_LABEL_PREFIX\n+#define USER_LABEL_PREFIX \"\"\n+#endif\n+\n+/* The string value for __REGISTER_PREFIX__ */\n+\n+#ifndef REGISTER_PREFIX\n+#define REGISTER_PREFIX \"\"\n+#endif\n \f\n /* In the definition of a #assert name, this structure forms\n    a list of the individual values asserted.\n@@ -3622,6 +3636,16 @@ special_symbol (hp, op)\n     sprintf (buf, \"%s\", WCHAR_TYPE);\n     break;\n \n+  case T_USER_LABEL_PREFIX_TYPE:\n+    buf = (char *) alloca (3 + strlen (USER_LABEL_PREFIX));\n+    sprintf (buf, \"%s\", USER_LABEL_PREFIX);\n+    break;\n+\n+  case T_REGISTER_PREFIX_TYPE:\n+    buf = (char *) alloca (3 + strlen (REGISTER_PREFIX));\n+    sprintf (buf, \"%s\", REGISTER_PREFIX);\n+    break;\n+\n   case T_CONST:\n     buf = (char *) alloca (4 * sizeof (int));\n     sprintf (buf, \"%d\", hp->value.ival);\n@@ -8380,6 +8404,8 @@ initialize_builtins (inp, outp)\n   install (\"__PTRDIFF_TYPE__ \", -1, T_PTRDIFF_TYPE, 0, 0, -1);\n #endif\n   install (\"__WCHAR_TYPE__\", -1, T_WCHAR_TYPE, 0, 0, -1);\n+  install (\"__USER_LABEL_PREFIX__\", -1, T_USER_LABEL_PREFIX_TYPE, 0, 0, -1);\n+  install (\"__REGISTER_PREFIX__\", -1, T_REGISTER_PREFIX_TYPE, 0, 0, -1);\n   install (\"__TIME__\", -1, T_TIME, 0, 0, -1);\n   if (!traditional)\n     install (\"__STDC__\", -1, T_CONST, STDC_VALUE, 0, -1);"}]}