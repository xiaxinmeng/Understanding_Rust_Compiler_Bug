{"sha": "b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk5ZDdkOTc2YmEyNDc1ZjAzOGVhMTQwNmExZmI5YThmYjZjNGY1YQ==", "commit": {"author": {"name": "Qing Zhao", "email": "qing.zhao@oracle.com", "date": "2018-08-15T16:33:52Z"}, "committer": {"name": "Qing Zhao", "email": "qinzhao@gcc.gnu.org", "date": "2018-08-15T16:33:52Z"}, "message": "Do not expand the call to memcmp at all when overflow is detected.\n\nFrom-SVN: r263563", "tree": {"sha": "2bf0f327db2e0b2b64117f2d2b16c5e708530946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bf0f327db2e0b2b64117f2d2b16c5e708530946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/comments", "author": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0cd020ae59e1131b8d7e23424c319c493745f0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd020ae59e1131b8d7e23424c319c493745f0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd020ae59e1131b8d7e23424c319c493745f0f8"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "e575b553c42ef8d5fd2b9af0aa9e39d8630dd8c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "patch": "@@ -1,3 +1,9 @@\n+2018-08-15  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\tPR testsuite/86519\n+\t* builtins.c (expand_builtin_memcmp): Do not expand the call\n+\twhen overflow is detected.\n+\n 2018-08-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/71625"}, {"sha": "6716aabfa7319d76cac4ffa1626528ce458feb6d", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "patch": "@@ -4481,11 +4481,16 @@ expand_builtin_memcmp (tree exp, rtx target, bool result_eq)\n \t\t\t\t  /*objsize=*/NULL_TREE);\n     }\n \n+  /* If the specified length exceeds the size of either object, \n+     call the function.  */\n+  if (!no_overflow)\n+    return NULL_RTX;\n+\n   /* Due to the performance benefit, always inline the calls first\n      when result_eq is false.  */\n   rtx result = NULL_RTX;\n \n-  if (!result_eq && fcode != BUILT_IN_BCMP && no_overflow)\n+  if (!result_eq && fcode != BUILT_IN_BCMP)\n     {\n       result = inline_expand_builtin_string_cmp (exp, target);\n       if (result)"}, {"sha": "bd167b3a77ecd922ec8991e404ad7c8eb18fe270", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "patch": "@@ -1,3 +1,9 @@\n+2018-08-15  Qing Zhao <qing.zhao@oracle.com>\n+\n+\tPR testsuite/86519\n+\t* gcc.dg/strcmpopt_6.c: Scan the assembly file instead of\n+\tthe .expand file.\n+\n 2018-08-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.dg/wmain.c: New test."}, {"sha": "4c6de02824f44ba79765c2f05621ed57860465b2", "filename": "gcc/testsuite/gcc.dg/strcmpopt_6.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_6.c?ref=b99d7d976ba2475f038ea1406a1fb9a8fb6c4f5a", "patch": "@@ -1,7 +1,7 @@\n /* When the specified length exceeds one of the arguments of the call to memcmp, \n    the call to memcmp should NOT be inlined.  */\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fdump-rtl-expand -Wno-stringop-overflow\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wno-stringop-overflow\" } */\n \n typedef struct { char s[8]; int x; } S;\n \n@@ -33,4 +33,4 @@ int main (void)\n \n }\n \n-/* { dg-final { scan-rtl-dump-times \"__builtin_memcmp\" 6 \"expand\" } } */\n+/* { dg-final { scan-assembler-times \"memcmp\" 2 } } */"}]}