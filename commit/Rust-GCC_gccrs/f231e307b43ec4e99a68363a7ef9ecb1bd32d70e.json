{"sha": "f231e307b43ec4e99a68363a7ef9ecb1bd32d70e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIzMWUzMDdiNDNlYzRlOTlhNjgzNjNhN2VmOWVjYjFiZDMyZDcwZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-11T13:33:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-11T13:33:22Z"}, "message": "(initialize_for_inline): Handle CONCAT when setting up parmdecl_map.\n\n(expand_inline_function): Make test for overlap of TARGET and args_vals[i]\nmore conservative.\n\nFrom-SVN: r6207", "tree": {"sha": "a3af8716acabf618b3c0bf459039166332e74540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3af8716acabf618b3c0bf459039166332e74540"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f231e307b43ec4e99a68363a7ef9ecb1bd32d70e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f231e307b43ec4e99a68363a7ef9ecb1bd32d70e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f231e307b43ec4e99a68363a7ef9ecb1bd32d70e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f231e307b43ec4e99a68363a7ef9ecb1bd32d70e/comments", "author": null, "committer": null, "parents": [{"sha": "7f34054628176b71579b3f8600380bbdaccf4731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f34054628176b71579b3f8600380bbdaccf4731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f34054628176b71579b3f8600380bbdaccf4731"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "fcba544145c0fd8bdab91d3cf9c3e1ae3f27ef12", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f231e307b43ec4e99a68363a7ef9ecb1bd32d70e/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f231e307b43ec4e99a68363a7ef9ecb1bd32d70e/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=f231e307b43ec4e99a68363a7ef9ecb1bd32d70e", "patch": "@@ -276,6 +276,17 @@ initialize_for_inline (fndecl, min_labelno, max_labelno, max_reg, copy)\n \n       if (GET_CODE (p) == REG)\n \tparmdecl_map[REGNO (p)] = parms;\n+      else if (GET_CODE (p) == CONCAT)\n+\t{\n+\t  rtx preal = gen_realpart (GET_MODE (XEXP (p, 0)), p);\n+\t  rtx pimag = gen_imagpart (GET_MODE (preal), p);\n+\n+\t  if (GET_CODE (preal) == REG)\n+\t    parmdecl_map[REGNO (preal)] = parms;\n+\t  if (GET_CODE (pimag) == REG)\n+\t    parmdecl_map[REGNO (pimag)] = parms;\n+\t}\n+\n       /* This flag is cleared later\n \t if the function ever modifies the value of the parm.  */\n       TREE_READONLY (parms) = 1;\n@@ -1273,9 +1284,7 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t\t But if ARG_VALS[I] overlaps TARGET, these assumptions are\n \t\t wrong, so put ARG_VALS[I] into a fresh register.  */\n \t      || (target != 0\n-\t\t  && (GET_CODE (arg_vals[i]) == REG\n-\t\t      || GET_CODE (arg_vals[i]) == SUBREG\n-\t\t      || GET_CODE (arg_vals[i]) == MEM)\n+\t\t  && ! CONSTANT_P (arg_vals[i])\n \t\t  && reg_overlap_mentioned_p (arg_vals[i], target))\n \t      /* ??? We must always copy a SUBREG into a REG, because it might\n \t\t get substituted into an address, and not all ports correctly"}]}