{"sha": "a4f71b01d1b274eedffc236b4823036142fa89b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmNzFiMDFkMWIyNzRlZWRmZmMyMzZiNDgyMzAzNjE0MmZhODliNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-11-29T23:37:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-11-29T23:37:06Z"}, "message": "* config/sh/sh.h (enum reg_class, REG_CLASS_NAMES)\n\t(REG_CLASS_CONTENTS): Add NON_SP_REGS.\n\t(REGCLASS_HAS_GENERAL_REG): Handle NON_SP_REGS.\n\t* config/sh/constraints.md (u): New constraint.\n\nFrom-SVN: r181825", "tree": {"sha": "f3edde7f6d273183ea9cbcbd479858a503295ff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3edde7f6d273183ea9cbcbd479858a503295ff4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4f71b01d1b274eedffc236b4823036142fa89b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f71b01d1b274eedffc236b4823036142fa89b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4f71b01d1b274eedffc236b4823036142fa89b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f71b01d1b274eedffc236b4823036142fa89b7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b740cb6335fd36e5847f2abd3c890b7f14d1ef30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b740cb6335fd36e5847f2abd3c890b7f14d1ef30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b740cb6335fd36e5847f2abd3c890b7f14d1ef30"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "fcd13905cc3e8dc3e9c2d2023f1a733baaa28474", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f71b01d1b274eedffc236b4823036142fa89b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f71b01d1b274eedffc236b4823036142fa89b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4f71b01d1b274eedffc236b4823036142fa89b7", "patch": "@@ -1,3 +1,10 @@\n+2011-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/sh/sh.h (enum reg_class, REG_CLASS_NAMES)\n+\t(REG_CLASS_CONTENTS): Add NON_SP_REGS.\n+\t(REGCLASS_HAS_GENERAL_REG): Handle NON_SP_REGS.\n+\t* config/sh/constraints.md (u): New constraint.\n+\n 2011-11-29  Oleg Endo  <oleg.endo@t-online.de>\n \n \tPR target/51337"}, {"sha": "59e7de666628e325ce1c8d0f97a94b43be8e876b", "filename": "gcc/config/sh/constraints.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f71b01d1b274eedffc236b4823036142fa89b7/gcc%2Fconfig%2Fsh%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f71b01d1b274eedffc236b4823036142fa89b7/gcc%2Fconfig%2Fsh%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fconstraints.md?ref=a4f71b01d1b274eedffc236b4823036142fa89b7", "patch": "@@ -75,6 +75,9 @@\n (define_register_constraint \"t\" \"T_REGS\"\n   \"T register.\")\n \n+(define_register_constraint \"u\" \"NON_SP_REGS\"\n+  \"Non-stack-pointer register.\")\n+\n (define_register_constraint \"w\" \"FP0_REGS\"\n   \"Floating-point register 0.\")\n "}, {"sha": "8ab1f10e31e8357d6057f04db52cd9cbee1491b3", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f71b01d1b274eedffc236b4823036142fa89b7/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f71b01d1b274eedffc236b4823036142fa89b7/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=a4f71b01d1b274eedffc236b4823036142fa89b7", "patch": "@@ -1059,6 +1059,7 @@ enum reg_class\n   MAC_REGS,\n   FPUL_REGS,\n   SIBCALL_REGS,\n+  NON_SP_REGS,\n   GENERAL_REGS,\n   FP0_REGS,\n   FP_REGS,\n@@ -1084,6 +1085,7 @@ enum reg_class\n   \"MAC_REGS\",\t\t\\\n   \"FPUL_REGS\",\t\t\\\n   \"SIBCALL_REGS\",\t\\\n+  \"NON_SP_REGS\",\t\\\n   \"GENERAL_REGS\",\t\\\n   \"FP0_REGS\",\t\t\\\n   \"FP_REGS\",\t\t\\\n@@ -1116,6 +1118,8 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00400000 },\t\\\n /* SIBCALL_REGS: Initialized in TARGET_CONDITIONAL_REGISTER_USAGE.  */\t\\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t\\\n+/* NON_SP_REGS:  */\t\t\t\t\t\t\t\\\n+  { 0xffff7fff, 0xffffffff, 0x00000000, 0x00000000, 0x03020000 },\t\\\n /* GENERAL_REGS:  */\t\t\t\t\t\t\t\\\n   { 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x03020000 },\t\\\n /* FP0_REGS:  */\t\t\t\t\t\t\t\\\n@@ -2072,7 +2076,7 @@ struct sh_args {\n    register information here is not used for SFmode.  */\n \n #define REGCLASS_HAS_GENERAL_REG(CLASS) \\\n-  ((CLASS) == GENERAL_REGS || (CLASS) == R0_REGS \\\n+  ((CLASS) == GENERAL_REGS || (CLASS) == R0_REGS || (CLASS) == NON_SP_REGS \\\n     || (! TARGET_SHMEDIA && (CLASS) == SIBCALL_REGS))\n \n #define REGCLASS_HAS_FP_REG(CLASS) \\"}]}