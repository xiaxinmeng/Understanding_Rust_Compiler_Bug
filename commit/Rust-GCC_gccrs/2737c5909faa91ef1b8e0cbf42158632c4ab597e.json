{"sha": "2737c5909faa91ef1b8e0cbf42158632c4ab597e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczN2M1OTA5ZmFhOTFlZjFiOGUwY2JmNDIxNTg2MzJjNGFiNTk3ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-07-18T19:59:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-07-18T19:59:55Z"}, "message": "i386.md (*addqi_2_slp): Remove.\n\n\t* config/i386/i386.md (*addqi_2_slp): Remove.\n\t(*<code>qi_2_slp): Ditto.\n\nFrom-SVN: r273583", "tree": {"sha": "68b4ebfb8162e61b6953d20f2ff2c7d91a9ff3f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b4ebfb8162e61b6953d20f2ff2c7d91a9ff3f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2737c5909faa91ef1b8e0cbf42158632c4ab597e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2737c5909faa91ef1b8e0cbf42158632c4ab597e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2737c5909faa91ef1b8e0cbf42158632c4ab597e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2737c5909faa91ef1b8e0cbf42158632c4ab597e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f4ef678b4e701f9a702c6558993bc17460609b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f4ef678b4e701f9a702c6558993bc17460609b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f4ef678b4e701f9a702c6558993bc17460609b6"}], "stats": {"total": 33, "additions": 5, "deletions": 28}, "files": [{"sha": "35e4f37caa654fc1ac4c4d839e95914058c9944e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2737c5909faa91ef1b8e0cbf42158632c4ab597e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2737c5909faa91ef1b8e0cbf42158632c4ab597e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2737c5909faa91ef1b8e0cbf42158632c4ab597e", "patch": "@@ -1,3 +1,8 @@\n+2019-07-18  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*addqi_2_slp): Remove.\n+\t(*<code>qi_2_slp): Ditto.\n+\n 2019-07-18  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/predicates.md (prefixed_mem_operand): Call"}, {"sha": "63f18d7874b3b4a8f0c12ca4af7416672e8bff62", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2737c5909faa91ef1b8e0cbf42158632c4ab597e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2737c5909faa91ef1b8e0cbf42158632c4ab597e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2737c5909faa91ef1b8e0cbf42158632c4ab597e", "patch": "@@ -8723,20 +8723,6 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*andqi_2_slp\"\n-  [(set (reg FLAGS_REG)\n-\t(compare (and:QI (match_operand:QI 0 \"nonimmediate_operand\" \"+qm,q\")\n-\t\t \t (match_operand:QI 1 \"nonimmediate_operand\" \"qn,m\"))\n-\t\t (const_int 0)))\n-   (set (strict_low_part (match_dup 0))\n-\t(and:QI (match_dup 0) (match_dup 1)))]\n-  \"(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))\n-   && ix86_match_ccmode (insn, CCNOmode)\n-   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"and{b}\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"alu1\")\n-   (set_attr \"mode\" \"QI\")])\n-\n (define_insn \"andqi_ext_1\"\n   [(set (zero_extract:SI (match_operand 0 \"ext_register_operand\" \"+Q,Q\")\n \t\t\t (const_int 8)\n@@ -9155,20 +9141,6 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"*<code>qi_2_slp\"\n-  [(set (reg FLAGS_REG)\n-\t(compare (any_or:QI (match_operand:QI 0 \"nonimmediate_operand\" \"+qm,q\")\n-\t\t\t    (match_operand:QI 1 \"general_operand\" \"qn,m\"))\n-\t\t (const_int 0)))\n-   (set (strict_low_part (match_dup 0))\n-\t(any_or:QI (match_dup 0) (match_dup 1)))]\n-  \"(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))\n-   && ix86_match_ccmode (insn, CCNOmode)\n-   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"<logic>{<imodesuffix>}\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"alu1\")\n-   (set_attr \"mode\" \"QI\")])\n-\n (define_insn \"*<code><mode>_3\"\n   [(set (reg FLAGS_REG)\n \t(compare (any_or:SWI"}]}