{"sha": "43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwMTQ2MzNiMGI5ZjBlM2QyNjQ2YjZjNGVjZDc1ZDM4MzBhMThiMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-02-02T11:27:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-02-02T11:27:50Z"}, "message": "* lib/target-supports.exp\n\t(check_effective_target_correct_iso_cpp_string_wchar_protos): New.\n\t* g++.dg/ext/builtin10.C: New test.\n\n\t* testsuite/21_strings/c_strings/char/3.cc: New test.\n\t* testsuite/21_strings/c_strings/wchar_t/3.cc: New test.\n\nFrom-SVN: r143865", "tree": {"sha": "30ad580d32e383e7cccf0f91151153cc29406ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30ad580d32e383e7cccf0f91151153cc29406ac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab05897240fb27993741138f137dd096d003058e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab05897240fb27993741138f137dd096d003058e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab05897240fb27993741138f137dd096d003058e"}], "stats": {"total": 158, "additions": 157, "deletions": 1}, "files": [{"sha": "c659971aa4a0f6f87c1a9f07bb9df1bdb1046802", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "patch": "@@ -1,3 +1,9 @@\n+2009-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_correct_iso_cpp_string_wchar_protos): New.\n+\t* g++.dg/ext/builtin10.C: New test.\n+\n 2009-02-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38937"}, {"sha": "8742223a493d4a523832d8bfb43c2cd1cdf5876a", "filename": "gcc/testsuite/g++.dg/ext/builtin10.C", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin10.C?ref=43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "patch": "@@ -0,0 +1,56 @@\n+// { dg-do compile { target correct_iso_cpp_string_wchar_protos } }\n+// { dg-options \"-O2 -fdump-tree-optimized\" }\n+\n+#include <cstring>\n+\n+const void *cv1;\n+const char *cc1, *cc2, *cc3, *cc4;\n+void *v1;\n+char *c1, *c2, *c3, *c4;\n+\n+void\n+f1 (void)\n+{\n+  cv1 = memchr (\"abcba\", 'b', 3);\n+  cc1 = strchr (\"abcba\", 'b');\n+  cc2 = strrchr (\"abcba\", 'b');\n+  cc3 = strpbrk (\"dabc\", \"abc\");\n+  cc4 = strstr (\"aaabc\", \"abc\");\n+}\n+\n+void\n+f2 (void)\n+{\n+  cv1 = std::memchr (\"abcba\", 'b', 3);\n+  cc1 = std::strchr (\"abcba\", 'b');\n+  cc2 = std::strrchr (\"abcba\", 'b');\n+  cc3 = std::strpbrk (\"dabc\", \"abc\");\n+  cc4 = std::strstr (\"aaabc\", \"abc\");\n+}\n+\n+void\n+f3 (void)\n+{\n+  v1 = memchr ((char *)\"abcba\", 'b', 3);\n+  c1 = strchr ((char *)\"abcba\", 'b');\n+  c2 = strrchr ((char *)\"abcba\", 'b');\n+  c3 = strpbrk ((char *)\"dabc\", \"abc\");\n+  c4 = strstr ((char *)\"aaabc\", \"abc\");\n+}\n+\n+void\n+f4 (void)\n+{\n+  v1 = std::memchr ((char *)\"abcba\", 'b', 3);\n+  c1 = std::strchr ((char *)\"abcba\", 'b');\n+  c2 = std::strrchr ((char *)\"abcba\", 'b');\n+  c3 = std::strpbrk ((char *)\"dabc\", \"abc\");\n+  c4 = std::strstr ((char *)\"aaabc\", \"abc\");\n+}\n+\n+// { dg-final { scan-tree-dump-not \"memchr\" \"optimized\" } }\n+// { dg-final { scan-tree-dump-not \"strchr\" \"optimized\" } }\n+// { dg-final { scan-tree-dump-not \"strrchr\" \"optimized\" } }\n+// { dg-final { scan-tree-dump-not \"strpbrk\" \"optimized\" } }\n+// { dg-final { scan-tree-dump-not \"strstr\" \"optimized\" } }\n+// { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "12dc6852255725eec32fbc81d811ada935e83d6f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 1999, 2001, 2003, 2004, 2005, 2006, 2007, 2008\n+#   Copyright (C) 1999, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n #    Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -2815,3 +2815,20 @@ proc check_effective_target_hard_dfp {} {\n \tvoid foo (void) { z = x + y; }\n     }]\n }\n+\n+# Return 1 if string.h and wchar.h headers provide C++ requires overloads\n+# for strchr etc. functions.\n+\n+proc check_effective_target_correct_iso_cpp_string_wchar_protos { } {\n+    return [check_no_compiler_messages correct_iso_cpp_string_wchar_protos assembly {\n+\t#include <string.h>\n+\t#include <wchar.h>\n+\t#if !defined(__cplusplus) \\\n+\t    || !defined(__CORRECT_ISO_CPP_STRING_H_PROTO) \\\n+\t    || !defined(__CORRECT_ISO_CPP_WCHAR_H_PROTO)\n+\tISO C++ correct string.h and wchar.h protos not supported.\n+\t#else\n+\tint i;\n+\t#endif\n+    }]\n+}"}, {"sha": "6839f557e32c717e3f8e565642b1d179372796ec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "patch": "@@ -1,3 +1,8 @@\n+2009-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/21_strings/c_strings/char/3.cc: New test.\n+\t* testsuite/21_strings/c_strings/wchar_t/3.cc: New test.\n+\n 2009-01-30  Ulrich Drepper  <drepper@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "5e5c514d776010da66a7f4caa58f6ee8866d76e2", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/char/3.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F3.cc?ref=43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do compile { target correct_iso_cpp_string_wchar_protos } }\n+// { dg-options \"-O2\" }\n+\n+#include <cstring>\n+\n+const char *cc1, *cc2;\n+char *c1, *c2;\n+const void *cv1, *cv2;\n+void *v1, *v2;\n+\n+void\n+test01 ()\n+{\n+  v1 = std::memchr (v2, '/', 3);\n+  c1 = std::strchr (c2, '/');\n+  c1 = std::strrchr (c2, 'c');\n+  c1 = std::strpbrk (c2, \"abc\");\n+  c1 = std::strstr (c2, \"abc\");\n+\n+  cv1 = std::memchr (v2, '/', 3);\n+  cc1 = std::strchr (c2, '/');\n+  cc1 = std::strrchr (c2, 'c');\n+  cc1 = std::strpbrk (c2, \"abc\");\n+  cc1 = std::strstr (c2, \"abc\");\n+\n+  v1 = std::memchr (cv2, '/', 3);\t// { dg-error \"invalid conversion\" }\n+  c1 = std::strchr (cc2, '/');\t\t// { dg-error \"invalid conversion\" }\n+  c1 = std::strrchr (cc2, 'c');\t\t// { dg-error \"invalid conversion\" }\n+  c1 = std::strpbrk (cc2, \"abc\");\t// { dg-error \"invalid conversion\" }\n+  c1 = std::strstr (cc2, \"abc\");\t// { dg-error \"invalid conversion\" }\n+\n+  cv1 = std::memchr (cv2, '/', 3);\n+  cc1 = std::strchr (cc2, '/');\n+  cc1 = std::strrchr (cc2, 'c');\n+  cc1 = std::strpbrk (cc2, \"abc\");\n+  cc1 = std::strstr (cc2, \"abc\");\n+}"}, {"sha": "47c653abbbdf54bf34e9a4e8c23d6fce534445a2", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/wchar_t/3.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43014633b0b9f0e3d2646b6c4ecd75d3830a18b2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F3.cc?ref=43014633b0b9f0e3d2646b6c4ecd75d3830a18b2", "patch": "@@ -0,0 +1,35 @@\n+// { dg-do compile { target correct_iso_cpp_string_wchar_protos } }\n+// { dg-options \"-O2\" }\n+\n+#include <cwchar>\n+\n+const wchar_t *cw1, *cw2;\n+wchar_t *w1, *w2;\n+\n+void\n+test01 ()\n+{\n+  w1 = wmemchr (w2, L'/', 3);\n+  w1 = wcschr (w2, L'/');\n+  w1 = wcspbrk (w2, L\"abc\");\n+  w1 = wcsrchr (w2, L'c');\n+  w1 = wcsstr (w2, L\"abc\");\n+\n+  cw1 = wmemchr (w2, L'/', 3);\n+  cw1 = wcschr (w2, L'/');\n+  cw1 = wcspbrk (w2, L\"abc\");\n+  cw1 = wcsrchr (w2, L'c');\n+  cw1 = wcsstr (w2, L\"abc\");\n+\n+  w1 = wmemchr (cw2, L'/', 3);\t\t// { dg-error \"invalid conversion\" }\n+  w1 = wcschr (cw2, L'/');\t\t// { dg-error \"invalid conversion\" }\n+  w1 = wcspbrk (cw2, L\"abc\");\t\t// { dg-error \"invalid conversion\" }\n+  w1 = wcsrchr (cw2, L'c');\t\t// { dg-error \"invalid conversion\" }\n+  w1 = wcsstr (cw2, L\"abc\");\t\t// { dg-error \"invalid conversion\" }\n+\n+  cw1 = wmemchr (cw2, L'/', 3);\n+  cw1 = wcschr (cw2, L'/');\n+  cw1 = wcspbrk (cw2, L\"abc\");\n+  cw1 = wcsrchr (cw2, L'c');\n+  cw1 = wcsstr (cw2, L\"abc\");\n+}"}]}