{"sha": "9fe2f33eb2083f4786d350e131131612067f0649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZlMmYzM2ViMjA4M2Y0Nzg2ZDM1MGUxMzExMzE2MTIwNjdmMDY0OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T14:57:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T14:57:12Z"}, "message": "[multiple changes]\n\n2009-11-30  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_prag.adb (Process_Convention): Change formal E to Ent. In the\n\tcase where the pragma's entity argument is a renaming, return the\n\tentity denoted by the renaming rather than the renamed entity. Loop\n\tthrough the homonyms of the original argument entity, rather than the\n\thomonyms of any renamed entity. Correct call to Generate_Entity to\n\tpass the homonym.\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* impunit.adb: Add packages that were added to the GNAT library:\n\tGNAT.SHA224, GNAT.SHA256, GNAT.SHA384 and GNAT.SHA512.\n\t* s-sechas.adb (Fill_Buffer_Copy): Fixes incorrect slice index\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch3.adb: Minor reformatting\n\t* g-md5.ads, g-sha1.ads: Add comment.\n\nFrom-SVN: r154815", "tree": {"sha": "fc216054c779f709a8d552e138cb70cecb931336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc216054c779f709a8d552e138cb70cecb931336"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fe2f33eb2083f4786d350e131131612067f0649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe2f33eb2083f4786d350e131131612067f0649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe2f33eb2083f4786d350e131131612067f0649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe2f33eb2083f4786d350e131131612067f0649/comments", "author": null, "committer": null, "parents": [{"sha": "fed1bd444da9836b5fa33d72ba5c938b451df44a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fed1bd444da9836b5fa33d72ba5c938b451df44a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fed1bd444da9836b5fa33d72ba5c938b451df44a"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "d15cb8b245c1655c9c50ca118dd508d4bab8c241", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -1,3 +1,23 @@\n+2009-11-30  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_prag.adb (Process_Convention): Change formal E to Ent. In the\n+\tcase where the pragma's entity argument is a renaming, return the\n+\tentity denoted by the renaming rather than the renamed entity. Loop\n+\tthrough the homonyms of the original argument entity, rather than the\n+\thomonyms of any renamed entity. Correct call to Generate_Entity to\n+\tpass the homonym.\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* impunit.adb: Add packages that were added to the GNAT library:\n+\tGNAT.SHA224, GNAT.SHA256, GNAT.SHA384 and GNAT.SHA512.\n+\t* s-sechas.adb (Fill_Buffer_Copy): Fixes incorrect slice index\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch3.adb: Minor reformatting\n+\t* g-md5.ads, g-sha1.ads: Add comment.\n+\n 2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Makefile.in: Remove handling of libgccprefix, no longer"}, {"sha": "f61a4a5b47bf2d26cf168339696ff3759863263b", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -8104,8 +8104,7 @@ package body Exp_Ch3 is\n       elsif Restriction_Active (No_Finalization) then\n          null;\n \n-      --  We skip these for CIL Value types, where finalization is not\n-      --  available\n+      --  Skip these for CIL Value types, where finalization is not available\n \n       elsif Is_Value_Type (Tag_Typ) then\n          null;"}, {"sha": "ec37642ba17038756afdd2216d89be5294f17233", "filename": "gcc/ada/g-md5.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fg-md5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fg-md5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-md5.ads?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -31,6 +31,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  Why is this package undocumented ???\n+\n with System.Secure_Hashes.MD5;\n package GNAT.MD5 is new System.Secure_Hashes.H\n   (Block_Words    => System.Secure_Hashes.MD5.Block_Words,"}, {"sha": "a7d8e4cbd68c7a55ebb44d5b5637fb2711de158a", "filename": "gcc/ada/g-sha1.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fg-sha1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fg-sha1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha1.ads?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -31,6 +31,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  Why no documentation ???\n+\n with System.Secure_Hashes.SHA1;\n package GNAT.SHA1 is new System.Secure_Hashes.H\n   (Block_Words    => System.Secure_Hashes.SHA1.Block_Words,"}, {"sha": "0f3ad5793ec5b743a351e1a84c9418e0c81e366d", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -263,6 +263,10 @@ package body Impunit is\n      \"g-sercom\",    -- GNAT.Serial_Communications\n      \"g-sestin\",    -- GNAT.Secondary_Stack_Info\n      \"g-sha1  \",    -- GNAT.SHA1\n+     \"g-sha224\",    -- GNAT.SHA224\n+     \"g-sha256\",    -- GNAT.SHA256\n+     \"g-sha384\",    -- GNAT.SHA384\n+     \"g-sha512\",    -- GNAT.SHA512\n      \"g-signal\",    -- GNAT.Signals\n      \"g-socket\",    -- GNAT.Sockets\n      \"g-souinf\",    -- GNAT.Source_Info"}, {"sha": "09036f3f3c0cafe82385b6a6efe12f0ad9392f23", "filename": "gcc/ada/s-sechas.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fs-sechas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fs-sechas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sechas.adb?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -85,7 +85,7 @@ package body System.Secure_Hashes is\n       pragma Assert (Length > 0);\n \n       Buf_String (M.Last + 1 .. M.Last + Length) :=\n-        S (First .. First + Length);\n+        S (First .. First + Length - 1);\n       M.Last := M.Last + Length;\n       Last := First + Length - 1;\n    end Fill_Buffer_Copy;"}, {"sha": "cccc198a569eb5dc219b0ddb1de6fa2932f1cedf", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2f33eb2083f4786d350e131131612067f0649/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9fe2f33eb2083f4786d350e131131612067f0649", "patch": "@@ -596,11 +596,12 @@ package body Sem_Prag is\n       procedure Process_Compile_Time_Warning_Or_Error;\n       --  Common processing for Compile_Time_Error and Compile_Time_Warning\n \n-      procedure Process_Convention (C : out Convention_Id; E : out Entity_Id);\n+      procedure Process_Convention\n+        (C : out Convention_Id; Ent : out Entity_Id);\n       --  Common processing for Convention, Interface, Import and Export.\n       --  Checks first two arguments of pragma, and sets the appropriate\n       --  convention value in the specified entity or entities. On return\n-      --  C is the convention, E is the referenced entity.\n+      --  C is the convention, Ent is the referenced entity.\n \n       procedure Process_Extended_Import_Export_Exception_Pragma\n         (Arg_Internal : Node_Id;\n@@ -2347,10 +2348,11 @@ package body Sem_Prag is\n       ------------------------\n \n       procedure Process_Convention\n-        (C : out Convention_Id;\n-         E : out Entity_Id)\n+        (C   : out Convention_Id;\n+         Ent : out Entity_Id)\n       is\n          Id        : Node_Id;\n+         E         : Entity_Id;\n          E1        : Entity_Id;\n          Cname     : Name_Id;\n          Comp_Unit : Unit_Number_Type;\n@@ -2482,6 +2484,10 @@ package body Sem_Prag is\n \n          E := Entity (Id);\n \n+         --  Set entity to return\n+\n+         Ent := E;\n+\n          --  Go to renamed subprogram if present, since convention applies to\n          --  the actual renamed entity, not to the renaming entity. If the\n          --  subprogram is inherited, go to parent subprogram.\n@@ -2504,6 +2510,10 @@ package body Sem_Prag is\n               and then Scope (E) = Scope (Alias (E))\n             then\n                E := Alias (E);\n+\n+               --  Return the parent subprogram the entity was inherited from\n+\n+               Ent := E;\n             end if;\n          end if;\n \n@@ -2617,7 +2627,9 @@ package body Sem_Prag is\n                Generate_Reference (E, Id, 'b');\n             end if;\n \n-            E1 := E;\n+            --  Loop through the homonyms of the pragma argument's entity\n+\n+            E1 := Ent;\n             loop\n                E1 := Homonym (E1);\n                exit when No (E1) or else Scope (E1) /= Current_Scope;\n@@ -2642,7 +2654,7 @@ package body Sem_Prag is\n                   Set_Convention_From_Pragma (E1);\n \n                   if Prag_Id = Pragma_Import then\n-                     Generate_Reference (E, Id, 'b');\n+                     Generate_Reference (E1, Id, 'b');\n                   end if;\n                end if;\n             end loop;\n@@ -3459,6 +3471,8 @@ package body Sem_Prag is\n                else\n                   Set_Imported (Def_Id);\n \n+                  --  Reject an Import applied to an abstract subprogram\n+\n                   if Is_Subprogram (Def_Id)\n                     and then Is_Abstract_Subprogram (Def_Id)\n                   then"}]}