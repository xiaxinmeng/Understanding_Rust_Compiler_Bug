{"sha": "b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "node_id": "C_kwDOANBUbNoAKGI4MTRmMGJkZjFjMWY2YmNiNjI4NTY3YzhlMGU5NWZkNjg0MjU2NTc", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-01-20T19:14:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-10T08:19:27Z"}, "message": "[Ada] Cleanup detection of No_Elist with No and Present\n\nReplace equality and inequality operators with calls to No and Present.\nOffending occurrences found with:\n\n$ grep -n \" /\\?= No_Elist\" *.adb\n\nCode cleanup only; semantics is unaffected.\n\ngcc/ada/\n\n\t* exp_ch11.adb, exp_ch5.adb, exp_prag.adb, gnat_cuda.adb,\n\tsem_ch12.adb, sem_ch3.adb, sem_ch6.adb, sem_util.adb,\n\ttreepr.adb: Replace /= and = operators with No and Present,\n\trespectively.", "tree": {"sha": "3de96eb379deac44e5bcc7d7167d0bebae55d791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3de96eb379deac44e5bcc7d7167d0bebae55d791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35f10dc04029e7125c322acbbd71dd30e3c8f54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f10dc04029e7125c322acbbd71dd30e3c8f54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f10dc04029e7125c322acbbd71dd30e3c8f54f"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "00b7745f7e1b14d3a652eff90da4fa98a927ddc5", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -813,7 +813,7 @@ package body Exp_Ch11 is\n                   --  case we have to generate possible diagnostics.\n \n                elsif Has_Local_Raise (Handler)\n-                 and then Local_Raise_Statements (Handler) /= No_Elist\n+                 and then Present (Local_Raise_Statements (Handler))\n                then\n                   Relmt := First_Elmt (Local_Raise_Statements (Handler));\n                   while Present (Relmt) loop\n@@ -1528,7 +1528,7 @@ package body Exp_Ch11 is\n             H := Find_Local_Handler (Entity (Name (N)), N);\n \n             if Present (H) then\n-               if Local_Raise_Statements (H) = No_Elist then\n+               if No (Local_Raise_Statements (H)) then\n                   Set_Local_Raise_Statements (H, New_Elmt_List);\n                end if;\n "}, {"sha": "ba575740a3ddfd098201cb800f6ded33e924a000", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -2101,7 +2101,7 @@ package body Exp_Ch5 is\n             --  from the Rhs by selected component because they are invisible\n             --  in the type of the right-hand side.\n \n-            if Stored_Constraint (R_Typ) /= No_Elist then\n+            if Present (Stored_Constraint (R_Typ)) then\n                declare\n                   Assign    : Node_Id;\n                   Discr_Val : Elmt_Id;"}, {"sha": "70b16c866d448bd700841a3b8a4f4723a87980b0", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -1054,7 +1054,7 @@ package body Exp_Prag is\n          Result : constant List_Id := New_List;\n          Elmt   : Elmt_Id;\n       begin\n-         if Elmts = No_Elist then\n+         if No (Elmts) then\n             return Result;\n          end if;\n "}, {"sha": "2a0a450d886fba49f7274db641d90bdc22ee07d5", "filename": "gcc/ada/gnat_cuda.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fgnat_cuda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fgnat_cuda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -149,7 +149,7 @@ package body GNAT_CUDA is\n    is\n       Device_Entities : Elist_Id := Get_CUDA_Device_Entities (Pack_Id);\n    begin\n-      if Device_Entities = No_Elist then\n+      if No (Device_Entities) then\n          Device_Entities := New_Elmt_List;\n          Set_CUDA_Device_Entities (Pack_Id, Device_Entities);\n       end if;\n@@ -166,7 +166,7 @@ package body GNAT_CUDA is\n    is\n       Kernels : Elist_Id := Get_CUDA_Kernels (Pack_Id);\n    begin\n-      if Kernels = No_Elist then\n+      if No (Kernels) then\n          Kernels := New_Elmt_List;\n          Set_CUDA_Kernels (Pack_Id, Kernels);\n       end if;\n@@ -687,7 +687,7 @@ package body GNAT_CUDA is\n    --  Start of processing for Build_And_Insert_CUDA_Initialization\n \n    begin\n-      if CUDA_Node_List = No_Elist then\n+      if No (CUDA_Node_List) then\n          return;\n       end if;\n \n@@ -745,7 +745,7 @@ package body GNAT_CUDA is\n    begin\n       pragma Assert (Debug_Flag_Underscore_C);\n \n-      if Device_Entities = No_Elist then\n+      if No (Device_Entities) then\n          return;\n       end if;\n \n@@ -789,7 +789,7 @@ package body GNAT_CUDA is\n       E       : Elist_Id)\n    is\n    begin\n-      pragma Assert (Get_CUDA_Device_Entities (Pack_Id) = No_Elist);\n+      pragma Assert (No (Get_CUDA_Device_Entities (Pack_Id)));\n       CUDA_Device_Entities_Table.Set (Pack_Id, E);\n    end Set_CUDA_Device_Entities;\n \n@@ -802,7 +802,7 @@ package body GNAT_CUDA is\n       Kernels : Elist_Id)\n    is\n    begin\n-      pragma Assert (Get_CUDA_Kernels (Pack_Id) = No_Elist);\n+      pragma Assert (No (Get_CUDA_Kernels (Pack_Id)));\n       CUDA_Kernels_Table.Set (Pack_Id, Kernels);\n    end Set_CUDA_Kernels;\n "}, {"sha": "fa36d0f8f0577b1dc857cac332d3b3911015e0ab", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -10224,7 +10224,7 @@ package body Sem_Ch12 is\n       Prim      : Node_Id;\n \n    begin\n-      if Prims_List /= No_Elist then\n+      if Present (Prims_List) then\n          Prim_Elmt := First_Elmt (Prims_List);\n          while Present (Prim_Elmt) loop\n             Prim := Node (Prim_Elmt);"}, {"sha": "2ab273b3acf460ed6f4fb632a8da8182110c2b01", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -5849,7 +5849,7 @@ package body Sem_Ch3 is\n          --  Inherit Subprograms_For_Type from the full view, if present\n \n          if Present (Full_View (T))\n-           and then Subprograms_For_Type (Full_View (T)) /= No_Elist\n+           and then Present (Subprograms_For_Type (Full_View (T)))\n          then\n             Set_Subprograms_For_Type\n               (Id, Subprograms_For_Type (Full_View (T)));"}, {"sha": "92e48fa413b852d31e45f7b0d99282a7bb082a43", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -5473,11 +5473,11 @@ package body Sem_Ch6 is\n       --  Restore the limited views in the spec, if any, to let the back end\n       --  process it without running into circularities.\n \n-      if Exch_Views /= No_Elist then\n+      if Present (Exch_Views) then\n          Restore_Limited_Views (Exch_Views);\n       end if;\n \n-      if Mask_Types /= No_Elist then\n+      if Present (Mask_Types) then\n          Unmask_Unfrozen_Types (Mask_Types);\n       end if;\n "}, {"sha": "1d915ab0f28db5a44056ef57e69680ee0ee79a18", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -3414,7 +3414,7 @@ package body Sem_Util is\n                   end if;\n \n                else\n-                  if Identifiers_List = No_Elist then\n+                  if No (Identifiers_List) then\n                      Identifiers_List := New_Elmt_List;\n                   end if;\n \n@@ -3438,7 +3438,7 @@ package body Sem_Util is\n             Elmt : Elmt_Id;\n \n          begin\n-            if List = No_Elist then\n+            if No (List) then\n                return False;\n             end if;\n \n@@ -3745,7 +3745,7 @@ package body Sem_Util is\n \n                            Collect_Identifiers (Comp_Expr);\n \n-                           if Writable_Actuals_List /= No_Elist then\n+                           if Present (Writable_Actuals_List) then\n \n                               --  As suggested by Robert, at current stage we\n                               --  report occurrences of this case as warnings.\n@@ -3908,7 +3908,7 @@ package body Sem_Util is\n       --  Check violation of RM 6.20/3 in aggregates\n \n       if Present (Aggr_Error_Node)\n-        and then Writable_Actuals_List /= No_Elist\n+        and then Present (Writable_Actuals_List)\n       then\n          Error_Msg_N\n            (\"value may be affected by call in other component because they \"\n@@ -3919,8 +3919,8 @@ package body Sem_Util is\n \n       --  Check if some writable argument of a function is referenced\n \n-      if Writable_Actuals_List /= No_Elist\n-        and then Identifiers_List /= No_Elist\n+      if Present (Writable_Actuals_List)\n+        and then Present (Identifiers_List)\n       then\n          declare\n             Elmt_1 : Elmt_Id;"}, {"sha": "2faf3f85656e914dc553b0a3487a2682dbd34853", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b814f0bdf1c1f6bcb628567c8e0e95fd68425657/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=b814f0bdf1c1f6bcb628567c8e0e95fd68425657", "patch": "@@ -539,7 +539,7 @@ package body Treepr is\n          return;\n       end if;\n \n-      if E = No_Elist then\n+      if No (E) then\n          Write_Str (\"<no elist>\");\n \n       elsif Is_Empty_Elmt_List (E) then"}]}