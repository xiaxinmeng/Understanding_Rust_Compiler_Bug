{"sha": "ef71fdd925864fd461bd18cd52218495b457b29b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3MWZkZDkyNTg2NGZkNDYxYmQxOGNkNTIyMTg0OTViNDU3YjI5Yg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-09-26T20:05:43Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-09-26T20:05:43Z"}, "message": "re PR fortran/50515 (gfortran should not accept an external that is a common (r178939))\n\n2011-09-26  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50515\n\t* resolve.c (resolve_common_blocks): Check for EXTERNAL attribute.\n\n\tPR fortran/50517\n\t* interface.c (gfc_compare_interfaces): Bugfix in check for result type.\n\n\n2011-09-26  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50515\n\t* gfortran.dg/common_15.f90: New.\n\n\tPR fortran/50517\n\t* gfortran.dg/dummy_procedure_5.f90: New.\n\t* gfortran.dg/interface_26.f90: Modified error message.\n\t* gfortran.dg/proc_ptr_11.f90: Ditto.\n\t* gfortran.dg/proc_ptr_15.f90: Ditto.\n\t* gfortran.dg/proc_ptr_comp_20.f90: Ditto.\n\t* gfortran.dg/proc_ptr_result_5.f90: Ditto.\n\nFrom-SVN: r179213", "tree": {"sha": "c49eb4d91d7d86c25d6475bbd94e4881237da025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c49eb4d91d7d86c25d6475bbd94e4881237da025"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef71fdd925864fd461bd18cd52218495b457b29b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef71fdd925864fd461bd18cd52218495b457b29b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef71fdd925864fd461bd18cd52218495b457b29b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef71fdd925864fd461bd18cd52218495b457b29b/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbaec9502645814d236f906eaacd72f34ef159e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbaec9502645814d236f906eaacd72f34ef159e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbaec9502645814d236f906eaacd72f34ef159e4"}], "stats": {"total": 92, "additions": 76, "deletions": 16}, "files": [{"sha": "5900b63f16252e54090f78d45b099afb5bc4520a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -1,3 +1,11 @@\n+2011-09-26  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50515\n+\t* resolve.c (resolve_common_blocks): Check for EXTERNAL attribute.\n+\n+\tPR fortran/50517\n+\t* interface.c (gfc_compare_interfaces): Bugfix in check for result type.\n+\n 2011-09-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/41733"}, {"sha": "f65087baff12ccd9f6cb20ccb5c65daa154165e3", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -1121,13 +1121,13 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, const char *name2,\n     {\n       if (s1->attr.function && s2->attr.function)\n \t{\n-\t  /* If both are functions, check type and kind.  */\n+\t  /* If both are functions, check result type.  */\n \t  if (s1->ts.type == BT_UNKNOWN)\n \t    return 1;\n-\t  if ((s1->ts.type != s2->ts.type) || (s1->ts.kind != s2->ts.kind))\n+\t  if (!compare_type_rank (s1,s2))\n \t    {\n \t      if (errmsg != NULL)\n-\t\tsnprintf (errmsg, err_len, \"Type/kind mismatch in return value \"\n+\t\tsnprintf (errmsg, err_len, \"Type/rank mismatch in return value \"\n \t\t\t  \"of '%s'\", name2);\n \t      return 0;\n \t    }"}, {"sha": "13ecf1c2bf6af7f5d0077e14f4e383c8da8bd241", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -905,6 +905,10 @@ resolve_common_blocks (gfc_symtree *common_root)\n     gfc_error (\"COMMON block '%s' at %L is used as PARAMETER at %L\",\n \t       sym->name, &common_root->n.common->where, &sym->declared_at);\n \n+  if (sym->attr.external)\n+    gfc_error (\"COMMON block '%s' at %L can not have the EXTERNAL attribute\",\n+\t       sym->name, &common_root->n.common->where);\n+\n   if (sym->attr.intrinsic)\n     gfc_error (\"COMMON block '%s' at %L is also an intrinsic procedure\",\n \t       sym->name, &common_root->n.common->where);"}, {"sha": "c973b423f30d25c8d1264f6abadfa1a83d37e55b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -1,3 +1,16 @@\n+2011-09-26  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50515\n+\t* gfortran.dg/common_15.f90: New.\n+\n+\tPR fortran/50517\n+\t* gfortran.dg/dummy_procedure_5.f90: New.\n+\t* gfortran.dg/interface_26.f90: Modified error message.\n+\t* gfortran.dg/proc_ptr_11.f90: Ditto.\n+\t* gfortran.dg/proc_ptr_15.f90: Ditto.\n+\t* gfortran.dg/proc_ptr_comp_20.f90: Ditto.\n+\t* gfortran.dg/proc_ptr_result_5.f90: Ditto.\n+\n 2011-09-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50512"}, {"sha": "20694fd143b91368188e91148ce673ca0c319d33", "filename": "gcc/testsuite/gfortran.dg/common_15.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_15.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+!\n+! PR 50515: gfortran should not accept an external that is a common (r178939)\n+!\n+! Contributed by Vittorio Zecca <zeccav@gmail.com>\n+\n+common/sub/ a  ! { dg-error \"can not have the EXTERNAL attribute\" }\n+external sub\n+end"}, {"sha": "0133cbf7d1f8dea315f28f2b90f3dbf755ea71ad", "filename": "gcc/testsuite/gfortran.dg/dummy_procedure_5.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_5.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! PR 50517: gfortran must detect that actual argument type is different from dummy argument type (r178939)\n+!\n+! Contributed by Vittorio Zecca <zeccav@gmail.com>\n+\n+program main\n+\n+  type t\n+    integer g\n+  end type\n+\n+  type u\n+    integer g\n+  end type\n+\n+  type(u), external :: ufunc\n+  call sub(ufunc)            ! { dg-error \"Type/rank mismatch in return value\" }\n+\n+contains\n+\n+  subroutine sub(tfunc)\n+    type(t), external :: tfunc\n+  end subroutine\n+\n+end program "}, {"sha": "54ede6d53eb3c699d686e2bc4bd30a81f33e0dcf", "filename": "gcc/testsuite/gfortran.dg/interface_26.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_26.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -37,7 +37,7 @@ END FUNCTION UserFunction\n     END INTERFACE\n     INTEGER, EXTERNAL :: UserOp \n \n-    res = UserFunction( a,b, UserOp ) ! { dg-error \"Type/kind mismatch in return value\" }\n+    res = UserFunction( a,b, UserOp ) ! { dg-error \"Type/rank mismatch in return value\" }\n \n     if( res .lt. 10 ) then\n        res = recSum( a, res, UserFunction, UserOp ) "}, {"sha": "d1c7b4869df6aaf90e37fa7d98175aa36a5dc3a8", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_11.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_11.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -40,11 +40,11 @@ end function p3\n   p2 => p1\n   p1 => p2\n \n-  p1 => abs   ! { dg-error \"Type/kind mismatch in return value\" }\n-  p2 => abs   ! { dg-error \"Type/kind mismatch in return value\" }\n+  p1 => abs   ! { dg-error \"Type/rank mismatch in return value\" }\n+  p2 => abs   ! { dg-error \"Type/rank mismatch in return value\" }\n \n   p3 => dsin\n-  p3 => sin   ! { dg-error \"Type/kind mismatch in return value\" }\n+  p3 => sin   ! { dg-error \"Type/rank mismatch in return value\" }\n \n   contains\n "}, {"sha": "f5a748660e5a7ced13848daac7fd42f408a3c17f", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_15.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_15.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -19,10 +19,10 @@\n p6 => p1\n \n ! invalid\n-p1 => iabs   ! { dg-error \"Type/kind mismatch in return value\" }\n-p1 => p2     ! { dg-error \"Type/kind mismatch in return value\" }\n-p1 => p5     ! { dg-error \"Type/kind mismatch in return value\" }\n-p6 => iabs   ! { dg-error \"Type/kind mismatch in return value\" }\n+p1 => iabs   ! { dg-error \"Type/rank mismatch in return value\" }\n+p1 => p2     ! { dg-error \"Type/rank mismatch in return value\" }\n+p1 => p5     ! { dg-error \"Type/rank mismatch in return value\" }\n+p6 => iabs   ! { dg-error \"Type/rank mismatch in return value\" }\n p4 => p2     ! { dg-error \"is not a subroutine\" }\n \n contains"}, {"sha": "e38e6545370d369616688772332a902c65e350dd", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_20.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_20.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -27,11 +27,11 @@\n procedure(logical),pointer :: pp1\n procedure(complex),pointer :: pp2\n \n-pp1 => pp2        ! { dg-error \"Type/kind mismatch\" }\n-pp2 => o2%ppc     ! { dg-error \"Type/kind mismatch\" }\n+pp1 => pp2        ! { dg-error \"Type/rank mismatch\" }\n+pp2 => o2%ppc     ! { dg-error \"Type/rank mismatch\" }\n \n-o1%ppc => pp1     ! { dg-error \"Type/kind mismatch\" }\n-o1%ppc => o2%ppc  ! { dg-error \"Type/kind mismatch\" }\n+o1%ppc => pp1     ! { dg-error \"Type/rank mismatch\" }\n+o1%ppc => o2%ppc  ! { dg-error \"Type/rank mismatch\" }\n \n contains\n "}, {"sha": "de03523367517ee0ff765608fffd41284c8f2e61", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_result_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef71fdd925864fd461bd18cd52218495b457b29b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_5.f90?ref=ef71fdd925864fd461bd18cd52218495b457b29b", "patch": "@@ -6,7 +6,7 @@\n \n program test\n   procedure(real), pointer :: p\n-  p => f()  ! { dg-error \"Type/kind mismatch in return value\" }\n+  p => f()  ! { dg-error \"Type/rank mismatch in return value\" }\n contains\n  function f()\n    pointer :: f"}]}