{"sha": "45863ba3631b41587cc34ea3f7621bf191f4eb9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4NjNiYTM2MzFiNDE1ODdjYzM0ZWEzZjc2MjFiZjE5MWY0ZWI5Zg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-05-28T20:18:23Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-05-28T20:18:23Z"}, "message": "gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...\n\n2004-05-28  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING\n        when checking for _POSIX_THREAD_PRIORITY_SCHEDULING.\n        Remove comment about not checking for\n        _POSIX_PRIORITY_SCHEDULING.\n        * gthr-posix.c: Likewise.\n\nFrom-SVN: r82376", "tree": {"sha": "5ddb619763dd5ccc65476b1eed3ee14d276d762c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ddb619763dd5ccc65476b1eed3ee14d276d762c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45863ba3631b41587cc34ea3f7621bf191f4eb9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45863ba3631b41587cc34ea3f7621bf191f4eb9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45863ba3631b41587cc34ea3f7621bf191f4eb9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45863ba3631b41587cc34ea3f7621bf191f4eb9f/comments", "author": null, "committer": null, "parents": [{"sha": "0c1a1ecd8062d98df568b076d71868cb022ccc50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1a1ecd8062d98df568b076d71868cb022ccc50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1a1ecd8062d98df568b076d71868cb022ccc50"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "b1a2e3145699864ddf6f67d60fa046f8f6cd64e3", "filename": "gcc/gthr-posix.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45863ba3631b41587cc34ea3f7621bf191f4eb9f/gcc%2Fgthr-posix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45863ba3631b41587cc34ea3f7621bf191f4eb9f/gcc%2Fgthr-posix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.c?ref=45863ba3631b41587cc34ea3f7621bf191f4eb9f", "patch": "@@ -147,7 +147,7 @@ pthread_self (void)\n {\n   return (pthread_t) 0;\n }\n-\n+#ifdef _POSIX_PRIORITY_SCHEDULING\n #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n int\n sched_get_priority_max (int policy ATTRIBUTE_UNUSED)\n@@ -161,6 +161,7 @@ sched_get_priority_min (int policy ATTRIBUTE_UNUSED)\n   return 0;\n }\n #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */\n+#endif /* _POSIX_PRIORITY_SCHEDULING */\n \n int\n sched_yield (void)"}, {"sha": "e2b5a5739990ccc6cb2fc1569088b87702170230", "filename": "gcc/gthr-posix.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45863ba3631b41587cc34ea3f7621bf191f4eb9f/gcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45863ba3631b41587cc34ea3f7621bf191f4eb9f/gcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.h?ref=45863ba3631b41587cc34ea3f7621bf191f4eb9f", "patch": "@@ -74,12 +74,12 @@ typedef pthread_mutex_t __gthread_mutex_t;\n #pragma weak pthread_mutex_init\n #pragma weak pthread_mutex_destroy\n #pragma weak pthread_self\n-/* These really should be protected by _POSIX_PRIORITY_SCHEDULING, but\n-   we use them inside a _POSIX_THREAD_PRIORITY_SCHEDULING block.  */\n+#ifdef _POSIX_PRIORITY_SCHEDULING\n #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n #pragma weak sched_get_priority_max\n #pragma weak sched_get_priority_min\n #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */\n+#endif /* _POSIX_PRIORITY_SCHEDULING */\n #pragma weak sched_yield\n #pragma weak pthread_attr_destroy\n #pragma weak pthread_attr_init\n@@ -187,6 +187,7 @@ __gthread_objc_thread_set_priority (int priority)\n     return -1;\n   else\n     {\n+#ifdef _POSIX_PRIORITY_SCHEDULING\n #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n       pthread_t thread_id = pthread_self ();\n       int policy;\n@@ -216,6 +217,7 @@ __gthread_objc_thread_set_priority (int priority)\n \t    return 0;\n \t}\n #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */\n+#endif /* _POSIX_PRIORITY_SCHEDULING */\n       return -1;\n     }\n }\n@@ -224,6 +226,7 @@ __gthread_objc_thread_set_priority (int priority)\n static inline int\n __gthread_objc_thread_get_priority (void)\n {\n+#ifdef _POSIX_PRIORITY_SCHEDULING\n #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n   if (__gthread_active_p ())\n     {\n@@ -237,6 +240,7 @@ __gthread_objc_thread_get_priority (void)\n     }\n   else\n #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */\n+#endif /* _POSIX_PRIORITY_SCHEDULING */\n     return OBJC_THREAD_INTERACTIVE_PRIORITY;\n }\n "}]}