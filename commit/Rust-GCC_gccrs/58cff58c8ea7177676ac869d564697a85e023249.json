{"sha": "58cff58c8ea7177676ac869d564697a85e023249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThjZmY1OGM4ZWE3MTc3Njc2YWM4NjlkNTY0Njk3YTg1ZTAyMzI0OQ==", "commit": {"author": {"name": "Naveen H.S", "email": "Naveen.Hurugalawadi@caviumnetworks.com", "date": "2013-04-25T12:21:13Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2013-04-25T12:21:13Z"}, "message": "gcc/\n\n2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* config/aarch64/aarch64.md \n\t(*cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>): New pattern.\n\ngcc/testsuite/\n\n2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* gcc.target/aarch64/cmp.c: New.\n\nFrom-SVN: r198303", "tree": {"sha": "5c6f85cd8be4f63db1803d9fc345dd6a93cae780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c6f85cd8be4f63db1803d9fc345dd6a93cae780"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58cff58c8ea7177676ac869d564697a85e023249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cff58c8ea7177676ac869d564697a85e023249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cff58c8ea7177676ac869d564697a85e023249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cff58c8ea7177676ac869d564697a85e023249/comments", "author": null, "committer": null, "parents": [{"sha": "7e0228bf2ace9c1738da0c8128b100196e873809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e0228bf2ace9c1738da0c8128b100196e873809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e0228bf2ace9c1738da0c8128b100196e873809"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "085124cea61c55852349f7404dc6d1af84de0099", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cff58c8ea7177676ac869d564697a85e023249/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cff58c8ea7177676ac869d564697a85e023249/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58cff58c8ea7177676ac869d564697a85e023249", "patch": "@@ -1,3 +1,8 @@\n+2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* config/aarch64/aarch64.md \n+\t(*cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>): New pattern.\n+\n 2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* config/aarch64/aarch64.md (*ngc<mode>): New pattern."}, {"sha": "2d83054f7a408c634df9a7ca64984bf7f105a467", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cff58c8ea7177676ac869d564697a85e023249/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cff58c8ea7177676ac869d564697a85e023249/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=58cff58c8ea7177676ac869d564697a85e023249", "patch": "@@ -2339,6 +2339,18 @@\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n+(define_insn \"*cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>\"\n+  [(set (reg:CC_SWP CC_REGNUM)\n+\t(compare:CC_SWP (ashift:GPI\n+\t\t\t (ANY_EXTEND:GPI\n+\t\t\t  (match_operand:ALLX 0 \"register_operand\" \"r\"))\n+\t\t\t (match_operand:QI 1 \"aarch64_shift_imm_<mode>\" \"n\"))\n+\t(match_operand:GPI 2 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"cmp\\\\t%<GPI:w>2, %<GPI:w>0, <su>xt<ALLX:size> %1\"\n+  [(set_attr \"v8type\" \"alus_ext\")\n+   (set_attr \"mode\" \"<GPI:MODE>\")]\n+)\n \n ;; -------------------------------------------------------------------\n ;; Store-flag and conditional select insns"}, {"sha": "3de1dff99fded6fae3ade70973603556bbed1c5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cff58c8ea7177676ac869d564697a85e023249/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cff58c8ea7177676ac869d564697a85e023249/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58cff58c8ea7177676ac869d564697a85e023249", "patch": "@@ -1,3 +1,7 @@\n+2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* gcc.target/aarch64/cmp.c: New.\n+\n 2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* gcc.target/aarch64/ngc.c: New."}, {"sha": "ee57dd283bf36e1ded718aa16a75f3a5efec234b", "filename": "gcc/testsuite/gcc.target/aarch64/cmp.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cff58c8ea7177676ac869d564697a85e023249/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cff58c8ea7177676ac869d564697a85e023249/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp.c?ref=58cff58c8ea7177676ac869d564697a85e023249", "patch": "@@ -0,0 +1,61 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+cmp_si_test1 (int a, int b, int c)\n+{\n+  if (a > b)\n+    return a + c;\n+  else\n+    return a + b + c;\n+}\n+\n+int\n+cmp_si_test2 (int a, int b, int c)\n+{\n+  if ((a >> 3) > b)\n+    return a + c;\n+  else\n+    return a + b + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+cmp_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  if (a > b)\n+    return a + c;\n+  else\n+    return a + b + c;\n+}\n+\n+s64\n+cmp_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  if ((a >> 3) > b)\n+    return a + c;\n+  else\n+    return a + b + c;\n+}\n+\n+int\n+cmp_di_test3 (int a, s64 b, s64 c)\n+{\n+  if (a > b)\n+    return a + c;\n+  else\n+    return a + b + c;\n+}\n+\n+int\n+cmp_di_test4 (int a, s64 b, s64 c)\n+{\n+  if (((s64)a << 3) > b)\n+    return a + c;\n+  else\n+    return a + b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"cmp\\tw\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler-times \"cmp\\tx\\[0-9\\]+, x\\[0-9\\]+\" 4 } } */"}]}