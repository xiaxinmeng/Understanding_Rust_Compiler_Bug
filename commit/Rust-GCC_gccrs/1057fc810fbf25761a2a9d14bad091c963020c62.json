{"sha": "1057fc810fbf25761a2a9d14bad091c963020c62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA1N2ZjODEwZmJmMjU3NjFhMmE5ZDE0YmFkMDkxYzk2MzAyMGM2Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-08-20T18:46:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-08-20T18:46:54Z"}, "message": "re PR middle-end/28779 (internal compiler error: in cgraph_estimate_size_after_inlining, at ipa-inline.c:106)\n\n\tPR middle-end/28779\n\t* ipa-inline.c (cgraph_decide_inlining, cgraph_early_inlining): Compute\n\tfunction body sizes.\n\t* cgraphunit.c (cgraph_analyze_function): Don't do so.\n\nFrom-SVN: r116274", "tree": {"sha": "5f6853458a71f7068d93f5fe6eb654628397fa00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f6853458a71f7068d93f5fe6eb654628397fa00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1057fc810fbf25761a2a9d14bad091c963020c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1057fc810fbf25761a2a9d14bad091c963020c62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1057fc810fbf25761a2a9d14bad091c963020c62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1057fc810fbf25761a2a9d14bad091c963020c62/comments", "author": null, "committer": null, "parents": [{"sha": "96ddac7425dd56d6852f0ad53bf2283d9976aae8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ddac7425dd56d6852f0ad53bf2283d9976aae8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96ddac7425dd56d6852f0ad53bf2283d9976aae8"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "3ab3aa0e9628e17e2698fdcbaac88e8674ccc883", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1057fc810fbf25761a2a9d14bad091c963020c62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1057fc810fbf25761a2a9d14bad091c963020c62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1057fc810fbf25761a2a9d14bad091c963020c62", "patch": "@@ -1,4 +1,11 @@\n-006-08-20  Danny Smith  <dannysmith@users.sourceforge.net>\n+2006-08-20  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/28779\n+\t* ipa-inline.c (cgraph_decide_inlining, cgraph_early_inlining): Compute\n+\tfunction body sizes.\n+\t* cgraphunit.c (cgraph_analyze_function): Don't do so.\n+\n+2006-08-20  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/28648 c:\n \t* tree.c (handle_dll_attribute): Return early if not a"}, {"sha": "00351d257796853a0d644e469350229dc28f5e10", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1057fc810fbf25761a2a9d14bad091c963020c62/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1057fc810fbf25761a2a9d14bad091c963020c62/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=1057fc810fbf25761a2a9d14bad091c963020c62", "patch": "@@ -928,7 +928,8 @@ cgraph_analyze_function (struct cgraph_node *node)\n   cgraph_create_edges (node, decl);\n \n   node->local.inlinable = tree_inlinable_function_p (decl);\n-  node->local.self_insns = estimate_num_insns (decl);\n+  if (!flag_unit_at_a_time)\n+    node->local.self_insns = estimate_num_insns (decl);\n   if (node->local.inlinable)\n     node->local.disregard_inline_limits\n       = lang_hooks.tree_inlining.disregard_inline_limits (decl);"}, {"sha": "cc83d366a567dc94baefc26a8ccc7d5c04a972c6", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1057fc810fbf25761a2a9d14bad091c963020c62/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1057fc810fbf25761a2a9d14bad091c963020c62/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=1057fc810fbf25761a2a9d14bad091c963020c62", "patch": "@@ -899,13 +899,23 @@ cgraph_decide_inlining (void)\n   timevar_push (TV_INLINE_HEURISTICS);\n   max_count = 0;\n   for (node = cgraph_nodes; node; node = node->next)\n-    {\n-      struct cgraph_edge *e;\n-      initial_insns += node->local.self_insns;\n-      for (e = node->callees; e; e = e->next_callee)\n-\tif (max_count < e->count)\n-\t  max_count = e->count;\n-    }\n+    if (node->analyzed && (node->needed || node->reachable))\n+      {\n+\tstruct cgraph_edge *e;\n+\n+\t/* At the moment, no IPA passes change function bodies before inlining.\n+\t   Save some time by not recomputing function body sizes if early inlining\n+\t   already did so.  */\n+\tif (!flag_early_inlining)\n+\t  node->local.self_insns = node->global.insns\n+\t     = estimate_num_insns (node->decl);\n+\n+\tinitial_insns += node->local.self_insns;\n+\tgcc_assert (node->local.self_insns == node->global.insns);\n+\tfor (e = node->callees; e; e = e->next_callee)\n+\t  if (max_count < e->count)\n+\t    max_count = e->count;\n+      }\n   overall_insns = initial_insns;\n   gcc_assert (!max_count || (profile_info && flag_branch_probabilities));\n \n@@ -1177,6 +1187,13 @@ cgraph_early_inlining (void)\n \n   order = ggc_alloc (sizeof (*order) * cgraph_n_nodes);\n   nnodes = cgraph_postorder (order);\n+  for (i = nnodes - 1; i >= 0; i--)\n+    {\n+      node = order[i];\n+      if (node->analyzed && (node->needed || node->reachable))\n+        node->local.self_insns = node->global.insns\n+\t  = estimate_num_insns (node->decl);\n+    }\n   for (i = nnodes - 1; i >= 0; i--)\n     {\n       node = order[i];"}]}