{"sha": "1e12ab9b731406758cce12e897b7aa8cbc854e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxMmFiOWI3MzE0MDY3NThjY2UxMmU4OTdiN2FhOGNiYzg1NGU3OA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-07-27T11:13:51Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-07-27T11:13:51Z"}, "message": "[multiple changes]\n\n2000-07-25  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * parse.y (jdep_resolve_class): Don't bother checking potential\n        innerclass access if `decl' is NULL.\n        (find_in_imports_on_demand): TREE_PURPOSE of `import' contains the\n        WFL.\n\n2000-07-24  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * parse.y (find_as_inner_class): Removed 2000-07-19 patches.\n        * jcf-parse.c (HANDLE_INNERCLASSES_ATTRIBUTE): Local `decl' moved\n        outside the `if' statement, alias to innerclass removed, `decl'\n        used to mark the class complete.\n\nFrom-SVN: r35287", "tree": {"sha": "678d65d867747419c99f55f70ac58873882c5de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/678d65d867747419c99f55f70ac58873882c5de3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e12ab9b731406758cce12e897b7aa8cbc854e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e12ab9b731406758cce12e897b7aa8cbc854e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e12ab9b731406758cce12e897b7aa8cbc854e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e12ab9b731406758cce12e897b7aa8cbc854e78/comments", "author": null, "committer": null, "parents": [{"sha": "b8e42be70d61c89e216a15e5711a9adafdada5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e42be70d61c89e216a15e5711a9adafdada5d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8e42be70d61c89e216a15e5711a9adafdada5d9"}], "stats": {"total": 47, "additions": 22, "deletions": 25}, "files": [{"sha": "4193b383bcbcd10f5aa829c12bf0e01f277b2c9d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e12ab9b731406758cce12e897b7aa8cbc854e78/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e12ab9b731406758cce12e897b7aa8cbc854e78/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1e12ab9b731406758cce12e897b7aa8cbc854e78", "patch": "@@ -1,7 +1,21 @@\n+2000-07-25  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (jdep_resolve_class): Don't bother checking potential\n+\tinnerclass access if `decl' is NULL.\n+\t(find_in_imports_on_demand): TREE_PURPOSE of `import' contains the\n+\tWFL.\n+\n 2000-07-25  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.c: Remove (again.)\n \n+2000-07-24  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (find_as_inner_class): Removed 2000-07-19 patches.\n+\t* jcf-parse.c (HANDLE_INNERCLASSES_ATTRIBUTE): Local `decl' moved\n+\toutside the `if' statement, alias to innerclass removed, `decl'\n+\tused to mark the class complete.\n+\n 2000-07-21  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (simple_name:): Fixed typo in error message."}, {"sha": "78bf52139e37dc163024520ad6a63a29e291bbd5", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e12ab9b731406758cce12e897b7aa8cbc854e78/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e12ab9b731406758cce12e897b7aa8cbc854e78/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=1e12ab9b731406758cce12e897b7aa8cbc854e78", "patch": "@@ -192,19 +192,18 @@ set_source_filename (jcf, index)\n   int c = (count);\t\t\t\t\t\t\t  \\\n   while (c--)\t\t\t\t\t\t\t\t  \\\n     {\t\t\t\t\t\t\t\t\t  \\\n-      tree class = get_class_constant (jcf, JCF_readu2 (jcf));\t    \t  \\\n-      if (DECL_P (class) && !CLASS_COMPLETE_P (class))\t\t\t  \\\n+      tree class = get_class_constant (jcf, JCF_readu2 (jcf));\t   \t  \\\n+      tree decl = TYPE_NAME (class);\t\t\t\t\t  \\\n+      if (DECL_P (decl) && !CLASS_COMPLETE_P (decl))\t\t\t  \\\n \t{\t\t\t\t\t\t\t\t  \\\n \t  tree outer = TYPE_NAME (get_class_constant (jcf, \t\t  \\\n \t\t\t\t\t\t      JCF_readu2 (jcf))); \\\n \t  tree alias = get_name_constant (jcf, JCF_readu2 (jcf));\t  \\\n-\t  tree decl = TYPE_NAME (class);\t\t\t\t  \\\n \t  JCF_SKIP (jcf, 2);\t\t\t\t\t     \t  \\\n-\t  IDENTIFIER_GLOBAL_VALUE (alias) = decl;\t     \t\t  \\\n \t  DECL_CONTEXT (decl) = outer;\t\t\t\t\t  \\\n \t  DECL_INNER_CLASS_LIST (outer) = \t\t\t\t  \\\n \t    tree_cons (decl, alias, DECL_INNER_CLASS_LIST (outer));\t  \\\n-\t  CLASS_COMPLETE_P (class) = 1;\t\t\t\t\t  \\\n+\t  CLASS_COMPLETE_P (decl) = 1;\t\t\t\t\t  \\\n \t}\t\t\t\t\t\t\t\t  \\\n       else\t\t\t\t\t\t\t\t  \\\n \tJCF_SKIP (jcf, 6);\t\t\t\t\t\t  \\"}, {"sha": "f2dac8847653b16ebe9620cc7bba2a5c84168cd8", "filename": "gcc/java/parse.y", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e12ab9b731406758cce12e897b7aa8cbc854e78/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e12ab9b731406758cce12e897b7aa8cbc854e78/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=1e12ab9b731406758cce12e897b7aa8cbc854e78", "patch": "@@ -642,11 +642,6 @@ name:\n \n simple_name:\n \tidentifier\t\t/* Default rule */\n-\t{\n-\t  if (strchr (IDENTIFIER_POINTER (EXPR_WFL_NODE ($$)), '$'))\n-\t    parse_error_context ($$, \"Invalid type name `%s'\",\n-\t\t\t\t IDENTIFIER_POINTER (EXPR_WFL_NODE ($$)));\n-\t}\n ;\n \n qualified_name:\n@@ -3497,18 +3492,7 @@ find_as_inner_class (enclosing, name, cl)\n   else\n     qual = build_tree_list (build_expr_wfl (name, NULL, 0, 0), NULL_TREE);\n \n-  if (!(to_return = find_as_inner_class_do (qual, enclosing)))\n-    {\n-      /* It might be the case that the enclosing class was loaded as\n-\t bytecode, in which case it will be missing the\n-\t DECL_INNER_CLASS_LIST. We build a fully qualified internal\n-\t innerclass name and we try to load it. */\n-      tree fqin = identifier_subst (name, \"\", '.', '$', \"\");\n-      tree ptr;\n-      BUILD_PTR_FROM_NAME (ptr, fqin);\n-      to_return = resolve_class (NULL_TREE, ptr, NULL_TREE, cl);\n-    }\n-  return to_return;\n+  return find_as_inner_class_do (qual, enclosing);\n }\n \n /* We go inside the list of sub classes and try to find a way\n@@ -5214,8 +5198,7 @@ jdep_resolve_class (dep)\n     \n   if (!decl)\n     complete_class_report_errors (dep);\n-\n-  if (PURE_INNER_CLASS_DECL_P (decl))\n+  else if (PURE_INNER_CLASS_DECL_P (decl))\n     check_inner_class_access (decl, JDEP_ENCLOSING (dep), JDEP_WFL (dep));\n   return decl;\n }\n@@ -6630,7 +6613,8 @@ find_in_imports_on_demand (class_type)\n \t    {\n \t      seen_once++;\n \t      parse_error_context \n-\t\t(import, \"Type `%s' also potentially defined in package `%s'\",\n+\t\t(TREE_PURPOSE (import), \n+\t\t \"Type `%s' also potentially defined in package `%s'\",\n \t\t IDENTIFIER_POINTER (TYPE_NAME (class_type)),\n \t\t IDENTIFIER_POINTER (EXPR_WFL_NODE (TREE_PURPOSE (import))));\n \t    }"}]}