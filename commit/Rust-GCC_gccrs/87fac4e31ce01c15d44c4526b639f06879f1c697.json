{"sha": "87fac4e31ce01c15d44c4526b639f06879f1c697", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmYWM0ZTMxY2UwMWMxNWQ0NGM0NTI2YjYzOWYwNjg3OWYxYzY5Nw==", "commit": {"author": {"name": "Bernard Giroud", "email": "bgiroud2@free.fr", "date": "2004-05-05T07:31:05Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-05-05T07:31:05Z"}, "message": "Patch from Bernard Giroud.\n\n* gcc/gcc/vmsdbgout.c (vms_func_node, vms_func_ref): New.\n(func_table): Change type from char ** to vms_func_ref.\n(write_rtnbeg):  Update to reflect func_table change.  Use\nfde->funcdef_number instead of rtnnum in output.\n(write_rtnend, vmxdbgout_begin_function, vmsdbgout_init): Likewise.\n\nFrom-SVN: r81505", "tree": {"sha": "9cbac15969c0747a0fcde1ccc425a45997fd373b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cbac15969c0747a0fcde1ccc425a45997fd373b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87fac4e31ce01c15d44c4526b639f06879f1c697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fac4e31ce01c15d44c4526b639f06879f1c697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fac4e31ce01c15d44c4526b639f06879f1c697", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fac4e31ce01c15d44c4526b639f06879f1c697/comments", "author": null, "committer": null, "parents": [{"sha": "cc27e657d36005a8b1672f2ee60a5ad779a0d804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc27e657d36005a8b1672f2ee60a5ad779a0d804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc27e657d36005a8b1672f2ee60a5ad779a0d804"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "7063898f6cd70651e84281dfda8038bdfbbdc09b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fac4e31ce01c15d44c4526b639f06879f1c697/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fac4e31ce01c15d44c4526b639f06879f1c697/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87fac4e31ce01c15d44c4526b639f06879f1c697", "patch": "@@ -1,3 +1,11 @@\n+2004-05-04  Bernard Giroud  <bgiroud2@free.fr>\n+\n+\t* gcc/gcc/vmsdbgout.c (vms_func_node, vms_func_ref): New.\n+\t(func_table): Change type from char ** to vms_func_ref.\n+\t(write_rtnbeg):  Update to reflect func_table change.  Use\n+\tfde->funcdef_number instead of rtnnum in output.\n+\t(write_rtnend, vmxdbgout_begin_function, vmsdbgout_init): Likewise.\n+\n 2004-05-04  Paolo Bonzini  <bonzini@gnu.org>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "e32564946b713159c23e2f9166a7c559f4e0d309", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fac4e31ce01c15d44c4526b639f06879f1c697/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fac4e31ce01c15d44c4526b639f06879f1c697/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=87fac4e31ce01c15d44c4526b639f06879f1c697", "patch": "@@ -2,6 +2,7 @@\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n    Contributed by Douglas B. Rupp (rupp@gnat.com).\n+   Updated by Bernard W. Giroud (bgiroud@users.sourceforge.net).\n \n This file is part of GCC.\n \n@@ -102,11 +103,26 @@ static unsigned int file_info_table_in_use;\n    table.  */\n #define FILE_TABLE_INCREMENT 64\n \n-static char **func_table;\n+/* A structure to hold basic information for the VMS end\n+   routine.  */\n+\n+typedef struct vms_func_struct\n+{\n+  const char *vms_func_name;\n+  unsigned funcdef_number;\n+}\n+vms_func_node;\n+\n+typedef struct vms_func_struct *vms_func_ref;\n+\n static unsigned int func_table_allocated;\n static unsigned int func_table_in_use;\n #define FUNC_TABLE_INCREMENT 256\n \n+/* A pointer to the base of a table that contains frame description\n+   information for each routine.  */\n+static vms_func_ref func_table;\n+\n /* Local pointer to the name of the main input file.  Initialized in\n    avmdbgout_init.  */\n static const char *primary_filename;\n@@ -778,8 +794,9 @@ write_rtnbeg (int rtnnum, int dosizeonly)\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n   DST_ROUTINE_BEGIN rtnbeg;\n   DST_PROLOG prolog;\n+  vms_func_ref fde = &func_table[rtnnum];\n \n-  rtnname = func_table[rtnnum];\n+  rtnname = (char *)fde->vms_func_name;\n   rtnnamelen = strlen (rtnname);\n   rtnentryname = concat (rtnname, \"..en\", NULL);\n \n@@ -850,7 +867,7 @@ write_rtnbeg (int rtnnum, int dosizeonly)\n       totsize += write_debug_header (&prolog.dst_a_prolog_header, \"prolog\",\n \t\t\t\t     dosizeonly);\n \n-      ASM_GENERATE_INTERNAL_LABEL (label, FUNC_PROLOG_LABEL, rtnnum);\n+      ASM_GENERATE_INTERNAL_LABEL (label, FUNC_PROLOG_LABEL, fde->funcdef_number);\n       totsize += write_debug_addr (label, \"prolog breakpoint addr\",\n \t\t\t\t   dosizeonly);\n     }\n@@ -868,6 +885,8 @@ write_rtnend (int rtnnum, int dosizeonly)\n   char label1[MAX_ARTIFICIAL_LABEL_BYTES];\n   char label2[MAX_ARTIFICIAL_LABEL_BYTES];\n   int totsize;\n+  vms_func_ref fde = &func_table[rtnnum];\n+  int corrected_rtnnum = fde->funcdef_number;\n \n   totsize = 0;\n \n@@ -882,8 +901,8 @@ write_rtnend (int rtnnum, int dosizeonly)\n   totsize += write_debug_data1 (rtnend.dst_b_rtnend_unused, \"unused\",\n \t\t\t\tdosizeonly);\n \n-  ASM_GENERATE_INTERNAL_LABEL (label1, FUNC_BEGIN_LABEL, rtnnum);\n-  ASM_GENERATE_INTERNAL_LABEL (label2, FUNC_END_LABEL, rtnnum);\n+  ASM_GENERATE_INTERNAL_LABEL (label1, FUNC_BEGIN_LABEL, corrected_rtnnum);\n+  ASM_GENERATE_INTERNAL_LABEL (label2, FUNC_END_LABEL, corrected_rtnnum);\n   totsize += write_debug_delta4 (label2, label1, \"routine size\", dosizeonly);\n \n   return totsize;\n@@ -1358,19 +1377,24 @@ static void\n vmsdbgout_begin_function (tree decl)\n {\n   const char *name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n+  vms_func_ref fde;\n \n   if (write_symbols == VMS_AND_DWARF2_DEBUG)\n     (*dwarf2_debug_hooks.begin_function) (decl);\n \n   if (func_table_in_use == func_table_allocated)\n     {\n       func_table_allocated += FUNC_TABLE_INCREMENT;\n-      func_table = xrealloc (func_table,\n-\t\t\t     func_table_allocated * sizeof (char *));\n+      func_table\n+        = (vms_func_ref) xrealloc (func_table,\n+\t\t\t\t   func_table_allocated * sizeof (vms_func_node));\n     }\n \n   /* Add the new entry to the end of the function name table.  */\n-  func_table[func_table_in_use++] = xstrdup (name);\n+  fde = &func_table[func_table_in_use++];\n+  fde->vms_func_name = xstrdup (name);\n+  fde->funcdef_number = current_function_funcdef_no;\n+\n }\n \n static char fullname_buff [4096];\n@@ -1581,7 +1605,7 @@ vmsdbgout_init (const char *main_input_filename)\n   /* Skip the first entry - file numbers begin at 1 */\n   file_info_table_in_use = 1;\n \n-  func_table = xcalloc (FUNC_TABLE_INCREMENT, sizeof (char *));\n+  func_table = (vms_func_ref) xcalloc (FUNC_TABLE_INCREMENT, sizeof (vms_func_node));\n   func_table_allocated = FUNC_TABLE_INCREMENT;\n   func_table_in_use = 1;\n "}]}