{"sha": "9a1a473756a215d445473ffa9cd74d6bce177480", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWExYTQ3Mzc1NmEyMTVkNDQ1NDczZmZhOWNkNzRkNmJjZTE3NzQ4MA==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-08-10T16:31:40Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-08-10T16:31:40Z"}, "message": "final.c (final_scan_insn): Clear current_insn_predicate before outputting inline asm.\n\n2006-08-10  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* final.c (final_scan_insn): Clear current_insn_predicate before\n\toutputting inline asm.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/cond-asm.c: New test.\n\nFrom-SVN: r116064", "tree": {"sha": "39201ad1ce41700f59f0cee9ec14ce27d5607dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39201ad1ce41700f59f0cee9ec14ce27d5607dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a1a473756a215d445473ffa9cd74d6bce177480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1a473756a215d445473ffa9cd74d6bce177480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a1a473756a215d445473ffa9cd74d6bce177480", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1a473756a215d445473ffa9cd74d6bce177480/comments", "author": null, "committer": null, "parents": [{"sha": "4a93bc5db26653be6292c343c079f7f640743e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a93bc5db26653be6292c343c079f7f640743e1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a93bc5db26653be6292c343c079f7f640743e1c"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "5d6f9d5255a4a5c49a9294acf022f2c75a00f7e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a1a473756a215d445473ffa9cd74d6bce177480", "patch": "@@ -1,3 +1,8 @@\n+2006-08-10  Paul Brook  <paul@codesourcery.com>\n+\n+\t* final.c (final_scan_insn): Clear current_insn_predicate before\n+\toutputting inline asm.\n+\n 2006-08-10  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/26197"}, {"sha": "80b3913cbf40e339820cda42e50ea73fee2181e1", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=9a1a473756a215d445473ffa9cd74d6bce177480", "patch": "@@ -1953,6 +1953,10 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \tint insn_code_number;\n \tconst char *template;\n \n+#ifdef HAVE_conditional_execution\n+\t/* Reset this early so it is correct for ASM statements.  */\n+\tcurrent_insn_predicate = NULL_RTX;\n+#endif\n \t/* An INSN, JUMP_INSN or CALL_INSN.\n \t   First check for special kinds that recog doesn't recognize.  */\n \n@@ -2388,8 +2392,6 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n #ifdef HAVE_conditional_execution\n \tif (GET_CODE (PATTERN (insn)) == COND_EXEC)\n \t  current_insn_predicate = COND_EXEC_TEST (PATTERN (insn));\n-\telse\n-\t  current_insn_predicate = NULL_RTX;\n #endif\n \n #ifdef HAVE_cc0"}, {"sha": "f08c34c63efc5f2deb9a2a89995cfdd77f23bb88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a1a473756a215d445473ffa9cd74d6bce177480", "patch": "@@ -1,19 +1,24 @@\n+2006-08-10  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gcc.target/arm/cond-asm.c: New test.\n+\n 2006-08-10  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/26197\n \t* g++.dg/vect/param-max-aliased-pr26197.cc: New test.\n-\t* g++.dg/vect/vect.exp: Compile the new testxs with --param max-aliased-vops=0.\n+\t* g++.dg/vect/vect.exp: Compile the new tests with\n+\t--param max-aliased-vops=0.\n \n 2006-08-09  Lee Millward  <lee.millward@codesourcery.com>\n \n-       PR c++/28637\n-       * g++.dg/template/void3.C: New test.\n+\tPR c++/28637\n+\t* g++.dg/template/void3.C: New test.\n \n-       PR c++/28638\n-       * g++.dg/template/void4.C: New test.\n+\tPR c++/28638\n+\t* g++.dg/template/void4.C: New test.\n \n-`       PR c++/28640\n-       * g++.dg/template/void5.C: New test.\n+\tPR c++/28640\n+\t* g++.dg/template/void5.C: New test.\n \t\n 2006-08-07  Danny Smith  <dannysmith@users.sourceforge.net>\n \n@@ -23,9 +28,9 @@\n 2006-08-07  Victor Kaplansky <victork@il.ibm.com>\n \n \tPR tree-optimizations/26969\n-        * gcc.dg/vect/vect.exp: Compile tests prefixed with\n+\t* gcc.dg/vect/vect.exp: Compile tests prefixed with\n \t\"unswitch-loops\" with -funswitch-loops.\n-        * gcc.dg/vect/unswitch-loops-pr26969.c: New test.\n+\t* gcc.dg/vect/unswitch-loops-pr26969.c: New test.\n \n 2006-08-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n "}, {"sha": "450bd9d6a82f5b7b64f64ff77fb06b698d6bc85a", "filename": "gcc/testsuite/gcc.target/arm/cond-asm.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcond-asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1a473756a215d445473ffa9cd74d6bce177480/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcond-asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcond-asm.c?ref=9a1a473756a215d445473ffa9cd74d6bce177480", "patch": "@@ -0,0 +1,13 @@\n+/* Check that %? in inline asm expands to nothing.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target arm32 } */\n+int b;\n+int foo(int a)\n+{\n+  if (a)\n+    b = 42;\n+  asm (\"test%?me\":\"=r\"(a):\"0\"(a));\n+  return a;\n+}\n+/* { dg-final { scan-assembler \"testme\" } } */"}]}