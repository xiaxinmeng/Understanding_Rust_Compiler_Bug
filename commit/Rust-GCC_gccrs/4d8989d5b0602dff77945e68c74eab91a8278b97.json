{"sha": "4d8989d5b0602dff77945e68c74eab91a8278b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4OTg5ZDViMDYwMmRmZjc3OTQ1ZTY4Yzc0ZWFiOTFhODI3OGI5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-23T13:40:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-23T13:40:50Z"}, "message": "re PR tree-optimization/70251 (Wrong code with -O3 -march=skylake-avx512.)\n\n2016-03-23  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/70251\n\t* match.pd (A + (B vcmp C ? 1 : 0) -> A - (B vcmp C)): Adjust\n\tmode compatibility check.\n\t(A - (B vcmp C ? 1 : 0) -> A + (B vcmp C)): Likewise.\n\nFrom-SVN: r234427", "tree": {"sha": "b909fcf2712c32864e2d5dca85882d259ceccd3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b909fcf2712c32864e2d5dca85882d259ceccd3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d8989d5b0602dff77945e68c74eab91a8278b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8989d5b0602dff77945e68c74eab91a8278b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8989d5b0602dff77945e68c74eab91a8278b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8989d5b0602dff77945e68c74eab91a8278b97/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "478baf913e79d1d3219b513b494943c830850593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/478baf913e79d1d3219b513b494943c830850593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/478baf913e79d1d3219b513b494943c830850593"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "6538ff096f8cac16870b2e423e63968cfd3b36bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d8989d5b0602dff77945e68c74eab91a8278b97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d8989d5b0602dff77945e68c74eab91a8278b97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d8989d5b0602dff77945e68c74eab91a8278b97", "patch": "@@ -1,3 +1,10 @@\n+2016-03-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/70251\n+\t* match.pd (A + (B vcmp C ? 1 : 0) -> A - (B vcmp C)): Adjust\n+\tmode compatibility check.\n+\t(A - (B vcmp C ? 1 : 0) -> A + (B vcmp C)): Likewise.\n+\n 2016-03-23  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/64058"}, {"sha": "c0ed305ed0e8df43f5401816abdb8a19ed6add10", "filename": "gcc/match.pd", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d8989d5b0602dff77945e68c74eab91a8278b97/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d8989d5b0602dff77945e68c74eab91a8278b97/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=4d8989d5b0602dff77945e68c74eab91a8278b97", "patch": "@@ -1759,18 +1759,18 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n  (plus:c @3 (view_convert? (vec_cond:s @0 integer_each_onep@1 integer_zerop@2)))\n  (if (VECTOR_TYPE_P (type)\n-      && TYPE_VECTOR_SUBPARTS (type) == TYPE_VECTOR_SUBPARTS (TREE_TYPE (@0))\n+      && TYPE_VECTOR_SUBPARTS (type) == TYPE_VECTOR_SUBPARTS (TREE_TYPE (@1))\n       && (TYPE_MODE (TREE_TYPE (type))\n-          == TYPE_MODE (TREE_TYPE (TREE_TYPE (@0)))))\n+          == TYPE_MODE (TREE_TYPE (TREE_TYPE (@1)))))\n   (minus @3 (view_convert (vec_cond @0 (negate @1) @2)))))\n \n /* ... likewise A - (B vcmp C ? 1 : 0) -> A + (B vcmp C ? -1 : 0).  */\n (simplify\n  (minus @3 (view_convert? (vec_cond:s @0 integer_each_onep@1 integer_zerop@2)))\n  (if (VECTOR_TYPE_P (type)\n-      && TYPE_VECTOR_SUBPARTS (type) == TYPE_VECTOR_SUBPARTS (TREE_TYPE (@0))\n+      && TYPE_VECTOR_SUBPARTS (type) == TYPE_VECTOR_SUBPARTS (TREE_TYPE (@1))\n       && (TYPE_MODE (TREE_TYPE (type))\n-          == TYPE_MODE (TREE_TYPE (TREE_TYPE (@0)))))\n+          == TYPE_MODE (TREE_TYPE (TREE_TYPE (@1)))))\n   (plus @3 (view_convert (vec_cond @0 (negate @1) @2)))))\n \n "}]}