{"sha": "333d8f61a21edd364b966ab8aa70e232ccdc4810", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzZDhmNjFhMjFlZGQzNjRiOTY2YWI4YWE3MGUyMzJjY2RjNDgxMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-06T08:39:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-06T08:39:51Z"}, "message": "mmx.md: Remove double backslashes from asm templates.\n\n\t* config/i386/mmx.md: Remove double backslashes from asm templates.\n\t(*addv2sf3): Rename from mmx_addv2sf3 insn pattern.\n\t(mmx_addv2sf3): New expander.  Use ix86_fixup_binary_operands_no_copy\n\tto handle nonimmediate operands.\n\t(*mulv2sf3): Rename from mmx_mulv2sf3 insn pattern.\n\t(mmx_mulv2sf3): New expander.  Use ix86_fixup_binary_operands_no_copy\n\tto handle nonimmediate operands.\n\t(*<code>v2sf3_finite): New insn pattern.\n\t(*<code>v2sf3): Rename from mmx_<code>v2sf3 insn pattern.\n\t(mmx_<code>v2sf3): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\t(mmx_<plusminus_insn><mode>3): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\t(*<plusminus_insn><mode>3): New insn pattern.\n\t(mmx_add<mode>3): Removed.\n\t(mmx_ssadd<mode>3): Ditto.\n\t(mmx_usadd<mode>3): Ditto.\n\t(mmx_sub<mode>3): Ditto.\n\t(mmx_sssub<mode>3): Ditto.\n\t(mmx_ussub<mode>3): Ditto.\n\t(*mulv4hi3): Rename from mmx_mulv4hi3 insn pattern.\n\t(mmx_mulv4hi3): New expander.  Use ix86_fixup_binary_operands_no_copy\n\tto handle nonimmediate operands.\n\t(*smulv4hi3_highpart): Rename from mmx_smulv4hi3_highpart\n\tinsn pattern.\n\t(mmx_smulv4hi3_highpart): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\t(*umulv4hi3_highpart): Rename from mmx_umulv4hi3_highpart\n\tinsn pattern.\n\t(mmx_umulv4hi3_highpart): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\t(*<code>v4hi3): Rename from mmx_<code>v4hi3 insn pattern.\n\t(mmx_<code>v4hi3): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\t(*<code>v8qi3): Rename from mmx_<code>v8qi3 insn pattern.\n\t(mmx_<code>v8qi3): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\t(*<code><mode>3): Rename from mmx_<code><mode>3 insn pattern.\n\t(mmx_<code><mode>3): New expander.  Use\n\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n\nFrom-SVN: r134976", "tree": {"sha": "d33cda152c74ac93f5325c2f2b1f38a9750ad184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d33cda152c74ac93f5325c2f2b1f38a9750ad184"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/333d8f61a21edd364b966ab8aa70e232ccdc4810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333d8f61a21edd364b966ab8aa70e232ccdc4810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333d8f61a21edd364b966ab8aa70e232ccdc4810", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333d8f61a21edd364b966ab8aa70e232ccdc4810/comments", "author": null, "committer": null, "parents": [{"sha": "3716f2332cfeaddc5fb8998a7045bb56b0af9dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3716f2332cfeaddc5fb8998a7045bb56b0af9dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3716f2332cfeaddc5fb8998a7045bb56b0af9dc6"}], "stats": {"total": 316, "additions": 218, "deletions": 98}, "files": [{"sha": "930772c9d854991aa34640f388dcceaf9fa1daec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333d8f61a21edd364b966ab8aa70e232ccdc4810/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333d8f61a21edd364b966ab8aa70e232ccdc4810/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=333d8f61a21edd364b966ab8aa70e232ccdc4810", "patch": "@@ -1,3 +1,46 @@\n+2008-05-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md: Remove double backslashes from asm templates.\n+\t(*addv2sf3): Rename from mmx_addv2sf3 insn pattern.\n+\t(mmx_addv2sf3): New expander.  Use ix86_fixup_binary_operands_no_copy\n+\tto handle nonimmediate operands.\n+\t(*mulv2sf3): Rename from mmx_mulv2sf3 insn pattern.\n+\t(mmx_mulv2sf3): New expander.  Use ix86_fixup_binary_operands_no_copy\n+\tto handle nonimmediate operands.\n+\t(*<code>v2sf3_finite): New insn pattern.\n+\t(*<code>v2sf3): Rename from mmx_<code>v2sf3 insn pattern.\n+\t(mmx_<code>v2sf3): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\t(mmx_<plusminus_insn><mode>3): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\t(*<plusminus_insn><mode>3): New insn pattern.\n+\t(mmx_add<mode>3): Removed.\n+\t(mmx_ssadd<mode>3): Ditto.\n+\t(mmx_usadd<mode>3): Ditto.\n+\t(mmx_sub<mode>3): Ditto.\n+\t(mmx_sssub<mode>3): Ditto.\n+\t(mmx_ussub<mode>3): Ditto.\n+\t(*mulv4hi3): Rename from mmx_mulv4hi3 insn pattern.\n+\t(mmx_mulv4hi3): New expander.  Use ix86_fixup_binary_operands_no_copy\n+\tto handle nonimmediate operands.\n+\t(*smulv4hi3_highpart): Rename from mmx_smulv4hi3_highpart\n+\tinsn pattern.\n+\t(mmx_smulv4hi3_highpart): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\t(*umulv4hi3_highpart): Rename from mmx_umulv4hi3_highpart\n+\tinsn pattern.\n+\t(mmx_umulv4hi3_highpart): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\t(*<code>v4hi3): Rename from mmx_<code>v4hi3 insn pattern.\n+\t(mmx_<code>v4hi3): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\t(*<code>v8qi3): Rename from mmx_<code>v8qi3 insn pattern.\n+\t(mmx_<code>v8qi3): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\t(*<code><mode>3): Rename from mmx_<code><mode>3 insn pattern.\n+\t(mmx_<code><mode>3): New expander.  Use\n+\tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n+\n 2008-05-05  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/36118\n@@ -6,8 +49,8 @@\n 2008-05-05  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR middle-end/36141\n-\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Don't create VCE\n-\tfor function decls.\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Don't create\n+\tVCE for function decls.\n \n 2008-05-05  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -55,9 +98,9 @@\n \tGeneralize UNUSED macro. \n \t(__gthread_once): Add.\n \t(__gthread_key_create): Add.\n-\t(__gthread_key_delete): Add.    \n+\t(__gthread_key_delete): Add.\n \t(__gthread_getspecific): Add.\n-\t(__gthread_setspecific): Add.      \n+\t(__gthread_setspecific): Add.\n \t\n 2008-05-05  Andrew Pinski  <Andrew.Pinski@playstation.sony.com>\n "}, {"sha": "32cec069bca45c03d50572b9211afa742cc6ef26", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 171, "deletions": 94, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333d8f61a21edd364b966ab8aa70e232ccdc4810/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333d8f61a21edd364b966ab8aa70e232ccdc4810/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=333d8f61a21edd364b966ab8aa70e232ccdc4810", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for MMX and 3dNOW! instructions\n-;; Copyright (C) 2005, 2007\n+;; Copyright (C) 2005, 2007, 2008\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -212,12 +212,20 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"mmx_addv2sf3\"\n+(define_expand \"mmx_addv2sf3\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"\")\n+\t(plus:V2SF\n+\t  (match_operand:V2SF 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_3DNOW\"\n+  \"ix86_fixup_binary_operands_no_copy (PLUS, V2SFmode, operands);\")\n+\n+(define_insn \"*addv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(plus:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW && ix86_binary_operator_ok (PLUS, V2SFmode, operands)\"\n-  \"pfadd\\\\t{%2, %0|%0, %2}\"\n+  \"pfadd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -227,8 +235,8 @@\n \t\t    (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym,0\")))]\n   \"TARGET_3DNOW && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n-   pfsub\\\\t{%2, %0|%0, %2}\n-   pfsubr\\\\t{%2, %0|%0, %2}\"\n+   pfsub\\t{%2, %0|%0, %2}\n+   pfsubr\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -239,22 +247,56 @@\n   \"TARGET_3DNOW && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"\")\n \n-(define_insn \"mmx_mulv2sf3\"\n+(define_expand \"mmx_mulv2sf3\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"\")\n+\t(mult:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:V2SF 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_3DNOW\"\n+  \"ix86_fixup_binary_operands_no_copy (MULT, V2SFmode, operands);\")\n+\n+(define_insn \"*mulv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(mult:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW && ix86_binary_operator_ok (MULT, V2SFmode, operands)\"\n-  \"pfmul\\\\t{%2, %0|%0, %2}\"\n+  \"pfmul\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"V2SF\")])\n \n-(define_insn \"mmx_<code>v2sf3\"\n+;; ??? For !flag_finite_math_only, the representation with SMIN/SMAX\n+;; isn't really correct, as those rtl operators aren't defined when\n+;; applied to NaNs.  Hopefully the optimizers won't get too smart on us.\n+\n+(define_expand \"mmx_<code>v2sf3\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"\")\n+        (smaxmin:V2SF\n+\t  (match_operand:V2SF 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_3DNOW\"\n+{\n+  if (!flag_finite_math_only)\n+    operands[1] = force_reg (V2SFmode, operands[1]);\n+  ix86_fixup_binary_operands_no_copy (<CODE>, V2SFmode, operands);\n+})\n+\n+(define_insn \"*<code>v2sf3_finite\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n         (smaxmin:V2SF\n \t  (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_3DNOW && ix86_binary_operator_ok (SMAX, V2SFmode, operands)\"\n-  \"pf<maxminfprefix>\\\\t{%2, %0|%0, %2}\"\n+  \"TARGET_3DNOW && flag_finite_math_only\n+   && ix86_binary_operator_ok (<CODE>, V2SFmode, operands)\"\n+  \"pf<maxminfprefix>\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"mmxadd\")\n+   (set_attr \"mode\" \"V2SF\")])\n+\n+(define_insn \"*<code>v2sf3\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n+        (smaxmin:V2SF\n+\t  (match_operand:V2SF 1 \"register_operand\" \"0\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n+  \"TARGET_3DNOW\"\n+  \"pf<maxminfprefix>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -263,7 +305,7 @@\n         (unspec:V2SF [(match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")]\n \t\t     UNSPEC_PFRCP))]\n   \"TARGET_3DNOW\"\n-  \"pfrcp\\\\t{%1, %0|%0, %1}\"\n+  \"pfrcp\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -273,7 +315,7 @@\n \t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")]\n \t\t     UNSPEC_PFRCPIT1))]\n   \"TARGET_3DNOW\"\n-  \"pfrcpit1\\\\t{%2, %0|%0, %2}\"\n+  \"pfrcpit1\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -283,7 +325,7 @@\n \t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")]\n \t\t     UNSPEC_PFRCPIT2))]\n   \"TARGET_3DNOW\"\n-  \"pfrcpit2\\\\t{%2, %0|%0, %2}\"\n+  \"pfrcpit2\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -292,7 +334,7 @@\n \t(unspec:V2SF [(match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")]\n \t\t     UNSPEC_PFRSQRT))]\n   \"TARGET_3DNOW\"\n-  \"pfrsqrt\\\\t{%1, %0|%0, %1}\"\n+  \"pfrsqrt\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -302,7 +344,7 @@\n \t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")]\n \t\t     UNSPEC_PFRSQIT1))]\n   \"TARGET_3DNOW\"\n-  \"pfrsqit1\\\\t{%2, %0|%0, %2}\"\n+  \"pfrsqit1\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -320,7 +362,7 @@\n \t      (parallel [(const_int  0)]))\n \t    (vec_select:SF (match_dup 2) (parallel [(const_int 1)])))))]\n   \"TARGET_3DNOW\"\n-  \"pfacc\\\\t{%2, %0|%0, %2}\"\n+  \"pfacc\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -338,7 +380,7 @@\n \t      (parallel [(const_int  0)]))\n \t    (vec_select:SF (match_dup 2) (parallel [(const_int 1)])))))]\n   \"TARGET_3DNOW_A\"\n-  \"pfnacc\\\\t{%2, %0|%0, %2}\"\n+  \"pfnacc\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -351,7 +393,7 @@\n           (minus:V2SF (match_dup 1) (match_dup 2))\n           (const_int 1)))]\n   \"TARGET_3DNOW_A\"\n-  \"pfpnacc\\\\t{%2, %0|%0, %2}\"\n+  \"pfpnacc\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -366,7 +408,7 @@\n \t(gt:V2SI (match_operand:V2SF 1 \"register_operand\" \"0\")\n \t\t (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW\"\n-  \"pfcmpgt\\\\t{%2, %0|%0, %2}\"\n+  \"pfcmpgt\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxcmp\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -375,7 +417,7 @@\n \t(ge:V2SI (match_operand:V2SF 1 \"register_operand\" \"0\")\n \t\t (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW\"\n-  \"pfcmpge\\\\t{%2, %0|%0, %2}\"\n+  \"pfcmpge\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxcmp\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -384,7 +426,7 @@\n \t(eq:V2SI (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW && ix86_binary_operator_ok (EQ, V2SFmode, operands)\"\n-  \"pfcmpeq\\\\t{%2, %0|%0, %2}\"\n+  \"pfcmpeq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxcmp\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -398,7 +440,7 @@\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n \t(fix:V2SI (match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW\"\n-  \"pf2id\\\\t{%1, %0|%0, %1}\"\n+  \"pf2id\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -409,7 +451,7 @@\n \t    (fix:V2SI\n \t      (match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")))))]\n   \"TARGET_3DNOW_A\"\n-  \"pf2iw\\\\t{%1, %0|%0, %1}\"\n+  \"pf2iw\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -420,15 +462,15 @@\n \t    (truncate:V2HI\n \t      (match_operand:V2SI 1 \"nonimmediate_operand\" \"ym\")))))]\n   \"TARGET_3DNOW_A\"\n-  \"pi2fw\\\\t{%1, %0|%0, %1}\"\n+  \"pi2fw\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"mode\" \"V2SF\")])\n \n (define_insn \"mmx_floatv2si2\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(float:V2SF (match_operand:V2SI 1 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW\"\n-  \"pi2fd\\\\t{%1, %0|%0, %1}\"\n+  \"pi2fd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -443,7 +485,7 @@\n \t(vec_select:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")\n \t\t\t (parallel [(const_int 1) (const_int 0)])))]\n   \"TARGET_3DNOW_A\"\n-  \"pswapd\\\\t{%1, %0|%0, %1}\"\n+  \"pswapd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -550,68 +592,51 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"mmx_add<mode>3\"\n+(define_expand \"mmx_<plusminus_insn><mode>3\"\n+  [(set (match_operand:MMXMODEI8 0 \"register_operand\" \"\")\n+\t(plusminus:MMXMODEI8\n+\t  (match_operand:MMXMODEI8 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:MMXMODEI8 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_MMX || (TARGET_SSE2 && <MODE>mode == V1DImode)\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+\n+(define_insn \"*<plusminus_insn><mode>3\"\n   [(set (match_operand:MMXMODEI8 0 \"register_operand\" \"=y\")\n-        (plus:MMXMODEI8\n-\t  (match_operand:MMXMODEI8 1 \"nonimmediate_operand\" \"%0\")\n+        (plusminus:MMXMODEI8\n+\t  (match_operand:MMXMODEI8 1 \"nonimmediate_operand\" \"<comm>0\")\n \t  (match_operand:MMXMODEI8 2 \"nonimmediate_operand\" \"ym\")))]\n   \"(TARGET_MMX || (TARGET_SSE2 && <MODE>mode == V1DImode))\n-   && ix86_binary_operator_ok (PLUS, <MODE>mode, operands)\"\n-  \"padd<mmxvecsize>\\t{%2, %0|%0, %2}\"\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_ssadd<mode>3\"\n-  [(set (match_operand:MMXMODE12 0 \"register_operand\" \"=y\")\n-        (ss_plus:MMXMODE12\n-\t  (match_operand:MMXMODE12 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:MMXMODE12 2 \"nonimmediate_operand\" \"ym\")))]\n+(define_expand \"mmx_<plusminus_insn><mode>3\"\n+  [(set (match_operand:MMXMODE12 0 \"register_operand\" \"\")\n+\t(sat_plusminus:MMXMODE12\n+\t  (match_operand:MMXMODE12 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:MMXMODE12 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_MMX\"\n-  \"padds<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"mmx_usadd<mode>3\"\n-  [(set (match_operand:MMXMODE12 0 \"register_operand\" \"=y\")\n-        (us_plus:MMXMODE12\n-\t  (match_operand:MMXMODE12 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:MMXMODE12 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX\"\n-  \"paddus<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"mmx_sub<mode>3\"\n-  [(set (match_operand:MMXMODEI8 0 \"register_operand\" \"=y\")\n-        (minus:MMXMODEI8\n-\t  (match_operand:MMXMODEI8 1 \"register_operand\" \"0\")\n-\t  (match_operand:MMXMODEI8 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"(TARGET_MMX || (TARGET_SSE2 && <MODE>mode == V1DImode))\"\n-  \"psub<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"mmx_sssub<mode>3\"\n+(define_insn \"*<plusminus_insn><mode>3\"\n   [(set (match_operand:MMXMODE12 0 \"register_operand\" \"=y\")\n-        (ss_minus:MMXMODE12\n-\t  (match_operand:MMXMODE12 1 \"register_operand\" \"0\")\n+        (sat_plusminus:MMXMODE12\n+\t  (match_operand:MMXMODE12 1 \"nonimmediate_operand\" \"<comm>0\")\n \t  (match_operand:MMXMODE12 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX\"\n-  \"psubs<mmxvecsize>\\t{%2, %0|%0, %2}\"\n+  \"TARGET_MMX && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_ussub<mode>3\"\n-  [(set (match_operand:MMXMODE12 0 \"register_operand\" \"=y\")\n-        (us_minus:MMXMODE12\n-\t  (match_operand:MMXMODE12 1 \"register_operand\" \"0\")\n-\t  (match_operand:MMXMODE12 2 \"nonimmediate_operand\" \"ym\")))]\n+(define_expand \"mmx_mulv4hi3\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"\")\n+        (mult:V4HI (match_operand:V4HI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:V4HI 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_MMX\"\n-  \"psubus<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n+  \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n \n-(define_insn \"mmx_mulv4hi3\"\n+(define_insn \"*mulv4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n         (mult:V4HI (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n@@ -620,28 +645,56 @@\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_smulv4hi3_highpart\"\n+(define_expand \"mmx_smulv4hi3_highpart\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"\")\n+\t(truncate:V4HI\n+\t  (lshiftrt:V4SI\n+\t    (mult:V4SI\n+\t      (sign_extend:V4SI\n+\t\t(match_operand:V4HI 1 \"nonimmediate_operand\" \"\"))\n+\t      (sign_extend:V4SI\n+\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"\")))\n+\t    (const_int 16))))]\n+  \"TARGET_MMX\"\n+  \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n+\n+(define_insn \"*smulv4hi3_highpart\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n \t(truncate:V4HI\n-\t (lshiftrt:V4SI\n-\t  (mult:V4SI (sign_extend:V4SI\n-\t\t      (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\"))\n-\t\t     (sign_extend:V4SI\n-\t\t      (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))\n-\t  (const_int 16))))]\n+\t  (lshiftrt:V4SI\n+\t    (mult:V4SI\n+\t      (sign_extend:V4SI\n+\t\t(match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\"))\n+\t      (sign_extend:V4SI\n+\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))\n+\t    (const_int 16))))]\n   \"TARGET_MMX && ix86_binary_operator_ok (MULT, V4HImode, operands)\"\n   \"pmulhw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_umulv4hi3_highpart\"\n+(define_expand \"mmx_umulv4hi3_highpart\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"\")\n+\t(truncate:V4HI\n+\t  (lshiftrt:V4SI\n+\t    (mult:V4SI\n+\t      (zero_extend:V4SI\n+\t\t(match_operand:V4HI 1 \"nonimmediate_operand\" \"\"))\n+\t      (zero_extend:V4SI\n+\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"\")))\n+\t    (const_int 16))))]\n+  \"TARGET_SSE || TARGET_3DNOW_A\"\n+  \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n+\n+(define_insn \"*umulv4hi3_highpart\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n \t(truncate:V4HI\n-\t (lshiftrt:V4SI\n-\t  (mult:V4SI (zero_extend:V4SI\n-\t\t      (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\"))\n-\t\t     (zero_extend:V4SI\n-\t\t      (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))\n+\t  (lshiftrt:V4SI\n+\t    (mult:V4SI\n+\t      (zero_extend:V4SI\n+\t\t(match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\"))\n+\t      (zero_extend:V4SI\n+\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))\n \t  (const_int 16))))]\n   \"(TARGET_SSE || TARGET_3DNOW_A)\n    && ix86_binary_operator_ok (MULT, V4HImode, operands)\"\n@@ -687,7 +740,7 @@\n \t\t\t\t  (const_int 32768) (const_int 32768)]))\n \t    (const_int 16))))]\n   \"TARGET_3DNOW && ix86_binary_operator_ok (MULT, V4HImode, operands)\"\n-  \"pmulhrw\\\\t{%2, %0|%0, %2}\"\n+  \"pmulhrw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"DI\")])\n \n@@ -707,24 +760,40 @@\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_<code>v4hi3\"\n+(define_expand \"mmx_<code>v4hi3\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"\")\n+        (smaxmin:V4HI\n+\t  (match_operand:V4HI 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:V4HI 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_SSE || TARGET_3DNOW_A\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, V4HImode, operands);\")\n+\n+(define_insn \"*<code>v4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n         (smaxmin:V4HI\n \t  (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n   \"(TARGET_SSE || TARGET_3DNOW_A)\n-   && ix86_binary_operator_ok (SMAX, V4HImode, operands)\"\n+   && ix86_binary_operator_ok (<CODE>, V4HImode, operands)\"\n   \"p<maxminiprefix>w\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_<code>v8qi3\"\n+(define_expand \"mmx_<code>v8qi3\"\n+  [(set (match_operand:V8QI 0 \"register_operand\" \"\")\n+        (umaxmin:V8QI\n+\t  (match_operand:V8QI 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:V8QI 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_SSE || TARGET_3DNOW_A\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, V8QImode, operands);\")\n+\n+(define_insn \"*<code>v8qi3\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n         (umaxmin:V8QI\n \t  (match_operand:V8QI 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")))]\n   \"(TARGET_SSE || TARGET_3DNOW_A)\n-   && ix86_binary_operator_ok (UMIN, V8QImode, operands)\"\n+   && ix86_binary_operator_ok (<CODE>, V8QImode, operands)\"\n   \"p<maxminiprefix>b\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n@@ -801,7 +870,15 @@\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_<code><mode>3\"\n+(define_expand \"mmx_<code><mode>3\"\n+  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"\")\n+\t(plogic:MMXMODEI\n+\t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_MMX\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+\n+(define_insn \"*<code><mode>3\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n         (plogic:MMXMODEI\n \t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"%0\")\n@@ -1017,7 +1094,7 @@\n \t  (match_operand:V2SI 1 \"nonimmediate_operand\" \"ym\")\n \t  (parallel [(const_int 1) (const_int 0)])))]\n   \"TARGET_3DNOW_A\"\n-  \"pswapd\\\\t{%1, %0|%0, %1}\"\n+  \"pswapd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"mode\" \"DI\")])\n \n@@ -1221,7 +1298,7 @@\n   if (TARGET_SSE || TARGET_3DNOW_A)\n     return \"pavgb\\t{%2, %0|%0, %2}\";\n   else\n-    return \"pavgusb\\\\t{%2, %0|%0, %2}\";\n+    return \"pavgusb\\t{%2, %0|%0, %2}\";\n }\n   [(set_attr \"type\" \"mmxshft\")\n    (set_attr \"mode\" \"DI\")])"}]}