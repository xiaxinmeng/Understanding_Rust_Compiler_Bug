{"sha": "36d6d97993554c36ba31e1d1f6193b96d581ed18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkNmQ5Nzk5MzU1NGMzNmJhMzFlMWQxZjYxOTNiOTZkNTgxZWQxOA==", "commit": {"author": {"name": "Roberto Bagnara", "email": "bagnara@cs.unipr.it", "date": "2008-05-10T15:02:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-05-10T15:02:34Z"}, "message": "vector (vector<>::_M_requires_reallocation): Fix macro.\n\n2008-05-10  Roberto Bagnara  <bagnara@cs.unipr.it>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/debug/vector (vector<>::_M_requires_reallocation): Fix macro.\n\t* testsuite/23_containers/vector/debug_mode_requires_reallocation.cc:\n\tNew.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r135151", "tree": {"sha": "6b2565c4565bb94b11c441523d4c7c9c2b7b7a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b2565c4565bb94b11c441523d4c7c9c2b7b7a26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d6d97993554c36ba31e1d1f6193b96d581ed18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d6d97993554c36ba31e1d1f6193b96d581ed18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d6d97993554c36ba31e1d1f6193b96d581ed18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d6d97993554c36ba31e1d1f6193b96d581ed18/comments", "author": null, "committer": null, "parents": [{"sha": "b282a8d3ecd34ff57710098f40159029cbd5ec3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b282a8d3ecd34ff57710098f40159029cbd5ec3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b282a8d3ecd34ff57710098f40159029cbd5ec3e"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "b64bb7e4384ba6d1af3ef2f76514426f6d12257a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d6d97993554c36ba31e1d1f6193b96d581ed18/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d6d97993554c36ba31e1d1f6193b96d581ed18/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=36d6d97993554c36ba31e1d1f6193b96d581ed18", "patch": "@@ -1,3 +1,10 @@\n+2008-05-10  Roberto Bagnara  <bagnara@cs.unipr.it>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/debug/vector (vector<>::_M_requires_reallocation): Fix macro.\n+\t* testsuite/23_containers/vector/debug_mode_requires_reallocation.cc:\n+\tNew.\n+\n 2008-05-07  Johannes Singler  <singler@ira.uka.de>\n \n        * include/parallel/quicksort.h:"}, {"sha": "a588ca8f104a469db4c3e83bc925be9be1d86c34", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d6d97993554c36ba31e1d1f6193b96d581ed18/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d6d97993554c36ba31e1d1f6193b96d581ed18/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=36d6d97993554c36ba31e1d1f6193b96d581ed18", "patch": "@@ -1,6 +1,6 @@\n // Debugging vector implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -443,7 +443,7 @@ namespace __debug\n       bool\n       _M_requires_reallocation(size_type __elements)\n       {\n-#ifdef _GLIBCXX_DEBUG_PEDANTIC\n+#ifndef _GLIBCXX_DEBUG_PEDANTIC\n \treturn __elements > this->capacity();\n #else\n \treturn __elements > _M_guaranteed_capacity;"}, {"sha": "079a70f497bb446a48fc61dddd8a7873d8a87d0b", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug_mode_requires_reallocation.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d6d97993554c36ba31e1d1f6193b96d581ed18/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d6d97993554c36ba31e1d1f6193b96d581ed18/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation.cc?ref=36d6d97993554c36ba31e1d1f6193b96d581ed18", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+\n+#include <vector>\n+#include <algorithm>\n+#include <iterator>\n+\n+// http://gcc.gnu.org/ml/libstdc++/2008-05/msg00039.html\n+void test01()\n+{\n+  typedef std::vector<unsigned> array_t;\n+  typedef std::back_insert_iterator<array_t> bii_t;\n+\n+  array_t a;\n+\n+  // Push 5 elements.\n+  a.push_back(0);\n+  a.push_back(1);\n+  a.push_back(2);\n+  a.push_back(3);\n+  a.push_back(4);\n+  // Ensure that there is enough space for other two elements.\n+  // (2 + 5 = 7)\n+  if (a.capacity() < 7)\n+    a.reserve(7);\n+  // Add two new elements.\n+  std::copy(a.begin(), a.begin() + 2, bii_t(a));\n+} \n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}