{"sha": "58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThmZWFhNWY1MjllZjdjNWFmZWM4ZjZmMzIzZDdiY2Y1OTYzMTNhNA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-01-25T23:11:53Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-01-25T23:11:53Z"}, "message": "PR c++/71290 - Flexible array member is not diagnosed with -pedantic\n\ngcc/cp/ChangeLog:\n\tPR c++/71290\n\t* decl.c (grokdeclarator): Warn on flexible array members.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/71290\n\t* g++.dg/ext/flexarray-mangle-2.C: Adjust.\n\t* g++.dg/ext/flexarray-mangle.C: Same.\n\t* g++.dg/ext/flexarray-subst.C: Same.\n\t* g++.dg/ext/flexary10.C: Same.\n\t* g++.dg/ext/flexary11.C: Same.\n\t* g++.dg/ext/flexary14.C: Same.\n\t* g++.dg/ext/flexary16.C: Same.\n\t* g++.dg/ext/flexary18.C: Same.\n\t* g++.dg/ext/flexary19.C: Same.\n\t* g++.dg/ext/flexary7.C: Same.\n\t* gcc/testsuite/g++.dg/cpp1z/has-unique-obj-representations1.C: Same.\n\t* gcc/testsuite/g++.dg/ubsan/object-size-1.C: Same.\n\t* gcc/testsuite/obj-c++.dg/property/at-property-23.mm: Same.\n\nFrom-SVN: r244910", "tree": {"sha": "30c2ef8b24d6ce50fc021a738a786fe04f4800df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30c2ef8b24d6ce50fc021a738a786fe04f4800df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a25608aa6fc14c49fb23247f60c5f83225d00c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25608aa6fc14c49fb23247f60c5f83225d00c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25608aa6fc14c49fb23247f60c5f83225d00c29"}], "stats": {"total": 81, "additions": 67, "deletions": 14}, "files": [{"sha": "11c30ca6362e93c4d4e3ba82a327f3640d78ba73", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,3 +1,8 @@\n+2017-01-25  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/71290\n+\t* decl.c (grokdeclarator): Warn on flexible array members.\n+\n 2017-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/78896"}, {"sha": "39e7fbd96003ec8a982dfe4307c9a2ef0d8c9cd3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -11804,6 +11804,17 @@ grokdeclarator (const cp_declarator *declarator,\n \t      }\n \t    else \n \t      {\n+\t\t/* Array is a flexible member.  */\n+\t\tif (in_system_header_at (input_location))\n+\t\t  /* Do not warn flexible them in system headers because glibc\n+\t\t     uses them.  */;\n+\t\telse if (name)\n+\t\t  pedwarn (input_location, OPT_Wpedantic,\n+\t\t\t   \"ISO C++ forbids flexible array member %<%s%>\", name);\n+\t\telse\n+\t\t  pedwarn (input_location, OPT_Wpedantic,\n+\t\t\t   \"ISO C++ forbids flexible array members\");\n+\n \t\t/* Flexible array member has a null domain.  */\n \t\ttype = build_cplus_array_type (TREE_TYPE (type), NULL_TREE);\n \t      }"}, {"sha": "bca03a16c41ac98230eb1ce72644b08ae12561a3", "filename": "gcc/testsuite/g++.dg/cpp1z/has-unique-obj-representations1.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fhas-unique-obj-representations1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fhas-unique-obj-representations1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fhas-unique-obj-representations1.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wno-error=pedantic\" }\n \n #define INTB (__SIZEOF_INT__ * __CHAR_BIT__)\n struct S { int i : INTB * 3 / 4; S (); };\n@@ -7,7 +8,9 @@ struct U { int i : INTB * 3 / 4; int j : INTB / 4; };\n struct V { int i : INTB * 3 / 4; int j : INTB / 4 + 1; };\n struct W {};\n struct X : public W { int i; void bar (); };\n-struct Y { char a[3]; char b[]; };\n+struct Y {\n+  char a[3]; char b[];   // { dg-warning \"forbids flexible array member\" }\n+};\n struct Z { int a; float b; };\n struct A { int i : INTB * 2; int j; };\t\t\t// { dg-warning \"exceeds its type\" }\n union B { long a; unsigned long b; };"}, {"sha": "3abb407fab716bed8d6e906effe036575d3a3448", "filename": "gcc/testsuite/g++.dg/ext/flexarray-mangle-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle-2.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,9 +1,10 @@\n // PR c++/69277 - [6 Regression] ICE mangling a flexible array member\n // { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wno-error=pedantic\" }\n \n struct A {\n   int n;\n-  char a [];\n+  char a[];   // { dg-warning \"forbids flexible array member\" }\n };\n \n // Declare but do not define function templates."}, {"sha": "658d9355a9c74899d3bcfac9746368e16318396d", "filename": "gcc/testsuite/g++.dg/ext/flexarray-mangle.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-mangle.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,9 +1,10 @@\n // PR c++/69277 - [6 Regression] ICE mangling a flexible array member\n // { dg-do compile }\n+// { dg-additional-options \"-Wno-error=pedantic\" }\n \n struct A {\n   int n;\n-  char a [];\n+  char a[];   // { dg-warning \"forbids flexible array member\" }\n };\n \n // Declare but do not define function templates."}, {"sha": "6cf03a41af20da6c322748c61966ab1b80c6964a", "filename": "gcc/testsuite/g++.dg/ext/flexarray-subst.C", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-subst.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-subst.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexarray-subst.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,8 +1,12 @@\n // PR c++/69251 - [6 Regression] ICE (segmentation fault) in unify_array_domain\n // on i686-linux-gnu\n // { dg-do compile }\n+// { dg-additional-options \"-Wno-error=pedantic\" }\n \n-struct A { int n; char a[]; };\n+struct A {\n+  int n;\n+  char a[];   // { dg-warning \"forbids flexible array member\" }\n+};\n \n template <class>\n struct B;"}, {"sha": "4d1ff56e49b90fa18173a5b0c73cafd2fe6bdac0", "filename": "gcc/testsuite/g++.dg/ext/flexary10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary10.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -4,7 +4,7 @@\n \n struct A {\n   int n;\n-  int a [];\n+  int a[];  // { dg-warning \"forbids flexible array member\" }\n };\n \n struct A foo (void)"}, {"sha": "f958cc5555a4fdbc0866fec6bd9af990339e0aed", "filename": "gcc/testsuite/g++.dg/ext/flexary11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary11.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -4,7 +4,7 @@\n \n struct A {\n   int n;\n-  char a [];\n+  char a[];   // { dg-error \"forbids flexible array member\" }\n };\n \n void f ()"}, {"sha": "add150a0be8042a8be80c936778a1b3dc268c6c9", "filename": "gcc/testsuite/g++.dg/ext/flexary14.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary14.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -9,7 +9,9 @@ struct A<T[]> { typedef int X; };\n \n template <class T> int foo (T&, typename A<T>::X = 0) { return 0; }\n \n-struct B { int n, a[]; };\n+struct B {\n+  int n, a[];     // { dg-error \"forbids flexible array member\" }\n+};\n \n void bar (B *b)\n {"}, {"sha": "64a9f5d051510c5ab0b74e08e5600910a4bfdfea", "filename": "gcc/testsuite/g++.dg/ext/flexary16.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary16.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,6 +1,7 @@\n // PR c++/71147 - [6 Regression] Flexible array member wrongly rejected\n //   in template\n // { dg-do compile }\n+// { dg-options \"-Wpedantic -Wno-error=pedantic\" }\n \n template <typename>\n struct container\n@@ -11,7 +12,7 @@ struct container\n \n   struct incomplete {\n     int x;\n-    elem array[];\n+    elem array[];  // { dg-warning \"forbids flexible array member\" }\n   };\n };\n \n@@ -26,7 +27,7 @@ struct D: container<T>\n {\n   struct S {\n     int x;\n-    typename container<T>::elem array[];\n+    typename container<T>::elem array[];  // { dg-warning \"forbids flexible array member\" }\n   };\n };\n "}, {"sha": "4ab864d991d5d168a0c872285093c497c3e082db", "filename": "gcc/testsuite/g++.dg/ext/flexary18.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary18.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -211,3 +211,5 @@ struct StructUnion9 {                       // { dg-message \"in the definition\"\n     } b2;                                   // { dg-warning \"invalid use\" }\n   } a2;                                     // { dg-message \"next member\" }\n };\n+\n+// { dg-prune-output \"forbids flexible array member\" }"}, {"sha": "5eaf11b064dcbf44ca0cde053780c592f4ae5f9a", "filename": "gcc/testsuite/g++.dg/ext/flexary19.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary19.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -341,3 +341,4 @@ struct S35\n   typedef D D2;\n };\n \n+// { dg-prune-output \"forbids flexible array member\" }"}, {"sha": "1b22f21b2b635e7fd75152151f331fd6c98fa8e2", "filename": "gcc/testsuite/g++.dg/ext/flexary7.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary7.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -5,7 +5,7 @@\n \n struct FlexChar {\n     int n;\n-    char a[];\n+    char a[];       // { dg-warning \"forbids flexible array member\" }\n };\n \n struct FlexChar ac =\n@@ -18,7 +18,7 @@ typedef __WCHAR_TYPE__ wchar_t;\n \n struct FlexWchar {\n     int n;\n-    wchar_t a[];\n+    wchar_t a[];    // { dg-warning \"forbids flexible array member\" }\n };\n \n struct FlexWchar awc =\n@@ -27,7 +27,7 @@ struct FlexWchar awc =\n \n struct FlexInt {\n     int n;\n-    int a[];\n+    int a[];        // { dg-warning \"forbids flexible array member\" }\n };\n \n // Verify that no warning is issued for the case when a flexible array\n@@ -48,7 +48,7 @@ struct FlexInt ai2 =\n template <class T>\n struct FlexT {\n     int n;\n-    T a[];\n+    T a[];          // { dg-warning \"forbids flexible array member\" }\n };\n \n struct FlexT<char> atc ="}, {"sha": "e782eb1a486130f2f64a694e696e1683793a8b7b", "filename": "gcc/testsuite/g++.dg/ext/pr71290.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr71290.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr71290.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr71290.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/71290 - [6/7 Regression] Flexible array member is not diagnosed\n+// with -pedantic\n+\n+// { dg-do compile }s\n+// { dg-options \"-Wall -Wpedantic\" }\n+\n+struct A\n+{\n+  int i;\n+  int arr[];   // { dg-warning \"forbids flexible array member .arr.\" }\n+};\n+\n+template <class T>\n+struct B {\n+  T n;\n+  T a[];       // { dg-warning \"forbids flexible array member .a.\" }\n+};"}, {"sha": "d2881d69a20b4387b3e3d44823942fc06940bec2", "filename": "gcc/testsuite/g++.dg/ubsan/object-size-1.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fobject-size-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fobject-size-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fobject-size-1.C?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -1,7 +1,10 @@\n // { dg-do compile }\n // { dg-options \"-Wpedantic -Wno-error=pedantic -fsanitize=undefined -fpermissive\" }\n \n-struct T { int c; char d[]; };\n+struct T\n+{\n+  int c; char d[];   // { dg-warning \"forbids flexible array member\" }\n+};\n \n struct T t = { 1, \"a\" }; // { dg-warning \"initialization of a flexible array member \" }\n "}, {"sha": "0edb37b65cc69bda9ff4fbb0739dbc79f30e2815", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-23.mm", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-23.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58feaa5f529ef7c5afec8f6f323d7bcf596313a4/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-23.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-23.mm?ref=58feaa5f529ef7c5afec8f6f323d7bcf596313a4", "patch": "@@ -14,4 +14,6 @@ @interface MyRootClass\n @property int a[8]; /* { dg-error \"property can not be an array\" } */\n @property int b:8;  /* { dg-error \"expected\" } */\n @property int c[];  /* { dg-error \"property can not be an array\" } */\n+/* { dg-error \"forbids flexible array member\" \"flexible array member\" { target \\\n+*-*-* } .-1 } */\n @end"}]}