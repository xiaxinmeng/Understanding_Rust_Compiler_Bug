{"sha": "8857080c81761eb1344c3b5404b5e25e9cc949eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg1NzA4MGM4MTc2MWViMTM0NGMzYjU0MDRiNWUyNWU5Y2M5NDllYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-11-17T01:32:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-11-17T01:32:55Z"}, "message": "libstdc++: add range constructor for std::string_view (P1391R4)\n\n\t* include/std/string_view (basic_string_view(It, End)): Add range\n\tconstructor and deduction guide from P1391R4.\n\t* testsuite/21_strings/basic_string_view/cons/char/range.cc: New test.\n\nFrom-SVN: r278371", "tree": {"sha": "540c435e1caf44d2761d188db56b20b96d913759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/540c435e1caf44d2761d188db56b20b96d913759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8857080c81761eb1344c3b5404b5e25e9cc949eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8857080c81761eb1344c3b5404b5e25e9cc949eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8857080c81761eb1344c3b5404b5e25e9cc949eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8857080c81761eb1344c3b5404b5e25e9cc949eb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37f33df706851a00b2f5c0d429f6b273e8ab0029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f33df706851a00b2f5c0d429f6b273e8ab0029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37f33df706851a00b2f5c0d429f6b273e8ab0029"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "2dc29596959221522a080394b026c2e201b230e3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857080c81761eb1344c3b5404b5e25e9cc949eb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857080c81761eb1344c3b5404b5e25e9cc949eb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8857080c81761eb1344c3b5404b5e25e9cc949eb", "patch": "@@ -1,5 +1,9 @@\n 2019-11-17  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/string_view (basic_string_view(It, End)): Add range\n+\tconstructor and deduction guide from P1391R4.\n+\t* testsuite/21_strings/basic_string_view/cons/char/range.cc: New test.\n+\n \t* include/bits/regex.h (match_results): Specialize __enable_view_impl.\n \t* include/bits/stl_set.h (set): Likewise.\n \t* include/bits/unordered_set.h (unordered_set, unordered_multiset):"}, {"sha": "9d2a8e8e0c2bb10c61437faf3bb43636d17eec4b", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857080c81761eb1344c3b5404b5e25e9cc949eb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857080c81761eb1344c3b5404b5e25e9cc949eb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=8857080c81761eb1344c3b5404b5e25e9cc949eb", "patch": "@@ -130,6 +130,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       : _M_len{__len}, _M_str{__str}\n       { }\n \n+#if __cplusplus > 201703L && __cpp_lib_concepts\n+      template<contiguous_iterator _It, sized_sentinel_for<_It> _End>\n+\trequires same_as<iter_value_t<_It>, _CharT>\n+\t  && (!convertible_to<_End, size_type>)\n+\tconstexpr\n+\tbasic_string_view(_It __first, _End __last)\n+\t: _M_len(__last - __first), _M_str(std::to_address(__first))\n+\t{ }\n+#endif\n+\n       constexpr basic_string_view&\n       operator=(const basic_string_view&) noexcept = default;\n \n@@ -457,6 +467,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const _CharT* _M_str;\n     };\n \n+#if __cplusplus > 201703L && __cpp_lib_concepts && __cpp_deduction_guides\n+  template<contiguous_iterator _It, sized_sentinel_for<_It> _End>\n+    basic_string_view(_It, _End) -> basic_string_view<iter_value_t<_It>>;\n+#endif\n+\n   // [string.view.comparison], non-member basic_string_view comparison function\n \n   // Several of these functions use type_identity_t to create a non-deduced"}, {"sha": "d554b77c8744ce4470bbb1c1e474bf7d262fbdb0", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/cons/char/range.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857080c81761eb1344c3b5404b5e25e9cc949eb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fchar%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857080c81761eb1344c3b5404b5e25e9cc949eb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fchar%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fchar%2Frange.cc?ref=8857080c81761eb1344c3b5404b5e25e9cc949eb", "patch": "@@ -0,0 +1,42 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <string_view>\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+constexpr char str[] = \"abcdefg\";\n+constexpr std::basic_string_view s(std::begin(str), std::cend(str) - 1);\n+static_assert( s == str );\n+static_assert( s.data() == str );\n+\n+void\n+test01()\n+{\n+  std::vector<char> v{'a', 'b', 'c'};\n+  std::basic_string_view s(v.begin(), v.end());\n+  VERIFY( s.data() == v.data() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}