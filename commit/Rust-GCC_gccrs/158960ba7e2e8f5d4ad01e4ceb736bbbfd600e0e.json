{"sha": "158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4OTYwYmE3ZTJlOGY1ZDRhZDAxZTRjZWI3MzZiYmJmZDYwMGUwZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-01-07T22:17:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-01-07T22:17:01Z"}, "message": "crossconfig.m4: Add LFS, io bits to linux cross config.\n\n\n2004-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* crossconfig.m4: Add LFS, io bits to linux cross config.\n\t* acconfig.h: Remove obsolete bits, reorder.\n\t* config.h.in: Regenerate.\n\t* aclocal.m4: Same.\n\t* configure: Same.\n\nFrom-SVN: r75520", "tree": {"sha": "2bd8c2f700cbc0896ce320e5b11bcf5d1f394f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bd8c2f700cbc0896ce320e5b11bcf5d1f394f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/comments", "author": null, "committer": null, "parents": [{"sha": "5d2082d1474951aea430f2a835333f77026aa5a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2082d1474951aea430f2a835333f77026aa5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2082d1474951aea430f2a835333f77026aa5a1"}], "stats": {"total": 17170, "additions": 4692, "deletions": 12478}, "files": [{"sha": "5ac66961d580e644bcefca4899139898b59bf6cb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "patch": "@@ -1,3 +1,11 @@\n+2004-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* crossconfig.m4: Add LFS, io bits to linux cross config.\n+\t* acconfig.h: Remove obsolete bits, reorder.\n+\t* config.h.in: Regenerate.\n+\t* aclocal.m4: Same.\n+\t* configure: Same.\n+\t\n 2004-01-07  Gawain Bolton  <gp.bolton@computer.org>\n \n \t* include/bits/stl_list.h:"}, {"sha": "de6f4318dec70c50e13fc13a4358f6b134e9e1c6", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 21, "deletions": 24, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "patch": "@@ -16,18 +16,15 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n+// Include support for 'long double'.\n+#undef _GLIBCXX_USE_LONG_DOUBLE\n+\n // Define if C99 math functions (like fpclassify) should be exposed.\n #undef _GLIBCXX_USE_C99_MATH\n \n // Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n #undef _GLIBCXX_USE_C99\n \n-// Include support for 'long double'.\n-#undef _GLIBCXX_USE_LONG_DOUBLE\n-\n-// Include support for shadow headers, ie --enable-cshadow-headers.\n-#undef _GLIBCXX_USE_SHADOW_HEADERS\n-\n // Define if code specialized for wchar_t should be used.\n #undef _GLIBCXX_USE_WCHAR_T\n \n@@ -37,18 +34,6 @@\n // Define to use concept checking code from the boost libraries.\n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// Define if the atan2f function exists.\n-#undef HAVE_ATAN2F \n-\n-// Define if the atan2l function exists.\n-#undef HAVE_ATAN2L\n-\n-// Define if the tanl function exists.\n-#undef HAVE_TANL\n-\n-// Define if the copysignf function exists.\n-#undef HAVE_COPYSIGNF\n-\n // Define to use symbol versioning in the shared library.\n #undef _GLIBCXX_SYMVER\n \n@@ -63,9 +48,27 @@\n   #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n #endif\n \n+// Define if LFS support is available.\n+#undef _GLIBCXX_USE_LFS\n+\n+// Define if NLS translations are to be used.\n+#undef _GLIBCXX_USE_NLS\n+\n // Define if gthr-default.h exists (meaning that threading support is enabled).\n #undef HAVE_GTHR_DEFAULT\n \n+// Define if the atan2f function exists.\n+#undef HAVE_ATAN2F \n+\n+// Define if the atan2l function exists.\n+#undef HAVE_ATAN2L\n+\n+// Define if the tanl function exists.\n+#undef HAVE_TANL\n+\n+// Define if the copysignf function exists.\n+#undef HAVE_COPYSIGNF\n+\n // Define if getpagesize exists.\n #undef HAVE_GETPAGESIZE\n \n@@ -156,9 +159,6 @@\n // Define if int64_t is available in <stdint.h>.\n #undef HAVE_INT64_T\n \n-// Define if LFS support is available.\n-#undef _GLIBCXX_USE_LFS\n-\n // Define if LC_MESSAGES is available in <locale.h>.\n #undef HAVE_LC_MESSAGES\n \n@@ -168,9 +168,6 @@\n // Define if modf is present in <math.h>\n #undef HAVE_MODF\n \n-// Define if NLS translations are to be used.\n-#undef _GLIBCXX_USE_NLS\n-\n // @BOTTOM@\n //\n // Systems that have certain non-standard functions prefixed with an"}, {"sha": "f8e416cffa8ee6c781b06a45d2c1da27f1835499", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "patch": "@@ -1,4 +1,4 @@\n-# generated automatically by aclocal 1.7.9 -*- Autoconf -*-\n+# generated automatically by aclocal 1.7.8 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002\n # Free Software Foundation, Inc.\n@@ -1996,7 +1996,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION],[am__api_version=\"1.7\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.7.9])])\n+\t [AM_AUTOMAKE_VERSION([1.7.8])])\n \n # Helper functions for option handling.                    -*- Autoconf -*-\n "}, {"sha": "b2d030da06d7ae5f1967690c951a8de3a0a40644", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 21, "deletions": 24, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "patch": "@@ -17,18 +17,15 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n+// Include support for 'long double'.\n+#undef _GLIBCXX_USE_LONG_DOUBLE\n+\n // Define if C99 math functions (like fpclassify) should be exposed.\n #undef _GLIBCXX_USE_C99_MATH\n \n // Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n #undef _GLIBCXX_USE_C99\n \n-// Include support for 'long double'.\n-#undef _GLIBCXX_USE_LONG_DOUBLE\n-\n-// Include support for shadow headers, ie --enable-cshadow-headers.\n-#undef _GLIBCXX_USE_SHADOW_HEADERS\n-\n // Define if code specialized for wchar_t should be used.\n #undef _GLIBCXX_USE_WCHAR_T\n \n@@ -38,18 +35,6 @@\n // Define to use concept checking code from the boost libraries.\n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// Define if the atan2f function exists.\n-#undef HAVE_ATAN2F \n-\n-// Define if the atan2l function exists.\n-#undef HAVE_ATAN2L\n-\n-// Define if the tanl function exists.\n-#undef HAVE_TANL\n-\n-// Define if the copysignf function exists.\n-#undef HAVE_COPYSIGNF\n-\n // Define to use symbol versioning in the shared library.\n #undef _GLIBCXX_SYMVER\n \n@@ -64,9 +49,27 @@\n   #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n #endif\n \n+// Define if LFS support is available.\n+#undef _GLIBCXX_USE_LFS\n+\n+// Define if NLS translations are to be used.\n+#undef _GLIBCXX_USE_NLS\n+\n // Define if gthr-default.h exists (meaning that threading support is enabled).\n #undef HAVE_GTHR_DEFAULT\n \n+// Define if the atan2f function exists.\n+#undef HAVE_ATAN2F \n+\n+// Define if the atan2l function exists.\n+#undef HAVE_ATAN2L\n+\n+// Define if the tanl function exists.\n+#undef HAVE_TANL\n+\n+// Define if the copysignf function exists.\n+#undef HAVE_COPYSIGNF\n+\n // Define if getpagesize exists.\n #undef HAVE_GETPAGESIZE\n \n@@ -157,9 +160,6 @@\n // Define if int64_t is available in <stdint.h>.\n #undef HAVE_INT64_T\n \n-// Define if LFS support is available.\n-#undef _GLIBCXX_USE_LFS\n-\n // Define if LC_MESSAGES is available in <locale.h>.\n #undef HAVE_LC_MESSAGES\n \n@@ -169,9 +169,6 @@\n // Define if modf is present in <math.h>\n #undef HAVE_MODF\n \n-// Define if NLS translations are to be used.\n-#undef _GLIBCXX_USE_NLS\n-\n \n /* Define to 1 if you have the `acosf' function. */\n #undef HAVE_ACOSF"}, {"sha": "dde36f5e4a0644031006f7ac47ba49a002623ea7", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4626, "deletions": 12428, "changes": 17054, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e"}, {"sha": "5f1392b5c343490a908f510d03a788cac60c0d85", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=158960ba7e2e8f5d4ad01e4ceb736bbbfd600e0e", "patch": "@@ -131,6 +131,20 @@ case \"${host}\" in\n     GLIBCXX_CHECK_LINKER_FEATURES\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     GLIBCXX_CHECK_WCHAR_T_SUPPORT\n+\n+    # For LFS.\n+    AC_DEFINE(HAVE_INT64_T)\n+    AC_DEFINE(_GLIBCXX_USE_LFS)\n+\n+    # For showmanyc_helper().\n+    AC_CHECK_HEADERS(sys/ioctl.h sys/filio.h)\n+    GLIBCXX_CHECK_POLL\n+    GLIBCXX_CHECK_S_ISREG_OR_S_IFREG\n+\n+    # For xsputn_2().\n+    AC_CHECK_HEADERS(sys/uio.h)\n+    GLIBCXX_CHECK_WRITEV\n+\n     AC_DEFINE(HAVE_COPYSIGN)\n     AC_DEFINE(HAVE_COPYSIGNF)\n     AC_DEFINE(HAVE_FINITE)"}]}