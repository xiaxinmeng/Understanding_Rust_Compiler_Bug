{"sha": "8d34bfa865fb527b6a3569528656e2dc8af592e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzNGJmYTg2NWZiNTI3YjZhMzU2OTUyODY1NmUyZGM4YWY1OTJlMA==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@us.ibm.com", "date": "2016-11-10T18:55:57Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@gcc.gnu.org", "date": "2016-11-10T18:55:57Z"}, "message": "re PR rtl-optimization/78241 (wrong code with -funroll-loops)\n\n\tPR rtl-optimization/78241\n\t* loop-unroll.c (unroll_loop_runtime_iterations): Don't adjust 'niter', but\n\temit initial peel copy if niter expr is not reliable.\n\n\t* gcc.dg/pr78241.c: New test.\n\nFrom-SVN: r242047", "tree": {"sha": "223b62a9c66bd4b015116cdb4548e792f4fe43a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223b62a9c66bd4b015116cdb4548e792f4fe43a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d34bfa865fb527b6a3569528656e2dc8af592e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d34bfa865fb527b6a3569528656e2dc8af592e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d34bfa865fb527b6a3569528656e2dc8af592e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d34bfa865fb527b6a3569528656e2dc8af592e0/comments", "author": null, "committer": null, "parents": [{"sha": "a1566696653132892d629525644c2c63da8dab87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1566696653132892d629525644c2c63da8dab87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1566696653132892d629525644c2c63da8dab87"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "66ff3618c8e2120b26494fb3a2db18bc82d1d4cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d34bfa865fb527b6a3569528656e2dc8af592e0", "patch": "@@ -1,3 +1,9 @@\n+2016-11-10  Pat Haugen  <pthaugen@us.ibm.com>\n+\n+\tPR rtl-optimization/78241\n+\t* loop-unroll.c (unroll_loop_runtime_iterations): Don't adjust 'niter', but\n+\temit initial peel copy if niter expr is not reliable.\n+\n 2016-11-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* dwarf2cfi.c (dump_cfi_row): Add forward declaration."}, {"sha": "760445e64485ca093d3c15a32ffbeab617544a9d", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=8d34bfa865fb527b6a3569528656e2dc8af592e0", "patch": "@@ -918,9 +918,10 @@ unroll_loop_runtime_iterations (struct loop *loop)\n   if (tmp != niter)\n     emit_move_insn (niter, tmp);\n \n-  /* For loops that exit at end, add one to niter to account for first pass\n-     through loop body before reaching exit test. */\n-  if (exit_at_end)\n+  /* For loops that exit at end and whose number of iterations is reliable,\n+     add one to niter to account for first pass through loop body before\n+     reaching exit test. */\n+  if (exit_at_end && !desc->noloop_assumptions)\n     {\n       niter = expand_simple_binop (desc->mode, PLUS,\n \t\t\t\t   niter, const1_rtx,\n@@ -946,7 +947,7 @@ unroll_loop_runtime_iterations (struct loop *loop)\n \n   auto_sbitmap wont_exit (max_unroll + 2);\n \n-  if (extra_zero_check)\n+  if (extra_zero_check || desc->noloop_assumptions)\n     {\n       /* Peel the first copy of loop body.  Leave the exit test if the number\n \t of iterations is not reliable.  Also record the place of the extra zero"}, {"sha": "b3f944221f559868ab7dacd52f40c779aa134453", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d34bfa865fb527b6a3569528656e2dc8af592e0", "patch": "@@ -1,3 +1,8 @@\n+2016-11-10  Pat Haugen  <pthaugen@us.ibm.com>\n+\n+\tPR rtl-optimization/78241\n+\t* gcc.dg/pr78241.c: New test.\n+\n 2016-11-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.dg/openmp-define-3.f90: Expect 201511 instead of"}, {"sha": "b99dfca2ba03b413b437118174d3a4d386d64e31", "filename": "gcc/testsuite/gcc.dg/pr78241.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78241.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d34bfa865fb527b6a3569528656e2dc8af592e0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78241.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78241.c?ref=8d34bfa865fb527b6a3569528656e2dc8af592e0", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-options \"-Og -funroll-loops\" } */\n+\n+static __attribute__((noinline, noclone)) unsigned\n+foo (unsigned x)\n+{\n+  do\n+    x++;\n+  while (x <= 15);\n+  return x;\n+}\n+\n+int main ()\n+{\n+  unsigned x = foo (-2);\n+  if (x != (unsigned)-1)\n+    __builtin_abort();\n+  return 0;\n+}\n+"}]}