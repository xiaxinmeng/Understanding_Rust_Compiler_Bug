{"sha": "61214be10b12d26d2ec7855d9a8681a155b0f953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEyMTRiZTEwYjEyZDI2ZDJlYzc4NTVkOWE4NjgxYTE1NWIwZjk1Mw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-11-14T10:58:48Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-11-14T10:58:48Z"}, "message": "remove conditional compilation of HAVE_AS_LEB128 code\n\ngcc/ChangeLog:\n\n2016-08-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* acinclude.m4 (gcc_GAS_CHECK_FEATURE): Support doing an action\n\tif the feature isn't available.\n\t* configure: Regenerate.\n\t* configure.ac: define HAVE_AS_LEB128 to 0 when not available.\n\t* dwarf2asm.c (dw2_asm_output_data_uleb128): Always compile code\n\tfor HAVE_AS_LEB128.\n\t(dw2_asm_output_data_sleb128): Likewise.\n\t(dw2_asm_output_delta_uleb128): Likewise.\n\t(dw2_asm_output_delta_sleb128): Likewise.\n\t* except.c (output_one_function_exception_table): Likewise.\n\t(dw2_size_of_call_site_table): Likewise.\n\t(sjlj_size_of_call_site_table): Likewise.\n\t* dwarf2out.c (output_loc_list): Likewise.\n\t(output_rnglists): Likewise.\n\nFrom-SVN: r242381", "tree": {"sha": "c22752892fde2e66aeecd39618b75adcc48d4e5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c22752892fde2e66aeecd39618b75adcc48d4e5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61214be10b12d26d2ec7855d9a8681a155b0f953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61214be10b12d26d2ec7855d9a8681a155b0f953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61214be10b12d26d2ec7855d9a8681a155b0f953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61214be10b12d26d2ec7855d9a8681a155b0f953/comments", "author": null, "committer": null, "parents": [{"sha": "5129b43be675171c2e4742ae4b1e073249314818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5129b43be675171c2e4742ae4b1e073249314818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5129b43be675171c2e4742ae4b1e073249314818"}], "stats": {"total": 611, "additions": 357, "deletions": 254}, "files": [{"sha": "791f2a72e6483e57c4db6c08230baf58f877b276", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=61214be10b12d26d2ec7855d9a8681a155b0f953", "patch": "@@ -550,6 +550,10 @@ AC_CACHE_CHECK([assembler for $1], [$2],\n ifelse([$7],,,[dnl\n if test $[$2] = yes; then\n   $7\n+fi])\n+ifelse([$8],,,[dnl\n+if test $[$2] != yes; then\n+  $8\n fi])])\n \n dnl gcc_SUN_LD_VERSION"}, {"sha": "197a152dfa8d1bc97a18a0b872c15d6297696f65", "filename": "gcc/configure", "status": "modified", "additions": 105, "deletions": 1, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=61214be10b12d26d2ec7855d9a8681a155b0f953", "patch": "@@ -22432,6 +22432,7 @@ $as_echo \"#define HAVE_GAS_BALIGN_AND_P2ALIGN 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .p2align with maximum skip\" >&5\n $as_echo_n \"checking assembler for .p2align with maximum skip... \" >&6; }\n if test \"${gcc_cv_as_max_skip_p2align+set}\" = set; then :\n@@ -22467,6 +22468,7 @@ $as_echo \"#define HAVE_GAS_MAX_SKIP_P2ALIGN 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .literal16\" >&5\n $as_echo_n \"checking assembler for .literal16... \" >&6; }\n if test \"${gcc_cv_as_literal16+set}\" = set; then :\n@@ -22502,6 +22504,7 @@ $as_echo \"#define HAVE_GAS_LITERAL16 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for working .subsection -1\" >&5\n $as_echo_n \"checking assembler for working .subsection -1... \" >&6; }\n if test \"${gcc_cv_as_subsection_m1+set}\" = set; then :\n@@ -22549,6 +22552,7 @@ $as_echo \"#define HAVE_GAS_SUBSECTION_ORDERING 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .weak\" >&5\n $as_echo_n \"checking assembler for .weak... \" >&6; }\n if test \"${gcc_cv_as_weak+set}\" = set; then :\n@@ -22584,6 +22588,7 @@ $as_echo \"#define HAVE_GAS_WEAK 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .weakref\" >&5\n $as_echo_n \"checking assembler for .weakref... \" >&6; }\n if test \"${gcc_cv_as_weakref+set}\" = set; then :\n@@ -22619,6 +22624,7 @@ $as_echo \"#define HAVE_GAS_WEAKREF 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .nsubspa comdat\" >&5\n $as_echo_n \"checking assembler for .nsubspa comdat... \" >&6; }\n if test \"${gcc_cv_as_nsubspa_comdat+set}\" = set; then :\n@@ -22655,6 +22661,7 @@ $as_echo \"#define HAVE_GAS_NSUBSPA_COMDAT 1\" >>confdefs.h\n \n fi\n \n+\n # .hidden needs to be supported in both the assembler and the linker,\n # because GNU LD versions before 2.12.1 have buggy support for STV_HIDDEN.\n # This is irritatingly difficult to feature test for; we have to check the\n@@ -22702,6 +22709,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_hidden\" >&5\n $as_echo \"$gcc_cv_as_hidden\" >&6; }\n \n+\n case \"${target}\" in\n   *-*-darwin*)\n     # Darwin as has some visibility support, though with a different syntax.\n@@ -23156,6 +23164,11 @@ if test $gcc_cv_as_leb128 = yes; then\n \n $as_echo \"#define HAVE_AS_LEB128 1\" >>confdefs.h\n \n+fi\n+if test $gcc_cv_as_leb128 != yes; then\n+\n+$as_echo \"#define HAVE_AS_LEB128 0\" >>confdefs.h\n+\n fi\n \n # Check if we have assembler support for unwind directives.\n@@ -23236,6 +23249,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_cfi_directive\" >&5\n $as_echo \"$gcc_cv_as_cfi_directive\" >&6; }\n \n+\n if test $gcc_cv_as_cfi_directive = yes && test x$gcc_cv_objdump != x; then\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for working cfi advance\" >&5\n $as_echo_n \"checking assembler for working cfi advance... \" >&6; }\n@@ -23273,6 +23287,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_cfi_advance_working\" >&5\n $as_echo \"$gcc_cv_as_cfi_advance_working\" >&6; }\n \n+\n else\n   # no objdump, err on the side of caution\n   gcc_cv_as_cfi_advance_working=no\n@@ -23316,6 +23331,7 @@ fi\n $as_echo \"$gcc_cv_as_cfi_personality_directive\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_GAS_CFI_PERSONALITY_DIRECTIVE `if test $gcc_cv_as_cfi_personality_directive = yes;\n     then echo 1; else echo 0; fi`\n@@ -23368,6 +23384,7 @@ $as_echo \"$gcc_cv_as_cfi_sections_directive\" >&6; }\n \n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_GAS_CFI_SECTIONS_DIRECTIVE `if test $gcc_cv_as_cfi_sections_directive = yes;\n     then echo 1; else echo 0; fi`\n@@ -23471,6 +23488,7 @@ fi\n $as_echo \"$gcc_cv_as_eh_frame\" >&6; }\n \n \n+\n if test $gcc_cv_as_eh_frame = buggy; then\n \n $as_echo \"#define USE_AS_TRADITIONAL_FORMAT 1\" >>confdefs.h\n@@ -23508,6 +23526,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_shf_merge\" >&5\n $as_echo \"$gcc_cv_as_shf_merge\" >&6; }\n \n+\n if test $gcc_cv_as_shf_merge = no; then\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for section merging support\" >&5\n $as_echo_n \"checking assembler for section merging support... \" >&6; }\n@@ -23540,6 +23559,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_shf_merge\" >&5\n $as_echo \"$gcc_cv_as_shf_merge\" >&6; }\n \n+\n fi\n \n cat >>confdefs.h <<_ACEOF\n@@ -23578,6 +23598,7 @@ $as_echo \"#define HAVE_AS_STABS_DIRECTIVE 1\" >>confdefs.h\n \n fi\n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for COMDAT group support (GNU as)\" >&5\n $as_echo_n \"checking assembler for COMDAT group support (GNU as)... \" >&6; }\n if test \"${gcc_cv_as_comdat_group+set}\" = set; then :\n@@ -23609,6 +23630,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_comdat_group\" >&5\n $as_echo \"$gcc_cv_as_comdat_group\" >&6; }\n \n+\n if test $gcc_cv_as_comdat_group = yes; then\n   gcc_cv_as_comdat_group_percent=no\n   gcc_cv_as_comdat_group_group=no\n@@ -23644,6 +23666,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_comdat_group_percent\" >&5\n $as_echo \"$gcc_cv_as_comdat_group_percent\" >&6; }\n \n+\n  if test $gcc_cv_as_comdat_group_percent = yes; then\n    gcc_cv_as_comdat_group_group=no\n  else\n@@ -23694,6 +23717,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_comdat_group_group\" >&5\n $as_echo \"$gcc_cv_as_comdat_group_group\" >&6; }\n \n+\n        ;;\n    esac\n    if test -z \"${gcc_cv_as_comdat_group_group+set}\"; then\n@@ -23801,6 +23825,7 @@ $as_echo \"#define HAVE_GAS_DISCRIMINATOR 1\" >>confdefs.h\n \n fi\n \n+\n # Thread-local storage - the check is heavily parameterized.\n conftest_s=\n tls_first_major=\n@@ -24298,6 +24323,7 @@ $as_echo \"$gcc_cv_as_tls\" >&6; }\n if test $gcc_cv_as_tls = yes; then\n   set_have_as_tls=yes\n fi\n+\n fi\n if test $set_have_as_tls = yes ; then\n \n@@ -24471,6 +24497,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_aarch64_mabi\" >&5\n $as_echo \"$gcc_cv_as_aarch64_mabi\" >&6; }\n \n+\n     if test x$gcc_cv_as_aarch64_mabi = xyes; then\n \n $as_echo \"#define HAVE_AS_MABI_OPTION 1\" >>confdefs.h\n@@ -24530,6 +24557,7 @@ if test $gcc_cv_as_aarch64_picreloc = yes; then\n $as_echo \"#define HAVE_AS_SMALL_PIC_RELOCS 1\" >>confdefs.h\n \n fi\n+\n     # Enable default workaround for AArch64 Cortex-A53 erratum 835769.\n     # Check whether --enable-fix-cortex-a53-835769 was given.\n if test \"${enable_fix_cortex_a53_835769+set}\" = set; then :\n@@ -24618,6 +24646,7 @@ if test $gcc_cv_as_alpha_explicit_relocs = yes; then\n $as_echo \"#define HAVE_AS_EXPLICIT_RELOCS 1\" >>confdefs.h\n \n fi\n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for jsrdirect relocation support\" >&5\n $as_echo_n \"checking assembler for jsrdirect relocation support... \" >&6; }\n if test \"${gcc_cv_as_alpha_jsrdirect_relocs+set}\" = set; then :\n@@ -24655,6 +24684,7 @@ if test $gcc_cv_as_alpha_jsrdirect_relocs = yes; then\n $as_echo \"#define HAVE_AS_JSRDIRECT_RELOCS 1\" >>confdefs.h\n \n fi\n+\n     ;;\n \n   avr-*-*)\n@@ -24689,6 +24719,7 @@ $as_echo \"#define HAVE_AS_AVR_MLINK_RELAX_OPTION 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -mrmw option\" >&5\n $as_echo_n \"checking assembler for -mrmw option... \" >&6; }\n if test \"${gcc_cv_as_avr_mrmw+set}\" = set; then :\n@@ -24719,6 +24750,7 @@ if test $gcc_cv_as_avr_mrmw = yes; then\n $as_echo \"#define HAVE_AS_AVR_MRMW_OPTION 1\" >>confdefs.h\n \n fi\n+\n     ;;\n \n   cris-*-*)\n@@ -24756,6 +24788,7 @@ if test $gcc_cv_as_cris_no_mul_bug = yes; then\n $as_echo \"#define HAVE_AS_NO_MUL_BUG_ABORT_OPTION 1\" >>confdefs.h\n \n fi\n+\n     ;;\n \n   sparc*-*-*)\n@@ -24790,6 +24823,7 @@ $as_echo \"#define HAVE_AS_REGISTER_PSEUDO_OP 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -relax option\" >&5\n $as_echo_n \"checking assembler for -relax option... \" >&6; }\n if test \"${gcc_cv_as_sparc_relax+set}\" = set; then :\n@@ -24821,6 +24855,7 @@ $as_echo \"#define HAVE_AS_RELAX_OPTION 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for GOTDATA_OP relocs\" >&5\n $as_echo_n \"checking assembler for GOTDATA_OP relocs... \" >&6; }\n if test \"${gcc_cv_as_sparc_gotdata_op+set}\" = set; then :\n@@ -24870,6 +24905,7 @@ $as_echo \"#define HAVE_AS_SPARC_GOTDATA_OP 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for unaligned pcrel relocs\" >&5\n $as_echo_n \"checking assembler for unaligned pcrel relocs... \" >&6; }\n if test \"${gcc_cv_as_sparc_ua_pcrel+set}\" = set; then :\n@@ -24960,7 +24996,9 @@ $as_echo \"#define HAVE_AS_SPARC_UA_PCREL_HIDDEN 1\" >>confdefs.h\n \n fi\n \n-fi # unaligned pcrel relocs\n+\n+fi\n+ # unaligned pcrel relocs\n \n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for offsetable %lo()\" >&5\n $as_echo_n \"checking assembler for offsetable %lo()... \" >&6; }\n@@ -24999,6 +25037,7 @@ $as_echo \"#define HAVE_AS_OFFSETABLE_LO10 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for FMAF, HPC, and VIS 3.0 instructions\" >&5\n $as_echo_n \"checking assembler for FMAF, HPC, and VIS 3.0 instructions... \" >&6; }\n if test \"${gcc_cv_as_sparc_fmaf+set}\" = set; then :\n@@ -25037,6 +25076,7 @@ $as_echo \"#define HAVE_AS_FMAF_HPC_VIS3 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for SPARC4 instructions\" >&5\n $as_echo_n \"checking assembler for SPARC4 instructions... \" >&6; }\n if test \"${gcc_cv_as_sparc_sparc4+set}\" = set; then :\n@@ -25079,6 +25119,7 @@ $as_echo \"#define HAVE_AS_SPARC4 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for SPARC5 and VIS 4.0 instructions\" >&5\n $as_echo_n \"checking assembler for SPARC5 and VIS 4.0 instructions... \" >&6; }\n if test \"${gcc_cv_as_sparc_sparc5+set}\" = set; then :\n@@ -25115,6 +25156,7 @@ $as_echo \"#define HAVE_AS_SPARC5_VIS4 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for LEON instructions\" >&5\n $as_echo_n \"checking assembler for LEON instructions... \" >&6; }\n if test \"${gcc_cv_as_sparc_leon+set}\" = set; then :\n@@ -25151,6 +25193,7 @@ if test $gcc_cv_as_sparc_leon = yes; then\n $as_echo \"#define HAVE_AS_LEON 1\" >>confdefs.h\n \n fi\n+\n     ;;\n \n   i[34567]86-*-* | x86_64-*-*)\n@@ -25216,6 +25259,7 @@ fi\n $as_echo \"$gcc_cv_as_comm_has_align\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_GAS_ALIGNED_COMM `if test $gcc_cv_as_comm_has_align = yes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -25262,6 +25306,7 @@ if test $gcc_cv_as_ix86_pe_secrel32 = yes; then\n $as_echo \"#define HAVE_GAS_PE_SECREL32_RELOC 1\" >>confdefs.h\n \n fi\n+\n \t# Test if the assembler supports the extended form of the .section\n \t# directive that specifies section alignment.  LTO support uses this,\n \t# but normally only after installation, so we warn but don't fail the\n@@ -25296,6 +25341,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_section_has_align\" >&5\n $as_echo \"$gcc_cv_as_section_has_align\" >&6; }\n \n+\n \tif test x$gcc_cv_as_section_has_align != xyes; then\n \t  case \",$enable_languages,\" in\n \t    *,lto,*)\n@@ -25341,6 +25387,7 @@ fi\n $as_echo \"$gcc_cv_as_section_has_e\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_GAS_SECTION_EXCLUDE `if test $gcc_cv_as_section_has_e = yes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -25377,6 +25424,7 @@ $as_echo \"#define HAVE_AS_IX86_FILDS 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for fildq and fistpq mnemonics\" >&5\n $as_echo_n \"checking assembler for fildq and fistpq mnemonics... \" >&6; }\n if test \"${gcc_cv_as_ix86_fildq+set}\" = set; then :\n@@ -25408,6 +25456,7 @@ $as_echo \"#define HAVE_AS_IX86_FILDQ 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for cmov syntax\" >&5\n $as_echo_n \"checking assembler for cmov syntax... \" >&6; }\n if test \"${gcc_cv_as_ix86_cmov_sun_syntax+set}\" = set; then :\n@@ -25439,6 +25488,7 @@ $as_echo \"#define HAVE_AS_IX86_CMOV_SUN_SYNTAX 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for ffreep mnemonic\" >&5\n $as_echo_n \"checking assembler for ffreep mnemonic... \" >&6; }\n if test \"${gcc_cv_as_ix86_ffreep+set}\" = set; then :\n@@ -25470,6 +25520,7 @@ $as_echo \"#define HAVE_AS_IX86_FFREEP 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .quad directive\" >&5\n $as_echo_n \"checking assembler for .quad directive... \" >&6; }\n if test \"${gcc_cv_as_ix86_quad+set}\" = set; then :\n@@ -25501,6 +25552,7 @@ $as_echo \"#define HAVE_AS_IX86_QUAD 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for sahf mnemonic\" >&5\n $as_echo_n \"checking assembler for sahf mnemonic... \" >&6; }\n if test \"${gcc_cv_as_ix86_sahf+set}\" = set; then :\n@@ -25533,6 +25585,7 @@ $as_echo \"#define HAVE_AS_IX86_SAHF 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for interunit movq mnemonic\" >&5\n $as_echo_n \"checking assembler for interunit movq mnemonic... \" >&6; }\n if test \"${gcc_cv_as_ix86_interunit_movq+set}\" = set; then :\n@@ -25562,6 +25615,7 @@ fi\n $as_echo \"$gcc_cv_as_ix86_interunit_movq\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_IX86_INTERUNIT_MOVQ `if test $gcc_cv_as_ix86_interunit_movq = yes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -25598,6 +25652,7 @@ $as_echo \"#define HAVE_AS_IX86_HLE 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for swap suffix\" >&5\n $as_echo_n \"checking assembler for swap suffix... \" >&6; }\n if test \"${gcc_cv_as_ix86_swap+set}\" = set; then :\n@@ -25629,6 +25684,7 @@ $as_echo \"#define HAVE_AS_IX86_SWAP 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for different section symbol subtraction\" >&5\n $as_echo_n \"checking assembler for different section symbol subtraction... \" >&6; }\n if test \"${gcc_cv_as_ix86_diff_sect_delta+set}\" = set; then :\n@@ -25666,6 +25722,7 @@ $as_echo \"#define HAVE_AS_IX86_DIFF_SECT_DELTA 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for rep and lock prefix\" >&5\n $as_echo_n \"checking assembler for rep and lock prefix... \" >&6; }\n if test \"${gcc_cv_as_ix86_rep_lock_prefix+set}\" = set; then :\n@@ -25703,6 +25760,7 @@ $as_echo \"#define HAVE_AS_IX86_REP_LOCK_PREFIX 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for ud2 mnemonic\" >&5\n $as_echo_n \"checking assembler for ud2 mnemonic... \" >&6; }\n if test \"${gcc_cv_as_ix86_ud2+set}\" = set; then :\n@@ -25734,6 +25792,7 @@ $as_echo \"#define HAVE_AS_IX86_UD2 1\" >>confdefs.h\n \n fi\n \n+\n     # Enforce 32-bit output with gas and gld.\n     if test x$gas = xyes; then\n       as_ix86_gas_32_opt=\"--32\"\n@@ -25781,6 +25840,7 @@ $as_echo \"#define HAVE_AS_IX86_TLSGDPLT 1\" >>confdefs.h\n \n fi\n \n+\n     conftest_s='\n \t.section .tdata,\"aw'$tls_section_flag'\",@progbits\n tls_ld:\n@@ -25818,6 +25878,7 @@ fi\n $as_echo \"$gcc_cv_as_ix86_tlsldmplt\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_IX86_TLSLDMPLT `if test $gcc_cv_as_ix86_tlsldmplt = yes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -25868,6 +25929,7 @@ fi\n $as_echo \"$gcc_cv_as_ix86_tlsldm\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_IX86_TLSLDM `if test $gcc_cv_as_ix86_tlsldm = yes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -25921,6 +25983,7 @@ fi\n $as_echo \"$gcc_cv_as_ix86_got32x\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_IX86_GOT32X `if test x\"$gcc_cv_as_ix86_got32x\" = xyes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -25961,6 +26024,7 @@ fi\n $as_echo \"$gcc_cv_as_ix86_gotoff_in_data\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_GOTOFF_IN_DATA `if test $gcc_cv_as_ix86_gotoff_in_data = yes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -26015,6 +26079,7 @@ fi\n $as_echo \"$gcc_cv_as_ix86_tls_get_addr_via_got\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_IX86_TLS_GET_ADDR_GOT `if test x\"$gcc_cv_as_ix86_tls_get_addr_via_got\" = xyes; then echo 1; else echo 0; fi`\n _ACEOF\n@@ -26060,6 +26125,7 @@ $as_echo \"#define HAVE_AS_LTOFFX_LDXMOV_RELOCS 1\" >>confdefs.h\n \n fi\n \n+\n     ;;\n \n   powerpc*-*-*)\n@@ -26092,6 +26158,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_machine_directive\" >&5\n $as_echo \"$gcc_cv_as_machine_directive\" >&6; }\n \n+\n \tif test x$gcc_cv_as_machine_directive != xyes; then\n \t  echo \"*** This target requires an assembler supporting \\\".machine\\\"\" >&2\n \t  echo you can get it from: ftp://gcc.gnu.org/pub/gcc/infrastructure/cctools-528.5.dmg >&2\n@@ -26146,6 +26213,7 @@ $as_echo \"#define HAVE_AS_MFCRF 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr5\"\n \t.csect .text[PR]\n@@ -26190,6 +26258,7 @@ $as_echo \"#define HAVE_AS_POPCNTB 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr5x\"\n \t.csect .text[PR]\n@@ -26234,6 +26303,7 @@ $as_echo \"#define HAVE_AS_FPRND 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr6\"\n \t.csect .text[PR]\n@@ -26278,6 +26348,7 @@ $as_echo \"#define HAVE_AS_MFPGPR 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.csect .text[PR]\n LCF..0:\n@@ -26326,6 +26397,7 @@ $as_echo \"#define HAVE_AS_REL16 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr6\"\n \t.csect .text[PR]\n@@ -26370,6 +26442,7 @@ $as_echo \"#define HAVE_AS_CMPB 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr6\"\n \t.csect .text[PR]\n@@ -26414,6 +26487,7 @@ $as_echo \"#define HAVE_AS_DFP 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr7\"\n \t.csect .text[PR]\n@@ -26458,6 +26532,7 @@ $as_echo \"#define HAVE_AS_VSX 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr7\"\n \t.csect .text[PR]\n@@ -26502,6 +26577,7 @@ $as_echo \"#define HAVE_AS_POPCNTD 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr8\"\n \t.csect .text[PR]';;\n@@ -26544,6 +26620,7 @@ $as_echo \"#define HAVE_AS_POWER8 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr9\"\n \t.csect .text[PR]';;\n@@ -26586,6 +26663,7 @@ $as_echo \"#define HAVE_AS_POWER9 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.csect .text[PR]\n \tlwsync';;\n@@ -26628,6 +26706,7 @@ $as_echo \"#define HAVE_AS_LWSYNC 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"476\"\n \t.csect .text[PR]\n@@ -26672,6 +26751,7 @@ $as_echo \"#define HAVE_AS_DCI 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .gnu_attribute support\" >&5\n $as_echo_n \"checking assembler for .gnu_attribute support... \" >&6; }\n if test \"${gcc_cv_as_powerpc_gnu_attribute+set}\" = set; then :\n@@ -26707,6 +26787,7 @@ $as_echo \"#define HAVE_AS_GNU_ATTRIBUTE 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for tls marker support\" >&5\n $as_echo_n \"checking assembler for tls marker support... \" >&6; }\n if test \"${gcc_cv_as_powerpc_tls_markers+set}\" = set; then :\n@@ -26742,6 +26823,7 @@ $as_echo \"#define HAVE_AS_TLS_MARKERS 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for prologue entry point marker support\" >&5\n $as_echo_n \"checking assembler for prologue entry point marker support... \" >&6; }\n if test \"${gcc_cv_as_powerpc_entry_markers+set}\" = set; then :\n@@ -26777,6 +26859,7 @@ $as_echo \"#define HAVE_AS_ENTRY_MARKERS 1\" >>confdefs.h\n \n fi\n \n+\n     case $target in\n       *-*-aix*)\n \t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for AIX .ref support\" >&5\n@@ -26819,6 +26902,7 @@ $as_echo \"#define HAVE_AS_REF 1\" >>confdefs.h\n \n fi\n \n+\n \t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for AIX DWARF location lists section support\" >&5\n $as_echo_n \"checking assembler for AIX DWARF location lists section support... \" >&6; }\n if test \"${gcc_cv_as_aix_dwloc+set}\" = set; then :\n@@ -26856,6 +26940,7 @@ if test $gcc_cv_as_aix_dwloc = yes; then\n $as_echo \"#define HAVE_XCOFF_DWARF_EXTRAS 1\" >>confdefs.h\n \n fi\n+\n \t;;\n     esac\n     ;;\n@@ -26897,6 +26982,7 @@ if test $gcc_cv_as_mips_explicit_relocs = yes; then\n        fi\n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -mno-shared support\" >&5\n $as_echo_n \"checking assembler for -mno-shared support... \" >&6; }\n if test \"${gcc_cv_as_mips_no_shared+set}\" = set; then :\n@@ -26932,6 +27018,7 @@ $as_echo \"#define HAVE_AS_NO_SHARED 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .gnu_attribute support\" >&5\n $as_echo_n \"checking assembler for .gnu_attribute support... \" >&6; }\n if test \"${gcc_cv_as_mips_gnu_attribute+set}\" = set; then :\n@@ -26967,6 +27054,7 @@ $as_echo \"#define HAVE_AS_GNU_ATTRIBUTE 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .module support\" >&5\n $as_echo_n \"checking assembler for .module support... \" >&6; }\n if test \"${gcc_cv_as_mips_dot_module+set}\" = set; then :\n@@ -26998,6 +27086,7 @@ if test $gcc_cv_as_mips_dot_module = yes; then\n $as_echo \"#define HAVE_AS_DOT_MODULE 1\" >>confdefs.h\n \n fi\n+\n     if test x$gcc_cv_as_mips_dot_module = xno \\\n        && test x$with_fp_32 != x; then\n       as_fn_error \"Requesting --with-fp-32= requires assembler support for .module.\" \"$LINENO\" 5\n@@ -27034,6 +27123,7 @@ $as_echo \"#define HAVE_GAS_MICROMIPS 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .dtprelword support\" >&5\n $as_echo_n \"checking assembler for .dtprelword support... \" >&6; }\n if test \"${gcc_cv_as_mips_dtprelword+set}\" = set; then :\n@@ -27073,6 +27163,7 @@ $as_echo \"#define HAVE_AS_DTPRELWORD 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for DSPR1 mult with four accumulators support\" >&5\n $as_echo_n \"checking assembler for DSPR1 mult with four accumulators support... \" >&6; }\n if test \"${gcc_cv_as_mips_dspr1_mult+set}\" = set; then :\n@@ -27112,6 +27203,7 @@ $as_echo \"#define HAVE_AS_DSPR1_MULT 1\" >>confdefs.h\n \n fi\n \n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler and linker for explicit JALR relocation\" >&5\n $as_echo_n \"checking assembler and linker for explicit JALR relocation... \" >&6; }\n     gcc_cv_as_ld_jalr_reloc=no\n@@ -27231,6 +27323,7 @@ if test $gcc_cv_as_mips_nan = yes; then\n $as_echo \"#define HAVE_AS_NAN 1\" >>confdefs.h\n \n fi\n+\n     if test x$gcc_cv_as_mips_nan = xno \\\n        && test x$with_nan != x; then\n       as_fn_error \"Requesting --with-nan= requires assembler support for -mnan=\" \"$LINENO\" 5\n@@ -27271,6 +27364,7 @@ if test $gcc_cv_as_s390_gnu_attribute = yes; then\n $as_echo \"#define HAVE_AS_GNU_ATTRIBUTE 1\" >>confdefs.h\n \n fi\n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .machine and .machinemode support\" >&5\n $as_echo_n \"checking assembler for .machine and .machinemode support... \" >&6; }\n if test \"${gcc_cv_as_s390_machine_machinemode+set}\" = set; then :\n@@ -27308,6 +27402,7 @@ if test $gcc_cv_as_s390_machine_machinemode = yes; then\n $as_echo \"#define HAVE_AS_MACHINE_MACHINEMODE 1\" >>confdefs.h\n \n fi\n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for architecture modifiers support\" >&5\n $as_echo_n \"checking assembler for architecture modifiers support... \" >&6; }\n if test \"${gcc_cv_as_s390_architecture_modifiers+set}\" = set; then :\n@@ -27342,6 +27437,7 @@ if test $gcc_cv_as_s390_architecture_modifiers = yes; then\n $as_echo \"#define HAVE_AS_ARCHITECTURE_MODIFIERS 1\" >>confdefs.h\n \n fi\n+\n     ;;\n esac\n \n@@ -27422,6 +27518,7 @@ fi\n $as_echo \"$gcc_cv_as_dwarf2_debug_line\" >&6; }\n \n \n+\n # The .debug_line file table must be in the exact order that\n # we specified the files, since these indices are also used\n # by DW_AT_decl_file.  Approximate this test by testing if\n@@ -27454,6 +27551,7 @@ fi\n $as_echo \"$gcc_cv_as_dwarf2_file_buggy\" >&6; }\n \n \n+\n  if test $gcc_cv_as_dwarf2_debug_line = yes \\\n  && test $gcc_cv_as_dwarf2_file_buggy = no; then\n \n@@ -27497,6 +27595,7 @@ $as_echo \"#define HAVE_AS_GDWARF2_DEBUG_FLAG 1\" >>confdefs.h\n \n fi\n \n+\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for --gstabs option\" >&5\n $as_echo_n \"checking assembler for --gstabs option... \" >&6; }\n if test \"${gcc_cv_as_gstabs_flag+set}\" = set; then :\n@@ -27533,6 +27632,7 @@ $as_echo \"#define HAVE_AS_GSTABS_DEBUG_FLAG 1\" >>confdefs.h\n \n fi\n \n+\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for --debug-prefix-map option\" >&5\n $as_echo_n \"checking assembler for --debug-prefix-map option... \" >&6; }\n if test \"${gcc_cv_as_debug_prefix_map_flag+set}\" = set; then :\n@@ -27567,6 +27667,7 @@ if test $gcc_cv_as_debug_prefix_map_flag = yes; then\n $as_echo \"#define HAVE_AS_DEBUG_PREFIX_MAP 1\" >>confdefs.h\n \n fi\n+\n fi\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for compressed debug sections\" >&5\n@@ -27617,6 +27718,7 @@ fi\n $as_echo \"$gcc_cv_as_compress_debug\" >&6; }\n \n \n+\n cat >>confdefs.h <<_ACEOF\n #define HAVE_AS_COMPRESS_DEBUG $gcc_cv_as_compress_debug\n _ACEOF\n@@ -27663,6 +27765,7 @@ $as_echo \"#define HAVE_GAS_LCOMM_WITH_ALIGNMENT 1\" >>confdefs.h\n \n fi\n \n+\n if test x$with_sysroot = x && test x$host = x$target \\\n    && test \"$prefix\" != \"/usr\" && test \"x$prefix\" != \"x$local_prefix\" \\\n    && test \"$prefix\" != \"NONE\"; then\n@@ -27759,6 +27862,7 @@ if test $glibc_version_major -gt 2 \\\n fi\n \n fi\n+\n fi\n \n if test x$enable_gnu_unique_object = xyes; then"}, {"sha": "140b9f9ac9078e4fbe2b8342bccb1ca7ed41c3a1", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=61214be10b12d26d2ec7855d9a8681a155b0f953", "patch": "@@ -2753,6 +2753,8 @@ L2:],\n     fi\n   fi]],\n   [AC_DEFINE(HAVE_AS_LEB128, 1,\n+    [Define if your assembler supports .sleb128 and .uleb128.])],\n+  [AC_DEFINE(HAVE_AS_LEB128, 0,\n     [Define if your assembler supports .sleb128 and .uleb128.])])\n \n # Check if we have assembler support for unwind directives."}, {"sha": "922a0c1d58960d09f518944f91b6b11d2f3334e2", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 92, "deletions": 92, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=61214be10b12d26d2ec7855d9a8681a155b0f953", "patch": "@@ -622,53 +622,55 @@ dw2_asm_output_data_uleb128 (unsigned HOST_WIDE_INT value,\n \n   va_start (ap, comment);\n \n-#ifdef HAVE_AS_LEB128\n-  fputs (\"\\t.uleb128 \", asm_out_file);\n-  fprint_whex (asm_out_file, value);\n-\n-  if (flag_debug_asm && comment)\n+  if (HAVE_AS_LEB128)\n     {\n-      fprintf (asm_out_file, \"\\t%s \", ASM_COMMENT_START);\n-      vfprintf (asm_out_file, comment, ap);\n+      fputs (\"\\t.uleb128 \", asm_out_file);\n+      fprint_whex (asm_out_file, value);\n+\n+      if (flag_debug_asm && comment)\n+\t{\n+\t  fprintf (asm_out_file, \"\\t%s \", ASM_COMMENT_START);\n+\t  vfprintf (asm_out_file, comment, ap);\n+\t}\n     }\n-#else\n-  {\n-    unsigned HOST_WIDE_INT work = value;\n-    const char *byte_op = targetm.asm_out.byte_op;\n-\n-    if (byte_op)\n-      fputs (byte_op, asm_out_file);\n-    do\n-      {\n-\tint byte = (work & 0x7f);\n-\twork >>= 7;\n-\tif (work != 0)\n-\t  /* More bytes to follow.  */\n-\t  byte |= 0x80;\n-\n-\tif (byte_op)\n-\t  {\n-\t    fprintf (asm_out_file, \"%#x\", byte);\n-\t    if (work != 0)\n-\t      fputc (',', asm_out_file);\n-\t  }\n-\telse\n-\t  assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n-      }\n-    while (work != 0);\n-\n-  if (flag_debug_asm)\n+  else\n     {\n-      fprintf (asm_out_file, \"\\t%s uleb128 \" HOST_WIDE_INT_PRINT_HEX,\n-\t       ASM_COMMENT_START, value);\n-      if (comment)\n+      unsigned HOST_WIDE_INT work = value;\n+      const char *byte_op = targetm.asm_out.byte_op;\n+\n+      if (byte_op)\n+\tfputs (byte_op, asm_out_file);\n+      do\n \t{\n-\t  fputs (\"; \", asm_out_file);\n-\t  vfprintf (asm_out_file, comment, ap);\n+\t  int byte = (work & 0x7f);\n+\t  work >>= 7;\n+\t  if (work != 0)\n+\t    /* More bytes to follow.  */\n+\t    byte |= 0x80;\n+\n+\t  if (byte_op)\n+\t    {\n+\t      fprintf (asm_out_file, \"%#x\", byte);\n+\t      if (work != 0)\n+\t\tfputc (',', asm_out_file);\n+\t    }\n+\t  else\n+\t    assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n+\t}\n+      while (work != 0);\n+\n+      if (flag_debug_asm)\n+\t{\n+\t  fprintf (asm_out_file, \"\\t%s uleb128 \" HOST_WIDE_INT_PRINT_HEX,\n+\t\t   ASM_COMMENT_START, value);\n+\t  if (comment)\n+\t    {\n+\t      fputs (\"; \", asm_out_file);\n+\t      vfprintf (asm_out_file, comment, ap);\n+\t    }\n \t}\n     }\n-  }\n-#endif\n+\n   putc ('\\n', asm_out_file);\n \n   va_end (ap);\n@@ -707,55 +709,57 @@ dw2_asm_output_data_sleb128 (HOST_WIDE_INT value,\n \n   va_start (ap, comment);\n \n-#ifdef HAVE_AS_LEB128\n-  fprintf (asm_out_file, \"\\t.sleb128 \" HOST_WIDE_INT_PRINT_DEC, value);\n-\n-  if (flag_debug_asm && comment)\n+  if (HAVE_AS_LEB128)\n     {\n-      fprintf (asm_out_file, \"\\t%s \", ASM_COMMENT_START);\n-      vfprintf (asm_out_file, comment, ap);\n+      fprintf (asm_out_file, \"\\t.sleb128 \" HOST_WIDE_INT_PRINT_DEC, value);\n+\n+      if (flag_debug_asm && comment)\n+\t{\n+\t  fprintf (asm_out_file, \"\\t%s \", ASM_COMMENT_START);\n+\t  vfprintf (asm_out_file, comment, ap);\n+\t}\n     }\n-#else\n-  {\n-    HOST_WIDE_INT work = value;\n-    int more, byte;\n-    const char *byte_op = targetm.asm_out.byte_op;\n-\n-    if (byte_op)\n-      fputs (byte_op, asm_out_file);\n-    do\n-      {\n-\tbyte = (work & 0x7f);\n-\t/* arithmetic shift */\n-\twork >>= 7;\n-\tmore = !((work == 0 && (byte & 0x40) == 0)\n-\t\t || (work == -1 && (byte & 0x40) != 0));\n-\tif (more)\n-\t  byte |= 0x80;\n-\n-\tif (byte_op)\n-\t  {\n-\t    fprintf (asm_out_file, \"%#x\", byte);\n-\t    if (more)\n-\t      fputc (',', asm_out_file);\n-\t  }\n-\telse\n-\t  assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n-      }\n-    while (more);\n-\n-  if (flag_debug_asm)\n+  else\n     {\n-      fprintf (asm_out_file, \"\\t%s sleb128 \" HOST_WIDE_INT_PRINT_DEC,\n-\t       ASM_COMMENT_START, value);\n-      if (comment)\n+      HOST_WIDE_INT work = value;\n+      int more, byte;\n+      const char *byte_op = targetm.asm_out.byte_op;\n+\n+      if (byte_op)\n+\tfputs (byte_op, asm_out_file);\n+      do\n \t{\n-\t  fputs (\"; \", asm_out_file);\n-\t  vfprintf (asm_out_file, comment, ap);\n+\t  byte = (work & 0x7f);\n+\t  /* arithmetic shift */\n+\t  work >>= 7;\n+\t  more = !((work == 0 && (byte & 0x40) == 0)\n+\t\t   || (work == -1 && (byte & 0x40) != 0));\n+\t  if (more)\n+\t    byte |= 0x80;\n+\n+\t  if (byte_op)\n+\t    {\n+\t      fprintf (asm_out_file, \"%#x\", byte);\n+\t      if (more)\n+\t\tfputc (',', asm_out_file);\n+\t    }\n+\t  else\n+\t    assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n+\t}\n+      while (more);\n+\n+      if (flag_debug_asm)\n+\t{\n+\t  fprintf (asm_out_file, \"\\t%s sleb128 \" HOST_WIDE_INT_PRINT_DEC,\n+\t\t   ASM_COMMENT_START, value);\n+\t  if (comment)\n+\t    {\n+\t      fputs (\"; \", asm_out_file);\n+\t      vfprintf (asm_out_file, comment, ap);\n+\t    }\n \t}\n     }\n-  }\n-#endif\n+\n   fputc ('\\n', asm_out_file);\n \n   va_end (ap);\n@@ -770,14 +774,12 @@ dw2_asm_output_delta_uleb128 (const char *lab1 ATTRIBUTE_UNUSED,\n \n   va_start (ap, comment);\n \n-#ifdef HAVE_AS_LEB128\n+  gcc_assert (HAVE_AS_LEB128);\n+\n   fputs (\"\\t.uleb128 \", asm_out_file);\n   assemble_name (asm_out_file, lab1);\n   putc ('-', asm_out_file);\n   assemble_name (asm_out_file, lab2);\n-#else\n-  gcc_unreachable ();\n-#endif\n \n   if (flag_debug_asm && comment)\n     {\n@@ -800,14 +802,12 @@ dw2_asm_output_delta_sleb128 (const char *lab1 ATTRIBUTE_UNUSED,\n \n   va_start (ap, comment);\n \n-#ifdef HAVE_AS_LEB128\n+  gcc_assert (HAVE_AS_LEB128);\n+\n   fputs (\"\\t.sleb128 \", asm_out_file);\n   assemble_name (asm_out_file, lab1);\n   putc ('-', asm_out_file);\n   assemble_name (asm_out_file, lab2);\n-#else\n-  gcc_unreachable ();\n-#endif\n \n   if (flag_debug_asm && comment)\n     {"}, {"sha": "58a5e1ad2ff7ae3f8bbb76c28601e7c25a6869e7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 74, "deletions": 79, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=61214be10b12d26d2ec7855d9a8681a155b0f953", "patch": "@@ -9550,10 +9550,8 @@ output_loc_list (dw_loc_list_ref list_head)\n   ASM_OUTPUT_LABEL (asm_out_file, list_head->ll_symbol);\n \n   dw_loc_list_ref curr = list_head;\n-#ifdef HAVE_AS_LEB128\n   const char *last_section = NULL;\n   const char *base_label = NULL;\n-#endif\n \n   /* Walk the location list, and output each range + expression.  */\n   for (curr = list_head; curr != NULL; curr = curr->dw_loc_next)\n@@ -9588,8 +9586,7 @@ output_loc_list (dw_loc_list_ref list_head)\n \t\t\t\t\t    \"Location list length (%s)\",\n \t\t\t\t\t    list_head->ll_symbol);\n \t    }\n-#ifdef HAVE_AS_LEB128\n-\t  else if (!have_multiple_function_sections)\n+\t  else if (!have_multiple_function_sections && HAVE_AS_LEB128)\n \t    {\n \t      /* If all code is in .text section, the base address is\n \t\t already provided by the CU attributes.  Use\n@@ -9605,7 +9602,7 @@ output_loc_list (dw_loc_list_ref list_head)\n \t\t\t\t\t    \"Location list end address (%s)\",\n \t\t\t\t\t    list_head->ll_symbol);\n \t    }\n-\t  else\n+\t  else if (HAVE_AS_LEB128)\n \t    {\n \t      /* Otherwise, find out how many consecutive entries could share\n \t\t the same base entry.  If just one, emit DW_LLE_start_length,\n@@ -9668,7 +9665,6 @@ output_loc_list (dw_loc_list_ref list_head)\n \t\t\t\t\t\t\"(%s)\", list_head->ll_symbol);\n \t\t}\n \t    }\n-#else\n \t  /* The assembler does not support .uleb128 directive.  Emit\n \t     DW_LLE_start_end with a pair of absolute addresses.  */\n \t  else\n@@ -9683,7 +9679,6 @@ output_loc_list (dw_loc_list_ref list_head)\n \t\t\t\t   \"Location list end address (%s)\",\n \t\t\t\t   list_head->ll_symbol);\n \t    }\n-#endif\n \t}\n       else if (dwarf_split_debug_info)\n \t{\n@@ -11054,9 +11049,7 @@ output_rnglists (void)\n   dw_ranges *r;\n   char l1[MAX_ARTIFICIAL_LABEL_BYTES];\n   char l2[MAX_ARTIFICIAL_LABEL_BYTES];\n-#ifdef HAVE_AS_LEB128\n   char basebuf[MAX_ARTIFICIAL_LABEL_BYTES];\n-#endif\n \n   switch_to_section (debug_ranges_section);\n   ASM_OUTPUT_LABEL (asm_out_file, ranges_section_label);\n@@ -11090,10 +11083,8 @@ output_rnglists (void)\n     }\n \n   const char *lab = \"\";\n-#ifdef HAVE_AS_LEB128\n   unsigned int len = vec_safe_length (ranges_table);\n   const char *base = NULL;\n-#endif\n   FOR_EACH_VEC_SAFE_ELT (ranges_table, i, r)\n     {\n       int block_num = r->num;\n@@ -11103,10 +11094,8 @@ output_rnglists (void)\n \t  ASM_OUTPUT_LABEL (asm_out_file, r->label);\n \t  lab = r->label;\n \t}\n-#ifdef HAVE_AS_LEB128\n-      if (r->label || r->maybe_new_sec)\n+      if (HAVE_AS_LEB128 && (r->label || r->maybe_new_sec))\n \tbase = NULL;\n-#endif\n       if (block_num > 0)\n \t{\n \t  char blabel[MAX_ARTIFICIAL_LABEL_BYTES];\n@@ -11115,62 +11104,65 @@ output_rnglists (void)\n \t  ASM_GENERATE_INTERNAL_LABEL (blabel, BLOCK_BEGIN_LABEL, block_num);\n \t  ASM_GENERATE_INTERNAL_LABEL (elabel, BLOCK_END_LABEL, block_num);\n \n-#ifdef HAVE_AS_LEB128\n-\t  /* If all code is in the text section, then the compilation\n-\t     unit base address defaults to DW_AT_low_pc, which is the\n-\t     base of the text section.  */\n-\t  if (!have_multiple_function_sections)\n+\t  if (HAVE_AS_LEB128)\n \t    {\n-\t      dw2_asm_output_data (1, DW_RLE_offset_pair,\n-\t\t\t\t   \"DW_RLE_offset_pair (%s)\", lab);\n-\t      dw2_asm_output_delta_uleb128 (blabel, text_section_label,\n-\t\t\t\t\t    \"Range begin address (%s)\", lab);\n-\t      dw2_asm_output_delta_uleb128 (elabel, text_section_label,\n-\t\t\t\t\t    \"Range end address (%s)\", lab);\n-\t      continue;\n-\t    }\n-\t  if (base == NULL)\n-\t    {\n-\t      dw_ranges *r2 = NULL;\n-\t      if (i < len - 1)\n-\t\tr2 = &(*ranges_table)[i + 1];\n-\t      if (r2\n-\t\t  && r2->num != 0\n-\t\t  && r2->label == NULL\n-\t\t  && !r2->maybe_new_sec)\n+\t      /* If all code is in the text section, then the compilation\n+\t\t unit base address defaults to DW_AT_low_pc, which is the\n+\t\t base of the text section.  */\n+\t      if (!have_multiple_function_sections)\n \t\t{\n-\t\t  dw2_asm_output_data (1, DW_RLE_base_address,\n-\t\t\t\t       \"DW_RLE_base_address (%s)\", lab);\n-\t\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n-\t\t\t\t       \"Base address (%s)\", lab);\n-\t\t  strcpy (basebuf, blabel);\n-\t\t  base = basebuf;\n+\t\t  dw2_asm_output_data (1, DW_RLE_offset_pair,\n+\t\t\t\t       \"DW_RLE_offset_pair (%s)\", lab);\n+\t\t  dw2_asm_output_delta_uleb128 (blabel, text_section_label,\n+\t\t\t\t\t\t\"Range begin address (%s)\", lab);\n+\t\t  dw2_asm_output_delta_uleb128 (elabel, text_section_label,\n+\t\t\t\t\t\t\"Range end address (%s)\", lab);\n+\t\t  continue;\n+\t\t}\n+\t      if (base == NULL)\n+\t\t{\n+\t\t  dw_ranges *r2 = NULL;\n+\t\t  if (i < len - 1)\n+\t\t    r2 = &(*ranges_table)[i + 1];\n+\t\t  if (r2\n+\t\t      && r2->num != 0\n+\t\t      && r2->label == NULL\n+\t\t      && !r2->maybe_new_sec)\n+\t\t    {\n+\t\t      dw2_asm_output_data (1, DW_RLE_base_address,\n+\t\t\t\t\t   \"DW_RLE_base_address (%s)\", lab);\n+\t\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n+\t\t\t\t\t   \"Base address (%s)\", lab);\n+\t\t      strcpy (basebuf, blabel);\n+\t\t      base = basebuf;\n+\t\t    }\n \t\t}\n+\t      if (base)\n+\t\t{\n+\t\t  dw2_asm_output_data (1, DW_RLE_offset_pair,\n+\t\t\t\t       \"DW_RLE_offset_pair (%s)\", lab);\n+\t\t  dw2_asm_output_delta_uleb128 (blabel, base,\n+\t\t\t\t\t\t\"Range begin address (%s)\", lab);\n+\t\t  dw2_asm_output_delta_uleb128 (elabel, base,\n+\t\t\t\t\t\t\"Range end address (%s)\", lab);\n+\t\t  continue;\n+\t\t}\n+\t      dw2_asm_output_data (1, DW_RLE_start_length,\n+\t\t\t\t   \"DW_RLE_start_length (%s)\", lab);\n+\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n+\t\t\t\t   \"Range begin address (%s)\", lab);\n+\t      dw2_asm_output_delta_uleb128 (elabel, blabel,\n+\t\t\t\t\t    \"Range length (%s)\", lab);\n \t    }\n-\t  if (base)\n+\t  else\n \t    {\n-\t      dw2_asm_output_data (1, DW_RLE_offset_pair,\n-\t\t\t\t   \"DW_RLE_offset_pair (%s)\", lab);\n-\t      dw2_asm_output_delta_uleb128 (blabel, base,\n-\t\t\t\t\t    \"Range begin address (%s)\", lab);\n-\t      dw2_asm_output_delta_uleb128 (elabel, base,\n-\t\t\t\t\t    \"Range end address (%s)\", lab);\n-\t      continue;\n+\t      dw2_asm_output_data (1, DW_RLE_start_end,\n+\t\t\t\t   \"DW_RLE_start_end (%s)\", lab);\n+\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n+\t\t\t\t   \"Range begin address (%s)\", lab);\n+\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, elabel,\n+\t\t\t\t   \"Range end address (%s)\", lab);\n \t    }\n-\t  dw2_asm_output_data (1, DW_RLE_start_length,\n-\t\t\t       \"DW_RLE_start_length (%s)\", lab);\n-\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n-\t\t\t       \"Range begin address (%s)\", lab);\n-\t  dw2_asm_output_delta_uleb128 (elabel, blabel,\n-\t\t\t\t\t\"Range length (%s)\", lab);\n-#else\n-\t  dw2_asm_output_data (1, DW_RLE_start_end,\n-\t\t\t       \"DW_RLE_start_end (%s)\", lab);\n-\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n-\t\t\t       \"Range begin address (%s)\", lab);\n-\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, elabel,\n-\t\t\t       \"Range end address (%s)\", lab);\n-#endif\n \t}\n \n       /* Negative block_num stands for an index into ranges_by_label.  */\n@@ -11182,21 +11174,24 @@ output_rnglists (void)\n \n \t  if (!have_multiple_function_sections)\n \t    gcc_unreachable ();\n-#ifdef HAVE_AS_LEB128\n-\t  dw2_asm_output_data (1, DW_RLE_start_length,\n-\t\t\t       \"DW_RLE_start_length (%s)\", lab);\n-\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n-\t\t\t       \"Range begin address (%s)\", lab);\n-\t  dw2_asm_output_delta_uleb128 (elabel, blabel,\n-\t\t\t\t\t\"Range length (%s)\", lab);\n-#else\n-\t  dw2_asm_output_data (1, DW_RLE_start_end,\n-\t\t\t       \"DW_RLE_start_end (%s)\", lab);\n-\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n-\t\t\t       \"Range begin address (%s)\", lab);\n-\t  dw2_asm_output_addr (DWARF2_ADDR_SIZE, elabel,\n-\t\t\t       \"Range end address (%s)\", lab);\n-#endif\n+\t  if (HAVE_AS_LEB128)\n+\t    {\n+\t      dw2_asm_output_data (1, DW_RLE_start_length,\n+\t\t\t\t   \"DW_RLE_start_length (%s)\", lab);\n+\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n+\t\t\t\t   \"Range begin address (%s)\", lab);\n+\t      dw2_asm_output_delta_uleb128 (elabel, blabel,\n+\t\t\t\t\t    \"Range length (%s)\", lab);\n+\t    }\n+\t  else\n+\t    {\n+\t      dw2_asm_output_data (1, DW_RLE_start_end,\n+\t\t\t\t   \"DW_RLE_start_end (%s)\", lab);\n+\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, blabel,\n+\t\t\t\t   \"Range begin address (%s)\", lab);\n+\t      dw2_asm_output_addr (DWARF2_ADDR_SIZE, elabel,\n+\t\t\t\t   \"Range end address (%s)\", lab);\n+\t    }\n \t}\n       else\n \tdw2_asm_output_data (1, DW_RLE_end_of_list,"}, {"sha": "2379fb3c090b1e03133183552ef106439f431094", "filename": "gcc/except.c", "status": "modified", "additions": 80, "deletions": 82, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61214be10b12d26d2ec7855d9a8681a155b0f953/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=61214be10b12d26d2ec7855d9a8681a155b0f953", "patch": "@@ -216,10 +216,8 @@ static int add_call_site (rtx, int, int);\n \n static void push_uleb128 (vec<uchar, va_gc> **, unsigned int);\n static void push_sleb128 (vec<uchar, va_gc> **, int);\n-#ifndef HAVE_AS_LEB128\n static int dw2_size_of_call_site_table (int);\n static int sjlj_size_of_call_site_table (void);\n-#endif\n static void dw2_output_call_site_table (int, int);\n static void sjlj_output_call_site_table (void);\n \n@@ -2696,7 +2694,6 @@ push_sleb128 (vec<uchar, va_gc> **data_area, int value)\n }\n \n \f\n-#ifndef HAVE_AS_LEB128\n static int\n dw2_size_of_call_site_table (int section)\n {\n@@ -2731,7 +2728,6 @@ sjlj_size_of_call_site_table (void)\n \n   return size;\n }\n-#endif\n \n static void\n dw2_output_call_site_table (int cs_format, int section)\n@@ -2921,13 +2917,10 @@ static void\n output_one_function_exception_table (int section)\n {\n   int tt_format, cs_format, lp_format, i;\n-#ifdef HAVE_AS_LEB128\n   char ttype_label[32];\n   char cs_after_size_label[32];\n   char cs_end_label[32];\n-#else\n   int call_site_len;\n-#endif\n   int have_tt_data;\n   int tt_format_size = 0;\n \n@@ -2942,11 +2935,11 @@ output_one_function_exception_table (int section)\n   else\n     {\n       tt_format = ASM_PREFERRED_EH_DATA_FORMAT (/*code=*/0, /*global=*/1);\n-#ifdef HAVE_AS_LEB128\n-      ASM_GENERATE_INTERNAL_LABEL (ttype_label,\n-\t\t\t\t   section ? \"LLSDATTC\" : \"LLSDATT\",\n-\t\t\t\t   current_function_funcdef_no);\n-#endif\n+      if (HAVE_AS_LEB128)\n+\tASM_GENERATE_INTERNAL_LABEL (ttype_label,\n+\t\t\t\t     section ? \"LLSDATTC\" : \"LLSDATT\",\n+\t\t\t\t     current_function_funcdef_no);\n+\n       tt_format_size = size_of_encoded_value (tt_format);\n \n       assemble_align (tt_format_size * BITS_PER_UNIT);\n@@ -2972,86 +2965,93 @@ output_one_function_exception_table (int section)\n   dw2_asm_output_data (1, tt_format, \"@TType format (%s)\",\n \t\t       eh_data_format_name (tt_format));\n \n-#ifndef HAVE_AS_LEB128\n-  if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n-    call_site_len = sjlj_size_of_call_site_table ();\n-  else\n-    call_site_len = dw2_size_of_call_site_table (section);\n-#endif\n+  if (!HAVE_AS_LEB128)\n+    {\n+      if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n+\tcall_site_len = sjlj_size_of_call_site_table ();\n+      else\n+\tcall_site_len = dw2_size_of_call_site_table (section);\n+    }\n \n   /* A pc-relative 4-byte displacement to the @TType data.  */\n   if (have_tt_data)\n     {\n-#ifdef HAVE_AS_LEB128\n-      char ttype_after_disp_label[32];\n-      ASM_GENERATE_INTERNAL_LABEL (ttype_after_disp_label,\n-\t\t\t\t   section ? \"LLSDATTDC\" : \"LLSDATTD\",\n-\t\t\t\t   current_function_funcdef_no);\n-      dw2_asm_output_delta_uleb128 (ttype_label, ttype_after_disp_label,\n-\t\t\t\t    \"@TType base offset\");\n-      ASM_OUTPUT_LABEL (asm_out_file, ttype_after_disp_label);\n-#else\n-      /* Ug.  Alignment queers things.  */\n-      unsigned int before_disp, after_disp, last_disp, disp;\n+      if (HAVE_AS_LEB128)\n+\t{\n+\t  char ttype_after_disp_label[32];\n+\t  ASM_GENERATE_INTERNAL_LABEL (ttype_after_disp_label,\n+\t\t\t\t       section ? \"LLSDATTDC\" : \"LLSDATTD\",\n+\t\t\t\t       current_function_funcdef_no);\n+\t  dw2_asm_output_delta_uleb128 (ttype_label, ttype_after_disp_label,\n+\t\t\t\t\t\"@TType base offset\");\n+\t  ASM_OUTPUT_LABEL (asm_out_file, ttype_after_disp_label);\n+\t}\n+      else\n+\t{\n+\t  /* Ug.  Alignment queers things.  */\n+\t  unsigned int before_disp, after_disp, last_disp, disp;\n \n-      before_disp = 1 + 1;\n-      after_disp = (1 + size_of_uleb128 (call_site_len)\n-\t\t    + call_site_len\n-\t\t    + vec_safe_length (crtl->eh.action_record_data)\n-\t\t    + (vec_safe_length (cfun->eh->ttype_data)\n-\t\t       * tt_format_size));\n+\t  before_disp = 1 + 1;\n+\t  after_disp = (1 + size_of_uleb128 (call_site_len)\n+\t\t\t+ call_site_len\n+\t\t\t+ vec_safe_length (crtl->eh.action_record_data)\n+\t\t\t+ (vec_safe_length (cfun->eh->ttype_data)\n+\t\t\t   * tt_format_size));\n \n-      disp = after_disp;\n-      do\n-\t{\n-\t  unsigned int disp_size, pad;\n+\t  disp = after_disp;\n+\t  do\n+\t    {\n+\t      unsigned int disp_size, pad;\n \n-\t  last_disp = disp;\n-\t  disp_size = size_of_uleb128 (disp);\n-\t  pad = before_disp + disp_size + after_disp;\n-\t  if (pad % tt_format_size)\n-\t    pad = tt_format_size - (pad % tt_format_size);\n-\t  else\n-\t    pad = 0;\n-\t  disp = after_disp + pad;\n-\t}\n-      while (disp != last_disp);\n+\t      last_disp = disp;\n+\t      disp_size = size_of_uleb128 (disp);\n+\t      pad = before_disp + disp_size + after_disp;\n+\t      if (pad % tt_format_size)\n+\t\tpad = tt_format_size - (pad % tt_format_size);\n+\t      else\n+\t\tpad = 0;\n+\t      disp = after_disp + pad;\n+\t    }\n+\t  while (disp != last_disp);\n \n-      dw2_asm_output_data_uleb128 (disp, \"@TType base offset\");\n-#endif\n-    }\n+\t  dw2_asm_output_data_uleb128 (disp, \"@TType base offset\");\n+\t}\n+\t}\n \n   /* Indicate the format of the call-site offsets.  */\n-#ifdef HAVE_AS_LEB128\n-  cs_format = DW_EH_PE_uleb128;\n-#else\n-  cs_format = DW_EH_PE_udata4;\n-#endif\n+  if (HAVE_AS_LEB128)\n+    cs_format = DW_EH_PE_uleb128;\n+  else\n+    cs_format = DW_EH_PE_udata4;\n+\n   dw2_asm_output_data (1, cs_format, \"call-site format (%s)\",\n \t\t       eh_data_format_name (cs_format));\n \n-#ifdef HAVE_AS_LEB128\n-  ASM_GENERATE_INTERNAL_LABEL (cs_after_size_label,\n-\t\t\t       section ? \"LLSDACSBC\" : \"LLSDACSB\",\n-\t\t\t       current_function_funcdef_no);\n-  ASM_GENERATE_INTERNAL_LABEL (cs_end_label,\n-\t\t\t       section ? \"LLSDACSEC\" : \"LLSDACSE\",\n-\t\t\t       current_function_funcdef_no);\n-  dw2_asm_output_delta_uleb128 (cs_end_label, cs_after_size_label,\n-\t\t\t\t\"Call-site table length\");\n-  ASM_OUTPUT_LABEL (asm_out_file, cs_after_size_label);\n-  if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n-    sjlj_output_call_site_table ();\n-  else\n-    dw2_output_call_site_table (cs_format, section);\n-  ASM_OUTPUT_LABEL (asm_out_file, cs_end_label);\n-#else\n-  dw2_asm_output_data_uleb128 (call_site_len, \"Call-site table length\");\n-  if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n-    sjlj_output_call_site_table ();\n+  if (HAVE_AS_LEB128)\n+    {\n+      ASM_GENERATE_INTERNAL_LABEL (cs_after_size_label,\n+\t\t\t\t   section ? \"LLSDACSBC\" : \"LLSDACSB\",\n+\t\t\t\t   current_function_funcdef_no);\n+      ASM_GENERATE_INTERNAL_LABEL (cs_end_label,\n+\t\t\t\t   section ? \"LLSDACSEC\" : \"LLSDACSE\",\n+\t\t\t\t   current_function_funcdef_no);\n+      dw2_asm_output_delta_uleb128 (cs_end_label, cs_after_size_label,\n+\t\t\t\t    \"Call-site table length\");\n+      ASM_OUTPUT_LABEL (asm_out_file, cs_after_size_label);\n+      if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n+\tsjlj_output_call_site_table ();\n+      else\n+\tdw2_output_call_site_table (cs_format, section);\n+      ASM_OUTPUT_LABEL (asm_out_file, cs_end_label);\n+    }\n   else\n-    dw2_output_call_site_table (cs_format, section);\n-#endif\n+    {\n+      dw2_asm_output_data_uleb128 (call_site_len, \"Call-site table length\");\n+      if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n+\tsjlj_output_call_site_table ();\n+      else\n+\tdw2_output_call_site_table (cs_format, section);\n+    }\n \n   /* ??? Decode and interpret the data for flag_debug_asm.  */\n   {\n@@ -3070,10 +3070,8 @@ output_one_function_exception_table (int section)\n       output_ttype (type, tt_format, tt_format_size);\n     }\n \n-#ifdef HAVE_AS_LEB128\n-  if (have_tt_data)\n-      ASM_OUTPUT_LABEL (asm_out_file, ttype_label);\n-#endif\n+  if (HAVE_AS_LEB128 && have_tt_data)\n+    ASM_OUTPUT_LABEL (asm_out_file, ttype_label);\n \n   /* ??? Decode and interpret the data for flag_debug_asm.  */\n   if (targetm.arm_eabi_unwinder)"}]}