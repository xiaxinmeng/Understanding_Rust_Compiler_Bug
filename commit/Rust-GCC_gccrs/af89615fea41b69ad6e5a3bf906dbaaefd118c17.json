{"sha": "af89615fea41b69ad6e5a3bf906dbaaefd118c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4OTYxNWZlYTQxYjY5YWQ2ZTVhM2JmOTA2ZGJhYWVmZDExOGMxNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-14T15:03:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-14T15:03:39Z"}, "message": "[multiple changes]\n\n2011-10-14  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_res.adb: Minor reformatting.\n\n2011-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch6.adb (Add_Task_Actuals_To_Build_In_Place_Call):\n\tCode and comment reformatting. Use BIP_Task_Master\n\twhen creating a _master.\n\t(BIP_Formal_Suffix): Code reformatting. Correct the case for\n\tBIP_Task_Master.\n\t(Make_Build_In_Place_Call_In_Object_Declaration): Use\n\tBIP_Task_Master when creating a reference to the enclosing\n\tfunction's _master formal.\n\t(Move_Activation_Chain): Use BIP_Task_Master when creating a reference\n\tto the _master.\n\t* exp_ch6.ads: Change BIP_Master to BIP_Task_Master.\n\t(Needs_BIP_Finalization_Master): Alphabetized.\n\t* sem_ch6.adb (Create_Extra_Formals): Update the usage of\n\tBIP_Task_Master.\n\n2011-10-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch6.adb (P_Return_Object_Declaration): In Ada 2012 mode,\n\treject an aliased keyword on the object declaration of an extended\n\treturn statement. In older versions of the language indicate\n\tthat this is illegal in the standard.\n\n2011-10-14  Pascal Obry  <obry@adacore.com>\n\n\t* sem_util.adb, sem_ch4.adb: Minor reformatting.\n\n2011-10-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb: Recognize properly procedure calls that are\n\ttransformed into code statements.\n\n2011-10-14  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Minor fix in project example.\n\nFrom-SVN: r179986", "tree": {"sha": "8fd0ec53d63a00c004144997a282aedbf93bd6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fd0ec53d63a00c004144997a282aedbf93bd6ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af89615fea41b69ad6e5a3bf906dbaaefd118c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af89615fea41b69ad6e5a3bf906dbaaefd118c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af89615fea41b69ad6e5a3bf906dbaaefd118c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af89615fea41b69ad6e5a3bf906dbaaefd118c17/comments", "author": null, "committer": null, "parents": [{"sha": "f2d10a021be8e8f57bcf3708bec8db12eb2b8e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d10a021be8e8f57bcf3708bec8db12eb2b8e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d10a021be8e8f57bcf3708bec8db12eb2b8e4d"}], "stats": {"total": 188, "additions": 116, "deletions": 72}, "files": [{"sha": "4c64e5668e83e4a3e585cbd40382815b06cfffa6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -1,3 +1,44 @@\n+2011-10-14  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_res.adb: Minor reformatting.\n+\n+2011-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch6.adb (Add_Task_Actuals_To_Build_In_Place_Call):\n+\tCode and comment reformatting. Use BIP_Task_Master\n+\twhen creating a _master.\n+\t(BIP_Formal_Suffix): Code reformatting. Correct the case for\n+\tBIP_Task_Master.\n+\t(Make_Build_In_Place_Call_In_Object_Declaration): Use\n+\tBIP_Task_Master when creating a reference to the enclosing\n+\tfunction's _master formal.\n+\t(Move_Activation_Chain): Use BIP_Task_Master when creating a reference\n+\tto the _master.\n+\t* exp_ch6.ads: Change BIP_Master to BIP_Task_Master.\n+\t(Needs_BIP_Finalization_Master): Alphabetized.\n+\t* sem_ch6.adb (Create_Extra_Formals): Update the usage of\n+\tBIP_Task_Master.\n+\n+2011-10-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch6.adb (P_Return_Object_Declaration): In Ada 2012 mode,\n+\treject an aliased keyword on the object declaration of an extended\n+\treturn statement. In older versions of the language indicate\n+\tthat this is illegal in the standard.\n+\n+2011-10-14  Pascal Obry  <obry@adacore.com>\n+\n+\t* sem_util.adb, sem_ch4.adb: Minor reformatting.\n+\n+2011-10-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb: Recognize properly procedure calls that are\n+\ttransformed into code statements.\n+\n+2011-10-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Minor fix in project example.\n+\n 2011-10-14  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.adb: Return objects are aliased if their type is"}, {"sha": "035c433abab5e96c9839b702e29a693bcebc6508", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 38, "deletions": 48, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -477,9 +477,13 @@ package body Exp_Ch6 is\n       Function_Id   : Entity_Id;\n       Master_Actual : Node_Id)\n    is\n-      Loc         : constant Source_Ptr := Sloc (Function_Call);\n-      Result_Subt : constant Entity_Id := Available_View (Etype (Function_Id));\n-      Actual      : Node_Id            := Master_Actual;\n+      Loc           : constant Source_Ptr := Sloc (Function_Call);\n+      Result_Subt   : constant Entity_Id :=\n+                        Available_View (Etype (Function_Id));\n+      Actual        : Node_Id;\n+      Chain_Actual  : Node_Id;\n+      Chain_Formal  : Node_Id;\n+      Master_Formal : Node_Id;\n \n    begin\n       --  No such extra parameters are needed if there are no tasks\n@@ -488,6 +492,8 @@ package body Exp_Ch6 is\n          return;\n       end if;\n \n+      Actual := Master_Actual;\n+\n       --  Use a dummy _master actual in case of No_Task_Hierarchy\n \n       if Restriction_Active (No_Task_Hierarchy) then\n@@ -500,52 +506,34 @@ package body Exp_Ch6 is\n          Actual := New_Reference_To (Actual, Loc);\n       end if;\n \n-      --  The master\n-\n-      declare\n-         Master_Formal : Node_Id;\n-\n-      begin\n-         --  Locate implicit master parameter in the called function\n-\n-         Master_Formal := Build_In_Place_Formal (Function_Id, BIP_Master);\n-         Analyze_And_Resolve (Actual, Etype (Master_Formal));\n-\n-         --  Build the parameter association for the new actual and add it to\n-         --  the end of the function's actuals.\n+      --  Locate the implicit master parameter in the called function\n \n-         Add_Extra_Actual_To_Call (Function_Call, Master_Formal, Actual);\n-      end;\n+      Master_Formal := Build_In_Place_Formal (Function_Id, BIP_Task_Master);\n+      Analyze_And_Resolve (Actual, Etype (Master_Formal));\n \n-      --  The activation chain\n+      --  Build the parameter association for the new actual and add it to the\n+      --  end of the function's actuals.\n \n-      declare\n-         Activation_Chain_Actual : Node_Id;\n-         Activation_Chain_Formal : Node_Id;\n+      Add_Extra_Actual_To_Call (Function_Call, Master_Formal, Actual);\n \n-      begin\n-         --  Locate implicit activation chain parameter in the called function\n+      --  Locate the implicit activation chain parameter in the called function\n \n-         Activation_Chain_Formal :=\n-           Build_In_Place_Formal (Function_Id, BIP_Activation_Chain);\n+      Chain_Formal :=\n+        Build_In_Place_Formal (Function_Id, BIP_Activation_Chain);\n \n-         --  Create the actual which is a pointer to the current activation\n-         --  chain\n+      --  Create the actual which is a pointer to the current activation chain\n \n-         Activation_Chain_Actual :=\n-           Make_Attribute_Reference (Loc,\n-             Prefix         => Make_Identifier (Loc, Name_uChain),\n-             Attribute_Name => Name_Unrestricted_Access);\n+      Chain_Actual :=\n+        Make_Attribute_Reference (Loc,\n+          Prefix         => Make_Identifier (Loc, Name_uChain),\n+          Attribute_Name => Name_Unrestricted_Access);\n \n-         Analyze_And_Resolve\n-           (Activation_Chain_Actual, Etype (Activation_Chain_Formal));\n+      Analyze_And_Resolve (Chain_Actual, Etype (Chain_Formal));\n \n-         --  Build the parameter association for the new actual and add it to\n-         --  the end of the function's actuals.\n+      --  Build the parameter association for the new actual and add it to the\n+      --  end of the function's actuals.\n \n-         Add_Extra_Actual_To_Call\n-           (Function_Call, Activation_Chain_Formal, Activation_Chain_Actual);\n-      end;\n+      Add_Extra_Actual_To_Call (Function_Call, Chain_Formal, Chain_Actual);\n    end Add_Task_Actuals_To_Build_In_Place_Call;\n \n    -----------------------\n@@ -557,12 +545,12 @@ package body Exp_Ch6 is\n       case Kind is\n          when BIP_Alloc_Form          =>\n             return \"BIPalloc\";\n-         when BIP_Storage_Pool          =>\n+         when BIP_Storage_Pool        =>\n             return \"BIPstoragepool\";\n          when BIP_Finalization_Master =>\n             return \"BIPfinalizationmaster\";\n-         when BIP_Master              =>\n-            return \"BIPmaster\";\n+         when BIP_Task_Master         =>\n+            return \"BIPtaskmaster\";\n          when BIP_Activation_Chain    =>\n             return \"BIPactivationchain\";\n          when BIP_Object_Access       =>\n@@ -578,6 +566,9 @@ package body Exp_Ch6 is\n      (Func : Entity_Id;\n       Kind : BIP_Formal_Kind) return Entity_Id\n    is\n+      Formal_Name  : constant Name_Id :=\n+                       New_External_Name\n+                         (Chars (Func), BIP_Formal_Suffix (Kind));\n       Extra_Formal : Entity_Id := Extra_Formals (Func);\n \n    begin\n@@ -596,9 +587,8 @@ package body Exp_Ch6 is\n \n       loop\n          pragma Assert (Present (Extra_Formal));\n-         exit when\n-           Chars (Extra_Formal) =\n-             New_External_Name (Chars (Func), BIP_Formal_Suffix (Kind));\n+         exit when Chars (Extra_Formal) = Formal_Name;\n+\n          Next_Formal_With_Extras (Extra_Formal);\n       end loop;\n \n@@ -4831,7 +4821,7 @@ package body Exp_Ch6 is\n                --  New master\n \n                New_Reference_To\n-                 (Build_In_Place_Formal (Par_Func, BIP_Master), Loc)));\n+                 (Build_In_Place_Formal (Par_Func, BIP_Task_Master), Loc)));\n       end Move_Activation_Chain;\n \n    --  Start of processing for Expand_N_Extended_Return_Statement\n@@ -8248,8 +8238,8 @@ package body Exp_Ch6 is\n          Add_Task_Actuals_To_Build_In_Place_Call\n            (Func_Call, Function_Id,\n             Master_Actual =>\n-              New_Reference_To\n-                (Build_In_Place_Formal (Enclosing_Func, BIP_Master), Loc));\n+              New_Reference_To (Build_In_Place_Formal\n+                (Enclosing_Func, BIP_Task_Master), Loc));\n \n       else\n          Add_Task_Actuals_To_Build_In_Place_Call"}, {"sha": "77df2b7da420e12551612eb7cbf694b5f20fd3d0", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -107,7 +107,7 @@ package Exp_Ch6 is\n       --  Present if result type needs finalization. Pointer to caller's\n       --  finalization master.\n \n-      BIP_Master,\n+      BIP_Task_Master,\n       --  Present if result type contains tasks. Master associated with\n       --  calling context.\n \n@@ -201,14 +201,14 @@ package Exp_Ch6 is\n    --  for which Is_Build_In_Place_Call is True, or an N_Qualified_Expression\n    --  node applied to such a function call.\n \n-   function Needs_BIP_Finalization_Master (Func_Id : Entity_Id) return Boolean;\n-   --  Ada 2005 (AI-318-02): Return True if the function needs an implicit\n-   --  finalization master implicit parameter.\n-\n    function Needs_BIP_Alloc_Form (Func_Id : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Return True if the function needs an implicit\n    --  BIP_Alloc_Form parameter (see type BIP_Formal_Kind).\n \n+   function Needs_BIP_Finalization_Master (Func_Id : Entity_Id) return Boolean;\n+   --  Ada 2005 (AI-318-02): Return True if the result subtype of function\n+   --  Func_Id needs finalization actions.\n+\n    function Needs_Result_Accessibility_Level\n      (Func_Id : Entity_Id) return Boolean;\n    --  Ada 2012 (AI05-0234): Return True if the function needs an implicit"}, {"sha": "7d5985479118ddd722f975a00c6b400663e96b96", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -1677,6 +1677,14 @@ package body Ch6 is\n          Scan; -- past ALIASED\n          Set_Aliased_Present (Decl_Node);\n \n+         if Ada_Version < Ada_2012 then\n+            Error_Msg_SC -- CODEFIX\n+              (\"ALIASED not allowed in extended return in Ada2012?\");\n+         else\n+            Error_Msg_SC -- CODEFIX\n+              (\"ALIASED not allowed in extended return\");\n+         end if;\n+\n          if Token = Tok_Constant then\n             Scan; -- past CONSTANT\n             Set_Constant_Present (Decl_Node);"}, {"sha": "356104f07c0a5eeb42d0de3de213f699c8cf9ded", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -580,19 +580,19 @@ packages would be involved in the build process.\n       @b{for} Object_Dir @b{use} \"obj\";\n       @b{for} Exec_Dir @b{use} \".\";\n       @b{for} Main @b{use} (\"proc.adb\");\n-   @b{end} Build;\n \n-   @b{package} Builder @b{is}  --<<<  for gnatmake and gprbuild\n-   @b{end} Builder;\n+      @b{package} Builder @b{is}  --<<<  for gnatmake and gprbuild\n+      @b{end} Builder;\n \n-   @b{package} Compiler @b{is} --<<<  for the compiler\n-   @b{end} Compiler;\n+      @b{package} Compiler @b{is} --<<<  for the compiler\n+      @b{end} Compiler;\n \n-   @b{package} Binder @b{is}   --<<<  for the binder\n-   @b{end} Binder;\n+      @b{package} Binder @b{is}   --<<<  for the binder\n+      @b{end} Binder;\n \n-   @b{package} Linker @b{is}   --<<<  for the linker\n-   @b{end} Linker;\n+      @b{package} Linker @b{is}   --<<<  for the linker\n+      @b{end} Linker;\n+   @b{end} Build;\n @end smallexample\n \n @noindent"}, {"sha": "5790b9a85a08c6f0c4e6e1b31597f00c4b25535e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -3372,8 +3372,11 @@ package body Sem_Ch13 is\n          while Present (Stmt) loop\n             StmtO := Original_Node (Stmt);\n \n+            --  A procedure call transformed into a code statement is OK.\n+\n             if Ada_Version >= Ada_2012\n               and then Nkind (StmtO) = N_Procedure_Call_Statement\n+              and then Nkind (Name (StmtO)) = N_Qualified_Expression\n             then\n                null;\n "}, {"sha": "ba600244f785dda97e5029533fca3116d52fa00b", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -3155,9 +3155,9 @@ package body Sem_Ch4 is\n       --  Unary operator case\n \n       else\n-         if Op_Name = Name_Op_Subtract or else\n-            Op_Name = Name_Op_Add      or else\n-            Op_Name = Name_Op_Abs\n+         if        Op_Name = Name_Op_Subtract\n+           or else Op_Name = Name_Op_Add\n+           or else Op_Name = Name_Op_Abs\n          then\n             Find_Unary_Types (Act1, Op_Id, N);\n \n@@ -6434,7 +6434,7 @@ package body Sem_Ch4 is\n \n    begin\n \n-      --  Check whether type has a specified indexing aspect.\n+      --  Check whether type has a specified indexing aspect\n \n       Func_Name := Empty;\n       Is_Var := False;\n@@ -6443,7 +6443,7 @@ package body Sem_Ch4 is\n       while Present (Ritem) loop\n          if Nkind (Ritem) = N_Aspect_Specification then\n \n-            --  Prefer Variable_Indexing, but will settle for Constant.\n+            --  Prefer Variable_Indexing, but will settle for Constant\n \n             if Get_Aspect_Id (Chars (Identifier (Ritem))) =\n                                                  Aspect_Constant_Indexing\n@@ -6529,7 +6529,7 @@ package body Sem_Ch4 is\n                if Success then\n                   Set_Etype (Name (N), It.Typ);\n \n-                  --  Add implicit dereference interpretation.\n+                  --  Add implicit dereference interpretation\n \n                   Disc := First_Discriminant (Etype (It.Nam));\n "}, {"sha": "4ebf9672f8fb15314a3c2b6402419f70ac9ef490", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -6516,7 +6516,7 @@ package body Sem_Ch6 is\n                Discard :=\n                  Add_Extra_Formal\n                    (E, RTE (RE_Master_Id),\n-                    E, BIP_Formal_Suffix (BIP_Master));\n+                    E, BIP_Formal_Suffix (BIP_Task_Master));\n                Discard :=\n                  Add_Extra_Formal\n                    (E, RTE (RE_Activation_Chain_Access),"}, {"sha": "d94a6bfa328c1b22d93f859df4c233854a078f75", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -7368,7 +7368,7 @@ package body Sem_Res is\n       --  evaluation of the corresponding \"and then\" or \"or else\". If we left\n       --  the replacement to expansion time, then run-time checks associated\n       --  with such operands would be evaluated unconditionally, due to being\n-      --  before to the condition prior to the rewriting as short-circuit forms\n+      --  before the condition prior to the rewriting as short-circuit forms\n       --  during expansion.\n \n       if Short_Circuit_And_Or"}, {"sha": "ec0b135d09891aaa22e0d530b5bf7e9622c4f3d3", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89615fea41b69ad6e5a3bf906dbaaefd118c17/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=af89615fea41b69ad6e5a3bf906dbaaefd118c17", "patch": "@@ -3025,7 +3025,8 @@ package body Sem_Util is\n    function Effective_Extra_Accessibility (Id : Entity_Id) return Entity_Id is\n    begin\n       if Present (Renamed_Object (Id))\n-        and then Is_Entity_Name (Renamed_Object (Id)) then\n+        and then Is_Entity_Name (Renamed_Object (Id))\n+      then\n          return Effective_Extra_Accessibility (Entity (Renamed_Object (Id)));\n       end if;\n \n@@ -3922,7 +3923,8 @@ package body Sem_Util is\n             --  Check for components\n \n             elsif\n-               Nkind_In (Expr, N_Selected_Component, N_Indexed_Component) then\n+              Nkind_In (Expr, N_Selected_Component, N_Indexed_Component)\n+            then\n \n                Expr := Prefix (Expr);\n                Off := True;"}]}