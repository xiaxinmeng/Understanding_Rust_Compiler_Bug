{"sha": "a58eeb317d540ceddf751e55581ab87035481118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU4ZWViMzE3ZDU0MGNlZGRmNzUxZTU1NTgxYWI4NzAzNTQ4MTExOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-10-08T15:09:16Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-10-08T15:09:16Z"}, "message": "tree-tailcall.c (tree_optimize_tail_calls_1): Use fold_convert, reverting my 2004-09-07 patch to use build_int_cst.\n\n.:\t* tree-tailcall.c (tree_optimize_tail_calls_1): Use fold_convert,\n\treverting my 2004-09-07 patch to use build_int_cst.\ntestsuite:\n\t* gcc.c-torture/compile/acc1.c: New.\n\nFrom-SVN: r88759", "tree": {"sha": "87ee61fdcfae9d4b401833a244e5c76094c98074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87ee61fdcfae9d4b401833a244e5c76094c98074"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a58eeb317d540ceddf751e55581ab87035481118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58eeb317d540ceddf751e55581ab87035481118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58eeb317d540ceddf751e55581ab87035481118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58eeb317d540ceddf751e55581ab87035481118/comments", "author": null, "committer": null, "parents": [{"sha": "8d488306cbde45ed18c6c98edd1107ca7ed23850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d488306cbde45ed18c6c98edd1107ca7ed23850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d488306cbde45ed18c6c98edd1107ca7ed23850"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "1da3715b99e7d5519de9266ff31fc539b4f96334", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58eeb317d540ceddf751e55581ab87035481118/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58eeb317d540ceddf751e55581ab87035481118/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a58eeb317d540ceddf751e55581ab87035481118", "patch": "@@ -1,3 +1,8 @@\n+2004-10-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree-tailcall.c (tree_optimize_tail_calls_1): Use fold_convert,\n+\treverting my 2004-09-07 patch to use build_int_cst.\n+\n 2004-10-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/17245"}, {"sha": "d16487d2e0da1f5276b267ca87d5ea879896f3bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58eeb317d540ceddf751e55581ab87035481118/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58eeb317d540ceddf751e55581ab87035481118/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a58eeb317d540ceddf751e55581ab87035481118", "patch": "@@ -1,3 +1,7 @@\n+2004-10-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcc.c-torture/compile/acc1.c: New.\n+\n 2004-10-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* gcc.dg/darwin-longdouble.c: Include stdlib.h and string.h.\n@@ -22329,15 +22333,15 @@ Thu Apr 27 15:58:18 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.c-torture/compile/labels-2.c: New test.\n \n-1999-12-27  Martin von L\u00f6wis  <loewis@informatik.hu-berlin.de>\n+1999-12-27  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* gcc.c-torture/execute/991227-1.c: New test.\n \n 1999-12-22  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* g++.old-deja/g++.pt/instantiate6.C: Remove excess errors XFAIL.\n \n-1999-12-21  Martin von L\u00f6wis  <loewis@informatik.hu-berlin.de>\n+1999-12-21  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* gcc.c-torture/execute/991221-1.c: New test.\n "}, {"sha": "206d16b8ce8b5a14bb5852072a2ee2947ddef68e", "filename": "gcc/testsuite/gcc.c-torture/compile/acc1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58eeb317d540ceddf751e55581ab87035481118/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Facc1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58eeb317d540ceddf751e55581ab87035481118/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Facc1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Facc1.c?ref=a58eeb317d540ceddf751e55581ab87035481118", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+/* Fast maths allows tail recursion to be turned into iteration.  */\n+\n+double\n+foo (int n, double f)\n+{\n+  if (n == 0)\n+    return f;\n+  else\n+    return f + foo (n - 1, f);\n+}\n+\n+double\n+bar (int n, double f)\n+{\n+  if (n == 0)\n+    return f;\n+  else\n+    return f * bar (n - 1, f);\n+}"}, {"sha": "34ac8ee583484f3b94f195d05edeb5d2640e90ef", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58eeb317d540ceddf751e55581ab87035481118/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58eeb317d540ceddf751e55581ab87035481118/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=a58eeb317d540ceddf751e55581ab87035481118", "patch": "@@ -896,7 +896,11 @@ tree_optimize_tail_calls_1 (bool opt_tailcalls)\n \t  add_referenced_tmp_var (tmp);\n \n \t  phi = create_phi_node (tmp, first);\n-\t  add_phi_arg (&phi, build_int_cst (ret_type, 0), EDGE_PRED (first, 0));\n+\t  add_phi_arg (&phi,\n+\t\t       /* RET_TYPE can be a float when -ffast-maths is\n+\t\t\t  enabled.  */\n+\t\t       fold_convert (ret_type, integer_zero_node),\n+\t\t       EDGE_PRED (first, 0));\n \t  a_acc = PHI_RESULT (phi);\n \t}\n \n@@ -908,7 +912,11 @@ tree_optimize_tail_calls_1 (bool opt_tailcalls)\n \t  add_referenced_tmp_var (tmp);\n \n \t  phi = create_phi_node (tmp, first);\n-\t  add_phi_arg (&phi, build_int_cst (ret_type, 1), EDGE_PRED (first, 0));\n+\t  add_phi_arg (&phi,\n+\t\t       /* RET_TYPE can be a float when -ffast-maths is\n+\t\t\t  enabled.  */\n+\t\t       fold_convert (ret_type, integer_one_node),\n+\t\t       EDGE_PRED (first, 0));\n \t  m_acc = PHI_RESULT (phi);\n \t}\n     }"}]}