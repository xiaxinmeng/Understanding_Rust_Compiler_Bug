{"sha": "3d6bb832022160b00e7001ac5b467e201ab4a9ac", "node_id": "C_kwDOANBUbNoAKDNkNmJiODMyMDIyMTYwYjAwZTcwMDFhYzViNDY3ZTIwMWFiNGE5YWM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-23T15:19:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-23T15:19:08Z"}, "message": "phiopt: Improve value_replacement maybe equal phires range handling\n\nMy previous patch added throwing away of SSA_NAME_RANGE_INFO of\nphires when we have phires = x != carg ? x : oarg, but that could\nthrow away useful range info, all we need is merge phires current\nrange info with the carg constant which can newly appear there\n(and the optimization proved the single user doesn't care about that).\n\n2022-12-23  Jakub Jelinek  <jakub@redhat.com>\n\t    Aldy Hernandez  <aldyh@redhat.com>\n\n\t* tree-ssa-phiopt.cc (value_replacement): Instead of resetting\n\tphires range info, union it with carg.", "tree": {"sha": "b0d24c84dfa56e5d2133a69ad51c1c20a6c08a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d24c84dfa56e5d2133a69ad51c1c20a6c08a5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d6bb832022160b00e7001ac5b467e201ab4a9ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d6bb832022160b00e7001ac5b467e201ab4a9ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d6bb832022160b00e7001ac5b467e201ab4a9ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d6bb832022160b00e7001ac5b467e201ab4a9ac/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd1b0aefda5b65f3f841ca6e61ccea6a72daa060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd1b0aefda5b65f3f841ca6e61ccea6a72daa060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd1b0aefda5b65f3f841ca6e61ccea6a72daa060"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "59dc21cee5077e95dca330fe1e12e7e3f492fc8f", "filename": "gcc/tree-ssa-phiopt.cc", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d6bb832022160b00e7001ac5b467e201ab4a9ac/gcc%2Ftree-ssa-phiopt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d6bb832022160b00e7001ac5b467e201ab4a9ac/gcc%2Ftree-ssa-phiopt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.cc?ref=3d6bb832022160b00e7001ac5b467e201ab4a9ac", "patch": "@@ -1492,11 +1492,25 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t\t    break;\n \t\t  }\n \t      if (equal_p)\n-\t\t/* After the optimization PHI result can have value\n-\t\t   which it couldn't have previously.\n-\t\t   We could instead of resetting it union the range\n-\t\t   info with oarg.  */\n-\t\treset_flow_sensitive_info (gimple_phi_result (phi));\n+\t\t{\n+\t\t  tree phires = gimple_phi_result (phi);\n+\t\t  if (SSA_NAME_RANGE_INFO (phires))\n+\t\t    {\n+\t\t      /* After the optimization PHI result can have value\n+\t\t\t which it couldn't have previously.  */\n+\t\t      int_range_max r;\n+\t\t      if (get_global_range_query ()->range_of_expr (r, phires,\n+\t\t\t\t\t\t\t\t    phi))\n+\t\t\t{\n+\t\t\t  int_range<2> tmp (carg, carg);\n+\t\t\t  r.union_ (tmp);\n+\t\t\t  reset_flow_sensitive_info (phires);\n+\t\t\t  set_range_info (phires, r);\n+\t\t\t}\n+\t\t      else\n+\t\t\treset_flow_sensitive_info (phires);\n+\t\t    }\n+\t\t}\n \t      if (equal_p && MAY_HAVE_DEBUG_BIND_STMTS)\n \t\t{\n \t\t  imm_use_iterator imm_iter;"}]}