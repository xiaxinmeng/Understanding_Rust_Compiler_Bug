{"sha": "8e7745dce20f0cf618b50afab811955e37a7da10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3NzQ1ZGNlMjBmMGNmNjE4YjUwYWZhYjgxMTk1NWUzN2E3ZGExMA==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2010-06-25T18:49:36Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2010-06-25T18:49:36Z"}, "message": "dwarf2out.c (dwarf2out_vms_debug_main_pointer): New function.\n\n\t* dwarf2out.c (dwarf2out_vms_debug_main_pointer): New function.\n\t* dwarf2out.h (dwarf2out_vms_debug_main_pointer): Declare new function.\n\t* config/ia64/ia64-protos.h (ia64_start_function): Declare.\n\t* config/ia64/sysv4.h (ASM_DECLARE_FUNCTION_NAME): Move contents\n\tto ia64_start_function. Invoke it.\n\t* config/ia64/ia64.c (ia64_start_function): Call new function\n\tdwarf2out_vms_debug_main_pointer.\n\nFrom-SVN: r161402", "tree": {"sha": "7b24c98ceafdd26537ce1ffb8a7338ee0e8b357b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b24c98ceafdd26537ce1ffb8a7338ee0e8b357b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7745dce20f0cf618b50afab811955e37a7da10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7745dce20f0cf618b50afab811955e37a7da10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7745dce20f0cf618b50afab811955e37a7da10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7745dce20f0cf618b50afab811955e37a7da10/comments", "author": null, "committer": null, "parents": [{"sha": "5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "2ce75077b0aa81a2e2623742c0e7cf9d4ec138af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e7745dce20f0cf618b50afab811955e37a7da10", "patch": "@@ -1,3 +1,13 @@\n+2010-06-25  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* dwarf2out.c (dwarf2out_vms_debug_main_pointer): New function.\n+\t* dwarf2out.h (dwarf2out_vms_debug_main_pointer): Declare new function.\n+\t* config/ia64/ia64-protos.h (ia64_start_function): Declare.\n+\t* config/ia64/sysv4.h (ASM_DECLARE_FUNCTION_NAME): Move contents\n+\tto ia64_start_function. Invoke it.\n+\t* config/ia64/ia64.c (ia64_start_function): Call new function\n+\tdwarf2out_vms_debug_main_pointer.\n+\n 2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-if-conv.c (insert_gimplified_predicates): Do not insert"}, {"sha": "cd89e7c8d14de964b3e001959ecf739b46610d7d", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=8e7745dce20f0cf618b50afab811955e37a7da10", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler for IA-64.\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2007\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -79,6 +79,7 @@ extern void ia64_vms_output_aligned_decl_common (FILE *, tree, const char *,\n \t\t\t\t\t\t unsigned HOST_WIDE_INT,\n \t\t\t\t\t\t unsigned int);\n extern void ia64_vms_elf_asm_named_section (const char *, unsigned int, tree);\n+extern void ia64_start_function (FILE *, const char *, tree);\n #endif /* TREE_CODE */\n \n extern int ia64_register_move_cost (enum machine_mode, enum reg_class,"}, {"sha": "4d6dbde3da6b48215127f85988c8b0830e3a9143", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=8e7745dce20f0cf618b50afab811955e37a7da10", "patch": "@@ -3423,6 +3423,29 @@ ia64_expand_prologue (void)\n   finish_spill_pointers ();\n }\n \n+/* Output the textual info surrounding the prologue.  */\n+\n+void\n+ia64_start_function (FILE *file, const char *fnname,\n+\t\t     tree decl ATTRIBUTE_UNUSED)\n+{\n+#if VMS_DEBUGGING_INFO\n+  if (vms_debug_main\n+      && strncmp (vms_debug_main, fnname, strlen (vms_debug_main)) == 0)\n+    {\n+      targetm.asm_out.globalize_label (asm_out_file, VMS_DEBUG_MAIN_POINTER);\n+      ASM_OUTPUT_DEF (asm_out_file, VMS_DEBUG_MAIN_POINTER, fnname);\n+      dwarf2out_vms_debug_main_pointer ();\n+      vms_debug_main = 0;\n+    }\n+#endif\n+\n+  fputs (\"\\t.proc \", file);\n+  assemble_name (file, fnname);\n+  fputc ('\\n', file);\n+  ASM_OUTPUT_LABEL (file, fnname);\n+}\n+\n /* Called after register allocation to add any instructions needed for the\n    epilogue.  Using an epilogue insn is favored compared to putting all of the\n    instructions in output_function_prologue(), since it allows the scheduler"}, {"sha": "0d760731b465e0f09278c737bf38272582f0b767", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=8e7745dce20f0cf618b50afab811955e37a7da10", "patch": "@@ -1,7 +1,7 @@\n /* Override definitions in elfos.h/svr4.h to be correct for IA64.\n \n Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005,\n-2007 Free Software Foundation, Inc.\n+2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -127,12 +127,7 @@ do {\t\t\t\t\t\t\\\n \n #undef ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fputs (\"\\t.proc \", FILE);\t\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fputc ('\\n', FILE);\t\t\t\t\t\t\t\\\n-  ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-} while (0)\n+  ia64_start_function(FILE,NAME,DECL)\n \n /* We redefine this to use the ia64 .endp pseudo-op.  */\n "}, {"sha": "ecfb37e4fec5b2c2ca937f13b42b724d4439ed76", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=8e7745dce20f0cf618b50afab811955e37a7da10", "patch": "@@ -17414,6 +17414,39 @@ add_name_and_src_coords_attributes (dw_die_ref die, tree decl)\n #endif\n }\n \n+#ifdef VMS_DEBUGGING_INFO\n+\n+/* Output the debug main pointer die for VMS */\n+\n+void\n+dwarf2out_vms_debug_main_pointer (void)\n+{\n+  char label[MAX_ARTIFICIAL_LABEL_BYTES];\n+  dw_die_ref die;\n+\n+  /* Allocate the VMS debug main subprogram die.  */\n+  die = ggc_alloc_cleared_die_node ();\n+  die->die_tag = DW_TAG_subprogram;\n+  add_name_attribute (die, VMS_DEBUG_MAIN_POINTER);\n+  ASM_GENERATE_INTERNAL_LABEL (label, PROLOGUE_END_LABEL,\n+\t\t\t       current_function_funcdef_no);\n+  add_AT_lbl_id (die, DW_AT_entry_pc, label);\n+\n+  /* Make it the first child of comp_unit_die.  */\n+  die->die_parent = comp_unit_die;\n+  if (comp_unit_die->die_child)\n+    {\n+      die->die_sib = comp_unit_die->die_child->die_sib;\n+      comp_unit_die->die_child->die_sib = die;\n+    }\n+  else\n+    {\n+      die->die_sib = die;\n+      comp_unit_die->die_child = die;\n+    }\n+}\n+#endif\n+\n /* Push a new declaration scope.  */\n \n static void"}, {"sha": "d70b26f6ffd91c00f1c584afa3c083c8559e8072", "filename": "gcc/dwarf2out.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fdwarf2out.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7745dce20f0cf618b50afab811955e37a7da10/gcc%2Fdwarf2out.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.h?ref=8e7745dce20f0cf618b50afab811955e37a7da10", "patch": "@@ -27,6 +27,9 @@ extern void debug_dwarf (void);\n struct die_struct;\n extern void debug_dwarf_die (struct die_struct *);\n extern void dwarf2out_set_demangle_name_func (const char *(*) (const char *));\n+#ifdef VMS_DEBUGGING_INFO\n+extern void dwarf2out_vms_debug_main_pointer (void);\n+#endif\n \n struct array_descr_info\n {"}]}