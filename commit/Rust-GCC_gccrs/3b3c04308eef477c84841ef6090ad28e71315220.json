{"sha": "3b3c04308eef477c84841ef6090ad28e71315220", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IzYzA0MzA4ZWVmNDc3Yzg0ODQxZWY2MDkwYWQyOGU3MTMxNTIyMA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-05-27T11:00:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T11:00:07Z"}, "message": "2008-05-27  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb, prj-proc.adb, make.adb, mlib-prj.adb, prj.adb,\n\tprj.ads, makegpr.adb, makeutl.adb, clean.adb, prj-nmsc.adb,\n\tmlib-tgt.adb, prj-env.adb, prj-env.ads:\n\t(Path_Information): New record type\n\tUse component of type Path_Information when there are two paths, one in\n\tcanonical format and one in display format.\n\tUpdate the project manager to these new components.\n\nFrom-SVN: r136008", "tree": {"sha": "b01baa64204f8ff733a7e17df29f4207d63dbbe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b01baa64204f8ff733a7e17df29f4207d63dbbe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b3c04308eef477c84841ef6090ad28e71315220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3c04308eef477c84841ef6090ad28e71315220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b3c04308eef477c84841ef6090ad28e71315220", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3c04308eef477c84841ef6090ad28e71315220/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d153b45808c1f65b3cd3bafaa93b178d0c888122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d153b45808c1f65b3cd3bafaa93b178d0c888122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d153b45808c1f65b3cd3bafaa93b178d0c888122"}], "stats": {"total": 1170, "additions": 603, "deletions": 567}, "files": [{"sha": "5db4c4efc677359bce12cbe35dc7b4475ca6fde8", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -346,7 +346,7 @@ package body Clean is\n       --  The name of the archive dependency file for this project\n \n       Obj_Dir : constant String :=\n-                  Get_Name_String (Data.Display_Object_Dir);\n+                  Get_Name_String (Data.Object_Directory.Display_Name);\n \n    begin\n       Change_Dir (Obj_Dir);\n@@ -551,10 +551,10 @@ package body Clean is\n       Unit        : Unit_Data;\n \n    begin\n-      if Data.Library and then Data.Library_Src_Dir /= No_Path then\n+      if Data.Library and then Data.Library_Src_Dir /= No_Path_Information then\n          declare\n             Directory : constant String :=\n-                          Get_Name_String (Data.Display_Library_Src_Dir);\n+                          Get_Name_String (Data.Library_Src_Dir.Display_Name);\n \n          begin\n             Change_Dir (Directory);\n@@ -663,10 +663,11 @@ package body Clean is\n \n          declare\n             Lib_Directory     : constant String :=\n-                                  Get_Name_String (Data.Display_Library_Dir);\n+                                  Get_Name_String\n+                                    (Data.Library_Dir.Display_Name);\n             Lib_ALI_Directory : constant String :=\n                                   Get_Name_String\n-                                    (Data.Display_Library_ALI_Dir);\n+                                    (Data.Library_ALI_Dir.Display_Name);\n \n          begin\n             Canonical_Case_File_Name (Archive_Name);\n@@ -863,10 +864,11 @@ package body Clean is\n          Processed_Projects.Increment_Last;\n          Processed_Projects.Table (Processed_Projects.Last) := Project;\n \n-         if Data.Object_Directory /= No_Path then\n+         if Data.Object_Directory /= No_Path_Information then\n             declare\n                Obj_Dir : constant String :=\n-                           Get_Name_String (Data.Display_Object_Dir);\n+                           Get_Name_String\n+                             (Data.Object_Directory.Display_Name);\n \n             begin\n                Change_Dir (Obj_Dir);\n@@ -1089,16 +1091,16 @@ package body Clean is\n             if not Compile_Only then\n                Clean_Library_Directory (Project);\n \n-               if Data.Library_Src_Dir /= No_Path then\n+               if Data.Library_Src_Dir /= No_Path_Information then\n                   Clean_Interface_Copy_Directory (Project);\n                end if;\n             end if;\n \n             if Data.Standalone_Library and then\n-              Data.Object_Directory /= No_Path\n+              Data.Object_Directory /= No_Path_Information\n             then\n                Delete_Binder_Generated_Files\n-                 (Get_Name_String (Data.Display_Object_Dir),\n+                 (Get_Name_String (Data.Object_Directory.Display_Name),\n                   File_Name_Type (Data.Library_Name));\n             end if;\n          end if;\n@@ -1156,10 +1158,12 @@ package body Clean is\n \n          --  The executables are deleted only if switch -c is not specified\n \n-      if Project = Main_Project and then Data.Exec_Directory /= No_Path then\n+      if Project = Main_Project\n+        and then Data.Exec_Directory /= No_Path_Information\n+      then\n          declare\n             Exec_Dir : constant String :=\n-                         Get_Name_String (Data.Display_Exec_Dir);\n+                         Get_Name_String (Data.Exec_Directory.Display_Name);\n \n          begin\n             Change_Dir (Exec_Dir);\n@@ -1193,9 +1197,9 @@ package body Clean is\n                   end;\n                end if;\n \n-               if Data.Object_Directory /= No_Path then\n+               if Data.Object_Directory /= No_Path_Information then\n                   Delete_Binder_Generated_Files\n-                    (Get_Name_String (Data.Display_Object_Dir),\n+                    (Get_Name_String (Data.Object_Directory.Display_Name),\n                      Strip_Suffix (Main_Source_File));\n                end if;\n             end loop;"}, {"sha": "1082fb15b1028bc2b2c8620e19336a8794730365", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 53, "deletions": 36, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -349,9 +349,9 @@ procedure GNATCmd is\n                         while Main /= Nil_String loop\n                            File :=\n                              new String'\n-                               (Get_Name_String (Data.Object_Directory) &\n-                                Directory_Separator                     &\n-                                B_Start.all                             &\n+                               (Get_Name_String (Data.Object_Directory.Name) &\n+                                Directory_Separator                          &\n+                                B_Start.all                                  &\n                                 MLib.Fil.Ext_To\n                                   (Get_Name_String\n                                      (Project_Tree.String_Elements.Table\n@@ -375,10 +375,10 @@ procedure GNATCmd is\n \n                            File :=\n                              new String'\n-                               (Get_Name_String (Data.Object_Directory) &\n-                                Directory_Separator                     &\n-                                B_Start.all                             &\n-                                Get_Name_String (Data.Library_Name)     &\n+                               (Get_Name_String (Data.Object_Directory.Name) &\n+                                Directory_Separator                          &\n+                                B_Start.all                                  &\n+                                Get_Name_String (Data.Library_Name)          &\n                                 \".ci\");\n \n                            if Is_Regular_File (File.all) then\n@@ -403,7 +403,7 @@ procedure GNATCmd is\n                   if\n                     Unit_Data.File_Names (Body_Part).Name /= No_File\n                       and then\n-                    Unit_Data.File_Names (Body_Part).Path /= Slash\n+                    Unit_Data.File_Names (Body_Part).Path.Name /= Slash\n                   then\n                      --  There is a body, check if it is for this project\n \n@@ -415,7 +415,8 @@ procedure GNATCmd is\n                         if\n                           Unit_Data.File_Names (Specification).Name = No_File\n                             or else\n-                          Unit_Data.File_Names (Specification).Path = Slash\n+                            Unit_Data.File_Names\n+                              (Specification).Path.Name = Slash\n                         then\n                            --  We have a body with no spec: we need to check if\n                            --  this is a subunit, because gnatls will complain\n@@ -428,7 +429,7 @@ procedure GNATCmd is\n                               Src_Ind := Sinput.P.Load_Project_File\n                                 (Get_Name_String\n                                    (Unit_Data.File_Names\n-                                      (Body_Part).Path));\n+                                      (Body_Part).Path.Name));\n \n                               Subunit :=\n                                 Sinput.P.Source_File_Is_Subunit\n@@ -449,7 +450,7 @@ procedure GNATCmd is\n                   elsif\n                     Unit_Data.File_Names (Specification).Name /= No_File\n                       and then\n-                    Unit_Data.File_Names (Specification).Path /= Slash\n+                    Unit_Data.File_Names (Specification).Path.Name /= Slash\n                   then\n                      --  We have a spec with no body; check if it is for this\n                      --  project.\n@@ -475,7 +476,7 @@ procedure GNATCmd is\n                   if\n                     Unit_Data.File_Names (Body_Part).Name /= No_File\n                       and then\n-                    Unit_Data.File_Names (Body_Part).Path /= Slash\n+                    Unit_Data.File_Names (Body_Part).Path.Name /= Slash\n                   then\n                      --  There is a body. Check if .ci files for this project\n                      --  must be added.\n@@ -489,7 +490,8 @@ procedure GNATCmd is\n                         if\n                           Unit_Data.File_Names (Specification).Name = No_File\n                             or else\n-                          Unit_Data.File_Names (Specification).Path = Slash\n+                            Unit_Data.File_Names\n+                              (Specification).Path.Name = Slash\n                         then\n                            --  We have a body with no spec: we need to check\n                            --  if this is a subunit, because .ci files are not\n@@ -501,7 +503,8 @@ procedure GNATCmd is\n                            begin\n                               Src_Ind := Sinput.P.Load_Project_File\n                                 (Get_Name_String\n-                                   (Unit_Data.File_Names (Body_Part).Path));\n+                                   (Unit_Data.File_Names\n+                                      (Body_Part).Path.Name));\n \n                               Subunit :=\n                                 Sinput.P.Source_File_Is_Subunit (Src_Ind);\n@@ -516,7 +519,7 @@ procedure GNATCmd is\n                                     (Project_Tree.Projects.Table\n                                          (Unit_Data.File_Names\n                                               (Body_Part).Project).\n-                                         Object_Directory)           &\n+                                         Object_Directory.Name)      &\n                                 Directory_Separator                  &\n                                 MLib.Fil.Ext_To\n                                   (Get_Name_String\n@@ -529,7 +532,7 @@ procedure GNATCmd is\n                   elsif\n                     Unit_Data.File_Names (Specification).Name /= No_File\n                     and then\n-                    Unit_Data.File_Names (Specification).Path /= Slash\n+                    Unit_Data.File_Names (Specification).Path.Name /= Slash\n                   then\n                      --  We have a spec with no body. Check if it is for this\n                      --  project.\n@@ -546,7 +549,7 @@ procedure GNATCmd is\n                                  (Project_Tree.Projects.Table\n                                       (Unit_Data.File_Names\n                                            (Specification).Project).\n-                                      Object_Directory)              &\n+                                      Object_Directory.Name)         &\n                              Dir_Separator                           &\n                              MLib.Fil.Ext_To\n                                (Get_Name_String\n@@ -565,14 +568,14 @@ procedure GNATCmd is\n                      if Check_Project\n                           (Unit_Data.File_Names (Kind).Project, Project)\n                        and then Unit_Data.File_Names (Kind).Name /= No_File\n-                       and then Unit_Data.File_Names (Kind).Path /= Slash\n+                       and then Unit_Data.File_Names (Kind).Path.Name /= Slash\n                      then\n                         Last_Switches.Increment_Last;\n                         Last_Switches.Table (Last_Switches.Last) :=\n                           new String'\n                             (Get_Name_String\n                                (Unit_Data.File_Names\n-                                  (Kind).Display_Path));\n+                                  (Kind).Path.Display_Name));\n                      end if;\n                   end loop;\n                end if;\n@@ -688,7 +691,7 @@ procedure GNATCmd is\n          end loop;\n \n          Get_Name_String (Project_Tree.Projects.Table\n-                            (Project).Exec_Directory);\n+                            (Project).Exec_Directory.Name);\n \n          if Name_Buffer (Name_Len) /= Directory_Separator then\n             Name_Len := Name_Len + 1;\n@@ -870,15 +873,15 @@ procedure GNATCmd is\n                    Get_Name_String (Udata.File_Names (Specification).Name) =\n                       Line (1 .. Last)\n                then\n-                  Path := Udata.File_Names (Specification).Path;\n+                  Path := Udata.File_Names (Specification).Path.Name;\n                   exit;\n \n                elsif Udata.File_Names (Body_Part).Name /= No_File\n                  and then\n                    Get_Name_String (Udata.File_Names (Body_Part).Name) =\n                      Line (1 .. Last)\n                then\n-                  Path := Udata.File_Names (Body_Part).Path;\n+                  Path := Udata.File_Names (Body_Part).Path.Name;\n                   exit;\n                end if;\n             end loop;\n@@ -1103,7 +1106,7 @@ procedure GNATCmd is\n                            Dir : constant String :=\n                                    Get_Name_String\n                                      (Project_Tree.Projects.Table\n-                                        (Prj).Object_Directory);\n+                                        (Prj).Object_Directory.Name);\n                         begin\n                            if Is_Regular_File\n                                 (Dir &\n@@ -1184,7 +1187,7 @@ procedure GNATCmd is\n                     new String'(\"-o\");\n                   Get_Name_String\n                     (Project_Tree.Projects.Table\n-                       (Project).Exec_Directory);\n+                       (Project).Exec_Directory.Name);\n                   Last_Switches.Increment_Last;\n                   Last_Switches.Table (Last_Switches.Last) :=\n                     new String'(Name_Buffer (1 .. Name_Len) &\n@@ -1222,7 +1225,7 @@ procedure GNATCmd is\n            new String'(\"-L\" &\n                        Get_Name_String\n                          (Project_Tree.Projects.Table\n-                            (Project).Library_Dir));\n+                            (Project).Library_Dir.Name));\n \n          --  Add the -l switch\n \n@@ -1244,7 +1247,7 @@ procedure GNATCmd is\n             Library_Paths.Table (Library_Paths.Last) :=\n               new String'(Get_Name_String\n                             (Project_Tree.Projects.Table\n-                               (Project).Library_Dir));\n+                               (Project).Library_Dir.Name));\n          end if;\n       end if;\n    end Set_Library_For;\n@@ -1336,7 +1339,14 @@ procedure GNATCmd is\n \n             Put (To_Lower (Command_List (C).Cname.all));\n             Set_Col (25);\n-            Put (Program_Name (Command_List (C).Unixcmd.all).all);\n+\n+            --  No prefix for gnatstack\n+\n+            if C = Stack then\n+               Put (Command_List (C).Unixcmd.all);\n+            else\n+               Put (Program_Name (Command_List (C).Unixcmd.all).all);\n+            end if;\n \n             declare\n                Sws : Argument_List_Access renames Command_List (C).Unixsws;\n@@ -1560,18 +1570,24 @@ begin\n    end if;\n \n    declare\n-      Program : constant String :=\n-                  Program_Name (Command_List (The_Command).Unixcmd.all).all;\n-\n+      Program   : String_Access;\n       Exec_Path : String_Access;\n \n    begin\n+      if The_Command = Stack then\n+         Program := new String'(Command_List (The_Command).Unixcmd.all);\n+\n+      else\n+         Program :=\n+           Program_Name (Command_List (The_Command).Unixcmd.all);\n+      end if;\n+\n       --  Locate the executable for the command\n \n-      Exec_Path := Locate_Exec_On_Path (Program);\n+      Exec_Path := Locate_Exec_On_Path (Program.all);\n \n       if Exec_Path = null then\n-         Put_Line (Standard_Error, \"could not locate \" & Program);\n+         Put_Line (Standard_Error, \"could not locate \" & Program.all);\n          raise Error_Exit;\n       end if;\n \n@@ -1978,7 +1994,7 @@ begin\n             Change_Dir\n               (Get_Name_String\n                  (Project_Tree.Projects.Table\n-                    (Project).Object_Directory));\n+                    (Project).Object_Directory.Name));\n          end if;\n \n          --  Set up the env vars for project path files\n@@ -2191,7 +2207,7 @@ begin\n             end loop;\n \n             Get_Name_String\n-              (Project_Tree.Projects.Table (Project).Directory);\n+              (Project_Tree.Projects.Table (Project).Directory.Name);\n \n             declare\n                Project_Dir : constant String := Name_Buffer (1 .. Name_Len);\n@@ -2291,7 +2307,8 @@ begin\n \n          if The_Command = Metric\n            and then\n-             Project_Tree.Projects.Table (Project).Object_Directory /= No_Path\n+             Project_Tree.Projects.Table (Project).Object_Directory /=\n+               No_Path_Information\n          then\n             First_Switches.Increment_Last;\n             First_Switches.Table (2 .. First_Switches.Last) :=\n@@ -2300,7 +2317,7 @@ begin\n               new String'(\"-d=\" &\n                           Get_Name_String\n                             (Project_Tree.Projects.Table\n-                               (Project).Object_Directory));\n+                               (Project).Object_Directory.Name));\n          end if;\n \n          --  For gnat check, -rules and the following switches need to be the"}, {"sha": "c1737b7ed47878eef172895cb6d87c72af8331c6", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 29, "deletions": 27, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -1068,7 +1068,7 @@ package body Make is\n \n       else\n          Get_Name_String\n-           (Project_Tree.Projects.Table (Main_Project).Display_Directory);\n+           (Project_Tree.Projects.Table (Main_Project).Directory.Display_Name);\n          Add_Lib_Search_Dir\n            (Normalize_Pathname (Path, Name_Buffer (1 .. Name_Len)));\n       end if;\n@@ -1120,7 +1120,7 @@ package body Make is\n \n       else\n          Get_Name_String\n-           (Project_Tree.Projects.Table (Main_Project).Display_Directory);\n+           (Project_Tree.Projects.Table (Main_Project).Directory.Display_Name);\n          Add_Src_Search_Dir\n            (Normalize_Pathname (Path, Name_Buffer (1 .. Name_Len)));\n       end if;\n@@ -1391,7 +1391,7 @@ package body Make is\n       if Project_Of_Current_Object_Directory /= Actual_Project then\n          Project_Of_Current_Object_Directory := Actual_Project;\n          Object_Directory :=\n-           Project_Tree.Projects.Table (Actual_Project).Object_Directory;\n+           Project_Tree.Projects.Table (Actual_Project).Object_Directory.Name;\n \n          --  Set the working directory to the object directory of the actual\n          --  project.\n@@ -1415,7 +1415,7 @@ package body Make is\n          Make_Failed (\"unable to change to object directory \"\"\" &\n                       Path_Or_File_Name\n                         (Project_Tree.Projects.Table\n-                           (Actual_Project).Object_Directory) &\n+                           (Actual_Project).Object_Directory.Name) &\n                       \"\"\" of project \" &\n                       Get_Name_String (Project_Tree.Projects.Table\n                                          (Actual_Project).Display_Name));\n@@ -1938,7 +1938,7 @@ package body Make is\n                   while ALI_Project /= No_Project and then\n                     Obj_Dir /=\n                       Project_Tree.Projects.Table\n-                        (ALI_Project).Object_Directory\n+                        (ALI_Project).Object_Directory.Name\n                   loop\n                      ALI_Project :=\n                        Project_Tree.Projects.Table (ALI_Project).Extended_By;\n@@ -2330,7 +2330,7 @@ package body Make is\n \n                if Data.Dir_Path = null then\n                   Data.Dir_Path :=\n-                    new String'(Get_Name_String (Data.Display_Directory));\n+                    new String'(Get_Name_String (Data.Directory.Display_Name));\n                   Project_Tree.Projects.Table (Arguments_Project) :=\n                     Data;\n                end if;\n@@ -3580,7 +3580,8 @@ package body Make is\n                                     Udata.File_Names (Body_Part).Name /=\n                                                                        No_File\n                                    and then\n-                                     Udata.File_Names (Body_Part).Path /= Slash\n+                                     Udata.File_Names (Body_Part).Path.Name /=\n+                                       Slash\n                                  then\n                                     Sfile := Udata.File_Names (Body_Part).Name;\n                                     Source_Index :=\n@@ -3590,8 +3591,8 @@ package body Make is\n                                     Udata.File_Names (Specification).Name /=\n                                                                         No_File\n                                    and then\n-                                    Udata.File_Names (Specification).Path /=\n-                                                                          Slash\n+                                     Udata.File_Names\n+                                       (Specification).Path.Name /= Slash\n                                  then\n                                     Sfile :=\n                                       Udata.File_Names (Specification).Name;\n@@ -3796,7 +3797,7 @@ package body Make is\n                   Parent_Directory : constant String :=\n                     Get_Name_String\n                       (Project_Tree.Projects.Table\n-                           (Project).Display_Directory);\n+                           (Project).Directory.Display_Name);\n \n                begin\n                   if Parent_Directory (Parent_Directory'Last) =\n@@ -4538,9 +4539,9 @@ package body Make is\n                            --  for other projects, use the object directory.\n \n                            if PD.Library then\n-                              Get_Name_String (PD.Library_Dir);\n+                              Get_Name_String (PD.Library_Dir.Name);\n                            else\n-                              Get_Name_String (PD.Object_Directory);\n+                              Get_Name_String (PD.Object_Directory.Name);\n                            end if;\n \n                            if Name_Buffer (Name_Len) /=\n@@ -4987,7 +4988,7 @@ package body Make is\n       if Main_Project /= No_Project then\n \n          if Project_Tree.Projects.Table\n-              (Main_Project).Object_Directory /= No_Path\n+              (Main_Project).Object_Directory /= No_Path_Information\n          then\n             --  Change current directory to object directory of main project\n \n@@ -5264,7 +5265,7 @@ package body Make is\n                      --  impossible to build the library. So fail immediately.\n \n                      if Project_Tree.Projects.Table (Proj).Object_Directory =\n-                                                                 No_Path\n+                                                        No_Path_Information\n                      then\n                         Make_Failed\n                           (\"no object files to build library for project \"\"\",\n@@ -5308,7 +5309,7 @@ package body Make is\n                   if not Is_Absolute_Path (Exec_File_Name) then\n                      Get_Name_String\n                        (Project_Tree.Projects.Table\n-                          (Main_Project).Exec_Directory);\n+                          (Main_Project).Exec_Directory.Name);\n \n                      if Name_Buffer (Name_Len) /= Directory_Separator then\n                         Name_Len := Name_Len + 1;\n@@ -5337,7 +5338,7 @@ package body Make is\n             Dir_Path : constant String_Access :=\n                          new String'(Get_Name_String\n                            (Project_Tree.Projects.Table\n-                              (Main_Project).Directory));\n+                              (Main_Project).Directory.Name));\n          begin\n             for J in 1 .. Binder_Switches.Last loop\n                Test_If_Relative_Path\n@@ -5554,8 +5555,9 @@ package body Make is\n \n             begin\n                if not Is_Absolute_Path (Exec_File_Name) then\n-                  Get_Name_String (Project_Tree.Projects.Table\n-                                     (Main_Project).Display_Exec_Dir);\n+                  Get_Name_String\n+                    (Project_Tree.Projects.Table\n+                       (Main_Project).Exec_Directory.Display_Name);\n \n                   if Name_Buffer (Name_Len) /= Directory_Separator then\n                      Name_Len := Name_Len + 1;\n@@ -6141,7 +6143,7 @@ package body Make is\n                                 new String'\n                                   (Get_Name_String\n                                        (Project_Tree.Projects.Table\n-                                            (Proj1).Display_Library_Dir));\n+                                            (Proj1).Library_Dir.Display_Name));\n                            end if;\n                         end if;\n                      end loop;\n@@ -6156,7 +6158,7 @@ package body Make is\n                                       Get_Name_String\n                                         (Project_Tree.Projects.Table\n                                            (Library_Projs.Table (Index)).\n-                                              Display_Library_Dir));\n+                                              Library_Dir.Display_Name));\n \n                         --  Add the -l switch\n \n@@ -6462,7 +6464,7 @@ package body Make is\n                      Dir_Path : constant String_Access :=\n                        new String'(Get_Name_String\n                                      (Project_Tree.Projects.Table\n-                                        (Main_Project).Directory));\n+                                        (Main_Project).Directory.Name));\n                   begin\n                      for\n                        J in Last_Binder_Switch + 1 .. Binder_Switches.Last\n@@ -6961,7 +6963,7 @@ package body Make is\n          --  locally removed,\n \n          if Unit.File_Names (Body_Part).Name /= No_File\n-           and then Unit.File_Names (Body_Part).Path /= Slash\n+           and then Unit.File_Names (Body_Part).Path.Name /= Slash\n          then\n             --  And it is a source for the specified project\n \n@@ -6988,7 +6990,7 @@ package body Make is\n                   begin\n                      Src_Ind := Sinput.P.Load_Project_File\n                                   (Get_Name_String\n-                                     (Unit.File_Names (Body_Part).Path));\n+                                     (Unit.File_Names (Body_Part).Path.Name));\n \n                      --  If it is a subunit, discard it\n \n@@ -7008,7 +7010,7 @@ package body Make is\n             end if;\n \n          elsif Unit.File_Names (Specification).Name /= No_File\n-           and then Unit.File_Names (Specification).Path /= Slash\n+           and then Unit.File_Names (Specification).Path.Name /= Slash\n            and then Check_Project (Unit.File_Names (Specification).Project)\n          then\n             --  If there is no source for the body, but there is a source\n@@ -7184,8 +7186,8 @@ package body Make is\n                declare\n                   Object_Directory : constant String :=\n                                        Normalize_Pathname\n-                                         (Get_Name_String\n-                                           (Data.Display_Object_Dir));\n+                                        (Get_Name_String\n+                                         (Data.Object_Directory.Display_Name));\n \n                   Olast : Natural := Object_Directory'Last;\n \n@@ -7380,7 +7382,7 @@ package body Make is\n                 (Dir,\n                  Get_Name_String\n                    (Project_Tree.Projects.Table\n-                                   (Main_Project).Display_Directory));\n+                                   (Main_Project).Directory.Display_Name));\n \n          begin\n             if Real_Path'Length = 0 then"}, {"sha": "04996bb4e13e6e0229b53cf9a962952426135886", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -551,7 +551,7 @@ package body Makegpr is\n                if not For_Gnatmake then\n                   if Data.Library_Kind = Static then\n                      Add_Argument\n-                       (Get_Name_String (Data.Display_Library_Dir) &\n+                       (Get_Name_String (Data.Library_Dir.Display_Name) &\n                         Directory_Separator &\n                         \"lib\" & Get_Name_String (Data.Library_Name) &\n                         '.' & Archive_Ext,\n@@ -565,7 +565,7 @@ package body Makegpr is\n                        (\"-l\" & Get_Name_String (Data.Library_Name),\n                         Verbose_Mode);\n \n-                     Get_Name_String (Data.Display_Library_Dir);\n+                     Get_Name_String (Data.Library_Dir.Display_Name);\n \n                      Add_Argument\n                        (\"-L\" & Name_Buffer (1 .. Name_Len),\n@@ -617,7 +617,7 @@ package body Makegpr is\n \n             elsif Project = Main_Project and then Global_Archive_Exists then\n                Add_Argument\n-                 (Get_Name_String (Data.Display_Object_Dir) &\n+                 (Get_Name_String (Data.Object_Directory.Display_Name) &\n                   Directory_Separator &\n                   \"lib\" & Get_Name_String (Data.Display_Name)\n                   & '.' & Archive_Ext,\n@@ -1069,13 +1069,13 @@ package body Makegpr is\n \n       if Project_Of_Current_Object_Directory /= Main_Project then\n          Project_Of_Current_Object_Directory := Main_Project;\n-         Change_Dir (Get_Name_String (Data.Object_Directory));\n+         Change_Dir (Get_Name_String (Data.Object_Directory.Name));\n \n          if Verbose_Mode then\n             Write_Str  (\"Changing to object directory of \"\"\");\n             Write_Name (Data.Display_Name);\n             Write_Str  (\"\"\": \"\"\");\n-            Write_Name (Data.Display_Object_Dir);\n+            Write_Name (Data.Object_Directory.Display_Name);\n             Write_Line (\"\"\"\");\n          end if;\n       end if;\n@@ -1647,7 +1647,8 @@ package body Makegpr is\n                MLib.Build_Library\n                  (Ofiles      => Arguments (1 .. Last_Argument),\n                   Output_File => Get_Name_String (Data.Library_Name),\n-                  Output_Dir  => Get_Name_String (Data.Display_Library_Dir));\n+                  Output_Dir  => Get_Name_String\n+                                   (Data.Library_Dir.Display_Name));\n \n             else\n                --  Link with g++ if C++ is one of the languages, otherwise\n@@ -1709,7 +1710,7 @@ package body Makegpr is\n                   Options      => Lib_Opts.all,\n                   Interfaces   => No_Argument,\n                   Lib_Filename => Get_Name_String (Data.Library_Name),\n-                  Lib_Dir      => Get_Name_String (Data.Library_Dir),\n+                  Lib_Dir      => Get_Name_String (Data.Library_Dir.Name),\n                   Symbol_Data  => No_Symbols,\n                   Driver_Name  => Driver_Name,\n                   Lib_Version  => \"\",\n@@ -2460,13 +2461,13 @@ package body Makegpr is\n \n       if Project_Of_Current_Object_Directory /= Main_Project then\n          Project_Of_Current_Object_Directory := Main_Project;\n-         Change_Dir (Get_Name_String (Data.Object_Directory));\n+         Change_Dir (Get_Name_String (Data.Object_Directory.Name));\n \n          if Verbose_Mode then\n             Write_Str  (\"Changing to object directory of \"\"\");\n             Write_Name (Data.Name);\n             Write_Str  (\"\"\": \"\"\");\n-            Write_Name (Data.Display_Object_Dir);\n+            Write_Name (Data.Object_Directory.Display_Name);\n             Write_Line (\"\"\"\");\n          end if;\n       end if;\n@@ -2567,7 +2568,7 @@ package body Makegpr is\n       --  Specify the project file\n \n       Add_Argument (Dash_P, True);\n-      Add_Argument (Get_Name_String (Data.Display_Path_Name), True);\n+      Add_Argument (Get_Name_String (Data.Path.Display_Name), True);\n \n       --  Add the saved switches, if any\n \n@@ -2774,13 +2775,13 @@ package body Makegpr is\n \n             if Project_Of_Current_Object_Directory /= Project then\n                Project_Of_Current_Object_Directory := Project;\n-               Change_Dir (Get_Name_String (Data.Object_Directory));\n+               Change_Dir (Get_Name_String (Data.Object_Directory.Name));\n \n                if Verbose_Mode then\n                   Write_Str  (\"Changing to object directory of \"\"\");\n                   Write_Name (Data.Display_Name);\n                   Write_Str  (\"\"\": \"\"\");\n-                  Write_Name (Data.Display_Object_Dir);\n+                  Write_Name (Data.Object_Directory.Display_Name);\n                   Write_Line (\"\"\"\");\n                end if;\n             end if;\n@@ -3351,7 +3352,7 @@ package body Makegpr is\n \n             if not Compile_Only\n               and then not Data.Library\n-              and then Data.Object_Directory /= No_Path\n+              and then Data.Object_Directory /= No_Path_Information\n             then\n                Build_Global_Archive;\n                Link_Executables;\n@@ -3513,7 +3514,7 @@ package body Makegpr is\n       --  True if main sources were specified on the command line\n \n       Object_Dir : constant String :=\n-                     Get_Name_String (Data.Display_Object_Dir);\n+                     Get_Name_String (Data.Object_Directory.Display_Name);\n       --  Path of the object directory of the main project\n \n       Source_Id : Other_Source_Id;\n@@ -3576,7 +3577,8 @@ package body Makegpr is\n             if Data.Other_Sources_Present then\n                declare\n                   Archive_Path : constant String := Get_Name_String\n-                    (Prj_Data.Display_Object_Dir) & Directory_Separator\n+                    (Prj_Data.Object_Directory.Display_Name)\n+                    & Directory_Separator\n                     & \"lib\" & Get_Name_String (Prj_Data.Display_Name)\n                     & '.' & Archive_Ext;\n                   Archive_TS   : Time_Stamp_Type;\n@@ -3641,7 +3643,7 @@ package body Makegpr is\n \n          Executable_Path : constant String :=\n                              Get_Name_String\n-                               (Data.Display_Exec_Dir) &\n+                               (Data.Exec_Directory.Display_Name) &\n                                 Directory_Separator & Executable_Name;\n          --  Path name of the executable\n \n@@ -3699,7 +3701,7 @@ package body Makegpr is\n \n             Add_Argument (Dash_o, True);\n             Add_Argument\n-              (Get_Name_String (Data.Display_Exec_Dir) &\n+              (Get_Name_String (Data.Exec_Directory.Display_Name) &\n                Directory_Separator &\n                Get_Name_String\n                  (Executable_Of"}, {"sha": "1755ade229cfd926d3c2cc7134c498881d282188", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -442,7 +442,7 @@ package body Makeutl is\n                  new String'\n                    (Get_Name_String\n                         (In_Tree.Projects.Table\n-                             (Proj). Directory));\n+                             (Proj).Directory.Name));\n             end if;\n \n             while Options /= Nil_String loop"}, {"sha": "3730199d69a8f8a9dd1c77096354d941fa05e42c", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 180, "deletions": 168, "changes": 348, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -322,7 +322,7 @@ package body MLib.Prj is\n       --  g-trasym.obj.\n \n       Object_Directory_Path : constant String :=\n-                          Get_Name_String (Data.Display_Object_Dir);\n+                          Get_Name_String (Data.Object_Directory.Display_Name);\n \n       Standalone   : constant Boolean := Data.Standalone_Library;\n \n@@ -713,14 +713,15 @@ package body MLib.Prj is\n \n                   if Libgnarl_Needed = Unknown then\n                      if Data.Libgnarl_Needed = Unknown\n-                       and then Data.Object_Directory /= No_Path\n+                       and then Data.Object_Directory /= No_Path_Information\n                      then\n                         --  Check if libgnarl is needed for this library\n \n                         declare\n                            Object_Dir_Path : constant String :=\n                                                Get_Name_String\n-                                                 (Data.Display_Object_Dir);\n+                                                 (Data.Object_Directory.\n+                                                    Display_Name);\n                            Object_Dir      : Dir_Type;\n                            Filename        : String (1 .. 255);\n                            Last            : Natural;\n@@ -799,7 +800,7 @@ package body MLib.Prj is\n             Current := Library_Projs.Table (Index);\n \n             Get_Name_String\n-              (In_Tree.Projects.Table (Current).Display_Library_Dir);\n+              (In_Tree.Projects.Table (Current).Library_Dir.Display_Name);\n             Opts.Increment_Last;\n             Opts.Table (Opts.Last) :=\n               new String'(\"-L\" & Name_Buffer (1 .. Name_Len));\n@@ -966,7 +967,7 @@ package body MLib.Prj is\n                Unit := In_Tree.Units.Table (Source);\n \n                if Unit.File_Names (Body_Part).Name /= No_File\n-                 and then Unit.File_Names (Body_Part).Path /= Slash\n+                 and then Unit.File_Names (Body_Part).Path.Name /= Slash\n                then\n                   if\n                     Check_Project (Unit.File_Names (Body_Part).Project)\n@@ -979,7 +980,7 @@ package body MLib.Prj is\n                            Src_Ind := Sinput.P.Load_Project_File\n                              (Get_Name_String\n                                 (Unit.File_Names\n-                                   (Body_Part).Path));\n+                                   (Body_Part).Path.Name));\n \n                            --  Add the ALI file only if it is not a subunit\n \n@@ -999,7 +1000,7 @@ package body MLib.Prj is\n                   end if;\n \n                elsif Unit.File_Names (Specification).Name /= No_File\n-                 and then Unit.File_Names (Specification).Path /= Slash\n+                 and then Unit.File_Names (Specification).Path.Name /= Slash\n                  and then Check_Project\n                    (Unit.File_Names (Specification).Project)\n                then\n@@ -1318,7 +1319,7 @@ package body MLib.Prj is\n          end if;\n \n          Lib_Dirpath  :=\n-           new String'(Get_Name_String (Data.Display_Library_Dir));\n+           new String'(Get_Name_String (Data.Library_Dir.Display_Name));\n          Lib_Filename := new String'(Get_Name_String (Data.Library_Name));\n \n          case Data.Library_Kind is\n@@ -1355,176 +1356,187 @@ package body MLib.Prj is\n          There_Are_Foreign_Sources := Data.Other_Sources_Present;\n \n          loop\n-            declare\n-               Object_Dir_Path : constant String :=\n-                                   Get_Name_String (Data.Display_Object_Dir);\n-               Object_Dir      : Dir_Type;\n-               Filename        : String (1 .. 255);\n-               Last            : Natural;\n-               Id              : Name_Id;\n+            if Data.Object_Directory /= No_Path_Information then\n+               declare\n+                  Object_Dir_Path : constant String :=\n+                                      Get_Name_String\n+                                        (Data.Object_Directory.Display_Name);\n+                  Object_Dir      : Dir_Type;\n+                  Filename        : String (1 .. 255);\n+                  Last            : Natural;\n+                  Id              : Name_Id;\n \n-            begin\n-               Open (Dir => Object_Dir, Dir_Name => Object_Dir_Path);\n+               begin\n+                  Open (Dir => Object_Dir, Dir_Name => Object_Dir_Path);\n \n-               --  For all entries in the object directory\n+                  --  For all entries in the object directory\n \n-               loop\n-                  Read (Object_Dir, Filename, Last);\n+                  loop\n+                     Read (Object_Dir, Filename, Last);\n \n-                  exit when Last = 0;\n+                     exit when Last = 0;\n \n-                  --  Check if it is an object file\n+                     --  Check if it is an object file\n \n-                  if Is_Obj (Filename (1 .. Last)) then\n-                     declare\n-                        Object_Path : constant String :=\n-                          Normalize_Pathname\n-                            (Object_Dir_Path & Directory_Separator &\n-                             Filename (1 .. Last));\n-                        C_Object_Path : String := Object_Path;\n-                        C_Filename    : String := Filename (1 .. Last);\n+                     if Is_Obj (Filename (1 .. Last)) then\n+                        declare\n+                           Object_Path   : constant String :=\n+                                             Normalize_Pathname\n+                                               (Object_Dir_Path &\n+                                                Directory_Separator &\n+                                                Filename (1 .. Last));\n+                           C_Object_Path : String := Object_Path;\n+                           C_Filename    : String := Filename (1 .. Last);\n \n-                     begin\n-                        Canonical_Case_File_Name (C_Object_Path);\n-                        Canonical_Case_File_Name (C_Filename);\n+                        begin\n+                           Canonical_Case_File_Name (C_Object_Path);\n+                           Canonical_Case_File_Name (C_Filename);\n \n-                        --  If in the object directory of an extended project,\n-                        --  do not consider generated object files.\n+                           --  If in the object directory of an extended\n+                           --  project, do not consider generated object files.\n \n-                        if In_Main_Object_Directory\n-                          or else Last < 5\n-                          or else C_Filename (1 .. B_Start'Length) /=\n-                                    B_Start.all\n-                        then\n-                           Name_Len := Last;\n-                           Name_Buffer (1 .. Name_Len) :=\n-                             C_Filename (1 .. Last);\n-                           Id := Name_Find;\n-\n-                           if not Objects_Htable.Get (Id) then\n-                              declare\n-                                 ALI_File : constant String :=\n-                                              Ext_To\n-                                                (C_Filename\n-                                                   (1 .. Last), \"ali\");\n-                                 ALI_Path : constant String :=\n-                                              Ext_To (C_Object_Path, \"ali\");\n-                                 Add_It   : Boolean :=\n-                                              There_Are_Foreign_Sources\n-                                                or else\n-                                                  (Last > 5\n+                           if In_Main_Object_Directory\n+                             or else Last < 5\n+                             or else C_Filename (1 .. B_Start'Length) /=\n+                             B_Start.all\n+                           then\n+                              Name_Len := Last;\n+                              Name_Buffer (1 .. Name_Len) :=\n+                                C_Filename (1 .. Last);\n+                              Id := Name_Find;\n+\n+                              if not Objects_Htable.Get (Id) then\n+                                 declare\n+                                    ALI_File : constant String :=\n+                                                 Ext_To\n+                                                   (C_Filename\n+                                                      (1 .. Last), \"ali\");\n+                                    ALI_Path : constant String :=\n+                                                 Ext_To (C_Object_Path, \"ali\");\n+                                    Add_It   : Boolean :=\n+                                                 There_Are_Foreign_Sources\n+                                                 or else\n+                                                   (Last > 5\n                                                     and then\n-                                                      C_Filename\n-                                                        (1 .. B_Start'Length) =\n-                                                           B_Start.all);\n-                                 Fname    : File_Name_Type;\n-                                 Proj     : Project_Id;\n-\n-                              begin\n-                                 if Is_Regular_File (ALI_Path) then\n-\n-                                    --  If there is an ALI file, check if the\n-                                    --  object file should be added to the\n-                                    --  library. If there are foreign sources\n-                                    --  we put all object files in the library.\n-\n-                                    if not Add_It then\n-                                       for Index in\n-                                         1 .. Unit_Table.Last (In_Tree.Units)\n-                                       loop\n-                                          if In_Tree.Units.Table\n-                                            (Index).File_Names\n-                                              (Body_Part).Name /= No_File\n-                                          then\n-                                             Proj :=\n-                                               In_Tree.Units.Table (Index).\n-                                                 File_Names\n-                                                   (Body_Part).Project;\n-                                             Fname :=\n-                                               In_Tree.Units.Table (Index).\n-                                                 File_Names (Body_Part).Name;\n-\n-                                          elsif\n-                                            In_Tree.Units.Table\n-                                              (Index).File_Names\n-                                                (Specification).Name /= No_File\n-                                          then\n-                                             Proj :=\n-                                               In_Tree.Units.Table\n-                                                 (Index).File_Names\n-                                                   (Specification).Project;\n-                                             Fname :=\n+                                                    C_Filename\n+                                                      (1 .. B_Start'Length) =\n+                                                      B_Start.all);\n+                                    Fname    : File_Name_Type;\n+                                    Proj     : Project_Id;\n+\n+                                 begin\n+                                    if Is_Regular_File (ALI_Path) then\n+\n+                                       --  If there is an ALI file, check if\n+                                       --  the object file should be added to\n+                                       --  the library. If there are foreign\n+                                       --  sources we put all object files in\n+                                       --  the library.\n+\n+                                       if not Add_It then\n+                                          for Index in\n+                                            1 .. Unit_Table.Last\n+                                                   (In_Tree.Units)\n+                                          loop\n+                                             if In_Tree.Units.Table\n+                                               (Index).File_Names\n+                                               (Body_Part).Name /= No_File\n+                                             then\n+                                                Proj :=\n+                                                  In_Tree.Units.Table (Index).\n+                                                  File_Names\n+                                                    (Body_Part).Project;\n+                                                Fname :=\n+                                                  In_Tree.Units.Table (Index).\n+                                                  File_Names (Body_Part).Name;\n+\n+                                             elsif\n                                                In_Tree.Units.Table\n                                                  (Index).File_Names\n-                                                   (Specification).Name;\n-\n-                                          else\n-                                             Proj := No_Project;\n-                                          end if;\n-\n-                                          Add_It := Proj /= No_Project;\n-\n-                                          --  If the source is in the project\n-                                          --  or a project it extends, we may\n-                                          --  put it in the library.\n-\n-                                          if Add_It then\n-                                             Add_It := Check_Project (Proj);\n-                                          end if;\n-\n-                                          --  But we don't, if the ALI file\n-                                          --  does not correspond to the unit.\n-\n-                                          if Add_It then\n-                                             declare\n-                                                F : constant String :=\n-                                                      Ext_To\n-                                                        (Get_Name_String\n-                                                           (Fname), \"ali\");\n-                                             begin\n-                                                Add_It := F = ALI_File;\n-                                             end;\n-                                          end if;\n-\n-                                          exit when Add_It;\n-                                       end loop;\n-                                    end if;\n+                                                 (Specification).Name /=\n+                                                                       No_File\n+                                             then\n+                                                Proj :=\n+                                                  In_Tree.Units.Table\n+                                                    (Index).File_Names\n+                                                    (Specification).Project;\n+                                                Fname :=\n+                                                  In_Tree.Units.Table\n+                                                    (Index).File_Names\n+                                                    (Specification).Name;\n+\n+                                             else\n+                                                Proj := No_Project;\n+                                             end if;\n+\n+                                             Add_It := Proj /= No_Project;\n+\n+                                             --  If the source is in the\n+                                             --  project or a project it\n+                                             --  extends, we may put it in the\n+                                             --  library.\n+\n+                                             if Add_It then\n+                                                Add_It := Check_Project (Proj);\n+                                             end if;\n+\n+                                             --  But we don't, if the ALI file\n+                                             --  does not correspond to the\n+                                             --  unit.\n+\n+                                             if Add_It then\n+                                                declare\n+                                                   F : constant String :=\n+                                                         Ext_To\n+                                                           (Get_Name_String\n+                                                              (Fname), \"ali\");\n+                                                begin\n+                                                   Add_It := F = ALI_File;\n+                                                end;\n+                                             end if;\n+\n+                                             exit when Add_It;\n+                                          end loop;\n+                                       end if;\n \n-                                    if Add_It then\n-                                       Objects_Htable.Set (Id, True);\n-                                       Objects.Append\n-                                         (new String'(Object_Path));\n+                                       if Add_It then\n+                                          Objects_Htable.Set (Id, True);\n+                                          Objects.Append\n+                                            (new String'(Object_Path));\n \n-                                       --  Record the ALI file\n+                                          --  Record the ALI file\n \n-                                       ALIs.Append (new String'(ALI_Path));\n+                                          ALIs.Append (new String'(ALI_Path));\n \n-                                       --  Find out if for this ALI file,\n-                                       --  libgnarl or libdecgnat or\n-                                       --  g-trasym.obj (on OpenVMS) is\n-                                       --  necessary.\n+                                          --  Find out if for this ALI file,\n+                                          --  libgnarl or libdecgnat or\n+                                          --  g-trasym.obj (on OpenVMS) is\n+                                          --  necessary.\n \n-                                       Check_Libs (ALI_Path, True);\n-                                    end if;\n+                                          Check_Libs (ALI_Path, True);\n+                                       end if;\n \n-                                 elsif There_Are_Foreign_Sources then\n-                                    Objects.Append (new String'(Object_Path));\n-                                 end if;\n-                              end;\n+                                    elsif There_Are_Foreign_Sources then\n+                                       Objects.Append\n+                                         (new String'(Object_Path));\n+                                    end if;\n+                                 end;\n+                              end if;\n                            end if;\n-                        end if;\n-                     end;\n-                  end if;\n-               end loop;\n+                        end;\n+                     end if;\n+                  end loop;\n \n-               Close (Dir => Object_Dir);\n+                  Close (Dir => Object_Dir);\n \n-            exception\n-               when Directory_Error =>\n-                  Com.Fail (\"cannot find object directory \"\"\",\n-                            Get_Name_String (Data.Object_Directory),\n-                            \"\"\"\");\n-            end;\n+               exception\n+                  when Directory_Error =>\n+                     Com.Fail (\"cannot find object directory \"\"\",\n+                               Get_Name_String\n+                                 (Data.Object_Directory.Display_Name),\n+                               \"\"\"\");\n+               end;\n+            end if;\n \n             exit when Data.Extends = No_Project;\n \n@@ -1798,7 +1810,7 @@ package body MLib.Prj is\n \n             begin\n                Get_Name_String\n-                 (In_Tree.Projects.Table (For_Project).Library_Dir);\n+                 (In_Tree.Projects.Table (For_Project).Library_Dir.Name);\n                Change_Dir (Name_Buffer (1 .. Name_Len));\n \n             exception\n@@ -1938,21 +1950,22 @@ package body MLib.Prj is\n \n          Copy_ALI_Files\n            (Files      => Ali_Files.all,\n-            To         => In_Tree.Projects.Table (For_Project).Library_ALI_Dir,\n+            To         => In_Tree.Projects.Table\n+                            (For_Project).Library_ALI_Dir.Name,\n             Interfaces => Arguments (1 .. Argument_Number));\n \n          --  Copy interface sources if Library_Src_Dir specified\n \n          if Standalone\n            and then In_Tree.Projects.Table\n-                      (For_Project).Library_Src_Dir /= No_Path\n+                      (For_Project).Library_Src_Dir /= No_Path_Information\n          then\n             --  Clean the interface copy directory: remove any source that\n             --  could be a source of the project.\n \n             begin\n                Get_Name_String\n-                 (In_Tree.Projects.Table (For_Project).Library_Src_Dir);\n+                 (In_Tree.Projects.Table (For_Project).Library_Src_Dir.Name);\n                Change_Dir (Name_Buffer (1 .. Name_Len));\n \n             exception\n@@ -2030,7 +2043,7 @@ package body MLib.Prj is\n                In_Tree     => In_Tree,\n                Interfaces  => Arguments (1 .. Argument_Number),\n                To_Dir      => In_Tree.Projects.Table\n-                                (For_Project).Display_Library_Src_Dir);\n+                                (For_Project).Library_Src_Dir.Display_Name);\n          end if;\n       end if;\n \n@@ -2084,14 +2097,14 @@ package body MLib.Prj is\n             Lib_Name : constant File_Name_Type :=\n               Library_File_Name_For (For_Project, In_Tree);\n          begin\n-            Change_Dir (Get_Name_String (Data.Library_Dir));\n+            Change_Dir (Get_Name_String (Data.Library_Dir.Name));\n             Lib_TS := File_Stamp (Lib_Name);\n             In_Tree.Projects.Table (For_Project).Library_TS := Lib_TS;\n          end;\n \n          if not Data.Externally_Built\n            and then not Data.Need_To_Build_Lib\n-           and then Data.Object_Directory /= No_Path\n+           and then Data.Object_Directory /= No_Path_Information\n          then\n             declare\n                Obj_TS     : Time_Stamp_Type;\n@@ -2105,7 +2118,7 @@ package body MLib.Prj is\n                --  If the library file does not exist, then the time stamp will\n                --  be Empty_Time_Stamp, earlier than any other time stamp.\n \n-               Change_Dir (Get_Name_String (Data.Object_Directory));\n+               Change_Dir (Get_Name_String (Data.Object_Directory.Name));\n                Open (Dir => Object_Dir, Dir_Name => \".\");\n \n                --  For all entries in the object directory\n@@ -2209,7 +2222,7 @@ package body MLib.Prj is\n                  and then Data.File_Names (J).Name = File_Name\n                then\n                   Copy_File\n-                    (Get_Name_String (Data.File_Names (J).Path),\n+                    (Get_Name_String (Data.File_Names (J).Path.Name),\n                      Target,\n                      Success,\n                      Mode => Overwrite,\n@@ -2250,8 +2263,7 @@ package body MLib.Prj is\n \n       Change_Dir\n         (Get_Name_String\n-           (In_Tree.Projects.Table\n-              (For_Project).Object_Directory));\n+           (In_Tree.Projects.Table (For_Project).Object_Directory.Name));\n \n       for Index in Interfaces'Range loop\n "}, {"sha": "b2c7c952edeaea0d01f4c706aa7f5f51eb8add9d", "filename": "gcc/ada/mlib-tgt.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmlib-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fmlib-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2007, AdaCore                     --\n+--                     Copyright (C) 2001-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -340,7 +340,7 @@ package body MLib.Tgt is\n          declare\n             Lib_Dir  : constant String :=\n                          Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n+                           (In_Tree.Projects.Table (Project).Library_Dir.Name);\n             Lib_Name : constant String :=\n                          Get_Name_String\n                            (In_Tree.Projects.Table (Project).Library_Name);"}, {"sha": "dd52f353287e8e073ebe26c511381d31637d09e6", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 47, "deletions": 42, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -251,7 +251,7 @@ package body Prj.Env is\n \n                if (Data.Library and then Including_Libraries)\n                  or else\n-                 (Data.Object_Directory /= No_Path\n+                 (Data.Object_Directory /= No_Path_Information\n                    and then\n                    (not Including_Libraries or else not Data.Library))\n                then\n@@ -260,19 +260,22 @@ package body Prj.Env is\n                   --  files; otherwise add the object directory.\n \n                   if Data.Library then\n-                     if Data.Object_Directory = No_Path\n+                     if Data.Object_Directory = No_Path_Information\n                        or else\n-                         Contains_ALI_Files (Data.Library_ALI_Dir)\n+                         Contains_ALI_Files (Data.Library_ALI_Dir.Name)\n                      then\n-                        Add_To_Path (Get_Name_String (Data.Library_ALI_Dir));\n+                        Add_To_Path\n+                          (Get_Name_String (Data.Library_ALI_Dir.Name));\n                      else\n-                        Add_To_Path (Get_Name_String (Data.Object_Directory));\n+                        Add_To_Path\n+                          (Get_Name_String (Data.Object_Directory.Name));\n                      end if;\n \n                   else\n                      --  For a non library project, add the object directory\n \n-                     Add_To_Path (Get_Name_String (Data.Object_Directory));\n+                     Add_To_Path\n+                       (Get_Name_String (Data.Object_Directory.Name));\n                   end if;\n                end if;\n \n@@ -520,7 +523,7 @@ package body Prj.Env is\n       --  If we don't know the path name of the body of this unit,\n       --  we compute it, and we store it.\n \n-      if Data.File_Names (Body_Part).Path = No_Path then\n+      if Data.File_Names (Body_Part).Path = No_Path_Information then\n          declare\n             Current_Source : String_List_Id :=\n               In_Tree.Projects.Table\n@@ -530,7 +533,7 @@ package body Prj.Env is\n          begin\n             --  By default, put the file name\n \n-            Data.File_Names (Body_Part).Path :=\n+            Data.File_Names (Body_Part).Path.Name :=\n               Path_Name_Type (Data.File_Names (Body_Part).Name);\n \n             --  For each source directory\n@@ -550,7 +553,7 @@ package body Prj.Env is\n                if Path /= null then\n                   Name_Len := Path'Length;\n                   Name_Buffer (1 .. Name_Len) := Path.all;\n-                  Data.File_Names (Body_Part).Path := Name_Enter;\n+                  Data.File_Names (Body_Part).Path.Name := Name_Enter;\n                   exit;\n \n                else\n@@ -566,7 +569,7 @@ package body Prj.Env is\n \n       --  Returned the stored value\n \n-      return Namet.Get_Name_String (Data.File_Names (Body_Part).Path);\n+      return Namet.Get_Name_String (Data.File_Names (Body_Part).Path.Name);\n    end Body_Path_Name_Of;\n \n    ------------------------\n@@ -1005,13 +1008,13 @@ package body Prj.Env is\n             --  If there is a spec, put it in the mapping\n \n             if Data.Name /= No_File then\n-               if Data.Path = Slash then\n+               if Data.Path.Name = Slash then\n                   Fmap.Add_Forbidden_File_Name (Data.Name);\n                else\n                   Fmap.Add_To_File_Map\n                     (Unit_Name => Unit_Name_Type (The_Unit_Data.Name),\n                      File_Name => Data.Name,\n-                     Path_Name => File_Name_Type (Data.Path));\n+                     Path_Name => File_Name_Type (Data.Path.Name));\n                end if;\n             end if;\n \n@@ -1020,13 +1023,13 @@ package body Prj.Env is\n             --  If there is a body (or subunit) put it in the mapping\n \n             if Data.Name /= No_File then\n-               if Data.Path = Slash then\n+               if Data.Path.Name = Slash then\n                   Fmap.Add_Forbidden_File_Name (Data.Name);\n                else\n                   Fmap.Add_To_File_Map\n                     (Unit_Name => Unit_Name_Type (The_Unit_Data.Name),\n                      File_Name => Data.Name,\n-                     Path_Name => File_Name_Type (Data.Path));\n+                     Path_Name => File_Name_Type (Data.Path.Name));\n                end if;\n             end if;\n          end if;\n@@ -1111,7 +1114,7 @@ package body Prj.Env is\n \n          --  Line with the path name\n \n-         Get_Name_String (Data.Path);\n+         Get_Name_String (Data.Path.Name);\n          Put_Name_Buffer;\n \n       end Put_Data;\n@@ -1334,7 +1337,7 @@ package body Prj.Env is\n                if Src_Data.Language_Name = Language\n                  and then not Src_Data.Locally_Removed\n                  and then Src_Data.Replaced_By = No_Source\n-                 and then Src_Data.Path /= No_Path\n+                 and then Src_Data.Path.Name /= No_Path\n                then\n                   if Src_Data.Unit /= No_Name then\n                      Get_Name_String (Src_Data.Unit);\n@@ -1359,7 +1362,7 @@ package body Prj.Env is\n                   Get_Name_String (Src_Data.File);\n                   Put_Name_Buffer;\n \n-                  Get_Name_String (Src_Data.Path);\n+                  Get_Name_String (Src_Data.Path.Name);\n                   Put_Name_Buffer;\n                end if;\n \n@@ -1542,7 +1545,7 @@ package body Prj.Env is\n \n                         if Full_Path then\n                            return Get_Name_String\n-                             (Unit.File_Names (Body_Part).Path);\n+                             (Unit.File_Names (Body_Part).Path.Name);\n \n                         else\n                            return Get_Name_String (Current_Name);\n@@ -1558,7 +1561,7 @@ package body Prj.Env is\n \n                         if Full_Path then\n                            return Get_Name_String\n-                             (Unit.File_Names (Body_Part).Path);\n+                             (Unit.File_Names (Body_Part).Path.Name);\n \n                         else\n                            return Extended_Body_Name;\n@@ -1605,7 +1608,7 @@ package body Prj.Env is\n \n                         if Full_Path then\n                            return Get_Name_String\n-                             (Unit.File_Names (Specification).Path);\n+                             (Unit.File_Names (Specification).Path.Name);\n                         else\n                            return Get_Name_String (Current_Name);\n                         end if;\n@@ -1620,7 +1623,7 @@ package body Prj.Env is\n \n                         if Full_Path then\n                            return Get_Name_String\n-                             (Unit.File_Names (Specification).Path);\n+                             (Unit.File_Names (Specification).Path.Name);\n                         else\n                            return Extended_Spec_Name;\n                         end if;\n@@ -1723,8 +1726,8 @@ package body Prj.Env is\n \n          --  If there is an object directory, call Action with its name\n \n-         if Data.Object_Directory /= No_Path then\n-            Get_Name_String (Data.Display_Object_Dir);\n+         if Data.Object_Directory /= No_Path_Information then\n+            Get_Name_String (Data.Object_Directory.Display_Name);\n             Action (Name_Buffer (1 .. Name_Len));\n          end if;\n \n@@ -1899,16 +1902,17 @@ package body Prj.Env is\n                  and then\n                    Namet.Get_Name_String\n                      (Unit.File_Names (Specification).Name) = Original_Name)\n-              or else (Unit.File_Names (Specification).Path /= No_Path\n+              or else (Unit.File_Names (Specification).Path /=\n+                                                         No_Path_Information\n                          and then\n                            Namet.Get_Name_String\n-                           (Unit.File_Names (Specification).Path) =\n+                           (Unit.File_Names (Specification).Path.Name) =\n                                                               Original_Name)\n             then\n                Project := Ultimate_Extension_Of\n                            (Project => Unit.File_Names (Specification).Project,\n                             In_Tree => In_Tree);\n-               Path := Unit.File_Names (Specification).Display_Path;\n+               Path := Unit.File_Names (Specification).Path.Display_Name;\n \n                if Current_Verbosity > Default then\n                   Write_Str (\"Done: Specification.\");\n@@ -1921,15 +1925,15 @@ package body Prj.Env is\n                     and then\n                       Namet.Get_Name_String\n                         (Unit.File_Names (Body_Part).Name) = Original_Name)\n-              or else (Unit.File_Names (Body_Part).Path /= No_Path\n+              or else (Unit.File_Names (Body_Part).Path /= No_Path_Information\n                          and then Namet.Get_Name_String\n-                                    (Unit.File_Names (Body_Part).Path) =\n+                                    (Unit.File_Names (Body_Part).Path.Name) =\n                                                              Original_Name)\n             then\n                Project := Ultimate_Extension_Of\n                             (Project => Unit.File_Names (Body_Part).Project,\n                              In_Tree => In_Tree);\n-               Path := Unit.File_Names (Body_Part).Display_Path;\n+               Path := Unit.File_Names (Body_Part).Path.Display_Name;\n \n                if Current_Verbosity > Default then\n                   Write_Str (\"Done: Body.\");\n@@ -2121,7 +2125,7 @@ package body Prj.Env is\n                Write_Str  (\"   Project: \");\n                Get_Name_String\n                  (In_Tree.Projects.Table\n-                   (Unit.File_Names (Specification).Project).Path_Name);\n+                   (Unit.File_Names (Specification).Project).Path.Name);\n                Write_Line (Name_Buffer (1 .. Name_Len));\n             end if;\n \n@@ -2139,7 +2143,7 @@ package body Prj.Env is\n                Write_Str  (\"   Project: \");\n                Get_Name_String\n                  (In_Tree.Projects.Table\n-                   (Unit.File_Names (Body_Part).Project).Path_Name);\n+                   (Unit.File_Names (Body_Part).Project).Path.Name);\n                Write_Line (Name_Buffer (1 .. Name_Len));\n             end if;\n \n@@ -2328,7 +2332,7 @@ package body Prj.Env is\n \n                      if (Data.Library and Including_Libraries)\n                        or else\n-                         (Data.Object_Directory /= No_Path\n+                         (Data.Object_Directory /= No_Path_Information\n                            and then\n                             (not Including_Libraries or else not Data.Library))\n                      then\n@@ -2338,14 +2342,15 @@ package body Prj.Env is\n                         --  otherwise add the object directory.\n \n                         if Data.Library then\n-                           if Data.Object_Directory = No_Path\n-                             or else Contains_ALI_Files (Data.Library_ALI_Dir)\n+                           if Data.Object_Directory = No_Path_Information\n+                             or else Contains_ALI_Files\n+                               (Data.Library_ALI_Dir.Name)\n                            then\n                               Add_To_Object_Path\n-                                (Data.Library_ALI_Dir, In_Tree);\n+                                (Data.Library_ALI_Dir.Name, In_Tree);\n                            else\n                               Add_To_Object_Path\n-                                (Data.Object_Directory, In_Tree);\n+                                (Data.Object_Directory.Name, In_Tree);\n                            end if;\n \n                         --  For a non-library project, add the object\n@@ -2359,7 +2364,7 @@ package body Prj.Env is\n                           and then There_Are_Ada_Sources (In_Tree, Project)\n                         then\n                            Add_To_Object_Path\n-                             (Data.Object_Directory, In_Tree);\n+                             (Data.Object_Directory.Name, In_Tree);\n                         end if;\n                      end if;\n                   end if;\n@@ -2566,15 +2571,15 @@ package body Prj.Env is\n       Data : Unit_Data := In_Tree.Units.Table (Unit);\n \n    begin\n-      if Data.File_Names (Specification).Path = No_Path then\n+      if Data.File_Names (Specification).Path.Name = No_Path then\n          declare\n             Current_Source : String_List_Id :=\n               In_Tree.Projects.Table\n                 (Data.File_Names (Specification).Project).Ada_Sources;\n             Path : GNAT.OS_Lib.String_Access;\n \n          begin\n-            Data.File_Names (Specification).Path :=\n+            Data.File_Names (Specification).Path.Name :=\n               Path_Name_Type (Data.File_Names (Specification).Name);\n \n             while Current_Source /= Nil_String loop\n@@ -2588,7 +2593,7 @@ package body Prj.Env is\n                if Path /= null then\n                   Name_Len := Path'Length;\n                   Name_Buffer (1 .. Name_Len) := Path.all;\n-                  Data.File_Names (Specification).Path := Name_Enter;\n+                  Data.File_Names (Specification).Path.Name := Name_Enter;\n                   exit;\n                else\n                   Current_Source :=\n@@ -2601,7 +2606,7 @@ package body Prj.Env is\n          end;\n       end if;\n \n-      return Namet.Get_Name_String (Data.File_Names (Specification).Path);\n+      return Namet.Get_Name_String (Data.File_Names (Specification).Path.Name);\n    end Spec_Path_Name_Of;\n \n    ---------------------------"}, {"sha": "39e369256a88f242f5c14f29328a0ce351ae87c5", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,14 +85,14 @@ package Prj.Env is\n    function Ada_Include_Path\n      (Project : Project_Id;\n       In_Tree : Project_Tree_Ref) return String_Access;\n-   --  Get the ADA_INCLUDE_PATH of a Project file. For the first call, compute\n-   --  it and cache it.\n+   --  Get the source search path of a Project file. For the first call,\n+   --  compute it and cache it.\n \n    function Ada_Include_Path\n      (Project   : Project_Id;\n       In_Tree   : Project_Tree_Ref;\n       Recursive : Boolean) return String;\n-   --  Get the ADA_INCLUDE_PATH of a Project file. If Recursive it True,\n+   --  Get the source search path of a Project file. If Recursive it True,\n    --  get all the source directories of the imported and modified project\n    --  files (recursively). If Recursive is False, just get the path for the\n    --  source directories of Project. Note: the resulting String may be empty"}, {"sha": "7e61f55bfdfb346b3c450ce8982b3d580d463435", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 97, "deletions": 100, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -696,8 +696,7 @@ package body Prj.Nmsc is\n       end if;\n \n       if Path /= No_Path then\n-         Src_Data.Path           := Path;\n-         Src_Data.Display_Path   := Display_Path;\n+         Src_Data.Path := (Path, Display_Path);\n          Source_Paths_Htable.Set (In_Tree.Source_Paths_HT, Path, Id);\n       end if;\n \n@@ -2565,7 +2564,7 @@ package body Prj.Nmsc is\n \n             --  Compute the object path name\n \n-            Get_Name_String (Data.Display_Object_Dir);\n+            Get_Name_String (Data.Object_Directory.Display_Name);\n \n             if Name_Buffer (Name_Len) /= Directory_Separator\n               and then Name_Buffer (Name_Len) /= '/'\n@@ -2588,7 +2587,7 @@ package body Prj.Nmsc is\n \n             --  Compute the dependency path name\n \n-            Get_Name_String (Data.Display_Object_Dir);\n+            Get_Name_String (Data.Object_Directory.Display_Name);\n \n             if Name_Buffer (Name_Len) /= Directory_Separator\n               and then Name_Buffer (Name_Len) /= '/'\n@@ -2858,7 +2857,7 @@ package body Prj.Nmsc is\n \n                         if Current_Verbosity = High then\n                            Write_Str (\"   interface: \");\n-                           Write_Line (Get_Name_String (Src_Data.Path));\n+                           Write_Line (Get_Name_String (Src_Data.Path.Name));\n                         end if;\n                      end if;\n \n@@ -3952,8 +3951,6 @@ package body Prj.Nmsc is\n                         --  inherit library directory.\n \n                         Data.Library_Dir := Extended_Data.Library_Dir;\n-                        Data.Display_Library_Dir :=\n-                          Extended_Data.Display_Library_Dir;\n                         Library_Directory_Present := True;\n                      end if;\n                   end if;\n@@ -3994,20 +3991,20 @@ package body Prj.Nmsc is\n          else\n             --  Find path name (unless inherited), check that it is a directory\n \n-            if Data.Library_Dir = No_Path then\n+            if Data.Library_Dir = No_Path_Information then\n                Locate_Directory\n                  (Project,\n                   In_Tree,\n                   File_Name_Type (Lib_Dir.Value),\n-                  Data.Display_Directory,\n-                  Data.Library_Dir,\n-                  Data.Display_Library_Dir,\n+                  Data.Directory.Display_Name,\n+                  Data.Library_Dir.Name,\n+                  Data.Library_Dir.Display_Name,\n                   Create      => \"library\",\n                   Current_Dir => Current_Dir,\n                   Location    => Lib_Dir.Location);\n             end if;\n \n-            if Data.Library_Dir = No_Path then\n+            if Data.Library_Dir = No_Path_Information then\n \n                --  Get the absolute name of the library directory that\n                --  does not exist, to report an error.\n@@ -4022,7 +4019,7 @@ package body Prj.Nmsc is\n                        File_Name_Type (Lib_Dir.Value);\n \n                   else\n-                     Get_Name_String (Data.Display_Directory);\n+                     Get_Name_String (Data.Directory.Display_Name);\n \n                      if Name_Buffer (Name_Len) /= Directory_Separator then\n                         Name_Len := Name_Len + 1;\n@@ -4047,14 +4044,13 @@ package body Prj.Nmsc is\n                --  The library directory cannot be the same as the Object\n                --  directory.\n \n-            elsif Data.Library_Dir = Data.Object_Directory then\n+            elsif Data.Library_Dir.Name = Data.Object_Directory.Name then\n                Error_Msg\n                  (Project, In_Tree,\n                   \"library directory cannot be the same \" &\n                   \"as object directory\",\n                   Lib_Dir.Location);\n-               Data.Library_Dir := No_Path;\n-               Data.Display_Library_Dir := No_Path;\n+               Data.Library_Dir := No_Path_Information;\n \n             else\n                declare\n@@ -4071,7 +4067,9 @@ package body Prj.Nmsc is\n                      Dir_Elem := In_Tree.String_Elements.Table (Dirs_Id);\n                      Dirs_Id  := Dir_Elem.Next;\n \n-                     if Data.Library_Dir = Path_Name_Type (Dir_Elem.Value) then\n+                     if\n+                       Data.Library_Dir.Name = Path_Name_Type (Dir_Elem.Value)\n+                     then\n                         Err_Vars.Error_Msg_File_1 :=\n                           File_Name_Type (Dir_Elem.Value);\n                         Error_Msg\n@@ -4099,7 +4097,7 @@ package body Prj.Nmsc is\n                                 In_Tree.String_Elements.Table (Dirs_Id);\n                               Dirs_Id  := Dir_Elem.Next;\n \n-                              if Data.Library_Dir =\n+                              if Data.Library_Dir.Name =\n                                 Path_Name_Type (Dir_Elem.Value)\n                               then\n                                  Err_Vars.Error_Msg_File_1 :=\n@@ -4121,15 +4119,15 @@ package body Prj.Nmsc is\n                   end if;\n \n                   if not OK then\n-                     Data.Library_Dir := No_Path;\n-                     Data.Display_Library_Dir := No_Path;\n+                     Data.Library_Dir := No_Path_Information;\n \n                   elsif Current_Verbosity = High then\n \n                      --  Display the Library directory in high verbosity\n \n                      Write_Str (\"Library directory =\"\"\");\n-                     Write_Str (Get_Name_String (Data.Display_Library_Dir));\n+                     Write_Str\n+                       (Get_Name_String (Data.Library_Dir.Display_Name));\n                      Write_Line (\"\"\"\");\n                   end if;\n                end;\n@@ -4139,7 +4137,7 @@ package body Prj.Nmsc is\n       end if;\n \n       Data.Library :=\n-        Data.Library_Dir /= No_Path\n+        Data.Library_Dir /= No_Path_Information\n         and then\n       Data.Library_Name /= No_Name;\n \n@@ -4188,7 +4186,6 @@ package body Prj.Nmsc is\n                   Write_Line (\"No library ALI directory specified\");\n                end if;\n                Data.Library_ALI_Dir := Data.Library_Dir;\n-               Data.Display_Library_ALI_Dir := Data.Display_Library_Dir;\n \n             else\n                --  Find path name, check that it is a directory\n@@ -4197,14 +4194,14 @@ package body Prj.Nmsc is\n                  (Project,\n                   In_Tree,\n                   File_Name_Type (Lib_ALI_Dir.Value),\n-                  Data.Display_Directory,\n-                  Data.Library_ALI_Dir,\n-                  Data.Display_Library_ALI_Dir,\n+                  Data.Directory.Display_Name,\n+                  Data.Library_ALI_Dir.Name,\n+                  Data.Library_ALI_Dir.Display_Name,\n                   Create   => \"library ALI\",\n                   Current_Dir => Current_Dir,\n                   Location => Lib_ALI_Dir.Location);\n \n-               if Data.Library_ALI_Dir = No_Path then\n+               if Data.Library_ALI_Dir = No_Path_Information then\n \n                   --  Get the absolute name of the library ALI directory that\n                   --  does not exist, to report an error.\n@@ -4219,7 +4216,7 @@ package body Prj.Nmsc is\n                           File_Name_Type (Lib_Dir.Value);\n \n                      else\n-                        Get_Name_String (Data.Display_Directory);\n+                        Get_Name_String (Data.Directory.Display_Name);\n \n                         if Name_Buffer (Name_Len) /= Directory_Separator then\n                            Name_Len := Name_Len + 1;\n@@ -4253,8 +4250,7 @@ package body Prj.Nmsc is\n                         \"library 'A'L'I directory cannot be the same \" &\n                         \"as object directory\",\n                         Lib_ALI_Dir.Location);\n-                     Data.Library_ALI_Dir := No_Path;\n-                     Data.Display_Library_ALI_Dir := No_Path;\n+                     Data.Library_ALI_Dir := No_Path_Information;\n \n                   else\n                      declare\n@@ -4271,7 +4267,7 @@ package body Prj.Nmsc is\n                            Dir_Elem := In_Tree.String_Elements.Table (Dirs_Id);\n                            Dirs_Id  := Dir_Elem.Next;\n \n-                           if Data.Library_ALI_Dir =\n+                           if Data.Library_ALI_Dir.Name =\n                              Path_Name_Type (Dir_Elem.Value)\n                            then\n                               Err_Vars.Error_Msg_File_1 :=\n@@ -4305,7 +4301,7 @@ package body Prj.Nmsc is\n                                       In_Tree.String_Elements.Table (Dirs_Id);\n                                     Dirs_Id  := Dir_Elem.Next;\n \n-                                    if Data.Library_ALI_Dir =\n+                                    if Data.Library_ALI_Dir.Name =\n                                         Path_Name_Type (Dir_Elem.Value)\n                                     then\n                                        Err_Vars.Error_Msg_File_1 :=\n@@ -4328,8 +4324,7 @@ package body Prj.Nmsc is\n                         end if;\n \n                         if not OK then\n-                           Data.Library_ALI_Dir := No_Path;\n-                           Data.Display_Library_ALI_Dir := No_Path;\n+                           Data.Library_ALI_Dir := No_Path_Information;\n \n                         elsif Current_Verbosity = High then\n \n@@ -4338,7 +4333,8 @@ package body Prj.Nmsc is\n \n                            Write_Str (\"Library ALI directory =\"\"\");\n                            Write_Str\n-                             (Get_Name_String (Data.Display_Library_ALI_Dir));\n+                             (Get_Name_String\n+                                (Data.Library_ALI_Dir.Display_Name));\n                            Write_Line (\"\"\"\");\n                         end if;\n                      end;\n@@ -5074,8 +5070,8 @@ package body Prj.Nmsc is\n                           In_Tree.Units.Table (The_Unit_Id);\n \n                         if The_Unit_Data.File_Names (Body_Part).Name /= No_File\n-                          and then The_Unit_Data.File_Names (Body_Part).Path /=\n-                          Slash\n+                          and then The_Unit_Data.File_Names\n+                                     (Body_Part).Path.Name /= Slash\n                         then\n                            if Check_Project\n                              (The_Unit_Data.File_Names (Body_Part).Project,\n@@ -5095,7 +5091,7 @@ package body Prj.Nmsc is\n                                     Src_Ind := Sinput.P.Load_Project_File\n                                       (Get_Name_String\n                                          (The_Unit_Data.File_Names\n-                                            (Body_Part).Path));\n+                                            (Body_Part).Path.Name));\n \n                                     if Sinput.P.Source_File_Is_Subunit\n                                       (Src_Ind)\n@@ -5129,7 +5125,7 @@ package body Prj.Nmsc is\n                         elsif The_Unit_Data.File_Names\n                           (Specification).Name /= No_File\n                           and then The_Unit_Data.File_Names\n-                            (Specification).Path /= Slash\n+                            (Specification).Path.Name /= Slash\n                           and then Check_Project\n                             (The_Unit_Data.File_Names\n                                  (Specification).Project,\n@@ -5304,16 +5300,16 @@ package body Prj.Nmsc is\n                  (Project,\n                   In_Tree,\n                   Dir_Id,\n-                  Data.Display_Directory,\n-                  Data.Library_Src_Dir,\n-                  Data.Display_Library_Src_Dir,\n+                  Data.Directory.Display_Name,\n+                  Data.Library_Src_Dir.Name,\n+                  Data.Library_Src_Dir.Display_Name,\n                   Create => \"library source copy\",\n                   Current_Dir => Current_Dir,\n                   Location => Lib_Src_Dir.Location);\n \n                --  If directory does not exist, report an error\n \n-               if Data.Library_Src_Dir = No_Path then\n+               if Data.Library_Src_Dir = No_Path_Information then\n \n                   --  Get the absolute name of the library directory that does\n                   --  not exist, to report an error.\n@@ -5327,7 +5323,7 @@ package body Prj.Nmsc is\n                         Err_Vars.Error_Msg_File_1 := Dir_Id;\n \n                      else\n-                        Get_Name_String (Data.Directory);\n+                        Get_Name_String (Data.Directory.Name);\n \n                         if Name_Buffer (Name_Len) /=\n                           Directory_Separator\n@@ -5362,7 +5358,7 @@ package body Prj.Nmsc is\n                      \"directory to copy interfaces cannot be \" &\n                      \"the object directory\",\n                      Lib_Src_Dir.Location);\n-                  Data.Library_Src_Dir := No_Path;\n+                  Data.Library_Src_Dir := No_Path_Information;\n \n                else\n                   declare\n@@ -5379,22 +5375,22 @@ package body Prj.Nmsc is\n \n                         --  Report error if it is one of the source directories\n \n-                        if Data.Library_Src_Dir =\n+                        if Data.Library_Src_Dir.Name =\n                           Path_Name_Type (Src_Dir.Value)\n                         then\n                            Error_Msg\n                              (Project, In_Tree,\n                               \"directory to copy interfaces cannot \" &\n                               \"be one of the source directories\",\n                               Lib_Src_Dir.Location);\n-                           Data.Library_Src_Dir := No_Path;\n+                           Data.Library_Src_Dir := No_Path_Information;\n                            exit;\n                         end if;\n \n                         Src_Dirs := Src_Dir.Next;\n                      end loop;\n \n-                     if Data.Library_Src_Dir /= No_Path then\n+                     if Data.Library_Src_Dir /= No_Path_Information then\n \n                         --  It cannot be a source directory of any other\n                         --  project either.\n@@ -5411,7 +5407,7 @@ package body Prj.Nmsc is\n                               --  Report error if it is one of the source\n                               --  directories\n \n-                              if Data.Library_Src_Dir =\n+                              if Data.Library_Src_Dir.Name =\n                                 Path_Name_Type (Src_Dir.Value)\n                               then\n                                  Error_Msg_File_1 :=\n@@ -5424,7 +5420,7 @@ package body Prj.Nmsc is\n                                     \"be the same as source directory { of \" &\n                                     \"project %%\",\n                                     Lib_Src_Dir.Location);\n-                                 Data.Library_Src_Dir := No_Path;\n+                                 Data.Library_Src_Dir := No_Path_Information;\n                                  exit Project_Loop;\n                               end if;\n \n@@ -5437,11 +5433,11 @@ package body Prj.Nmsc is\n                   --  In high verbosity, if there is a valid Library_Src_Dir,\n                   --  display its path name.\n \n-                  if Data.Library_Src_Dir /= No_Path\n+                  if Data.Library_Src_Dir /= No_Path_Information\n                     and then Current_Verbosity = High\n                   then\n                      Write_Str (\"Directory to copy interfaces =\"\"\");\n-                     Write_Str (Get_Name_String (Data.Library_Src_Dir));\n+                     Write_Str (Get_Name_String (Data.Library_Src_Dir.Name));\n                      Write_Line (\"\"\"\");\n                   end if;\n                end if;\n@@ -5566,7 +5562,8 @@ package body Prj.Nmsc is\n             else\n                if not Is_Absolute_Path (Name_Buffer (1 .. Name_Len)) then\n                   Name_Len := 0;\n-                  Add_Str_To_Name_Buffer (Get_Name_String (Data.Directory));\n+                  Add_Str_To_Name_Buffer\n+                    (Get_Name_String (Data.Directory.Name));\n                   Add_Char_To_Name_Buffer (Directory_Separator);\n                   Add_Str_To_Name_Buffer\n                     (Get_Name_String (Lib_Ref_Symbol_File.Value));\n@@ -5615,7 +5612,7 @@ package body Prj.Nmsc is\n                         Symb_Path : constant String :=\n                                       Normalize_Pathname\n                                         (Get_Name_String\n-                                           (Data.Object_Directory) &\n+                                           (Data.Object_Directory.Name) &\n                                          Directory_Separator &\n                                          Name_Buffer (1 .. Name_Len),\n                                          Directory     => Current_Dir,\n@@ -6376,7 +6373,7 @@ package body Prj.Nmsc is\n                             Normalize_Pathname\n                               (Name      => Get_Name_String (Base_Dir),\n                                Directory =>\n-                                 Get_Name_String (Data.Display_Directory),\n+                                 Get_Name_String (Data.Directory.Display_Name),\n                                Resolve_Links  => False,\n                                Case_Sensitive => True);\n \n@@ -6428,7 +6425,7 @@ package body Prj.Nmsc is\n                  (Project     => Project,\n                   In_Tree     => In_Tree,\n                   Name        => From,\n-                  Parent      => Data.Display_Directory,\n+                  Parent      => Data.Directory.Display_Name,\n                   Dir         => Path_Name,\n                   Display     => Display_Path_Name,\n                   Current_Dir => Current_Dir);\n@@ -6563,7 +6560,6 @@ package body Prj.Nmsc is\n       --  We set the object directory to its default\n \n       Data.Object_Directory   := Data.Directory;\n-      Data.Display_Object_Dir := Data.Display_Directory;\n \n       if Object_Dir.Value /= Empty_String then\n          Get_Name_String (Object_Dir.Value);\n@@ -6581,14 +6577,14 @@ package body Prj.Nmsc is\n               (Project,\n                In_Tree,\n                File_Name_Type (Object_Dir.Value),\n-               Data.Display_Directory,\n-               Data.Object_Directory,\n-               Data.Display_Object_Dir,\n+               Data.Directory.Display_Name,\n+               Data.Object_Directory.Name,\n+               Data.Object_Directory.Display_Name,\n                Create   => \"object\",\n                Location => Object_Dir.Location,\n                Current_Dir => Current_Dir);\n \n-            if Data.Object_Directory = No_Path then\n+            if Data.Object_Directory = No_Path_Information then\n \n                --  The object directory does not exist, report an error if the\n                --  project is not externally built.\n@@ -6607,14 +6603,16 @@ package body Prj.Nmsc is\n                --  tools that recover from errors; for example, these tools\n                --  could create the non existent directory.\n \n-               Data.Display_Object_Dir := Path_Name_Type (Object_Dir.Value);\n+               Data.Object_Directory.Display_Name :=\n+                 Path_Name_Type (Object_Dir.Value);\n \n                if Osint.File_Names_Case_Sensitive then\n-                  Data.Object_Directory := Path_Name_Type (Object_Dir.Value);\n+                  Data.Object_Directory.Name :=\n+                    Path_Name_Type (Object_Dir.Value);\n                else\n                   Get_Name_String (Object_Dir.Value);\n                   Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-                  Data.Object_Directory := Name_Find;\n+                  Data.Object_Directory.Name := Name_Find;\n                end if;\n             end if;\n          end if;\n@@ -6626,20 +6624,20 @@ package body Prj.Nmsc is\n            (Project,\n             In_Tree,\n             Name_Find,\n-            Data.Display_Directory,\n-            Data.Object_Directory,\n-            Data.Display_Object_Dir,\n+            Data.Directory.Name,\n+            Data.Object_Directory.Name,\n+            Data.Object_Directory.Display_Name,\n             Create      => \"object\",\n             Location    => Object_Dir.Location,\n             Current_Dir => Current_Dir);\n       end if;\n \n       if Current_Verbosity = High then\n-         if Data.Object_Directory = No_Path then\n+         if Data.Object_Directory = No_Path_Information then\n             Write_Line (\"No object directory\");\n          else\n             Write_Str (\"Object directory: \"\"\");\n-            Write_Str (Get_Name_String (Data.Display_Object_Dir));\n+            Write_Str (Get_Name_String (Data.Object_Directory.Display_Name));\n             Write_Line (\"\"\"\");\n          end if;\n       end if;\n@@ -6652,7 +6650,6 @@ package body Prj.Nmsc is\n       --  We set the object directory to its default\n \n       Data.Exec_Directory   := Data.Object_Directory;\n-      Data.Display_Exec_Dir := Data.Display_Object_Dir;\n \n       if Exec_Dir.Value /= Empty_String then\n          Get_Name_String (Exec_Dir.Value);\n@@ -6670,14 +6667,14 @@ package body Prj.Nmsc is\n               (Project,\n                In_Tree,\n                File_Name_Type (Exec_Dir.Value),\n-               Data.Display_Directory,\n-               Data.Exec_Directory,\n-               Data.Display_Exec_Dir,\n+               Data.Directory.Name,\n+               Data.Exec_Directory.Name,\n+               Data.Exec_Directory.Display_Name,\n                Create   => \"exec\",\n                Location => Exec_Dir.Location,\n                Current_Dir => Current_Dir);\n \n-            if Data.Exec_Directory = No_Path then\n+            if Data.Exec_Directory = No_Path_Information then\n                Err_Vars.Error_Msg_File_1 := File_Name_Type (Exec_Dir.Value);\n                Error_Msg\n                  (Project, In_Tree,\n@@ -6688,11 +6685,11 @@ package body Prj.Nmsc is\n       end if;\n \n       if Current_Verbosity = High then\n-         if Data.Exec_Directory = No_Path then\n+         if Data.Exec_Directory = No_Path_Information then\n             Write_Line (\"No exec directory\");\n          else\n             Write_Str (\"Exec directory: \"\"\");\n-            Write_Str (Get_Name_String (Data.Display_Exec_Dir));\n+            Write_Str (Get_Name_String (Data.Exec_Directory.Display_Name));\n             Write_Line (\"\"\"\");\n          end if;\n       end if;\n@@ -6721,7 +6718,7 @@ package body Prj.Nmsc is\n          if Data.Extends = No_Project\n            and then Data.Object_Directory = Data.Directory\n          then\n-            Data.Object_Directory := No_Path;\n+            Data.Object_Directory := No_Path_Information;\n          end if;\n \n       elsif Source_Dirs.Default then\n@@ -6734,8 +6731,8 @@ package body Prj.Nmsc is\n          Data.Source_Dirs := String_Element_Table.Last\n            (In_Tree.String_Elements);\n          In_Tree.String_Elements.Table (Data.Source_Dirs) :=\n-           (Value         => Name_Id (Data.Directory),\n-            Display_Value => Name_Id (Data.Display_Directory),\n+           (Value         => Name_Id (Data.Directory.Name),\n+            Display_Value => Name_Id (Data.Directory.Display_Name),\n             Location      => No_Location,\n             Flag          => False,\n             Next          => Nil_String,\n@@ -6744,7 +6741,7 @@ package body Prj.Nmsc is\n          if Current_Verbosity = High then\n             Write_Line (\"Single source directory:\");\n             Write_Str (\"    \"\"\");\n-            Write_Str (Get_Name_String (Data.Display_Directory));\n+            Write_Str (Get_Name_String (Data.Directory.Display_Name));\n             Write_Line (\"\"\"\");\n          end if;\n \n@@ -6765,7 +6762,7 @@ package body Prj.Nmsc is\n          if Data.Extends = No_Project\n            and then  Data.Object_Directory = Data.Directory\n          then\n-            Data.Object_Directory := No_Path;\n+            Data.Object_Directory := No_Path_Information;\n          end if;\n \n          Data.Source_Dirs           := Nil_String;\n@@ -7541,7 +7538,7 @@ package body Prj.Nmsc is\n                                       Path_Name_Of\n                                         (File_Name_Type\n                                            (Excluded_Source_List_File.Value),\n-                                         Data.Directory);\n+                                         Data.Directory.Name);\n \n          begin\n             if Source_File_Path_Name'Length = 0 then\n@@ -7681,7 +7678,7 @@ package body Prj.Nmsc is\n                   if Data.Extends = No_Project\n                     and then Data.Object_Directory = Data.Directory\n                   then\n-                     Data.Object_Directory := No_Path;\n+                     Data.Object_Directory := No_Path_Information;\n                   end if;\n                end if;\n             end if;\n@@ -7774,7 +7771,7 @@ package body Prj.Nmsc is\n          declare\n             Source_File_Path_Name : constant String :=\n               Path_Name_Of\n-                (File_Name_Type (Source_List_File.Value), Data.Directory);\n+                (File_Name_Type (Source_List_File.Value), Data.Directory.Name);\n \n          begin\n             if Source_File_Path_Name'Length = 0 then\n@@ -7852,7 +7849,7 @@ package body Prj.Nmsc is\n                Src_Data := In_Tree.Sources.Table (Source);\n \n                if Src_Data.Naming_Exception\n-                 and then Src_Data.Path = No_Path\n+                 and then Src_Data.Path = No_Path_Information\n                then\n                   if Src_Data.Unit /= No_Name then\n                      Error_Msg_Name_1 := Name_Id (Src_Data.Display_File);\n@@ -8528,9 +8525,8 @@ package body Prj.Nmsc is\n                Check_Name := True;\n \n             else\n-               In_Tree.Sources.Table (Name_Loc.Source).Path := Path_Id;\n-               In_Tree.Sources.Table\n-                 (Name_Loc.Source).Display_Path := Display_Path_Id;\n+               In_Tree.Sources.Table (Name_Loc.Source).Path :=\n+                 (Path_Id, Display_Path_Id);\n \n                Source_Paths_Htable.Set\n                  (In_Tree.Source_Paths_HT,\n@@ -8658,7 +8654,7 @@ package body Prj.Nmsc is\n \n                      Error_Msg_Name_1 :=\n                        In_Tree.Projects.Table (Src_Data.Project).Name;\n-                     Error_Msg_Name_2 := Name_Id (Src_Data.Display_Path);\n+                     Error_Msg_Name_2 := Name_Id (Src_Data.Path.Display_Name);\n                      Error_Msg\n                        (Project, In_Tree, \"\\  project %%, %%\", No_Location);\n \n@@ -8875,7 +8871,7 @@ package body Prj.Nmsc is\n                      if Extended = Project\n                        or else Project_Extends (Project, Extended, In_Tree)\n                      then\n-                        Unit.File_Names (Kind).Path := Slash;\n+                        Unit.File_Names (Kind).Path.Name := Slash;\n                         Unit.File_Names (Kind).Needs_Pragma := False;\n                         In_Tree.Units.Table (Index) := Unit;\n                         Add_Forbidden_File_Name\n@@ -9196,7 +9192,7 @@ package body Prj.Nmsc is\n                                  Src_Ind : constant Source_File_Index :=\n                                              Sinput.P.Load_Project_File\n                                                (Get_Name_String\n-                                                  (Src_Data.Path));\n+                                                  (Src_Data.Path.Name));\n \n                               begin\n                                  if Sinput.P.Source_File_Is_Subunit\n@@ -9497,14 +9493,17 @@ package body Prj.Nmsc is\n                   if (The_Unit_Data.File_Names (Unit_Kind).Name =\n                                                           Canonical_File_Name\n                         and then\n-                          The_Unit_Data.File_Names (Unit_Kind).Path = Slash)\n+                        The_Unit_Data.File_Names\n+                          (Unit_Kind).Path.Name = Slash)\n                     or else The_Unit_Data.File_Names (Unit_Kind).Name = No_File\n                     or else Project_Extends\n                       (Data.Extends,\n                        The_Unit_Data.File_Names (Unit_Kind).Project,\n                        In_Tree)\n                   then\n-                     if The_Unit_Data.File_Names (Unit_Kind).Path = Slash then\n+                     if\n+                       The_Unit_Data.File_Names (Unit_Kind).Path.Name = Slash\n+                     then\n                         Remove_Forbidden_File_Name\n                           (The_Unit_Data.File_Names (Unit_Kind).Name);\n                      end if;\n@@ -9521,8 +9520,7 @@ package body Prj.Nmsc is\n                        (Name         => Canonical_File_Name,\n                         Index        => Unit_Ind,\n                         Display_Name => File_Name,\n-                        Path         => Canonical_Path_Name,\n-                        Display_Path => Path_Name,\n+                        Path         => (Canonical_Path_Name, Path_Name),\n                         Project      => Project,\n                         Needs_Pragma => Needs_Pragma);\n                      In_Tree.Units.Table (The_Unit) := The_Unit_Data;\n@@ -9531,8 +9529,8 @@ package body Prj.Nmsc is\n                   elsif The_Unit_Data.File_Names (Unit_Kind).Project = Project\n                     and then (Data.Known_Order_Of_Source_Dirs\n                                 or else\n-                                  The_Unit_Data.File_Names (Unit_Kind).Path =\n-                                                           Canonical_Path_Name)\n+                                The_Unit_Data.File_Names\n+                                  (Unit_Kind).Path.Name = Canonical_Path_Name)\n                   then\n                      if Previous_Source = Nil_String then\n                         Data.Ada_Sources := Nil_String;\n@@ -9564,7 +9562,7 @@ package body Prj.Nmsc is\n                          (The_Unit_Data.File_Names (Unit_Kind).Project).Name;\n                      Err_Vars.Error_Msg_File_1 :=\n                        File_Name_Type\n-                         (The_Unit_Data.File_Names (Unit_Kind).Path);\n+                         (The_Unit_Data.File_Names (Unit_Kind).Path.Name);\n                      Error_Msg\n                        (Project, In_Tree,\n                         \"\\   project file %%, {\", The_Location);\n@@ -9614,8 +9612,7 @@ package body Prj.Nmsc is\n                        (Name         => Canonical_File_Name,\n                         Index        => Unit_Ind,\n                         Display_Name => File_Name,\n-                        Path         => Canonical_Path_Name,\n-                        Display_Path => Path_Name,\n+                        Path         => (Canonical_Path_Name, Path_Name),\n                         Project      => Project,\n                         Needs_Pragma => Needs_Pragma);\n                      In_Tree.Units.Table (The_Unit) := The_Unit_Data;"}, {"sha": "67ae8ba85f09e7ed8ff14d741cab68669a18c52d", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -2315,13 +2315,13 @@ package body Prj.Proc is\n          declare\n             Object_Dir : constant Path_Name_Type :=\n                            In_Tree.Projects.Table\n-                             (Project).Object_Directory;\n+                             (Project).Object_Directory.Name;\n          begin\n             for Index in\n               Project_Table.First .. Project_Table.Last (In_Tree.Projects)\n             loop\n                if In_Tree.Projects.Table (Index).Virtual then\n-                  In_Tree.Projects.Table (Index).Object_Directory :=\n+                  In_Tree.Projects.Table (Index).Object_Directory.Name :=\n                     Object_Dir;\n                end if;\n             end loop;\n@@ -2338,7 +2338,7 @@ package body Prj.Proc is\n             Extending := In_Tree.Projects.Table (Proj).Extended_By;\n \n             if Extending /= No_Project then\n-               Obj_Dir := In_Tree.Projects.Table (Proj).Object_Directory;\n+               Obj_Dir := In_Tree.Projects.Table (Proj).Object_Directory.Name;\n \n                --  Check that a project being extended does not share its\n                --  object directory with any project that extends it, directly\n@@ -2351,8 +2351,8 @@ package body Prj.Proc is\n                   if In_Tree.Projects.Table (Extending2).Ada_Sources /=\n                     Nil_String\n                     and then\n-                      In_Tree.Projects.Table (Extending2).Object_Directory =\n-                      Obj_Dir\n+                      In_Tree.Projects.Table\n+                        (Extending2).Object_Directory.Name = Obj_Dir\n                   then\n                      if In_Tree.Projects.Table (Extending2).Virtual then\n                         Error_Msg_Name_1 :=\n@@ -2562,20 +2562,20 @@ package body Prj.Proc is\n                Processed_Data.Display_Name := Name_Find;\n             end if;\n \n-            Processed_Data.Display_Path_Name :=\n+            Processed_Data.Path.Display_Name :=\n               Path_Name_Of (From_Project_Node, From_Project_Node_Tree);\n-            Get_Name_String (Processed_Data.Display_Path_Name);\n+            Get_Name_String (Processed_Data.Path.Display_Name);\n             Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-            Processed_Data.Path_Name := Name_Find;\n+            Processed_Data.Path.Name := Name_Find;\n \n             Processed_Data.Location :=\n               Location_Of (From_Project_Node, From_Project_Node_Tree);\n \n-            Processed_Data.Display_Directory :=\n+            Processed_Data.Directory.Display_Name :=\n               Directory_Of (From_Project_Node, From_Project_Node_Tree);\n-            Get_Name_String (Processed_Data.Display_Directory);\n+            Get_Name_String (Processed_Data.Directory.Display_Name);\n             Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-            Processed_Data.Directory := Name_Find;\n+            Processed_Data.Directory.Name := Name_Find;\n \n             Processed_Data.Extended_By := Extended_By;\n "}, {"sha": "d838b1144424036362b3785d605a0f7bcdc35d4f", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -95,21 +95,16 @@ package body Prj is\n                       First_Referred_By              => No_Project,\n                       Name                           => No_Name,\n                       Display_Name                   => No_Name,\n-                      Path_Name                      => No_Path,\n-                      Display_Path_Name              => No_Path,\n+                      Path                           => No_Path_Information,\n                       Virtual                        => False,\n                       Location                       => No_Location,\n                       Mains                          => Nil_String,\n-                      Directory                      => No_Path,\n-                      Display_Directory              => No_Path,\n+                      Directory                      => No_Path_Information,\n                       Dir_Path                       => null,\n                       Library                        => False,\n-                      Library_Dir                    => No_Path,\n-                      Display_Library_Dir            => No_Path,\n-                      Library_Src_Dir                => No_Path,\n-                      Display_Library_Src_Dir        => No_Path,\n-                      Library_ALI_Dir                => No_Path,\n-                      Display_Library_ALI_Dir        => No_Path,\n+                      Library_Dir                    => No_Path_Information,\n+                      Library_Src_Dir                => No_Path_Information,\n+                      Library_ALI_Dir                => No_Path_Information,\n                       Library_Name                   => No_Name,\n                       Library_Kind                   => Static,\n                       Lib_Internal_Name              => No_Name,\n@@ -131,11 +126,9 @@ package body Prj is\n                       Include_Language               => No_Language_Index,\n                       Source_Dirs                    => Nil_String,\n                       Known_Order_Of_Source_Dirs     => True,\n-                      Object_Directory               => No_Path,\n-                      Display_Object_Dir             => No_Path,\n+                      Object_Directory               => No_Path_Information,\n                       Library_TS                     => Empty_Time_Stamp,\n-                      Exec_Directory                 => No_Path,\n-                      Display_Exec_Dir               => No_Path,\n+                      Exec_Directory                 => No_Path_Information,\n                       Extends                        => No_Project,\n                       Extended_By                    => No_Project,\n                       Naming                         => Std_Naming_Data,"}, {"sha": "edeb3ace65c2e208c51a7bccd91f5b580a3604db", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 135, "deletions": 131, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3c04308eef477c84841ef6090ad28e71315220/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=3b3c04308eef477c84841ef6090ad28e71315220", "patch": "@@ -150,6 +150,13 @@ package Prj is\n    function Empty_String return Name_Id;\n    --  Return the id for an empty string \"\"\n \n+   type Path_Information is record\n+      Name         : Path_Name_Type := No_Path;\n+      Display_Name : Path_Name_Type := No_Path;\n+   end record;\n+\n+   No_Path_Information : constant Path_Information := (No_Path, No_Path);\n+\n    type Project_Id is new Nat;\n    No_Project : constant Project_Id := 0;\n    --  Id of a Project File\n@@ -672,11 +679,8 @@ package Prj is\n       Display_File        : File_Name_Type        := No_File;\n       --  File name of the source, for display purposes\n \n-      Path                : Path_Name_Type        := No_Path;\n-      --  Canonical path name of the source\n-\n-      Display_Path        : Path_Name_Type        := No_Path;\n-      --  Path name of the source, for display purposes\n+      Path                : Path_Information      := No_Path_Information;\n+      --  Path name of the source\n \n       Source_TS           : Time_Stamp_Type       := Empty_Time_Stamp;\n       --  Time stamp of the source file\n@@ -756,8 +760,7 @@ package Prj is\n                        Replaced_By            => No_Source,\n                        File                   => No_File,\n                        Display_File           => No_File,\n-                       Path                   => No_Path,\n-                       Display_Path           => No_Path,\n+                       Path                   => No_Path_Information,\n                        Source_TS              => Empty_Time_Stamp,\n                        Object_Project         => No_Project,\n                        Object_Exists          => True,\n@@ -1252,97 +1255,133 @@ package Prj is\n    --  separator.\n \n    type Project_Data is record\n+\n+      -------------\n+      -- General --\n+      -------------\n+\n+      Name : Name_Id := No_Name;\n+      --  The name of the project\n+\n+      Display_Name : Name_Id := No_Name;\n+      --  The name of the project with the spelling of its declaration\n+\n       Qualifier : Project_Qualifier := Unspecified;\n       --  The eventual qualifier for this project\n \n       Externally_Built : Boolean := False;\n       --  True if the project is externally built. In such case, the Project\n       --  Manager will not modify anything in this project.\n \n+      Config : Project_Configuration;\n+\n+      Path              : Path_Information := No_Path_Information;\n+      --  The path name of the project file\n+\n+      Virtual : Boolean := False;\n+      --  True for virtual extending projects\n+\n+      Location : Source_Ptr := No_Location;\n+      --  The location in the project file source of the reserved word project\n+\n+      Naming : Naming_Data := Standard_Naming_Data;\n+      --  The naming scheme of this project file\n+\n+      ---------------\n+      -- Languages --\n+      ---------------\n+\n       Languages : Name_List_Index := No_Name_List;\n       --  The list of languages of the sources of this project\n \n-      Config : Project_Configuration;\n+      Include_Language : Language_Index := No_Language_Index;\n+\n+      First_Language_Processing : Language_Index := No_Language_Index;\n+      --  First index of the language data in the project\n+\n+      Unit_Based_Language_Name  : Name_Id := No_Name;\n+      Unit_Based_Language_Index : Language_Index := No_Language_Index;\n+      --  The name and index, if any, of the unit-based language of some\n+      --  sources of the project. There may be only one unit-based language\n+      --  in one project.\n+\n+      --------------\n+      -- Projects --\n+      --------------\n \n       First_Referred_By : Project_Id := No_Project;\n       --  The project, if any, that was the first to be known as importing or\n       --  extending this project\n \n-      Name : Name_Id := No_Name;\n-      --  The name of the project\n+      Mains : String_List_Id := Nil_String;\n+      --  List of mains specified by attribute Main\n \n-      Display_Name : Name_Id := No_Name;\n-      --  The name of the project with the spelling of its declaration\n+      Extends : Project_Id := No_Project;\n+      --  The reference of the project file, if any, that this project file\n+      --  extends.\n \n-      Path_Name : Path_Name_Type := No_Path;\n-      --  The path name of the project file\n+      Extended_By : Project_Id := No_Project;\n+      --  The reference of the project file, if any, that extends this project\n+      --  file.\n \n-      Display_Path_Name : Path_Name_Type := No_Path;\n-      --  The path name used for display purposes. May be different from\n-      --  Path_Name for platforms where the file names are case-insensitive.\n+      Decl : Declarations := No_Declarations;\n+      --  The declarations (variables, attributes and packages) of this project\n+      --  file.\n \n-      Virtual : Boolean := False;\n-      --  True for virtual extending projects\n+      Imported_Projects : Project_List := Empty_Project_List;\n+      --  The list of all directly imported projects, if any\n \n-      Location : Source_Ptr := No_Location;\n-      --  The location in the project file source of the reserved word project\n+      All_Imported_Projects : Project_List := Empty_Project_List;\n+      --  The list of all projects imported directly or indirectly, if any\n \n-      Mains : String_List_Id := Nil_String;\n-      --  List of mains specified by attribute Main\n+      -----------------\n+      -- Directories --\n+      -----------------\n \n-      Directory : Path_Name_Type := No_Path;\n+      Directory : Path_Information := No_Path_Information;\n       --  Path name of the directory where the project file resides\n \n-      Display_Directory : Path_Name_Type := No_Path;\n-      --  The path name of the project directory, for display purposes. May be\n-      --  different from Directory for platforms where the file names are\n-      --  case-insensitive.\n-\n       Dir_Path : String_Access;\n-      --  Same as Directory, but as an access to String\n+      --  Same as Directory.Name, but as an access to String\n+\n+      Object_Directory : Path_Information := No_Path_Information;\n+      --  The path name of the object directory of this project file\n+\n+      Exec_Directory : Path_Information := No_Path_Information;\n+      --  The path name of the exec directory of this project file. Default is\n+      --  equal to Object_Directory.\n+\n+      -------------\n+      -- Library --\n+      -------------\n+\n+      Library : Boolean := False;\n+      --  True if this is a library project\n+\n+      Library_Name : Name_Id := No_Name;\n+      --  If a library project, name of the library\n \n-      Library_Dir : Path_Name_Type := No_Path;\n+      Library_Kind : Lib_Kind := Static;\n+      --  If a library project, kind of library\n+\n+      Library_Dir : Path_Information := No_Path_Information;\n       --  If a library project, path name of the directory where the library\n       --  resides.\n \n-      Display_Library_Dir : Path_Name_Type := No_Path;\n-      --  The path name of the library directory, for display purposes. May be\n-      --  different from Library_Dir for platforms where the file names are\n-      --  case-insensitive.\n-\n       Library_TS : Time_Stamp_Type := Empty_Time_Stamp;\n       --  The timestamp of a library file in a library project\n \n-      Library_Src_Dir : Path_Name_Type := No_Path;\n+      Library_Src_Dir : Path_Information := No_Path_Information;\n       --  If a Stand-Alone Library project, path name of the directory where\n       --  the sources of the interfaces of the library are copied. By default,\n       --  if attribute Library_Src_Dir is not specified, sources of the\n       --  interfaces are not copied anywhere.\n \n-      Display_Library_Src_Dir : Path_Name_Type := No_Path;\n-      --  The path name of the library source directory, for display purposes.\n-      --  May be different from Library_Src_Dir for platforms where the file\n-      --  names are case-insensitive.\n-\n-      Library_ALI_Dir : Path_Name_Type := No_Path;\n+      Library_ALI_Dir : Path_Information := No_Path_Information;\n       --  In a library project, path name of the directory where the ALI files\n       --  are copied. If attribute Library_ALI_Dir is not specified, ALI files\n       --  are copied in the Library_Dir.\n \n-      Display_Library_ALI_Dir : Path_Name_Type := No_Path;\n-      --  The path name of the library ALI directory, for display purposes. May\n-      --  be different from Library_ALI_Dir for platforms where the file names\n-      --  are case-insensitive.\n-\n-      Library : Boolean := False;\n-      --  True if this is a library project\n-\n-      Library_Name : Name_Id := No_Name;\n-      --  If a library project, name of the library\n-\n-      Library_Kind : Lib_Kind := Static;\n-      --  If a library project, kind of library\n-\n       Lib_Internal_Name : Name_Id := No_Name;\n       --  If a library project, internal name store inside the library\n \n@@ -1357,12 +1396,17 @@ package Prj is\n       --  For non static Stand-Alone Library Project Files, indicate if\n       --  the library initialisation should be automatic.\n \n-      Libgnarl_Needed : Yes_No_Unknown := Unknown;\n-      --  Set to True when libgnarl is needed to link\n-\n       Symbol_Data : Symbol_Record := No_Symbols;\n       --  Symbol file name, reference symbol file name, symbol policy\n \n+      Need_To_Build_Lib : Boolean := False;\n+      --  Indicates that the library of a Library Project needs to be built or\n+      --  rebuilt.\n+\n+      -------------\n+      -- Sources --\n+      -------------\n+\n       Ada_Sources : String_List_Id := Nil_String;\n       --  The list of all the Ada source file names (gnatmake only)\n \n@@ -1377,28 +1421,22 @@ package Prj is\n       --  True if attribute Interfaces is declared for the project or any\n       --  project it extends.\n \n-      Unit_Based_Language_Name  : Name_Id := No_Name;\n-      Unit_Based_Language_Index : Language_Index := No_Language_Index;\n-      --  The name and index, if any, of the unit-based language of some\n-      --  sources of the project. There may be only one unit-based language\n-      --  in one project.\n-\n       Imported_Directories_Switches : Argument_List_Access := null;\n       --  List of the source search switches (-I<source dir>) to be used when\n       --  compiling.\n \n       Include_Path : String_Access := null;\n-      --  Value of the environment variable to indicate the source search path,\n-      --  instead of a list of switches (Imported_Directories_Switches).\n+      --  The search source path for the project. Used as the value for an\n+      --  environment variable, specified by attribute Include_Path\n+      --  (<language>). The names of the environment variables are in component\n+      --  Include_Path of the records Language_Config.\n \n       Include_Path_File : Path_Name_Type := No_Path;\n       --  The path name of the of the source search directory file\n \n       Include_Data_Set : Boolean := False;\n       --  Set True when Imported_Directories_Switches or Include_Path are set\n \n-      Include_Language : Language_Index := No_Language_Index;\n-\n       Source_Dirs : String_List_Id := Nil_String;\n       --  The list of all the source directories\n \n@@ -1407,57 +1445,38 @@ package Prj is\n       --  the ordering of the source subdirs depend on the OS. If True,\n       --  duplicate file names in the same project file are allowed.\n \n-      Object_Directory : Path_Name_Type := No_Path;\n-      --  The path name of the object directory of this project file\n-\n-      Display_Object_Dir : Path_Name_Type := No_Path;\n-      --  The path name of the object directory, for display purposes. May be\n-      --  different from Object_Directory for platforms where the file names\n-      --  are case-insensitive.\n-\n-      Exec_Directory : Path_Name_Type := No_Path;\n-      --  The path name of the exec directory of this project file. Default is\n-      --  equal to Object_Directory.\n-\n-      Display_Exec_Dir : Path_Name_Type := No_Path;\n-      --  The path name of the exec directory, for display purposes. May be\n-      --  different from Exec_Directory for platforms where the file names are\n-      --  case-insensitive.\n-\n-      Extends : Project_Id := No_Project;\n-      --  The reference of the project file, if any, that this project file\n-      --  extends.\n-\n-      Extended_By : Project_Id := No_Project;\n-      --  The reference of the project file, if any, that extends this project\n-      --  file.\n-\n-      Naming : Naming_Data := Standard_Naming_Data;\n-      --  The naming scheme of this project file\n+      Ada_Include_Path : String_Access := null;\n+      --  The cached value of source search path for this project file. Set by\n+      --  the first call to Prj.Env.Ada_Include_Path for the project. Do not\n+      --  use this field directly outside of the project manager, use\n+      --  Prj.Env.Ada_Include_Path instead.\n \n-      First_Language_Processing : Language_Index := No_Language_Index;\n-      --  First index of the language data in the project\n+      -------------\n+      -- Linking --\n+      -------------\n \n-      Decl : Declarations := No_Declarations;\n-      --  The declarations (variables, attributes and packages) of this project\n-      --  file.\n+      Linker_Name : File_Name_Type  := No_File;\n+      --  Value of attribute Language_Processing'Linker in the project file\n \n-      Imported_Projects : Project_List := Empty_Project_List;\n-      --  The list of all directly imported projects, if any\n+      Linker_Path : Path_Name_Type  := No_Path;\n+      --  Path of linker when attribute Language_Processing'Linker is specified\n \n-      All_Imported_Projects : Project_List := Empty_Project_List;\n-      --  The list of all projects imported directly or indirectly, if any\n+      Minimum_Linker_Options : Name_List_Index := No_Name_List;\n+      --  List of options specified in attribute\n+      --  Language_Processing'Minimum_Linker_Options.\n \n-      Ada_Include_Path : String_Access := null;\n-      --  The cached value of ADA_INCLUDE_PATH for this project file. Do not\n-      --  use this field directly outside of the compiler, use\n-      --  Prj.Env.Ada_Include_Path instead.\n+      -------------------\n+      -- Miscellaneous --\n+      -------------------\n \n       Ada_Objects_Path : String_Access := null;\n       --  The cached value of ADA_OBJECTS_PATH for this project file. Do not\n       --  use this field directly outside of the compiler, use\n       --  Prj.Env.Ada_Objects_Path instead.\n \n+      Libgnarl_Needed : Yes_No_Unknown := Unknown;\n+      --  Set to True when libgnarl is needed to link\n+\n       Objects_Path : String_Access := null;\n       --  The cached value of the object dir path, used during the binding\n       --  phase of gprbuild.\n@@ -1477,16 +1496,6 @@ package Prj is\n       --  An indication that the configuration pragmas file is a temporary file\n       --  that must be deleted at the end.\n \n-      Linker_Name : File_Name_Type  := No_File;\n-      --  Value of attribute Language_Processing'Linker in the project file\n-\n-      Linker_Path : Path_Name_Type  := No_Path;\n-      --  Path of linker when attribute Language_Processing'Linker is specified\n-\n-      Minimum_Linker_Options : Name_List_Index := No_Name_List;\n-      --  List of options specified in attribute\n-      --  Language_Processing'Minimum_Linker_Options.\n-\n       Config_Checked : Boolean := False;\n       --  A flag to avoid checking repetitively the configuration pragmas file\n \n@@ -1498,10 +1507,6 @@ package Prj is\n       --  A flag to mark a project as \"visited\" to avoid processing the same\n       --  project several time.\n \n-      Need_To_Build_Lib : Boolean := False;\n-      --  Indicates that the library of a Library Project needs to be built or\n-      --  rebuilt.\n-\n       Depth : Natural := 0;\n       --  The maximum depth of a project in the project graph. Depth of main\n       --  project is 0.\n@@ -1575,13 +1580,12 @@ package Prj is\n    type Spec_Or_Body is (Specification, Body_Part);\n \n    type File_Name_Data is record\n-      Name         : File_Name_Type := No_File;\n-      Index        : Int            := 0;\n-      Display_Name : File_Name_Type := No_File;\n-      Path         : Path_Name_Type := No_Path;\n-      Display_Path : Path_Name_Type := No_Path;\n-      Project      : Project_Id     := No_Project;\n-      Needs_Pragma : Boolean        := False;\n+      Name         : File_Name_Type   := No_File;\n+      Index        : Int              := 0;\n+      Display_Name : File_Name_Type   := No_File;\n+      Path         : Path_Information := No_Path_Information;\n+      Project      : Project_Id       := No_Project;\n+      Needs_Pragma : Boolean          := False;\n    end record;\n    --  File and Path name of a spec or body\n "}]}