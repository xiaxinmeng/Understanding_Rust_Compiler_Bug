{"sha": "9e72bc908653976e2e374e51ec6d7331cfdd0b72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU3MmJjOTA4NjUzOTc2ZTJlMzc0ZTUxZWM2ZDczMzFjZmRkMGI3Mg==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-11-10T18:20:33Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-11-10T18:20:33Z"}, "message": "[testsuite/ARM] Consolidate sources for cmse tests\n\nFor the most part, testcases under gcc.target/arm/cmse/baseline and\ngcc.target/arm/cmse/mainline are duplicate copies with only different\ndejagnu directives. Although there is no requirement for them to be\nsimilar, having them both identical allow to compare the code generated\nand make it easier in case of change in code generation to both\narchitecture to update the testcases (if one needs updating so does the\nother).\n\nSimilarly all the tests in gcc.target/arm/cmse/mainline/<floatabi> have\nthe same source but are duplicate copies.\n\nThis patch moves all the code in the tests to a parent directory:\ngcc.target/arm/cmse for tests shared by Armv8-M Baseline and Mainline\nand gcc.target/arm/cmse/mainline for tests *only* shared by the various\nfloat ABI of Armv8-M Mainline. C includes are then used where the code\nused to sit.\n\nNote that the cmse-13.c test used to differ slightly between\narchitectures and float ABI tested in the first floating-point constant\npassed to bar: sometimes 1.0 and sometimes 3.0. This patch settles on\n3.0 to not confuse with the 1.0 constant used to clear VFP registers in\nsome of the configurations.\n\n2017-11-10  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/testsuite/\n    * gcc.target/arm/cmse/bitfield-4.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-4.c: Remove code and include\n    above file.\n    * gcc.target/arm/cmse/mainline/bitfield-4.c: Likewise.\n    * gcc.target/arm/cmse/bitfield-5.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-5.c: Remove code and include\n    above file.\n    * gcc.target/arm/cmse/mainline/bitfield-5.c: Likewise.\n    * gcc.target/arm/cmse/bitfield-6.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-6.c: Remove code and include\n    above file.\n    * gcc.target/arm/cmse/mainline/bitfield-6.c: Likewise.\n    * gcc.target/arm/cmse/bitfield-7.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-7.c: Remove code and include\n    above file.\n    * gcc.target/arm/cmse/mainline/bitfield-7.c: Likewise.\n    * gcc.target/arm/cmse/bitfield-8.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-8.c: Remove code and include\n    above file.\n    * gcc.target/arm/cmse/mainline/bitfield-8.c: Likewise.\n    * gcc.target/arm/cmse/bitfield-9.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-9.c: Remove code and include\n    above file.\n    * gcc.target/arm/cmse/mainline/bitfield-9.c: Likewise.\n    * gcc.target/arm/cmse/bitfield-and-union.x: New file.\n    * gcc.target/arm/cmse/baseline/bitfield-and-union-1.c: Rename into ...\n    * gcc.target/arm/cmse/baseline/bitfield-and-union.c: This.  Remove code\n    and include above bitfield-and-union.x file.\n    * gcc.target/arm/cmse/mainline/bitfield-and-union-1.c: Rename into ...\n    * gcc.target/arm/cmse/mainline/bitfield-and-union.c: this.  Remove code\n    and include above bitfield-and-union.x file.\n    * gcc.target/arm/cmse/cmse-13.x: New file.\n    * gcc.target/arm/cmse/baseline/cmse-13.c: Remove code and include above\n    file.\n    * gcc.target/arm/cmse/mainline/hard-sp/cmse-13.c: Likewise.\n    * gcc.target/arm/cmse/mainline/hard/cmse-13.c: Likewise.\n    * gcc.target/arm/cmse/mainline/soft/cmse-13.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp/cmse-13.c: Likewise.\n    * gcc.target/arm/cmse/cmse-5.x: New file.\n    * gcc.target/arm/cmse/mainline/hard-sp/cmse-5.c: Remove code and\n    include above file.\n    * gcc.target/arm/cmse/mainline/hard/cmse-5.c: Likewise.\n    * gcc.target/arm/cmse/mainline/soft/cmse-5.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp-sp/cmse-5.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp/cmse-5.c: Likewise.\n    * gcc.target/arm/cmse/cmse-7.x: New file.\n    * gcc.target/arm/cmse/mainline/hard-sp/cmse-7.c: Remove code and\n    include above file.\n    * gcc.target/arm/cmse/mainline/hard/cmse-7.c: Likewise.\n    * gcc.target/arm/cmse/mainline/soft/cmse-7.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp-sp/cmse-7.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp/cmse-7.c: Likewise.\n    * gcc.target/arm/cmse/cmse-8.x: New file.\n    * gcc.target/arm/cmse/mainline/hard-sp/cmse-8.c: Remove code and\n    include above file.\n    * gcc.target/arm/cmse/mainline/hard/cmse-8.c: Likewise.\n    * gcc.target/arm/cmse/mainline/soft/cmse-8.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp-sp/cmse-8.c: Likewise.\n    * gcc.target/arm/cmse/mainline/softfp/cmse-8.c: Likewise.\n    * gcc.target/arm/cmse/union-1.x: New file.\n    * gcc.target/arm/cmse/baseline/union-1.c: Remove code and include above\n    file.\n    * gcc.target/arm/cmse/mainline/union-1.c: Likewise.\n    * gcc.target/arm/cmse/union-2.x: New file.\n    * gcc.target/arm/cmse/baseline/union-2.c: Remove code and include above\n    file.\n    * gcc.target/arm/cmse/mainline/union-2.c: Likewise.\n\nFrom-SVN: r254633", "tree": {"sha": "d0348ef776f4f0ede8688c1af0444ba31bc1dd2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0348ef776f4f0ede8688c1af0444ba31bc1dd2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e72bc908653976e2e374e51ec6d7331cfdd0b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e72bc908653976e2e374e51ec6d7331cfdd0b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e72bc908653976e2e374e51ec6d7331cfdd0b72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e72bc908653976e2e374e51ec6d7331cfdd0b72/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "008a11cc70710c6e43a8bb6be6f8b6e179e4ede7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008a11cc70710c6e43a8bb6be6f8b6e179e4ede7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/008a11cc70710c6e43a8bb6be6f8b6e179e4ede7"}], "stats": {"total": 1528, "additions": 545, "deletions": 983}, "files": [{"sha": "a6a4eacdbdee424e85a0980496cf630734737981", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,3 +1,73 @@\n+2017-11-10  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gcc.target/arm/cmse/bitfield-4.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-4.c: Remove code and include\n+\tabove file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-4.c: Likewise.\n+\t* gcc.target/arm/cmse/bitfield-5.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-5.c: Remove code and include\n+\tabove file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-5.c: Likewise.\n+\t* gcc.target/arm/cmse/bitfield-6.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-6.c: Remove code and include\n+\tabove file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-6.c: Likewise.\n+\t* gcc.target/arm/cmse/bitfield-7.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-7.c: Remove code and include\n+\tabove file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-7.c: Likewise.\n+\t* gcc.target/arm/cmse/bitfield-8.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-8.c: Remove code and include\n+\tabove file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-8.c: Likewise.\n+\t* gcc.target/arm/cmse/bitfield-9.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-9.c: Remove code and include\n+\tabove file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-9.c: Likewise.\n+\t* gcc.target/arm/cmse/bitfield-and-union.x: New file.\n+\t* gcc.target/arm/cmse/baseline/bitfield-and-union-1.c: Rename into ...\n+\t* gcc.target/arm/cmse/baseline/bitfield-and-union.c: This.  Remove code\n+\tand include above bitfield-and-union.x file.\n+\t* gcc.target/arm/cmse/mainline/bitfield-and-union-1.c: Rename into ...\n+\t* gcc.target/arm/cmse/mainline/bitfield-and-union.c: this.  Remove code\n+\tand include above bitfield-and-union.x file.\n+\t* gcc.target/arm/cmse/cmse-13.x: New file.\n+\t* gcc.target/arm/cmse/baseline/cmse-13.c: Remove code and include above\n+\tfile.\n+\t* gcc.target/arm/cmse/mainline/hard-sp/cmse-13.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/hard/cmse-13.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/soft/cmse-13.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp/cmse-13.c: Likewise.\n+\t* gcc.target/arm/cmse/cmse-5.x: New file.\n+\t* gcc.target/arm/cmse/mainline/hard-sp/cmse-5.c: Remove code and\n+\tinclude above file.\n+\t* gcc.target/arm/cmse/mainline/hard/cmse-5.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/soft/cmse-5.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp-sp/cmse-5.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp/cmse-5.c: Likewise.\n+\t* gcc.target/arm/cmse/cmse-7.x: New file.\n+\t* gcc.target/arm/cmse/mainline/hard-sp/cmse-7.c: Remove code and\n+\tinclude above file.\n+\t* gcc.target/arm/cmse/mainline/hard/cmse-7.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/soft/cmse-7.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp-sp/cmse-7.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp/cmse-7.c: Likewise.\n+\t* gcc.target/arm/cmse/cmse-8.x: New file.\n+\t* gcc.target/arm/cmse/mainline/hard-sp/cmse-8.c: Remove code and\n+\tinclude above file.\n+\t* gcc.target/arm/cmse/mainline/hard/cmse-8.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/soft/cmse-8.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp-sp/cmse-8.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/softfp/cmse-8.c: Likewise.\n+\t* gcc.target/arm/cmse/union-1.x: New file.\n+\t* gcc.target/arm/cmse/baseline/union-1.c: Remove code and include above\n+\tfile.\n+\t* gcc.target/arm/cmse/mainline/union-1.c: Likewise.\n+\t* gcc.target/arm/cmse/union-2.x: New file.\n+\t* gcc.target/arm/cmse/baseline/union-2.c: Remove code and include above\n+\tfile.\n+\t* gcc.target/arm/cmse/mainline/union-2.c: Likewise.\n+\n 2017-11-10  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/81117"}, {"sha": "2911da3a72d2a2ab7512476d9e369db8a8fb09b2", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-4.c", "status": "modified", "additions": 1, "deletions": 40, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-4.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,46 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char a;\n-  unsigned int b:5;\n-  unsigned int c:11, :0, d:8;\n-  struct { unsigned int ee:2; } e;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-extern void foo (test_st st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-  r.values.v4 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-4.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #65535\" } } */"}, {"sha": "376e92b23fa66e4db2043e220648eaca3bc63d9d", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-5.c", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,42 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned short  b :5;\n-  unsigned char\t  c;\n-  unsigned short  d :11;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-5.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #8191\" } } */"}, {"sha": "9845b6054c1bfc4208b7064b7364749e78b19102", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-6.c", "status": "modified", "additions": 1, "deletions": 45, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-6.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,51 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char a;\n-  unsigned int\tb : 3;\n-  unsigned int\tc : 14;\n-  unsigned int\td : 1;\n-  struct {\n-      unsigned int    ee  : 2;\n-      unsigned short  ff  : 15;\n-  } e;\n-  unsigned char\tg : 1;\n-  unsigned char\t  : 4;\n-  unsigned char\th : 3;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-  r.values.v4 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-6.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #65535\" } } */"}, {"sha": "2ea52dfe6552c7e649f0b29c1bc74955c221ee40", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-7.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned short  b :5;\n-  unsigned char\t  c;\n-  unsigned short  d :11;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n-\n+#include \"../bitfield-7.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #8191\" } } */"}, {"sha": "9bc32b83d7477c7d600aea5c92102b4126f89c3d", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-8.c", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,45 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned int\t    :0;\n-  unsigned int\t  b :1;\n-  unsigned short    :0;\n-  unsigned short  c;\n-  unsigned int\t    :0;\n-  unsigned int\t  d :21;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-8.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movs\\tr4, #255\" } } */"}, {"sha": "f6c15338d00b515c3c97825ae663792b12e5df51", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-9.c", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-9.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,48 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  char a:3;\n-} test_st3;\n-\n-typedef struct\n-{\n-  char a:3;\n-} test_st2;\n-\n-typedef struct\n-{\n-  test_st2 st2;\n-  test_st3 st3;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-9.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #1799\" } } */"}, {"sha": "642f4e0346b5186c78645780b45fe9c838848d45", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-and-union-1.c", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008a11cc70710c6e43a8bb6be6f8b6e179e4ede7/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-and-union-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008a11cc70710c6e43a8bb6be6f8b6e179e4ede7/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-and-union-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-and-union-1.c?ref=008a11cc70710c6e43a8bb6be6f8b6e179e4ede7", "patch": "@@ -1,96 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mcmse\" } */\n-\n-typedef struct\n-{\n-  unsigned short a :11;\n-} test_st_4;\n-\n-typedef union\n-{\n-  char\t      a;\n-  test_st_4 st4;\n-}test_un_2;\n-\n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned int\t    :0;\n-  unsigned int\t  b :1;\n-  unsigned short    :0;\n-  unsigned short  c;\n-  unsigned int\t    :0;\n-  unsigned int\t  d :21;\n-} test_st_3;\n-\n-typedef struct\n-{\n-  unsigned char\t  a :3;\n-  unsigned int\t  b :13;\n-  test_un_2\t  un2;\n-} test_st_2;\n-\n-typedef union\n-{\n-  test_st_2 st2;\n-  test_st_3 st3;\n-}test_un_1;\n-\n-typedef struct\n-{\n-  unsigned char\t  a :2;\n-  unsigned char\t    :0;\n-  unsigned short  b :5;\n-  unsigned char\t    :0;\n-  unsigned char\t  c :4;\n-  test_un_1\t  un1;\n-} test_st_1;\n-\n-typedef union\n-{\n-  test_st_1 st1;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st_1;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st_1);\n-\n-int\n-main (void)\n-{\n-  read_st_1 r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-  r.values.v4 = 0xFFFFFFFF;\n-\n-  f (r.st1);\n-  return 0;\n-}\n-\n-/* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n-/* { dg-final { scan-assembler \"movw\\tr4, #7939\" } } */\n-/* { dg-final { scan-assembler \"movt\\tr4, 15\" } } */\n-/* { dg-final { scan-assembler \"ands\\tr0, r4\" } } */\n-/* { dg-final { scan-assembler \"movw\\tr4, #65535\" } } */\n-/* { dg-final { scan-assembler \"movt\\tr4, 2047\" } } */\n-/* { dg-final { scan-assembler \"ands\\tr1, r4\" } } */\n-/* { dg-final { scan-assembler \"movs\\tr4, #1\" } } */\n-/* { dg-final { scan-assembler \"movt\\tr4, 65535\" } } */\n-/* { dg-final { scan-assembler \"ands\\tr2, r4\" } } */\n-/* { dg-final { scan-assembler \"movw\\tr4, #65535\" } } */\n-/* { dg-final { scan-assembler \"movt\\tr4, 31\" } } */\n-/* { dg-final { scan-assembler \"ands\\tr3, r4\" } } */\n-/* { dg-final { scan-assembler \"mov\\tr4, ip\" } } */\n-/* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */\n-/* { dg-final { scan-assembler \"lsls\\tr4, r4, #1\" } } */\n-/* { dg-final { scan-assembler \"bl\\t__gnu_cmse_nonsecure_call\" } } */"}, {"sha": "31249489e891ee16f8fa6f588096d48ce33f7b0b", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/bitfield-and-union.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-and-union.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-and-union.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fbitfield-and-union.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mcmse\" } */\n+\n+#include \"../bitfield-and-union.x\"\n+\n+/* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n+/* { dg-final { scan-assembler \"movw\\tr4, #7939\" } } */\n+/* { dg-final { scan-assembler \"movt\\tr4, 15\" } } */\n+/* { dg-final { scan-assembler \"ands\\tr0, r4\" } } */\n+/* { dg-final { scan-assembler \"movw\\tr4, #65535\" } } */\n+/* { dg-final { scan-assembler \"movt\\tr4, 2047\" } } */\n+/* { dg-final { scan-assembler \"ands\\tr1, r4\" } } */\n+/* { dg-final { scan-assembler \"movs\\tr4, #1\" } } */\n+/* { dg-final { scan-assembler \"movt\\tr4, 65535\" } } */\n+/* { dg-final { scan-assembler \"ands\\tr2, r4\" } } */\n+/* { dg-final { scan-assembler \"movw\\tr4, #65535\" } } */\n+/* { dg-final { scan-assembler \"movt\\tr4, 31\" } } */\n+/* { dg-final { scan-assembler \"ands\\tr3, r4\" } } */\n+/* { dg-final { scan-assembler \"mov\\tr4, ip\" } } */\n+/* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */\n+/* { dg-final { scan-assembler \"lsls\\tr4, r4, #1\" } } */\n+/* { dg-final { scan-assembler \"bl\\t__gnu_cmse_nonsecure_call\" } } */"}, {"sha": "7208a2cedd2f4f8296b2801d6f5e5d7838b26551", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/cmse-13.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fcmse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fcmse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Fcmse-13.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -3,13 +3,7 @@\n /* { dg-require-effective-target arm_arch_v8m_base_ok } */\n /* { dg-add-options arm_arch_v8m_base } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (float, double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (1.0f, 2.0) + a + 1;\n-}\n+#include \"../cmse-13.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "afd5b98509c6c425b21ba174e5bef68a4b171c9a", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/union-1.c", "status": "modified", "additions": 1, "deletions": 54, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Funion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Funion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Funion-1.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,60 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a :2;\n-  unsigned char\t    :0;\n-  unsigned short  b :5;\n-  unsigned char\t    :0;\n-  unsigned short  c :3;\n-  unsigned char\t    :0;\n-  unsigned int\t  d :9;\n-} test_st_1;\n-\n-typedef struct\n-{\n-  unsigned short  a :7;\n-  unsigned char\t    :0;\n-  unsigned char\t  b :1;\n-  unsigned char\t    :0;\n-  unsigned short  c :6;\n-} test_st_2;\n-\n-typedef union\n-{\n-  test_st_1 st_1;\n-  test_st_2 st_2;\n-}test_un;\n-\n-typedef union\n-{\n-  test_un un;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_un;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_un);\n-\n-int\n-main (void)\n-{\n-  read_un r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-\n-  f (r.un);\n-  return 0;\n-}\n+#include \"../union-1.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #8063\" } } */"}, {"sha": "6e60f2a762823dadfa670d5a2283aa6f25409f7e", "filename": "gcc/testsuite/gcc.target/arm/cmse/baseline/union-2.c", "status": "modified", "additions": 1, "deletions": 67, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Funion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Funion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbaseline%2Funion-2.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,73 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a :2;\n-  unsigned char\t    :0;\n-  unsigned short  b :5;\n-  unsigned char\t    :0;\n-  unsigned short  c :3;\n-  unsigned char\t    :0;\n-  unsigned int\t  d :9;\n-} test_st_1;\n-\n-typedef struct\n-{\n-  unsigned short  a :7;\n-  unsigned char\t    :0;\n-  unsigned char\t  b :1;\n-  unsigned char\t    :0;\n-  unsigned short  c :6;\n-} test_st_2;\n-\n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned int\t    :0;\n-  unsigned int\t  b :1;\n-  unsigned short    :0;\n-  unsigned short  c;\n-  unsigned int\t    :0;\n-  unsigned int\t  d :21;\n-} test_st_3;\n-\n-typedef union\n-{\n-  test_st_1 st_1;\n-  test_st_2 st_2;\n-  test_st_3 st_3;\n-}test_un;\n-\n-typedef union\n-{\n-  test_un un;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_un;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_un);\n-\n-int\n-main (void)\n-{\n-  read_un r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-\n-  f (r.un);\n-  return 0;\n-}\n+#include \"../union-2.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, r4\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #8191\" } } */"}, {"sha": "62e35cc3cb8ed9c0fd15ce07da49d5e7f6dd7955", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-4.x", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-4.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-4.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-4.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,40 @@\n+typedef struct\n+{\n+  unsigned char a;\n+  unsigned int b:5;\n+  unsigned int c:11, :0, d:8;\n+  struct { unsigned int ee:2; } e;\n+} test_st;\n+\n+typedef union\n+{\n+  test_st st;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_st;\n+\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n+\n+extern void foo (test_st st);\n+\n+int\n+main (void)\n+{\n+  read_st r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+  r.values.v3 = 0xFFFFFFFF;\n+  r.values.v4 = 0xFFFFFFFF;\n+\n+  f (r.st);\n+  return 0;\n+}"}, {"sha": "de5649dda6e815fc25475c7034a0638c4c29adf2", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-5.x", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-5.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-5.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-5.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,36 @@\n+typedef struct\n+{\n+  unsigned char\t  a;\n+  unsigned short  b :5;\n+  unsigned char\t  c;\n+  unsigned short  d :11;\n+} test_st;\n+\n+typedef union\n+{\n+  test_st st;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_st;\n+\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n+\n+int\n+main (void)\n+{\n+  read_st r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+\n+  f (r.st);\n+  return 0;\n+}"}, {"sha": "693a8ae0abbbb6bdcb9692728a7067603e1665ed", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-6.x", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-6.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-6.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-6.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,45 @@\n+typedef struct\n+{\n+  unsigned char a;\n+  unsigned int\tb : 3;\n+  unsigned int\tc : 14;\n+  unsigned int\td : 1;\n+  struct {\n+      unsigned int    ee  : 2;\n+      unsigned short  ff  : 15;\n+  } e;\n+  unsigned char\tg : 1;\n+  unsigned char\t  : 4;\n+  unsigned char\th : 3;\n+} test_st;\n+\n+typedef union\n+{\n+  test_st st;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_st;\n+\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n+\n+int\n+main (void)\n+{\n+  read_st r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+  r.values.v3 = 0xFFFFFFFF;\n+  r.values.v4 = 0xFFFFFFFF;\n+\n+  f (r.st);\n+  return 0;\n+}"}, {"sha": "de5649dda6e815fc25475c7034a0638c4c29adf2", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-7.x", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-7.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-7.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-7.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,36 @@\n+typedef struct\n+{\n+  unsigned char\t  a;\n+  unsigned short  b :5;\n+  unsigned char\t  c;\n+  unsigned short  d :11;\n+} test_st;\n+\n+typedef union\n+{\n+  test_st st;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_st;\n+\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n+\n+int\n+main (void)\n+{\n+  read_st r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+\n+  f (r.st);\n+  return 0;\n+}"}, {"sha": "654b21e94b5ab142897bc20765ae18e3a25e0fde", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-8.x", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-8.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-8.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-8.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,39 @@\n+typedef struct\n+{\n+  unsigned char\t  a;\n+  unsigned int\t    :0;\n+  unsigned int\t  b :1;\n+  unsigned short    :0;\n+  unsigned short  c;\n+  unsigned int\t    :0;\n+  unsigned int\t  d :21;\n+} test_st;\n+\n+typedef union\n+{\n+  test_st st;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_st;\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n+\n+int\n+main (void)\n+{\n+  read_st r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+  r.values.v3 = 0xFFFFFFFF;\n+\n+  f (r.st);\n+  return 0;\n+}"}, {"sha": "7543ac52696d82f8e95110b881783a81e5cf30c8", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-9.x", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-9.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-9.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-9.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,42 @@\n+typedef struct\n+{\n+  char a:3;\n+} test_st3;\n+\n+typedef struct\n+{\n+  char a:3;\n+} test_st2;\n+\n+typedef struct\n+{\n+  test_st2 st2;\n+  test_st3 st3;\n+} test_st;\n+\n+typedef union\n+{\n+  test_st st;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_st;\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n+\n+int\n+main (void)\n+{\n+  read_st r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+\n+  f (r.st);\n+  return 0;\n+}"}, {"sha": "0a6eb3dd81612e83b2178fa18d7fadec77375e9f", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-and-union.x", "status": "renamed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-and-union.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-and-union.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-and-union.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mcmse\" } */\n-\n typedef struct\n {\n   unsigned short a :11;\n@@ -76,19 +73,3 @@ main (void)\n   f (r.st1);\n   return 0;\n }\n-\n-/* { dg-final { scan-assembler \"movw\\tip, #7939\" } } */\n-/* { dg-final { scan-assembler \"movt\\tip, 15\" } } */\n-/* { dg-final { scan-assembler \"and\\tr0, r0, ip\" } } */\n-/* { dg-final { scan-assembler \"movw\\tip, #65535\" } } */\n-/* { dg-final { scan-assembler \"movt\\tip, 2047\" } } */\n-/* { dg-final { scan-assembler \"and\\tr1, r1, ip\" } } */\n-/* { dg-final { scan-assembler \"mov\\tip, #1\" } } */\n-/* { dg-final { scan-assembler \"movt\\tip, 65535\" } } */\n-/* { dg-final { scan-assembler \"and\\tr2, r2, ip\" } } */\n-/* { dg-final { scan-assembler \"movw\\tip, #65535\" } } */\n-/* { dg-final { scan-assembler \"movt\\tip, 31\" } } */\n-/* { dg-final { scan-assembler \"and\\tr3, r3, ip\" } } */\n-/* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */\n-/* { dg-final { scan-assembler \"lsls\\tr4, r4, #1\" } } */\n-/* { dg-final { scan-assembler \"bl\\t__gnu_cmse_nonsecure_call\" } } */", "previous_filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-and-union-1.c"}, {"sha": "cdcd5ba6cf64ce40afdb2dc568db4da28486fbc5", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse-13.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-13.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-13.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-13.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,7 @@\n+int __attribute__ ((cmse_nonsecure_call)) (*bar) (float, double);\n+\n+int\n+foo (int a)\n+{\n+  return bar (3.0f, 2.0) + a + 1;\n+}"}, {"sha": "7b03819d6b765356a52f242290facc00d6242f03", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse-5.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-5.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-5.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-5.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,7 @@\n+extern float bar (void);\n+\n+float __attribute__ ((cmse_nonsecure_entry))\n+foo (void)\n+{\n+  return bar ();\n+}"}, {"sha": "3fa372af2374732308a0bc2f1011de6d657b8125", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse-7.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-7.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-7.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-7.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,7 @@\n+int __attribute__ ((cmse_nonsecure_call)) (*bar) (void);\n+\n+int\n+foo (int a)\n+{\n+  return bar () + a + 1;\n+}"}, {"sha": "7e1479542edce2cf1bb3e3153d90a27521fd42c5", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse-8.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-8.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-8.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-8.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,7 @@\n+int __attribute__ ((cmse_nonsecure_call)) (*bar) (double);\n+\n+int\n+foo (int a)\n+{\n+  return bar (2.0) + a + 1;\n+}"}, {"sha": "55da2a0c62237f3072ea155fde1e4a38f849dd6f", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-4.c", "status": "modified", "additions": 1, "deletions": 40, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-4.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,46 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char a;\n-  unsigned int b:5;\n-  unsigned int c:11, :0, d:8;\n-  struct { unsigned int ee:2; } e;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-extern void foo (test_st st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-  r.values.v4 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-4.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #65535\" } } */\n /* { dg-final { scan-assembler \"movt\\tip, 255\" } } */"}, {"sha": "383363233e632189058559f4f569cd2f23fd3638", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-5.c", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,42 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned short  b :5;\n-  unsigned char\t  c;\n-  unsigned short  d :11;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-5.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #8191\" } } */\n /* { dg-final { scan-assembler \"movt\\tip, 255\" } } */"}, {"sha": "03c294ea323a7da7fa365b806db8b15e57ed7695", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-6.c", "status": "modified", "additions": 1, "deletions": 45, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-6.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,51 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char a;\n-  unsigned int\tb : 3;\n-  unsigned int\tc : 14;\n-  unsigned int\td : 1;\n-  struct {\n-      unsigned int    ee  : 2;\n-      unsigned short  ff  : 15;\n-  } e;\n-  unsigned char\tg : 1;\n-  unsigned char\t  : 4;\n-  unsigned char\th : 3;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-  r.values.v4 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-6.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #65535\" } } */\n /* { dg-final { scan-assembler \"movt\\tip, 1023\" } } */"}, {"sha": "7692a69b1598857eba0c7c72c16596eb34e672da", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-7.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned short  b :5;\n-  unsigned char\t  c;\n-  unsigned short  d :11;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n-\n+#include \"../bitfield-7.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #8191\" } } */\n /* { dg-final { scan-assembler \"movt\\tip, 255\" } } */"}, {"sha": "a0a488775fe39ec282f9162714ba78d0217a08e1", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-8.c", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,45 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned int\t    :0;\n-  unsigned int\t  b :1;\n-  unsigned short    :0;\n-  unsigned short  c;\n-  unsigned int\t    :0;\n-  unsigned int\t  d :21;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-8.x\"\n \n /* { dg-final { scan-assembler \"mov\\tip, #255\" } } */\n /* { dg-final { scan-assembler \"and\\tr0, r0, ip\" } } */"}, {"sha": "8bfeeb0bbf61591783b60ec3858bed44efbaca89", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-9.c", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-9.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,48 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  char a:3;\n-} test_st3;\n-\n-typedef struct\n-{\n-  char a:3;\n-} test_st2;\n-\n-typedef struct\n-{\n-  test_st2 st2;\n-  test_st3 st3;\n-} test_st;\n-\n-typedef union\n-{\n-  test_st st;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_st;\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_st);\n-\n-int\n-main (void)\n-{\n-  read_st r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-\n-  f (r.st);\n-  return 0;\n-}\n+#include \"../bitfield-9.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #1799\" } } */\n /* { dg-final { scan-assembler \"and\\tr0, r0, ip\" } } */"}, {"sha": "aac5ae1a052deb90d9f9b40e2054e8831bea4a7e", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/bitfield-and-union.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-and-union.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-and-union.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fbitfield-and-union.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mcmse\" } */\n+\n+#include \"../bitfield-and-union.x\"\n+\n+/* { dg-final { scan-assembler \"movw\\tip, #7939\" } } */\n+/* { dg-final { scan-assembler \"movt\\tip, 15\" } } */\n+/* { dg-final { scan-assembler \"and\\tr0, r0, ip\" } } */\n+/* { dg-final { scan-assembler \"movw\\tip, #65535\" } } */\n+/* { dg-final { scan-assembler \"movt\\tip, 2047\" } } */\n+/* { dg-final { scan-assembler \"and\\tr1, r1, ip\" } } */\n+/* { dg-final { scan-assembler \"mov\\tip, #1\" } } */\n+/* { dg-final { scan-assembler \"movt\\tip, 65535\" } } */\n+/* { dg-final { scan-assembler \"and\\tr2, r2, ip\" } } */\n+/* { dg-final { scan-assembler \"movw\\tip, #65535\" } } */\n+/* { dg-final { scan-assembler \"movt\\tip, 31\" } } */\n+/* { dg-final { scan-assembler \"and\\tr3, r3, ip\" } } */\n+/* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */\n+/* { dg-final { scan-assembler \"lsls\\tr4, r4, #1\" } } */\n+/* { dg-final { scan-assembler \"bl\\t__gnu_cmse_nonsecure_call\" } } */"}, {"sha": "6f4d6b4b75539a53502c4d99c06dcb36c34e338e", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard-sp/cmse-13.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-13.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,14 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-\n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (float, double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (3.0f, 2.0) + a + 1;\n-}\n+#include \"../../cmse-13.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "0ae2a51990b3a32d6b1189816b8904467e699ead", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard-sp/cmse-5.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,8 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-extern float bar (void);\n+#include \"../../cmse-5.x\"\n \n-float __attribute__ ((cmse_nonsecure_entry))\n-foo (void)\n-{\n-  return bar ();\n-}\n /* { dg-final { scan-assembler \"mov\\tr0, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr1, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr2, lr\" } } */\n@@ -32,8 +27,8 @@ foo (void)\n /* { dg-final { scan-assembler \"vmov\\.f32\\ts13, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f32\\ts14, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f32\\ts15, #1\\.0\" } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { arm_arch_v8m_main_ok && { ! arm_dsp } } } } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target { arm_arch_v8m_main_ok && arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { ! arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target arm_dsp } } } */\n /* { dg-final { scan-assembler \"push\\t{r4}\" } } */\n /* { dg-final { scan-assembler \"vmrs\\tip, fpscr\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #65376\" } } */"}, {"sha": "141ba73484c21df108dc5c376a35787e9c07de3c", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard-sp/cmse-7.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (void);\n-\n-int\n-foo (int a)\n-{\n-  return bar () + a + 1;\n-}\n+#include \"../../cmse-7.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "6c5e688f220ca669fa7251acbee9161a2a769cfc", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard-sp/cmse-8.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard-sp%2Fcmse-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (2.0) + a + 1;\n-}\n+#include \"../../cmse-8.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "d35321bfda841be87f74ca17a4050c5eba67bf85", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard/cmse-13.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-13.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,14 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-\n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (float, double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (3.0f, 2.0) + a + 1;\n-}\n+#include \"../../cmse-13.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "955f749cb72f08bc8c07c13e7d0fa17b78428904", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard/cmse-5.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,8 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-extern float bar (void);\n+#include \"../../cmse-5.x\"\n \n-float __attribute__ ((cmse_nonsecure_entry))\n-foo (void)\n-{\n-  return bar ();\n-}\n /* { dg-final { scan-assembler \"mov\\tr0, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr1, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr2, lr\" } } */\n@@ -25,8 +20,8 @@ foo (void)\n /* { dg-final { scan-assembler \"vmov\\.f64\\td5, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f64\\td6, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f64\\td7, #1\\.0\" } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { arm_arch_v8m_main_ok && { ! arm_dsp } } } } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target { arm_arch_v8m_main_ok && arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { ! arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target arm_dsp } } } */\n /* { dg-final { scan-assembler \"push\\t{r4}\" } } */\n /* { dg-final { scan-assembler \"vmrs\\tip, fpscr\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #65376\" } } */"}, {"sha": "858555b8d89e10be6eed0ba47911b49843646470", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard/cmse-7.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (void);\n-\n-int\n-foo (int a)\n-{\n-  return bar () + a + 1;\n-}\n+#include \"../../cmse-7.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "f85d68a3eff97c8f5a3b4057e374522be7e4333d", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/hard/cmse-8.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fhard%2Fcmse-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=softfp } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (2.0) + a + 1;\n-}\n+#include \"../../cmse-8.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "11d44550de96c4dfc8ec3ab353b9a08c68d2d092", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/soft/cmse-13.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-13.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -4,13 +4,7 @@\n /* { dg-add-options arm_arch_v8m_main } */\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=hard\" -mfloat-abi=softfp } {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (float, double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (1.0f, 2.0) + a + 1;\n-}\n+#include \"../../cmse-13.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "dfd2fe6323a5f2772f54599450177974e89a82e1", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/soft/cmse-5.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -4,21 +4,15 @@\n /* { dg-add-options arm_arch_v8m_main } */\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=hard\" -mfloat-abi=softfp } {\"\"} } */\n \n-extern float bar (void);\n-\n-float __attribute__ ((cmse_nonsecure_entry))\n-foo (void)\n-{\n-  return bar ();\n-}\n+#include \"../../cmse-5.x\"\n \n /* { dg-final { scan-assembler \"mov\\tr1, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr2, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr3, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tip, lr\" } } */\n /* { dg-final { scan-assembler-not \"vmov\" } } */\n /* { dg-final { scan-assembler-not \"vmsr\" } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { arm_arch_v8m_main_ok && { ! arm_dsp } } } } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target { arm_arch_v8m_main_ok && arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { ! arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target arm_dsp } } } */\n /* { dg-final { scan-assembler \"bxns\" } } */\n "}, {"sha": "76ca271278e07a777986afa1a7cf1d8d585121f5", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/soft/cmse-7.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -4,13 +4,7 @@\n /* { dg-add-options arm_arch_v8m_main } */\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=hard\" -mfloat-abi=softfp } {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (void);\n-\n-int\n-foo (int a)\n-{\n-  return bar () + a + 1;\n-}\n+#include \"../../cmse-7.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "a917aa7778aa03f21d25b93dcfd27b0c2f96521f", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/soft/cmse-8.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoft%2Fcmse-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -4,13 +4,7 @@\n /* { dg-add-options arm_arch_v8m_main } */\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=hard\" -mfloat-abi=softfp } {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (2.0) + a + 1;\n-}\n+#include \"../../cmse-8.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "01e5d659fe2f63f85ce20dde3a019a71c7fea0dd", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp-sp/cmse-5.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,8 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-extern float bar (void);\n+#include \"../../cmse-5.x\"\n \n-float __attribute__ ((cmse_nonsecure_entry))\n-foo (void)\n-{\n-  return bar ();\n-}\n /* { dg-final { scan-assembler \"__acle_se_foo:\" } } */\n /* { dg-final { scan-assembler-not \"mov\\tr0, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr1, lr\" } } */\n@@ -33,8 +28,8 @@ foo (void)\n /* { dg-final { scan-assembler \"vmov\\.f32\\ts13, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f32\\ts14, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f32\\ts15, #1\\.0\" } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { arm_arch_v8m_main_ok && { ! arm_dsp } } } } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target { arm_arch_v8m_main_ok && arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { ! arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target arm_dsp } } } */\n /* { dg-final { scan-assembler \"push\\t{r4}\" } } */\n /* { dg-final { scan-assembler \"vmrs\\tip, fpscr\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #65376\" } } */"}, {"sha": "5d904786e41fc53f603d0082899599401596a12b", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp-sp/cmse-7.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (void);\n-\n-int\n-foo (int a)\n-{\n-  return bar () + a + 1;\n-}\n+#include \"../../cmse-7.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "3feee43c423fe4573121f39e0e244b18090e7d2d", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp-sp/cmse-8.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp-sp%2Fcmse-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing double precision\" {*-*-*} {\"-mfpu=fpv[4-5]-d16\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (2.0) + a + 1;\n-}\n+#include \"../../cmse-8.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "4eb984f44790b6577bfe6bb501a805219d38e980", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp/cmse-13.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-13.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (float, double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (1.0f, 2.0) + a + 1;\n-}\n+#include \"../../cmse-13.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "4815a480f667d6493b81aa0d8fb8a6578d504813", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp/cmse-5.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-5.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,8 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-extern float bar (void);\n+#include \"../../cmse-5.x\"\n \n-float __attribute__ ((cmse_nonsecure_entry))\n-foo (void)\n-{\n-  return bar ();\n-}\n /* { dg-final { scan-assembler \"__acle_se_foo:\" } } */\n /* { dg-final { scan-assembler-not \"mov\\tr0, lr\" } } */\n /* { dg-final { scan-assembler \"mov\\tr1, lr\" } } */\n@@ -25,8 +20,8 @@ foo (void)\n /* { dg-final { scan-assembler \"vmov\\.f64\\td5, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f64\\td6, #1\\.0\" } } */\n /* { dg-final { scan-assembler \"vmov\\.f64\\td7, #1\\.0\" } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { arm_arch_v8m_main_ok && { ! arm_dsp } } } } } */\n-/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target { arm_arch_v8m_main_ok && arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvq, lr\" { target { ! arm_dsp } } } } */\n+/* { dg-final { scan-assembler \"msr\\tAPSR_nzcvqg, lr\" { target arm_dsp } } } */\n /* { dg-final { scan-assembler \"push\\t{r4}\" } } */\n /* { dg-final { scan-assembler \"vmrs\\tip, fpscr\" } } */\n /* { dg-final { scan-assembler \"movw\\tr4, #65376\" } } */"}, {"sha": "5535c5514b115d4efb6be977e44b6170ec996fd8", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp/cmse-7.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-7.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (void);\n-\n-int\n-foo (int a)\n-{\n-  return bar () + a + 1;\n-}\n+#include \"../../cmse-7.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "6663fc43f5f8f3ee7376750d288ac5f0858273c8", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/softfp/cmse-8.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Fsoftfp%2Fcmse-8.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -5,13 +5,7 @@\n /* { dg-skip-if \"Do not combine float-abi= hard | soft | softfp\" {*-*-*} {\"-mfloat-abi=soft\" -mfloat-abi=hard } {\"\"} } */\n /* { dg-skip-if \"Skip these if testing single precision\" {*-*-*} {\"-mfpu=*-sp-*\"} {\"\"} } */\n \n-int __attribute__ ((cmse_nonsecure_call)) (*bar) (double);\n-\n-int\n-foo (int a)\n-{\n-  return bar (2.0) + a + 1;\n-}\n+#include \"../../cmse-8.x\"\n \n /* Checks for saving and clearing prior to function call.  */\n /* { dg-final { scan-assembler \"lsrs\\tr4, r4, #1\" } } */"}, {"sha": "071955f206c04c13ec04bbe7034edb4754c47563", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/union-1.c", "status": "modified", "additions": 1, "deletions": 54, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Funion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Funion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Funion-1.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,60 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a :2;\n-  unsigned char\t    :0;\n-  unsigned short  b :5;\n-  unsigned char\t    :0;\n-  unsigned short  c :3;\n-  unsigned char\t    :0;\n-  unsigned int\t  d :9;\n-} test_st_1;\n-\n-typedef struct\n-{\n-  unsigned short  a :7;\n-  unsigned char\t    :0;\n-  unsigned char\t  b :1;\n-  unsigned char\t    :0;\n-  unsigned short  c :6;\n-} test_st_2;\n-\n-typedef union\n-{\n-  test_st_1 st_1;\n-  test_st_2 st_2;\n-}test_un;\n-\n-typedef union\n-{\n-  test_un un;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_un;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_un);\n-\n-int\n-main (void)\n-{\n-  read_un r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-\n-  f (r.un);\n-  return 0;\n-}\n+#include \"../union-1.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #8063\" } } */\n /* { dg-final { scan-assembler \"movt\\tip, 63\" } } */"}, {"sha": "c7431930ff95215361feea6b28e981ed6d5cb824", "filename": "gcc/testsuite/gcc.target/arm/cmse/mainline/union-2.c", "status": "modified", "additions": 1, "deletions": 67, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Funion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Funion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fmainline%2Funion-2.c?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -1,73 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mcmse\" } */\n \n-typedef struct\n-{\n-  unsigned char\t  a :2;\n-  unsigned char\t    :0;\n-  unsigned short  b :5;\n-  unsigned char\t    :0;\n-  unsigned short  c :3;\n-  unsigned char\t    :0;\n-  unsigned int\t  d :9;\n-} test_st_1;\n-\n-typedef struct\n-{\n-  unsigned short  a :7;\n-  unsigned char\t    :0;\n-  unsigned char\t  b :1;\n-  unsigned char\t    :0;\n-  unsigned short  c :6;\n-} test_st_2;\n-\n-typedef struct\n-{\n-  unsigned char\t  a;\n-  unsigned int\t    :0;\n-  unsigned int\t  b :1;\n-  unsigned short    :0;\n-  unsigned short  c;\n-  unsigned int\t    :0;\n-  unsigned int\t  d :21;\n-} test_st_3;\n-\n-typedef union\n-{\n-  test_st_1 st_1;\n-  test_st_2 st_2;\n-  test_st_3 st_3;\n-}test_un;\n-\n-typedef union\n-{\n-  test_un un;\n-  struct\n-    {\n-      unsigned int v1;\n-      unsigned int v2;\n-      unsigned int v3;\n-      unsigned int v4;\n-    }values;\n-} read_un;\n-\n-\n-typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_un);\n-\n-int\n-main (void)\n-{\n-  read_un r;\n-  foo_ns f;\n-\n-  f = (foo_ns) 0x200000;\n-  r.values.v1 = 0xFFFFFFFF;\n-  r.values.v2 = 0xFFFFFFFF;\n-  r.values.v3 = 0xFFFFFFFF;\n-\n-  f (r.un);\n-  return 0;\n-}\n+#include \"../union-2.x\"\n \n /* { dg-final { scan-assembler \"movw\\tip, #8191\" } } */\n /* { dg-final { scan-assembler \"movt\\tip, 63\" } } */"}, {"sha": "8fe953514952199df822cf1dd89ae24661ca8223", "filename": "gcc/testsuite/gcc.target/arm/cmse/union-1.x", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Funion-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Funion-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Funion-1.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,54 @@\n+typedef struct\n+{\n+  unsigned char\t  a :2;\n+  unsigned char\t    :0;\n+  unsigned short  b :5;\n+  unsigned char\t    :0;\n+  unsigned short  c :3;\n+  unsigned char\t    :0;\n+  unsigned int\t  d :9;\n+} test_st_1;\n+\n+typedef struct\n+{\n+  unsigned short  a :7;\n+  unsigned char\t    :0;\n+  unsigned char\t  b :1;\n+  unsigned char\t    :0;\n+  unsigned short  c :6;\n+} test_st_2;\n+\n+typedef union\n+{\n+  test_st_1 st_1;\n+  test_st_2 st_2;\n+}test_un;\n+\n+typedef union\n+{\n+  test_un un;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_un;\n+\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_un);\n+\n+int\n+main (void)\n+{\n+  read_un r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+\n+  f (r.un);\n+  return 0;\n+}"}, {"sha": "8a880e7cb5f2754092ecfa61714e6683fe4013a5", "filename": "gcc/testsuite/gcc.target/arm/cmse/union-2.x", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Funion-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e72bc908653976e2e374e51ec6d7331cfdd0b72/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Funion-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Funion-2.x?ref=9e72bc908653976e2e374e51ec6d7331cfdd0b72", "patch": "@@ -0,0 +1,67 @@\n+typedef struct\n+{\n+  unsigned char\t  a :2;\n+  unsigned char\t    :0;\n+  unsigned short  b :5;\n+  unsigned char\t    :0;\n+  unsigned short  c :3;\n+  unsigned char\t    :0;\n+  unsigned int\t  d :9;\n+} test_st_1;\n+\n+typedef struct\n+{\n+  unsigned short  a :7;\n+  unsigned char\t    :0;\n+  unsigned char\t  b :1;\n+  unsigned char\t    :0;\n+  unsigned short  c :6;\n+} test_st_2;\n+\n+typedef struct\n+{\n+  unsigned char\t  a;\n+  unsigned int\t    :0;\n+  unsigned int\t  b :1;\n+  unsigned short    :0;\n+  unsigned short  c;\n+  unsigned int\t    :0;\n+  unsigned int\t  d :21;\n+} test_st_3;\n+\n+typedef union\n+{\n+  test_st_1 st_1;\n+  test_st_2 st_2;\n+  test_st_3 st_3;\n+}test_un;\n+\n+typedef union\n+{\n+  test_un un;\n+  struct\n+    {\n+      unsigned int v1;\n+      unsigned int v2;\n+      unsigned int v3;\n+      unsigned int v4;\n+    }values;\n+} read_un;\n+\n+\n+typedef void __attribute__ ((cmse_nonsecure_call)) (*foo_ns) (test_un);\n+\n+int\n+main (void)\n+{\n+  read_un r;\n+  foo_ns f;\n+\n+  f = (foo_ns) 0x200000;\n+  r.values.v1 = 0xFFFFFFFF;\n+  r.values.v2 = 0xFFFFFFFF;\n+  r.values.v3 = 0xFFFFFFFF;\n+\n+  f (r.un);\n+  return 0;\n+}"}]}