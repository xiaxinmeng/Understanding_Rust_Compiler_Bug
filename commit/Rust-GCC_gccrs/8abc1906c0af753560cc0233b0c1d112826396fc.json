{"sha": "8abc1906c0af753560cc0233b0c1d112826396fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFiYzE5MDZjMGFmNzUzNTYwY2MwMjMzYjBjMWQxMTI4MjYzOTZmYw==", "commit": {"author": {"name": "Doug Kwan", "email": "dougkwan@google.com", "date": "2008-07-14T21:01:42Z"}, "committer": {"name": "Doug Kwan", "email": "dougkwan@gcc.gnu.org", "date": "2008-07-14T21:01:42Z"}, "message": "config.gcc (arm*-*-eabi*): Include arm/eabi.h and use additional option file arm/eabi.opt.\n\n2008-07-14  Doug Kwan  <dougkwan@google.com>\n\n\t* config.gcc (arm*-*-eabi*): Include arm/eabi.h and use\n\tadditional option file arm/eabi.opt.\n\t* config/arm/eabi.h (File): New configuration file for EABI targets.\n\t* config/arm/elf.h (SUBTARGET_EXTRA_SPECS): Add\n\tSUBSUBTARGET_EXTRA_SPECS.\n\t(SUBSUBTARGET_EXTRA_SPECS): Provide empty default.\n\t* config/arm/unknown-elf.h (UNKNOWN_ELF_STARTFILE_SPEC): Renamed\n\tfrom STARTFILE_SPEC so that it can be referenced in an override.\n\t(STARTFILE_SPEC): Use UNKNOWN_ELF_STARTFILE_SPEC.\n\t(UNKNOWN_ELF_ENDFILE_SPEC): Renamed from ENDFILE_SPEC so that it\n\tcan be referenced in an override.\n\t(ENDFILE_SPEC): Use UNKNOWN_ELF_ENDFILE_SPEC.\n\t* config/arm/bpabi.h (BPABI_LINK_SPEC): Renamed from LINK_SPEC\n\tso that it can be referenced in an override.\n\t(LINK_SPEC): Use BPABI_LINK_SPEC.\n\t* config/arm/eabi.opt (File): New.\n\nFrom-SVN: r137798", "tree": {"sha": "9e88347e708a186e5714613b7216d73f7078f8e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e88347e708a186e5714613b7216d73f7078f8e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8abc1906c0af753560cc0233b0c1d112826396fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abc1906c0af753560cc0233b0c1d112826396fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8abc1906c0af753560cc0233b0c1d112826396fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abc1906c0af753560cc0233b0c1d112826396fc/comments", "author": {"login": "dougkwan", "id": 1399231, "node_id": "MDQ6VXNlcjEzOTkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1399231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dougkwan", "html_url": "https://github.com/dougkwan", "followers_url": "https://api.github.com/users/dougkwan/followers", "following_url": "https://api.github.com/users/dougkwan/following{/other_user}", "gists_url": "https://api.github.com/users/dougkwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dougkwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dougkwan/subscriptions", "organizations_url": "https://api.github.com/users/dougkwan/orgs", "repos_url": "https://api.github.com/users/dougkwan/repos", "events_url": "https://api.github.com/users/dougkwan/events{/privacy}", "received_events_url": "https://api.github.com/users/dougkwan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6dc4bfc4cc9526d3adba2069ce40bad13aa71ed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc4bfc4cc9526d3adba2069ce40bad13aa71ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc4bfc4cc9526d3adba2069ce40bad13aa71ed5"}], "stats": {"total": 190, "additions": 185, "deletions": 5}, "files": [{"sha": "1918d36563b58002c8855ace994972368ee9a93c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -1,3 +1,22 @@\n+2008-07-14  Doug Kwan  <dougkwan@google.com>\n+\n+\t* config.gcc (arm*-*-eabi*): Include arm/eabi.h and use\n+\tadditional option file arm/eabi.opt.\n+\t* config/arm/eabi.h (File): New configuration file for EABI targets.\n+\t* config/arm/elf.h (SUBTARGET_EXTRA_SPECS): Add\n+\tSUBSUBTARGET_EXTRA_SPECS.\n+\t(SUBSUBTARGET_EXTRA_SPECS): Provide empty default.\n+\t* config/arm/unknown-elf.h (UNKNOWN_ELF_STARTFILE_SPEC): Renamed\n+\tfrom STARTFILE_SPEC so that it can be referenced in an override.\n+\t(STARTFILE_SPEC): Use UNKNOWN_ELF_STARTFILE_SPEC.\n+\t(UNKNOWN_ELF_ENDFILE_SPEC): Renamed from ENDFILE_SPEC so that it\n+\tcan be referenced in an override.\n+\t(ENDFILE_SPEC): Use UNKNOWN_ELF_ENDFILE_SPEC.\n+\t* config/arm/bpabi.h (BPABI_LINK_SPEC): Renamed from LINK_SPEC\n+\tso that it can be referenced in an override.\n+\t(LINK_SPEC): Use BPABI_LINK_SPEC.\n+\t* config/arm/eabi.opt (File): New.\n+\n 2008-07-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in (TARGET_DEF_H): Add targhooks.h."}, {"sha": "5cd1707338048bcc34739b673489e8d1f5944c7b", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -763,7 +763,9 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n \tcase ${target} in\n \tarm*-*-eabi*)\n+\t  tm_file=\"$tm_file arm/eabi.h\"\n \t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n+\t  extra_options=\"${extra_options} arm/eabi.opt\"\n \t  ;;\n \tarm*-*-symbianelf*)\n \t  tm_file=\"${tm_file} arm/symbian.h\""}, {"sha": "e28d9ead45e77a42ea2f2c88907b6d3452ebad29", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -60,11 +60,14 @@\n #endif\n \n /* The generic link spec in elf.h does not support shared libraries.  */\n-#undef  LINK_SPEC\n-#define LINK_SPEC \"%{mbig-endian:-EB} %{mlittle-endian:-EL} \"\t\t\\\n+#define BPABI_LINK_SPEC \\\n+  \"%{mbig-endian:-EB} %{mlittle-endian:-EL} \"\t\t\\\n   \"%{static:-Bstatic} %{shared:-shared} %{symbolic:-Bsymbolic} \"\t\\\n   \"-X\" SUBTARGET_EXTRA_LINK_SPEC\n \n+#undef  LINK_SPEC\n+#define LINK_SPEC BPABI_LINK_SPEC\n+\n #if defined (__thumb__)\n #define RENAME_LIBRARY_SET \".thumb_set\"\n #else"}, {"sha": "c7d1d3ed20ccf08a74290d567dd83ae2ff83442b", "filename": "gcc/config/arm/eabi.h", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Feabi.h?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -0,0 +1,125 @@\n+/* Configuration file for ARM EABI targets.\n+   Copyright (C) 2008\n+   Free Software Foundation, Inc.\n+   Contributed by Doug Kwan (dougkwan@google.com)\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* This file contains macro overrides for EABI targets.  */\n+\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      TARGET_BPABI_CPP_BUILTINS ();\t\t\t\\\n+      if (TARGET_ANDROID)\t\t\t\t\\\n+\tbuiltin_define (\"__ANDROID__\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (false)\n+\n+#undef SUBSUBTARGET_EXTRA_SPECS\n+#define SUBSUBTARGET_EXTRA_SPECS \\\n+  { \"link_android\",\t\tANDROID_LINK_SPEC },\t\t\\\n+  { \"link_default\",\t\tBPABI_LINK_SPEC },\t\t\\\n+  { \"cc1_android\",\t\tANDROID_CC1_SPEC },\t\t\\\n+  { \"cc1_default\",\t\tCC1_DEFAULT_SPEC },\t\t\\\n+  { \"cc1plus_android\",\t\tANDROID_CC1PLUS_SPEC },\t\t\\\n+  { \"cc1plus_default\",\t\tCC1PLUS_DEFAULT_SPEC },\t\t\\\n+  { \"lib_android\",\t\tANDROID_LIB_SPEC },\t\t\\\n+  { \"lib_default\",\t\tLIB_DEFAULT_SPEC },\t\t\\\n+  { \"startfile_android\",\tANDROID_STARTFILE_SPEC },\t\\\n+  { \"startfile_default\",\tUNKNOWN_ELF_STARTFILE_SPEC },\t\\\n+  { \"endfile_android\",\t\tANDROID_ENDFILE_SPEC },\t\t\\\n+  { \"endfile_default\",\t\tUNKNOWN_ELF_ENDFILE_SPEC },\t\\\n+\n+#undef ANDROID_LINK_SPEC\n+#define ANDROID_LINK_SPEC \\\n+\"%{mbig-endian:-EB} %{mlittle-endian:-EL} \"\t\t\\\n+\"%{static:-Bstatic} %{shared:-shared} %{symbolic:-Bsymbolic} \"\t\\\n+\"%{!static:\" \\\n+   \"%{shared: -Bsymbolic} \" \\\n+   \"%{!shared:\" \\\n+      \"%{rdynamic:-export-dynamic} \" \\\n+      \"%{!dynamic-linker:-dynamic-linker /system/bin/linker}}} \" \\\n+\"-X\" SUBTARGET_EXTRA_LINK_SPEC\n+\n+/* Override LINK_SPEC in bpabi.h. */\n+#undef LINK_SPEC\n+#define LINK_SPEC \\\n+\"%{mandroid: %(link_android) ;\" \\\n+\"          : %(link_default)}\"\n+\n+/* Android uses -fno-exceptions by default. */\n+#undef ANDROID_CC1_SPEC\n+#define ANDROID_CC1_SPEC \"%{!fexceptions:-fno-exceptions}\"\n+\n+/* Default CC1_SPEC as in arm.h. */\n+#undef CC1_DEFAULT_SPEC\n+#define CC1_DEFAULT_SPEC \"\"\n+\n+#undef CC1_SPEC\n+#define CC1_SPEC \\\n+\"%{mandroid: %(cc1_android) ;\" \\\n+\"          : %(cc1_default)}\"\n+\n+/* Android uses -fno-rtti by default. */\n+#undef ANDROID_CC1PLUS_SPEC\n+#define ANDROID_CC1PLUS_SPEC \"%{!frtti:-fno-rtti}\"\n+\n+/* Default CC1PLUS_SPEC as in gcc.c. */\n+#undef CC1PLUS_DEFAULT_SPEC\n+#define CC1PLUS_DEFAULT_SPEC \"\"\n+\n+#undef CC1PLUS_SPEC\n+#define CC1PLUS_SPEC \\\n+\"%{mandroid: %(cc1plus_android) ;\" \\\n+\"          : %(cc1plus_default)}\"\n+\n+#undef ANDROID_LIB_SPEC\n+#define ANDROID_LIB_SPEC\t\"-lc %{!static:-ldl}\"\n+\n+/* Default LIB_SPEC as in gcc.c. */\n+#undef LIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC \\\n+\"%{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}}\"\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \\\n+\"%{mandroid: %(lib_android) ;\" \\\n+\"          : %(lib_default)}\"\n+\n+#undef ANDROID_STARTFILE_SPEC\n+#define ANDROID_STARTFILE_SPEC \\\n+\"%{!shared:\" \\\n+   \"%{static: crtbegin_static%O%s ;\" \\\n+   \"        : crtbegin_dynamic%O%s}}\"\n+\n+/* Override STARTFILE_SPEC in unknown-elf.h. */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+\"%{mandroid: %(startfile_android) ;\" \\\n+\"          : %(startfile_default)}\"\n+\n+#undef ANDROID_ENDFILE_SPEC\n+#define ANDROID_ENDFILE_SPEC\t\"%{!shared:crtend_android%O%s}\"\n+\n+/* Override ENDFILE_SPEC in unknown-elf.h. */\n+#undef ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+\"%{mandroid: %(endfile_android) ;\" \\\n+\"          : %(endfile_default)}\"\n+"}, {"sha": "2cda98d56d1163be58412d60821db9f3db1a38b2", "filename": "gcc/config/arm/eabi.opt", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Feabi.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Feabi.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Feabi.opt?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -0,0 +1,23 @@\n+; EABI specific options for ARM port of the compiler.\n+\n+; Copyright (C) 2008 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+mandroid\n+Target Report RejectNegative Mask(ANDROID)\n+Generate code for the Android operating system."}, {"sha": "7c3eddbe05845749832114ee5191f935907c9a88", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -36,7 +36,8 @@\n #ifndef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS \\\n   { \"subtarget_extra_asm_spec\",\tSUBTARGET_EXTRA_ASM_SPEC }, \\\n-  { \"subtarget_asm_float_spec\", SUBTARGET_ASM_FLOAT_SPEC },\n+  { \"subtarget_asm_float_spec\", SUBTARGET_ASM_FLOAT_SPEC }, \\\n+  SUBSUBTARGET_EXTRA_SPECS\n #endif\n \n #ifndef SUBTARGET_EXTRA_ASM_SPEC\n@@ -48,6 +49,9 @@\n %{mapcs-float:-mfloat}\"\n #endif\n \n+#undef SUBSUBTARGET_EXTRA_SPECS\n+#define SUBSUBTARGET_EXTRA_SPECS\n+\n #ifndef ASM_SPEC\n #define ASM_SPEC \"\\\n %{mbig-endian:-EB} \\"}, {"sha": "331e40a1eceed2a45f44b09d7811263cedcdaa69", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abc1906c0af753560cc0233b0c1d112826396fc/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=8abc1906c0af753560cc0233b0c1d112826396fc", "patch": "@@ -33,11 +33,15 @@\n #endif\n \n /* Now we define the strings used to build the spec file.  */\n+#define UNKNOWN_ELF_STARTFILE_SPEC\t\" crti%O%s crtbegin%O%s crt0%O%s\"\n+\n #undef  STARTFILE_SPEC\n-#define STARTFILE_SPEC\t\" crti%O%s crtbegin%O%s crt0%O%s\"\n+#define STARTFILE_SPEC\tUNKNOWN_ELF_STARTFILE_SPEC\n+\n+#define UNKNOWN_ELF_ENDFILE_SPEC\t\"crtend%O%s crtn%O%s\"\n \n #undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC\t\"crtend%O%s crtn%O%s\"\n+#define ENDFILE_SPEC\tUNKNOWN_ELF_ENDFILE_SPEC\n \n /* The __USES_INITFINI__ define is tested in newlib/libc/sys/arm/crt0.S\n    to see if it needs to invoked _init() and _fini().  */"}]}