{"sha": "1a218fc914c5693297312ea6869c94f0cf15b35a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyMThmYzkxNGM1NjkzMjk3MzEyZWE2ODY5Yzk0ZjBjZjE1YjM1YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2016-01-27T17:42:47Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-01-27T17:42:47Z"}, "message": "common.opt (fkeep-gc-roots-live): New undocumented option.\n\ngcc/:\n\t* common.opt (fkeep-gc-roots-live): New undocumented option.\n\t* tree-ssa-loop-ivopts.c (add_candidate_1): If\n\t-fkeep-gc-roots-live, skip pointers.\n\t(add_iv_candidate_for_biv): Handle add_candidate_1 returning\n\tNULL.\n\ngcc/testsuite/:\n\t* gcc.dg/tree-ssa/ivopt_5.c: New test.\n\nFrom-SVN: r232888", "tree": {"sha": "9c27e28bec476497f23cf551790e63816551db2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c27e28bec476497f23cf551790e63816551db2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a218fc914c5693297312ea6869c94f0cf15b35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a218fc914c5693297312ea6869c94f0cf15b35a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a218fc914c5693297312ea6869c94f0cf15b35a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a218fc914c5693297312ea6869c94f0cf15b35a/comments", "author": null, "committer": null, "parents": [{"sha": "5d70666e4c20dd634283e09336c78f79fce77d77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d70666e4c20dd634283e09336c78f79fce77d77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d70666e4c20dd634283e09336c78f79fce77d77"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "60322afb7a6d2a05b7bb5a22d2e2dd207a184061", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a218fc914c5693297312ea6869c94f0cf15b35a", "patch": "@@ -1,3 +1,11 @@\n+2016-01-27  Ian Lance Taylor  <iant@google.com>\n+\n+\t* common.opt (fkeep-gc-roots-live): New undocumented option.\n+\t* tree-ssa-loop-ivopts.c (add_candidate_1): If\n+\t-fkeep-gc-roots-live, skip pointers.\n+\t(add_iv_candidate_for_biv): Handle add_candidate_1 returning\n+\tNULL.\n+\n 2016-01-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/69512"}, {"sha": "520fa9c9dd57701d4707a4bd746f0d384164a9eb", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=1a218fc914c5693297312ea6869c94f0cf15b35a", "patch": "@@ -1380,6 +1380,10 @@ Common Report Var(flag_hoist_adjacent_loads) Optimization\n Enable hoisting adjacent loads to encourage generating conditional move\n instructions.\n \n+fkeep-gc-roots-live\n+Common Undocumented Report Var(flag_keep_gc_roots_live) Optimization\n+; Always keep a pointer to a live memory block\n+\n floop-parallelize-all\n Common Report Var(flag_loop_parallelize_all) Optimization\n Mark all loops as parallel."}, {"sha": "b3af22c448d104d611474b0c06b5f88cee52e403", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a218fc914c5693297312ea6869c94f0cf15b35a", "patch": "@@ -1,3 +1,7 @@\n+2016-01-27  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gcc.dg/tree-ssa/ivopt_5.c: New test.\n+\n 2016-01-27  Ryan Burn  <contact@rnburn.com>\n \n \tPR cilkplus/69267"}, {"sha": "b0d4166fb9a17f457b905d97008a12f256f00de5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ivopt_5.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopt_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopt_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopt_5.c?ref=1a218fc914c5693297312ea6869c94f0cf15b35a", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-options \"-O2 -fdump-tree-ivopts -fkeep-gc-roots-live\" } */\n+\n+/* Only integer ivopts here when using -fkeep-gc-roots-live.   */\n+\n+void foo (char *pstart, int n)\n+{\n+  char *p;\n+  char *pend = pstart + n;\n+\n+  for (p = pstart; p < pend; p++)\n+    *p = 1;\n+}\n+\n+void foo1 (char *pstart, int n)\n+{\n+  char *p;\n+  char *pend = pstart + n;\n+\n+  for (p = pstart; p != pend; p++)\n+    *p = 1;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"ivtmp.\\[0-9_\\]* = PHI <\\[^0\\]\" 0 \"ivopts\"} } */"}, {"sha": "4026d28bb2c9cf6d4b88eb750f6ae41c82a3f251", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a218fc914c5693297312ea6869c94f0cf15b35a/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=1a218fc914c5693297312ea6869c94f0cf15b35a", "patch": "@@ -2815,6 +2815,16 @@ add_candidate_1 (struct ivopts_data *data,\n   struct iv_cand *cand = NULL;\n   tree type, orig_type;\n \n+  /* -fkeep-gc-roots-live means that we have to keep a real pointer\n+     live, but the ivopts code may replace a real pointer with one\n+     pointing before or after the memory block that is then adjusted\n+     into the memory block during the loop.  FIXME: It would likely be\n+     better to actually force the pointer live and still use ivopts;\n+     for example, it would be enough to write the pointer into memory\n+     and keep it there until after the loop.  */\n+  if (flag_keep_gc_roots_live && POINTER_TYPE_P (TREE_TYPE (base)))\n+    return NULL;\n+\n   /* For non-original variables, make sure their values are computed in a type\n      that does not invoke undefined behavior on overflows (since in general,\n      we cannot prove that these induction variables are non-wrapping).  */\n@@ -3083,8 +3093,11 @@ add_iv_candidate_for_biv (struct ivopts_data *data, struct iv *iv)\n \t  cand = add_candidate_1 (data,\n \t\t\t\t  iv->base, iv->step, true, IP_ORIGINAL, NULL,\n \t\t\t\t  SSA_NAME_DEF_STMT (def));\n-\t  cand->var_before = iv->ssa_name;\n-\t  cand->var_after = def;\n+\t  if (cand)\n+\t    {\n+\t      cand->var_before = iv->ssa_name;\n+\t      cand->var_after = def;\n+\t    }\n \t}\n       else\n \tgcc_assert (gimple_bb (phi) == data->current_loop->header);"}]}