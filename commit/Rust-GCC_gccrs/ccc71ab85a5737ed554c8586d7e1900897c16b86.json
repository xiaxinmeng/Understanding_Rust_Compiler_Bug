{"sha": "ccc71ab85a5737ed554c8586d7e1900897c16b86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NjNzFhYjg1YTU3MzdlZDU1NGM4NTg2ZDdlMTkwMDg5N2MxNmI4Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-02-03T17:01:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-02-03T17:01:01Z"}, "message": "tsan-dg.exp (tsan_init): Move check if tsan executable works from here ...\n\n\t* lib/tsan-dg.exp (tsan_init): Move check if tsan executable\n\tworks from here ...\n\t(check_effective_target_fsanitize_thread): ... to here.  Do not\n\tspecify additional compile flags for the test source.\n\t* lib/asan-dg.exp (check_effective_target_fsanitize_address): Do not\n\tspecify additional compile flags for the test source.\n\nFrom-SVN: r233106", "tree": {"sha": "530e99aa031df09d45baafd523d286333475f499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/530e99aa031df09d45baafd523d286333475f499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccc71ab85a5737ed554c8586d7e1900897c16b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc71ab85a5737ed554c8586d7e1900897c16b86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc71ab85a5737ed554c8586d7e1900897c16b86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc71ab85a5737ed554c8586d7e1900897c16b86/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "203ae08bb31cd53e725fe29c5a21e5613e09fc3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203ae08bb31cd53e725fe29c5a21e5613e09fc3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203ae08bb31cd53e725fe29c5a21e5613e09fc3b"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "8ad0a6074bbd764c9faac6cf550c781162379fca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc71ab85a5737ed554c8586d7e1900897c16b86/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc71ab85a5737ed554c8586d7e1900897c16b86/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ccc71ab85a5737ed554c8586d7e1900897c16b86", "patch": "@@ -1,3 +1,12 @@\n+2016-02-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* lib/tsan-dg.exp (tsan_init): Move check if tsan executable\n+\tworks from here ...\n+\t(check_effective_target_fsanitize_thread): ... to here.  Do not\n+\tspecify additional compile flags for the test source.\n+\t* lib/asan-dg.exp (check_effective_target_fsanitize_address): Do not\n+\tspecify additional compile flags for the test source.\n+\n 2016-02-03  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/ccmp_1.c: Fix test issue."}, {"sha": "a1198c0f201f6adbf8c5f6e2010333defa2c279e", "filename": "gcc/testsuite/lib/asan-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc71ab85a5737ed554c8586d7e1900897c16b86/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc71ab85a5737ed554c8586d7e1900897c16b86/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp?ref=ccc71ab85a5737ed554c8586d7e1900897c16b86", "patch": "@@ -20,7 +20,7 @@\n proc check_effective_target_fsanitize_address {} {\n     return [check_no_compiler_messages fsanitize_address executable {\n \tint main (void) { return 0; }\n-    } \"-fsanitize=address\"]\n+    }]\n }\n \n proc asan_include_flags {} {"}, {"sha": "7ca10ab64f92284fecd180564d2ccfbc57424b34", "filename": "gcc/testsuite/lib/tsan-dg.exp", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc71ab85a5737ed554c8586d7e1900897c16b86/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc71ab85a5737ed554c8586d7e1900897c16b86/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp?ref=ccc71ab85a5737ed554c8586d7e1900897c16b86", "patch": "@@ -15,12 +15,31 @@\n # <http://www.gnu.org/licenses/>.\n \n # Return 1 if compilation with -fsanitize=thread is error-free for trivial\n-# code, 0 otherwise.\n+# code, 0 otherwise.  Also set what to do by default here, depending on the\n+# result of a runtime test.\n \n proc check_effective_target_fsanitize_thread {} {\n-    return [check_runtime fsanitize_thread {\n+    global individual_timeout\n+    global dg-do-what-default\n+\n+    if ![check_no_compiler_messages fsanitize_thread executable {\n \tint main (void) { return 0; }\n-    } \"-fsanitize=thread\"]\n+    }] {\n+        return 0\n+    }\n+\n+    # Lower timeout value in case test does not terminate properly.\n+    set individual_timeout 20\n+    if [check_runtime_nocache tsan_works {\n+\tint main () { return 0; }\n+    }] {\n+\tset dg-do-what-default run\n+    } else {\n+\tset dg-do-what-default link\n+    }\n+    unset individual_timeout\n+\n+    return 1\n }\n \n #\n@@ -101,22 +120,6 @@ proc tsan_init { args } {\n \t    set TEST_ALWAYS_FLAGS \"$link_flags -fsanitize=thread -g\"\n \t}\n     }\n-\n-    set dg-do-what-default run\n-    if { $link_flags != \"\" } {\n-\tglobal individual_timeout\n-\n-\t# Lower timeout value in case test does not terminate properly.\n-\tset individual_timeout 20\n-\tif [check_runtime_nocache tsan_works {\n-\t\tint main () { return 0; }\n-\t    } \"-fsanitize=thread -g\"] {\n-\t    set dg-do-what-default run\n-\t} else {\n-\t    set dg-do-what-default compile\n-\t}\n-\tunset individual_timeout\n-    }\n }\n \n #"}]}