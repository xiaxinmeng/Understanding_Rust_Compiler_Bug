{"sha": "641d44433f4955c33001258c070f96599b8694c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQxZDQ0NDMzZjQ5NTVjMzMwMDEyNThjMDcwZjk2NTk5Yjg2OTRjOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-19T21:59:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-19T21:59:23Z"}, "message": "(unsafe_chars): `p' is unsafe before `-' or `+', since it might generate a C9X-style hexadecimal floating-point number.\n\n(unsafe_chars): `p' is unsafe before `-' or `+', since it\nmight generate a C9X-style hexadecimal floating-point number.\n(cpp_handle_options): Set c89 option to 1 if -lang-c89.\n\nFrom-SVN: r13749", "tree": {"sha": "11b40ab19f3e8057b636b313086592cb96847b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11b40ab19f3e8057b636b313086592cb96847b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/641d44433f4955c33001258c070f96599b8694c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/641d44433f4955c33001258c070f96599b8694c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/641d44433f4955c33001258c070f96599b8694c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/641d44433f4955c33001258c070f96599b8694c9/comments", "author": null, "committer": null, "parents": [{"sha": "76e804216b6e641200178a55cfbfc109f2dc573a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e804216b6e641200178a55cfbfc109f2dc573a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e804216b6e641200178a55cfbfc109f2dc573a"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "92820da93b359c09dca3fdea2867aaa1f7fff7bb", "filename": "gcc/cpplib.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/641d44433f4955c33001258c070f96599b8694c9/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/641d44433f4955c33001258c070f96599b8694c9/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=641d44433f4955c33001258c070f96599b8694c9", "patch": "@@ -2558,7 +2558,7 @@ unsafe_chars (c1, c2)\n     case '.':\n     case '0': case '1': case '2': case '3': case '4':\n     case '5': case '6': case '7': case '8': case '9':\n-    case 'e': case 'E':\n+    case 'e': case 'E': case 'p': case 'P':\n       if (c2 == '-' || c2 == '+')\n \treturn 1; /* could extend a pre-processing number */\n       goto letter;\n@@ -2570,12 +2570,12 @@ unsafe_chars (c1, c2)\n     case '_':\n     case 'a': case 'b': case 'c': case 'd':           case 'f':\n     case 'g': case 'h': case 'i': case 'j': case 'k': case 'l':\n-    case 'm': case 'n': case 'o': case 'p': case 'q': case 'r':\n+    case 'm': case 'n': case 'o':           case 'q': case 'r':\n     case 's': case 't': case 'u': case 'v': case 'w': case 'x':\n     case 'y': case 'z':\n     case 'A': case 'B': case 'C': case 'D':           case 'F':\n     case 'G': case 'H': case 'I': case 'J': case 'K':\n-    case 'M': case 'N': case 'O': case 'P': case 'Q': case 'R':\n+    case 'M': case 'N': case 'O':           case 'Q': case 'R':\n     case 'S': case 'T': case 'U': case 'V': case 'W': case 'X':\n     case 'Y': case 'Z':\n       /* We're in the middle of either a name or a pre-processing number.  */\n@@ -4999,7 +4999,9 @@ cpp_get_token (pfile)\n \t      if (c == EOF)\n \t\tbreak;\n \t      if (!is_idchar[c] && c != '.'\n-\t\t  && ((c2 != 'e' && c2 != 'E') || (c != '+' && c != '-')))\n+\t\t  && ((c2 != 'e' && c2 != 'E'\n+\t\t       && ((c2 != 'p' && c2 != 'P') || CPP_C89 (pfile)))\n+\t\t      || (c != '+' && c != '-')))\n \t\tbreak;\n \t      FORWARD(1);\n \t      c2= c;\n@@ -6440,15 +6442,20 @@ cpp_handle_options (pfile, argc, argv)\n \n       case 'l':\n \tif (! strcmp (argv[i], \"-lang-c\"))\n-\t  opts->cplusplus = 0, opts->cplusplus_comments = 0, opts->objc = 0;\n+\t  opts->cplusplus = 0, opts->cplusplus_comments = 1, opts->c89 = 0,\n+\t  opts->objc = 0;\n+\tif (! strcmp (argv[i], \"-lang-c89\"))\n+\t  opts->cplusplus = 0, opts->cplusplus_comments = 0, opts->c89 = 1,\n+\t  opts->objc = 0;\n \tif (! strcmp (argv[i], \"-lang-c++\"))\n-\t  opts->cplusplus = 1, opts->cplusplus_comments = 1, opts->objc = 0;\n-\tif (! strcmp (argv[i], \"-lang-c-c++-comments\"))\n-\t  opts->cplusplus = 0, opts->cplusplus_comments = 1, opts->objc = 0;\n+\t  opts->cplusplus = 1, opts->cplusplus_comments = 1, opts->c89 = 0,\n+\t  opts->objc = 0;\n \tif (! strcmp (argv[i], \"-lang-objc\"))\n-\t  opts->objc = 1, opts->cplusplus = 0, opts->cplusplus_comments = 1;\n+\t  opts->cplusplus = 0, opts->cplusplus_comments = 1, opts->c89 = 0,\n+\t  opts->objc = 1;\n \tif (! strcmp (argv[i], \"-lang-objc++\"))\n-\t  opts->objc = 1, opts->cplusplus = 1, opts->cplusplus_comments = 1;\n+\t  opts->cplusplus = 1, opts->cplusplus_comments = 1, opts->c89 = 0,\n+\t  opts->objc = 1;\n  \tif (! strcmp (argv[i], \"-lang-asm\"))\n  \t  opts->lang_asm = 1;\n  \tif (! strcmp (argv[i], \"-lint\"))"}]}