{"sha": "cb8f73be28c7ad42f8244cc9e442c7559d39f725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I4ZjczYmUyOGM3YWQ0MmY4MjQ0Y2M5ZTQ0MmM3NTU5ZDM5ZjcyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2002-02-24T12:46:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-02-24T12:46:52Z"}, "message": "optabs.c (widen_operand): Only call convert_modes for promoted SUBREG if signedness matches.\n\n\t* optabs.c (widen_operand): Only call convert_modes for\n\tpromoted SUBREG if signedness matches.\n\t* config/alpha/alpha.md (*addsi_se2, *subsi_se2): New patterns.\n\nFrom-SVN: r50004", "tree": {"sha": "99233f48d28edd8bdceacfb41c695098e8b5393d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99233f48d28edd8bdceacfb41c695098e8b5393d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb8f73be28c7ad42f8244cc9e442c7559d39f725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8f73be28c7ad42f8244cc9e442c7559d39f725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8f73be28c7ad42f8244cc9e442c7559d39f725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8f73be28c7ad42f8244cc9e442c7559d39f725/comments", "author": null, "committer": null, "parents": [{"sha": "e2743a17d99ff4f2aa5b584a62007a44343a2bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2743a17d99ff4f2aa5b584a62007a44343a2bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2743a17d99ff4f2aa5b584a62007a44343a2bcf"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "3280349b6ec90ba118cb81f1fa4700a7bd4ff4a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8f73be28c7ad42f8244cc9e442c7559d39f725/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8f73be28c7ad42f8244cc9e442c7559d39f725/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb8f73be28c7ad42f8244cc9e442c7559d39f725", "patch": "@@ -1,3 +1,9 @@\n+Sun Feb 24 07:41:31 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* optabs.c (widen_operand): Only call convert_modes for\n+\tpromoted SUBREG if signedness matches.\n+\t* config/alpha/alpha.md (*addsi_se2, *subsi_se2): New patterns.\n+\n 2002-02-23  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpplib.c (glue_header_name): Use local buffer to build up"}, {"sha": "fbbac9eac7af915e1b52d40a1baa5d000d96101c", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8f73be28c7ad42f8244cc9e442c7559d39f725/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8f73be28c7ad42f8244cc9e442c7559d39f725/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=cb8f73be28c7ad42f8244cc9e442c7559d39f725", "patch": "@@ -564,6 +564,17 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n    addl %r1,%2,%0\n    subl %r1,%n2,%0\")\n \n+(define_insn \"*addsi_se2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n+\t(sign_extend:DI\n+\t (subreg:SI (plus:DI (match_operand:DI 1 \"reg_or_0_operand\" \"%rJ,rJ\")\n+\t\t\t     (match_operand:DI 2 \"sext_add_operand\" \"rI,O\"))\n+\t\t    0)))]\n+  \"\"\n+  \"@\n+   addl %r1,%2,%0\n+   subl %r1,%n2,%0\")\n+\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(sign_extend:DI\n@@ -844,6 +855,15 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n   \"\"\n   \"subl %r1,%2,%0\")\n \n+(define_insn \"*subsi_se2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t (subreg:SI (minus:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n+\t\t\t      (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\"))\n+\t\t    0)))]\n+  \"\"\n+  \"subl %r1,%2,%0\")\n+\n (define_insn \"subvsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")"}, {"sha": "69fb999a7de1e1bec637429363f4262ec9e86173", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8f73be28c7ad42f8244cc9e442c7559d39f725/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8f73be28c7ad42f8244cc9e442c7559d39f725/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=cb8f73be28c7ad42f8244cc9e442c7559d39f725", "patch": "@@ -191,7 +191,8 @@ widen_operand (op, mode, oldmode, unsignedp, no_extend)\n      do so.  */\n   if (! no_extend\n       || GET_MODE (op) == VOIDmode\n-      || (GET_CODE (op) == SUBREG && SUBREG_PROMOTED_VAR_P (op)))\n+      || (GET_CODE (op) == SUBREG && SUBREG_PROMOTED_VAR_P (op)\n+\t  && SUBREG_PROMOTED_UNSIGNED_P (op) == unsignedp))\n     return convert_modes (mode, oldmode, op, unsignedp);\n \n   /* If MODE is no wider than a single word, we return a paradoxical"}]}