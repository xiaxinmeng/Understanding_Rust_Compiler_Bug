{"sha": "ab4daaf234846814efda577812e8e42be5a40995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI0ZGFhZjIzNDg0NjgxNGVmZGE1Nzc4MTJlOGU0MmJlNWE0MDk5NQ==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2009-09-01T18:10:39Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2009-09-01T18:10:39Z"}, "message": "pass51-frag.c (MAP_FAILED): Define, if not in system header; use it.\n\n2009-09-01  Loren J. Rittle  <ljrittle@acm.org>\n\t    Andreas Schwab  <schwab@linux-m68k.org>\n\n\t* testsuite/libmudflap.c/pass51-frag.c (MAP_FAILED): Define,\n\tif not in system header; use it.  On FreeBSD, must pass fd==-1\n\twith MAP_ANON flag.  Correct mmap error check.\n\t* testsuite/libmudflap.c/fail40-frag.c: Ditto.\n\nCo-Authored-By: Andreas Schwab <schwab@linux-m68k.org>\n\nFrom-SVN: r151277", "tree": {"sha": "0a95a245b35217f0af528f4b9d2ec8fcb37d4a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a95a245b35217f0af528f4b9d2ec8fcb37d4a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab4daaf234846814efda577812e8e42be5a40995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4daaf234846814efda577812e8e42be5a40995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab4daaf234846814efda577812e8e42be5a40995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4daaf234846814efda577812e8e42be5a40995/comments", "author": null, "committer": null, "parents": [{"sha": "cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "5a899c18551617695caf6d99c70ee272e926773b", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4daaf234846814efda577812e8e42be5a40995/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4daaf234846814efda577812e8e42be5a40995/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=ab4daaf234846814efda577812e8e42be5a40995", "patch": "@@ -1,3 +1,11 @@\n+2009-09-01  Loren J. Rittle  <ljrittle@acm.org>\n+\t    Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* testsuite/libmudflap.c/pass51-frag.c (MAP_FAILED): Define,\n+\tif not in system header; use it.  On FreeBSD, must pass fd==-1\n+\twith MAP_ANON flag.  Correct mmap error check.\n+\t* testsuite/libmudflap.c/fail40-frag.c: Ditto.\n+\n 2009-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac (AC_PREREQ): Bump to 2.64."}, {"sha": "fbeb6fd21d38699c064cd674ab10d12fc5871494", "filename": "libmudflap/testsuite/libmudflap.c/fail40-frag.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4daaf234846814efda577812e8e42be5a40995/libmudflap%2Ftestsuite%2Flibmudflap.c%2Ffail40-frag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4daaf234846814efda577812e8e42be5a40995/libmudflap%2Ftestsuite%2Flibmudflap.c%2Ffail40-frag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.c%2Ffail40-frag.c?ref=ab4daaf234846814efda577812e8e42be5a40995", "patch": "@@ -14,6 +14,9 @@ int main ()\n #ifndef MAP_ANONYMOUS\n #define MAP_ANONYMOUS MAP_ANON\n #endif\n+#ifndef MAP_FAILED\n+#define MAP_FAILED ((void *)-1)\n+#endif\n #ifdef HAVE_MMAP\n   volatile unsigned char *p;\n   unsigned num = getpagesize ();\n@@ -23,8 +26,8 @@ int main ()\n   /* Get a bit of usable address space.  We really want an 2**N+1-sized object,\n      so the low/high addresses wrap when hashed into the lookup cache.  So we\n      will manually unregister the entire mmap, then re-register a slice.  */\n-  p = mmap (NULL, num, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, 0, 0);\n-  if (p == NULL)\n+  p = mmap (NULL, num, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);\n+  if (p == MAP_FAILED)\n     return 1;\n   /* Now unregister it, as if munmap was called.  But don't actually munmap, so\n      we can write into the memory.  */"}, {"sha": "2780ffd72a02582b67f3b71a650eec0b969827e4", "filename": "libmudflap/testsuite/libmudflap.c/pass51-frag.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4daaf234846814efda577812e8e42be5a40995/libmudflap%2Ftestsuite%2Flibmudflap.c%2Fpass51-frag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4daaf234846814efda577812e8e42be5a40995/libmudflap%2Ftestsuite%2Flibmudflap.c%2Fpass51-frag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.c%2Fpass51-frag.c?ref=ab4daaf234846814efda577812e8e42be5a40995", "patch": "@@ -13,14 +13,17 @@ int main ()\n #ifndef MAP_ANONYMOUS\n #define MAP_ANONYMOUS MAP_ANON\n #endif\n+#ifndef MAP_FAILED\n+#define MAP_FAILED ((void *)-1)\n+#endif\n #ifdef HAVE_MMAP\n   void *p;\n   unsigned pg = getpagesize ();\n   int rc;\n \n   p = mmap (NULL, 4 * pg, PROT_READ|PROT_WRITE, \n-            MAP_PRIVATE|MAP_ANONYMOUS, 0, 0);\n-  if (p == NULL)\n+            MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);\n+  if (p == MAP_FAILED)\n     return 1;\n \n   memset (p, 0, 4*pg);"}]}