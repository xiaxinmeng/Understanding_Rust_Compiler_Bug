{"sha": "952d33b8db3341dd48dc4e73186720f33a8525db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUyZDMzYjhkYjMzNDFkZDQ4ZGM0ZTczMTg2NzIwZjMzYTg1MjVkYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-08-24T21:25:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-08-24T21:25:13Z"}, "message": "new\n\nFrom-SVN: r28827", "tree": {"sha": "b90d8dc04338b0736e76531a17fc10a7a3443c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b90d8dc04338b0736e76531a17fc10a7a3443c13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/952d33b8db3341dd48dc4e73186720f33a8525db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952d33b8db3341dd48dc4e73186720f33a8525db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/952d33b8db3341dd48dc4e73186720f33a8525db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952d33b8db3341dd48dc4e73186720f33a8525db/comments", "author": null, "committer": null, "parents": [{"sha": "df39af7db0b1ee818dc03898ac4466633ae7ebbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df39af7db0b1ee818dc03898ac4466633ae7ebbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df39af7db0b1ee818dc03898ac4466633ae7ebbc"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "67b66ca61adde347ec17a0713d0f1713e7669b5f", "filename": "gcc/testsuite/g++.old-deja/g++.eh/cond1.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952d33b8db3341dd48dc4e73186720f33a8525db/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcond1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952d33b8db3341dd48dc4e73186720f33a8525db/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcond1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcond1.C?ref=952d33b8db3341dd48dc4e73186720f33a8525db", "patch": "@@ -0,0 +1,31 @@\n+// Build don't link:\n+\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 11 Apr 1999 <nathan@acm.org>\n+// Derived from bug report from Gabriel Dos Reis\n+// <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n+// http://egcs.cygnus.com/ml/egcs-bugs/1999-03/msg00883.html\n+\n+// conditional exprs have some funny rules when one of the types is void.\n+// [expr.cond] 5.16, make sure we do the right things\n+// We implement an extension, allowing one side to be void, check we\n+// pedantically moan.\n+\n+struct X {};\n+void fn(int i)\n+{\n+  int j;\n+\n+  j = (i ? throw X() : 1); // ok, int\n+  j = (i ? 1 : throw X()); // ok, int\n+  \n+  (i ? throw X() : throw X());  // ok, void\n+  \n+  (i ? i : j) = 1; // ok, int &\n+  (i ? throw X() : j) = 1; // ERROR - non-lvalue\n+  (i ? j : throw X()) = 1; // ERROR - non-lvalue\n+  (i ? throw X() : throw X()) = 1;  // ERROR - void\n+  \n+  (i ? (void)1 : i++); // ERROR - ANSI forbids\n+  (i ? i++ : (void)1); // ERROR - ANSI forbids\n+}"}]}