{"sha": "042630ad4aaa8f3472e94adbe0ca751377798d69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyNjMwYWQ0YWFhOGYzNDcyZTk0YWRiZTBjYTc1MTM3Nzc5OGQ2OQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-04-19T12:37:08Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-04-19T12:37:08Z"}, "message": "system.h (fopen, [...]): Define these to the unlocked libiberty functions.\n\nfixincludes:\n\t* system.h (fopen, fdopen, freopen): Define these to the unlocked\n\tlibiberty functions.\n\ngcc:\n\t* system.h (fopen, fdopen, freopen): Define these to the unlocked\n\tlibiberty functions.\n\nlibcpp:\n\t* system.h (fopen, fdopen, freopen): Define these to the unlocked\n\tlibiberty functions.\n\nFrom-SVN: r98407", "tree": {"sha": "f28c589b61e9abc00adb693ec85b1d582427aa47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f28c589b61e9abc00adb693ec85b1d582427aa47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/042630ad4aaa8f3472e94adbe0ca751377798d69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042630ad4aaa8f3472e94adbe0ca751377798d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042630ad4aaa8f3472e94adbe0ca751377798d69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042630ad4aaa8f3472e94adbe0ca751377798d69/comments", "author": null, "committer": null, "parents": [{"sha": "18e479e2131f9931dce25de735d333710ee4814d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e479e2131f9931dce25de735d333710ee4814d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18e479e2131f9931dce25de735d333710ee4814d"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "36300e433dfcd3a3da0db7ef6f0698b921bfb9d0", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042630ad4aaa8f3472e94adbe0ca751377798d69/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042630ad4aaa8f3472e94adbe0ca751377798d69/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=042630ad4aaa8f3472e94adbe0ca751377798d69", "patch": "@@ -1,3 +1,8 @@\n+2005-04-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* system.h (fopen, fdopen, freopen): Define these to the unlocked\n+\tlibiberty functions.\n+\n 2005-04-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.ac (fixincludes_UNLOCKED_FUNCS): New."}, {"sha": "602654e6b304b9a9e2644162fa7b2d9957123a61", "filename": "fixincludes/system.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042630ad4aaa8f3472e94adbe0ca751377798d69/fixincludes%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042630ad4aaa8f3472e94adbe0ca751377798d69/fixincludes%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fsystem.h?ref=042630ad4aaa8f3472e94adbe0ca751377798d69", "patch": "@@ -38,6 +38,11 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define NULL 0\n #endif\n \n+/* Use the unlocked open routines from libiberty.  */\n+#define fopen(PATH,MODE) fopen_unlocked(PATH,MODE)\n+#define fdopen(FILDES,MODE) fdopen_unlocked(FILDES,MODE)\n+#define freopen(PATH,MODE,STREAM) freopen_unlocked(PATH,MODE,STREAM)\n+\n /* fixincludes is not a multi-threaded application and therefore we\n    do not have to use the locking functions.  In fact, using the locking\n    functions can cause the compiler to be significantly slower under"}, {"sha": "e1b7265e6f267f25d053adcd840fc541766204c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042630ad4aaa8f3472e94adbe0ca751377798d69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042630ad4aaa8f3472e94adbe0ca751377798d69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=042630ad4aaa8f3472e94adbe0ca751377798d69", "patch": "@@ -1,3 +1,8 @@\n+2005-04-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* system.h (fopen, fdopen, freopen): Define these to the unlocked\n+\tlibiberty functions.\n+\n 2005-04-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR tree-optimization/21096"}, {"sha": "62b8c0488a22b4c440f32f0289c5455d79d2b941", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042630ad4aaa8f3472e94adbe0ca751377798d69/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042630ad4aaa8f3472e94adbe0ca751377798d69/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=042630ad4aaa8f3472e94adbe0ca751377798d69", "patch": "@@ -46,6 +46,11 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define NULL 0\n #endif\n \n+/* Use the unlocked open routines from libiberty.  */\n+#define fopen(PATH,MODE) fopen_unlocked(PATH,MODE)\n+#define fdopen(FILDES,MODE) fdopen_unlocked(FILDES,MODE)\n+#define freopen(PATH,MODE,STREAM) freopen_unlocked(PATH,MODE,STREAM)\n+\n /* The compiler is not a multi-threaded application and therefore we\n    do not have to use the locking functions.  In fact, using the locking\n    functions can cause the compiler to be significantly slower under"}, {"sha": "7050d65189efa0c4be5ba9a599af27d9634f6ff7", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042630ad4aaa8f3472e94adbe0ca751377798d69/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042630ad4aaa8f3472e94adbe0ca751377798d69/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=042630ad4aaa8f3472e94adbe0ca751377798d69", "patch": "@@ -1,3 +1,8 @@\n+2005-04-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* system.h (fopen, fdopen, freopen): Define these to the unlocked\n+\tlibiberty functions.\n+\n 2005-04-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.ac (libcpp_UNLOCKED_FUNCS): New."}, {"sha": "98ac118e3518ac90a54237b42aabc0ee954cecb7", "filename": "libcpp/system.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042630ad4aaa8f3472e94adbe0ca751377798d69/libcpp%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042630ad4aaa8f3472e94adbe0ca751377798d69/libcpp%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fsystem.h?ref=042630ad4aaa8f3472e94adbe0ca751377798d69", "patch": "@@ -38,6 +38,11 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define NULL 0\n #endif\n \n+/* Use the unlocked open routines from libiberty.  */\n+#define fopen(PATH,MODE) fopen_unlocked(PATH,MODE)\n+#define fdopen(FILDES,MODE) fdopen_unlocked(FILDES,MODE)\n+#define freopen(PATH,MODE,STREAM) freopen_unlocked(PATH,MODE,STREAM)\n+\n /* The compiler is not a multi-threaded application and therefore we\n    do not have to use the locking functions.  In fact, using the locking\n    functions can cause the compiler to be significantly slower under"}]}