{"sha": "4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2NTAzYWIzMGM4NWI4YjhkOTE3ZmYwM2E3YWNmZTBlODdhZjhlYQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-11-04T23:38:10Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-11-04T23:38:10Z"}, "message": "fold-const.c (fold_unary_loc): Disable conversion optimization for void type.\n\n2012-11-05  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* fold-const.c (fold_unary_loc): Disable conversion optimization\n\tfor void type.\n\nFrom-SVN: r193146", "tree": {"sha": "cf6f967d78f49807405e7bc747965e10d3b1cb8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf6f967d78f49807405e7bc747965e10d3b1cb8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4044815128625e0c4739fe2274078a6200511a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4044815128625e0c4739fe2274078a6200511a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4044815128625e0c4739fe2274078a6200511a3f"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "cf532f2cca094da0405c46d50356ffbcf4c5600a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea", "patch": "@@ -1,3 +1,8 @@\n+2012-11-05  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* fold-const.c (fold_unary_loc): Disable conversion optimization\n+\tfor void type.\n+\n 2012-11-04  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* configure: Regenerate."}, {"sha": "62a4e21896844248de2236f4914855f0782d86e1", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4d6503ab30c85b8b8d917ff03a7acfe0e87af8ea", "patch": "@@ -7749,7 +7749,8 @@ fold_unary_loc (location_t loc, enum tree_code code, tree type, tree op0)\n \t    return build2_loc (loc, TREE_CODE (op0), type,\n \t\t\t       TREE_OPERAND (op0, 0),\n \t\t\t       TREE_OPERAND (op0, 1));\n-\t  else if (!INTEGRAL_TYPE_P (type) && TREE_CODE (type) != VECTOR_TYPE)\n+\t  else if (!INTEGRAL_TYPE_P (type) && !VOID_TYPE_P (type)\n+\t\t   && TREE_CODE (type) != VECTOR_TYPE)\n \t    return build3_loc (loc, COND_EXPR, type, op0,\n \t\t\t       constant_boolean_node (true, type),\n \t\t\t       constant_boolean_node (false, type));"}]}