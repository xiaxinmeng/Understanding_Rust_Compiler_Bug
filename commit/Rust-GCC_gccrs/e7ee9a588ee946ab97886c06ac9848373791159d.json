{"sha": "e7ee9a588ee946ab97886c06ac9848373791159d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlZTlhNTg4ZWU5NDZhYjk3ODg2YzA2YWM5ODQ4MzczNzkxMTU5ZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-08-17T23:38:16Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-08-17T23:38:16Z"}, "message": "rs6000.md (*boolccsi3_internal1, [...]): Delete.\n\n2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (*boolccsi3_internal1, *boolccsi3_internal2\n\tand split, *boolccsi3_internal3 and split): Delete.\n\t(*boolccdi3_internal1, *boolccdi3_internal2 and split,\n\t*boolccdi3_internal3 and split): Delete.\n\t(*boolcc<mode>3, *boolcc<mode>3_dot, *boolcc<mode>3_dot2): New.\n\t(*eqv<mode>3): Move.  Add TODO comment.  Fix attributes.\n\nFrom-SVN: r214079", "tree": {"sha": "f8dd4fcbacb6150caf922e1166f10dcaa71bf651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8dd4fcbacb6150caf922e1166f10dcaa71bf651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7ee9a588ee946ab97886c06ac9848373791159d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ee9a588ee946ab97886c06ac9848373791159d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ee9a588ee946ab97886c06ac9848373791159d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ee9a588ee946ab97886c06ac9848373791159d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195"}], "stats": {"total": 192, "additions": 59, "deletions": 133}, "files": [{"sha": "bf1dfd68f47dc07b30197b1d676534ec08313fd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ee9a588ee946ab97886c06ac9848373791159d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ee9a588ee946ab97886c06ac9848373791159d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7ee9a588ee946ab97886c06ac9848373791159d", "patch": "@@ -1,3 +1,12 @@\n+2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*boolccsi3_internal1, *boolccsi3_internal2\n+\tand split, *boolccsi3_internal3 and split): Delete.\n+\t(*boolccdi3_internal1, *boolccdi3_internal2 and split,\n+\t*boolccdi3_internal3 and split): Delete.\n+\t(*boolcc<mode>3, *boolcc<mode>3_dot, *boolcc<mode>3_dot2): New.\n+\t(*eqv<mode>3): Move.  Add TODO comment.  Fix attributes.\n+\n 2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (*boolcsi3_internal1, *boolcsi3_internal2"}, {"sha": "b6258310c7acf285fa9fa50fed8cd7478cf556d8", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 50, "deletions": 133, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ee9a588ee946ab97886c06ac9848373791159d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ee9a588ee946ab97886c06ac9848373791159d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e7ee9a588ee946ab97886c06ac9848373791159d", "patch": "@@ -3352,73 +3352,70 @@\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_insn \"*boolccsi3_internal1\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(match_operator:SI 3 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n-\t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))]))]\n+\n+(define_insn \"*boolcc<mode>3\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(match_operator:GPR 3 \"boolean_operator\"\n+\t [(not:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\"))\n+\t  (not:GPR (match_operand:GPR 2 \"gpc_reg_operand\" \"r\"))]))]\n   \"\"\n-  \"%q3 %0,%1,%2\")\n+  \"%q3 %0,%1,%2\"\n+  [(set_attr \"type\" \"logical\")])\n \n-(define_insn \"*boolccsi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))])\n+(define_insn_and_split \"*boolcc<mode>3_dot\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (match_operator:GPR 3 \"boolean_operator\"\n+\t [(not:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\"))\n+\t  (not:GPR (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))])\n \t (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"TARGET_32BIT\"\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   %q4. %3,%1,%2\n+   %q3. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"logical,compare\")\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(match_dup 3))\n+   (set (match_dup 4)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n-\t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"\"))])\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 3) (match_dup 4))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*boolccsi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\"))\n-\t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))])\n+(define_insn_and_split \"*boolcc<mode>3_dot2\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (match_operator:GPR 3 \"boolean_operator\"\n+\t [(not:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\"))\n+\t  (not:GPR (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))])\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(match_dup 4))]\n-  \"TARGET_32BIT\"\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(match_dup 3))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   %q4. %0,%1,%2\n+   %q3. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"logical,compare\")\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(match_dup 3))\n+   (set (match_dup 4)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n-\t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"\"))])\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(match_dup 4))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 0) (match_dup 4))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n+\n+;; TODO: Should have dots of this as well.\n+(define_insn \"*eqv<mode>3\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(not:GPR (xor:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t  (match_operand:GPR 2 \"gpc_reg_operand\" \"r\"))))]\n+  \"\"\n+  \"eqv %0,%1,%2\"\n+  [(set_attr \"type\" \"logical\")])\n \f\n ;; Rotate and shift insns, in all their variants.  These support shifts,\n ;; field inserts and extracts, and various combinations thereof.\n@@ -7827,86 +7824,6 @@\n {\n   build_mask64_2_operands (operands[2], &operands[5]);\n }\")\n-\n-(define_insn \"*boolccdi3_internal1\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(match_operator:DI 3 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\"))\n-\t  (not:DI (match_operand:DI 2 \"gpc_reg_operand\" \"r\"))]))]\n-  \"TARGET_POWERPC64\"\n-  \"%q3 %0,%1,%2\")\n-\n-(define_insn \"*boolccdi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t  (not:DI (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))])\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r\"))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   %q4. %3,%1,%2\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\"))\n-\t  (not:DI (match_operand:DI 2 \"gpc_reg_operand\" \"\"))])\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 3) (match_dup 4))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*boolccdi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\"))\n-\t  (not:DI (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))])\n-\t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(match_dup 4))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   %q4. %0,%1,%2\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\"))\n-\t  (not:DI (match_operand:DI 2 \"gpc_reg_operand\" \"\"))])\n-\t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(match_dup 4))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 0) (match_dup 4))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-;; Eqv operation.\n-(define_insn \"*eqv<mode>3\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n-\t(not:GPR\n-\t (xor:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n-\t\t  (match_operand:GPR 2 \"gpc_reg_operand\" \"r\"))))]\n-  \"\"\n-  \"eqv %0,%1,%2\"\n-  [(set_attr \"type\" \"integer\")\n-   (set_attr \"length\" \"4\")])\n-\n \f\n ;; 128-bit logical operations expanders\n "}]}