{"sha": "27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdiNmIxNThjMjliNDVmZDgwYzJmMTA0ZDVkYTFmNGJjODE4ZDdhYg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-06T17:30:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-06T17:30:09Z"}, "message": "This commit was generated by cvs2svn to compensate for changes in r16983,\n\nwhich included commits to RCS files with non-trunk default branches.\n\nFrom-SVN: r16984", "tree": {"sha": "9c7c51a3a8bfd63cf7d84a535015234d31dc02f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c7c51a3a8bfd63cf7d84a535015234d31dc02f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/comments", "author": null, "committer": null, "parents": [{"sha": "db2a8c5b6d1f4ac88a5dc270f3be8a8902e4fddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2a8c5b6d1f4ac88a5dc270f3be8a8902e4fddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2a8c5b6d1f4ac88a5dc270f3be8a8902e4fddb"}], "stats": {"total": 292, "additions": 123, "deletions": 169}, "files": [{"sha": "680f2a2628f1f66d4524db9213d4ec46b59f29f3", "filename": "gcc/SERVICE", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2FSERVICE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2FSERVICE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FSERVICE?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -235,7 +235,7 @@ Ashland, MA 01721-1987\n (Please call only between 0900-1700 Eastern time, and only if you\n are prepared to hire me -- ask me to help you for free only\n via email, to which I might or might not respond.)\n-Email: <burley@gnu.ai.mit.edu> --preferred--\n+Email: <burley@gnu.org> --preferred--\n        <burley@cygnus.com>\n        <burley@world.std.com>\n \n@@ -254,7 +254,7 @@ Rate: $100/hour -- willing to consider flat-fee arrangements\n \n Updated: 1997-05-07\n \u001f\n-Thomas Bushnell, n/BSG\t<thomas@gnu.ai.mit.edu>\n+Thomas Bushnell, n/BSG\t<thomas@gnu.org>\n Becket House\n 66 Highland Ave. No. 8\n Somerville, MA  02143\n@@ -271,7 +271,7 @@ Experience:  I have done Unix and GNU programming for several years,\n I am easily available in the Cambridge/Boston area; work via email.\n I am willing to travel for sufficiently large jobs.\n \n-Rates: $100/hr, negotiable, less for non-profit organizaions.\n+Rates: $100/hr, negotiable, less for non-profit organizations.\n \n Updated: 1997-05-07\n \u001f\n@@ -413,7 +413,7 @@ Cygnus Solutions contacts:\n    \temail:  <westcott@cygnus.com>\n Updated: 1997-09-02 by rms\n \u001f\n-Marcus G. Daniels              <marcusd@gnu.ai.mit.edu>\n+Marcus G. Daniels              <marcusd@gnu.org>\n 31060 S. Kaufman Rd.           <marcus@tdb.com>\n Canby, OR  97013-9520          <marcus@sysc.pdx.edu>\n (503) 651-2694                 \n@@ -791,13 +791,13 @@ Cellular: +46 (10) 222 64 05\n e-mail:   <levitte@lp.se>\n \n What I do:\n-\tPrimarly I work on GNU software for VMS, both VAX and AXP.  I've\n+\tPrimarily I work on GNU software for VMS, both VAX and AXP.  I've\n \tbeen porting GNU Emacs to VMS since spring 1991.  I've \tported a\n \tbunch of other GNU programs as well.  I maintain GNU vmslib.\n \tFor further info, see http://www.lp.se/~levitte/prof/resume.html\n \n Programs supported:\n-\tTo a varying degree (ranging from extention and porting to\n+\tTo a varying degree (ranging from extension and porting to\n \tinstallation and simple questions) at the time of updating this\n \tentry:\n \t- GNU vmslib, emacs, autoconf, zip, diffutils, m4, patch, texinfo,\n@@ -835,7 +835,7 @@ to 2, 5, 25 and larger number of users via phone, email, ftp.\n \n Updated:  1997-05-01\n \u001f\n-Gord Matzigkeit                      <gord@gnu.ai.mit.edu>\n+Gord Matzigkeit                      <gord@gnu.org>\n 2220 Capitol Hill Crescent           http://www.m-tech.ab.ca/~gord/\n Calgary, Alberta   T2M 4B9           Voice: (403) 282-1387\n CANADA                               FAX:   (403) 284-0137\n@@ -1092,10 +1092,10 @@ Signum Support AB is a company dedicated to supporting, developing and\n distributing free software for mainly UNIX systems. The people behind\n Signum Support AB have many years of general UNIX and Internet\n experience, both as system administrators and as programmers, and also\n-extensive experience in maintaining and administring the GNU programs\n+extensive experience in maintaining and administering the GNU programs\n and Linux.\n \n-Signum Support develops and markets the free GUI equiped Readynet\n+Signum Support develops and markets the free GUI equipped Readynet\n Internet server, the free PHTTPD http server and the easy to use Linux\n based Fuego firewall.\n \n@@ -1110,23 +1110,23 @@ Services offered:\n    programs.\n  - Warranty protection.\n  - Finding, Recommending and Investigation of free software in any\n-   area of the customers choise.\n+   area of the customer's choice.\n  - Regular consulting.\n \n Rates: For software items, request our price list.\n        For consulting, 700-900 SEK/hour.\n \n Updated: 1997-05-12\n \u001f\n-   Jon Solomon                     <jsol@gnu.ai.mit.edu>\n+   Jon Solomon                     <jsol@gnu.org>\n    235 Main St., Apt 3C-1\n    East Hartford, Conn. 06118\n    +1 860 895-8289\n \n    Maintains all GNU software... Available for General Consulting\n    (contact me if you are interested)...\n    Sendmail a specialty... Can answer questions pertaining to the\n-   installation, maintainence, bug reporting and fixing for\n+   installation, maintenance, bug reporting and fixing for\n    most GNU products... Adhering to the FSF/GNU copyleft for all\n    work... (I only charge for the time it takes to do the above,\n    the software (and most GNU copyleft'd software) is free.\n@@ -1162,15 +1162,15 @@ WHEN CONTACTING ME,  DO THIS :-\n \t  1) Tell me Immediately,  Are You:\n \t\tA)  Expecting to pay my bill for professional consultancy.\n \t\tB)  Seeking a few minutes advice free of charge.\n-\t  2) Give me your email adddress, or that of a friend.\n+\t  2) Give me your email address, or that of a friend.\n \t     or Volunteer to phone back ~ 5 days later to collect follow-up\n \t     info.  from the net.  (No I will not incur bills phoning you back).\n \t  3) Speak English if you want free advice !  I speak German, &\n \t     listen in French, but if you're not paying, make some effort too !\n \n Updated: 1997-05-15\n \u001f\n-Richard M. Stallman\t<rms@gnu.ai.mit.edu>\n+Richard M. Stallman\t<rms@gnu.org>\n 545 Tech Sq, Rm 430\n Cambridge, MA 02139\n \n@@ -1191,7 +1191,7 @@ Phone: (408) 978-1407\n Fax:   (408) 978-1417\n \n I will help you port, install and customize GNU Emacs, GCC, G++,\n-bison, and other GNU tools on almost any architechture and operating\n+bison, and other GNU tools on almost any architecture and operating\n system. Questions answered. GNU C and lisp hacking available. I will\n also do ongoing support and periodic upgrades if you get on my GNU\n software subscription list.\n@@ -1314,7 +1314,7 @@ http://info.noris.de/ (German)\n Expertise:\n   OS internals, esp. Linux and BSD, esp. device drivers\n   Network protocol / program design and coding\n-  Utilities coding and maintainance\n+  Utilities coding and maintenance\n   Program debugging, testing\n   User interface design and testing\n   Several programming and tool languages\n@@ -1399,7 +1399,7 @@ E-mail: <zhou@opentech.co.jp>\n My profile is listed at:  http://www.opentech.co.jp/~zhou/\n \n I have two years of experience porting and supporting GNU C Compiler and\n-GNU Assember at the Wingnut project of SRA, Inc., Tokyo.\n+GNU Assembler at the Wingnut project of SRA, Inc., Tokyo.\n \n I can provide free consultation on these products if the problem is not\n time-consuming."}, {"sha": "f7c51a7d233e1fe602e4e3c3a5ef2d33166b7cae", "filename": "gcc/cexp.c", "status": "modified", "additions": 98, "deletions": 74, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -25,26 +25,16 @@\n #include <setjmp.h>\n /* #define YYDEBUG 1 */\n \n-/* The following symbols should be autoconfigured:\n-\tSTDC_HEADERS\n-   In the mean time, we'll get by with approximations based\n-   on existing GCC configuration symbols.  */\n-\n-#ifdef POSIX\n-# ifndef STDC_HEADERS\n-# define STDC_HEADERS 1\n-# endif\n-#endif /* defined (POSIX) */\n \n-#if STDC_HEADERS\n+#ifdef HAVE_STRING_H\n # include <string.h>\n #endif\n \n-#if HAVE_STDLIB_H || defined (MULTIBYTE_CHARS)\n+#ifdef HAVE_STDLIB_H\n # include <stdlib.h>\n #endif\n \n-#if HAVE_LIMITS_H\n+#ifdef HAVE_LIMITS_H\n # include <limits.h>\n #endif\n \n@@ -91,12 +81,10 @@ struct arglist {\n #  define HOST_WIDE_INT intmax_t\n #  define unsigned_HOST_WIDE_INT uintmax_t\n # else\n-#  if (HOST_BITS_PER_LONG <= HOST_BITS_PER_INT \\\n-       && HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_INT)\n+#  if (HOST_BITS_PER_LONG <= HOST_BITS_PER_INT && HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_INT)\n #   define HOST_WIDE_INT int\n #  else\n-#  if (HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_LONG \\\n-       || ! (defined LONG_LONG_MAX || defined LLONG_MAX))\n+#  if (HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_LONG || ! (defined LONG_LONG_MAX || defined LLONG_MAX))\n #   define HOST_WIDE_INT long\n #  else\n #   define HOST_WIDE_INT long long\n@@ -153,11 +141,14 @@ struct arglist {\n \n #define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n \n-HOST_WIDE_INT parse_c_expression PROTO((char *));\n+HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n \n static int yylex PROTO((void));\n static void yyerror PROTO((char *)) __attribute__ ((noreturn));\n static HOST_WIDE_INT expression_value;\n+#ifdef TEST_EXP_READER\n+static int expression_signedp;\n+#endif\n \n static jmp_buf parse_return_error;\n \n@@ -168,6 +159,9 @@ static int keyword_parsing = 0;\n    This is a count, since unevaluated expressions can nest.  */\n static int skip_evaluation;\n \n+/* Nonzero means warn if undefined identifiers are evaluated.  */\n+static int warn_undef;\n+\n /* some external tables of character types */\n extern unsigned char is_idstart[], is_idchar[], is_space[];\n \n@@ -180,9 +174,6 @@ extern int traditional;\n /* Flag for -lang-c89.  */\n extern int c89;\n \n-/* Flag for -Wundef.  */\n-extern int warn_undef;\n-\n #ifndef CHAR_TYPE_SIZE\n #define CHAR_TYPE_SIZE BITS_PER_UNIT\n #endif\n@@ -252,7 +243,7 @@ static void integer_overflow PROTO((void));\n #define SIGNED (~0)\n #define UNSIGNED 0\n \n-#line 260 \"cexp.y\"\n+#line 251 \"cexp.y\"\n typedef union {\n   struct constant {HOST_WIDE_INT value; int signedp;} integer;\n   struct name {U_CHAR *address; int length;} name;\n@@ -333,10 +324,10 @@ static const short yyrhs[] = {    35,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   290,   295,   296,   303,   308,   311,   313,   316,   320,   322,\n-   327,   332,   345,   362,   375,   381,   387,   393,   399,   402,\n-   405,   412,   419,   426,   433,   436,   439,   442,   445,   448,\n-   451,   454,   456,   459,   462,   464,   466,   474,   476,   489\n+   281,   291,   292,   299,   304,   307,   309,   312,   316,   318,\n+   323,   328,   341,   358,   371,   377,   383,   389,   395,   398,\n+   401,   408,   415,   422,   429,   432,   435,   438,   441,   444,\n+   447,   450,   452,   455,   458,   460,   462,   470,   472,   485\n };\n #endif\n \n@@ -934,59 +925,64 @@ yyparse(YYPARSE_PARAM)\n   switch (yyn) {\n \n case 1:\n-#line 291 \"cexp.y\"\n-{ expression_value = yyvsp[0].integer.value; ;\n+#line 282 \"cexp.y\"\n+{\n+\t\t  expression_value = yyvsp[0].integer.value;\n+#ifdef TEST_EXP_READER\n+\t\t  expression_signedp = yyvsp[0].integer.signedp;\n+#endif\n+\t\t;\n     break;}\n case 3:\n-#line 297 \"cexp.y\"\n+#line 293 \"cexp.y\"\n { if (pedantic)\n \t\t\t    pedwarn (\"comma operator in operand of `#if'\");\n \t\t\t  yyval.integer = yyvsp[0].integer; ;\n     break;}\n case 4:\n-#line 304 \"cexp.y\"\n+#line 300 \"cexp.y\"\n { yyval.integer.value = - yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp;\n \t\t\t  if ((yyval.integer.value & yyvsp[0].integer.value & yyval.integer.signedp) < 0)\n \t\t\t    integer_overflow (); ;\n     break;}\n case 5:\n-#line 309 \"cexp.y\"\n+#line 305 \"cexp.y\"\n { yyval.integer.value = ! yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 6:\n-#line 312 \"cexp.y\"\n+#line 308 \"cexp.y\"\n { yyval.integer = yyvsp[0].integer; ;\n     break;}\n case 7:\n-#line 314 \"cexp.y\"\n+#line 310 \"cexp.y\"\n { yyval.integer.value = ~ yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp; ;\n     break;}\n case 8:\n-#line 317 \"cexp.y\"\n+#line 313 \"cexp.y\"\n { yyval.integer.value = check_assertion (yyvsp[0].name.address, yyvsp[0].name.length,\n \t\t\t\t\t\t      0, NULL_PTR);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 9:\n-#line 321 \"cexp.y\"\n+#line 317 \"cexp.y\"\n { keyword_parsing = 1; ;\n     break;}\n case 10:\n-#line 323 \"cexp.y\"\n+#line 319 \"cexp.y\"\n { yyval.integer.value = check_assertion (yyvsp[-4].name.address, yyvsp[-4].name.length,\n \t\t\t\t\t\t      1, yyvsp[-1].keywords);\n \t\t\t  keyword_parsing = 0;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 11:\n-#line 328 \"cexp.y\"\n+#line 324 \"cexp.y\"\n { yyval.integer = yyvsp[-1].integer; ;\n     break;}\n case 12:\n-#line 333 \"cexp.y\"\n+#line 329 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (yyval.integer.signedp)\n \t\t\t    {\n@@ -1001,7 +997,7 @@ case 12:\n \t\t\t\t\t* yyvsp[0].integer.value); ;\n     break;}\n case 13:\n-#line 346 \"cexp.y\"\n+#line 342 \"cexp.y\"\n { if (yyvsp[0].integer.value == 0)\n \t\t\t    {\n \t\t\t      if (!skip_evaluation)\n@@ -1020,7 +1016,7 @@ case 13:\n \t\t\t\t\t/ yyvsp[0].integer.value); ;\n     break;}\n case 14:\n-#line 363 \"cexp.y\"\n+#line 359 \"cexp.y\"\n { if (yyvsp[0].integer.value == 0)\n \t\t\t    {\n \t\t\t      if (!skip_evaluation)\n@@ -1035,49 +1031,49 @@ case 14:\n \t\t\t\t\t% yyvsp[0].integer.value); ;\n     break;}\n case 15:\n-#line 376 \"cexp.y\"\n+#line 372 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value + yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (overflow_sum_sign (yyvsp[-2].integer.value, yyvsp[0].integer.value,\n \t\t\t\t\t\t yyval.integer.value, yyval.integer.signedp))\n \t\t\t    integer_overflow (); ;\n     break;}\n case 16:\n-#line 382 \"cexp.y\"\n+#line 378 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value - yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (overflow_sum_sign (yyval.integer.value, yyvsp[0].integer.value,\n \t\t\t\t\t\t yyvsp[-2].integer.value, yyval.integer.signedp))\n \t\t\t    integer_overflow (); ;\n     break;}\n case 17:\n-#line 388 \"cexp.y\"\n+#line 384 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp;\n \t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n \t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n \t\t\t  else\n \t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n     break;}\n case 18:\n-#line 394 \"cexp.y\"\n+#line 390 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp;\n \t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n \t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n \t\t\t  else\n \t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n     break;}\n case 19:\n-#line 400 \"cexp.y\"\n+#line 396 \"cexp.y\"\n { yyval.integer.value = (yyvsp[-2].integer.value == yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 20:\n-#line 403 \"cexp.y\"\n+#line 399 \"cexp.y\"\n { yyval.integer.value = (yyvsp[-2].integer.value != yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 21:\n-#line 406 \"cexp.y\"\n+#line 402 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value <= yyvsp[0].integer.value;\n@@ -1086,7 +1082,7 @@ case 21:\n \t\t\t\t\t<= yyvsp[0].integer.value); ;\n     break;}\n case 22:\n-#line 413 \"cexp.y\"\n+#line 409 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value >= yyvsp[0].integer.value;\n@@ -1095,7 +1091,7 @@ case 22:\n \t\t\t\t\t>= yyvsp[0].integer.value); ;\n     break;}\n case 23:\n-#line 420 \"cexp.y\"\n+#line 416 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value < yyvsp[0].integer.value;\n@@ -1104,7 +1100,7 @@ case 23:\n \t\t\t\t\t< yyvsp[0].integer.value); ;\n     break;}\n case 24:\n-#line 427 \"cexp.y\"\n+#line 423 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value > yyvsp[0].integer.value;\n@@ -1113,76 +1109,76 @@ case 24:\n \t\t\t\t\t> yyvsp[0].integer.value); ;\n     break;}\n case 25:\n-#line 434 \"cexp.y\"\n+#line 430 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value & yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 26:\n-#line 437 \"cexp.y\"\n+#line 433 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value ^ yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 27:\n-#line 440 \"cexp.y\"\n+#line 436 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value | yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 28:\n-#line 443 \"cexp.y\"\n+#line 439 \"cexp.y\"\n { skip_evaluation += !yyvsp[-1].integer.value; ;\n     break;}\n case 29:\n-#line 445 \"cexp.y\"\n+#line 441 \"cexp.y\"\n { skip_evaluation -= !yyvsp[-3].integer.value;\n \t\t\t  yyval.integer.value = (yyvsp[-3].integer.value && yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 30:\n-#line 449 \"cexp.y\"\n+#line 445 \"cexp.y\"\n { skip_evaluation += !!yyvsp[-1].integer.value; ;\n     break;}\n case 31:\n-#line 451 \"cexp.y\"\n+#line 447 \"cexp.y\"\n { skip_evaluation -= !!yyvsp[-3].integer.value;\n \t\t\t  yyval.integer.value = (yyvsp[-3].integer.value || yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 32:\n-#line 455 \"cexp.y\"\n+#line 451 \"cexp.y\"\n { skip_evaluation += !yyvsp[-1].integer.value; ;\n     break;}\n case 33:\n-#line 457 \"cexp.y\"\n+#line 453 \"cexp.y\"\n { skip_evaluation += !!yyvsp[-4].integer.value - !yyvsp[-4].integer.value; ;\n     break;}\n case 34:\n-#line 459 \"cexp.y\"\n+#line 455 \"cexp.y\"\n { skip_evaluation -= !!yyvsp[-6].integer.value;\n \t\t\t  yyval.integer.value = yyvsp[-6].integer.value ? yyvsp[-3].integer.value : yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-3].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 35:\n-#line 463 \"cexp.y\"\n+#line 459 \"cexp.y\"\n { yyval.integer = yylval.integer; ;\n     break;}\n case 36:\n-#line 465 \"cexp.y\"\n+#line 461 \"cexp.y\"\n { yyval.integer = yylval.integer; ;\n     break;}\n case 37:\n-#line 467 \"cexp.y\"\n+#line 463 \"cexp.y\"\n { if (warn_undef && !skip_evaluation)\n \t\t\t    warning (\"`%.*s' is not defined\",\n \t\t\t\t     yyvsp[0].name.length, yyvsp[0].name.address);\n \t\t\t  yyval.integer.value = 0;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 38:\n-#line 475 \"cexp.y\"\n+#line 471 \"cexp.y\"\n { yyval.keywords = 0; ;\n     break;}\n case 39:\n-#line 477 \"cexp.y\"\n+#line 473 \"cexp.y\"\n { struct arglist *temp;\n \t\t\t  yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n \t\t\t  yyval.keywords->next = yyvsp[-2].keywords;\n@@ -1197,7 +1193,7 @@ case 39:\n \t\t\t  temp->next->length = 1; ;\n     break;}\n case 40:\n-#line 490 \"cexp.y\"\n+#line 486 \"cexp.y\"\n { yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n \t\t\t  yyval.keywords->name = yyvsp[-1].name.address;\n \t\t\t  yyval.keywords->length = yyvsp[-1].name.length;\n@@ -1401,7 +1397,7 @@ case 40:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 495 \"cexp.y\"\n+#line 491 \"cexp.y\"\n \n \f\n /* During parsing of a C expression, the pointer to the next character\n@@ -1610,7 +1606,7 @@ yylex ()\n        It is mostly copied from c-lex.c.  */\n     {\n       register HOST_WIDE_INT result = 0;\n-      register num_chars = 0;\n+      register int num_chars = 0;\n       unsigned width = MAX_CHAR_TYPE_SIZE;\n       int max_chars;\n       char *token_buffer;\n@@ -1968,17 +1964,20 @@ right_shift (a, b)\n /* This page contains the entry point to this file.  */\n \n /* Parse STRING as an expression, and complain if this fails\n-   to use up all of the contents of STRING.  */\n-/* STRING may contain '\\0' bytes; it is terminated by the first '\\n'\n-   outside a string constant, so that we can diagnose '\\0' properly.  */\n-/* We do not support C comments.  They should be removed before\n+   to use up all of the contents of STRING.\n+   STRING may contain '\\0' bytes; it is terminated by the first '\\n'\n+   outside a string constant, so that we can diagnose '\\0' properly.\n+   If WARN_UNDEFINED is nonzero, warn if undefined identifiers are evaluated.\n+   We do not support C comments.  They should be removed before\n    this function is called.  */\n \n HOST_WIDE_INT\n-parse_c_expression (string)\n+parse_c_expression (string, warn_undefined)\n      char *string;\n+     int warn_undefined;\n {\n   lexptr = string;\n+  warn_undef = warn_undefined;\n \n   /* if there is some sort of scanning error, just return 0 and assume\n      the parsing routine has printed an error message somewhere.\n@@ -2006,6 +2005,7 @@ int traditional;\n \n int main PROTO((int, char **));\n static void initialize_random_junk PROTO((void));\n+static void print_unsigned_host_wide_int PROTO((unsigned_HOST_WIDE_INT));\n \n /* Main program for testing purposes.  */\n int\n@@ -2015,6 +2015,7 @@ main (argc, argv)\n {\n   int n, c;\n   char buf[1024];\n+  unsigned_HOST_WIDE_INT u;\n \n   pedantic = 1 < argc;\n   traditional = 2 < argc;\n@@ -2030,12 +2031,35 @@ main (argc, argv)\n       n++;\n     if (c == EOF)\n       break;\n-    printf (\"parser returned %ld\\n\", (long) parse_c_expression (buf));\n+    parse_c_expression (buf, 1);\n+    printf (\"parser returned \");\n+    u = (unsigned_HOST_WIDE_INT) expression_value;\n+    if (expression_value < 0 && expression_signedp) {\n+      u = -u;\n+      printf (\"-\");\n+    }\n+    if (u == 0)\n+      printf (\"0\");\n+    else\n+      print_unsigned_host_wide_int (u);\n+    if (! expression_signedp)\n+      printf(\"u\");\n+    printf (\"\\n\");\n   }\n \n   return 0;\n }\n \n+static void\n+print_unsigned_host_wide_int (u)\n+     unsigned_HOST_WIDE_INT u;\n+{\n+  if (u) {\n+    print_unsigned_host_wide_int (u / 10);\n+    putchar ('0' + (int) (u % 10));\n+  }\n+}\n+\n /* table to tell if char can be part of a C identifier. */\n unsigned char is_idchar[256];\n /* table to tell if char can be first char of a c identifier. */"}, {"sha": "ca120a9c8a69d19aad6e6981a4c31e4219d410ba", "filename": "gcc/config/arm/xm-linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Farm%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Farm%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxm-linux.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,4 +1,4 @@\n-/* Configuration for GCC for Intel i386 running Linux.\n+/* Configuration for GCC for Intel i386 running Linux-based GNU systems./\n    Copyright (C) 1993, 1994, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by H.J. Lu (hjl@nynexst.com)\n "}, {"sha": "ea9a64ea4bff9c5188482cb5410a4b8c36bc55cb", "filename": "gcc/config/arm/xm-netbsd.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Farm%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Farm%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxm-netbsd.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -2,17 +2,6 @@\n \n #include <arm/xm-arm.h>\n \n-/* xm-netbsd.h defines this */\n-#ifdef HAVE_VPRINTF\n-#undef HAVE_VPRINTF\n-#endif\n-\n #ifndef SYS_SIGLIST_DECLARED\n #define SYS_SIGLIST_DECLARED\n #endif\n-\n-#ifndef HAVE_STRERROR\n-#define HAVE_STRERROR\n-#endif\n-\n-#include <xm-netbsd.h>"}, {"sha": "713bf3b2817aee20f16d6c5ce7aca363017effee", "filename": "gcc/config/i386/xm-linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fi386%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fi386%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-linux.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,5 +1,5 @@\n-/* Configuration for GCC for Intel i386 running Linux.\n-   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n+/* Configuration for GCC for Intel i386 running Linux-based GNU systems.\n+   Copyright (C) 1993, 1994, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by H.J. Lu (hjl@nynexst.com)\n \n This file is part of GNU CC."}, {"sha": "de7c2013b3efd5ff94e783e3c755e305def4e0d7", "filename": "gcc/config/i386/xm-sun.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fi386%2Fxm-sun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fi386%2Fxm-sun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-sun.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Intel 80386 running SunOS 4.0.\n-   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,7 +21,3 @@ Boston, MA 02111-1307, USA.  */\n #define USG\n \n #include \"i386/xm-i386.h\"\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "f540924d3281f50894e97763572146de0669951b", "filename": "gcc/config/m68k/xm-altos3068.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-altos3068.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-altos3068.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-altos3068.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,7 +1,3 @@\n #define USG\n \n #include \"m68k/xm-m68k.h\"\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "c28ed787cadfcb2c66b0d7cc0ebe034d00d446fd", "filename": "gcc/config/m68k/xm-amix.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-amix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-amix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-amix.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,7 +1,6 @@\n /* Definitions of host machine for GNU compiler.\n    Commodore Amiga A3000UX version.\n-\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -22,7 +21,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"m68k/xm-m68kv.h\"\t/* Use the System V flavor of m68k host */\n \n-#define HAVE_VPRINTF\t\t/* Host has vprintf() in library */\n #define rindex strrchr\n #define index strchr\n "}, {"sha": "f3009a6db5a343977ddb8461601fcc174c8e0da9", "filename": "gcc/config/m68k/xm-hp320.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-hp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-hp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-hp320.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -3,12 +3,6 @@\n \n #include \"m68k/xm-m68k.h\"\n \n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-#define rindex strrchr\n-#define index strchr\n-\n /* If compiling with HPUX compiler, we are probably using alloca.c,\n    so help it work right.  */\n #ifndef __GNUC__"}, {"sha": "bfac3ae4ef6efd3bee470aaf9962c7432795cc5b", "filename": "gcc/config/m68k/xm-linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-linux.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,4 +1,4 @@\n-/* Configuration for GCC for Motorola m68k running Linux. */\n+/* Configuration for GCC for Motorola m68k running Linux-based GNU systems. */\n \n #include <m68k/xm-m68k.h>\n #include <xm-linux.h>"}, {"sha": "d0931f038905aa988b2ac9447aa83d1cc9a1d90e", "filename": "gcc/config/m68k/xm-m68kv.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-m68kv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fm68k%2Fxm-m68kv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-m68kv.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -3,12 +3,6 @@\n #include \"m68k/xm-m68k.h\"\n \n #define USG\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-#define rindex strrchr\n-#define index strchr\n \n #ifndef __GNUC__\n #define USE_C_ALLOCA"}, {"sha": "448b7ac80bb3c0e991123bd4c198f33726cc68dc", "filename": "gcc/config/mips/xm-iris3.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fmips%2Fxm-iris3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fmips%2Fxm-iris3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-iris3.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,8 +1,3 @@\n #include \"mips/xm-mips.h\"\n \n #define USG\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-"}, {"sha": "c01d3f48a7897f6b8d0eb033679a9dc246e1d4cf", "filename": "gcc/config/mips/xm-iris4.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fmips%2Fxm-iris4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fmips%2Fxm-iris4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-iris4.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,11 +1,6 @@\n #include \"mips/xm-mips.h\"\n \n #define USG\n-#define HAVE_VPRINTF\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n \n #if 0\n #ifdef __GNUC__"}, {"sha": "05a8d6c1154eb7df7f4e0baad4480101a3e2ec68", "filename": "gcc/config/mips/xm-sysv.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fmips%2Fxm-sysv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fmips%2Fxm-sysv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-sysv.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for UMIPS operating system\n-   Copyright (C) 1989, 1990, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1990, 1991, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -28,11 +28,3 @@ Boston, MA 02111-1307, USA.  */\n #define USG\n \n #include \"mips/xm-mips.h\"\n-\n-#define bcopy(a,b,c)\tmemcpy((b),(a),(c))\n-#define bzero(a,b)\tmemset((a),0,(b))\n-#define bcmp(a,b,c)\tmemcmp((a),(b),(c))\n-\n-#define rindex strrchr\n-#define index strchr\n-"}, {"sha": "15ff46fc6b165df17de8778fd977e20cc8e8e6bd", "filename": "gcc/config/ns32k/xm-genix.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fns32k%2Fxm-genix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fns32k%2Fxm-genix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fxm-genix.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -3,7 +3,3 @@\n #include \"ns32k/xm-ns32k.h\"\n \n #define USG\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "1c3f47590c7986799797985dbf0cf1f889a09284", "filename": "gcc/config/sparc/xm-pbd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fsparc%2Fxm-pbd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fsparc%2Fxm-pbd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-pbd.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -3,9 +3,6 @@\n #include \"sparc/xm-sparc.h\"\n \n #define USG\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n \n #ifndef __GNUC__\n #define USE_C_ALLOCA"}, {"sha": "aef16f04321481fad267156ef57d7aa14827bf0e", "filename": "gcc/config/vax/xm-vaxv.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fvax%2Fxm-vaxv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fvax%2Fxm-vaxv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fxm-vaxv.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,7 +1,3 @@\n /* Config file for Vax running system V.  */\n \n #define USG\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "6f252505252d4cce6d752c3f8265106f8257f19d", "filename": "gcc/config/xm-svr3.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fxm-svr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab/gcc%2Fconfig%2Fxm-svr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-svr3.h?ref=27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for hosts running System V Release 3\n-   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,15 +18,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#define bcopy(src,dst,len) memcpy ((dst),(src),(len))\n-#define bzero(dst,len) memset ((dst),0,(len))\n-#define bcmp(left,right,len) memcmp ((left),(right),(len))\n-\n-#define rindex strrchr\n-#define index strchr\n-\n #define USG\n-#define HAVE_VPRINTF\n \n #ifndef SVR3\n #define SVR3"}]}