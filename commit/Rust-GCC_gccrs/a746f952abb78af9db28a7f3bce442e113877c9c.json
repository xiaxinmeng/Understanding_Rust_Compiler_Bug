{"sha": "a746f952abb78af9db28a7f3bce442e113877c9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0NmY5NTJhYmI3OGFmOWRiMjhhN2YzYmNlNDQyZTExMzg3N2M5Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-05-25T12:41:33Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-05-25T12:41:33Z"}, "message": "Do not stream redundant stuff\n\nas discussed on IRC this adds knob to disable stuff we stream \"just for fun\"\n(or to make it easier to debug streamer desychnonization).\n\nTe size of .o files in gcc subdirectory is reduced form 506MB to 492MB\n\ngcc/\n\n\t* lto-streamer-out.c (lto_output_tree): Add streamer_debugging check.\n\t* lto-streamer.h (streamer_debugging): New constant\n\t* tree-streamer-in.c (streamer_read_tree_bitfields): Add\n\tstreamer_debugging check.\n\t(streamer_get_pickled_tree): Likewise.\n\t* tree-streamer-out.c (pack_ts_base_value_fields): Likewise.", "tree": {"sha": "b7eb8047093027d31c4d5f5becab23088c81df83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7eb8047093027d31c4d5f5becab23088c81df83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a746f952abb78af9db28a7f3bce442e113877c9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a746f952abb78af9db28a7f3bce442e113877c9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a746f952abb78af9db28a7f3bce442e113877c9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a746f952abb78af9db28a7f3bce442e113877c9c/comments", "author": null, "committer": null, "parents": [{"sha": "67bfbda18f4e6d0d30ad8f8790f1d0d4653131ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bfbda18f4e6d0d30ad8f8790f1d0d4653131ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bfbda18f4e6d0d30ad8f8790f1d0d4653131ed"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "a83cc4ba1c7f4e0b736b6889629ddb2d3f45fb08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a746f952abb78af9db28a7f3bce442e113877c9c", "patch": "@@ -1,3 +1,12 @@\n+2020-05-25  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-streamer-out.c (lto_output_tree): Add streamer_debugging check.\n+\t* lto-streamer.h (streamer_debugging): New constant\n+\t* tree-streamer-in.c (streamer_read_tree_bitfields): Add\n+\tstreamer_debugging check.\n+\t(streamer_get_pickled_tree): Likewise.\n+\t* tree-streamer-out.c (pack_ts_base_value_fields): Likewise.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95308"}, {"sha": "288e3c0f4c6f1643343a385dc30df98e74e7d33a", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=a746f952abb78af9db28a7f3bce442e113877c9c", "patch": "@@ -1748,8 +1748,9 @@ lto_output_tree (struct output_block *ob, tree expr,\n \t will instantiate two different nodes for the same object.  */\n       streamer_write_record_start (ob, LTO_tree_pickle_reference);\n       streamer_write_uhwi (ob, ix);\n-      streamer_write_enum (ob->main_stream, LTO_tags, LTO_NUM_TAGS,\n-\t\t\t   lto_tree_code_to_tag (TREE_CODE (expr)));\n+      if (streamer_debugging)\n+\tstreamer_write_enum (ob->main_stream, LTO_tags, LTO_NUM_TAGS,\n+\t\t\t     lto_tree_code_to_tag (TREE_CODE (expr)));\n       lto_stats.num_pickle_refs_output++;\n     }\n   else"}, {"sha": "93da3c66fd89524c57cbdfca41c8b8d4a1394ef0", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=a746f952abb78af9db28a7f3bce442e113877c9c", "patch": "@@ -125,6 +125,9 @@ along with GCC; see the file COPYING3.  If not see\n \n typedef unsigned char\tlto_decl_flags_t;\n \n+/* Stream additional data to LTO object files to make it easier to debug\n+   streaming code.  This changes object files.  */\n+static const bool streamer_debugging = false;\n \n /* Tags representing the various IL objects written to the bytecode file\n    (GIMPLE statements, basic blocks, EH regions, tree nodes, etc)."}, {"sha": "d2e45e335547325bee22bde24c74b909d746aecd", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=a746f952abb78af9db28a7f3bce442e113877c9c", "patch": "@@ -487,9 +487,13 @@ streamer_read_tree_bitfields (class lto_input_block *ib,\n \n   /* The first word in BP contains the code of the tree that we\n      are about to read.  */\n-  code = (enum tree_code) bp_unpack_value (&bp, 16);\n-  lto_tag_check (lto_tree_code_to_tag (code),\n-\t\t lto_tree_code_to_tag (TREE_CODE (expr)));\n+  if (streamer_debugging)\n+    {\n+      code = (enum tree_code) bp_unpack_value (&bp, 16);\n+      lto_tag_check (lto_tree_code_to_tag (code),\n+\t\t     lto_tree_code_to_tag (TREE_CODE (expr)));\n+    }\n+  code = TREE_CODE (expr);\n \n   /* Note that all these functions are highly sensitive to changes in\n      the types and sizes of each of the fields being packed.  */\n@@ -1107,11 +1111,14 @@ streamer_get_pickled_tree (class lto_input_block *ib, class data_in *data_in)\n   enum LTO_tags expected_tag;\n \n   ix = streamer_read_uhwi (ib);\n-  expected_tag = streamer_read_enum (ib, LTO_tags, LTO_NUM_TAGS);\n-\n   result = streamer_tree_cache_get_tree (data_in->reader_cache, ix);\n-  gcc_assert (result\n-              && TREE_CODE (result) == lto_tag_to_tree_code (expected_tag));\n+\n+  if (streamer_debugging)\n+    {\n+      expected_tag = streamer_read_enum (ib, LTO_tags, LTO_NUM_TAGS);\n+      gcc_assert (result\n+\t\t  && TREE_CODE (result) == lto_tag_to_tree_code (expected_tag));\n+    }\n \n   return result;\n }"}, {"sha": "94635c4a8aecf6e4370b0a306c3f670a942a856a", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746f952abb78af9db28a7f3bce442e113877c9c/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=a746f952abb78af9db28a7f3bce442e113877c9c", "patch": "@@ -71,7 +71,8 @@ write_identifier (struct output_block *ob,\n static inline void\n pack_ts_base_value_fields (struct bitpack_d *bp, tree expr)\n {\n-  bp_pack_value (bp, TREE_CODE (expr), 16);\n+  if (streamer_debugging)\n+    bp_pack_value (bp, TREE_CODE (expr), 16);\n   if (!TYPE_P (expr))\n     {\n       bp_pack_value (bp, TREE_SIDE_EFFECTS (expr), 1);"}]}