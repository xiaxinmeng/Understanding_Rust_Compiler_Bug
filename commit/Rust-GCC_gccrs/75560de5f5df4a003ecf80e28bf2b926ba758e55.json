{"sha": "75560de5f5df4a003ecf80e28bf2b926ba758e55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1NjBkZTVmNWRmNGEwMDNlY2Y4MGUyOGJmMmI5MjZiYTc1OGU1NQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2017-08-03T13:39:47Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2017-08-03T13:39:47Z"}, "message": "toplev: avoid recursive emergency_dump_function\n\n\t* toplev.c (dumpfile.h): New include.\n\t(internal_error_reentered): New static function.  Use it...\n\t(internal_error_function): ...here to handle reentered internal_error.\n\nFrom-SVN: r250854", "tree": {"sha": "b4be28c423eff8d34a963ed82b921519d41aec2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4be28c423eff8d34a963ed82b921519d41aec2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75560de5f5df4a003ecf80e28bf2b926ba758e55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75560de5f5df4a003ecf80e28bf2b926ba758e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75560de5f5df4a003ecf80e28bf2b926ba758e55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75560de5f5df4a003ecf80e28bf2b926ba758e55/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d7744d4ef93bfffb484ae24b81163049364947f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7744d4ef93bfffb484ae24b81163049364947f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7744d4ef93bfffb484ae24b81163049364947f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "9e3a8aac28d1e3f4e306ee42bfbf55c40beedb85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75560de5f5df4a003ecf80e28bf2b926ba758e55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75560de5f5df4a003ecf80e28bf2b926ba758e55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75560de5f5df4a003ecf80e28bf2b926ba758e55", "patch": "@@ -1,3 +1,9 @@\n+2017-08-03 Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* toplev.c (dumpfile.h): New include.\n+\t(internal_error_reentered): New static function.  Use it...\n+\t(internal_error_function): ...here to handle reentered internal_error.\n+\n 2017-08-03 Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/81148"}, {"sha": "48a79e28d99a1843beb12b84c02ff7d36eace312", "filename": "gcc/toplev.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75560de5f5df4a003ecf80e28bf2b926ba758e55/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75560de5f5df4a003ecf80e28bf2b926ba758e55/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=75560de5f5df4a003ecf80e28bf2b926ba758e55", "patch": "@@ -80,6 +80,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hsa-common.h\"\n #include \"edit-context.h\"\n #include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n \n #if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n #include \"dbxout.h\"\n@@ -1064,11 +1065,22 @@ open_auxiliary_file (const char *ext)\n   return file;\n }\n \n+/* Alternative diagnostics callback for reentered ICE reporting.  */\n+\n+static void\n+internal_error_reentered (diagnostic_context *, const char *, va_list *)\n+{\n+  /* Flush the dump file if emergency_dump_function itself caused an ICE.  */\n+  if (dump_file)\n+    fflush (dump_file);\n+}\n+\n /* Auxiliary callback for the diagnostics code.  */\n \n static void\n internal_error_function (diagnostic_context *, const char *, va_list *)\n {\n+  global_dc->internal_error = internal_error_reentered;\n   warn_if_plugins ();\n   emergency_dump_function ();\n }"}]}