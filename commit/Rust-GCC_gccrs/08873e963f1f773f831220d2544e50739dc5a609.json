{"sha": "08873e963f1f773f831220d2544e50739dc5a609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4NzNlOTYzZjFmNzczZjgzMTIyMGQyNTQ0ZTUwNzM5ZGM1YTYwOQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2005-06-02T17:13:26Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-06-02T17:13:26Z"}, "message": "re PR tree-optimization/21765 (-free-vrp is undocumented.)\n\n\n\tPR 21765\n\t* doc/invoke.texi: Document -ftree-vrp.\n\nFrom-SVN: r100495", "tree": {"sha": "e09fbdae484cb516c5dc0d27b422a4352d83484a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e09fbdae484cb516c5dc0d27b422a4352d83484a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08873e963f1f773f831220d2544e50739dc5a609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08873e963f1f773f831220d2544e50739dc5a609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08873e963f1f773f831220d2544e50739dc5a609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08873e963f1f773f831220d2544e50739dc5a609/comments", "author": null, "committer": null, "parents": [{"sha": "ed3c16fbe6ae0685a7617b5287d3de1ff464d5ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3c16fbe6ae0685a7617b5287d3de1ff464d5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3c16fbe6ae0685a7617b5287d3de1ff464d5ae"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "d1c639783cb8957dd59e1360455cf1f035ebbdd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08873e963f1f773f831220d2544e50739dc5a609/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08873e963f1f773f831220d2544e50739dc5a609/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08873e963f1f773f831220d2544e50739dc5a609", "patch": "@@ -1,3 +1,8 @@\n+2005-06-02  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 21765\n+\t* doc/invoke.texi: Document -ftree-vrp.\n+\n 2005-06-02  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/21734"}, {"sha": "0bcd3d9d85c57a4edc8b03e98203f874a94d95c2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08873e963f1f773f831220d2544e50739dc5a609/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08873e963f1f773f831220d2544e50739dc5a609/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=08873e963f1f773f831220d2544e50739dc5a609", "patch": "@@ -277,6 +277,7 @@ Objective-C and Objective-C++ Dialects}.\n -fdump-tree-sra@r{[}-@var{n}@r{]} @gol\n -fdump-tree-salias @gol\n -fdump-tree-fre@r{[}-@var{n}@r{]} @gol\n+-fdump-tree-vrp@r{[}-@var{n}@r{]} @gol\n -ftree-vectorizer-verbose=@var{n} @gol\n -fdump-tree-storeccp@r{[}-@var{n}@r{]} @gol\n -feliminate-dwarf2-dups -feliminate-unused-debug-types @gol\n@@ -4067,6 +4068,11 @@ file name.\n Dump each function after applying vectorization of loops.  The file name is\n made by appending @file{.vect} to the source file name.\n \n+@item vrp\n+@opindex fdump-tree-vrp\n+Dump each function after Value Range Propagation (VRP).  The file name\n+is made by appending @file{.vrp} to the source file name.\n+\n @item all\n @opindex fdump-tree-all\n Enable all the available tree dumps with the flags provided in this option.\n@@ -4321,6 +4327,7 @@ also turns on the following optimization flags:\n -funit-at-a-time @gol\n -falign-functions  -falign-jumps @gol\n -falign-loops  -falign-labels @gol\n+-ftree-vrp @gol\n -ftree-pre}\n \n Please note the warning under @option{-fgcse} about\n@@ -4963,6 +4970,15 @@ optimization later.  This is enabled by default at @option{-O} and higher.\n @item -ftree-vectorize\n Perform loop vectorization on trees.\n \n+@item -ftree-vrp\n+Perform Value Range Propagation on trees.  This is similar to the\n+constant propagation pass, but instead of values, ranges of values are\n+propagated.  This allows the optimizers to remove unnecessary range\n+checks like array bound checks and null pointer checks.  This is\n+enabled by default at @option{-O2} and higher.  Null pointer check\n+elimination is only done if @option{-fdelete-null-pointer-checks} is\n+enabled.\n+\n @item -ftracer\n @opindex ftracer\n Perform tail duplication to enlarge superblock size.  This transformation"}]}