{"sha": "4f08579c5e251083876d7a64fa843ec4b6a36d2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYwODU3OWM1ZTI1MTA4Mzg3NmQ3YTY0ZmE4NDNlYzRiNmEzNmQyYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-12-01T10:24:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-12-01T10:24:39Z"}, "message": "[multiple changes]\n\n2009-12-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-sechas.ads (GNAT.Secure_Hashes.H.\"=\" on Context): Make abstract.\n\n2009-12-01  Matthew Gingell  <gingell@adacore.com>\n\n\t* adadecode.c: Allow compilation when building the run time in the gnat\n\truntime.\n\t(__gnat_decode): Strip the .nnnn suffix from names of nested functions.\n\n\t* gcc-interface/Makefile.in: Ada adadecode to LIBGNAT_SRCS and\n\tLIBGNAT_OBJS.\n\n2009-12-01  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (Check_Files): Quote the path names as they may include\n\tspaces.\n\n2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): If the defining identifier\n\thas already been declared, it may have been rewritten as a renaming\n\tdeclaration.\n\nFrom-SVN: r154870", "tree": {"sha": "569a4d1362aee6c3b1571fdd7c7f8e5be0d0434d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/569a4d1362aee6c3b1571fdd7c7f8e5be0d0434d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f08579c5e251083876d7a64fa843ec4b6a36d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f08579c5e251083876d7a64fa843ec4b6a36d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f08579c5e251083876d7a64fa843ec4b6a36d2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f08579c5e251083876d7a64fa843ec4b6a36d2a/comments", "author": null, "committer": null, "parents": [{"sha": "c7ba0cfb619b379a84535227d60d86f64fe086d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ba0cfb619b379a84535227d60d86f64fe086d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ba0cfb619b379a84535227d60d86f64fe086d7"}], "stats": {"total": 96, "additions": 80, "deletions": 16}, "files": [{"sha": "b7c24c42209bbe444e0bcaf614911f947775c52b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4f08579c5e251083876d7a64fa843ec4b6a36d2a", "patch": "@@ -1,3 +1,27 @@\n+2009-12-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-sechas.ads (GNAT.Secure_Hashes.H.\"=\" on Context): Make abstract.\n+\n+2009-12-01  Matthew Gingell  <gingell@adacore.com>\n+\n+\t* adadecode.c: Allow compilation when building the run time in the gnat\n+\truntime.\n+\t(__gnat_decode): Strip the .nnnn suffix from names of nested functions.\n+\n+\t* gcc-interface/Makefile.in: Ada adadecode to LIBGNAT_SRCS and\n+\tLIBGNAT_OBJS.\n+\n+2009-12-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb (Check_Files): Quote the path names as they may include\n+\tspaces.\n+\n+2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): If the defining identifier\n+\thas already been declared, it may have been rewritten as a renaming\n+\tdeclaration.\n+\n 2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* einfo.ads: Clarify use of Is_Private_Primitive."}, {"sha": "43f14f1279266e4853ab48f3c489150504f1213c", "filename": "gcc/ada/adadecode.c", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fadadecode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fadadecode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.c?ref=4f08579c5e251083876d7a64fa843ec4b6a36d2a", "patch": "@@ -29,14 +29,26 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#ifdef IN_GCC\n+\n+#if defined(IN_RTS)\n+#include \"tconfig.h\"\n+#include \"tsystem.h\"\n+#elif defined(IN_GCC)\n #include \"config.h\"\n #include \"system.h\"\n-#else\n+#endif\n+\n #include <string.h>\n #include <stdio.h>\n #include <ctype.h>\n+\n+#include \"adaint.h\"\n+\n+#ifndef ISDIGIT\n #define ISDIGIT(c) isdigit(c)\n+#endif\n+\n+#ifndef PARMS\n #define PARMS(ARGS) ARGS\n #endif\n \n@@ -237,6 +249,21 @@ __gnat_decode (const char *coded_name, char *ada_name, int verbose)\n       }\n   }\n \n+  /* Check for nested subprogram ending in .nnnn and strip suffix. */\n+  {\n+    int last = strlen (ada_name) - 1;\n+\n+    while (ISDIGIT (ada_name[last]) && last > 0)\n+      {\n+        last--;\n+      }\n+\n+    if (ada_name[last] == '.')\n+      {\n+        ada_name[last] = (char) 0;\n+      }\n+  }\n+\n   /* Change all \"__\" to \".\". */\n   {\n     int len = strlen (ada_name);"}, {"sha": "e0630015884ae9f8ea2112fd334d173cb33ed44d", "filename": "gcc/ada/g-sechas.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fg-sechas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fg-sechas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.ads?ref=4f08579c5e251083876d7a64fa843ec4b6a36d2a", "patch": "@@ -133,6 +133,13 @@ package GNAT.Secure_Hashes is\n       type Context is private;\n       --  The internal processing state of the hashing function\n \n+      function \"=\" (L, R : Context) return Boolean is abstract;\n+      --  Context is the internal, implementation defined state of an\n+      --  intermediate state in a hash computation, and no specific semantics\n+      --  can be expected on equality of context values. Only equality of\n+      --  final hash values (as returned by the [Wide_]Digest functions below)\n+      --  is meaningful.\n+\n       Initial_Context : constant Context;\n       --  Initial value of a Context object. May be used to reinitialize\n       --  a Context value by simple assignment of this value to the object."}, {"sha": "975db0f2b7db44348fc250b0a6a1cb4ae209a7de", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=4f08579c5e251083876d7a64fa843ec4b6a36d2a", "patch": "@@ -2113,15 +2113,16 @@ endif\n # while GNATRTL_OBJS lists the object files compiled from Ada sources that\n # go into the directory.  The pthreads emulation is built in the threads\n # subdirectory and copied.\n-LIBGNAT_SRCS = adaint.c adaint.h argv.c cio.c cstreams.c \\\n-  errno.c exit.c cal.c ctrl_c.c env.c env.h arit64.c \\\n-  raise.h raise.c sysdep.c aux-io.c init.c initialize.c seh_init.c \\\n-  final.c tracebak.c tb-alvms.c tb-alvxw.c tb-gcc.c expect.c mkdir.c \\\n-  socket.c gsocket.h targext.c $(EXTRA_LIBGNAT_SRCS)\n-\n-LIBGNAT_OBJS = adaint.o argv.o cio.o cstreams.o ctrl_c.o errno.o exit.o env.o \\\n-  raise.o sysdep.o aux-io.o init.o initialize.o seh_init.o cal.o arit64.o \\\n-  final.o tracebak.o expect.o mkdir.o socket.o targext.o $(EXTRA_LIBGNAT_OBJS)\n+LIBGNAT_SRCS = adadecode.c adadecode.h adaint.c adaint.h\t\\\n+  argv.c cio.c cstreams.c errno.c exit.c cal.c ctrl_c.c env.c env.h\t\\\n+  arit64.c raise.h raise.c sysdep.c aux-io.c init.c initialize.c\t\\\n+  seh_init.c final.c tracebak.c tb-alvms.c tb-alvxw.c tb-gcc.c\t\t\\\n+  expect.c mkdir.c socket.c gsocket.h targext.c $(EXTRA_LIBGNAT_SRCS)\n+\n+LIBGNAT_OBJS = adadecode.o adaint.o argv.o cio.o cstreams.o ctrl_c.o\t\\\n+  errno.o exit.o env.o raise.o sysdep.o aux-io.o init.o initialize.o\t\\\n+  seh_init.o cal.o arit64.o final.o tracebak.o expect.o mkdir.o\t\t\\\n+  socket.o targext.o $(EXTRA_LIBGNAT_OBJS)\n \n # NOTE ??? - when the -I option for compiling Ada code is made to work,\n #  the library installation will change and there will be a"}, {"sha": "bfde10d6ae1ad6b732f2b05c96776b0b86543fd3", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=4f08579c5e251083876d7a64fa843ec4b6a36d2a", "patch": "@@ -575,8 +575,12 @@ procedure GNATCmd is\n                                   (Unit.File_Names (Kind).Project, Project)\n                        and then not Unit.File_Names (Kind).Locally_Removed\n                      then\n-                        Get_Name_String\n-                          (Unit.File_Names (Kind).Path.Display_Name);\n+                        Name_Len := 0;\n+                        Add_Char_To_Name_Buffer ('\"');\n+                        Add_Str_To_Name_Buffer\n+                          (Get_Name_String\n+                             (Unit.File_Names (Kind).Path.Display_Name));\n+                        Add_Char_To_Name_Buffer ('\"');\n \n                         if FD /= Invalid_FD then\n                            Name_Len := Name_Len + 1;"}, {"sha": "1845e80916cc42b2f2ab6bf12e0bc69267b56186", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f08579c5e251083876d7a64fa843ec4b6a36d2a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=4f08579c5e251083876d7a64fa843ec4b6a36d2a", "patch": "@@ -9725,11 +9725,12 @@ package body Sem_Ch3 is\n          New_T := Any_Type;\n       end if;\n \n-      --  If previous full declaration exists, or if a homograph is present,\n-      --  let Enter_Name handle it, either with an error, or with the removal\n-      --  of an overridden implicit subprogram.\n+      --  If previous full declaration or a renaming declaration exists, or if\n+      --  a homograph is present, let Enter_Name handle it, either with an\n+      --  error or with the removal of an overridden implicit subprogram.\n \n       if Ekind (Prev) /= E_Constant\n+        or else Nkind (Parent (Prev)) = N_Object_Renaming_Declaration\n         or else Present (Expression (Parent (Prev)))\n         or else Present (Full_View (Prev))\n       then"}]}