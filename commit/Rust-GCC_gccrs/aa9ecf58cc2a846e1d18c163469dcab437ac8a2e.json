{"sha": "aa9ecf58cc2a846e1d18c163469dcab437ac8a2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5ZWNmNThjYzJhODQ2ZTFkMThjMTYzNDY5ZGNhYjQzN2FjOGEyZQ==", "commit": {"author": {"name": "Feng Wang", "email": "fengwang@nudt.edu.cn", "date": "2006-09-07T16:32:36Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-09-07T16:32:36Z"}, "message": "intrinsic_set_exponent.f90: Fix nonconformance usage.\n\n2006-09-07  Feng Wang  <fengwang@nudt.edu.cn>\n\n\t* gfortran.fortran-torture/execute/intrinsic_set_exponent.f90: Fix\n\tnonconformance usage.\n\nFrom-SVN: r116752", "tree": {"sha": "e12d0341a9eab0c5129784764ccea6eb335ad92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e12d0341a9eab0c5129784764ccea6eb335ad92e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e/comments", "author": null, "committer": null, "parents": [{"sha": "c9eee440af989f8b2cd8ec69b094983385779d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9eee440af989f8b2cd8ec69b094983385779d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9eee440af989f8b2cd8ec69b094983385779d53"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "5e629d6fad638127c3464cfd5e494774132b7132", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa9ecf58cc2a846e1d18c163469dcab437ac8a2e", "patch": "@@ -1,3 +1,8 @@\n+2006-09-07  Feng Wang  <fengwang@nudt.edu.cn>\n+\n+\t* gfortran.fortran-torture/execute/intrinsic_set_exponent.f90: Fix\n+\tnonconformance usage.\n+\n 2006-09-07  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/28862"}, {"sha": "6f934e591c023ec256642228dba767630996baa4", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_set_exponent.f90", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9ecf58cc2a846e1d18c163469dcab437ac8a2e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.f90?ref=aa9ecf58cc2a846e1d18c163469dcab437ac8a2e", "patch": "@@ -4,10 +4,11 @@ program test_set_exponent\n   call test_real4()\n   call test_real8()\n end\n+\n subroutine test_real4()\n-  real x,y\n-  integer i,n\n-  equivalence(x,i)\n+  real*4 x,y\n+  integer*4 i,n\n+  equivalence(x, i)\n \n   n = -148\n   x = 1024.0\n@@ -20,7 +21,8 @@ subroutine test_real4()\n   if (exponent (y) .ne. n) call abort()\n \n   n = 128\n-  i = o'00037777777'\n+  i = 8388607\n+  x = transfer (i, x) ! z'007fffff' Positive denormalized floating-point.\n   y = set_exponent (x, n)\n   if (exponent (y) .ne. n) call abort()\n \n@@ -36,7 +38,8 @@ subroutine test_real4()\n   if (exponent (y) .ne. n) call abort()\n \n   n = 128\n-  i = o'20037777777'\n+  i = -2139095041\n+  x = transfer (i, x) ! z'807fffff' Negative denormalized floating-point.\n   y = set_exponent (x, n)\n   if (exponent (y) .ne. n) call abort()\n \n@@ -45,7 +48,7 @@ subroutine test_real4()\n subroutine test_real8()\n   implicit none\n   real*8 x, y\n-  integer*8 i, n, low\n+  integer*8 i, n\n   equivalence(x, i)\n \n   n = -1073\n@@ -60,19 +63,14 @@ subroutine test_real8()\n   if (exponent (y) .ne. n) call abort()\n \n   n = 1024\n-  low = z'ffffffff'\n-  i = z'000fffff' \n-  i = ishft (i, 32) + low !'000fffffffffffff'\n+  i = 4503599627370495_8\n+  x = transfer (i, x) !z'000fffffffffffff' Positive denormalized floating-point.\n   y = set_exponent (x, n)\n-  low = z'fffffffe'\n-  i = z'7fefffff' \n-  i = ishft (i, 32) + low\n   if (exponent (y) .ne. n) call abort()\n \n   n = -1073\n   x = -1024.0\n   y = set_exponent (x, n)\n-  low = z'00000001'\n   if ((y .ne. 0.0) .and. (exponent (y) .ne. n)) call abort()\n \n   n = 8\n@@ -82,10 +80,8 @@ subroutine test_real8()\n   if (exponent (y) .ne. n) call abort()\n \n   n = 1024\n-  low = z'ffffffff'\n-  i = z'800fffff' \n-  i = ishft (i, 32) + low !z'800fffffffffffff'\n+  i = -9218868437227405313_8\n+  x = transfer (i, x)!z'800fffffffffffff' Negative denormalized floating-point.\n   y = set_exponent (x, n)\n   if (exponent (y) .ne. n) call abort()\n-\n end"}]}