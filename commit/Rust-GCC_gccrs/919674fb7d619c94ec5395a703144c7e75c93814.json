{"sha": "919674fb7d619c94ec5395a703144c7e75c93814", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5Njc0ZmI3ZDYxOWM5NGVjNTM5NWE3MDMxNDRjN2U3NWM5MzgxNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-03-15T13:10:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-03-15T13:10:24Z"}, "message": "re PR c/84873 (ICE: verify_ssa failed (error: definition in block 3 does not dominate use in block 4))\n\n2018-03-15  Richard Biener  <rguenther@suse.de>\n\n\tPR c/84873\n\t* c-gimplify.c (c_gimplify_expr): Do not fold expressions.\n\n\t* c-c++-common/pr84873.c: New testcase.\n\nFrom-SVN: r258556", "tree": {"sha": "cf9d28b6cd165d137fd31dfdc343ea19161eedfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9d28b6cd165d137fd31dfdc343ea19161eedfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919674fb7d619c94ec5395a703144c7e75c93814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919674fb7d619c94ec5395a703144c7e75c93814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919674fb7d619c94ec5395a703144c7e75c93814", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919674fb7d619c94ec5395a703144c7e75c93814/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22534ea5549e970de4466fe492dacc61c2ff471f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22534ea5549e970de4466fe492dacc61c2ff471f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22534ea5549e970de4466fe492dacc61c2ff471f"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "a03ff86e57b31d6d6753622a369d3ee5f70a0803", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=919674fb7d619c94ec5395a703144c7e75c93814", "patch": "@@ -1,3 +1,8 @@\n+2018-03-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/84873\n+\t* c-gimplify.c (c_gimplify_expr): Do not fold expressions.\n+\n 2018-03-13  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/84725"}, {"sha": "e6b90ef95b6123c25e0fbfb3c2d024de9a85a7a7", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=919674fb7d619c94ec5395a703144c7e75c93814", "patch": "@@ -245,7 +245,15 @@ c_gimplify_expr (tree *expr_p, gimple_seq *pre_p ATTRIBUTE_UNUSED,\n \t\t\t\t    unsigned_type_node)\n \t    && !types_compatible_p (TYPE_MAIN_VARIANT (TREE_TYPE (*op1_p)),\n \t\t\t\t    integer_type_node))\n-\t  *op1_p = convert (unsigned_type_node, *op1_p);\n+\t  {\n+\t    /* ???  Do not use convert () here or fold arbitrary trees\n+\t       since folding can introduce tree sharing which is not\n+\t       allowed during gimplification.  */\n+\t    if (TREE_CODE (*op1_p) == INTEGER_CST)\n+\t      *op1_p = fold_convert (unsigned_type_node, *op1_p);\n+\t    else\n+\t      *op1_p = build1 (NOP_EXPR, unsigned_type_node, *op1_p);\n+\t  }\n \tbreak;\n       }\n "}, {"sha": "77d090a988070117815444aa6ad475dd71666b99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=919674fb7d619c94ec5395a703144c7e75c93814", "patch": "@@ -1,3 +1,8 @@\n+2018-03-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/84873\n+\t* c-c++-common/pr84873.c: New testcase.\n+\n 2018-03-15  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/84711"}, {"sha": "5eb8a8df81dd691e4d7a7a5b0311c8a53ded9a78", "filename": "gcc/testsuite/c-c++-common/pr84873.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr84873.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919674fb7d619c94ec5395a703144c7e75c93814/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr84873.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr84873.c?ref=919674fb7d619c94ec5395a703144c7e75c93814", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-frounding-math\" } */\n+\n+int\n+i1 (int w3, int n9)\n+{\n+  return w3 >> ((long int)(1 + 0.1) + -!n9);\n+}"}]}