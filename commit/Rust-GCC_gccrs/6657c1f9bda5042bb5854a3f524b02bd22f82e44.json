{"sha": "6657c1f9bda5042bb5854a3f524b02bd22f82e44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY1N2MxZjliZGE1MDQyYmI1ODU0YTNmNTI0YjAyYmQyMmY4MmU0NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-09-05T19:58:04Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-09-05T19:58:04Z"}, "message": "Make bitsize_mode_for_mode return an opt_mode\n\n2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* machmode.h (bitwise_mode_for_mode): Return opt_mode.\n\t* stor-layout.c (bitwise_mode_for_mode): Likewise.\n\t(bitwise_type_for_mode): Update accordingly.\n\nFrom-SVN: r251733", "tree": {"sha": "a6a555e04a44267277c331cae36cd551c3df7a4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6a555e04a44267277c331cae36cd551c3df7a4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6657c1f9bda5042bb5854a3f524b02bd22f82e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6657c1f9bda5042bb5854a3f524b02bd22f82e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6657c1f9bda5042bb5854a3f524b02bd22f82e44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6657c1f9bda5042bb5854a3f524b02bd22f82e44/comments", "author": null, "committer": null, "parents": [{"sha": "798014c58e9e54b068c30e8e2113d278a0bd6e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798014c58e9e54b068c30e8e2113d278a0bd6e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/798014c58e9e54b068c30e8e2113d278a0bd6e07"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "93b57a1e8ace6e8948bcefd8e811f826f6bbe56c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6657c1f9bda5042bb5854a3f524b02bd22f82e44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6657c1f9bda5042bb5854a3f524b02bd22f82e44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6657c1f9bda5042bb5854a3f524b02bd22f82e44", "patch": "@@ -1,3 +1,9 @@\n+2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* machmode.h (bitwise_mode_for_mode): Return opt_mode.\n+\t* stor-layout.c (bitwise_mode_for_mode): Likewise.\n+\t(bitwise_type_for_mode): Update accordingly.\n+\n 2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* stor-layout.h (mode_for_size_tree): Return an opt_mode."}, {"sha": "46150bb89daae0e3a9ffa0036acc4c1e7a1b712f", "filename": "gcc/machmode.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6657c1f9bda5042bb5854a3f524b02bd22f82e44/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6657c1f9bda5042bb5854a3f524b02bd22f82e44/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=6657c1f9bda5042bb5854a3f524b02bd22f82e44", "patch": "@@ -694,7 +694,7 @@ smallest_int_mode_for_size (unsigned int size)\n }\n \n extern opt_scalar_int_mode int_mode_for_mode (machine_mode);\n-extern machine_mode bitwise_mode_for_mode (machine_mode);\n+extern opt_machine_mode bitwise_mode_for_mode (machine_mode);\n extern opt_machine_mode mode_for_vector (scalar_mode, unsigned);\n extern opt_machine_mode mode_for_int_vector (unsigned int, unsigned int);\n "}, {"sha": "3549f49b93ef6889f83424c175015b5e6d447e5e", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6657c1f9bda5042bb5854a3f524b02bd22f82e44/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6657c1f9bda5042bb5854a3f524b02bd22f82e44/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=6657c1f9bda5042bb5854a3f524b02bd22f82e44", "patch": "@@ -404,10 +404,10 @@ int_mode_for_mode (machine_mode mode)\n     }\n }\n \n-/* Find a mode that can be used for efficient bitwise operations on MODE.\n-   Return BLKmode if no such mode exists.  */\n+/* Find a mode that can be used for efficient bitwise operations on MODE,\n+   if one exists.  */\n \n-machine_mode\n+opt_machine_mode\n bitwise_mode_for_mode (machine_mode mode)\n {\n   /* Quick exit if we already have a suitable mode.  */\n@@ -445,7 +445,7 @@ bitwise_mode_for_mode (machine_mode mode)\n     }\n \n   /* Otherwise fall back on integers while honoring MAX_FIXED_MODE_SIZE.  */\n-  return mode_for_size (bitsize, MODE_INT, true).else_blk ();\n+  return mode_for_size (bitsize, MODE_INT, true);\n }\n \n /* Find a type that can be used for efficient bitwise operations on MODE.\n@@ -454,8 +454,7 @@ bitwise_mode_for_mode (machine_mode mode)\n tree\n bitwise_type_for_mode (machine_mode mode)\n {\n-  mode = bitwise_mode_for_mode (mode);\n-  if (mode == BLKmode)\n+  if (!bitwise_mode_for_mode (mode).exists (&mode))\n     return NULL_TREE;\n \n   unsigned int inner_size = GET_MODE_UNIT_BITSIZE (mode);"}]}