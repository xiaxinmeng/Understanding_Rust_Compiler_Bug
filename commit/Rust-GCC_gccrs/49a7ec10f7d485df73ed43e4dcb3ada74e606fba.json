{"sha": "49a7ec10f7d485df73ed43e4dcb3ada74e606fba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlhN2VjMTBmN2Q0ODVkZjczZWQ0M2U0ZGNiM2FkYTc0ZTYwNmZiYQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-07-31T19:04:55Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-07-31T19:04:55Z"}, "message": "(negtf2,abstf2): Fix v9 case.\n\nFrom-SVN: r12578", "tree": {"sha": "79878bb47201061973e8e24350d3643d31d0888e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79878bb47201061973e8e24350d3643d31d0888e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49a7ec10f7d485df73ed43e4dcb3ada74e606fba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a7ec10f7d485df73ed43e4dcb3ada74e606fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a7ec10f7d485df73ed43e4dcb3ada74e606fba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a7ec10f7d485df73ed43e4dcb3ada74e606fba/comments", "author": null, "committer": null, "parents": [{"sha": "a24d629d1cd39fb0758cf5429e75269b3efe88b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24d629d1cd39fb0758cf5429e75269b3efe88b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24d629d1cd39fb0758cf5429e75269b3efe88b1"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "1fc88de223adf7f007552d0317000d8d82fb2c39", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a7ec10f7d485df73ed43e4dcb3ada74e606fba/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a7ec10f7d485df73ed43e4dcb3ada74e606fba/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=49a7ec10f7d485df73ed43e4dcb3ada74e606fba", "patch": "@@ -4769,20 +4769,21 @@\n (define_insn \"negtf2\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=e,e\")\n \t(neg:TF (match_operand:TF 1 \"register_operand\" \"0,e\")))]\n+  ; We don't use quad float insns here so we don't need TARGET_HARD_QUAD.\n   \"TARGET_FPU\"\n   \"*\n {\n-  if (TARGET_V9)\n-    return \\\"fnegd %1,%0\\\"; /* Can't use fnegs, won't work with upper regs.  */\n-  else if (which_alternative == 0)\n-   return \\\"fnegs %0,%0\\\";\n+  /* v9: can't use fnegs, won't work with upper regs.  */\n+  if (which_alternative == 0)\n+   return TARGET_V9 ? \\\"fnegd %0,%0\\\" : \\\"fnegs %0,%0\\\";\n   else\n-   return \\\"fnegs %1,%0\\;fmovs %R1,%R0\\;fmovs %S1,%S0\\;fmovs %T1,%T0\\\";\n+   return TARGET_V9 ? \\\"fnegd %1,%0\\;fmovd %S1,%S0\\\"\n+     : \\\"fnegs %1,%0\\;fmovs %R1,%R0\\;fmovs %S1,%S0\\;fmovs %T1,%T0\\\";\n }\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr_alternative \"length\"\n      [(const_int 1)\n-      (if_then_else (eq_attr \"isa\" \"v9\") (const_int 1) (const_int 4))])])\n+      (if_then_else (eq_attr \"isa\" \"v9\") (const_int 2) (const_int 4))])])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=e,e\")\n@@ -4812,20 +4813,21 @@\n (define_insn \"abstf2\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=e,e\")\n \t(abs:TF (match_operand:TF 1 \"register_operand\" \"0,e\")))]\n+  ; We don't use quad float insns here so we don't need TARGET_HARD_QUAD.\n   \"TARGET_FPU\"\n   \"*\n {\n-  if (TARGET_V9)\n-    return \\\"fabsd %1,%0\\\"; /* Can't use fabss, won't work with upper regs.  */\n-  else if (which_alternative == 0)\n-    return \\\"fabss %0,%0\\\";\n+  /* v9: can't use fabss, won't work with upper regs.  */\n+  if (which_alternative == 0)\n+    return TARGET_V9 ? \\\"fabsd %0,%0\\\" : \\\"fabss %0,%0\\\";\n   else\n-    return \\\"fabss %1,%0\\;fmovs %R1,%R0\\;fmovs %S1,%S0\\;fmovs %T1,%T0\\\";\n+    return TARGET_V9 ? \\\"fabsd %1,%0\\;fmovd %S1,%S0\\\"\n+      : \\\"fabss %1,%0\\;fmovs %R1,%R0\\;fmovs %S1,%S0\\;fmovs %T1,%T0\\\";\n }\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr_alternative \"length\"\n      [(const_int 1)\n-      (if_then_else (eq_attr \"isa\" \"v9\") (const_int 1) (const_int 4))])])\n+      (if_then_else (eq_attr \"isa\" \"v9\") (const_int 2) (const_int 4))])])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=e,e\")"}]}