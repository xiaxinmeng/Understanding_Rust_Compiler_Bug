{"sha": "d374eb47de109af21faa0cfe9fd76a353d9bd06f", "node_id": "C_kwDOANBUbNoAKGQzNzRlYjQ3ZGUxMDlhZjIxZmFhMGNmZTlmZDc2YTM1M2Q5YmQwNmY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-12T13:27:26Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-12T15:10:06Z"}, "message": "resolver: TopLevel: Build tree of child modules", "tree": {"sha": "3d03ed31d6a7313a5a91ba5d4078f311513c920b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d03ed31d6a7313a5a91ba5d4078f311513c920b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d374eb47de109af21faa0cfe9fd76a353d9bd06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d374eb47de109af21faa0cfe9fd76a353d9bd06f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d374eb47de109af21faa0cfe9fd76a353d9bd06f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d374eb47de109af21faa0cfe9fd76a353d9bd06f/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "172624a7f9ce1ba16a89c7ee64861cb5447b7561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172624a7f9ce1ba16a89c7ee64861cb5447b7561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/172624a7f9ce1ba16a89c7ee64861cb5447b7561"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "9c1f0a10ac8d78eecad97f4ce0df6040b4366bfc", "filename": "gcc/rust/resolve/rust-ast-resolve-base.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h?ref=d374eb47de109af21faa0cfe9fd76a353d9bd06f", "patch": "@@ -199,9 +199,10 @@ class ResolverBase : public AST::ASTVisitor\n   void visit (AST::BareFunctionType &);\n \n protected:\n-  ResolverBase (NodeId parent)\n+  ResolverBase (NodeId parent, NodeId current_module = UNKNOWN_NODEID)\n     : resolver (Resolver::get ()), mappings (Analysis::Mappings::get ()),\n-      resolved_node (UNKNOWN_NODEID), parent (parent), locus (Location ())\n+      resolved_node (UNKNOWN_NODEID), parent (parent),\n+      current_module (current_module), locus (Location ())\n   {}\n \n   bool resolved () const { return resolved_node != UNKNOWN_NODEID; }\n@@ -215,6 +216,7 @@ class ResolverBase : public AST::ASTVisitor\n   Analysis::Mappings *mappings;\n   NodeId resolved_node;\n   NodeId parent;\n+  NodeId current_module;\n   Location locus;\n };\n "}, {"sha": "38e7713e45dfd603465cc33c5afeae2fda8c66e1", "filename": "gcc/rust/resolve/rust-ast-resolve-item.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc?ref=d374eb47de109af21faa0cfe9fd76a353d9bd06f", "patch": "@@ -250,8 +250,11 @@ ResolveItem::visit (AST::Module &module)\n   resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n   resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n \n+  // FIXME: Should we reinsert a child here? Any reason we ResolveTopLevel::go\n+  // in ResolveTopLevel::visit (AST::Module) as well as here?\n   for (auto &item : module.get_items ())\n-    ResolveTopLevel::go (item.get (), CanonicalPath::create_empty (), cpath);\n+    ResolveTopLevel::go (item.get (), CanonicalPath::create_empty (), cpath,\n+\t\t\t module.get_node_id ());\n \n   for (auto &item : module.get_items ())\n     ResolveItem::go (item.get (), path, cpath);"}, {"sha": "7cfaa72f5a509b1fcbe17d5b383e5fcf5af9fadd", "filename": "gcc/rust/resolve/rust-ast-resolve-toplevel.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h?ref=d374eb47de109af21faa0cfe9fd76a353d9bd06f", "patch": "@@ -34,12 +34,12 @@ class ResolveTopLevel : public ResolverBase\n \n public:\n   static void go (AST::Item *item, const CanonicalPath &prefix,\n-\t\t  const CanonicalPath &canonical_prefix)\n+\t\t  const CanonicalPath &canonical_prefix, NodeId current_module)\n   {\n     if (item->is_marked_for_strip ())\n       return;\n \n-    ResolveTopLevel resolver (prefix, canonical_prefix);\n+    ResolveTopLevel resolver (prefix, canonical_prefix, current_module);\n     item->accept_vis (resolver);\n   };\n \n@@ -62,8 +62,10 @@ class ResolveTopLevel : public ResolverBase\n \t\t\t\t     Definition{module.get_node_id (),\n \t\t\t\t\t\tmodule.get_node_id ()});\n \n+    mappings->insert_module_child (current_module, module.get_node_id ());\n+\n     for (auto &item : module.get_items ())\n-      ResolveTopLevel::go (item.get (), path, cpath);\n+      ResolveTopLevel::go (item.get (), path, cpath, module.get_node_id ());\n \n     mappings->insert_canonical_path (mappings->get_current_crate (),\n \t\t\t\t     module.get_node_id (), cpath);\n@@ -123,7 +125,7 @@ class ResolveTopLevel : public ResolverBase\n       });\n \n     for (auto &variant : enum_decl.get_variants ())\n-      ResolveTopLevel::go (variant.get (), path, cpath);\n+      ResolveTopLevel::go (variant.get (), path, cpath, current_module);\n \n     mappings->insert_canonical_path (mappings->get_current_crate (),\n \t\t\t\t     enum_decl.get_node_id (), cpath);\n@@ -403,8 +405,8 @@ class ResolveTopLevel : public ResolverBase\n \n private:\n   ResolveTopLevel (const CanonicalPath &prefix,\n-\t\t   const CanonicalPath &canonical_prefix)\n-    : ResolverBase (UNKNOWN_NODEID), prefix (prefix),\n+\t\t   const CanonicalPath &canonical_prefix, NodeId current_module)\n+    : ResolverBase (UNKNOWN_NODEID, current_module), prefix (prefix),\n       canonical_prefix (canonical_prefix)\n   {}\n "}, {"sha": "945ff28c1953e841a41c9411134fc09ac480a2dd", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d374eb47de109af21faa0cfe9fd76a353d9bd06f/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=d374eb47de109af21faa0cfe9fd76a353d9bd06f", "patch": "@@ -86,7 +86,7 @@ NameResolution::go (AST::Crate &crate)\n   // a Self type Foo which is defined after the impl block for example.\n   for (auto it = crate.items.begin (); it != crate.items.end (); it++)\n     ResolveTopLevel::go (it->get (), CanonicalPath::create_empty (),\n-\t\t\t crate_prefix);\n+\t\t\t crate_prefix, scope_node_id);\n \n   // FIXME remove this\n   if (saw_errors ())"}]}