{"sha": "b67b23f00d2f9edcc05cc0339199860c2f35b864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3YjIzZjAwZDJmOWVkY2MwNWNjMDMzOTE5OTg2MGMyZjM1Yjg2NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-26T11:36:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-26T11:36:39Z"}, "message": "* name-lookup.c (name_lookup::search_adl): ADL OMP UDR type args.\n\nFrom-SVN: r248506", "tree": {"sha": "ac3672768bc38861fad8e9821e68bf09342a3b9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac3672768bc38861fad8e9821e68bf09342a3b9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b67b23f00d2f9edcc05cc0339199860c2f35b864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67b23f00d2f9edcc05cc0339199860c2f35b864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b67b23f00d2f9edcc05cc0339199860c2f35b864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67b23f00d2f9edcc05cc0339199860c2f35b864/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e929e6115e278e8aa3f2df2d76dbd279f6c5195d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e929e6115e278e8aa3f2df2d76dbd279f6c5195d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e929e6115e278e8aa3f2df2d76dbd279f6c5195d"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "bd6fcde0e22bb49aba6777222be59a9a5c10fa14", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b67b23f00d2f9edcc05cc0339199860c2f35b864/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b67b23f00d2f9edcc05cc0339199860c2f35b864/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b67b23f00d2f9edcc05cc0339199860c2f35b864", "patch": "@@ -1,3 +1,7 @@\n+2017-05-26  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* name-lookup.c (name_lookup::search_adl): ADL OMP UDR type args.\n+\n 2017-05-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-tree.h (struct lang_decl_decomp): New type."}, {"sha": "02ed39ac9885ab9974490bf52d9affa3d62d2850", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b67b23f00d2f9edcc05cc0339199860c2f35b864/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b67b23f00d2f9edcc05cc0339199860c2f35b864/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=b67b23f00d2f9edcc05cc0339199860c2f35b864", "patch": "@@ -998,9 +998,11 @@ name_lookup::search_adl (tree fns, vec<tree, va_gc> *args)\n   tree arg;\n \n   FOR_EACH_VEC_ELT_REVERSE (*args, ix, arg)\n-    /* OMP reduction operators put a type as the first arg.  I don't\n-       suppose we should ADL on that?  */\n-    if (!TYPE_P (arg))\n+    /* OMP reduction operators put an ADL-significant type as the\n+       first arg. */\n+    if (TYPE_P (arg))\n+      adl_type (arg);\n+    else\n       adl_expr (arg);\n \n   delete fn_set;"}]}