{"sha": "56b03d5f895fbcfa6e5bd125542b3d24249ca939", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiMDNkNWY4OTVmYmNmYTZlNWJkMTI1NTQyYjNkMjQyNDljYTkzOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-11T04:42:22Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-11T04:42:22Z"}, "message": "(__floatdisf): Use DFtype for intermediate values.\n\nFrom-SVN: r4421", "tree": {"sha": "3b2353e3282207922f59e925f48062ca493d3cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b2353e3282207922f59e925f48062ca493d3cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56b03d5f895fbcfa6e5bd125542b3d24249ca939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b03d5f895fbcfa6e5bd125542b3d24249ca939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b03d5f895fbcfa6e5bd125542b3d24249ca939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b03d5f895fbcfa6e5bd125542b3d24249ca939/comments", "author": null, "committer": null, "parents": [{"sha": "6a25991dfbe2124c53172f9ef595f8908c7d0c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a25991dfbe2124c53172f9ef595f8908c7d0c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a25991dfbe2124c53172f9ef595f8908c7d0c60"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "9dcccbe3d0115d9952a6edd6d75bff2b295f7125", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56b03d5f895fbcfa6e5bd125542b3d24249ca939/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56b03d5f895fbcfa6e5bd125542b3d24249ca939/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=56b03d5f895fbcfa6e5bd125542b3d24249ca939", "patch": "@@ -1018,7 +1018,10 @@ SFtype\n __floatdisf (u)\n      DItype u;\n {\n-  SFtype f;\n+  /* Do the calculation in DFmode\n+     so that we don't lose any of the precision of the high word\n+     while multiplying it.  */\n+  DFtype f;\n   SItype negate = 0;\n \n   if (u < 0)\n@@ -1029,7 +1032,7 @@ __floatdisf (u)\n   f *= HIGH_HALFWORD_COEFF;\n   f += (USItype) (u & (HIGH_WORD_COEFF - 1));\n \n-  return (negate ? -f : f);\n+  return (SFtype) (negate ? -f : f);\n }\n #endif\n "}]}