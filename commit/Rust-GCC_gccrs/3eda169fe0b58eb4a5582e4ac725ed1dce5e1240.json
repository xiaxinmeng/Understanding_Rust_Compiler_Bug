{"sha": "3eda169fe0b58eb4a5582e4ac725ed1dce5e1240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkYTE2OWZlMGI1OGViNGE1NTgyZTRhYzcyNWVkMWRjZTVlMTI0MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-11T23:41:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-11T23:41:43Z"}, "message": "(expand_inline_function): Remove last change.\n\nFrom-SVN: r6211", "tree": {"sha": "09d3b08fa689c717351a652aeaeea77298dd5b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09d3b08fa689c717351a652aeaeea77298dd5b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eda169fe0b58eb4a5582e4ac725ed1dce5e1240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eda169fe0b58eb4a5582e4ac725ed1dce5e1240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eda169fe0b58eb4a5582e4ac725ed1dce5e1240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eda169fe0b58eb4a5582e4ac725ed1dce5e1240/comments", "author": null, "committer": null, "parents": [{"sha": "f29a425b9100e64588eca2e0c1a01509bb546a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29a425b9100e64588eca2e0c1a01509bb546a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29a425b9100e64588eca2e0c1a01509bb546a5c"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9f1803b791793f89a34e70e8fffb0ed996617d07", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eda169fe0b58eb4a5582e4ac725ed1dce5e1240/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eda169fe0b58eb4a5582e4ac725ed1dce5e1240/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=3eda169fe0b58eb4a5582e4ac725ed1dce5e1240", "patch": "@@ -1284,7 +1284,9 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t\t But if ARG_VALS[I] overlaps TARGET, these assumptions are\n \t\t wrong, so put ARG_VALS[I] into a fresh register.  */\n \t      || (target != 0\n-\t\t  && ! CONSTANT_P (arg_vals[i])\n+\t\t  && (GET_CODE (arg_vals[i]) == REG\n+\t\t      || GET_CODE (arg_vals[i]) == SUBREG\n+\t\t      || GET_CODE (arg_vals[i]) == MEM)\n \t\t  && reg_overlap_mentioned_p (arg_vals[i], target))\n \t      /* ??? We must always copy a SUBREG into a REG, because it might\n \t\t get substituted into an address, and not all ports correctly"}]}