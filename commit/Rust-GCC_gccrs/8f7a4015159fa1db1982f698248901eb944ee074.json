{"sha": "8f7a4015159fa1db1982f698248901eb944ee074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3YTQwMTUxNTlmYTFkYjE5ODJmNjk4MjQ4OTAxZWI5NDRlZTA3NA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-01-17T03:59:42Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-01-17T03:59:42Z"}, "message": "stl_iterator.h (reverse_iterator::_M_current): Deuglify, should be current.\n\n\n\n\n2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n            Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n\n\t* include/bits/stl_iterator.h (reverse_iterator::_M_current):\n\tDeuglify, should be current.\n\t(back_insert_iterator::_M_container): Deuglify, should be container.\n\t(front_insert_iterator::_M_container): Same.\n\t(insert_iterator::_M_container): Same.\n\t* testsuite/24_iterators/reverse_iterator.cc: Add check.\n\t* testsuite/24_iterators/back_insert_iterator.cc: Add check.\n\t* testsuite/24_iterators/front_insert_iterator.cc: Same.\n\t* testsuite/24_iterators/insert_iterator.cc: Same.\n\n2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_facets.h (ctype<char>::classic_table): Make\n\tstatic.\n\t(ctype<char>::_M_ctable): Make static, change name to _S_ctable.\n\t* config/os/gnu-linux/bits/ctype_noninline.h: Define _S_ctable.\n\t* config/os/solaris/solaris2.7/bits/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.6/bits/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n\t* config/os/newlib/bits/ctype_noninline.h: Same.\n\t* config/os/irix/irix6.5/bits/ctype_noninline.h: Same.\n\t* config/os/irix/irix5.2/bits/ctype_noninline.h: Same.\n\t* config/os/hpux/bits/ctype_noninline.h: Same.\n\t* config/os/djgpp/bits/ctype_noninline.h: Same.\n\t* config/os/bsd/netbsd/bits/ctype_noninline.h: Same.\n\t* config/os/bsd/freebsd/bits/ctype_noninline.h: Same.\n\t* config/os/aix/bits/ctype_noninline.h: Same.\n\n\tTestcase by Dietmar K\ufffdhl via Peter Schmid\n\t* testsuite/22_locale/ctype_members_char.cc (char>): Add test for\n\tclassic_table().\n\nCo-Authored-By: Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>\n\nFrom-SVN: r48938", "tree": {"sha": "76a6748b980cd4054e6c566bc8d0264351d1611f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76a6748b980cd4054e6c566bc8d0264351d1611f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f7a4015159fa1db1982f698248901eb944ee074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7a4015159fa1db1982f698248901eb944ee074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7a4015159fa1db1982f698248901eb944ee074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7a4015159fa1db1982f698248901eb944ee074/comments", "author": null, "committer": null, "parents": [{"sha": "c66c8b0e657d0523f9b61c4d47d66dcfb5bbe5d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c66c8b0e657d0523f9b61c4d47d66dcfb5bbe5d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c66c8b0e657d0523f9b61c4d47d66dcfb5bbe5d7"}], "stats": {"total": 284, "additions": 200, "deletions": 84}, "files": [{"sha": "d2f7cf3260564e7619d5a7c90f3dc6fa837c88de", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,3 +1,38 @@\n+2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n+            Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n+\n+\t* include/bits/stl_iterator.h (reverse_iterator::_M_current):\n+\tDeuglify, should be current.\n+\t(back_insert_iterator::_M_container): Deuglify, should be container.\n+\t(front_insert_iterator::_M_container): Same.\t\n+\t(insert_iterator::_M_container): Same.\n+\t* testsuite/24_iterators/reverse_iterator.cc: Add check.\n+\t* testsuite/24_iterators/back_insert_iterator.cc: Add check.\t\n+\t* testsuite/24_iterators/front_insert_iterator.cc: Same.\n+\t* testsuite/24_iterators/insert_iterator.cc: Same.\n+\t\n+2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_facets.h (ctype<char>::classic_table): Make\n+\tstatic.\n+\t(ctype<char>::_M_ctable): Make static, change name to _S_ctable.\n+\t* config/os/gnu-linux/bits/ctype_noninline.h: Define _S_ctable.\n+\t* config/os/solaris/solaris2.7/bits/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.6/bits/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n+\t* config/os/newlib/bits/ctype_noninline.h: Same.\n+\t* config/os/irix/irix6.5/bits/ctype_noninline.h: Same.\n+\t* config/os/irix/irix5.2/bits/ctype_noninline.h: Same.\n+\t* config/os/hpux/bits/ctype_noninline.h: Same.\n+\t* config/os/djgpp/bits/ctype_noninline.h: Same.\n+\t* config/os/bsd/netbsd/bits/ctype_noninline.h: Same.\n+\t* config/os/bsd/freebsd/bits/ctype_noninline.h: Same.\n+\t* config/os/aix/bits/ctype_noninline.h: Same.\n+\t\n+\tTestcase by Dietmar K\ufffdhl via Peter Schmid \n+\t* testsuite/22_locale/ctype_members_char.cc (char>): Add test for\n+\tclassic_table().\n+\n 2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libmath/signbitl.c: Copyright years as list, not range.\t"}, {"sha": "dabcae981bfa1a74fc43f4322635f47a31b6314d", "filename": "libstdc++-v3/config/os/aix/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,18 +32,19 @@\n //\n   \n // Information as gleaned from /usr/include/ctype.h\n+\n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n   \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL),\n-  _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL),\n-  _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n   { }\n \n   char"}, {"sha": "db58ecb27c486b24ddb0fac08dd7b132937daed3", "filename": "libstdc++-v3/config/os/bsd/freebsd/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,17 +33,18 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL),\n-  _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL),\n-  _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n   { }\n \n   char"}, {"sha": "f27d93dbdc74e879b12b40bfd0adfc2eed25210d", "filename": "libstdc++-v3/config/os/bsd/netbsd/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,17 +33,19 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL),\n-  _M_ctable(NULL), _M_table(__table == 0 ? (_ctype_ + 1) : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _ctype_ + 1)\n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL),\n-  _M_ctable(NULL), _M_table(__table == 0 ? (_ctype_ + 1) : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _ctype_ + 1)\n   { }\n \n   char"}, {"sha": "fd68e814231610872d034b22dd1eee8073276830", "filename": "libstdc++-v3/config/os/djgpp/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,18 +33,21 @@\n   \n // Information as gleaned from DJGPP <ctype.h>\n \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table = 0, bool __del = false, \n \t\t     size_t __refs = 0) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__dj_ctype_toupper), _M_tolower(__dj_ctype_tolower),\n-  _M_ctable(NULL), _M_table(__table == 0 ? __dj_ctype_flags : __table) \n+  _M_table(__table ? __table : __dj_ctype_flags)  \n   { }\n \n   ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n \t\t     size_t __refs = 0) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__dj_ctype_toupper), _M_tolower(__dj_ctype_tolower),\n-  _M_ctable(NULL), _M_table(__table == 0 ? __dj_ctype_flags : __table) \n+  _M_table(__table ? __table : __dj_ctype_flags)  \n   { }\n \n   char"}, {"sha": "36846d74a0820aa45b0fc378a1926ad4afba5561", "filename": "libstdc++-v3/config/os/generic/bits/ctype_noninline.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,7 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+//  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,18 +33,21 @@\n //\n   \n // Information as gleaned from /usr/include/ctype.h\n+\n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n   \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n-  _M_table(__table == 0 ? _M_ctable : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table == 0 ? _S_ctable : __table) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n-  _M_table(__table == 0 ? _M_ctable : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table == 0 ? _S_ctable : __table) \n   { }\n \n   char"}, {"sha": "1f2bdcf9e65eb093927defc33d053f1667335276", "filename": "libstdc++-v3/config/os/gnu-linux/bits/ctype_noninline.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,7 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,11 +40,13 @@\n   using _C_legacy::__ctype_b;\n #endif\n \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable = __ctype_b;\n+\n #if _GLIBCPP_C_LOCALE_GNU\n   ctype<char>::ctype(__c_locale __cloc, const mask* __table, bool __del, \n \t\t     size_t __refs) \n-  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_ctable(__ctype_b)\n+  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del)\n   {\n     _M_c_locale_ctype = _S_clone_c_locale(__cloc);\n     _M_toupper = _M_c_locale_ctype->__ctype_toupper;\n@@ -55,14 +58,14 @@\n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__ctype_toupper), _M_tolower(__ctype_tolower),\n-  _M_ctable(__ctype_b), _M_table(__table ? __table : __ctype_b)\n+  _M_table(__table ? __table : _S_ctable)\n   { _M_c_locale_ctype = NULL; }\n #endif\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) : \n   __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__ctype_toupper), _M_tolower(__ctype_tolower),\n-  _M_ctable(__ctype_b), _M_table(__table == 0 ? _M_ctable : __table) \n+  _M_table(__table ? __table : _S_ctable)\n   { _M_c_locale_ctype = NULL; }\n \n   char"}, {"sha": "fae41de2ca006c064a6cc780c9d7cc7ef0bdb36c", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_noninline.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -33,18 +33,21 @@\n //\n   \n // Information as gleaned from /usr/include/ctype.h\n+\n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n   \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n-  _M_table(__table == 0 ? (const mask *) __SB_masks : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table ? __table : (const mask *) __SB_masks) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n-  _M_table(__table == 0 ? (const mask *) __SB_masks : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table ? __table : (const mask *) __SB_masks) \n   { }\n \n   char"}, {"sha": "10fef4e5bcab28530141a9be758ae7cfa5556925", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/ctype_noninline.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,7 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997-1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2001, 2002\n+//  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,16 +34,19 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n+  _M_toupper(NULL), _M_tolower(NULL), \n   _M_table(!__table ? __ctype : __table)\n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n+  _M_toupper(NULL), _M_tolower(NULL), \n   _M_table(!__table ? __ctype : __table)\n   { }\n "}, {"sha": "f53f601fcb8f078b4beb74900ae483920b2232a7", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/ctype_noninline.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997-1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,17 +33,21 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n+  ctype<char>::ctype(const mask* __tab\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n+  _M_toupper(NULL), _M_tolower(NULL), \n   _M_table(!__table ? \n \t   (const mask*) (__libc_attr._ctype_tbl->_class + 1) : __table) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n+  _M_toupper(NULL), _M_tolower(NULL), \n   _M_table(!__table ? \n \t   (const mask*) (__libc_attr._ctype_tbl->_class + 1) : __table) \n   { }"}, {"sha": "89a486bcd5a0b9a3adcfb26bfe299a0a642eadd7", "filename": "libstdc++-v3/config/os/newlib/bits/ctype_noninline.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,17 +33,20 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(_ctype_), \n-  _M_table(__table == 0 ? _M_ctable : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table ? __table : _S_ctable) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(_ctype_), \n-  _M_table(__table == 0 ? _M_ctable : __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table ? __table : _S_ctable) \n   { }\n \n   char"}, {"sha": "a37df89eebb72f34d9d93f5d4b1d38b378a42745", "filename": "libstdc++-v3/config/os/solaris/solaris2.5/bits/ctype_noninline.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,18 +32,21 @@\n //\n   \n // Information as gleaned from /usr/include/ctype.h\n+\n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n   \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(__ctype), \n-  _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table ? __table : _S_ctable) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_ctable(__ctype), \n-  _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_toupper(NULL), _M_tolower(NULL), \n+  _M_table(__table ? __table : _S_ctable) \n   { }\n \n   char"}, {"sha": "ab873389c8b1467fdeb845705482e739179b7feb", "filename": "libstdc++-v3/config/os/solaris/solaris2.6/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997-2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,17 +33,20 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower), \n-  _M_ctable(__ctype_mask), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_ctable(__ctype_mask), _M_table(__table ? __table : _M_ctable) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower), \n-  _M_ctable(__ctype_mask), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_ctable(__ctype_mask), _M_table(__table ? __table : _M_ctable) \n   { }\n \n   char"}, {"sha": "c668ae2a3dd824e69a19203d7e3ba0cceeea54a1", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/bits/ctype_noninline.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_noninline.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,7 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997-2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,17 +34,20 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n+  // Data for classic_table().\n+  const ctype_base::mask* ctype<char>::_S_ctable = __ctype_mask;\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower),\n-  _M_ctable(__ctype_mask), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_table(__table ? __table : _S_ctable) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower),\n-  _M_ctable(__ctype_mask), _M_table(__table == 0 ? _M_ctable: __table) \n+  _M_table(__table == 0 ? __table : _S_ctable) \n   { }\n \n   char"}, {"sha": "8108bf0c6fc0d023ffaeb7425ee244b5302876d7", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -233,12 +233,12 @@ namespace std\n       bool \t\t       \t_M_del;\n       __to_type \t       \t_M_toupper;\n       __to_type  \t       \t_M_tolower;\n-      const mask*       \t_M_ctable;\n       const mask*              \t_M_table;\n       \n     public:\n       static locale::id        id;\n       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);\n+      static const mask*       _S_ctable;\n \n       explicit \n       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);\n@@ -264,9 +264,9 @@ namespace std\n       table() const throw()\n       { return _M_table; }\n \n-      const mask* \n+      static const mask* \n       classic_table() throw()\n-      { return _M_ctable; }\n+      { return _S_ctable; }\n \n       virtual \n       ~ctype();"}, {"sha": "7acf4f41d145dba8125e126400322ce5d94710b2", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // Iterators -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -73,7 +73,7 @@ namespace std\n                       typename iterator_traits<_Iterator>::reference>\n     {\n     protected:\n-      _Iterator _M_current;\n+      _Iterator current;\n \n     public:\n       typedef _Iterator \t\t\t\t       iterator_type;\n@@ -86,22 +86,22 @@ namespace std\n       reverse_iterator() { }\n \n       explicit \n-      reverse_iterator(iterator_type __x) : _M_current(__x) { }\n+      reverse_iterator(iterator_type __x) : current(__x) { }\n \n       reverse_iterator(const reverse_iterator& __x) \n-      : _M_current(__x._M_current) { }\n+      : current(__x.current) { }\n \n       template<typename _Iter>\n         reverse_iterator(const reverse_iterator<_Iter>& __x)\n-\t: _M_current(__x.base()) { }\n+\t: current(__x.base()) { }\n     \n       iterator_type \n-      base() const { return _M_current; }\n+      base() const { return current; }\n \n       reference \n       operator*() const \n       {\n-\t_Iterator __tmp = _M_current;\n+\t_Iterator __tmp = current;\n \treturn *--__tmp;\n       }\n \n@@ -111,51 +111,51 @@ namespace std\n       reverse_iterator& \n       operator++() \n       {\n-\t--_M_current;\n+\t--current;\n \treturn *this;\n       }\n \n       reverse_iterator \n       operator++(int) \n       {\n \treverse_iterator __tmp = *this;\n-\t--_M_current;\n+\t--current;\n \treturn __tmp;\n       }\n \n       reverse_iterator& \n       operator--() \n       {\n-\t++_M_current;\n+\t++current;\n \treturn *this;\n       }\n \n       reverse_iterator operator--(int) \n       {\n \treverse_iterator __tmp = *this;\n-\t++_M_current;\n+\t++current;\n \treturn __tmp;\n       }\n       \n       reverse_iterator \n       operator+(difference_type __n) const \n-      { return reverse_iterator(_M_current - __n); }\n+      { return reverse_iterator(current - __n); }\n \n       reverse_iterator& \n       operator+=(difference_type __n) \n       {\n-\t_M_current -= __n;\n+\tcurrent -= __n;\n \treturn *this;\n       }\n \n       reverse_iterator \n       operator-(difference_type __n) const \n-      { return reverse_iterator(_M_current + __n); }\n+      { return reverse_iterator(current + __n); }\n \n       reverse_iterator& \n       operator-=(difference_type __n) \n       {\n-\t_M_current += __n;\n+\tcurrent += __n;\n \treturn *this;\n       }\n \n@@ -217,18 +217,18 @@ namespace std\n     : public iterator<output_iterator_tag, void, void, void, void>\n     {\n     protected:\n-      _Container* _M_container;\n+      _Container* container;\n \n     public:\n       typedef _Container          container_type;\n       \n       explicit \n-      back_insert_iterator(_Container& __x) : _M_container(&__x) { }\n+      back_insert_iterator(_Container& __x) : container(&__x) { }\n \n       back_insert_iterator&\n       operator=(typename _Container::const_reference __value) \n       { \n-\t_M_container->push_back(__value);\n+\tcontainer->push_back(__value);\n \treturn *this;\n       }\n \n@@ -252,17 +252,17 @@ namespace std\n     : public iterator<output_iterator_tag, void, void, void, void>\n     {\n     protected:\n-      _Container* _M_container;\n+      _Container* container;\n \n     public:\n       typedef _Container          container_type;\n \n-      explicit front_insert_iterator(_Container& __x) : _M_container(&__x) { }\n+      explicit front_insert_iterator(_Container& __x) : container(&__x) { }\n \n       front_insert_iterator&\n       operator=(typename _Container::const_reference __value) \n       { \n-\t_M_container->push_front(__value);\n+\tcontainer->push_front(__value);\n \treturn *this;\n       }\n \n@@ -286,19 +286,19 @@ namespace std\n     : public iterator<output_iterator_tag, void, void, void, void>\n     {\n     protected:\n-      _Container* _M_container;\n+      _Container* container;\n       typename _Container::iterator iter;\n \n     public:\n       typedef _Container          container_type;\n       \n       insert_iterator(_Container& __x, typename _Container::iterator __i) \n-      : _M_container(&__x), iter(__i) {}\n+      : container(&__x), iter(__i) {}\n    \n       insert_iterator&\n       operator=(const typename _Container::const_reference __value) \n       { \n-\titer = _M_container->insert(iter, __value);\n+\titer = container->insert(iter, __value);\n \t++iter;\n \treturn *this;\n       }"}, {"sha": "2ce966851b9ce4a39bbe7822443d6324a41d2de2", "filename": "libstdc++-v3/testsuite/22_locale/ctype_members_char.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_members_char.cc?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -234,9 +234,19 @@ void test02()\n   VERIFY( v_c != v_de );\n }\n \n+// Dietmar K\ufffdhl via Peter Schmid \n+class comma_ctype: public std::ctype<char>\n+{\n+public:\n+  comma_ctype(): std::ctype<char>() { }\n+  static void get_table()\n+  { classic_table(); }\n+};\n+\n int main() \n {\n   test01();\n   test02();\n+\n   return 0;\n }"}, {"sha": "63f64ea08e8a2c79ade9bf217d0fde15e9aa959b", "filename": "libstdc++-v3/testsuite/24_iterators/back_insert_iterator.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,6 +54,15 @@ void test02()\n   iterator_type it = std::back_inserter(li);\n }\n \n+// Check data member 'container' accessible.\n+class test_dm : public std::back_insert_iterator<std::list<int> >\n+{\n+  container_type l;\n+  container_type* p;\n+public:\n+  test_dm():  std::back_insert_iterator<std::list<int> >(l), p(container) { }\n+};\n+\n int main() \n { \n   test01();"}, {"sha": "cf446f63ddb286b44119a5d1d0767e7cba67813b", "filename": "libstdc++-v3/testsuite/24_iterators/front_insert_iterator.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -53,6 +53,15 @@ void test02()\n   iterator_type it = std::front_inserter(li);\n }\n \n+// Check data member 'container' accessible.\n+class test_dm : public std::front_insert_iterator<std::list<int> >\n+{\n+  container_type l;\n+  container_type* p;\n+public:\n+  test_dm(): std::front_insert_iterator<std::list<int> >(l), p(container) { }\n+};\n+\n int main() \n { \n   test01();"}, {"sha": "fda883327772184eaf72b4352928f484a6107494", "filename": "libstdc++-v3/testsuite/24_iterators/insert_iterator.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -60,6 +60,16 @@ void test02()\n   iterator_type it02 = std::inserter(li, liit);\n }\n \n+// Check data member 'container' accessible.\n+class test_dm : public std::insert_iterator<std::list<int> >\n+{\n+  container_type l;\n+  container_type::iterator i;\n+  container_type* p;\n+public:\n+  test_dm(): std::insert_iterator<std::list<int> >(l, i), p(container) { }\n+};\n+\n int main() \n { \n   test01();"}, {"sha": "f828a02218d1667690a8a37091c9eb7ead93b534", "filename": "libstdc++-v3/testsuite/24_iterators/reverse_iterator.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7a4015159fa1db1982f698248901eb944ee074/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator.cc?ref=8f7a4015159fa1db1982f698248901eb944ee074", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -67,12 +67,17 @@ void test02()\n   5 + it02;\n }\n \n+// Check data member 'current' accessible.\n+class test_dm : public std::reverse_iterator<int*>\n+{\n+  int* p;\n+public:\n+  test_dm(): p(current) { }\n+};\n \n int main() \n { \n   test01();\n   test02();\n   return 0;\n }\n-\n-"}]}