{"sha": "bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkM2FlYTY4YjNmNmI4M2I0ODY3NmFlYTRjMzhhYzQ1N2UwMmZkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-20T23:43:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-20T23:43:58Z"}, "message": "re PR middle-end/67653 (ICE on valid code on x86_64-linux-gnu: verify_gimple failed)\n\n\tPR middle-end/67653\n\t* gimplify.c (gimplify_asm_expr): Warn if it is too late to\n\tattempt to mark memory input operand addressable and\n\tcall prepare_gimple_addressable in that case.  Don't adjust\n\tinput_location for diagnostics, use error_at instead.\n\n\t* c-c++-common/pr67653.c: New test.\n\t* gcc.dg/torture/pr29119.c: Add dg-warning.\n\nFrom-SVN: r232640", "tree": {"sha": "f393a31f6c473ef40a582ce49e6170d42fe604d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f393a31f6c473ef40a582ce49e6170d42fe604d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26a2e6aed46f0690aee229788887908b7116f515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a2e6aed46f0690aee229788887908b7116f515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a2e6aed46f0690aee229788887908b7116f515"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "06aae56d64ed09415942a9ce1bdc1c7959350e76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "patch": "@@ -1,3 +1,11 @@\n+2016-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/67653\n+\t* gimplify.c (gimplify_asm_expr): Warn if it is too late to\n+\tattempt to mark memory input operand addressable and\n+\tcall prepare_gimple_addressable in that case.  Don't adjust\n+\tinput_location for diagnostics, use error_at instead.\n+\n 2016-01-20  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/ppc-auxv.h: New file."}, {"sha": "32bc1fdb2fb8dd11b25ddfca11548fdb90ce947e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "patch": "@@ -5305,12 +5305,38 @@ gimplify_asm_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \t    TREE_VALUE (link) = error_mark_node;\n \t  tret = gimplify_expr (&TREE_VALUE (link), pre_p, post_p,\n \t\t\t\tis_gimple_lvalue, fb_lvalue | fb_mayfail);\n+\t  if (tret != GS_ERROR)\n+\t    {\n+\t      /* Unlike output operands, memory inputs are not guaranteed\n+\t\t to be lvalues by the FE, and while the expressions are\n+\t\t marked addressable there, if it is e.g. a statement\n+\t\t expression, temporaries in it might not end up being\n+\t\t addressable.  They might be already used in the IL and thus\n+\t\t it is too late to make them addressable now though.  */\n+\t      tree x = TREE_VALUE (link);\n+\t      while (handled_component_p (x))\n+\t\tx = TREE_OPERAND (x, 0);\n+\t      if (TREE_CODE (x) == MEM_REF\n+\t\t  && TREE_CODE (TREE_OPERAND (x, 0)) == ADDR_EXPR)\n+\t\tx = TREE_OPERAND (TREE_OPERAND (x, 0), 0);\n+\t      if ((TREE_CODE (x) == VAR_DECL\n+\t\t   || TREE_CODE (x) == PARM_DECL\n+\t\t   || TREE_CODE (x) == RESULT_DECL)\n+\t\t  && !TREE_ADDRESSABLE (x)\n+\t\t  && is_gimple_reg (x))\n+\t\t{\n+\t\t  warning_at (EXPR_LOC_OR_LOC (TREE_VALUE (link),\n+\t\t\t\t\t       input_location), 0,\n+\t\t\t      \"memory input %d is not directly addressable\",\n+\t\t\t      i);\n+\t\t  prepare_gimple_addressable (&TREE_VALUE (link), pre_p);\n+\t\t}\n+\t    }\n \t  mark_addressable (TREE_VALUE (link));\n \t  if (tret == GS_ERROR)\n \t    {\n-\t      if (EXPR_HAS_LOCATION (TREE_VALUE (link)))\n-\t        input_location = EXPR_LOCATION (TREE_VALUE (link));\n-\t      error (\"memory input %d is not directly addressable\", i);\n+\t      error_at (EXPR_LOC_OR_LOC (TREE_VALUE (link), input_location),\n+\t\t\t\"memory input %d is not directly addressable\", i);\n \t      ret = tret;\n \t    }\n \t}"}, {"sha": "0a2e22f0aa87c251f3c8b9eab6c2bda747646232", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "patch": "@@ -1,3 +1,9 @@\n+2016-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/67653\n+\t* c-c++-common/pr67653.c: New test.\n+\t* gcc.dg/torture/pr29119.c: Add dg-warning.\n+\n 2016-01-20  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/cpu-builtin-1.c: New test."}, {"sha": "1b9f63ec626db86e702f28d6e5787b78fa5420f6", "filename": "gcc/testsuite/c-c++-common/pr67653.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr67653.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr67653.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr67653.c?ref=bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "patch": "@@ -0,0 +1,8 @@\n+/* PR middle-end/67653 */\n+/* { dg-do compile } */\n+\n+void\n+foo (void)\n+{\n+  __asm__ (\"\" : : \"m\" (({ static int a; a; })));\t/* { dg-warning \"memory input 0 is not directly addressable\" } */\n+}"}, {"sha": "d4f02f124563c15d39d0b36a1e9d34ddbf3e48fc", "filename": "gcc/testsuite/gcc.dg/torture/pr29119.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr29119.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr29119.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr29119.c?ref=bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "patch": "@@ -2,6 +2,5 @@\n \n void ldt_add_entry(void)\n {\n-   __asm__ (\"\" :: \"m\"(({unsigned __v; __v;})));\n+   __asm__ (\"\" :: \"m\"(({unsigned __v; __v;})));\t/* { dg-warning \"memory input 0 is not directly addressable\" } */\n }\n-"}]}