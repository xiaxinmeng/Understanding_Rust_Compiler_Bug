{"sha": "44e17b8d8999a658af9f86681504d74a119a5f6f", "node_id": "C_kwDOANBUbNoAKDQ0ZTE3YjhkODk5OWE2NThhZjlmODY2ODE1MDRkNzRhMTE5YTVmNmY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-04-04T19:28:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-04-05T10:37:19Z"}, "message": "libstdc++: Define std::sub_match::swap member function (LWG 3204)\n\nThis was approved at the C++ meeting in February.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/regex.h (sub_match::swap): New function.\n\t* testsuite/28_regex/sub_match/lwg3204.cc: New test.", "tree": {"sha": "602bcfcfe3848a3a61bdbfe1163cfc7883037273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/602bcfcfe3848a3a61bdbfe1163cfc7883037273"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44e17b8d8999a658af9f86681504d74a119a5f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e17b8d8999a658af9f86681504d74a119a5f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e17b8d8999a658af9f86681504d74a119a5f6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e17b8d8999a658af9f86681504d74a119a5f6f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdc5abbdcfb65d415af6c40230f8f07872e51e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc5abbdcfb65d415af6c40230f8f07872e51e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc5abbdcfb65d415af6c40230f8f07872e51e49"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "26ac6a21c31dbad727499dce3a610beb66dd96ff", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e17b8d8999a658af9f86681504d74a119a5f6f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e17b8d8999a658af9f86681504d74a119a5f6f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=44e17b8d8999a658af9f86681504d74a119a5f6f", "patch": "@@ -1006,6 +1006,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       { return this->_M_str().compare({__s, __n}); }\n       /// @endcond\n \n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 3204. sub_match::swap only swaps the base class\n+      /// Swap the values of two sub_match objects.\n+      void\n+      swap(sub_match& __s) noexcept(__is_nothrow_swappable<_BiIter>::value)\n+      {\n+\tthis->pair<_BiIter, _BiIter>::swap(__s);\n+\tstd::swap(matched, __s.matched);\n+      }\n+\n     private:\n       // Simplified basic_string_view for C++11\n       struct __string_view"}, {"sha": "58ef0df58a1409306eff0cc3e3b220886588a729", "filename": "libstdc++-v3/testsuite/28_regex/sub_match/lwg3204.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e17b8d8999a658af9f86681504d74a119a5f6f/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fsub_match%2Flwg3204.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e17b8d8999a658af9f86681504d74a119a5f6f/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fsub_match%2Flwg3204.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fsub_match%2Flwg3204.cc?ref=44e17b8d8999a658af9f86681504d74a119a5f6f", "patch": "@@ -0,0 +1,38 @@\n+// { dg-do run { target c++11 } }\n+#include <regex>\n+#include <testsuite_hooks.h>\n+\n+// LWG 3204. sub_match::swap only swaps the base class\n+\n+int main()\n+{\n+  std::sub_match<const char*> a, b;\n+  a.matched = true;\n+  a.swap(b);\n+  VERIFY( ! a.matched );\n+  VERIFY( b.matched );\n+}\n+\n+struct iter\n+{\n+  using value_type = char;\n+  using difference_type = long;\n+  using pointer = const char*;\n+  using reference = const char&;\n+  using iterator_category = std::bidirectional_iterator_tag;\n+\n+  iter();\n+  iter(const iter&) noexcept(false);\n+\n+  iter& operator++();\n+  iter operator++(int);\n+  iter& operator--();\n+  iter operator--(int);\n+  reference operator*() const;\n+  pointer operator->() const;\n+};\n+\n+using CS = std::csub_match;\n+static_assert( noexcept(std::declval<CS&>().swap(std::declval<CS&>())) );\n+using IS = std::sub_match<iter>;\n+static_assert( ! noexcept(std::declval<IS&>().swap(std::declval<IS&>())) );"}]}