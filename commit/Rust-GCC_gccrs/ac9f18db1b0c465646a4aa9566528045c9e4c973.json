{"sha": "ac9f18db1b0c465646a4aa9566528045c9e4c973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM5ZjE4ZGIxYjBjNDY1NjQ2YTRhYTk1NjY1MjgwNDVjOWU0Yzk3Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-04-30T09:35:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-04-30T09:35:05Z"}, "message": "c-typeck.c (c_incomplete_type_error): Refactor to use %qT.\n\n\t* c-typeck.c (c_incomplete_type_error): Refactor to use %qT.  Print\n\tthe type of a decl.\n\n\t* gcc.dg/incomplete-typedef-1.c: New test.\n\nFrom-SVN: r222614", "tree": {"sha": "d6bafc73f07c3c0bb3449ddd288ff6407ffd6869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6bafc73f07c3c0bb3449ddd288ff6407ffd6869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac9f18db1b0c465646a4aa9566528045c9e4c973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9f18db1b0c465646a4aa9566528045c9e4c973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac9f18db1b0c465646a4aa9566528045c9e4c973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9f18db1b0c465646a4aa9566528045c9e4c973/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9babc352483293e84371af273b1aa1be037cdf31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9babc352483293e84371af273b1aa1be037cdf31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9babc352483293e84371af273b1aa1be037cdf31"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "3894bb9cbe1274902e51ee84d604b433c8e23dff", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ac9f18db1b0c465646a4aa9566528045c9e4c973", "patch": "@@ -3,6 +3,9 @@\n \t* c-typeck.c (set_init_label): Call error_at instead of error and\n \tpass LOC to it.\n \n+\t* c-typeck.c (c_incomplete_type_error): Refactor to use %qT.  Print\n+\tthe type of a decl.\n+\n 2015-04-29  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* c-parser.c (c_parser_oacc_enter_exit_data): Use"}, {"sha": "413cd07b2e345cda997ab885949950f3148b9891", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=ac9f18db1b0c465646a4aa9566528045c9e4c973", "patch": "@@ -229,15 +229,13 @@ require_complete_type (tree value)\n void\n c_incomplete_type_error (const_tree value, const_tree type)\n {\n-  const char *type_code_string;\n-\n   /* Avoid duplicate error message.  */\n   if (TREE_CODE (type) == ERROR_MARK)\n     return;\n \n   if (value != 0 && (TREE_CODE (value) == VAR_DECL\n \t\t     || TREE_CODE (value) == PARM_DECL))\n-    error (\"%qD has an incomplete type\", value);\n+    error (\"%qD has an incomplete type %qT\", value, type);\n   else\n     {\n     retry:\n@@ -246,15 +244,8 @@ c_incomplete_type_error (const_tree value, const_tree type)\n       switch (TREE_CODE (type))\n \t{\n \tcase RECORD_TYPE:\n-\t  type_code_string = \"struct\";\n-\t  break;\n-\n \tcase UNION_TYPE:\n-\t  type_code_string = \"union\";\n-\t  break;\n-\n \tcase ENUMERAL_TYPE:\n-\t  type_code_string = \"enum\";\n \t  break;\n \n \tcase VOID_TYPE:\n@@ -280,11 +271,10 @@ c_incomplete_type_error (const_tree value, const_tree type)\n \t}\n \n       if (TREE_CODE (TYPE_NAME (type)) == IDENTIFIER_NODE)\n-\terror (\"invalid use of undefined type %<%s %E%>\",\n-\t       type_code_string, TYPE_NAME (type));\n+\terror (\"invalid use of undefined type %qT\", type);\n       else\n \t/* If this type has a typedef-name, the TYPE_NAME is a TYPE_DECL.  */\n-\terror (\"invalid use of incomplete typedef %qD\", TYPE_NAME (type));\n+\terror (\"invalid use of incomplete typedef %qT\", type);\n     }\n }\n "}, {"sha": "29e177ee35295438345a234b6331c799b3a07ce3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac9f18db1b0c465646a4aa9566528045c9e4c973", "patch": "@@ -2,6 +2,8 @@\n \n \t* gcc.dg/init-bad-8.c: New test.\n \n+\t* gcc.dg/incomplete-typedef-1.c: New test.\n+\n 2015-04-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59955"}, {"sha": "622bf6504216d085d739e4d2a1f1244262cb4dd4", "filename": "gcc/testsuite/gcc.dg/incomplete-typedef-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Ftestsuite%2Fgcc.dg%2Fincomplete-typedef-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9f18db1b0c465646a4aa9566528045c9e4c973/gcc%2Ftestsuite%2Fgcc.dg%2Fincomplete-typedef-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fincomplete-typedef-1.c?ref=ac9f18db1b0c465646a4aa9566528045c9e4c973", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+typedef struct S TS;\n+typedef union U TU;\n+\n+void\n+foo (void)\n+{\n+  (TS) { }; /* { dg-error \"invalid use of incomplete typedef\" } */\n+  (TU) { }; /* { dg-error \"invalid use of incomplete typedef\" } */\n+}"}]}