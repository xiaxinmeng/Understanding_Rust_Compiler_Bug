{"sha": "cac896d8dea98fade627cfd60438ff428e1a323f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FjODk2ZDhkZWE5OGZhZGU2MjdjZmQ2MDQzOGZmNDI4ZTFhMzIzZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-10T13:04:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-10T13:04:45Z"}, "message": "(_floatdidf): Correctly set float sizes.\n\nFrom-SVN: r9920", "tree": {"sha": "feccbeb6dcc6c09803e26d337a1329adf7ad8928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feccbeb6dcc6c09803e26d337a1329adf7ad8928"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cac896d8dea98fade627cfd60438ff428e1a323f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac896d8dea98fade627cfd60438ff428e1a323f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac896d8dea98fade627cfd60438ff428e1a323f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac896d8dea98fade627cfd60438ff428e1a323f/comments", "author": null, "committer": null, "parents": [{"sha": "92d6875bdd88f24c95b86c2425ae5276ca302994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d6875bdd88f24c95b86c2425ae5276ca302994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d6875bdd88f24c95b86c2425ae5276ca302994"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "fae070f181af30f02e38f4005c1cfe888f014754", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac896d8dea98fade627cfd60438ff428e1a323f/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac896d8dea98fade627cfd60438ff428e1a323f/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=cac896d8dea98fade627cfd60438ff428e1a323f", "patch": "@@ -997,24 +997,34 @@ __floatdidf (u)\n #define HIGH_HALFWORD_COEFF (((UDItype) 1) << (WORD_SIZE / 2))\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n #define DI_SIZE (sizeof (DItype) * BITS_PER_UNIT)\n-#if TARGET_FLOAT_FORMAT == IEEE_FLOAT_FORMAT\n+\n+/* Define codes for all the float formats that we know of.  Note\n+   that this is copied from real.h.  */\n+   \n+#define UNKNOWN_FLOAT_FORMAT 0\n+#define IEEE_FLOAT_FORMAT 1\n+#define VAX_FLOAT_FORMAT 2\n+#define IBM_FLOAT_FORMAT 3\n+\n+/* Default to IEEE float if not specified.  Nearly all machines use it.  */\n+#ifndef HOST_FLOAT_FORMAT\n+#define\tHOST_FLOAT_FORMAT\tIEEE_FLOAT_FORMAT\n+#endif\n+\n+#if HOST_FLOAT_FORMAT == IEEE_FLOAT_FORMAT\n #define DF_SIZE 53\n #define SF_SIZE 24\n-#else\n-#if TARGET_FLOAT_FORMAT == IBM_FLOAT_FORMAT\n+#endif\n+\n+#if HOST_FLOAT_FORMAT == IBM_FLOAT_FORMAT\n #define DF_SIZE 56\n #define SF_SIZE 24\n-#else\n-#if TARGET_FLOAT_FORMAT == VAX_FLOAT_FORMAT\n+#endif\n+\n+#if HOST_FLOAT_FORMAT == VAX_FLOAT_FORMAT\n #define DF_SIZE 56\n #define SF_SIZE 24\n-#else\n-#define DF_SIZE 0\n-#define SF_SIZE 0\n #endif\n-#endif\n-#endif\n-\n \n SFtype\n __floatdisf (u)"}]}