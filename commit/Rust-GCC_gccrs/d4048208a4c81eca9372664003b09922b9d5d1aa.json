{"sha": "d4048208a4c81eca9372664003b09922b9d5d1aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwNDgyMDhhNGM4MWVjYTkzNzI2NjQwMDNiMDk5MjJiOWQ1ZDFhYQ==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-05-28T11:58:35Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-05-28T11:58:35Z"}, "message": "c-common.c (c_common_nodes_and_builtins): Replace use of TARGET_ENUM_VA_LIST by target hook enum_va_list.\n\n2010-05-28  Kai Tietz  <kai.tietz@onevision.com>\n\n        * c-common.c (c_common_nodes_and_builtins): Replace use\n        of TARGET_ENUM_VA_LIST by target hook enum_va_list.\n        * config/i386/i386.c (TARGET_ENUM_VA_LIST_P): Hook\n        to ix86_enum_va_list.\n        * config/i386/i386.h (TARGET_ENUM_VA_LIST): Removed.\n        * doc/tm.texi (TARGET_ENUM_VA_LIST): Removed.\n        (TARGET_ENUM_VA_LIST_P): Add hook description.\n        * target-def.h (TARGET_ENUM_VA_LIST_P): Added.\n        * target.h (gcc_target): Add enum_va_list hook.\n\nFrom-SVN: r159966", "tree": {"sha": "c3d191d473097e189086bc6f9d252e42b7ae28ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3d191d473097e189086bc6f9d252e42b7ae28ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4048208a4c81eca9372664003b09922b9d5d1aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4048208a4c81eca9372664003b09922b9d5d1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4048208a4c81eca9372664003b09922b9d5d1aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4048208a4c81eca9372664003b09922b9d5d1aa/comments", "author": null, "committer": null, "parents": [{"sha": "40dcd88bb984adbf44039ecef933bd061a810e06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40dcd88bb984adbf44039ecef933bd061a810e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40dcd88bb984adbf44039ecef933bd061a810e06"}], "stats": {"total": 82, "additions": 49, "deletions": 33}, "files": [{"sha": "92dc7f7b099ea308fb1f66dc08fbaf4bf7c10c91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -1,5 +1,15 @@\n 2010-05-28  Kai Tietz  <kai.tietz@onevision.com>\n \n+\t* c-common.c (c_common_nodes_and_builtins): Replace use\n+\tof TARGET_ENUM_VA_LIST by target hook enum_va_list.\n+\t* config/i386/i386.c (TARGET_ENUM_VA_LIST_P): Hook\n+\tto ix86_enum_va_list.\n+\t* config/i386/i386.h (TARGET_ENUM_VA_LIST): Removed.\n+\t* doc/tm.texi (TARGET_ENUM_VA_LIST): Removed.\n+\t(TARGET_ENUM_VA_LIST_P): Add hook description.\n+\t* target-def.h (TARGET_ENUM_VA_LIST_P): Added.\n+\t* target.h (gcc_target): Add enum_va_list hook.\n+\n \tPR bootstrap/44299\n \t* config/i386/t-cygming: Adjust header dependencies for winnt-cxx.c.\n \t* config/i386/winnt-cxx.c (IN_GCC_FRONTEND): Remove undefine."}, {"sha": "77026faf64b023feecd2d2938cf00ae909c20782", "filename": "gcc/c-common.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -5114,21 +5114,21 @@ c_common_nodes_and_builtins (void)\n     (build_decl (UNKNOWN_LOCATION,\n \t\t TYPE_DECL, get_identifier (\"__builtin_va_list\"),\n \t\t va_list_type_node));\n-#ifdef TARGET_ENUM_VA_LIST\n-  {\n-    int l;\n-    const char *pname;\n-    tree ptype;\n-    for (l = 0; TARGET_ENUM_VA_LIST (l, &pname, &ptype); ++l)\n-      {\n-\tlang_hooks.decls.pushdecl\n-\t  (build_decl (UNKNOWN_LOCATION,\n-\t\t       TYPE_DECL, get_identifier (pname),\n-\t  \t       ptype));\n+  if (targetm.enum_va_list)\n+    {\n+      int l;\n+      const char *pname;\n+      tree ptype;\n \n-      }\n-  }\n-#endif\n+      for (l = 0; targetm.enum_va_list (l, &pname, &ptype); ++l)\n+\t{\n+\t  lang_hooks.decls.pushdecl\n+\t    (build_decl (UNKNOWN_LOCATION,\n+\t\t         TYPE_DECL, get_identifier (pname),\n+\t  \t         ptype));\n+\n+\t}\n+    }\n \n   if (TREE_CODE (va_list_type_node) == ARRAY_TYPE)\n     {"}, {"sha": "c26a7323ee471e9c90641f48684ad75b2d5453f6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -30738,6 +30738,9 @@ ix86_enum_va_list (int idx, const char **pname, tree *ptree)\n #undef TARGET_BUILD_BUILTIN_VA_LIST\n #define TARGET_BUILD_BUILTIN_VA_LIST ix86_build_builtin_va_list\n \n+#undef TARGET_ENUM_VA_LIST_P\n+#define TARGET_ENUM_VA_LIST_P ix86_enum_va_list\n+\n #undef TARGET_FN_ABI_VA_LIST\n #define TARGET_FN_ABI_VA_LIST ix86_fn_abi_va_list\n "}, {"sha": "7e1d6cf50aeceffc320b7e3a8e8ceab5e7b94d3c", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -2450,11 +2450,6 @@ struct GTY(()) machine_function {\n #undef TARG_COND_BRANCH_COST\n #define TARG_COND_BRANCH_COST           ix86_cost->branch_cost\n \n-/* Enum through the target specific extra va_list types.\n-   Please, do not iterate the base va_list type name.  */\n-#define TARGET_ENUM_VA_LIST(IDX, PNAME, PTYPE) \\\n-  (TARGET_64BIT ? ix86_enum_va_list (IDX, PNAME, PTYPE) : 0)\n-\n /* Cost of any scalar operation, excluding load and store.  */\n #undef TARG_SCALAR_STMT_COST\n #define TARG_SCALAR_STMT_COST           ix86_cost->scalar_stmt_cost"}, {"sha": "6e68d2ea8d311164b3b7b1fdaa8d2b579f243d94", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -4298,6 +4298,20 @@ This hook returns a type node for @code{va_list} for the target.\n The default version of the hook returns @code{void*}.\n @end deftypefn\n \n+@deftypefn {Target Hook} int TARGET_ENUM_VA_LIST_P (int @var{idx}, const char ** @var{pname}, tree @var{ptype})\n+This target hook is used in function @code{c_common_nodes_and_builtins}\n+to iterate through the target specific builtin types for va_list. The\n+variable @var{idx} is used as iterator. @var{pname} has to be a pointer\n+to a @code{const char *} and @var{ptype} a pointer to a @code{tree} typed\n+variable.\n+The arguments @var{pname} and @var{ptype} are used to store the result of\n+this macro and are set to the name of the va_list builtin type and its\n+internal type.\n+If the return value of this macro is zero, then there is no more element.\n+Otherwise the @var{IDX} should be increased for the next call of this\n+macro to iterate through all types.\n+@end deftypefn\n+\n @deftypefn {Target Hook} tree TARGET_FN_ABI_VA_LIST (tree @var{fndecl})\n This hook returns the va_list type of the calling convention specified by\n @var{fndecl}.\n@@ -4494,20 +4508,6 @@ should recognize only the caller's register numbers.\n If this hook is not defined, then FUNCTION_VALUE_REGNO_P will be used.\n @end deftypefn\n \n-@defmac TARGET_ENUM_VA_LIST (@var{idx}, @var{pname}, @var{ptype})\n-This target macro is used in function @code{c_common_nodes_and_builtins}\n-to iterate through the target specific builtin types for va_list. The\n-variable @var{idx} is used as iterator. @var{pname} has to be a pointer\n-to a @code{const char *} and @var{ptype} a pointer to a @code{tree} typed\n-variable.\n-The arguments @var{pname} and @var{ptype} are used to store the result of\n-this macro and are set to the name of the va_list builtin type and its\n-internal type.\n-If the return value of this macro is zero, then there is no more element.\n-Otherwise the @var{IDX} should be increased for the next call of this\n-macro to iterate through all types.\n-@end defmac\n-\n @defmac APPLY_RESULT_SIZE\n Define this macro if @samp{untyped_call} and @samp{untyped_return}\n need more space than is implied by @code{FUNCTION_VALUE_REGNO_P} for"}, {"sha": "109772329d634b18411718744d37b52357040f0c", "filename": "gcc/target-def.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -538,6 +538,10 @@\n #define TARGET_SCALAR_MODE_SUPPORTED_P default_scalar_mode_supported_p\n #endif\n \n+#ifndef TARGET_ENUM_VA_LIST_P\n+#define TARGET_ENUM_VA_LIST_P NULL\n+#endif\n+\n #ifndef TARGET_DECIMAL_FLOAT_SUPPORTED_P\n #define TARGET_DECIMAL_FLOAT_SUPPORTED_P default_decimal_float_supported_p\n #endif\n@@ -1009,6 +1013,7 @@\n   TARGET_CC_MODES_COMPATIBLE,\t\t\t\\\n   TARGET_MACHINE_DEPENDENT_REORG,\t\t\\\n   TARGET_BUILD_BUILTIN_VA_LIST,\t\t\t\\\n+  TARGET_ENUM_VA_LIST_P,\t\t\t\\\n   TARGET_FN_ABI_VA_LIST,\t\t\t\\\n   TARGET_CANONICAL_VA_LIST_TYPE,\t\t\\\n   TARGET_EXPAND_BUILTIN_VA_START,\t\t\\"}, {"sha": "e17cc21f9fca79fa64cdf128b414feb2435e5d1b", "filename": "gcc/target.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4048208a4c81eca9372664003b09922b9d5d1aa/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=d4048208a4c81eca9372664003b09922b9d5d1aa", "patch": "@@ -844,6 +844,9 @@ struct gcc_target\n   /* Create the __builtin_va_list type.  */\n   tree (* build_builtin_va_list) (void);\n \n+  /* Enumerate the va list variants.  */\n+  int (* enum_va_list) (int, const char **, tree *);\n+\n   /* Get the cfun/fndecl calling abi __builtin_va_list type.  */\n   tree (* fn_abi_va_list) (tree);\n "}]}