{"sha": "2c54eab5a302c6da015bb39b1a81f6799e45a650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1NGVhYjVhMzAyYzZkYTAxNWJiMzliMWE4MWY2Nzk5ZTQ1YTY1MA==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-04-02T06:31:12Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-04-02T06:31:12Z"}, "message": "fortran : ICE in gfc_resolve_findloc PR93498\n\nICE occurs when findloc is used with character arguments of different\nkinds.  If the character kinds are different reject the code.\n\nOriginal patch provided by Steven G. Kargl  <kargl@gcc.gnu.org>.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/93498\n\t* check.c (gfc_check_findloc):  If the kinds of the arguments\n\tdiffer goto label \"incompat\".\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/93498\n\t* gfortran.dg/pr93498_1.f90:  New test.\n\t* gfortran.dg/pr93498_2.f90:  New test.", "tree": {"sha": "0e65bf74cb366cdcff9a9f5fa4c92194e1a4c1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e65bf74cb366cdcff9a9f5fa4c92194e1a4c1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c54eab5a302c6da015bb39b1a81f6799e45a650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c54eab5a302c6da015bb39b1a81f6799e45a650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c54eab5a302c6da015bb39b1a81f6799e45a650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c54eab5a302c6da015bb39b1a81f6799e45a650/comments", "author": null, "committer": null, "parents": [{"sha": "bf1f6d8819ade074271df718f01fd3a5a9dc1b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1f6d8819ade074271df718f01fd3a5a9dc1b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1f6d8819ade074271df718f01fd3a5a9dc1b82"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "89de9d00fe2df49c96ad9d09994d4f11218046ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2c54eab5a302c6da015bb39b1a81f6799e45a650", "patch": "@@ -1,3 +1,9 @@\n+2020-04-02  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/93498\n+\t* check.c (gfc_check_findloc):  If the kinds of the arguments\n+\tdiffer goto label \"incompat\".\n+\n 2020-04-02 Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/94030"}, {"sha": "cdabbf5e12a7462998f1e9e6b15978a7b22fbd00", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=2c54eab5a302c6da015bb39b1a81f6799e45a650", "patch": "@@ -3947,6 +3947,10 @@ gfc_check_findloc (gfc_actual_arglist *ap)\n   v1 = v->ts.type == BT_CHARACTER;\n   if ((a1 && !v1) || (!a1 && v1))\n     goto incompat;\n+\n+  /* Check the kind of the characters argument match.  */\n+  if (a1 && v1 && a->ts.kind != v->ts.kind)\n+    goto incompat;\n \t \n   d = ap->next->next->expr;\n   m = ap->next->next->next->expr;"}, {"sha": "ac1695f60985bf3ee7022b024c22a9776bb62522", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c54eab5a302c6da015bb39b1a81f6799e45a650", "patch": "@@ -1,3 +1,9 @@\n+2020-04-02  Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+\tPR fortran/93498\n+\t* gfortran.dg/pr93498_1.f90:  New test.\n+\t* gfortran.dg/pr93498_2.f90:  New test.\n+\n 2020-04-02  Mark Eggleston  <mark.eggleston@codethink.com>\n \tSteven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "0210cc7951e262ce2d2bf0b0c7b9f7bf77bd910f", "filename": "gcc/testsuite/gfortran.dg/pr93498_1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93498_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93498_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93498_1.f90?ref=2c54eab5a302c6da015bb39b1a81f6799e45a650", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+!\n+! Test case by  G. Steinmetz\n+\n+program p\n+   character(len=1, kind=1) :: x(3) = ['a', 'b', 'c']\n+   character(len=1, kind=4) :: y = 4_'b'\n+   print *, findloc(x, y)     ! { dg-error \" must be in type conformance\" }\n+   print *, findloc(x, y, 1)  ! { dg-error \" must be in type conformance\" }\n+end\n+"}, {"sha": "ee9238ffa24134f02dc3e5cddea3cac8531df124", "filename": "gcc/testsuite/gfortran.dg/pr93498_2.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93498_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c54eab5a302c6da015bb39b1a81f6799e45a650/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93498_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93498_2.f90?ref=2c54eab5a302c6da015bb39b1a81f6799e45a650", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! Test case by  G. Steinmetz\n+\n+program p\n+   character(len=1, kind=4) :: x(3) = [4_'a', 4_'b', 4_'c']\n+   character(len=1, kind=1) :: y = 'b'\n+   print *, findloc(x, y)     ! { dg-error \" must be in type conformance\" }\n+   print *, findloc(x, y, 1)  ! { dg-error \" must be in type conformance\" }\n+end\n+\n+"}]}