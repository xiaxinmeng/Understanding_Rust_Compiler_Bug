{"sha": "abf9af023a5199e8a2b0c0eb610ffb91fda2617f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJmOWFmMDIzYTUxOTllOGEyYjBjMGViNjEwZmZiOTFmZGEyNjE3Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2000-08-29T15:54:29Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-29T15:54:29Z"}, "message": "* xcoffout.c: Fix formatting.\n\nFrom-SVN: r36035", "tree": {"sha": "0bea5dab3c32d4549f9cea7d54a3f2b35020c255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bea5dab3c32d4549f9cea7d54a3f2b35020c255"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abf9af023a5199e8a2b0c0eb610ffb91fda2617f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf9af023a5199e8a2b0c0eb610ffb91fda2617f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf9af023a5199e8a2b0c0eb610ffb91fda2617f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf9af023a5199e8a2b0c0eb610ffb91fda2617f/comments", "author": null, "committer": null, "parents": [{"sha": "ffe9f7851edf04aad05b8d5c3489d232fd9547f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe9f7851edf04aad05b8d5c3489d232fd9547f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffe9f7851edf04aad05b8d5c3489d232fd9547f5"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "8f9ba701cfba510b82033899526eb656b0f46088", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf9af023a5199e8a2b0c0eb610ffb91fda2617f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf9af023a5199e8a2b0c0eb610ffb91fda2617f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abf9af023a5199e8a2b0c0eb610ffb91fda2617f", "patch": "@@ -1,3 +1,7 @@\n+2000-08-28  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* xcoffout.c: Fix formatting.\n+\n 2000-08-28  Jason Merrill  <jason@redhat.com>\n \n \t* dwarf2out.c (attr_checksum): Also ignore DW_AT_producer."}, {"sha": "88c4e05341c36481f86add80a5cb124e5fd92a8f", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 26, "deletions": 28, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf9af023a5199e8a2b0c0eb610ffb91fda2617f/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf9af023a5199e8a2b0c0eb610ffb91fda2617f/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=abf9af023a5199e8a2b0c0eb610ffb91fda2617f", "patch": "@@ -1,6 +1,6 @@\n /* Output xcoff-format symbol table information from GNU compiler.\n-   Copyright (C) 1992, 1994, 1995, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1994, 1995, 1997, 1998, 1999, 2000\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -19,7 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-\n /* Output xcoff-format symbol table data.  The main functionality is contained\n    in dbxout.c.  This file implements the sdbout-like parts of the xcoff\n    interface.  Many functions are very similar to their counterparts in\n@@ -196,8 +195,8 @@ stab_to_sclass (stab)\n       return C_GSYM;\n \n     case N_FNAME:\n-      UNKNOWN_STAB (\"N_FNAME\"); \n-      abort();\n+      UNKNOWN_STAB (\"N_FNAME\");\n+      abort ();\n \n     case N_FUN:\n       return C_FUN;\n@@ -208,15 +207,15 @@ stab_to_sclass (stab)\n \n #ifdef N_MAIN\n     case N_MAIN:\n-      UNKNOWN_STAB (\"N_MAIN\"); \n+      UNKNOWN_STAB (\"N_MAIN\");\n       abort ();\n #endif\n \n     case N_RSYM:\n       return C_RSYM;\n \n     case N_SSYM:\n-      UNKNOWN_STAB (\"N_SSYM\"); \n+      UNKNOWN_STAB (\"N_SSYM\");\n       abort ();\n \n     case N_RPSYM:\n@@ -232,59 +231,59 @@ stab_to_sclass (stab)\n       return C_ENTRY;\n \n     case N_SO:\n-      UNKNOWN_STAB (\"N_SO\"); \n+      UNKNOWN_STAB (\"N_SO\");\n       abort ();\n \n     case N_SOL:\n-      UNKNOWN_STAB (\"N_SOL\"); \n+      UNKNOWN_STAB (\"N_SOL\");\n       abort ();\n \n     case N_SLINE:\n-      UNKNOWN_STAB (\"N_SLINE\"); \n+      UNKNOWN_STAB (\"N_SLINE\");\n       abort ();\n \n #ifdef N_DSLINE\n     case N_DSLINE:\n-      UNKNOWN_STAB (\"N_DSLINE\"); \n+      UNKNOWN_STAB (\"N_DSLINE\");\n       abort ();\n #endif\n \n #ifdef N_BSLINE\n     case N_BSLINE:\n-      UNKNOWN_STAB (\"N_BSLINE\"); \n+      UNKNOWN_STAB (\"N_BSLINE\");\n       abort ();\n #endif\n #if 0\n       /* This has the same value as N_BSLINE.  */\n     case N_BROWS:\n-      UNKNOWN_STAB (\"N_BROWS\"); \n+      UNKNOWN_STAB (\"N_BROWS\");\n       abort ();\n #endif\n \n #ifdef N_BINCL\n     case N_BINCL:\n-      UNKNOWN_STAB (\"N_BINCL\"); \n+      UNKNOWN_STAB (\"N_BINCL\");\n       abort ();\n #endif\n \n #ifdef N_EINCL\n     case N_EINCL:\n-      UNKNOWN_STAB (\"N_EINCL\"); \n+      UNKNOWN_STAB (\"N_EINCL\");\n       abort ();\n #endif\n \n #ifdef N_EXCL\n     case N_EXCL:\n-      UNKNOWN_STAB (\"N_EXCL\"); \n+      UNKNOWN_STAB (\"N_EXCL\");\n       abort ();\n #endif\n \n     case N_LBRAC:\n-      UNKNOWN_STAB (\"N_LBRAC\"); \n+      UNKNOWN_STAB (\"N_LBRAC\");\n       abort ();\n \n     case N_RBRAC:\n-      UNKNOWN_STAB (\"N_RBRAC\"); \n+      UNKNOWN_STAB (\"N_RBRAC\");\n       abort ();\n \n     case N_BCOMM:\n@@ -295,33 +294,33 @@ stab_to_sclass (stab)\n       return C_ECOML;\n \n     case N_LENG:\n-      UNKNOWN_STAB (\"N_LENG\"); \n+      UNKNOWN_STAB (\"N_LENG\");\n       abort ();\n \n     case N_PC:\n-      UNKNOWN_STAB (\"N_PC\"); \n+      UNKNOWN_STAB (\"N_PC\");\n       abort ();\n \n #ifdef N_M2C\n     case N_M2C:\n-      UNKNOWN_STAB (\"N_M2C\"); \n+      UNKNOWN_STAB (\"N_M2C\");\n       abort ();\n #endif\n \n #ifdef N_SCOPE\n     case N_SCOPE:\n-      UNKNOWN_STAB (\"N_SCOPE\"); \n+      UNKNOWN_STAB (\"N_SCOPE\");\n       abort ();\n #endif\n \n     case N_CATCH:\n-      UNKNOWN_STAB (\"N_CATCH\"); \n+      UNKNOWN_STAB (\"N_CATCH\");\n       abort ();\n \n     default:\n-      UNKNOWN_STAB (\"default\"); \n+      UNKNOWN_STAB (\"default\");\n       abort ();\n-  }\n+    }\n }\n \f\n /* Output debugging info to FILE to switch to sourcefile FILENAME.\n@@ -345,15 +344,15 @@ xcoffout_source_file (file, filename, inline_p)\n \t  fprintf (file, \"\\n\");\n \t  xcoff_current_include_file = NULL;\n \t}\n-\txcoff_inlining=inline_p;\n+      xcoff_inlining = inline_p;\n       if (strcmp (main_input_filename, filename) || inline_p)\n \t{\n \t  fprintf (file, \"\\t.bi\\t\");\n \t  output_quoted_string (file, filename);\n \t  fprintf (file, \"\\n\");\n \t  xcoff_current_include_file = filename;\n \t}\n-      \n+\n       if (!xcoff_lastfile)\n \tggc_add_string_root ((char **) &xcoff_lastfile, 1);\n \n@@ -432,7 +431,6 @@ xcoffout_begin_block (file, line, n)\n {\n   tree decl = current_function_decl;\n \n-  \n   /* The IBM AIX compiler does not emit a .bb for the function level scope,\n      so we avoid it here also.  */\n   if (n != 1)"}]}