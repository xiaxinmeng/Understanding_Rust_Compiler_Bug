{"sha": "d8a99c7c6bce947706eeafbf69ec214845eb4a66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhOTljN2M2YmNlOTQ3NzA2ZWVhZmJmNjllYzIxNDg0NWViNGE2Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-12-17T01:04:39Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-12-17T01:04:39Z"}, "message": "compiler: Don't crash on append with single argument.\n\nInstead of allocating an empty slice literal, use a slice\nvalue with a nil pointer.\n\nFrom-SVN: r218806", "tree": {"sha": "5a271d4630e9f505f2b3001cb9d31874df347a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a271d4630e9f505f2b3001cb9d31874df347a89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a99c7c6bce947706eeafbf69ec214845eb4a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a99c7c6bce947706eeafbf69ec214845eb4a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a99c7c6bce947706eeafbf69ec214845eb4a66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a99c7c6bce947706eeafbf69ec214845eb4a66/comments", "author": null, "committer": null, "parents": [{"sha": "03625f0717107775ae01d7bd5a82bc081c96c13c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03625f0717107775ae01d7bd5a82bc081c96c13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03625f0717107775ae01d7bd5a82bc081c96c13c"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "83ee6d923bb2803c5679d554e2d4e6505eae2652", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a99c7c6bce947706eeafbf69ec214845eb4a66/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a99c7c6bce947706eeafbf69ec214845eb4a66/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=d8a99c7c6bce947706eeafbf69ec214845eb4a66", "patch": "@@ -6878,7 +6878,11 @@ Builtin_call_expression::do_flatten(Gogo*, Named_object*,\n            ++pa)\n         {\n           if ((*pa)->is_nil_expression())\n-            *pa = Expression::make_slice_composite_literal(at, NULL, loc);\n+\t    {\n+\t      Expression* nil = Expression::make_nil(loc);\n+\t      Expression* zero = Expression::make_integer_ul(0, NULL, loc);\n+\t      *pa = Expression::make_slice_value(at, nil, zero, zero, loc);\n+\t    }\n           if (!(*pa)->is_variable())\n             {\n               Temporary_statement* temp =\n@@ -14087,7 +14091,8 @@ class Slice_value_expression : public Expression\n int\n Slice_value_expression::do_traverse(Traverse* traverse)\n {\n-  if (Expression::traverse(&this->valptr_, traverse) == TRAVERSE_EXIT\n+  if (Type::traverse(this->type_, traverse) == TRAVERSE_EXIT\n+      || Expression::traverse(&this->valptr_, traverse) == TRAVERSE_EXIT\n       || Expression::traverse(&this->len_, traverse) == TRAVERSE_EXIT\n       || Expression::traverse(&this->cap_, traverse) == TRAVERSE_EXIT)\n     return TRAVERSE_EXIT;"}]}