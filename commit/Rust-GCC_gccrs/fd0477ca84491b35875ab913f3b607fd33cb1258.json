{"sha": "fd0477ca84491b35875ab913f3b607fd33cb1258", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwNDc3Y2E4NDQ5MWIzNTg3NWFiOTEzZjNiNjA3ZmQzM2NiMTI1OA==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2016-11-15T22:40:11Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2016-11-15T22:40:11Z"}, "message": "tree-ssa-coalesce.c (register_default_def): Remove register_ssa_partition.\n\ngcc/ChangeLog:\n\n2016-11-16  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* tree-ssa-coalesce.c (register_default_def): Remove register_ssa_partition.\n\t(create_outofssa_var_map): Likewise.\n\t* tree-ssa-live.c (register_ssa_partition_check): Remove.\n\t* tree-ssa-live.h (register_ssa_partition): Likewise.\n\nFrom-SVN: r242461", "tree": {"sha": "74e97335d5c87871c6676830cedbaebb1601fb4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74e97335d5c87871c6676830cedbaebb1601fb4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd0477ca84491b35875ab913f3b607fd33cb1258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0477ca84491b35875ab913f3b607fd33cb1258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0477ca84491b35875ab913f3b607fd33cb1258", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0477ca84491b35875ab913f3b607fd33cb1258/comments", "author": null, "committer": null, "parents": [{"sha": "a8dd133793176fbc022cef752ad654e26256fafa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8dd133793176fbc022cef752ad654e26256fafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8dd133793176fbc022cef752ad654e26256fafa"}], "stats": {"total": 51, "additions": 9, "deletions": 42}, "files": [{"sha": "75f7cfa9bd1569aca21529cf880958e3139398da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd0477ca84491b35875ab913f3b607fd33cb1258", "patch": "@@ -1,3 +1,10 @@\n+2016-11-16  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* tree-ssa-coalesce.c (register_default_def): Remove register_ssa_partition.\n+\t(create_outofssa_var_map): Likewise.\n+\t* tree-ssa-live.c (register_ssa_partition_check): Remove.\n+\t* tree-ssa-live.h (register_ssa_partition): Likewise.\n+\n 2016-11-15  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* genattrtab.c (attr_rtx_1): Avoid allocating new rtx objects."}, {"sha": "d2574df4c0d73cb2f549fc664e7d1c14c086ddf7", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=fd0477ca84491b35875ab913f3b607fd33cb1258", "patch": "@@ -1040,17 +1040,13 @@ create_default_def (tree var, void *arg ATTRIBUTE_UNUSED)\n /* Register VAR's default def in MAP.  */\n \n static void\n-register_default_def (tree var, void *map_)\n+register_default_def (tree var, void *arg ATTRIBUTE_UNUSED)\n {\n-  var_map map = (var_map)map_;\n-\n   if (!is_gimple_reg (var))\n     return;\n \n   tree ssa = ssa_default_def (cfun, var);\n   gcc_assert (ssa);\n-\n-  register_ssa_partition (map, ssa);\n }\n \n /* If VAR is an SSA_NAME associated with a PARM_DECL or a RESULT_DECL,\n@@ -1088,15 +1084,14 @@ create_outofssa_var_map (coalesce_list *cl, bitmap used_in_copy)\n   gimple *stmt;\n   tree first;\n   var_map map;\n-  ssa_op_iter iter;\n   int v1, v2, cost;\n   unsigned i;\n \n   for_all_parms (create_default_def, NULL);\n \n   map = init_var_map (num_ssa_names);\n \n-  for_all_parms (register_default_def, map);\n+  for_all_parms (register_default_def, NULL);\n \n   FOR_EACH_BB_FN (bb, cfun)\n     {\n@@ -1114,7 +1109,6 @@ create_outofssa_var_map (coalesce_list *cl, bitmap used_in_copy)\n \n \t  res = gimple_phi_result (phi);\n \t  ver = SSA_NAME_VERSION (res);\n-\t  register_ssa_partition (map, res);\n \n \t  /* Register ssa_names and coalesces between the args and the result\n \t     of all PHI.  */\n@@ -1125,7 +1119,6 @@ create_outofssa_var_map (coalesce_list *cl, bitmap used_in_copy)\n \t      if (TREE_CODE (arg) != SSA_NAME)\n \t\tcontinue;\n \n-\t      register_ssa_partition (map, arg);\n \t      if (gimple_can_coalesce_p (arg, res)\n \t\t  || (e->flags & EDGE_ABNORMAL))\n \t\t{\n@@ -1152,10 +1145,6 @@ create_outofssa_var_map (coalesce_list *cl, bitmap used_in_copy)\n \t  if (is_gimple_debug (stmt))\n \t    continue;\n \n-\t  /* Register USE and DEF operands in each statement.  */\n-\t  FOR_EACH_SSA_TREE_OPERAND (var, stmt, iter, (SSA_OP_DEF|SSA_OP_USE))\n-\t    register_ssa_partition (map, var);\n-\n \t  /* Check for copy coalesces.  */\n \t  switch (gimple_code (stmt))\n \t    {"}, {"sha": "9de03d14a36e18633a8cc3abbe15782b037dabf7", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=fd0477ca84491b35875ab913f3b607fd33cb1258", "patch": "@@ -1276,22 +1276,6 @@ debug (tree_live_info_d *ptr)\n }\n \n \n-/* Verify that SSA_VAR is a non-virtual SSA_NAME.  */\n-\n-void\n-register_ssa_partition_check (tree ssa_var)\n-{\n-  gcc_assert (TREE_CODE (ssa_var) == SSA_NAME);\n-  if (virtual_operand_p (ssa_var))\n-    {\n-      fprintf (stderr, \"Illegally registering a virtual SSA name :\");\n-      print_generic_expr (stderr, ssa_var, TDF_SLIM);\n-      fprintf (stderr, \" in the SSA->Normal phase.\\n\");\n-      internal_error (\"SSA corruption\");\n-    }\n-}\n-\n-\n /* Verify that the info in LIVE matches the current cfg.  */\n \n static void"}, {"sha": "440efa9f6be43eb4eb66504a71414fdd68c7fb48", "filename": "gcc/tree-ssa-live.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2Ftree-ssa-live.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0477ca84491b35875ab913f3b607fd33cb1258/gcc%2Ftree-ssa-live.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.h?ref=fd0477ca84491b35875ab913f3b607fd33cb1258", "patch": "@@ -80,7 +80,6 @@ extern void remove_unused_locals (void);\n extern void dump_var_map (FILE *, var_map);\n extern void debug (_var_map &ref);\n extern void debug (_var_map *ptr);\n-extern void register_ssa_partition_check (tree ssa_var);\n \n \n /* Return number of partitions in MAP.  */\n@@ -174,18 +173,6 @@ num_basevars (var_map map)\n }\n \n \n-\n-/* This routine registers a partition for SSA_VAR with MAP.  Any unregistered\n-   partitions may be filtered out by a view later.  */\n-\n-static inline void\n-register_ssa_partition (var_map map ATTRIBUTE_UNUSED, tree ssa_var)\n-{\n-  if (flag_checking)\n-    register_ssa_partition_check (ssa_var);\n-}\n-\n-\n /*  ---------------- live on entry/exit info ------------------------------\n \n     This structure is used to represent live range information on SSA based"}]}