{"sha": "377eaca734da58430ab9b37300f730e86ae8f04a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3ZWFjYTczNGRhNTg0MzBhYjliMzczMDBmNzMwZTg2YWU4ZjA0YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-05-14T09:07:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-14T09:07:13Z"}, "message": "i\t* gcc.dg/vect/pr66636.c (foo): Add __attribute__((noinline,noclone)).\n\nFrom-SVN: r236238", "tree": {"sha": "98411ecde5189f5a1756bf5ae8421c625a4b541e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98411ecde5189f5a1756bf5ae8421c625a4b541e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/377eaca734da58430ab9b37300f730e86ae8f04a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377eaca734da58430ab9b37300f730e86ae8f04a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377eaca734da58430ab9b37300f730e86ae8f04a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377eaca734da58430ab9b37300f730e86ae8f04a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5fe79728ff947c6ed88f0c2564f7f87a37c145ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe79728ff947c6ed88f0c2564f7f87a37c145ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fe79728ff947c6ed88f0c2564f7f87a37c145ff"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "3916695f6f766ff994a0e583e4b056f4053cd0fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377eaca734da58430ab9b37300f730e86ae8f04a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377eaca734da58430ab9b37300f730e86ae8f04a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=377eaca734da58430ab9b37300f730e86ae8f04a", "patch": "@@ -18,6 +18,7 @@\n \n \t* gcc.dg/vect/tree-vect.h (check_vect): Handle AVX2,\n \tremove XOP handling.\n+\t* gcc.dg/vect/pr66636.c (foo): Add __attribute__((noinline,noclone)).\n \n 2016-05-13  Nathan Sidwell  <nathan@acm.org>\n "}, {"sha": "c0733ffa5a3bbc05cd971d29f0f02bab6248afb8", "filename": "gcc/testsuite/gcc.dg/vect/pr66636.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377eaca734da58430ab9b37300f730e86ae8f04a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66636.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377eaca734da58430ab9b37300f730e86ae8f04a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66636.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66636.c?ref=377eaca734da58430ab9b37300f730e86ae8f04a", "patch": "@@ -6,7 +6,8 @@ extern void abort (void);\n \n struct X { double x; double y; };\n \n-void foo (struct X *x, double px, int s)\n+void __attribute__((noinline,noclone))\n+foo (struct X *x, double px, int s)\n {\n   int i;\n   for (i = 0; i < 256; ++i)"}, {"sha": "faf91d512380ca85f6758979c57a54fadf213c3d", "filename": "gcc/testsuite/gcc.dg/vect/tree-vect.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377eaca734da58430ab9b37300f730e86ae8f04a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377eaca734da58430ab9b37300f730e86ae8f04a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h?ref=377eaca734da58430ab9b37300f730e86ae8f04a", "patch": "@@ -38,7 +38,7 @@ check_vect (void)\n     /* Determine what instruction set we've been compiled for, and detect\n        that we're running with it.  This allows us to at least do a compile\n        check for, e.g. SSE4.1 when the machine only supports SSE2.  */\n-#if defined(__AVX2__)\n+# if defined(__AVX2__)\n     want_level = 7, want_b = bit_AVX2;\n # elif defined(__AVX__)\n     want_level = 1, want_c = bit_AVX;"}]}