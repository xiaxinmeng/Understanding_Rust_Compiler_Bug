{"sha": "6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0ZWY1YzFmYzlhODU4YTQxZjA2OWRlM2E4OWM0MWYxZWI1Zjk2ZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-10-24T19:22:14Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-10-24T19:22:14Z"}, "message": "c-typeck.c (enum impl_conv): Remove ic_argpass_nonproto.\n\n\t* c-typeck.c (enum impl_conv): Remove ic_argpass_nonproto.\n\t(convert_for_assignment): Remove ic_argpass_nonproto cases.\n\nFrom-SVN: r141347", "tree": {"sha": "2cb8f8d97c2318bfba277907e36e54431f1ca05a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cb8f8d97c2318bfba277907e36e54431f1ca05a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a00e5f7fbcf5c79571ed1f5dcf46c30031d37d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a00e5f7fbcf5c79571ed1f5dcf46c30031d37d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a00e5f7fbcf5c79571ed1f5dcf46c30031d37d1"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "e294197c7a973cb10047a6a926cf3537d89a63fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d", "patch": "@@ -1,3 +1,8 @@\n+2008-10-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-typeck.c (enum impl_conv): Remove ic_argpass_nonproto.\n+\t(convert_for_assignment): Remove ic_argpass_nonproto cases.\n+\n 2008-10-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/36038"}, {"sha": "b322db4ea519654439855e7deb71a630a5a18075", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6b4ef5c1fc9a858a41f069de3a89c41f1eb5f96d", "patch": "@@ -49,7 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n    diagnostic messages in convert_for_assignment.  */\n enum impl_conv {\n   ic_argpass,\n-  ic_argpass_nonproto,\n   ic_assign,\n   ic_init,\n   ic_return\n@@ -3984,7 +3983,7 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n   tree rname = NULL_TREE;\n   bool objc_ok = false;\n \n-  if (errtype == ic_argpass || errtype == ic_argpass_nonproto)\n+  if (errtype == ic_argpass)\n     {\n       tree selector;\n       /* Change pointer to function to the function itself for\n@@ -4017,9 +4016,6 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n                   \"expected %qT but argument is of type %qT\",            \\\n                   type, rhstype);                                        \\\n         break;                                                           \\\n-      case ic_argpass_nonproto:                                          \\\n-        warning (OPT, AR, parmnum, rname);                               \\\n-        break;                                                           \\\n       case ic_assign:                                                    \\\n         pedwarn (LOCATION, OPT, AS);                                     \\\n         break;                                                           \\\n@@ -4138,7 +4134,7 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n   /* Conversion to a transparent union from its member types.\n      This applies only to function arguments.  */\n   if (codel == UNION_TYPE && TYPE_TRANSPARENT_UNION (type)\n-      && (errtype == ic_argpass || errtype == ic_argpass_nonproto))\n+      && errtype == ic_argpass)\n     {\n       tree memb, marginal_memb = NULL_TREE;\n \n@@ -4282,7 +4278,6 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n \t  switch (errtype)\n \t  {\n \t  case ic_argpass:\n-\t  case ic_argpass_nonproto:\n \t    warning (OPT_Wmissing_format_attribute,\n \t\t     \"argument %d of %qE might be \"\n \t\t     \"a candidate for a format attribute\",\n@@ -4448,9 +4443,6 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n   switch (errtype)\n     {\n     case ic_argpass:\n-    case ic_argpass_nonproto:\n-      /* ??? This should not be an error when inlining calls to\n-\t unprototyped functions.  */\n       error (\"incompatible type for argument %d of %qE\", parmnum, rname);\n       inform ((fundecl && !DECL_IS_BUILTIN (fundecl))\n \t      ? DECL_SOURCE_LOCATION (fundecl) : input_location,"}]}