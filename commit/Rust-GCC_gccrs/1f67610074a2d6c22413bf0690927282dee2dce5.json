{"sha": "1f67610074a2d6c22413bf0690927282dee2dce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY2NzYxMDA3NGEyZDZjMjI0MTNiZjA2OTA5MjcyODJkZWUyZGNlNQ==", "commit": {"author": {"name": "Nicola Pero", "email": "n.pero@mi.flashnet.it", "date": "2002-08-29T22:50:27Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2002-08-29T22:50:27Z"}, "message": "Extended documentation on ObjC macros and flags\n\nFrom-SVN: r56668", "tree": {"sha": "91362e7c51ef31f510cdfdb144ade271ed7e720a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91362e7c51ef31f510cdfdb144ade271ed7e720a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f67610074a2d6c22413bf0690927282dee2dce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f67610074a2d6c22413bf0690927282dee2dce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f67610074a2d6c22413bf0690927282dee2dce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f67610074a2d6c22413bf0690927282dee2dce5/comments", "author": null, "committer": null, "parents": [{"sha": "23532de9e517d125c6971c5ad5354265a814aee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23532de9e517d125c6971c5ad5354265a814aee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23532de9e517d125c6971c5ad5354265a814aee6"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "273f16d7d1e94df2a2cbcc040b2bff8c4702fe10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f67610074a2d6c22413bf0690927282dee2dce5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f67610074a2d6c22413bf0690927282dee2dce5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f67610074a2d6c22413bf0690927282dee2dce5", "patch": "@@ -1,3 +1,10 @@\n+Fri Aug 30 00:33:37 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n+\n+\t* doc/cpp.texi (__NEXT_RUNTIME__): Extended documentation.\n+\t* doc/invoke.texi (-fnext-runtime, -Wno-protocol, -Wselector):\n+\tExtended, updated documentation.\n+\t(-Wundeclared-selector): Documented.\n+\n 2002-08-29  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/chorus.h: Consistently define *_DEBUGGING_INFO with"}, {"sha": "e84cf5f78c2707b41f7468b99c5497f1999ed6a9", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f67610074a2d6c22413bf0690927282dee2dce5/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f67610074a2d6c22413bf0690927282dee2dce5/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=1f67610074a2d6c22413bf0690927282dee2dce5", "patch": "@@ -2028,8 +2028,10 @@ mechanism based on @code{setjmp} and @code{longjmp} for exception\n handling.\n \n @item __NEXT_RUNTIME__\n-This macro is defined, with value 1, when the NeXT runtime\n-(as in @option{-fnext-runtime}) is in use for Objective-C.\n+This macro is defined, with value 1, if (and only if) the NeXT runtime\n+(as in @option{-fnext-runtime}) is in use for Objective-C.  If the GNU\n+runtime is used, this macro is not defined, so that you can use this\n+macro to determine which runtime (NeXT or GNU) is being used.\n \n @item __TARGET_BITS_ORDER__\n This macro describes the target's bits order in a byte.  Its value is"}, {"sha": "2ab40692835783ee448ae7207cbecbee4cb88209", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f67610074a2d6c22413bf0690927282dee2dce5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f67610074a2d6c22413bf0690927282dee2dce5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1f67610074a2d6c22413bf0690927282dee2dce5", "patch": "@@ -199,7 +199,7 @@ in the following sections.\n @gccoptlist{\n -fconstant-string-class=@var{class-name} @gol\n -fgnu-runtime  -fnext-runtime  -gen-decls @gol\n--Wno-protocol  -Wselector}\n+-Wno-protocol  -Wselector -Wundeclared-selector}\n \n @item Language Independent Options\n @xref{Language Independent Options,,Options to Control Diagnostic Messages Formatting}.\n@@ -1731,7 +1731,9 @@ runtime.  This is the default for most types of systems.\n @item -fnext-runtime\n @opindex fnext-runtime\n Generate output compatible with the NeXT runtime.  This is the default\n-for NeXT-based systems, including Darwin and Mac OS X@.\n+for NeXT-based systems, including Darwin and Mac OS X@.  The macro\n+@code{__NEXT_RUNTIME__} is predefined if (and only if) this option is\n+used.\n \n @item -gen-decls\n @opindex gen-decls\n@@ -1740,12 +1742,39 @@ file named @file{@var{sourcename}.decl}.\n \n @item -Wno-protocol\n @opindex Wno-protocol\n-Do not warn if methods required by a protocol are not implemented\n-in the class adopting it.\n+If a class is declared to implement a protocol, a warning is issued for\n+every method in the protocol that is not implemented by the class.  The\n+default behaviour is to issue a warning for every method not explicitly\n+implemented in the class, even if a method implementation is inherited\n+from the superclass.  If you use the @code{-Wno-protocol} option, then\n+methods inherited from the superclass are considered to be implemented,\n+and no warning is issued for them.\n \n @item -Wselector\n @opindex Wselector\n-Warn if a selector has multiple methods of different types defined.\n+Warn if multiple methods of different types for the same selector are\n+found during compilation.  The check is performed on the list of methods\n+in the final stage of compilation.  Additionally, a check is performed\n+that for each selector appearing in a @code{@@selector(@dots{})}\n+expression, a corresponding method with that selector has been found\n+during compilation.  Because these checks scan the method table only at\n+the end of compilation, these warnings are not produced if the final\n+stage of compilation is not reached, for example because an error is\n+found during compilation, or because the @code{-fsyntax-only} option is\n+being used.\n+\n+@item -Wundeclared-selector\n+@opindex Wundeclared-selector\n+Warn if a @code{@@selector(@dots{})} expression referring to an\n+undeclared selector is found.  A selector is considered undeclared if no\n+method with that name has been declared (explicitly, in an\n+@code{@@interface} or @code{@@protocol} declaration, or implicitly, in\n+an @code{@@implementation} section) before the\n+@code{@@selector(@dots{})} expression.  This option always performs its\n+checks as soon as a @code{@@selector(@dots{})} expression is found\n+(while @code{-Wselector} only performs its checks in the final stage of\n+compilation), and so additionally enforces the coding style convention\n+that methods and selectors must be declared before being used.\n \n @c not documented because only avail via -Wp\n @c @item -print-objc-runtime-info"}]}