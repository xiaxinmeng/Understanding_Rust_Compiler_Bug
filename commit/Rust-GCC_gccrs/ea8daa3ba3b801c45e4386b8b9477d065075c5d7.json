{"sha": "ea8daa3ba3b801c45e4386b8b9477d065075c5d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4ZGFhM2JhM2I4MDFjNDVlNDM4NmI4Yjk0NzdkMDY1MDc1YzVkNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-08T12:20:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-08T12:20:44Z"}, "message": "(initdcl, notype_initdcl): Call push_momentary and pop_momentary here.\n\n(init): Not here.\n\nFrom-SVN: r5679", "tree": {"sha": "fc4fc892f43ff6e9ec33662f6ce8f48d532400a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc4fc892f43ff6e9ec33662f6ce8f48d532400a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8daa3ba3b801c45e4386b8b9477d065075c5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8daa3ba3b801c45e4386b8b9477d065075c5d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8daa3ba3b801c45e4386b8b9477d065075c5d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8daa3ba3b801c45e4386b8b9477d065075c5d7/comments", "author": null, "committer": null, "parents": [{"sha": "1417141fe54052f8c43f34ec4f6bc01001712639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1417141fe54052f8c43f34ec4f6bc01001712639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1417141fe54052f8c43f34ec4f6bc01001712639"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "87b7951f28e68f110c95da6b1abd39e9d3856337", "filename": "gcc/c-parse.in", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8daa3ba3b801c45e4386b8b9477d065075c5d7/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8daa3ba3b801c45e4386b8b9477d065075c5d7/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=ea8daa3ba3b801c45e4386b8b9477d065075c5d7", "patch": "@@ -1019,12 +1019,16 @@ maybeasm:\n initdcl:\n \t  declarator maybeasm maybe_attribute '='\n \t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1);\n-\t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n+\t\t  start_init ($<ttype>$, $2, global_bindings_p ());\n+\t\t  /* Note that the call to clear_momentary\n+\t\t     is in process_init_element.  */\n+\t\t  push_momentary (); }\n \t  init\n /* Note how the declaration of the variable is in effect while its init is parsed! */\n \t\t{ finish_init ();\n \t\t  decl_attributes ($<ttype>5, $3);\n-\t\t  finish_decl ($<ttype>5, $6, $2); }\n+\t\t  finish_decl ($<ttype>5, $6, $2);\n+\t\t  pop_momentary (); }\n \t| declarator maybeasm maybe_attribute\n \t\t{ tree d = start_decl ($1, current_declspecs, 0);\n \t\t  decl_attributes (d, $3);\n@@ -1034,12 +1038,17 @@ initdcl:\n notype_initdcl:\n \t  notype_declarator maybeasm maybe_attribute '='\n \t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1);\n-\t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n+\t\t  start_init ($<ttype>$, $2, global_bindings_p ());\n+\t\t  /* Note that the call to clear_momentary\n+\t\t     is in process_init_element.  */\n+\t\t  push_momentary (); }\n \t  init\n /* Note how the declaration of the variable is in effect while its init is parsed! */\n \t\t{ finish_init ();\n \t\t  decl_attributes ($<ttype>5, $3);\n-\t\t  finish_decl ($<ttype>5, $6, $2); }\n+\t\t  finish_decl ($<ttype>5, $6, $2);\n+\t\t  pop_momentary (); }\n+\n \t| notype_declarator maybeasm maybe_attribute\n \t\t{ tree d = start_decl ($1, current_declspecs, 0);\n \t\t  decl_attributes (d, $3);\n@@ -1113,17 +1122,11 @@ attrib\n init:\n \texpr_no_commas\n \t| '{'\n-\t\t{ really_start_incremental_init (NULL_TREE);\n-\t\t  /* Note that the call to clear_momentary\n-\t\t     is in process_init_element.  */\n-\t\t  push_momentary (); }\n+\t\t{ really_start_incremental_init (NULL_TREE); }\n \t  initlist_maybe_comma '}'\n-\t\t{ $$ = pop_init_level (0);\n-\t\t  pop_momentary (); }\n-\n+\t\t{ $$ = pop_init_level (0); }\n \t| error\n-\t\t{ $$ = error_mark_node;\n-\t\t  pop_momentary (); }\n+\t\t{ $$ = error_mark_node; }\n \t;\n \n /* `initlist_maybe_comma' is the guts of an initializer in braces.  */"}]}