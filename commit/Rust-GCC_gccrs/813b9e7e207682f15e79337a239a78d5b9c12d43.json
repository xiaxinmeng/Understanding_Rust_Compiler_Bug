{"sha": "813b9e7e207682f15e79337a239a78d5b9c12d43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzYjllN2UyMDc2ODJmMTVlNzkzMzdhMjM5YTc4ZDViOWMxMmQ0Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-25T18:59:20Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-25T18:59:20Z"}, "message": "Fix typo in comment in previous commit.\n\nFrom-SVN: r146779", "tree": {"sha": "9d5ad1c8517b100c6df153a69f6aa2c5fa08aba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d5ad1c8517b100c6df153a69f6aa2c5fa08aba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813b9e7e207682f15e79337a239a78d5b9c12d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b9e7e207682f15e79337a239a78d5b9c12d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813b9e7e207682f15e79337a239a78d5b9c12d43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b9e7e207682f15e79337a239a78d5b9c12d43/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92f6fd0b80bedd1ed200c687f2c9f82e1c09cd1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f6fd0b80bedd1ed200c687f2c9f82e1c09cd1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f6fd0b80bedd1ed200c687f2c9f82e1c09cd1a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ecedb96c672d8697059d04e0f5a1627d7c3173a7", "filename": "libcpp/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b9e7e207682f15e79337a239a78d5b9c12d43/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b9e7e207682f15e79337a239a78d5b9c12d43/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=813b9e7e207682f15e79337a239a78d5b9c12d43", "patch": "@@ -539,7 +539,7 @@ cpp_interpret_integer (cpp_reader *pfile, const cpp_token *token,\n \t       && !num_positive (result, precision))\n \t{\n \t  /* This is for constants within the range of uintmax_t but\n-\t     not that or intmax_t.  For such decimal constants, a\n+\t     not that of intmax_t.  For such decimal constants, a\n \t     diagnostic is required for C99 as the selected type must\n \t     be signed and not having a type is a constraint violation\n \t     (DR#298, TC3), so this must be a pedwarn.  For C90,"}]}