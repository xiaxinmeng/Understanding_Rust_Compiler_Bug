{"sha": "bd07e167b0782b004cd270ed586f245621b1dce0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwN2UxNjdiMDc4MmIwMDRjZDI3MGVkNTg2ZjI0NTYyMWIxZGNlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-12T18:08:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-12T18:08:45Z"}, "message": "re PR c++/67104 (Constant expression factory function initializes std::array with static storage duration strangely)\n\n\tPR c++/67104\n\t* constexpr.c (cxx_eval_array_reference): Fix typo.\n\nFrom-SVN: r226833", "tree": {"sha": "fd28591ea72ae43f0e97d222238df6d578c92bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd28591ea72ae43f0e97d222238df6d578c92bdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd07e167b0782b004cd270ed586f245621b1dce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd07e167b0782b004cd270ed586f245621b1dce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd07e167b0782b004cd270ed586f245621b1dce0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd07e167b0782b004cd270ed586f245621b1dce0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e8008ce0140a5369d4884e2edb1f03cbedf34072", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd07e167b0782b004cd270ed586f245621b1dce0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd07e167b0782b004cd270ed586f245621b1dce0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bd07e167b0782b004cd270ed586f245621b1dce0", "patch": "@@ -1,5 +1,8 @@\n 2015-08-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67104\n+\t* constexpr.c (cxx_eval_array_reference): Fix typo.\n+\n \tPR c++/67104\n \t* constexpr.c (cxx_eval_array_reference): Handle sparse\n \tCONSTRUCTORs."}, {"sha": "6048f0625934bba295d6a882a1d70cc1be01f6d6", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd07e167b0782b004cd270ed586f245621b1dce0/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd07e167b0782b004cd270ed586f245621b1dce0/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=bd07e167b0782b004cd270ed586f245621b1dce0", "patch": "@@ -1709,7 +1709,7 @@ cxx_eval_array_reference (const constexpr_ctx *ctx, tree t,\n       found = false;\n       vec<constructor_elt, va_gc> *v = CONSTRUCTOR_ELTS (ary);\n       constructor_elt *e;\n-      for (unsigned ix = 0; vec_safe_iterate (v, ix, &e); ++i)\n+      for (unsigned ix = 0; vec_safe_iterate (v, ix, &e); ++ix)\n \t{\n \t  if (TREE_CODE (e->index) == RANGE_EXPR)\n \t    {"}]}