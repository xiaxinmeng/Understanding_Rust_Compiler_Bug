{"sha": "7671789c9cccdfc8e6daef2a96f615a567b59980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY3MTc4OWM5Y2NjZGZjOGU2ZGFlZjJhOTZmNjE1YTU2N2I1OTk4MA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-11-12T11:19:10Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-11-12T11:19:10Z"}, "message": "c99-const-expr-2.c (foo): Avoid extra warning on 64-bit systems.\n\n\t* gcc.dg/c99-const-expr-2.c (foo): Avoid extra warning on 64-bit\n\tsystems.\n\nCo-Authored-By: Andrew Pinski <pinskia@physics.uc.edu>\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r73490", "tree": {"sha": "45abbef285c1b023b58b90652e9aa4331b66158e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45abbef285c1b023b58b90652e9aa4331b66158e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7671789c9cccdfc8e6daef2a96f615a567b59980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7671789c9cccdfc8e6daef2a96f615a567b59980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7671789c9cccdfc8e6daef2a96f615a567b59980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7671789c9cccdfc8e6daef2a96f615a567b59980/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f95bd8e287fd839147c6fe2df6ac87cc9a19bc7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95bd8e287fd839147c6fe2df6ac87cc9a19bc7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95bd8e287fd839147c6fe2df6ac87cc9a19bc7e"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "565839337179e6dd540e71638374e0fbb540bbd5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7671789c9cccdfc8e6daef2a96f615a567b59980/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7671789c9cccdfc8e6daef2a96f615a567b59980/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7671789c9cccdfc8e6daef2a96f615a567b59980", "patch": "@@ -5,6 +5,7 @@\n \n \t* gcc.dg/c90-const-expr-2.c (foo): Avoid extra warning on 64-bit\n \tsystems.\n+\t* gcc.dg/c99-const-expr-2.c (foo): Likewise.\n \n \t* gcc.dg/20030926-1.c: Make it work on x86_64 systems.\n \t* gcc.dg/i386-pentium4-not-mull.c: Likewise."}, {"sha": "1a457e51a7d7f99ad1c539ccf4cadafe6dafdc0d", "filename": "gcc/testsuite/gcc.dg/c99-const-expr-2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7671789c9cccdfc8e6daef2a96f615a567b59980/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7671789c9cccdfc8e6daef2a96f615a567b59980/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c?ref=7671789c9cccdfc8e6daef2a96f615a567b59980", "patch": "@@ -14,6 +14,12 @@ int *a;\n int b;\n long *c;\n \n+#ifdef _LP64\n+#define ZERO 0L\n+#else\n+#define ZERO 0\n+#endif\n+\n /* Assertion that n is a null pointer constant: so the conditional expression\n    has type 'int *' instead of 'void *'.\n */\n@@ -30,7 +36,7 @@ foo (void)\n   ASSERT_NPC ((void *)0);\n   ASSERT_NOT_NPC ((void *)(void *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   ASSERT_NOT_NPC ((void *)(char *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n-  ASSERT_NOT_NPC ((void *)(0, 0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" } */\n+  ASSERT_NOT_NPC ((void *)(0, ZERO)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" } */\n   ASSERT_NOT_NPC ((void *)(&\"Foobar\"[0] - &\"Foobar\"[0])); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   /* This last one is a null pointer constant in C99 only.  */\n   ASSERT_NPC ((void *)(1 ? 0 : (0, 0)));"}]}