{"sha": "6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzYmFkN2Q5ODUwYWZhOGMzMDEzNjNjMGJmZGU2OTMxOWNlNWNjNA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-10-09T01:54:50Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-10-09T01:54:50Z"}, "message": "re GNATS libgcj/341 (Throwable.printStackTrace() isn't working)\n\n2000-10-09  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* include/jvm.h: Enable __builtin_expect().\n\n\t* name-finder.cc (lookup): Don't trust dladdr() if the address is from\n\tthe main program. Fix for PR libgcj/341.\n\nFrom-SVN: r36794", "tree": {"sha": "d7144dd40c3f307f440da59fb3df6a0ad1614338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7144dd40c3f307f440da59fb3df6a0ad1614338"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/comments", "author": null, "committer": null, "parents": [{"sha": "79b425c6d37e8384a8827019b0538abd0df5e84d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79b425c6d37e8384a8827019b0538abd0df5e84d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79b425c6d37e8384a8827019b0538abd0df5e84d"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "0486f6b319525a4e666920bb37feb4b29aad9b66", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "patch": "@@ -1,3 +1,10 @@\n+2000-10-09  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* include/jvm.h: Enable __builtin_expect().\n+\t\n+        * name-finder.cc (lookup): Don't trust dladdr() if the address is from \n+        the main program. Fix for PR libgcj/341.\n+\n 2000-10-07  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/util/Properties.java: Merged with Classpath version."}, {"sha": "006f1d9adc4d5c329bdb0e3fb618b40f34e8e343", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "patch": "@@ -11,9 +11,6 @@ details.  */\n #ifndef __JAVA_JVM_H__\n #define __JAVA_JVM_H__\n \n-// FIXME: __builtin_expect doesn't work yet.\n-#define __builtin_expect(A,B) (A)\n-\n #include <gcj/javaprims.h>\n \n #include <java-assert.h>"}, {"sha": "a29f5bd233cbf27984bbbbba77f47e3e22e8cd25", "filename": "libjava/name-finder.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/libjava%2Fname-finder.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3bad7d9850afa8c301363c0bfde69319ce5cc4/libjava%2Fname-finder.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fname-finder.cc?ref=6a3bad7d9850afa8c301363c0bfde69319ce5cc4", "patch": "@@ -136,6 +136,7 @@ _Jv_name_finder::toHex (void *p)\n bool\n _Jv_name_finder::lookup (void *p)\n {\n+  extern char **_Jv_argv;\n   toHex (p);\n       \n #if defined (HAVE_DLFCN_H) && defined (HAVE_DLADDR)\n@@ -146,7 +147,10 @@ _Jv_name_finder::lookup (void *p)\n       {\n \tstrncpy (file_name, dl_info.dli_fname, sizeof file_name);\n \tstrncpy (method_name, dl_info.dli_sname, sizeof method_name);\n-\treturn true;\n+       \n+       /* Don't trust dladdr() if the address is from the main program. */\n+       if (strcmp (file_name, _Jv_argv[0]) != 0)\n+         return true;\n       }\n   }\n #endif"}]}