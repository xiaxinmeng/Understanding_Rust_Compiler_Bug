{"sha": "e613205cefe50e429bafba2bc4cb71126b1f36df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYxMzIwNWNlZmU1MGU0MjliYWZiYTJiYzRjYjcxMTI2YjFmMzZkZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-11-30T14:50:43Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-11-30T14:50:43Z"}, "message": "libiberty: avoid reading past end of buffer in strndup/xstrndup (PR c/78498)\n\ngcc/ChangeLog:\n\tPR c/78498\n\t* selftest.c (selftest::assert_strndup_eq): New function.\n\t(selftest::test_strndup): New function.\n\t(selftest::test_libiberty): New function.\n\t(selftest::selftest_c_tests): Call test_libiberty.\n\ngcc/testsuite/ChangeLog:\n\tPR c/78498\n\t* gcc.dg/format/pr78494.c: New test case.\n\nlibiberty/ChangeLog:\n\tPR c/78498\n\t* strndup.c (strlen): Delete decl.\n\t(strnlen): Add decl.\n\t(strndup): Call strnlen rather than strlen.\n\t* xstrndup.c (xstrndup): Likewise.\n\nFrom-SVN: r243030", "tree": {"sha": "f30b1f41724d3288f8bdba58298d4d1aecd8960d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f30b1f41724d3288f8bdba58298d4d1aecd8960d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e613205cefe50e429bafba2bc4cb71126b1f36df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e613205cefe50e429bafba2bc4cb71126b1f36df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e613205cefe50e429bafba2bc4cb71126b1f36df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e613205cefe50e429bafba2bc4cb71126b1f36df/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6383ae7a73164277026cf815315e39f281e6aca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6383ae7a73164277026cf815315e39f281e6aca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6383ae7a73164277026cf815315e39f281e6aca"}], "stats": {"total": 93, "additions": 84, "deletions": 9}, "files": [{"sha": "378ffa484e17ed4c69d29ed421978f4afb4fc81a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -1,3 +1,11 @@\n+2016-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/78498\n+\t* selftest.c (selftest::assert_strndup_eq): New function.\n+\t(selftest::test_strndup): New function.\n+\t(selftest::test_libiberty): New function.\n+\t(selftest::selftest_c_tests): Call test_libiberty.\n+\n 2016-11-30  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/78610"}, {"sha": "6df73c24084ab1ee11bdc4888d6c75a539add4a6", "filename": "gcc/selftest.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2Fselftest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2Fselftest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.c?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -198,6 +198,53 @@ read_file (const location &loc, const char *path)\n   return result;\n }\n \n+/* Selftests for libiberty.  */\n+\n+/* Verify that both strndup and xstrndup generate EXPECTED\n+   when called on SRC and N.  */\n+\n+static void\n+assert_strndup_eq (const char *expected, const char *src, size_t n)\n+{\n+  char *buf = strndup (src, n);\n+  if (buf)\n+    ASSERT_STREQ (expected, buf);\n+  free (buf);\n+\n+  buf = xstrndup (src, n);\n+  ASSERT_STREQ (expected, buf);\n+  free (buf);\n+}\n+\n+/* Verify that strndup and xstrndup work as expected.  */\n+\n+static void\n+test_strndup ()\n+{\n+  assert_strndup_eq (\"\", \"test\", 0);\n+  assert_strndup_eq (\"t\", \"test\", 1);\n+  assert_strndup_eq (\"te\", \"test\", 2);\n+  assert_strndup_eq (\"tes\", \"test\", 3);\n+  assert_strndup_eq (\"test\", \"test\", 4);\n+  assert_strndup_eq (\"test\", \"test\", 5);\n+\n+  /* Test on an string without zero termination.  */\n+  const char src[4] = {'t', 'e', 's', 't'};\n+  assert_strndup_eq (\"\", src, 0);\n+  assert_strndup_eq (\"t\", src, 1);\n+  assert_strndup_eq (\"te\", src, 2);\n+  assert_strndup_eq (\"tes\", src, 3);\n+  assert_strndup_eq (\"test\", src, 4);\n+}\n+\n+/* Run selftests for libiberty.  */\n+\n+static void\n+test_libiberty ()\n+{\n+  test_strndup ();\n+}\n+\n /* Selftests for the selftest system itself.  */\n \n /* Sanity-check the ASSERT_ macros with various passing cases.  */\n@@ -245,6 +292,7 @@ test_read_file ()\n void\n selftest_c_tests ()\n {\n+  test_libiberty ();\n   test_assertions ();\n   test_named_temp_file ();\n   test_read_file ();"}, {"sha": "d6166b9edde498a0298a852b7c9351bb2ee18fb2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -1,3 +1,8 @@\n+2016-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/78498\n+\t* gcc.dg/format/pr78494.c: New test case.\n+\n 2016-11-30  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/debug/dwarf2/ref-1.C: Don't XFAIL scan-assembler-not on AIX."}, {"sha": "4b53a68c2c04e53031ee146c7e66da3da17a0a98", "filename": "gcc/testsuite/gcc.dg/format/pr78494.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr78494.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr78494.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr78494.c?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -Wextra -fdiagnostics-show-caret\" } */\n+\n+void f (void)\n+{\n+  __builtin_printf (\"%i\", \"\"); /* { dg-warning \"expects argument of type\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   __builtin_printf (\"%i\", \"\");\n+                      ~^   ~~\n+                      %s\n+   { dg-end-multiline-output \"\" } */\n+}"}, {"sha": "f0959c99f5cdc3afab526b6c7d12567f7c741328", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -1,3 +1,11 @@\n+2016-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/78498\n+\t* strndup.c (strlen): Delete decl.\n+\t(strnlen): Add decl.\n+\t(strndup): Call strnlen rather than strlen.\n+\t* xstrndup.c (xstrndup): Likewise.\n+\n 2016-11-29  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-demangle.c (d_print_comp_inner): Fix parameter indentation."}, {"sha": "4556b9627467f584670272bb9ebd073cd943afb0", "filename": "libiberty/strndup.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/libiberty%2Fstrndup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/libiberty%2Fstrndup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrndup.c?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -33,18 +33,15 @@ memory was available.  The result is always NUL terminated.\n #include \"ansidecl.h\"\n #include <stddef.h>\n \n-extern size_t\tstrlen (const char*);\n+extern size_t\tstrnlen (const char *s, size_t maxlen);\n extern PTR\tmalloc (size_t);\n extern PTR\tmemcpy (PTR, const PTR, size_t);\n \n char *\n strndup (const char *s, size_t n)\n {\n   char *result;\n-  size_t len = strlen (s);\n-\n-  if (n < len)\n-    len = n;\n+  size_t len = strnlen (s, n);\n \n   result = (char *) malloc (len + 1);\n   if (!result)"}, {"sha": "c3d2d833902eac606548ac6e64821da74411841e", "filename": "libiberty/xstrndup.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e613205cefe50e429bafba2bc4cb71126b1f36df/libiberty%2Fxstrndup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e613205cefe50e429bafba2bc4cb71126b1f36df/libiberty%2Fxstrndup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxstrndup.c?ref=e613205cefe50e429bafba2bc4cb71126b1f36df", "patch": "@@ -48,10 +48,7 @@ char *\n xstrndup (const char *s, size_t n)\n {\n   char *result;\n-  size_t len = strlen (s);\n-\n-  if (n < len)\n-    len = n;\n+  size_t len = strnlen (s, n);\n \n   result = XNEWVEC (char, len + 1);\n "}]}