{"sha": "63055635797e98d9cc67e53c3de44bae2f4c9939", "node_id": "C_kwDOANBUbNoAKDYzMDU1NjM1Nzk3ZTk4ZDljYzY3ZTUzYzNkZTQ0YmFlMmY0Yzk5Mzk", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-09-06T15:59:59Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-26T09:02:30Z"}, "message": "ada: Improve accessibility check generation\n\nImprove accessibility check generation by more precisely identifying cases in\nwhich an Original_Node call is needed.\n\nInstead of grabbing the Original_Node of a prefix in all cases (since this\ncan cause issues where unanalyzed instance names get referenced) we only\nobtain the original node when said prefix comes as a result of expanding\nfunction calls.\n\ngcc/ada/\n\n\t* sem_util.adb\n\t(Accessibility_Level): Modify indexed and selected components case\n\tby reducing the scope where Original_Node gets used.", "tree": {"sha": "2654e515ace9165363ccf9093e7266fa3fff14f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2654e515ace9165363ccf9093e7266fa3fff14f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63055635797e98d9cc67e53c3de44bae2f4c9939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63055635797e98d9cc67e53c3de44bae2f4c9939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63055635797e98d9cc67e53c3de44bae2f4c9939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63055635797e98d9cc67e53c3de44bae2f4c9939/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9677984d7b230f4fbf22e5cd1f14ca4c976ab1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9677984d7b230f4fbf22e5cd1f14ca4c976ab1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9677984d7b230f4fbf22e5cd1f14ca4c976ab1ec"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "c43a008ae5d6d98f4aef5986b550a34feec97153", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63055635797e98d9cc67e53c3de44bae2f4c9939/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63055635797e98d9cc67e53c3de44bae2f4c9939/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=63055635797e98d9cc67e53c3de44bae2f4c9939", "patch": "@@ -531,7 +531,7 @@ package body Sem_Util is\n \n       --  Local variables\n \n-      E   : Entity_Id := Original_Node (Expr);\n+      E   : Node_Id := Original_Node (Expr);\n       Pre : Node_Id;\n \n    --  Start of processing for Accessibility_Level\n@@ -777,8 +777,18 @@ package body Sem_Util is\n \n          --  We don't handle function calls in prefix notation correctly ???\n \n-         when N_Indexed_Component | N_Selected_Component =>\n-            Pre := Original_Node (Prefix (E));\n+         when N_Indexed_Component | N_Selected_Component | N_Slice =>\n+            Pre := Prefix (E);\n+\n+            --  Fetch the original node when the prefix comes from the result\n+            --  of expanding a function call since we want to find the level\n+            --  of the original source call.\n+\n+            if not Comes_From_Source (Pre)\n+              and then Nkind (Original_Node (Pre)) = N_Function_Call\n+            then\n+               Pre := Original_Node (Pre);\n+            end if;\n \n             --  When E is an indexed component or selected component and\n             --  the current Expr is a function call, we know that we are"}]}