{"sha": "0ed757cc950778b4714e8735612c11c157047e59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkNzU3Y2M5NTA3NzhiNDcxNGU4NzM1NjEyYzExYzE1NzA0N2U1OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-21T20:06:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-21T20:06:07Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r547", "tree": {"sha": "9f5dcc19410deab7d7fe5d9d68c9b49a88782bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f5dcc19410deab7d7fe5d9d68c9b49a88782bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ed757cc950778b4714e8735612c11c157047e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed757cc950778b4714e8735612c11c157047e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed757cc950778b4714e8735612c11c157047e59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed757cc950778b4714e8735612c11c157047e59/comments", "author": null, "committer": null, "parents": [{"sha": "afa36a4d013d601b90278ebb1de44b3b32c3ea83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa36a4d013d601b90278ebb1de44b3b32c3ea83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa36a4d013d601b90278ebb1de44b3b32c3ea83"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "b0efe4fe5ebd0445dc3bfdd6355c50f6c1f373e5", "filename": "gcc/config/ns32k/ns32k.md", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757cc950778b4714e8735612c11c157047e59/gcc%2Fconfig%2Fns32k%2Fns32k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757cc950778b4714e8735612c11c157047e59/gcc%2Fconfig%2Fns32k%2Fns32k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.md?ref=0ed757cc950778b4714e8735612c11c157047e59", "patch": "@@ -6,7 +6,7 @@\n ;;   I.e., one cannot say \"cmpd _p,@_x\"\n ;; Implement unsigned multiplication??\n \n-;;- Machine descrption for GNU compiler\n+;;- Machine description for GNU compiler\n ;;- ns32000 Version\n ;;   Copyright (C) 1988 Free Software Foundation, Inc.\n ;;   Contributed by Michael Tiemann (tiemann@mcc.com)\n@@ -242,7 +242,12 @@\n \treturn \\\"movf %1,tos\\;movd tos,%0\\\";\n       return \\\"movf %1,%0\\\";\n     }\n-#if 0\n+#if 0 /* Someone suggested this for the Sequent.  Is it needed?  */\n+  else if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+    return \\\"movf %1,%0\\\";\n+#endif\n+/* There was a #if 0 around this, but that was erroneous\n+   for anything bug GAS syntax -- rms.  */\n #ifndef GAS_SYNTAX\n   /* GAS understands floating constants in ordinary movd instructions\n      but other assemblers might object.  */\n@@ -257,7 +262,6 @@\n       operands[1] = gen_rtx (CONST_INT, VOIDmode, convrt.i[0]);\n       return \\\"movd %1,%0\\\";\n     }\n-#endif\n #endif\n   else return \\\"movd %1,%0\\\";\n }\")\n@@ -2213,6 +2217,7 @@\n     {\n       rtx temp = XEXP (operands[1], 0);\n       if (CONSTANT_ADDRESS_P (temp))\n+\t{\n #ifdef GAS_SYNTAX\n \t  operands[1] = temp;\n \t  return \\\"bsr %1\\\";"}]}