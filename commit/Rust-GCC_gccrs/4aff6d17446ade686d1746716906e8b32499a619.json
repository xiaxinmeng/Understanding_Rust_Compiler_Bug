{"sha": "4aff6d17446ade686d1746716906e8b32499a619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFmZjZkMTc0NDZhZGU2ODZkMTc0NjcxNjkwNmU4YjMyNDk5YTYxOQ==", "commit": {"author": {"name": "Giuliano Belinassi", "email": "giuliano.belinassi@usp.br", "date": "2018-11-29T15:32:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-11-29T15:32:30Z"}, "message": "match.pd (sinh (atanh (x))): New simplification rules.\n\n\t* match.pd (sinh (atanh (x))): New simplification rules.\n\t(cosh (atanh (x))): Likewise.\n\n\t* gcc.dg/sinhatanh-1.c: New test.\n\t* gcc.dg/sinhatanh-2.c: New test.\n\t* gcc.dg/sinhatanh-3.c: New test.\n\nFrom-SVN: r266625", "tree": {"sha": "90b4a14dfc9641a8fca3101ecac4e40abd6d708f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90b4a14dfc9641a8fca3101ecac4e40abd6d708f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4aff6d17446ade686d1746716906e8b32499a619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aff6d17446ade686d1746716906e8b32499a619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aff6d17446ade686d1746716906e8b32499a619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aff6d17446ade686d1746716906e8b32499a619/comments", "author": null, "committer": null, "parents": [{"sha": "355c62ce02d7d1a5fb7d28c829ee918df3983ad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355c62ce02d7d1a5fb7d28c829ee918df3983ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355c62ce02d7d1a5fb7d28c829ee918df3983ad5"}], "stats": {"total": 222, "additions": 222, "deletions": 0}, "files": [{"sha": "7a98670c60fd361f199fad7473a9906dcd15c08c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aff6d17446ade686d1746716906e8b32499a619/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aff6d17446ade686d1746716906e8b32499a619/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4aff6d17446ade686d1746716906e8b32499a619", "patch": "@@ -1,3 +1,8 @@\n+2018-11-29  Giuliano Belinassi  <giuliano.belinassi@usp.br>\n+\n+\t* match.pd (sinh (atanh (x))): New simplification rules.\n+\t(cosh (atanh (x))): Likewise.\n+\n 2018-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/54700"}, {"sha": "698d27fe7777ef36a2b7b973548c0a1b0ebecea9", "filename": "gcc/match.pd", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=4aff6d17446ade686d1746716906e8b32499a619", "patch": "@@ -4370,6 +4370,25 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       (rdiv { t_one; } (sqrts (plus (mult @0 @0) { t_one; })))\n       (copysigns { t_zero; } @0))))))\n \n+ (if (!flag_errno_math)\n+  /* Simplify sinh(atanh(x)) -> x / sqrt((1 - x)*(1 + x)). */\n+  (for sinhs (SINH)\n+       atanhs (ATANH)\n+       sqrts (SQRT)\n+   (simplify\n+    (sinhs (atanhs:s @0))\n+    (with { tree t_one = build_one_cst (type); }\n+    (rdiv @0 (sqrts (mult (minus { t_one; } @0) (plus { t_one; } @0)))))))\n+\n+  /* Simplify cosh(atanh(x)) -> 1 / sqrt((1 - x)*(1 + x)) */\n+  (for coshs (COSH)\n+       atanhs (ATANH)\n+       sqrts (SQRT)\n+   (simplify\n+    (coshs (atanhs:s @0))\n+    (with { tree t_one = build_one_cst (type); }\n+    (rdiv { t_one; } (sqrts (mult (minus { t_one; } @0) (plus { t_one; } @0))))))))\n+\n /* cabs(x+0i) or cabs(0+xi) -> abs(x).  */\n (simplify\n  (CABS (complex:C @0 real_zerop@1))"}, {"sha": "a1fb6bdd7ec5049f22e5b442a294e0358395205f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4aff6d17446ade686d1746716906e8b32499a619", "patch": "@@ -1,3 +1,9 @@\n+2018-11-29  Giuliano Belinassi  <giuliano.belinassi@usp.br>\n+\n+\t* gcc.dg/sinhatanh-1.c: New test.\n+\t* gcc.dg/sinhatanh-2.c: New test.\n+\t* gcc.dg/sinhatanh-3.c: New test.\n+\n 2018-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/54700"}, {"sha": "a76e6833101a07d097d96e73b2e777df96dc8783", "filename": "gcc/testsuite/gcc.dg/sinhatanh-1.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-1.c?ref=4aff6d17446ade686d1746716906e8b32499a619", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -fdump-tree-optimized\" } */\n+\n+extern float sinhf (float);\n+extern float coshf (float);\n+extern float atanhf (float);\n+extern float sqrtf (float);\n+extern double sinh (double);\n+extern double cosh (double);\n+extern double atanh (double);\n+extern double sqrt (double);\n+extern long double sinhl (long double);\n+extern long double coshl (long double);\n+extern long double atanhl (long double);\n+extern long double sqrtl (long double);\n+\n+double __attribute__ ((noinline))\n+sinhatanh_ (double x)\n+{\n+    return sinh (atanh (x));\n+}\n+\n+double __attribute__ ((noinline))\n+coshatanh_ (double x)\n+{\n+    return cosh (atanh (x));\n+}\n+\n+float __attribute__ ((noinline))\n+sinhatanhf_(float x)\n+{\n+    return sinhf (atanhf (x));\n+}\n+\n+float __attribute__ ((noinline))\n+coshatanhf_(float x)\n+{\n+    return coshf (atanhf (x));\n+}\n+\n+long double __attribute__ ((noinline))\n+sinhatanhl_ (long double x)\n+{\n+    return sinhl (atanhl (x));\n+}\n+\n+long double __attribute__ ((noinline))\n+coshatanhl_ (long double x)\n+{\n+    return coshl (atanhl (x));\n+}\n+\n+/* There must be no calls to sinh, cosh, or atanh */\n+/* {dg-final { scan-tree-dump-not \"sinh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"cosh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"atanh \" \"optimized\" }} */\n+/* {dg-final { scan-tree-dump-not \"sinfh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"cosfh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"atanfh \" \"optimized\" }} */\n+/* {dg-final { scan-tree-dump-not \"sinlh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"coslh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"atanlh \" \"optimized\" }} */"}, {"sha": "40a9b8b44438bab558f2a61bb93fe0273e37b0c1", "filename": "gcc/testsuite/gcc.dg/sinhatanh-2.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-2.c?ref=4aff6d17446ade686d1746716906e8b32499a619", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -fdump-tree-optimized\" } */\n+\n+extern float sinhf (float);\n+extern float coshf (float);\n+extern float atanhf (float);\n+extern float sqrtf (float);\n+extern double sinh (double);\n+extern double cosh (double);\n+extern double atanh (double);\n+extern double sqrt (double);\n+extern long double sinhl (long double);\n+extern long double coshl (long double);\n+extern long double atanhl (long double);\n+extern long double sqrtl (long double);\n+\n+float __attribute__ ((noinline))\n+coshatanhf_(float x)\n+{\n+    float atg = atanhf(x);\n+    return coshf(atg) + atg;\n+}\n+\n+double __attribute__ ((noinline))\n+cosatan_(double x)\n+{\n+    double atg = atanh(x);\n+    return cosh(atg) + atg;\n+}\n+\n+long double __attribute__ ((noinline))\n+cosatanl_(long double x)\n+{\n+    long double atg = atanhl(x);\n+    return coshl(atg) + atg;\n+}\n+\n+float __attribute__ ((noinline))\n+sinatanf_(float x)\n+{\n+    float atg = atanhf(x);\n+    return sinhf(atg) + atg;\n+}\n+\n+double __attribute__ ((noinline))\n+sinatan_(double x)\n+{\n+    double atg = atanh(x);\n+    return sinh(atg) + atg;\n+}\n+\n+long double __attribute__ ((noinline))\n+sinatanl_(long double x)\n+{\n+    long double atg = atanhl(x);\n+    return sinhl(atg) + atg;\n+}\n+\n+/* There should be calls to sinh, cosh and atanh */\n+/* { dg-final { scan-tree-dump \"cosh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"sinh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"atanh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"coshf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"sinhf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"atanhf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"coshl \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"sinhl \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"atanhl \" \"optimized\" } } */"}, {"sha": "32e2de5a04330d44802af5d6b5a8b7cd6b004741", "filename": "gcc/testsuite/gcc.dg/sinhatanh-3.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aff6d17446ade686d1746716906e8b32499a619/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsinhatanh-3.c?ref=4aff6d17446ade686d1746716906e8b32499a619", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -fmath-errno -fdump-tree-optimized\" } */\n+\n+extern float sinhf (float);\n+extern float coshf (float);\n+extern float atanhf (float);\n+extern float sqrtf (float);\n+extern double sinh (double);\n+extern double cosh (double);\n+extern double atanh (double);\n+extern double sqrt (double);\n+extern long double sinhl (long double);\n+extern long double coshl (long double);\n+extern long double atanhl (long double);\n+extern long double sqrtl (long double);\n+\n+double __attribute__ ((noinline))\n+sinhatanh_ (double x)\n+{\n+    return sinh (atanh (x));\n+}\n+\n+double __attribute__ ((noinline))\n+coshatanh_ (double x)\n+{\n+    return cosh (atanh (x));\n+}\n+\n+float __attribute__ ((noinline))\n+sinhatanhf_(float x)\n+{\n+    return sinhf (atanhf (x));\n+}\n+\n+float __attribute__ ((noinline))\n+coshatanhf_(float x)\n+{\n+    return coshf (atanhf (x));\n+}\n+\n+long double __attribute__ ((noinline))\n+sinhatanhl_ (long double x)\n+{\n+    return sinhl (atanhl (x));\n+}\n+\n+long double __attribute__ ((noinline))\n+coshatanhl_ (long double x)\n+{\n+    return coshl (atanhl (x));\n+}\n+\n+/* There should be calls to sinh, cosh and atanh */\n+/* { dg-final { scan-tree-dump \"cosh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"sinh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"atanh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"coshf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"sinhf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"atanhf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"coshl \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"sinhl \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"atanhl \" \"optimized\" } } */"}]}