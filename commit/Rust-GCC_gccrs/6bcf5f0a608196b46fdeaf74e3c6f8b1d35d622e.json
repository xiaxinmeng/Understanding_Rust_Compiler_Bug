{"sha": "6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJjZjVmMGE2MDgxOTZiNDZmZGVhZjc0ZTNjNmY4YjFkMzVkNjIyZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-24T21:13:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-24T21:13:28Z"}, "message": "(call_operand): New function.\n\n(output_epilog): Don't set SYMBOL_REF_FLAG of current function.\n\nFrom-SVN: r7966", "tree": {"sha": "08efc1bf7db7d2bf7ec2876af83dfd005fb9fb1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08efc1bf7db7d2bf7ec2876af83dfd005fb9fb1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e/comments", "author": null, "committer": null, "parents": [{"sha": "ac030a7b0c7e45a1214731a0fb0a60e3a312167a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac030a7b0c7e45a1214731a0fb0a60e3a312167a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac030a7b0c7e45a1214731a0fb0a60e3a312167a"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "ee3b5ec8d15542ce69cd66a28c44e5800e0439aa", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "patch": "@@ -333,6 +333,20 @@ current_file_function_operand (op, mode)\n \t      || op == XEXP (DECL_RTL (current_function_decl), 0)));\n }\n \n+/* Return 1 if OP is a valid operand for the MEM of a CALL insn.  */\n+\n+int\n+call_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  if (mode != Pmode)\n+    return 0;\n+\n+  return (GET_CODE (op) == SYMBOL_REF\n+\t  || (GET_CODE (op) == REG && REGNO (op) == 27));\n+}\n+\n /* Return 1 if OP is a valid Alpha comparison operator.  Here we know which\n    comparisons are valid in which insn.  */\n \n@@ -1521,9 +1535,6 @@ output_epilog (file, size)\n   assemble_name (file, alpha_function_name);\n   fprintf (file, \"\\n\");\n   inside_function = FALSE;\n-\n-  /* Show that we know this function if it is called again.  */\n-  SYMBOL_REF_FLAG (XEXP (DECL_RTL (current_function_decl), 0)) = 1;\n }\n \f\n /* Debugging support.  */"}]}