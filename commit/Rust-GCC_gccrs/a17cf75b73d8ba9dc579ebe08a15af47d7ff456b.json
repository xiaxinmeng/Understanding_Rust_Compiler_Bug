{"sha": "a17cf75b73d8ba9dc579ebe08a15af47d7ff456b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3Y2Y3NWI3M2Q4YmE5ZGM1NzllYmUwOGExNWFmNDdkN2ZmNDU2Yg==", "commit": {"author": {"name": "Raif Naffah", "email": "raif@fl.net.au", "date": "2002-12-19T06:59:46Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-12-19T06:59:46Z"}, "message": "BigInteger.java (euclidInv): Make sure quot and rem are in canonical form after divide().\n\n2002-12-18  Raif Naffah  <raif@fl.net.au>\n\n\t* java/math/BigInteger.java (euclidInv): Make sure quot and rem are in\n\tcanonical form after divide().\n\t(modInverse): Likewise.\n\nFrom-SVN: r60292", "tree": {"sha": "b20d44b018e021f20e342a2d3bc893edfb37e03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b20d44b018e021f20e342a2d3bc893edfb37e03c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b/comments", "author": null, "committer": null, "parents": [{"sha": "71d082af2f352ab8c65c6668ecef830fdc2547f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d082af2f352ab8c65c6668ecef830fdc2547f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d082af2f352ab8c65c6668ecef830fdc2547f2"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "1340fc0180b1eacc267fc5c1df37e13c6c8f0c13", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a17cf75b73d8ba9dc579ebe08a15af47d7ff456b", "patch": "@@ -1,3 +1,9 @@\n+2002-12-18  Raif Naffah  <raif@fl.net.au>\n+\n+\t* java/math/BigInteger.java (euclidInv): Make sure quot and rem are in\n+\tcanonical form after divide().\n+\t(modInverse): Likewise.\n+\n 2002-12-13  Casey Marshall  <rsdio@metastatic.org>\n \t    Mark Wielaard  <mark@klomp.org>\n "}, {"sha": "ac21eccc51858a2175081b6bed62b810866f1a63", "filename": "libjava/java/math/BigInteger.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b/libjava%2Fjava%2Fmath%2FBigInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17cf75b73d8ba9dc579ebe08a15af47d7ff456b/libjava%2Fjava%2Fmath%2FBigInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigInteger.java?ref=a17cf75b73d8ba9dc579ebe08a15af47d7ff456b", "patch": "@@ -1113,6 +1113,9 @@ else if (b.isOne())\n \tBigInteger rem = new BigInteger();\n \tBigInteger quot = new BigInteger();\n \tdivide(a, b, quot, rem, FLOOR);\n+        // quot and rem may not be in canonical form. ensure\n+        rem.canonicalize();\n+        quot.canonicalize();\n         xy = euclidInv(b, rem, quot);\n       }\n \n@@ -1192,6 +1195,9 @@ else if (isOne())\n \tBigInteger rem = new BigInteger();\n \tBigInteger quot = new BigInteger();\n \tdivide(x, y, quot, rem, FLOOR);\n+        // quot and rem may not be in canonical form. ensure\n+        rem.canonicalize();\n+        quot.canonicalize();\n \tresult = euclidInv(y, rem, quot)[swapped ? 0 : 1];\n \n \t// Result can't be negative, so make it positive by adding the"}]}