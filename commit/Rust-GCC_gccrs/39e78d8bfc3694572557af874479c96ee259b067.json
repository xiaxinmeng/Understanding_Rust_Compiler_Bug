{"sha": "39e78d8bfc3694572557af874479c96ee259b067", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllNzhkOGJmYzM2OTQ1NzI1NTdhZjg3NDQ3OWM5NmVlMjU5YjA2Nw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-09-06T09:03:31Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-09-06T09:03:31Z"}, "message": "re PR c++/3986 (ICE in build_rtti_vtbl_entries)\n\ncp:\n\tPR c++/3986\n\t* class.c (force_canonical_binfo_r): Check & move an indirect\n\tprimary base first.\n\t(force_canonical_binfo): Check that it's not already\n\tcanonical.\n\t(mark_primary_virtual_base): Remove BINFO parameter.\n\t(mark_primary_bases): Adjust, set BINFO_LOST_PRIMARY_P here.\ntestsuite:\n\tPR c++/3986\n\t* g++.dg/abi/vbase1.C: New test.\n\nFrom-SVN: r45435", "tree": {"sha": "df62c41b750800eafdffc224e0cddd50bb212ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df62c41b750800eafdffc224e0cddd50bb212ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39e78d8bfc3694572557af874479c96ee259b067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e78d8bfc3694572557af874479c96ee259b067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e78d8bfc3694572557af874479c96ee259b067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e78d8bfc3694572557af874479c96ee259b067/comments", "author": null, "committer": null, "parents": [{"sha": "6d0a3f67bb68552229f14f90dd42254de5d17016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0a3f67bb68552229f14f90dd42254de5d17016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0a3f67bb68552229f14f90dd42254de5d17016"}], "stats": {"total": 111, "additions": 100, "deletions": 11}, "files": [{"sha": "9562779ee1961683e5b2e9e2f63fdaec0b0f8c71", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=39e78d8bfc3694572557af874479c96ee259b067", "patch": "@@ -1,3 +1,13 @@\n+2001-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/3986\n+\t* class.c (force_canonical_binfo_r): Check & move an indirect\n+\tprimary base first.\n+\t(force_canonical_binfo): Check that it's not already\n+\tcanonical.\n+\t(mark_primary_virtual_base): Remove BINFO parameter.\n+\t(mark_primary_bases): Adjust, set BINFO_LOST_PRIMARY_P here.\n+\n 2001-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tRemove TYPE_NONCOPIED_PARTS."}, {"sha": "78659c7f1ea66d786a4ed3170ee4e89527f61b22", "filename": "gcc/cp/class.c", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=39e78d8bfc3694572557af874479c96ee259b067", "patch": "@@ -1437,7 +1437,8 @@ force_canonical_binfo_r (to, from, type, mappings)\n      tree mappings;\n {\n   int i, n_baseclasses = BINFO_N_BASETYPES (from);\n-  \n+\n+  my_friendly_assert (to != from, 20010905);\n   BINFO_INDIRECT_PRIMARY_P (to)\n           = BINFO_INDIRECT_PRIMARY_P (from);\n   BINFO_INDIRECT_PRIMARY_P (from) = 0;\n@@ -1461,11 +1462,22 @@ force_canonical_binfo_r (to, from, type, mappings)\n   my_friendly_assert (same_type_p (BINFO_TYPE (to), BINFO_TYPE (from)),\n \t\t      20010104);\n   mappings = tree_cons (from, to, mappings);\n+\n+  if (CLASSTYPE_HAS_PRIMARY_BASE_P (BINFO_TYPE (from))\n+      && TREE_VIA_VIRTUAL (CLASSTYPE_PRIMARY_BINFO (BINFO_TYPE (from))))\n+    {\n+      tree from_primary = get_primary_binfo (from);\n+      \n+      if (BINFO_PRIMARY_BASE_OF (from_primary) == from)\n+\tforce_canonical_binfo (get_primary_binfo (to), from_primary,\n+\t\t\t       type, mappings);\n+    }\n+  \n   for (i = 0; i != n_baseclasses; i++)\n     {\n       tree from_binfo = BINFO_BASETYPE (from, i);\n       tree to_binfo = BINFO_BASETYPE (to, i);\n-      \n+\n       if (TREE_VIA_VIRTUAL (from_binfo))\n         {\n \t  if (BINFO_PRIMARY_P (from_binfo) &&\n@@ -1498,17 +1510,19 @@ force_canonical_binfo (to, from, type, mappings)\n {\n   tree assoc = purpose_member (BINFO_TYPE (to),\n \t\t               CLASSTYPE_VBASECLASSES (type));\n-  TREE_VALUE (assoc) = to;\n-  force_canonical_binfo_r (to, from, type, mappings);\n+  if (TREE_VALUE (assoc) != to)\n+    {\n+      TREE_VALUE (assoc) = to;\n+      force_canonical_binfo_r (to, from, type, mappings);\n+    }\n }\n \n-/* Make BASE_BINFO the primary virtual base of BINFO within the hierarchy\n-   dominated by TYPE. Returns BASE_BINFO, if it can be made so, NULL\n+/* Make BASE_BINFO the a primary virtual base within the hierarchy\n+   dominated by TYPE. Returns BASE_BINFO, if it is not already one, NULL\n    otherwise (because something else has already made it primary).  */\n \n static tree\n-mark_primary_virtual_base (binfo, base_binfo, type)\n-     tree binfo;\n+mark_primary_virtual_base (base_binfo, type)\n      tree base_binfo;\n      tree type;\n {\n@@ -1519,8 +1533,6 @@ mark_primary_virtual_base (binfo, base_binfo, type)\n       /* It's already allocated in the hierarchy. BINFO won't have a\n          primary base in this hierachy, even though the complete object\n          BINFO is for, would do.  */\n-      BINFO_LOST_PRIMARY_P (binfo) = 1;\n-      \n       return NULL_TREE;\n     }\n      \n@@ -1608,10 +1620,12 @@ mark_primary_bases (type)\n       base_binfo = get_primary_binfo (binfo);\n \n       if (TREE_VIA_VIRTUAL (base_binfo))\n-        base_binfo = mark_primary_virtual_base (binfo, base_binfo, type);\n+        base_binfo = mark_primary_virtual_base (base_binfo, type);\n \n       if (base_binfo)\n         BINFO_PRIMARY_BASE_OF (base_binfo) = binfo;\n+      else\n+\tBINFO_LOST_PRIMARY_P (binfo) = 1;\n       \n       BINFO_UNSHARED_MARKED (binfo) = 1;\n     }"}, {"sha": "8592eebe38017cd4249073fa953aa27950332b1c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39e78d8bfc3694572557af874479c96ee259b067", "patch": "@@ -1,3 +1,8 @@\n+2001-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/3986\n+\t* g++.dg/abi/vbase1.C: New test.\n+\n 2001-09-05  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc.dg/method-2.m: New."}, {"sha": "39d8b81026b350f26f8a1344f2fabca4cd3008e1", "filename": "gcc/testsuite/g++.dg/abi/vbase1.C", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e78d8bfc3694572557af874479c96ee259b067/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase1.C?ref=39e78d8bfc3694572557af874479c96ee259b067", "patch": "@@ -0,0 +1,60 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 5 Sept 2001 <nathan@codesourcery.com>\n+\n+// Bug 3986. Another indirect primary base problem.\n+\n+struct Consts\n+{\n+};\n+\n+struct MathLib :\n+  virtual Consts\n+{\n+};\n+\n+struct Parallel :\n+  virtual Consts\n+{\n+};\n+\n+struct Particles :\n+  virtual MathLib,\n+  virtual Parallel\n+{\n+};\n+\n+struct Ring :\n+  virtual Particles\n+{\n+};\n+\n+struct Injection :\n+  virtual Particles,\n+  virtual Ring\n+{\n+};\n+\n+struct LSpaceCharge :\n+  virtual Ring,\n+  virtual Injection\n+{\n+};\n+\n+struct Bump :\n+  virtual Consts\n+{\n+};\n+\n+struct Output :\n+  virtual Injection,\n+  virtual Bump\n+{\n+};\n+\n+struct Plots :\n+  virtual LSpaceCharge,\n+  virtual Output\n+{\n+};"}]}