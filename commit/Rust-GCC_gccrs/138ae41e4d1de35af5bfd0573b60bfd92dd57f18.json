{"sha": "138ae41e4d1de35af5bfd0573b60bfd92dd57f18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4YWU0MWU0ZDFkZTM1YWY1YmZkMDU3M2I2MGJmZDkyZGQ1N2YxOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2007-02-13T17:29:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2007-02-13T17:29:35Z"}, "message": "alpha.c (alpha_stdarg_optimize_hook): Strip handled_component_p before looking for the indirect_ref.\n\n        * config/alpha/alpha.c (alpha_stdarg_optimize_hook): Strip\n        handled_component_p before looking for the indirect_ref.\n\nFrom-SVN: r121886", "tree": {"sha": "9c09e112e85590173d6a411e13d13c54b5a34ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c09e112e85590173d6a411e13d13c54b5a34ef9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/138ae41e4d1de35af5bfd0573b60bfd92dd57f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138ae41e4d1de35af5bfd0573b60bfd92dd57f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/138ae41e4d1de35af5bfd0573b60bfd92dd57f18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138ae41e4d1de35af5bfd0573b60bfd92dd57f18/comments", "author": null, "committer": null, "parents": [{"sha": "ea20d970169c0a0641838675b462d581215f706c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea20d970169c0a0641838675b462d581215f706c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea20d970169c0a0641838675b462d581215f706c"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "e1afa7183497f1a6cd32a64a3f56faa7a4139236", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138ae41e4d1de35af5bfd0573b60bfd92dd57f18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138ae41e4d1de35af5bfd0573b60bfd92dd57f18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=138ae41e4d1de35af5bfd0573b60bfd92dd57f18", "patch": "@@ -1,3 +1,8 @@\n+2007-02-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (alpha_stdarg_optimize_hook): Strip\n+\thandled_component_p before looking for the indirect_ref.\n+\n 2007-02-13  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.md (bswapsi_1): Rename from bswapsi2,"}, {"sha": "b98085716c3f44481cec207a58ddd8718740c7f8", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138ae41e4d1de35af5bfd0573b60bfd92dd57f18/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138ae41e4d1de35af5bfd0573b60bfd92dd57f18/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=138ae41e4d1de35af5bfd0573b60bfd92dd57f18", "patch": "@@ -5860,18 +5860,24 @@ va_list_skip_additions (tree lhs)\n \t      ? ap.__offset + cst - 48 : ap.__offset + cst) + cst2).\n    If the former, indicate that GPR registers are needed,\n    if the latter, indicate that FPR registers are needed.\n+\n+   Also look for LHS = (*ptr).field, where ptr is one of the forms\n+   listed above.\n+\n    On alpha, cfun->va_list_gpr_size is used as size of the needed\n-   regs and cfun->va_list_fpr_size is a bitmask, bit 0 set if\n-   GPR registers are needed and bit 1 set if FPR registers are needed.\n-   Return true if va_list references should not be scanned for the current\n-   statement.  */\n+   regs and cfun->va_list_fpr_size is a bitmask, bit 0 set if GPR\n+   registers are needed and bit 1 set if FPR registers are needed.\n+   Return true if va_list references should not be scanned for the\n+   current statement.  */\n \n static bool\n alpha_stdarg_optimize_hook (struct stdarg_info *si, tree lhs, tree rhs)\n {\n   tree base, offset, arg1, arg2;\n   int offset_arg = 1;\n \n+  while (handled_component_p (rhs))\n+    rhs = TREE_OPERAND (rhs, 0);\n   if (TREE_CODE (rhs) != INDIRECT_REF\n       || TREE_CODE (TREE_OPERAND (rhs, 0)) != SSA_NAME)\n     return false;"}]}