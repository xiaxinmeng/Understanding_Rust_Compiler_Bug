{"sha": "53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNkMmZiNGY1ZjllMjc0NTRjMzljZmQwZGQxZDA2NDcwYjEwYjc5Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-26T19:45:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-26T19:45:07Z"}, "message": "(fold): Do A op C1 ? A : C2 opt only for INTEGER_TYPEs.\n\nFrom-SVN: r1965", "tree": {"sha": "1c6e24cfd1a55e0cfb96e58728e59aca08567b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c6e24cfd1a55e0cfb96e58728e59aca08567b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c/comments", "author": null, "committer": null, "parents": [{"sha": "f95361c8d027d09c645acba94a585c04a2486287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95361c8d027d09c645acba94a585c04a2486287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95361c8d027d09c645acba94a585c04a2486287"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "069c503cb23e5e31dc605f70f38098969b2324bc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=53d2fb4f5f9e27454c39cfd0dd1d06470b10b79c", "patch": "@@ -4110,9 +4110,11 @@ fold (expr)\n \t  /* If this is A op C1 ? A : C2 with C1 and C2 constant integers,\n \t     we might still be able to simplify this.  For example,\n \t     if C1 is one less or one more than C2, this might have started\n-\t     out as a MIN or MAX and been transformed by this function.  */\n+\t     out as a MIN or MAX and been transformed by this function.\n+\t     Only good for INTEGER_TYPE, because we need TYPE_MAX_VALUE.  */\n \n-\t  if (TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n+\t  if (TREE_CODE (type) == INTEGER_TYPE\n+\t      && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n \t      && TREE_CODE (arg2) == INTEGER_CST)\n \t    switch (comp_code)\n \t      {"}]}