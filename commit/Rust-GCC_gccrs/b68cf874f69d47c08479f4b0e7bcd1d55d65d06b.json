{"sha": "b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4Y2Y4NzRmNjlkNDdjMDg0NzlmNGIwZTdiY2QxZDU1ZDY1ZDA2Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:42:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:42:26Z"}, "message": "[multiple changes]\n\n2015-05-26  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_aux.adb, sem_aux.ads, exp_ch6.adb, sprint.adb:\n\tMinor reformatting.\n\n2015-05-26  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gnat1drv.adb, targparm.adb, targparm.ads, restrict.adb: Minor\n\treformatting and typo fixes in comments.\n\n2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb (Swap_Private_Dependets): Set visibility of\n\tthe two views of a private dependent in two separate steps,\n\tto ensure proper visibility in parent units analyzed for inlining.\n\nFrom-SVN: r223682", "tree": {"sha": "1f417d3b2712348bd8f2b06a57f72d67dd16d7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f417d3b2712348bd8f2b06a57f72d67dd16d7d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/comments", "author": null, "committer": null, "parents": [{"sha": "ff1bedacc81800f47632971f6474e4e2f9cfb86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1bedacc81800f47632971f6474e4e2f9cfb86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff1bedacc81800f47632971f6474e4e2f9cfb86f"}], "stats": {"total": 77, "additions": 49, "deletions": 28}, "files": [{"sha": "0cd2ea7104ff37de0b6409f11c6a0da054dff9aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -1,3 +1,19 @@\n+2015-05-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_aux.adb, sem_aux.ads, exp_ch6.adb, sprint.adb:\n+\tMinor reformatting.\n+\n+2015-05-26  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat1drv.adb, targparm.adb, targparm.ads, restrict.adb: Minor\n+\treformatting and typo fixes in comments.\n+\n+2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch7.adb (Swap_Private_Dependets): Set visibility of\n+\tthe two views of a private dependent in two separate steps,\n+\tto ensure proper visibility in parent units analyzed for inlining.\n+\n 2015-05-26  Yannick Moy  <moy@adacore.com>\n \n \t* sem_aux.adb, sem_aux.ads (Get_Low_Bound): Use Type_Low_Bound."}, {"sha": "3645c76272b97e47cc7b921fdf8309d68276168c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -8856,7 +8856,9 @@ package body Exp_Ch6 is\n       Pass_Caller_Acc : Boolean := False;\n       Res_Decl        : Node_Id;\n       Result_Subt     : Entity_Id;\n-      Definite        : Boolean; -- True for definite function result subtype\n+\n+      Definite : Boolean;\n+      --  True for definite function result subtype\n \n    begin\n       --  Step past qualification or unchecked conversion (the latter can occur"}, {"sha": "662065ed0eef473837f2d2992b6f3a262a5e20c0", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -955,8 +955,8 @@ begin\n             end if;\n \n             --  Call to get target parameters. Note that the actual interface\n-            --  routines in Tbuild here. They can't be in this procedure\n-            --  because of accessibility issues.\n+            --  routines are in Tbuild. They can't be in this procedure because\n+            --  of accessibility issues.\n \n             Targparm.Get_Target_Parameters\n               (System_Text  => Source_Text  (S),"}, {"sha": "8c0f90260d1b1c5944c41d13fb0830006f75bab8", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -110,7 +110,7 @@ package body Restrict is\n    No_Use_Of_Pragma : array (Pragma_Id) of Source_Ptr :=\n                         (others => No_Location);\n    --  Source location of pragma No_Use_Of_Pragma for given pragma, a value\n-   --  of Sysstem_Location indicates occurrence in system.ads.\n+   --  of System_Location indicates occurrence in system.ads.\n \n    No_Use_Of_Pragma_Warning : array (Pragma_Id) of Boolean :=\n                                 (others => False);\n@@ -1571,9 +1571,9 @@ package body Restrict is\n \n    procedure Set_Restriction_No_Specification_Of_Aspect (A_Id : Aspect_Id) is\n    begin\n+      No_Specification_Of_Aspect_Set := True;\n       No_Specification_Of_Aspects (A_Id) := System_Location;\n       No_Specification_Of_Aspect_Warning (A_Id) := False;\n-      No_Specification_Of_Aspect_Set := True;\n    end Set_Restriction_No_Specification_Of_Aspect;\n \n    -----------------------------------------\n@@ -1624,8 +1624,8 @@ package body Restrict is\n    procedure Set_Restriction_No_Use_Of_Pragma (A_Id : Pragma_Id) is\n    begin\n       No_Use_Of_Pragma_Set := True;\n-      No_Use_Of_Pragma_Warning (A_Id) := False;\n       No_Use_Of_Pragma (A_Id) := System_Location;\n+      No_Use_Of_Pragma_Warning (A_Id) := False;\n    end Set_Restriction_No_Use_Of_Pragma;\n \n    --------------------------------"}, {"sha": "ef88959cc6a937699cd5c6f8239790053696b763", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -985,8 +985,7 @@ package body Sem_Aux is\n       --  if any discriminant has a default, they all do.\n \n       elsif Has_Discriminants (T) then\n-         return Present\n-                  (Discriminant_Default_Value (First_Discriminant (T)));\n+         return Present (Discriminant_Default_Value (First_Discriminant (T)));\n \n       else\n          return True;"}, {"sha": "e5e814514f723b3ce95a521e355597cfc44ddcd9", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -306,6 +306,14 @@ package Sem_Aux is\n    --  Ent is any entity. Returns True if Ent is a type entity where the type\n    --  is required to be passed by reference, as defined in (RM 6.2(4-9)).\n \n+   function Is_Definite_Subtype (T : Entity_Id) return Boolean;\n+   --  T is a type entity. Returns True if T is a definite subtype.\n+   --  Indefinite subtypes are unconstrained arrays, unconstrained\n+   --  discriminated types without defaulted discriminants, class-wide types,\n+   --  and types with unknown discriminants. Definite subtypes are all others\n+   --  (elementary, constrained composites (including the case of records\n+   --  without discriminants), and types with defaulted discriminants).\n+\n    function Is_Derived_Type (Ent : Entity_Id) return Boolean;\n    --  Determines if the given entity Ent is a derived type. Result is always\n    --  false if argument is not a type.\n@@ -315,14 +323,6 @@ package Sem_Aux is\n    --  used to set the visibility of generic formals of a generic package\n    --  declared with a box or with partial parameterization.\n \n-   function Is_Definite_Subtype (T : Entity_Id) return Boolean;\n-   --  T is a type entity. Returns True if T is a definite subtype.\n-   --  Indefinite subtypes are unconstrained arrays, unconstrained\n-   --  discriminated types without defaulted discriminants, class-wide types,\n-   --  and types with unknown discriminants. Definite subtypes are all others\n-   --  (elementary, constrained composites (including the case of records\n-   --  without discriminants), and types with defaulted discriminants).\n-\n    function Is_Immutably_Limited_Type (Ent : Entity_Id) return Boolean;\n    --  Implements definition in Ada 2012 RM-7.5 (8.1/3). This differs from the\n    --  following predicate in that an untagged record with immutably limited"}, {"sha": "a46b651246b95edd77628deea20ab7e775449f95", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -4264,7 +4264,7 @@ package body Sem_Ch3 is\n            and then not Is_Constrained (T)\n            and then Has_Discriminants (T)\n            and then (Ada_Version < Ada_2005\n-                       or else not Is_Definite_Subtype (T))\n+                      or else not Is_Definite_Subtype (T))\n          then\n             Set_Actual_Subtype (Id, Build_Default_Subtype (T, N));\n          end if;"}, {"sha": "a23ffebaeb5fd5426c1e74c8a241a778a6a76c8f", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -2223,14 +2223,17 @@ package body Sem_Ch7 is\n                Replace_Elmt (Priv_Elmt, Full_View (Priv));\n \n                --  Ensure that both views of the dependent private subtype are\n-               --  immediately visible if within some open scope.\n+               --  immediately visible if within some open scope. Check full\n+               --  view before exchanging views.\n \n                if In_Open_Scopes (Scope (Full_View (Priv))) then\n                   Set_Is_Immediately_Visible (Priv);\n-                  Set_Is_Immediately_Visible (Full_View (Priv));\n                end if;\n \n                Exchange_Declarations (Priv);\n+               Set_Is_Immediately_Visible\n+                 (Priv, In_Open_Scopes (Scope (Priv)));\n+\n                Set_Is_Potentially_Use_Visible\n                  (Priv, Is_Potentially_Use_Visible (Node (Priv_Elmt)));\n "}, {"sha": "b1def4b722ada3607eb5d57ddcc253a2cec8ec95", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -4230,8 +4230,9 @@ package body Sprint is\n                      Sprint_Node (X);\n                      Set_Sloc (X, Old_Sloc);\n \n-                     --  Array subtypes.\n-                     --  Preserve Sloc of index subtypes, as above.\n+                     --  Array subtypes\n+\n+                     --  Preserve Sloc of index subtypes, as above\n \n                   when E_Array_Subtype =>\n                      Write_Header (False);"}, {"sha": "645193e24593fe04dec70684dadba41b54530c8a", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -220,7 +220,7 @@ package body Targparm is\n \n       procedure Collect_Name;\n       --  Scan a name starting at System_Text (P), and put Name in Name_Buffer,\n-      --  with Name_Len being length, folded to lower case. On return P points\n+      --  with Name_Len being length, folded to lower case. On return, P points\n       --  just past the last character (which should be a right paren).\n \n       ------------------"}, {"sha": "a1b766153ee1c4299819c344c1c7aaa3d9748cee", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68cf874f69d47c08479f4b0e7bcd1d55d65d06b/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=b68cf874f69d47c08479f4b0e7bcd1d55d65d06b", "patch": "@@ -621,12 +621,12 @@ package Targparm is\n \n    type Set_NSA_Type is access procedure (Asp : Name_Id; OK : out Boolean);\n    --  Parameter type for Get_Target_Parameters that records a Restriction\n-   --  No_Specificaztion_Of_Aspect. Asp is the pragma name. OK is set True\n+   --  No_Specification_Of_Aspect. Asp is the aspect name. OK is set True\n    --  if this is an OK aspect name, and False if it is not an aspect name.\n \n    type Set_NUA_Type is access procedure (Attr : Name_Id; OK : out Boolean);\n    --  Parameter type for Get_Target_Parameters that records a Restriction\n-   --  No_Use_Of_Attribute. Prag is the attribute name. OK is set True if\n+   --  No_Use_Of_Attribute. Attr is the attribute name. OK is set True if\n    --  this is an OK attribute name, and False if it is not an attribute name.\n \n    type Set_NUP_Type is access procedure (Prag : Name_Id; OK : out Boolean);\n@@ -646,13 +646,13 @@ package Targparm is\n       Set_NUP      : Set_NUP_Type := null);\n    --  Called at the start of execution to obtain target parameters from the\n    --  source of package System. The parameters provide the source text to be\n-   --  scanned (in System_Text (Source_First .. Source_Last)). if the three\n+   --  scanned (in System_Text (Source_First .. Source_Last)). If the three\n    --  subprograms Make_Id, Make_SC, and Set_NOD are left at their default\n    --  value of null, Get_Target_Parameters will ignore pragma Restrictions\n-   --  No_Dependence lines, otherwise it will use these three subprograms to\n-   --  record them. Similarly if Set_NUP is left at its default value of null,\n+   --  (No_Dependence) lines; otherwise it will use these three subprograms to\n+   --  record them. Similarly, if Set_NUP is left at its default value of null,\n    --  then any occurrences of pragma Restrictions (No_Use_Of_Pragma => XXX)\n-   --  will be ignored, otherwise it will use this procedure to record the\n+   --  will be ignored; otherwise it will use this procedure to record the\n    --  pragma. Similarly for the NSA and NUA cases.\n \n    procedure Get_Target_Parameters"}]}