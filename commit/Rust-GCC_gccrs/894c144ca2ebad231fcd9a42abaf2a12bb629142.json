{"sha": "894c144ca2ebad231fcd9a42abaf2a12bb629142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0YzE0NGNhMmViYWQyMzFmY2Q5YTQyYWJhZjJhMTJiYjYyOTE0Mg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-01-15T22:36:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-01-15T22:36:42Z"}, "message": "i386: Rewrite indirect_branch_operand logic\n\n\t* config/i386/predicates.md (indirect_branch_operand): Rewrite\n\tix86_indirect_branch_register logic.\n\nFrom-SVN: r256715", "tree": {"sha": "3ac1db3ff41609945cc926604b0722e43ec7bf00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ac1db3ff41609945cc926604b0722e43ec7bf00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/894c144ca2ebad231fcd9a42abaf2a12bb629142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894c144ca2ebad231fcd9a42abaf2a12bb629142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/894c144ca2ebad231fcd9a42abaf2a12bb629142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894c144ca2ebad231fcd9a42abaf2a12bb629142/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a5a0497ba984382955babd44a4d63e0d91a3243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a0497ba984382955babd44a4d63e0d91a3243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5a0497ba984382955babd44a4d63e0d91a3243"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3e92ee9aaa50cc79924980dd5902c9610b9364e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894c144ca2ebad231fcd9a42abaf2a12bb629142/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894c144ca2ebad231fcd9a42abaf2a12bb629142/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=894c144ca2ebad231fcd9a42abaf2a12bb629142", "patch": "@@ -1,3 +1,8 @@\n+2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/predicates.md (indirect_branch_operand): Rewrite\n+\tix86_indirect_branch_register logic.\n+\n 2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/constraints.md (Bs): Update"}, {"sha": "2f2393b9e3ecb13c4b1961911eaf7262e9e4a75e", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894c144ca2ebad231fcd9a42abaf2a12bb629142/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894c144ca2ebad231fcd9a42abaf2a12bb629142/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=894c144ca2ebad231fcd9a42abaf2a12bb629142", "patch": "@@ -665,8 +665,8 @@\n ;; Test for a valid operand for indirect branch.\n (define_predicate \"indirect_branch_operand\"\n   (ior (match_operand 0 \"register_operand\")\n-       (and (not (match_test \"TARGET_X32\n-\t\t\t      || ix86_indirect_branch_register\"))\n+       (and (not (match_test \"ix86_indirect_branch_register\"))\n+\t    (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"memory_operand\"))))\n \n ;; Return true if OP is a memory operands that can be used in sibcalls."}]}