{"sha": "5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI0ZmRiMjA2MGUwZDE4MjBlYmFiZmNmN2VkN2UzNTBlZTUyZWYxNw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2006-02-15T09:15:56Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-02-15T09:15:56Z"}, "message": "cfg.c (dump_flow_info): Get dump flags as an additional parameter.\n\n2006-02-15  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* cfg.c (dump_flow_info): Get dump flags as an additional parameter.\n\t(debug_flow_info): Pass it.\n\t* alias.c (rest_of_handle_cfg): Adjust calls to dump_flow_info.\n\t* bb-reorder.c (reorder_basic_blocks): Likewise.\n\t* cfgcleanup.c (rest_of_handle_jump2): Likewise.\n\t* cse.c (rest_of_handle_cse, rest_of_handle_cse2): Likewise.\n\t* flow.c (life_analysis, recompute_reg_usage): Likewise.\n\t* gcse.c (gcse_main, bypass_jumps): Likewise.\n\t* ifcvt.c (rest_of_handle_if_conversion): Likewise.\n\t* local-alloc.c (rest_of_handle_local_alloc): Likewise.\n\t* loop-init.c (rtl_loop_init, rtl_loop_done): Likewise.\n\t* profile.c (compute_branch_probabilities, branch_prob): Likewise.\n\t* rtl.h (dump_flow_info): Adjust prototype.\n\t* tracer.c (rest_of_handle_tracer, tracer): Likewise.\n\t* var-tracking.c (variable_tracking_main): Likewise.\n\t* passes.c (execute_todo): Obey TDF_BLOCKS for RTL.\n\t* tree-dump.c (enable_rtl_dump_file): Enable the details and blocks\n\toptions.\n\nFrom-SVN: r111020", "tree": {"sha": "1615cb62d40221497e159fa5d08ee5fb0cbdb56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1615cb62d40221497e159fa5d08ee5fb0cbdb56f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc4632d404ad7c46f125efbca56f9753a6704b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4632d404ad7c46f125efbca56f9753a6704b11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4632d404ad7c46f125efbca56f9753a6704b11"}], "stats": {"total": 83, "additions": 50, "deletions": 33}, "files": [{"sha": "a5ed7445b3a8712bc3e941a780fbe51d6cc8565c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -1,3 +1,24 @@\n+2006-02-15  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* cfg.c (dump_flow_info): Get dump flags as an additional parameter.\n+\t(debug_flow_info): Pass it.\n+\t* alias.c (rest_of_handle_cfg): Adjust calls to dump_flow_info.\n+\t* bb-reorder.c (reorder_basic_blocks): Likewise.\n+\t* cfgcleanup.c (rest_of_handle_jump2): Likewise.\n+\t* cse.c (rest_of_handle_cse, rest_of_handle_cse2): Likewise.\n+\t* flow.c (life_analysis, recompute_reg_usage): Likewise.\n+\t* gcse.c (gcse_main, bypass_jumps): Likewise.\n+\t* ifcvt.c (rest_of_handle_if_conversion): Likewise.\n+\t* local-alloc.c (rest_of_handle_local_alloc): Likewise.\n+\t* loop-init.c (rtl_loop_init, rtl_loop_done): Likewise.\n+\t* profile.c (compute_branch_probabilities, branch_prob): Likewise.\n+\t* rtl.h (dump_flow_info): Adjust prototype.\n+\t* tracer.c (rest_of_handle_tracer, tracer): Likewise.\n+\t* var-tracking.c (variable_tracking_main): Likewise.\n+\t* passes.c (execute_todo): Obey TDF_BLOCKS for RTL.\n+\t* tree-dump.c (enable_rtl_dump_file): Enable the details and blocks\n+\toptions.\n+\n 2006-02-15  Marcin Dalecki <martin@dalecki.de>\n \n \t* tree-ssa-dom.c (dom_thread_across_edge): fix tag expression"}, {"sha": "cb5f5dbfcd14fe6c4e2c062963c21d84a87d1fb9", "filename": "gcc/alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -2710,7 +2710,7 @@ static void\n rest_of_handle_cfg (void)\n {\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n   if (optimize)\n     cleanup_cfg (CLEANUP_EXPENSIVE\n                  | (flag_thread_jumps ? CLEANUP_THREADING : 0));"}, {"sha": "640907081e75c2298099b8e9ee9d299749b79020", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -1930,7 +1930,7 @@ reorder_basic_blocks (unsigned int flags)\n   FREE (bbd);\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   cfg_layout_finalize ();\n   if (flag_reorder_blocks_and_partition)"}, {"sha": "1ed6f1f0742605a4bcb2ad99116f03bcf1f98d14", "filename": "gcc/cfg.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -528,17 +528,13 @@ dump_bb_info (basic_block bb, bool header, bool footer, int flags,\n }\n \n void\n-dump_flow_info (FILE *file)\n+dump_flow_info (FILE *file, int flags)\n {\n   basic_block bb;\n \n-  if (file == dump_file\n-      && (dump_flags & TDF_SLIM)\n-      && !(dump_flags & TDF_DETAILS))\n-    return;\n-\n   /* There are no pseudo registers after reload.  Don't dump them.  */\n-  if (reg_n_info && !reload_completed)\n+  if (reg_n_info && !reload_completed\n+      && (flags & TDF_DETAILS) != 0)\n     {\n       unsigned int i, max = max_reg_num ();\n       fprintf (file, \"%d registers.\\n\", max);\n@@ -589,7 +585,7 @@ dump_flow_info (FILE *file)\n   fprintf (file, \"\\n%d basic blocks, %d edges.\\n\", n_basic_blocks, n_edges);\n   FOR_EACH_BB (bb)\n     {\n-      dump_bb_info (bb, true, true, TDF_DETAILS, \"\", file);\n+      dump_bb_info (bb, true, true, flags, \"\", file);\n       check_bb_profile (bb, file);\n     }\n \n@@ -599,7 +595,7 @@ dump_flow_info (FILE *file)\n void\n debug_flow_info (void)\n {\n-  dump_flow_info (stderr);\n+  dump_flow_info (stderr, TDF_DETAILS);\n }\n \n void"}, {"sha": "c2c262c6b6480d7a5a55a363019a127ed5a803f5", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -2340,7 +2340,7 @@ rest_of_handle_jump2 (void)\n   delete_trivially_dead_insns (get_insns (), max_reg_num ());\n   reg_scan (get_insns (), max_reg_num ());\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n   cleanup_cfg ((optimize ? CLEANUP_EXPENSIVE : 0) | CLEANUP_PRE_LOOP\n                | (flag_thread_jumps ? CLEANUP_THREADING : 0));\n "}, {"sha": "7d6f46b0a3563ade022c2956357a5fbd54c56895", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -7844,7 +7844,7 @@ rest_of_handle_cse (void)\n   int tem;\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   reg_scan (get_insns (), max_reg_num ());\n \n@@ -7899,7 +7899,7 @@ rest_of_handle_cse2 (void)\n   int tem;\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   tem = cse_main (get_insns (), max_reg_num ());\n "}, {"sha": "2e78674cf3e709e6a2214d3b62453b696318727b", "filename": "gcc/flow.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -438,7 +438,7 @@ life_analysis (int flags)\n     end_alias_analysis ();\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   /* Removing dead insns should have made jumptables really dead.  */\n   delete_dead_jumptables ();\n@@ -4420,7 +4420,7 @@ recompute_reg_usage (void)\n   update_life_info (NULL, UPDATE_LIFE_LOCAL, PROP_REG_INFO | PROP_DEATH_NOTES);\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n }\n \n struct tree_opt_pass pass_recompute_reg_usage ="}, {"sha": "93c366b7dbe7696017b8f17791553a5aa762923b", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -674,7 +674,7 @@ gcse_main (rtx f ATTRIBUTE_UNUSED)\n   max_gcse_regno = max_reg_num ();\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   /* Return if there's nothing to do, or it is too expensive.  */\n   if (n_basic_blocks <= NUM_FIXED_BLOCKS + 1\n@@ -6519,7 +6519,7 @@ bypass_jumps (void)\n   max_gcse_regno = max_reg_num ();\n \n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   /* Return if there's nothing to do, or it is too expensive.  */\n   if (n_basic_blocks <= NUM_FIXED_BLOCKS + 1"}, {"sha": "5d156a6caeb69f7c0fd18b5d729794a7d314cf5a", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -3902,7 +3902,7 @@ rest_of_handle_if_conversion (void)\n   if (flag_if_conversion)\n     {\n       if (dump_file)\n-        dump_flow_info (dump_file);\n+        dump_flow_info (dump_file, dump_flags);\n       cleanup_cfg (CLEANUP_EXPENSIVE);\n       reg_scan (get_insns (), max_reg_num ());\n       if_convert (0);"}, {"sha": "d22e9e736fb47c96ffa6ba9697b214d9a8a4887d", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -2559,10 +2559,10 @@ rest_of_handle_local_alloc (void)\n       timevar_pop (TV_JUMP);\n     }\n \n-  if (dump_enabled_p (pass_local_alloc.static_pass_number))\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       timevar_push (TV_DUMP);\n-      dump_flow_info (dump_file);\n+      dump_flow_info (dump_file, dump_flags);\n       dump_local_alloc (dump_file);\n       timevar_pop (TV_DUMP);\n     }"}, {"sha": "bf13fd0948d3847b8d29316ffd89386e2031efb0", "filename": "gcc/loop-init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -168,7 +168,7 @@ static void\n rtl_loop_init (void)\n {\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   /* Initialize structures for layout changes.  */\n   cfg_layout_initialize (0);\n@@ -215,7 +215,7 @@ rtl_loop_done (void)\n   delete_trivially_dead_insns (get_insns (), max_reg_num ());\n   reg_scan (get_insns (), max_reg_num ());\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   current_loops = NULL;\n }"}, {"sha": "2845ab7c88002d4d049e80bc4b9511c9ff90b2d9", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -756,7 +756,7 @@ execute_todo (unsigned int flags)\n \t{\n \t  if (dump_flags & TDF_SLIM)\n \t    print_rtl_slim_with_bb (dump_file, get_insns (), dump_flags);\n-\t  else if (curr_properties & PROP_cfg)\n+\t  else if ((curr_properties & PROP_cfg) && (dump_flags & TDF_BLOCKS))\n \t    print_rtl_with_bb (dump_file, get_insns ());\n           else\n \t    print_rtl (dump_file, get_insns ());"}, {"sha": "d3bce07b8e9b7e44c2c7f924bcde82c279e12606", "filename": "gcc/profile.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -465,7 +465,7 @@ compute_branch_probabilities (void)\n \t}\n     }\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n \n   total_num_passes += passes;\n   if (dump_file)\n@@ -1150,7 +1150,7 @@ branch_prob (void)\n \t insert_insn_on_edge.  */\n       cleanup_cfg (profile_arc_flag ? CLEANUP_EXPENSIVE : 0);\n       if (dump_file)\n-\tdump_flow_info (dump_file);\n+\tdump_flow_info (dump_file, dump_flags);\n     }\n \n   free_edge_list (el);"}, {"sha": "6244b29bf4a5129dfcdfca35ec1d9cbfafb27a78", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -2048,7 +2048,7 @@ extern rtx move_by_pieces (rtx, rtx, unsigned HOST_WIDE_INT,\n extern void recompute_reg_usage (void);\n extern void delete_dead_jumptables (void);\n extern void print_rtl_with_bb (FILE *, rtx);\n-extern void dump_flow_info (FILE *);\n+extern void dump_flow_info (FILE *, int);\n \n /* In expmed.c */\n extern void init_expmed (void);"}, {"sha": "fc4aed7c9c7dc6d2008cd142eac54b7381b5d20b", "filename": "gcc/tracer.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -369,11 +369,11 @@ tracer (unsigned int flags)\n   cfg_layout_initialize (flags);\n   mark_dfs_back_edges ();\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n   tail_duplicate ();\n   layout_superblocks ();\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n   cfg_layout_finalize ();\n \n   /* Merge basic blocks in duplicated traces.  */\n@@ -391,7 +391,7 @@ static void\n rest_of_handle_tracer (void)\n {\n   if (dump_file)\n-    dump_flow_info (dump_file);\n+    dump_flow_info (dump_file, dump_flags);\n   tracer (0);\n   cleanup_cfg (CLEANUP_EXPENSIVE);\n   reg_scan (get_insns (), max_reg_num ());"}, {"sha": "c5663e287c8c367d077a94682f5da463c6f45e40", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -1067,7 +1067,7 @@ enable_rtl_dump_file (int letter)\n   if (letter == 'a')\n     letter = 0;\n \n-  return dump_enable_all (TDF_RTL, letter) > 0;\n+  return dump_enable_all (TDF_RTL | TDF_DETAILS | TDF_BLOCKS, letter) > 0;\n }\n \n "}, {"sha": "2d73deff45c69c8abd0d3d63d4a6ec6a2cbb536b", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=5b4fdb2060e0d1820ebabfcf7ed7e350ee52ef17", "patch": "@@ -2696,10 +2696,10 @@ variable_tracking_main (void)\n   vt_find_locations ();\n   vt_emit_notes ();\n \n-  if (dump_file)\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       dump_dataflow_sets ();\n-      dump_flow_info (dump_file);\n+      dump_flow_info (dump_file, dump_flags);\n     }\n \n   vt_finalize ();"}]}