{"sha": "14d31404053c1818044882f8682a20de1526b266", "node_id": "C_kwDOANBUbNoAKDE0ZDMxNDA0MDUzYzE4MTgwNDQ4ODJmODY4MmEyMGRlMTUyNmIyNjY", "commit": {"author": {"name": "Dan Li", "email": "ashimida@linux.alibaba.com", "date": "2021-11-01T11:04:12Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-11-01T11:04:12Z"}, "message": "aarch64: Fix redundant check in aut insn generation\n\nDuring the generation of the epilogue of aarch64(aarch64_expand_epilogue),\nthe value of crtl->calls_eh_return does not need to be checked again.\nThis value has been checked during aarch64_return_address_signing_enabled.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.c (aarch64_expand_epilogue): Remove\n\tredundant check for calls_eh_return.\n\t* config/aarch64/aarch64.md (*do_return): Likewise.\n\nSigned-off-by: Dan Li <ashimida@linux.alibaba.com>", "tree": {"sha": "75f266e546321d2d510b62f1aa8d6433613423eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75f266e546321d2d510b62f1aa8d6433613423eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14d31404053c1818044882f8682a20de1526b266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d31404053c1818044882f8682a20de1526b266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d31404053c1818044882f8682a20de1526b266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d31404053c1818044882f8682a20de1526b266/comments", "author": {"login": "ashimida123", "id": 26736862, "node_id": "MDQ6VXNlcjI2NzM2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/26736862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashimida123", "html_url": "https://github.com/ashimida123", "followers_url": "https://api.github.com/users/ashimida123/followers", "following_url": "https://api.github.com/users/ashimida123/following{/other_user}", "gists_url": "https://api.github.com/users/ashimida123/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashimida123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashimida123/subscriptions", "organizations_url": "https://api.github.com/users/ashimida123/orgs", "repos_url": "https://api.github.com/users/ashimida123/repos", "events_url": "https://api.github.com/users/ashimida123/events{/privacy}", "received_events_url": "https://api.github.com/users/ashimida123/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4851c80ce8de18896dc5c4b1b023afa8456736ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4851c80ce8de18896dc5c4b1b023afa8456736ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4851c80ce8de18896dc5c4b1b023afa8456736ba"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "8448e56443c22e296aba75e18c25446d26e8c015", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d31404053c1818044882f8682a20de1526b266/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d31404053c1818044882f8682a20de1526b266/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=14d31404053c1818044882f8682a20de1526b266", "patch": "@@ -9076,13 +9076,9 @@ aarch64_expand_epilogue (bool for_sibcall)\n \t2) The RETAA instruction is not available before ARMv8.3-A, so if we are\n \t   generating code for !TARGET_ARMV8_3 we can't use it and must\n \t   explicitly authenticate.\n-\n-\t3) On an eh_return path we make extra stack adjustments to update the\n-\t   canonical frame address to be the exception handler's CFA.  We want\n-\t   to authenticate using the CFA of the function which calls eh_return.\n     */\n   if (aarch64_return_address_signing_enabled ()\n-      && (for_sibcall || !TARGET_ARMV8_3 || crtl->calls_eh_return))\n+      && (for_sibcall || !TARGET_ARMV8_3))\n     {\n       switch (aarch64_ra_sign_key)\n \t{"}, {"sha": "65ee6159d731063dc960eff7dcb576d6f68a405d", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d31404053c1818044882f8682a20de1526b266/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d31404053c1818044882f8682a20de1526b266/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=14d31404053c1818044882f8682a20de1526b266", "patch": "@@ -879,8 +879,7 @@\n   {\n     const char *ret = NULL;\n     if (aarch64_return_address_signing_enabled ()\n-\t&& (TARGET_PAUTH)\n-\t&& !crtl->calls_eh_return)\n+\t&& (TARGET_PAUTH))\n       {\n \tif (aarch64_ra_sign_key == AARCH64_KEY_B)\n \t  ret = \"retab\";"}]}