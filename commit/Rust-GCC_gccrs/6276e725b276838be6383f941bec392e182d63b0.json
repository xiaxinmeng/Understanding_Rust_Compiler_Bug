{"sha": "6276e725b276838be6383f941bec392e182d63b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3NmU3MjViMjc2ODM4YmU2MzgzZjk0MWJlYzM5MmUxODJkNjNiMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2005-11-16T20:22:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2005-11-16T20:22:00Z"}, "message": "re PR c++/24580 (virtual base class cause exception not to be caught)\n\n        PR c++/24580\n        * method.c (locate_copy): Also use skip_artificial_parms here.\n        (synthesize_exception_spec): Use CLASS_TYPE_P rather than checking\n        for RECORD_TYPE.\n        (locate_ctor): Abort if we fail to find a default constructor.\n\nFrom-SVN: r107097", "tree": {"sha": "1881ef0d7802af8ac86d9f4c38b44d029e6eb5ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1881ef0d7802af8ac86d9f4c38b44d029e6eb5ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6276e725b276838be6383f941bec392e182d63b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6276e725b276838be6383f941bec392e182d63b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6276e725b276838be6383f941bec392e182d63b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6276e725b276838be6383f941bec392e182d63b0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f001093a6ac91b1a8fbdf56983a1b29157d05a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f001093a6ac91b1a8fbdf56983a1b29157d05a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f001093a6ac91b1a8fbdf56983a1b29157d05a95"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "378c324909b7fbfe7196149ca5cb8d5ce337af0d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6276e725b276838be6383f941bec392e182d63b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6276e725b276838be6383f941bec392e182d63b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6276e725b276838be6383f941bec392e182d63b0", "patch": "@@ -1,3 +1,11 @@\n+2005-11-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/24580\n+\t* method.c (locate_copy): Also use skip_artificial_parms here.\n+\t(synthesize_exception_spec): Use CLASS_TYPE_P rather than checking\n+\tfor RECORD_TYPE.\n+\t(locate_ctor): Abort if we fail to find a default constructor.\n+\n 2005-11-15  Mike Stump  <mrs@apple.com>\n \n \t* name-lookup.c (lookup_name_two): Add."}, {"sha": "f3c86d3178db7901b453b5ebd3e12e4d714a56b2", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6276e725b276838be6383f941bec392e182d63b0/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6276e725b276838be6383f941bec392e182d63b0/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=6276e725b276838be6383f941bec392e182d63b0", "patch": "@@ -847,7 +847,7 @@ synthesize_exception_spec (tree type, tree (*extractor) (tree, void*),\n \tcontinue;\n       while (TREE_CODE (type) == ARRAY_TYPE)\n \ttype = TREE_TYPE (type);\n-      if (TREE_CODE (type) != RECORD_TYPE)\n+      if (!CLASS_TYPE_P (type))\n \tcontinue;\n \n       fn = (*extractor) (type, client);\n@@ -894,7 +894,7 @@ locate_ctor (tree type, void *client ATTRIBUTE_UNUSED)\n       if (sufficient_parms_p (parms))\n \treturn fn;\n     }\n-  return NULL_TREE;\n+  gcc_unreachable ();\n }\n \n struct copy_data\n@@ -941,7 +941,7 @@ locate_copy (tree type, void *client_)\n       int excess;\n       int quals;\n \n-      parms = TREE_CHAIN (parms);\n+      parms = skip_artificial_parms_for (fn, parms);\n       if (!parms)\n \tcontinue;\n       src_type = non_reference (TREE_VALUE (parms));"}]}