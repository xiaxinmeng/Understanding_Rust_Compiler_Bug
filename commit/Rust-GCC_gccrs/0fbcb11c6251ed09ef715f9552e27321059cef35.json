{"sha": "0fbcb11c6251ed09ef715f9552e27321059cef35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiY2IxMWM2MjUxZWQwOWVmNzE1Zjk1NTJlMjczMjEwNTljZWYzNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2013-04-23T09:58:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-23T09:58:23Z"}, "message": "sem_aux.adb [...] (Effectively_has_Constrained_Partial_View): Rename subprogram as Object_Type_Has_Constrained_Partial_View...\n\n2013-04-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aux.adb sem_aux.ads (Effectively_has_Constrained_Partial_View):\n\tRename subprogram as Object_Type_Has_Constrained_Partial_View, better\n\tdescription of purpose.\n\t* checks.adb (Apply_Discriminant_Check): Use above renaming.\n\t* sem_ch4.adb (Analyze_Allocator): Check Has_Constrained_Partial_View\n\tof the base type, rather than using the Object_Type predicate.\n\t* sem_attr.adb (Analyze_Attribute, case 'Access): Use above renaming.\n\t* sem_util.adb (Is_Dependent_Component_Of_Mutable_Object): ditto.\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case 'Constrained): Ditto.\n\t* exp_ch4.adb (Expand_N_Allocator): Ditto.\n\nFrom-SVN: r198188", "tree": {"sha": "6a1ea022beb7e6eb04a80af7cd17a8d04eec02c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a1ea022beb7e6eb04a80af7cd17a8d04eec02c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fbcb11c6251ed09ef715f9552e27321059cef35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fbcb11c6251ed09ef715f9552e27321059cef35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fbcb11c6251ed09ef715f9552e27321059cef35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fbcb11c6251ed09ef715f9552e27321059cef35/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20a65dcba9a95dd40a8794324e833d5ff9f07544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20a65dcba9a95dd40a8794324e833d5ff9f07544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20a65dcba9a95dd40a8794324e833d5ff9f07544"}], "stats": {"total": 201, "additions": 106, "deletions": 95}, "files": [{"sha": "793b02e7fdeb2dc201933b95b65e707442d07424", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -1,3 +1,16 @@\n+2013-04-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aux.adb sem_aux.ads (Effectively_has_Constrained_Partial_View):\n+\tRename subprogram as Object_Type_Has_Constrained_Partial_View, better\n+\tdescription of purpose.\n+\t* checks.adb (Apply_Discriminant_Check): Use above renaming.\n+\t* sem_ch4.adb (Analyze_Allocator): Check Has_Constrained_Partial_View\n+\tof the base type, rather than using the Object_Type predicate.\n+\t* sem_attr.adb (Analyze_Attribute, case 'Access): Use above renaming.\n+\t* sem_util.adb (Is_Dependent_Component_Of_Mutable_Object): ditto.\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case 'Constrained): Ditto.\n+\t* exp_ch4.adb (Expand_N_Allocator): Ditto.\n+\n 2013-04-23  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_prag.adb (Expand_Pragma_Check): Check for Assert rather"}, {"sha": "964aed59fe8469394b5fb090fe4bf5a53a79b6a6", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -1479,7 +1479,7 @@ package body Checks is\n       --  partial view that is constrained.\n \n       elsif Ada_Version >= Ada_2005\n-        and then Effectively_Has_Constrained_Partial_View\n+        and then Object_Type_Has_Constrained_Partial_View\n                    (Typ  => Base_Type (T_Typ),\n                     Scop => Current_Scope)\n       then"}, {"sha": "832d182414d3874fdd325412dc3f80fb83b827f2", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -1791,7 +1791,7 @@ package body Exp_Attr is\n                          or else\n                            (Nkind (Obj) = N_Explicit_Dereference\n                               and then\n-                                not Effectively_Has_Constrained_Partial_View\n+                                not Object_Type_Has_Constrained_Partial_View\n                                       (Typ  => Base_Type (Etype (Obj)),\n                                        Scop => Current_Scope)));\n             end if;\n@@ -1915,7 +1915,7 @@ package body Exp_Attr is\n                     or else\n                      (Nkind (Pref) = N_Explicit_Dereference\n                        and then\n-                         not Effectively_Has_Constrained_Partial_View\n+                         not Object_Type_Has_Constrained_Partial_View\n                                (Typ  => Base_Type (Ptyp),\n                                 Scop => Current_Scope))\n                     or else Is_Constrained (Underlying_Type (Ptyp))"}, {"sha": "76bf939898b765d964091a92422ef1c74adecfbf", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -4673,9 +4673,8 @@ package body Exp_Ch4 is\n                                           (First_Discriminant (Typ)))\n                        and then (Ada_Version < Ada_2005\n                                   or else not\n-                                    Effectively_Has_Constrained_Partial_View\n-                                      (Typ  => Typ,\n-                                       Scop => Current_Scope))\n+                                    Object_Type_Has_Constrained_Partial_View\n+                                      (Typ, Current_Scope))\n                      then\n                         Typ := Build_Default_Subtype (Typ, N);\n                         Set_Expression (N, New_Reference_To (Typ, Loc));"}, {"sha": "f7fccfb031b7bc7b2bfc7359b2eca8ab8b746c97", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -9530,7 +9530,7 @@ package body Sem_Attr is\n                  and then\n                    (Ada_Version < Ada_2005\n                      or else\n-                       not Effectively_Has_Constrained_Partial_View\n+                       not Object_Type_Has_Constrained_Partial_View\n                              (Typ => Designated_Type (Base_Type (Typ)),\n                               Scop => Current_Scope))\n                then"}, {"sha": "23b8f592aa9e6918f111dc9eb559fec18b3a3d3d", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -151,25 +151,6 @@ package body Sem_Aux is\n       end if;\n    end Constant_Value;\n \n-   ----------------------------------------------\n-   -- Effectively_Has_Constrained_Partial_View --\n-   ----------------------------------------------\n-\n-   function Effectively_Has_Constrained_Partial_View\n-     (Typ  : Entity_Id;\n-      Scop : Entity_Id) return Boolean\n-   is\n-   begin\n-      return Has_Constrained_Partial_View (Typ)\n-        or else (In_Generic_Body (Scop)\n-                   and then Is_Generic_Type (Base_Type (Typ))\n-                   and then Is_Private_Type (Base_Type (Typ))\n-                   and then not Is_Tagged_Type (Typ)\n-                   and then not (Is_Array_Type (Typ)\n-                                   and then not Is_Constrained (Typ))\n-                   and then Has_Discriminants (Typ));\n-   end Effectively_Has_Constrained_Partial_View;\n-\n    -----------------------------\n    -- Enclosing_Dynamic_Scope --\n    -----------------------------\n@@ -630,25 +611,6 @@ package body Sem_Aux is\n       return Present (Get_Rep_Pragma (E, Nam1, Nam2, Check_Parents));\n    end Has_Rep_Pragma;\n \n-   -------------------------------\n-   -- Initialization_Suppressed --\n-   -------------------------------\n-\n-   function Initialization_Suppressed (Typ : Entity_Id) return Boolean is\n-   begin\n-      return Suppress_Initialization (Typ)\n-        or else Suppress_Initialization (Base_Type (Typ));\n-   end Initialization_Suppressed;\n-\n-   ----------------\n-   -- Initialize --\n-   ----------------\n-\n-   procedure Initialize is\n-   begin\n-      Obsolescent_Warnings.Init;\n-   end Initialize;\n-\n    ---------------------\n    -- In_Generic_Body --\n    ---------------------\n@@ -686,6 +648,25 @@ package body Sem_Aux is\n       return False;\n    end In_Generic_Body;\n \n+   -------------------------------\n+   -- Initialization_Suppressed --\n+   -------------------------------\n+\n+   function Initialization_Suppressed (Typ : Entity_Id) return Boolean is\n+   begin\n+      return Suppress_Initialization (Typ)\n+        or else Suppress_Initialization (Base_Type (Typ));\n+   end Initialization_Suppressed;\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize is\n+   begin\n+      Obsolescent_Warnings.Init;\n+   end Initialize;\n+\n    ---------------------\n    -- Is_By_Copy_Type --\n    ---------------------\n@@ -828,38 +809,6 @@ package body Sem_Aux is\n       end if;\n    end Is_Generic_Formal;\n \n-   ---------------------------\n-   -- Is_Indefinite_Subtype --\n-   ---------------------------\n-\n-   function Is_Indefinite_Subtype (Ent : Entity_Id) return Boolean is\n-      K : constant Entity_Kind := Ekind (Ent);\n-\n-   begin\n-      if Is_Constrained (Ent) then\n-         return False;\n-\n-      elsif K in Array_Kind\n-        or else K in Class_Wide_Kind\n-        or else Has_Unknown_Discriminants (Ent)\n-      then\n-         return True;\n-\n-      --  Known discriminants: indefinite if there are no default values\n-\n-      elsif K in Record_Kind\n-        or else Is_Incomplete_Or_Private_Type (Ent)\n-        or else Is_Concurrent_Type (Ent)\n-      then\n-         return (Has_Discriminants (Ent)\n-           and then\n-             No (Discriminant_Default_Value (First_Discriminant (Ent))));\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_Indefinite_Subtype;\n-\n    -------------------------------\n    -- Is_Immutably_Limited_Type --\n    -------------------------------\n@@ -959,6 +908,38 @@ package body Sem_Aux is\n       end if;\n    end Is_Immutably_Limited_Type;\n \n+   ---------------------------\n+   -- Is_Indefinite_Subtype --\n+   ---------------------------\n+\n+   function Is_Indefinite_Subtype (Ent : Entity_Id) return Boolean is\n+      K : constant Entity_Kind := Ekind (Ent);\n+\n+   begin\n+      if Is_Constrained (Ent) then\n+         return False;\n+\n+      elsif K in Array_Kind\n+        or else K in Class_Wide_Kind\n+        or else Has_Unknown_Discriminants (Ent)\n+      then\n+         return True;\n+\n+      --  Known discriminants: indefinite if there are no default values\n+\n+      elsif K in Record_Kind\n+        or else Is_Incomplete_Or_Private_Type (Ent)\n+        or else Is_Concurrent_Type (Ent)\n+      then\n+         return (Has_Discriminants (Ent)\n+           and then\n+             No (Discriminant_Default_Value (First_Discriminant (Ent))));\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Indefinite_Subtype;\n+\n    ---------------------\n    -- Is_Limited_Type --\n    ---------------------\n@@ -1147,6 +1128,25 @@ package body Sem_Aux is\n       return N;\n    end Number_Discriminants;\n \n+   ----------------------------------------------\n+   -- Object_Type_Has_Constrained_Partial_View --\n+   ----------------------------------------------\n+\n+   function Object_Type_Has_Constrained_Partial_View\n+     (Typ  : Entity_Id;\n+      Scop : Entity_Id) return Boolean\n+   is\n+   begin\n+      return Has_Constrained_Partial_View (Typ)\n+        or else (In_Generic_Body (Scop)\n+                  and then Is_Generic_Type (Base_Type (Typ))\n+                  and then Is_Private_Type (Base_Type (Typ))\n+                  and then not Is_Tagged_Type (Typ)\n+                  and then not (Is_Array_Type (Typ)\n+                                 and then not Is_Constrained (Typ))\n+                  and then Has_Discriminants (Typ));\n+   end Object_Type_Has_Constrained_Partial_View;\n+\n    ---------------\n    -- Tree_Read --\n    ---------------"}, {"sha": "e7086cc0ecc46469e0adc3c16b098b86e61af647", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -105,14 +105,6 @@ package Sem_Aux is\n    --  constants from the point of view of constant folding. Empty is also\n    --  returned for variables with no initialization expression.\n \n-   function Effectively_Has_Constrained_Partial_View\n-     (Typ  : Entity_Id;\n-      Scop : Entity_Id) return Boolean;\n-   --  Return True if Typ has attribute Has_Constrained_Partial_View set to\n-   --  True; in addition, within a generic body, return True if a subtype is\n-   --  a descendant of an untagged generic formal private or derived type, and\n-   --  the subtype is not an unconstrained array subtype (RM 3.3(23.10/3)).\n-\n    function Enclosing_Dynamic_Scope (Ent : Entity_Id) return Entity_Id;\n    --  For any entity, Ent, returns the closest dynamic scope in which the\n    --  entity is declared or Standard_Standard for library-level entities.\n@@ -259,6 +251,12 @@ package Sem_Aux is\n    function In_Generic_Body (Id : Entity_Id) return Boolean;\n    --  Determine whether entity Id appears inside a generic body\n \n+   function Initialization_Suppressed (Typ : Entity_Id) return Boolean;\n+   pragma Inline (Initialization_Suppressed);\n+   --  Returns True if initialization should be suppressed for the given type\n+   --  or subtype. This is true if Suppress_Initialization is set either for\n+   --  the subtype itself, or for the corresponding base type.\n+\n    function Is_By_Copy_Type (Ent : Entity_Id) return Boolean;\n    --  Ent is any entity. Returns True if Ent is a type entity where the type\n    --  is required to be passed by copy, as defined in (RM 6.2(3)).\n@@ -329,11 +327,14 @@ package Sem_Aux is\n    function Number_Discriminants (Typ : Entity_Id) return Pos;\n    --  Typ is a type with discriminants, yields number of discriminants in type\n \n-   function Initialization_Suppressed (Typ : Entity_Id) return Boolean;\n-   pragma Inline (Initialization_Suppressed);\n-   --  Returns True if initialization should be suppressed for the given type\n-   --  or subtype. This is true if Suppress_Initialization is set either for\n-   --  the subtype itself, or for the corresponding base type.\n+   function Object_Type_Has_Constrained_Partial_View\n+     (Typ  : Entity_Id;\n+      Scop : Entity_Id) return Boolean;\n+   --  Return True if type of object has attribute Has_Constrained_Partial_View\n+   --  set to True; in addition, within a generic body, return True if subtype\n+   --  of the object is a descendant of an untagged generic formal private or\n+   --  derived type, and the subtype is not an unconstrained array subtype\n+   --  (RM 3.3(23.10/3)).\n \n    function Ultimate_Alias (Prim : Entity_Id) return Entity_Id;\n    pragma Inline (Ultimate_Alias);"}, {"sha": "af5da0a43fa802a7931792044882c76b44b5debd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -580,9 +580,7 @@ package body Sem_Ch4 is\n                --  and the allocated object is unconstrained.\n \n                elsif Ada_Version >= Ada_2005\n-                 and then Effectively_Has_Constrained_Partial_View\n-                            (Typ  => Base_Typ,\n-                             Scop => Current_Scope)\n+                 and then Has_Constrained_Partial_View (Base_Typ)\n                then\n                   Error_Msg_N\n                     (\"constraint not allowed when type \" &"}, {"sha": "838011444478d5dbc94f9c2023c63a821a070a73", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fbcb11c6251ed09ef715f9552e27321059cef35/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0fbcb11c6251ed09ef715f9552e27321059cef35", "patch": "@@ -7980,7 +7980,7 @@ package body Sem_Util is\n                   --  designated object is known to be constrained.\n \n                   if Ekind (Prefix_Type) = E_Access_Type\n-                    and then not Effectively_Has_Constrained_Partial_View\n+                    and then not Object_Type_Has_Constrained_Partial_View\n                                    (Typ  => Designated_Type (Prefix_Type),\n                                     Scop => Current_Scope)\n                   then"}]}