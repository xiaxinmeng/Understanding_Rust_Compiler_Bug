{"sha": "23cdfcf71f295697ac4322f0a0e8128e22e834b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjZGZjZjcxZjI5NTY5N2FjNDMyMmYwYTBlODEyOGUyMmU4MzRiNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-07-02T07:36:04Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-07-02T07:36:04Z"}, "message": "mips.md (addsi3): Remove workaround for adds of -32768.\n\n\t* config/mips/mips.md (addsi3): Remove workaround for adds of -32768.\n\t(addsi3_internal, adddi3, adddi3_internal_2): Likewise.\n\t(adddi3_internal_3, addsi3_internal_2): Likewise.\n\nFrom-SVN: r68822", "tree": {"sha": "93bc1692dbf504e5a4d51596c1baa38e5e1b53da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93bc1692dbf504e5a4d51596c1baa38e5e1b53da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23cdfcf71f295697ac4322f0a0e8128e22e834b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cdfcf71f295697ac4322f0a0e8128e22e834b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cdfcf71f295697ac4322f0a0e8128e22e834b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cdfcf71f295697ac4322f0a0e8128e22e834b4/comments", "author": null, "committer": null, "parents": [{"sha": "6f2993e58b90605ec7e0e9dea61c6ad141bf2188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2993e58b90605ec7e0e9dea61c6ad141bf2188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f2993e58b90605ec7e0e9dea61c6ad141bf2188"}], "stats": {"total": 46, "additions": 10, "deletions": 36}, "files": [{"sha": "1162a586601950f44693e6ed290caa55ddd19329", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdfcf71f295697ac4322f0a0e8128e22e834b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdfcf71f295697ac4322f0a0e8128e22e834b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23cdfcf71f295697ac4322f0a0e8128e22e834b4", "patch": "@@ -1,3 +1,9 @@\n+2003-07-02  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (addsi3): Remove workaround for adds of -32768.\n+\t(addsi3_internal, adddi3, adddi3_internal_2): Likewise.\n+\t(adddi3_internal_3, addsi3_internal_2): Likewise.\n+\n 2003-07-02  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (machine_function): Add new fields:"}, {"sha": "e1cd33f7063c910aac49c6fd434da38719fa2cd2", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 4, "deletions": 36, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdfcf71f295697ac4322f0a0e8128e22e834b4/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdfcf71f295697ac4322f0a0e8128e22e834b4/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=23cdfcf71f295697ac4322f0a0e8128e22e834b4", "patch": "@@ -703,15 +703,6 @@\n   \"\"\n   \"\n {\n-  /* The mips16 assembler handles -32768 correctly, and so does gas,\n-     but some other MIPS assemblers think that -32768 needs to be\n-     loaded into a register before it can be added in.  */\n-  if (! TARGET_MIPS16\n-      && ! TARGET_GAS\n-      && GET_CODE (operands[2]) == CONST_INT\n-      && INTVAL (operands[2]) == -32768)\n-    operands[2] = force_reg (SImode, operands[2]);\n-\n   /* If a large stack adjustment was forced into a register, we may be\n      asked to generate rtx such as:\n \n@@ -738,10 +729,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n \t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")\n \t\t (match_operand:SI 2 \"arith_operand\" \"d,Q\")))]\n-  \"! TARGET_MIPS16\n-   && (TARGET_GAS\n-       || GET_CODE (operands[2]) != CONST_INT\n-       || INTVAL (operands[2]) != -32768)\"\n+  \"!TARGET_MIPS16\"\n   \"@\n     addu\\\\t%0,%z1,%2\n     addiu\\\\t%0,%z1,%2\"\n@@ -888,15 +876,6 @@\n   \"TARGET_64BIT || (!TARGET_DEBUG_G_MODE && !TARGET_MIPS16)\"\n   \"\n {\n-  /* The mips16 assembler handles -32768 correctly, and so does gas,\n-     but some other MIPS assemblers think that -32768 needs to be\n-     loaded into a register before it can be added in.  */\n-  if (! TARGET_MIPS16\n-      && ! TARGET_GAS\n-      && GET_CODE (operands[2]) == CONST_INT\n-      && INTVAL (operands[2]) == -32768)\n-    operands[2] = force_reg (DImode, operands[2]);\n-\n   /* If a large stack adjustment was forced into a register, we may be\n      asked to generate rtx such as:\n \n@@ -1010,10 +989,7 @@\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"%d,%d,%d\")\n \t\t (match_operand:DI 2 \"small_int\" \"P,J,N\")))\n    (clobber (match_operand:SI 3 \"register_operand\" \"=d,d,d\"))]\n-  \"!TARGET_64BIT && !TARGET_DEBUG_G_MODE && !TARGET_MIPS16\n-   && (TARGET_GAS\n-       || GET_CODE (operands[2]) != CONST_INT\n-       || INTVAL (operands[2]) != -32768)\"\n+  \"!TARGET_64BIT && !TARGET_DEBUG_G_MODE && !TARGET_MIPS16\"\n   \"@\n    addu\\\\t%L0,%L1,%2\\;sltu\\\\t%3,%L0,%2\\;addu\\\\t%M0,%M1,%3\n    move\\\\t%L0,%L1\\;move\\\\t%M0,%M1\n@@ -1074,11 +1050,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n \t(plus:DI (match_operand:DI 1 \"reg_or_0_operand\" \"dJ,dJ\")\n \t\t (match_operand:DI 2 \"arith_operand\" \"d,Q\")))]\n-  \"TARGET_64BIT\n-   && !TARGET_MIPS16\n-   && (TARGET_GAS\n-       || GET_CODE (operands[2]) != CONST_INT\n-       || INTVAL (operands[2]) != -32768)\"\n+  \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"@\n     daddu\\\\t%0,%z1,%2\n     daddiu\\\\t%0,%z1,%2\"\n@@ -1221,11 +1193,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n \t(sign_extend:DI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")\n \t\t\t\t (match_operand:SI 2 \"arith_operand\" \"d,Q\"))))]\n-  \"TARGET_64BIT\n-   && !TARGET_MIPS16\n-   && (TARGET_GAS\n-       || GET_CODE (operands[2]) != CONST_INT\n-       || INTVAL (operands[2]) != -32768)\"\n+  \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"@\n     addu\\\\t%0,%z1,%2\n     addiu\\\\t%0,%z1,%2\""}]}