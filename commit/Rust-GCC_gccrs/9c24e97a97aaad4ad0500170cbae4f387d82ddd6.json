{"sha": "9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMyNGU5N2E5N2FhYWQ0YWQwNTAwMTcwY2JhZTRmMzg3ZDgyZGRkNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-07T20:43:49Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-07T20:43:49Z"}, "message": "libstdc++: Fix some C++20 algorithms to work in parallel mode\n\nSome new algorithms need to use _GLIBCXX_STD_A to refer to the \"normal\"\nversion of the algorithm, to workaround the namespace dance done for\nparallel mode.\n\n\tPR libstdc++/94971 (partial)\n\t* include/bits/ranges_algo.h (ranges::__sample_fn): Qualify\n\tstd::sample using macro to work in parallel mode.\n\t(__sort_fn): Likewise for std::sort.\n\t(ranges::__nth_element_fn): Likewise for std::nth_element.\n\t* include/bits/stl_algobase.h (lexicographical_compare_three_way):\n\tLikewise for std::__min_cmp.\n\t* include/parallel/algobase.h (lexicographical_compare_three_way):\n\tAdd to namespace std::__parallel.", "tree": {"sha": "c6330aaa2600490516bd2276ffcf45a3fdf42dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6330aaa2600490516bd2276ffcf45a3fdf42dce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cbc9d8b346b932f34828a51e8822881413951b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cbc9d8b346b932f34828a51e8822881413951b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cbc9d8b346b932f34828a51e8822881413951b7"}], "stats": {"total": 62, "additions": 39, "deletions": 23}, "files": [{"sha": "3b8e6d94f875fb6edddd00500fb0ffcc8c856dd1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "patch": "@@ -1,3 +1,25 @@\n+2020-05-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94971 (partial)\n+\t* include/bits/ranges_algo.h (ranges::__sample_fn): Qualify\n+\tstd::sample using macro to work in parallel mode.\n+\t(__sort_fn): Likewise for std::sort.\n+\t(ranges::__nth_element_fn): Likewise for std::nth_element.\n+\t* include/bits/stl_algobase.h (lexicographical_compare_three_way):\n+\tLikewise for std::__min_cmp.\n+\t* include/parallel/algobase.h (lexicographical_compare_three_way):\n+\tAdd to namespace std::__parallel.\n+\n+\tPR c/92472\n+\t* include/parallel/multiway_merge.h (_GuardedIterator::operator*)\n+\t(_GuardedIterator::operator _RAIter, _UnguardedIterator::operator*)\n+\t(_UnguardedIterator::operator _RAIter): Add const qualifier.\n+\t(operator<(_GuardedIterator&, _GuardedIterator&)\n+\t(operator<=(_GuardedIterator&, _GuardedIterator&)\n+\t(operator<(_UnguardedIterator&, _UnguardedIterator&)\n+\t(operator<=(_UnguardedIterator&, _UnguardedIterator&): Change\n+\tparameters to const references.\n+\n 2020-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/abi/post/sparc64-linux-gnu/baseline_symbols.txt: Update.\n@@ -27,18 +49,6 @@\n \t* config/abi/post/sparc-solaris/sparcv9/baseline_symbols.txt:\n \tLikewise.\n \n-2020-05-07  Jonathan Wakely  <jwakely@redhat.com>\n-\n-\tPR c/92472\n-\t* include/parallel/multiway_merge.h (_GuardedIterator::operator*)\n-\t(_GuardedIterator::operator _RAIter, _UnguardedIterator::operator*)\n-\t(_UnguardedIterator::operator _RAIter): Add const qualifier.\n-\t(operator<(_GuardedIterator&, _GuardedIterator&)\n-\t(operator<=(_GuardedIterator&, _GuardedIterator&)\n-\t(operator<(_UnguardedIterator&, _UnguardedIterator&)\n-\t(operator<=(_UnguardedIterator&, _UnguardedIterator&): Change\n-\tparameters to const references.\n-\n 2020-05-06  Martin Liska  <mliska@suse.cz>\n \n \tRevert:"}, {"sha": "c038a505afa2a9bee58600df351c5d3489ba4d55", "filename": "libstdc++-v3/include/bits/ranges_algo.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algo.h?ref=9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "patch": "@@ -1758,8 +1758,9 @@ namespace ranges\n \t    // FIXME: Forwarding to std::sample here requires computing __lasti\n \t    // which may take linear time.\n \t    auto __lasti = ranges::next(__first, __last);\n-\t    return std::sample(std::move(__first), std::move(__lasti),\n-\t\t\t       std::move(__out), __n, std::forward<_Gen>(__g));\n+\t    return _GLIBCXX_STD_A::\n+\t      sample(std::move(__first), std::move(__lasti), std::move(__out),\n+\t\t     __n, std::forward<_Gen>(__g));\n \t  }\n \telse\n \t  {\n@@ -2018,8 +2019,8 @@ namespace ranges\n \t\t _Comp __comp = {}, _Proj __proj = {}) const\n       {\n \tauto __lasti = ranges::next(__first, __last);\n-\tstd::sort(std::move(__first), __lasti,\n-\t\t  __detail::__make_comp_proj(__comp, __proj));\n+\t_GLIBCXX_STD_A::sort(std::move(__first), __lasti,\n+\t\t\t     __detail::__make_comp_proj(__comp, __proj));\n \treturn __lasti;\n       }\n \n@@ -2262,8 +2263,9 @@ namespace ranges\n \t\t _Comp __comp = {}, _Proj __proj = {}) const\n       {\n \tauto __lasti = ranges::next(__first, __last);\n-\tstd::nth_element(std::move(__first), std::move(__nth), __lasti,\n-\t\t\t __detail::__make_comp_proj(__comp, __proj));\n+\t_GLIBCXX_STD_A::nth_element(std::move(__first), std::move(__nth),\n+\t\t\t\t    __lasti,\n+\t\t\t\t    __detail::__make_comp_proj(__comp, __proj));\n \treturn __lasti;\n       }\n "}, {"sha": "0a0e29923b8c94b52c2da9e08ff1274def3fea34", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "patch": "@@ -1706,8 +1706,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \t  if constexpr (__is_byte_iter<_InputIter1>)\n \t    if constexpr (__is_byte_iter<_InputIter2>)\n \t      {\n-\t\tconst auto [__len, __lencmp]\n-\t\t  = std::__min_cmp(__last1 - __first1, __last2 - __first2);\n+\t\tconst auto [__len, __lencmp] = _GLIBCXX_STD_A::\n+\t\t  __min_cmp(__last1 - __first1, __last2 - __first2);\n \t\tif (__len)\n \t\t  {\n \t\t    const auto __c\n@@ -1737,9 +1737,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \t\t\t\t      _InputIter2 __first2,\n \t\t\t\t      _InputIter2 __last2)\n     {\n-      return std::lexicographical_compare_three_way(__first1, __last1,\n-\t\t\t\t\t\t    __first2, __last2,\n-\t\t\t\t\t\t    compare_three_way{});\n+      return _GLIBCXX_STD_A::\n+\tlexicographical_compare_three_way(__first1, __last1, __first2, __last2,\n+\t\t\t\t\t  compare_three_way{});\n     }\n #endif // three_way_comparison\n "}, {"sha": "7e6fdd6e0623f14a9ef448291354a93bbc5e4466", "filename": "libstdc++-v3/include/parallel/algobase.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c24e97a97aaad4ad0500170cbae4f387d82ddd6/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h?ref=9c24e97a97aaad4ad0500170cbae4f387d82ddd6", "patch": "@@ -466,6 +466,10 @@ namespace __parallel\n                __begin1, __end1, __begin2, __end2, __pred,\n                _IteratorCategory1(), _IteratorCategory2());\n     }\n+\n+#if __cpp_lib_three_way_comparison\n+  using _GLIBCXX_STD_A::lexicographical_compare_three_way;\n+#endif\n } // end namespace\n } // end namespace\n "}]}