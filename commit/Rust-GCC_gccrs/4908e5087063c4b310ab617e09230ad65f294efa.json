{"sha": "4908e5087063c4b310ab617e09230ad65f294efa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwOGU1MDg3MDYzYzRiMzEwYWI2MTdlMDkyMzBhZDY1ZjI5NGVmYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-28T22:40:33Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-28T22:40:33Z"}, "message": "(fold_rtx): Correct check for associating shifts and ending up with a shift count too large...\n\n(fold_rtx): Correct check for associating shifts and\nending up with a shift count too large; convert to the\nlargest valid for ASHIFTRT and don't fold all others.\n\nFrom-SVN: r4585", "tree": {"sha": "c53397c415bb439d866469528a44736105a4917b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c53397c415bb439d866469528a44736105a4917b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4908e5087063c4b310ab617e09230ad65f294efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4908e5087063c4b310ab617e09230ad65f294efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4908e5087063c4b310ab617e09230ad65f294efa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4908e5087063c4b310ab617e09230ad65f294efa/comments", "author": null, "committer": null, "parents": [{"sha": "4d01c30fb52de3af8ebfda893e84a61563f6b78a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d01c30fb52de3af8ebfda893e84a61563f6b78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d01c30fb52de3af8ebfda893e84a61563f6b78a"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "8ae97142760576a03a8046fd7f9428bc0fbe306f", "filename": "gcc/cse.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4908e5087063c4b310ab617e09230ad65f294efa/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4908e5087063c4b310ab617e09230ad65f294efa/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=4908e5087063c4b310ab617e09230ad65f294efa", "patch": "@@ -5283,13 +5283,21 @@ fold_rtx (x, insn)\n \t\tbreak;\n \n \t      /* If we are associating shift operations, don't let this\n-\t\t produce a shift of larger than the object.  This could\n-\t\t occur when we following a sign-extend by a right shift on\n-\t\t a machine that does a sign-extend as a pair of shifts.  */\n+\t\t produce a shift of the size of the object or larger.\n+\t\t This could occur when we follow a sign-extend by a right\n+\t\t shift on a machine that does a sign-extend as a pair\n+\t\t of shifts.  */\n \n \t      if (is_shift && GET_CODE (new_const) == CONST_INT\n-\t\t  && INTVAL (new_const) > GET_MODE_BITSIZE (mode))\n-\t\tbreak;\n+\t\t  && INTVAL (new_const) >= GET_MODE_BITSIZE (mode))\n+\t\t{\n+\t\t  /* As an exception, we can turn an ASHIFTRT of this\n+\t\t     form into a shift of the number of bits - 1.  */\n+\t\t  if (code == ASHIFTRT)\n+\t\t    new_const = GEN_INT (GET_MODE_BITSIZE (mode) - 1);\n+\t\t  else\n+\t\t    break;\n+\t\t}\n \n \t      y = copy_rtx (XEXP (y, 0));\n "}]}