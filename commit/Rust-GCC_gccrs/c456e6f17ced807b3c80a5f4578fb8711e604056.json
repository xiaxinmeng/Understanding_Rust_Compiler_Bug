{"sha": "c456e6f17ced807b3c80a5f4578fb8711e604056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1NmU2ZjE3Y2VkODA3YjNjODBhNWY0NTc4ZmI4NzExZTYwNDA1Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-10-10T15:23:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-10-10T15:23:59Z"}, "message": "re PR libstdc++/33633 (-D_GLIBCXX_DEBUG vs ext/hash_*)\n\n2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/33633\n\t* include/debug/hash_multimap.h: Change _GLIBCXX_EXT to _GLIBCXX_EXT_D.\n\t* include/debug/hash_set.h: Same.\n\t* include/debug/hash_multiset.h: Same.\n\t* include/debug/hash_map.h: Same.\n\n2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/parallel/losertree.h (loser_tree_traits_unguarded): To \n\tloser_tree_unguarded_traits.\n\t* include/parallel/multiway_merge.h (__gnu_parallel): Same.\n\nFrom-SVN: r129210", "tree": {"sha": "5296a15e771d4c8d79b8687e566a4bca6ece2114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5296a15e771d4c8d79b8687e566a4bca6ece2114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c456e6f17ced807b3c80a5f4578fb8711e604056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c456e6f17ced807b3c80a5f4578fb8711e604056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c456e6f17ced807b3c80a5f4578fb8711e604056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c456e6f17ced807b3c80a5f4578fb8711e604056/comments", "author": null, "committer": null, "parents": [{"sha": "476aa52ec01044f1d64a0ac01df63b13e8907717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/476aa52ec01044f1d64a0ac01df63b13e8907717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/476aa52ec01044f1d64a0ac01df63b13e8907717"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "145a75cd38c97d53b31ab601250a35316f70f0d0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -1,3 +1,17 @@\n+2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/33633\n+\t* include/debug/hash_multimap.h: Change _GLIBCXX_EXT to _GLIBCXX_EXT_D.\n+\t* include/debug/hash_set.h: Same.\n+\t* include/debug/hash_multiset.h: Same.\n+\t* include/debug/hash_map.h: Same.\n+\n+2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/parallel/losertree.h (loser_tree_traits_unguarded): To \n+\tloser_tree_unguarded_traits.\n+\t* include/parallel/multiway_merge.h (__gnu_parallel): Same.\n+\n 2007-10-10  Paolo Carlini  <pcarlini@suse.de>\n \t    Chris Fairles  <chris.fairles@gmail.com>\n \n@@ -20,7 +34,7 @@\n         * libsupc++/guard.cc: Make single conditional variable\n         implementation dependent to __GTHREAD_HAS_COND.\n \n-2007-10-09  Benjamin Kosnik  <bkoz@montsouris.artheist.org>\n+2007-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/33489 continued.\t\t\n \t* include/parallel/features.h (_GLIBCXX_LOSER_TREE): Set to zero."}, {"sha": "aeac90b8a136056c7711d46e00e9c987c1618600", "filename": "libstdc++-v3/include/debug/hash_map.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_map.h?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -1,6 +1,6 @@\n // Debugging hash_map implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2005, 2006\n+// Copyright (C) 2003, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -47,11 +47,11 @@ namespace __debug\n \t   typename _EqualKey = std::equal_to<_Value>,\n \t   typename _Alloc = std::allocator<_Value> >\n     class hash_map\n-    : public _GLIBCXX_EXT::hash_map<_Value, _Tp, _HashFcn, _EqualKey, _Alloc>,\n+    : public _GLIBCXX_EXT_D::hash_map<_Value, _Tp, _HashFcn, _EqualKey, _Alloc>,\n       public __gnu_debug::_Safe_sequence<hash_map<_Value, _Tp, _HashFcn,\n \t\t\t\t\t\t _EqualKey, _Alloc> >\n     {\n-      typedef _GLIBCXX_EXT::hash_map<_Value, _Tp, _HashFcn, _EqualKey, _Alloc>\n+      typedef _GLIBCXX_EXT_D::hash_map<_Value, _Tp, _HashFcn, _EqualKey, _Alloc>\n       \t\t\t\t\t\t\t_Base;\n       typedef __gnu_debug::_Safe_sequence<hash_map> \t_Safe_base;\n "}, {"sha": "985fbc83030f6deefb35380d79d27bc67061db74", "filename": "libstdc++-v3/include/debug/hash_multimap.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_multimap.h?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -47,11 +47,11 @@ namespace __debug\n \t   typename _EqualKey = std::equal_to<_Value>,\n \t   typename _Alloc =  std::allocator<_Value> >\n     class hash_multimap\n-    : public _GLIBCXX_EXT::hash_multimap<_Value,_Tp,_HashFcn,_EqualKey,_Alloc>,\n+    : public _GLIBCXX_EXT_D::hash_multimap<_Value,_Tp,_HashFcn,_EqualKey,_Alloc>,\n       public __gnu_debug::_Safe_sequence<hash_multimap<_Value, _Tp, _HashFcn,\n \t\t\t\t\t\t       _EqualKey, _Alloc> >\n     {\n-      typedef _GLIBCXX_EXT::hash_multimap<_Value,_Tp,_HashFcn,_EqualKey,_Alloc>\n+      typedef _GLIBCXX_EXT_D::hash_multimap<_Value,_Tp,_HashFcn,_EqualKey,_Alloc>\n \t\t\t\t\t\t\t_Base;\n       typedef __gnu_debug::_Safe_sequence<hash_multimap> _Safe_base;\n "}, {"sha": "11efb5b68464272cc196fd1fd9df75961a53dfde", "filename": "libstdc++-v3/include/debug/hash_multiset.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_multiset.h?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -47,11 +47,11 @@ namespace __debug\n \t   typename _EqualKey = std::equal_to<_Value>,\n \t   typename _Alloc =  std::allocator<_Value> >\n     class hash_multiset\n-    : public _GLIBCXX_EXT::hash_multiset<_Value, _HashFcn, _EqualKey, _Alloc>,\n+    : public _GLIBCXX_EXT_D::hash_multiset<_Value, _HashFcn, _EqualKey, _Alloc>,\n       public __gnu_debug::_Safe_sequence<hash_multiset<_Value, _HashFcn,\n \t\t\t\t\t\t       _EqualKey, _Alloc> >\n     {\n-      typedef _GLIBCXX_EXT:: hash_multiset<_Value,_HashFcn, _EqualKey,_Alloc>\n+      typedef _GLIBCXX_EXT_D:: hash_multiset<_Value,_HashFcn, _EqualKey,_Alloc>\n \t\t\t\t\t\t\t_Base;\n       typedef __gnu_debug::_Safe_sequence<hash_multiset> _Safe_base;\n "}, {"sha": "9178063289b0032cfb43597b154e0c659e5b663e", "filename": "libstdc++-v3/include/debug/hash_set.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fhash_set.h?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -1,6 +1,6 @@\n // Debugging hash_set implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2005, 2006\n+// Copyright (C) 2003, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -47,11 +47,11 @@ namespace __debug\n \t   typename _EqualKey = std::equal_to<_Value>,\n \t   typename _Alloc =  std::allocator<_Value> >\n     class hash_set\n-    : public _GLIBCXX_EXT::hash_set<_Value, _HashFcn, _EqualKey,_Alloc>,\n+    : public _GLIBCXX_EXT_D::hash_set<_Value, _HashFcn, _EqualKey,_Alloc>,\n       public __gnu_debug::_Safe_sequence<hash_set<_Value, _HashFcn, _EqualKey,\n \t\t\t\t\t\t  _Alloc> >\n     {\n-      typedef _GLIBCXX_EXT::hash_set<_Value, _HashFcn, _EqualKey,_Alloc> _Base;\n+      typedef _GLIBCXX_EXT_D::hash_set<_Value, _HashFcn, _EqualKey,_Alloc> _Base;\n       typedef __gnu_debug::_Safe_sequence<hash_set> _Safe_base;\n \n     public:"}, {"sha": "5c7a8085e20940a33e59771c50ce93fc530a79a0", "filename": "libstdc++-v3/include/parallel/losertree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -1094,15 +1094,15 @@ namespace __gnu_parallel\n   };\n \n   template<typename _ValueTp, class Comparator>\n-  struct loser_tree_traits_unguarded\n+  struct loser_tree_unguarded_traits\n   {\n #if _GLIBCXX_LOSER_TREE_UNGUARDED\n     typedef LoserTreeUnguarded<_ValueTp, Comparator> LT;\n #else\n #  if _GLIBCXX_LOSER_TREE_POINTER_UNGUARDED\n     typedef LoserTreePointerUnguarded<_ValueTp, Comparator> LT;\n #  else\n-#    error Must define some type in losertree.h.\n+#    error Must define some unguarded type in losertree.h.\n #  endif\n #endif\n   };"}, {"sha": "c727e44f0fcaad10a75b6f72dde9de636c9d5db7", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c456e6f17ced807b3c80a5f4578fb8711e604056/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=c456e6f17ced807b3c80a5f4578fb8711e604056", "patch": "@@ -1109,7 +1109,7 @@ namespace __gnu_parallel\n       {\n \tdifference_type unguarded_length = std::min(length, total_length - overhang);\n \ttarget_end = multiway_merge_loser_tree_unguarded\n-\t  <typename loser_tree_traits_unguarded<value_type, Comparator>::LT>\n+\t  <typename loser_tree_unguarded_traits<value_type, Comparator>::LT>\n \t  (seqs_begin, seqs_end, target, comp, unguarded_length, stable);\n \toverhang = length - unguarded_length;\n       }\n@@ -1166,7 +1166,7 @@ namespace __gnu_parallel\n \n     difference_type unguarded_length = std::min(length, total_length - overhang);\n     target_end = multiway_merge_loser_tree_unguarded\n-      <typename loser_tree_traits_unguarded<value_type, Comparator>::LT>\n+      <typename loser_tree_unguarded_traits<value_type, Comparator>::LT>\n       (seqs_begin, seqs_end, target, comp, unguarded_length, stable);\n     overhang = length - unguarded_length;\n "}]}