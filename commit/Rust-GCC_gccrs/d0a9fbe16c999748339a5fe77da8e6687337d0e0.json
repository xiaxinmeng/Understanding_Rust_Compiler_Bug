{"sha": "d0a9fbe16c999748339a5fe77da8e6687337d0e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhOWZiZTE2Yzk5OTc0ODMzOWE1ZmU3N2RhOGU2Njg3MzM3ZDBlMA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-07-15T21:34:02Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-07-15T21:34:02Z"}, "message": "Use source_location where it is due\n\nlibcpp/\n\n\t* directives.c (struct if_stack): Use source_location as type\n\there.\n\t* include/cpplib.h (struct cpp_callbacks)<include, define, undef,\n\tindent, def_pragma, used_define, used_undef>: Properly use\n\tsource_location as parameter type, rather than unsigned int.\n\nFrom-SVN: r176333", "tree": {"sha": "8e55847d83bb45140b1baa1cd4d7e29a872315ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e55847d83bb45140b1baa1cd4d7e29a872315ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0a9fbe16c999748339a5fe77da8e6687337d0e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a9fbe16c999748339a5fe77da8e6687337d0e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a9fbe16c999748339a5fe77da8e6687337d0e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a9fbe16c999748339a5fe77da8e6687337d0e0/comments", "author": null, "committer": null, "parents": [{"sha": "6feeed065cba3185d087aa70a5a7493a4a7bbc3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6feeed065cba3185d087aa70a5a7493a4a7bbc3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6feeed065cba3185d087aa70a5a7493a4a7bbc3b"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "9a9c71fa3ec214723cf7d1d8665b972129b427db", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a9fbe16c999748339a5fe77da8e6687337d0e0/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a9fbe16c999748339a5fe77da8e6687337d0e0/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d0a9fbe16c999748339a5fe77da8e6687337d0e0", "patch": "@@ -1,3 +1,11 @@\n+2011-07-15  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* directives.c (struct if_stack): Use source_location as type\n+\there.\n+\t* include/cpplib.h (struct cpp_callbacks)<include, define, undef,\n+\tindent, def_pragma, used_define, used_undef>: Properly use\n+\tsource_location as parameter type, rather than unsigned int.\n+\n 2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/39150"}, {"sha": "83d4a0e8d7f46663e86f32075dce7b401db4c64f", "filename": "libcpp/directives.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a9fbe16c999748339a5fe77da8e6687337d0e0/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a9fbe16c999748339a5fe77da8e6687337d0e0/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=d0a9fbe16c999748339a5fe77da8e6687337d0e0", "patch": "@@ -32,7 +32,7 @@ along with this program; see the file COPYING3.  If not see\n struct if_stack\n {\n   struct if_stack *next;\n-  linenum_type line;\t\t/* Line where condition started.  */\n+  source_location line;\t\t/* Line where condition started.  */\n   const cpp_hashnode *mi_cmacro;/* macro name for #ifndef around entire file */\n   bool skip_elses;\t\t/* Can future #else / #elif be skipped?  */\n   bool was_skipping;\t\t/* If were skipping on entry.  */"}, {"sha": "55b0f1bf932d347acaf8a8d4314c9f8c1ee06bc2", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a9fbe16c999748339a5fe77da8e6687337d0e0/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a9fbe16c999748339a5fe77da8e6687337d0e0/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=d0a9fbe16c999748339a5fe77da8e6687337d0e0", "patch": "@@ -479,12 +479,12 @@ struct cpp_callbacks\n   void (*file_change) (cpp_reader *, const struct line_map *);\n \n   void (*dir_change) (cpp_reader *, const char *);\n-  void (*include) (cpp_reader *, unsigned int, const unsigned char *,\n+  void (*include) (cpp_reader *, source_location, const unsigned char *,\n \t\t   const char *, int, const cpp_token **);\n-  void (*define) (cpp_reader *, unsigned int, cpp_hashnode *);\n-  void (*undef) (cpp_reader *, unsigned int, cpp_hashnode *);\n-  void (*ident) (cpp_reader *, unsigned int, const cpp_string *);\n-  void (*def_pragma) (cpp_reader *, unsigned int);\n+  void (*define) (cpp_reader *, source_location, cpp_hashnode *);\n+  void (*undef) (cpp_reader *, source_location, cpp_hashnode *);\n+  void (*ident) (cpp_reader *, source_location, const cpp_string *);\n+  void (*def_pragma) (cpp_reader *, source_location);\n   int (*valid_pch) (cpp_reader *, const char *, int);\n   void (*read_pch) (cpp_reader *, const char *, int, const char *);\n   missing_header_cb missing_header;\n@@ -501,8 +501,8 @@ struct cpp_callbacks\n \n   /* Callbacks for when a macro is expanded, or tested (whether\n      defined or not at the time) in #ifdef, #ifndef or \"defined\".  */\n-  void (*used_define) (cpp_reader *, unsigned int, cpp_hashnode *);\n-  void (*used_undef) (cpp_reader *, unsigned int, cpp_hashnode *);\n+  void (*used_define) (cpp_reader *, source_location, cpp_hashnode *);\n+  void (*used_undef) (cpp_reader *, source_location, cpp_hashnode *);\n   /* Called before #define and #undef or other macro definition\n      changes are processed.  */\n   void (*before_define) (cpp_reader *);"}]}