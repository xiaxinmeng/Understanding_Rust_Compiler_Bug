{"sha": "8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5M2EyOTBkMjZkZmFhOWQ1ZmYzZTc5ODFhM2I4YTk4NDY0NWNjMg==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2004-11-10T10:14:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-10T10:14:36Z"}, "message": "re PR target/18230 (SPARC VIS instructions are not generated by GCC)\n\n\tPR target/18230\n\t(addsi3, subsi3): Set \"fptype\" attribute.\n\t(addv2si, addv4hi, addv2hi, subv2si, subv4hi, subv2hi): New\n\tpatterns.\n\nFrom-SVN: r90391", "tree": {"sha": "3f9d114444f1f6db74753f67485278c5a2da45a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f9d114444f1f6db74753f67485278c5a2da45a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/comments", "author": null, "committer": null, "parents": [{"sha": "dda49b66a42edfaec8b1e8a88ab17902725cc2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda49b66a42edfaec8b1e8a88ab17902725cc2a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda49b66a42edfaec8b1e8a88ab17902725cc2a2"}], "stats": {"total": 208, "additions": 206, "deletions": 2}, "files": [{"sha": "0bacc358c895a7827427aa958879eff0756f26a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -1,3 +1,9 @@\n+2004-11-10  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\tPR target/18230\n+\t(addsi3, subsi3): Set \"fptype\" attribute.\n+\t(addv2si, addv4hi, addv2hi, subv2si, subv4hi, subv2hi): New patterns.\n+\n 2004-11-10  Steven Bosscher  <stevenb@suse.de>\n \n \t* basic-block.h (XMALLOC_REG_SET, XFREE_REG_SET): New."}, {"sha": "64862169b888a53974241e880e682ec31ae67f4e", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 64, "deletions": 2, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -5062,7 +5062,8 @@\n    add\\t%1, %2, %0\n    sub\\t%1, -%2, %0\n    fpadd32s\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"*,*,fga\")])\n+  [(set_attr \"type\" \"*,*,fga\")\n+   (set_attr \"fptype\" \"*,*,single\")])\n \n (define_insn \"*cmp_cc_plus\"\n   [(set (reg:CC_NOOV 100)\n@@ -5218,7 +5219,8 @@\n    sub\\t%1, %2, %0\n    add\\t%1, -%2, %0\n    fpsub32s\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"*,*,fga\")])\n+  [(set_attr \"type\" \"*,*,fga\")\n+   (set_attr \"fptype\" \"*,*,single\")])\n \n (define_insn \"*cmp_minus_cc\"\n   [(set (reg:CC_NOOV 100)\n@@ -8866,3 +8868,63 @@\n   \"TARGET_TLS && TARGET_ARCH64\"\n   \"stx\\t%0, [%1 + %2], %%tldo_add(%3)\"\n   [(set_attr \"type\" \"store\")])\n+\n+;; Vector instructions.\n+\n+(define_insn \"addv2si3\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=e\")\n+\t(plus:V2SI (match_operand:V2SI 1 \"register_operand\" \"%e\")\n+\t\t   (match_operand:V2SI 2 \"register_operand\" \"e\")))]\n+  \"TARGET_VIS\"\n+  \"fpadd32\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"addv4hi3\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n+\t (plus:V4HI (match_operand:V4HI 1 \"register_operand\" \"%e\")\n+\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")))]\n+  \"TARGET_VIS\"\n+  \"fpadd16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+;; fpadd32s is emitted by the addsi3 pattern.\n+\n+(define_insn \"addv2hi3\"\n+  [(set (match_operand:V2HI 0 \"register_operand\" \"=f\")\n+\t(plus:V2HI (match_operand:V2HI 1 \"register_operand\" \"%f\")\n+\t\t   (match_operand:V2HI 2 \"register_operand\" \"f\")))]\n+  \"TARGET_VIS\"\n+  \"fpadd16s\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")\n+   (set_attr \"fptype\" \"single\")])\n+\n+(define_insn \"subv2si3\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=e\")\n+\t(minus:V2SI (match_operand:V2SI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")))]\n+  \"TARGET_VIS\"\n+  \"fpsub32\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"subv4hi3\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n+\t(minus:V4HI (match_operand:V4HI 1 \"register_operand\" \"e\")\n+\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")))]\n+  \"TARGET_VIS\"\n+  \"fpsub16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")\n+   (set_attr \"fptype\" \"double\")])\n+\n+;; fpsub32s is emitted by the subsi3 pattern.\n+\n+(define_insn \"subv2hi3\"\n+  [(set (match_operand:V2HI 0 \"register_operand\" \"=f\")\n+\t(minus:V2HI (match_operand:V2HI 1 \"register_operand\" \"f\")\n+\t\t    (match_operand:V2HI 2 \"register_operand\" \"f\")))]\n+  \"TARGET_VIS\"\n+  \"fpsub16s\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")\n+   (set_attr \"fptype\" \"single\")])"}, {"sha": "eaf7bcba6591e9def7a8a483bb03765059878c47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -1,3 +1,12 @@\n+2004-11-10  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* gcc.target/sparc: New directory.\n+\t* gcc.target/sparc/sparc.exp: New driver.\n+\t* gcc.target/sparc/fpadd16.c, gcc.target/sparc/fpadd16s.c,\n+\tgcc.target/sparc/fpsub16.c, gcc.target/sparc/fpsub16s.c,\n+\tgcc.target/sparc/fpadd32.c, gcc.target/sparc/fpadd32s.c,\n+\tgcc.target/sparc/fpsub32.c, gcc.target/sparc/fpsub32s.c: New tests.\n+\n 2004-11-10  Paul Brook  <paul@codesourcery.com>\n \n \tPR fortran/18218"}, {"sha": "071282d2ec285589fa1cd9fa8eeedf49f257b834", "filename": "gcc/testsuite/gcc.target/sparc/fpadd16.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd16.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef short vec16 __attribute__((vector_size(8)));\n+\n+vec16 foo(vec16 a, vec16 b)\n+{\n+  return a + b;\n+}\n+\n+/* { dg-final { scan-assembler \"fpadd16\\t%\" } } */"}, {"sha": "7f65a7a93a14fed01deade929b52ff7c937479ad", "filename": "gcc/testsuite/gcc.target/sparc/fpadd16s.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd16s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd16s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd16s.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef short vec16 __attribute__((vector_size(4)));\n+\n+vec16 foo(vec16 a, vec16 b)\n+{\n+  return a + b;\n+}\n+\n+/* { dg-final { scan-assembler \"fpadd16s\\t%\" } } */"}, {"sha": "7c57018a73c9e4e61567c103b761cd97867abafc", "filename": "gcc/testsuite/gcc.target/sparc/fpadd32.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd32.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef int vec32 __attribute__((vector_size(8)));\n+\n+vec32 foo(vec32 a, vec32 b)\n+{\n+  return a + b;\n+}\n+\n+/* { dg-final { scan-assembler \"fpadd32\\t%\" } } */"}, {"sha": "709ad83c4bdeba40efce00111952ecc48207aa95", "filename": "gcc/testsuite/gcc.target/sparc/fpadd32s.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd32s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd32s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadd32s.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef int vec32 __attribute__((vector_size(4)));\n+\n+extern vec32 foo1(void);\n+extern vec32 foo2(void);\n+\n+vec32 bar(void)\n+{\n+  return foo1 () + foo2 ();\n+}\n+\n+/* { dg-final { scan-assembler \"fpadd32s\\t%\" }  } */"}, {"sha": "05642dec117c982f37bbbffc9371a0bae52ded60", "filename": "gcc/testsuite/gcc.target/sparc/fpsub16.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub16.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef short vec16 __attribute__((vector_size(8)));\n+\n+vec16 foo(vec16 a, vec16 b)\n+{\n+  return a - b;\n+}\n+\n+/* { dg-final { scan-assembler \"fpsub16\\t%\" } } */"}, {"sha": "29e0d3e18f7544c85d15b181ad2b94c17ada083c", "filename": "gcc/testsuite/gcc.target/sparc/fpsub16s.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub16s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub16s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub16s.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef short vec16 __attribute__((vector_size(4)));\n+\n+vec16 foo(vec16 a, vec16 b)\n+{\n+  return a - b;\n+}\n+\n+/* { dg-final { scan-assembler \"fpsub16s\\t%\" } } */"}, {"sha": "e1813f491f790d2fb83f07b8e34cc6341d1c86d4", "filename": "gcc/testsuite/gcc.target/sparc/fpsub32.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub32.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef int vec32 __attribute__((vector_size(8)));\n+\n+vec32 foo(vec32 a, vec32 b)\n+{\n+  return a - b;\n+}\n+\n+/* { dg-final { scan-assembler \"fpsub32\\t%\" } } */"}, {"sha": "c9d4ccc6ef81ef1517cb82c21261331000e9448d", "filename": "gcc/testsuite/gcc.target/sparc/fpsub32s.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub32s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub32s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpsub32s.c?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+typedef int vec32 __attribute__((vector_size(4)));\n+\n+extern vec32 foo1(void);\n+extern vec32 foo2(void);\n+\n+vec32 bar(void)\n+{\n+  return foo1 () - foo2 ();\n+}\n+\n+/* { dg-final { scan-assembler \"fpsub32s\\t%\" } } */"}, {"sha": "a6aa041fc702bb6b963ba6ab8d2ffc699db7a5bf", "filename": "gcc/testsuite/gcc.target/sparc/sparc.exp", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsparc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8393a290d26dfaa9d5ff3e7981a3b8a984645cc2/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsparc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsparc.exp?ref=8393a290d26dfaa9d5ff3e7981a3b8a984645cc2", "patch": "@@ -0,0 +1,41 @@\n+# Copyright (C) 1997, 2004 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't a SPARC target.\n+if ![istarget sparc*-*-*] then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}]}