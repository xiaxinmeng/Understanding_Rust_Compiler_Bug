{"sha": "6109adeb7d392421306416182d2cf3241b7ba3ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwOWFkZWI3ZDM5MjQyMTMwNjQxNjE4MmQyY2YzMjQxYjdiYTNhYw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T18:06:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:06:22Z"}, "message": "sem_ch11.adb (Analyze_Handled_Statements): Move final test for useless assignments here and conditionalize it on absence...\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch11.adb (Analyze_Handled_Statements): Move final test for\n\tuseless assignments here and conditionalize it on absence of exception\n\thandlers.\n\t(Analyze_Exception_Handlers): Small code reorganization of error\n\tdetection code, for new handling of formal packages.\n\nFrom-SVN: r118299", "tree": {"sha": "018d6da398c24e8b5af6a7dcf3965f698db9bdd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/018d6da398c24e8b5af6a7dcf3965f698db9bdd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6109adeb7d392421306416182d2cf3241b7ba3ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6109adeb7d392421306416182d2cf3241b7ba3ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6109adeb7d392421306416182d2cf3241b7ba3ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6109adeb7d392421306416182d2cf3241b7ba3ac/comments", "author": null, "committer": null, "parents": [{"sha": "468c6c8af61691d22e832fbd9f6a3d840d00171d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/468c6c8af61691d22e832fbd9f6a3d840d00171d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/468c6c8af61691d22e832fbd9f6a3d840d00171d"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "75ee081a16d71984060dbac0a954fcad49e5c2c3", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6109adeb7d392421306416182d2cf3241b7ba3ac/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6109adeb7d392421306416182d2cf3241b7ba3ac/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=6109adeb7d392421306416182d2cf3241b7ba3ac", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,6 +41,7 @@ with Sem_Ch5;  use Sem_Ch5;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n+with Sem_Warn; use Sem_Warn;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Uintp;    use Uintp;\n@@ -271,13 +272,7 @@ package body Sem_Ch11 is\n                         while Scop /= Standard_Standard\n                           and then Ekind (Scop) = E_Package\n                         loop\n-                           --  If the exception is declared in an inner\n-                           --  instance, nothing else to check.\n-\n-                           if Is_Generic_Instance (Scop) then\n-                              exit;\n-\n-                           elsif Nkind (Declaration_Node (Scop)) =\n+                           if Nkind (Declaration_Node (Scop)) =\n                                            N_Package_Specification\n                              and then\n                                Nkind (Original_Node (Parent\n@@ -291,6 +286,12 @@ package body Sem_Ch11 is\n                                 (\"\\and therefore cannot appear in \" &\n                                  \"handler ('R'M 11.2(8))\", Id);\n                               exit;\n+\n+                           --  If the exception is declared in an inner\n+                           --  instance, nothing else to check.\n+\n+                           elsif Is_Generic_Instance (Scop) then\n+                              exit;\n                            end if;\n \n                            Scop := Scope (Scop);\n@@ -347,11 +348,23 @@ package body Sem_Ch11 is\n          Kill_All_Checks;\n       end if;\n \n+      --  Analyze statements in sequence\n+\n       Analyze_Statements (Statements (N));\n \n+      --  If the current scope is a subprogram, and there are no explicit\n+      --  exception handlers, then this is the right place to check for\n+      --  hanging useless assignments from the statement sequence of the\n+      --  subprogram body.\n+\n+      if Is_Subprogram (Current_Scope) then\n+         Warn_On_Useless_Assignments (Current_Scope);\n+      end if;\n+\n+      --  Deal with handlers or AT END proc\n+\n       if Present (Handlers) then\n          Analyze_Exception_Handlers (Handlers);\n-\n       elsif Present (At_End_Proc (N)) then\n          Analyze (At_End_Proc (N));\n       end if;"}]}