{"sha": "c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4MGQwYjRiN2JlOWM4ZmUyZGE2ZDNiZGQxODlkYzBjM2U2MWI0OQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-10-02T22:13:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-10-02T22:13:18Z"}, "message": "Fix tests that fail with old std::string\n\n\t* testsuite/21_strings/basic_string/allocator/char/minimal.cc: Guard\n\texplicit instantiation with check for new ABI.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc:\n\tLikewise. Use wchar_t as char_type.\n\nFrom-SVN: r228435", "tree": {"sha": "1affca557232ead195c856d7cc9683a019e03b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1affca557232ead195c856d7cc9683a019e03b66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "783aa06e9b48413aa0c463c985cd921aafb1a06a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783aa06e9b48413aa0c463c985cd921aafb1a06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783aa06e9b48413aa0c463c985cd921aafb1a06a"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "64841c9868c5ac93824d7cba34e4972e84a383e3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "patch": "@@ -1,5 +1,10 @@\n 2015-10-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/21_strings/basic_string/allocator/char/minimal.cc: Guard\n+\texplicit instantiation with check for new ABI.\n+\t* testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc:\n+\tLikewise. Use wchar_t as char_type.\n+\n \t* include/bits/basic_string.h [!_GLIBCXX_USE_CXX11_ABI]\n \t(basic_string::front() const, basic_string::back() const): Use\n \tnoexcept instead of _GLIBCXX_NOEXCEPT macro."}, {"sha": "d8dbb002977eb5588319c872dd3885fda5f02744", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/minimal.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fminimal.cc?ref=c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "patch": "@@ -22,25 +22,27 @@\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n  \n+#if _GLIBCXX_USE_CXX11_ABI\n using C = char;\n const C c = 'a';\n using traits = std::char_traits<C>;\n \n using __gnu_test::SimpleAllocator;\n \n-template class std::basic_string<C,traits, SimpleAllocator<C>>;\n+template class std::basic_string<C, traits, SimpleAllocator<C>>;\n \n void test01()\n {\n-#if _GLIBCXX_USE_CXX11_ABI\n   typedef SimpleAllocator<C> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v(alloc_type{});\n   v.assign(1, c);\n   v.assign(100, c);\n-#endif\n }\n+#else\n+void test01() { }\n+#endif\n \n int main()\n {"}, {"sha": "713e0302ef6076d071422f440b3424e17d24a21d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fminimal.cc?ref=c980d0b4b7be9c8fe2da6d3bdd189dc0c3e61b49", "patch": "@@ -22,7 +22,8 @@\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n  \n-using C = char;\n+#if _GLIBCXX_USE_CXX11_ABI && defined(_GLIBCXX_USE_WCHAR_T)\n+using C = wchar_t;\n const C c = 'a';\n using traits = std::char_traits<C>;\n \n@@ -32,18 +33,18 @@ template class std::basic_string<C,traits, SimpleAllocator<C>>;\n \n void test01()\n {\n-#if _GLIBCXX_USE_CXX11_ABI && defined(_GLIBCXX_USE_WCHAR_T)\n   typedef SimpleAllocator<C> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v(alloc_type{});\n   v.assign(1, c);\n   v.assign(100, c);\n-#endif\n }\n+#else\n+void test01() { }\n+#endif\n \n int main()\n {\n   test01();\n-  return 0;\n }"}]}