{"sha": "d42ee77ad0a9a063839860c32eda232884def053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQyZWU3N2FkMGE5YTA2MzgzOTg2MGMzMmVkYTIzMjg4NGRlZjA1Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-03-05T06:01:33Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-03-05T06:01:33Z"}, "message": "recog.c (volatile_mem_p, [...]): Remove.\n\n\t* recog.c (volatile_mem_p, validate_change_maybe_volatile):\n\tRemove.\n\t* recog.h: Remove the prototype for\n\tvalidate_change_maybe_volatile.\n\nFrom-SVN: r111731", "tree": {"sha": "5b74a628f0e5b993b380d7ddae22d274d9a038e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b74a628f0e5b993b380d7ddae22d274d9a038e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d42ee77ad0a9a063839860c32eda232884def053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42ee77ad0a9a063839860c32eda232884def053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42ee77ad0a9a063839860c32eda232884def053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42ee77ad0a9a063839860c32eda232884def053/comments", "author": null, "committer": null, "parents": [{"sha": "dc782dcd16b10eb6b4d083222228f8cd1ac52ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc782dcd16b10eb6b4d083222228f8cd1ac52ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc782dcd16b10eb6b4d083222228f8cd1ac52ac1"}], "stats": {"total": 47, "additions": 7, "deletions": 40}, "files": [{"sha": "89ad55d0e5f813a92ef4adddac961d196149824d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ee77ad0a9a063839860c32eda232884def053/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ee77ad0a9a063839860c32eda232884def053/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d42ee77ad0a9a063839860c32eda232884def053", "patch": "@@ -1,3 +1,10 @@\n+2006-03-05  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* recog.c (volatile_mem_p, validate_change_maybe_volatile):\n+\tRemove.\n+\t* recog.h: Remove the prototype for\n+\tvalidate_change_maybe_volatile.\n+\n 2006-03-05  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* rtlanal.c (replace_reg): Remove."}, {"sha": "82cacfed50de03fa94fc9659989ce253e41cdf13", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ee77ad0a9a063839860c32eda232884def053/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ee77ad0a9a063839860c32eda232884def053/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=d42ee77ad0a9a063839860c32eda232884def053", "patch": "@@ -238,45 +238,6 @@ validate_change (rtx object, rtx *loc, rtx new, int in_group)\n }\n \n \n-/* Function to be passed to for_each_rtx to test whether a piece of\n-   RTL contains any mem/v.  */\n-static int\n-volatile_mem_p (rtx *x, void *data ATTRIBUTE_UNUSED)\n-{\n-  return (MEM_P (*x) && MEM_VOLATILE_P (*x));\n-}\n-\n-/* Same as validate_change, but doesn't support groups, and it accepts\n-   volatile mems if they're already present in the original insn.  */\n-\n-int\n-validate_change_maybe_volatile (rtx object, rtx *loc, rtx new)\n-{\n-  int result;\n-\n-  if (validate_change (object, loc, new, 0))\n-    return 1;\n-\n-  if (volatile_ok\n-      /* If there isn't a volatile MEM, there's nothing we can do.  */\n-      || !for_each_rtx (&PATTERN (object), volatile_mem_p, 0)\n-      /* Make sure we're not adding or removing volatile MEMs.  */\n-      || for_each_rtx (loc, volatile_mem_p, 0)\n-      || for_each_rtx (&new, volatile_mem_p, 0)\n-      || !insn_invalid_p (object))\n-    return 0;\n-\n-  volatile_ok = 1;\n-\n-  gcc_assert (!insn_invalid_p (object));\n-\n-  result = validate_change (object, loc, new, 0);\n-\n-  volatile_ok = 0;\n-\n-  return result;\n-}\n-\n /* This subroutine of apply_change_group verifies whether the changes to INSN\n    were valid; i.e. whether INSN can still be recognized.  */\n "}, {"sha": "4e1ac2b79e164078f11b1b8e0eb6e71311b51d2b", "filename": "gcc/recog.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ee77ad0a9a063839860c32eda232884def053/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ee77ad0a9a063839860c32eda232884def053/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=d42ee77ad0a9a063839860c32eda232884def053", "patch": "@@ -74,7 +74,6 @@ extern void init_recog_no_volatile (void);\n extern int check_asm_operands (rtx);\n extern int asm_operand_ok (rtx, const char *);\n extern int validate_change (rtx, rtx *, rtx, int);\n-extern int validate_change_maybe_volatile (rtx, rtx *, rtx);\n extern int insn_invalid_p (rtx);\n extern int verify_changes (int);\n extern void confirm_change_group (void);"}]}