{"sha": "5b577977ea4e3b4bef007e2a34a7f46aeb2838f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI1Nzc5NzdlYTRlM2I0YmVmMDA3ZTJhMzRhN2Y0NmFlYjI4MzhmMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-10-05T15:08:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-05T15:08:46Z"}, "message": "2003-10-05  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/locale_facets.tcc\n\t(num_put::do_put(..., bool)): Prefer ?: to if-else.\n\t(time_get::_M_extract_name): Qualify min with std::.\n\t(__pad<>::_S_pad): Constify two variables; simplify an\n\tif-else statement factoring out some code.\n\n\t* include/bits/locale_facets.tcc: Minor cosmetic changes.\n\nFrom-SVN: r72112", "tree": {"sha": "1f5e700bbe053f942f5471838076bde1475062ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f5e700bbe053f942f5471838076bde1475062ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2/comments", "author": null, "committer": null, "parents": [{"sha": "368ebcd6ffb979a5b002835b03f75d61d681221d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368ebcd6ffb979a5b002835b03f75d61d681221d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368ebcd6ffb979a5b002835b03f75d61d681221d"}], "stats": {"total": 73, "additions": 36, "deletions": 37}, "files": [{"sha": "4944684e6d0573179ecb80ef46d3563fbc8469ba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5b577977ea4e3b4bef007e2a34a7f46aeb2838f2", "patch": "@@ -1,3 +1,13 @@\n+2003-10-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/locale_facets.tcc\n+\t(num_put::do_put(..., bool)): Prefer ?: to if-else.\n+\t(time_get::_M_extract_name): Qualify min with std::.\n+\t(__pad<>::_S_pad): Constify two variables; simplify an\n+\tif-else statement factoring out some code.\n+\n+\t* include/bits/locale_facets.tcc: Minor cosmetic changes.\n+\n 2003-10-04  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/locale_facets.tcc (num_get::_M_extract_float):"}, {"sha": "483d421f5eacef292c8ffd300afc1c47294f1d79", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 26, "deletions": 37, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b577977ea4e3b4bef007e2a34a7f46aeb2838f2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=5b577977ea4e3b4bef007e2a34a7f46aeb2838f2", "patch": "@@ -739,7 +739,7 @@ namespace std\n \t  else if (__flags & ios_base::showpos)\n \t    *__buf-- = __lit[__num_base::_S_oplus];\n \t}\n-\telse if (__basefield == ios_base::oct)\n+      else if (__basefield == ios_base::oct)\n \t{\n \t  // Octal.\n \t  do \n@@ -793,13 +793,13 @@ namespace std\n \tif (__basefield == ios_base::oct)\n \t  {\n \t    __off = 1;\n-\t    *__new = *__cs;\n+\t    __new[0] = __cs[0];\n \t  }\n \telse if (__basefield == ios_base::hex)\n \t  {\n \t    __off = 2;\n-\t    *__new = *__cs;\n-\t    *(__new + 1) = *(__cs + 1);\n+\t    __new[0] = __cs[0];\n+\t    __new[1] = __cs[1];\n \t  }\n       _CharT* __p;\n       __p = std::__add_grouping(__new + __off, __sep, __grouping.c_str(), \n@@ -987,13 +987,13 @@ namespace std\n       _CharT* __ws2;\n       if (__lc->_M_use_grouping)\n \t{\n-\t    // Grouping can add (almost) as many separators as the\n-\t    // number of digits, but no more.\n-\t    __ws2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n-\t\t\t\t\t\t\t  * __len * 2));\n-\t    _M_group_float(__lc->_M_grouping, __lc->_M_thousands_sep, __p,\n-\t\t\t   __ws2, __ws, __len);\n-\t    __ws = __ws2;\n+\t  // Grouping can add (almost) as many separators as the\n+\t  // number of digits, but no more.\n+\t  __ws2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n+\t\t\t\t\t\t\t* __len * 2));\n+\t  _M_group_float(__lc->_M_grouping, __lc->_M_thousands_sep, __p,\n+\t\t\t __ws2, __ws, __len);\n+\t  __ws = __ws2;\n \t}\n \n       // Pad.\n@@ -1031,10 +1031,7 @@ namespace std\n \t  const __cache_type* __lc = __uc(__loc);\n \n \t  const _CharT* __name;\n-          if (__v)\n-\t    __name = __lc->_M_truename;\n-          else\n-\t    __name = __lc->_M_falsename;\n+\t  __name = __v ? __lc->_M_truename : __lc->_M_falsename;\n \t  int __len = char_traits<_CharT>::length(__name);\n \n \t  _CharT* __cs;\n@@ -1813,8 +1810,8 @@ namespace std\n \t  // Find smallest matching string.\n \t  size_t __minlen = 10;\n \t  for (size_t __i2 = 0; __i2 < __nmatches; ++__i2)\n-\t    __minlen = min(__minlen, \n-\t\t\t   __traits_type::length(__names[__matches[__i2]]));\n+\t    __minlen = std::min(__minlen, \n+\t\t\t\t__traits_type::length(__names[__matches[__i2]]));\n \t  \n \t  if (__pos < __minlen && __beg != __end)\n \t    {\n@@ -2237,38 +2234,30 @@ namespace std\n \t  const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); \n \t  const _CharT __minus = __ctype.widen('-');\n \t  const _CharT __plus = __ctype.widen('+');\n-\t  bool __testsign = _Traits::eq(__olds[0], __minus)\n-\t    \t\t    || _Traits::eq(__olds[0], __plus);\n+\t  const bool __testsign = _Traits::eq(__olds[0], __minus)\n+\t                          || _Traits::eq(__olds[0], __plus);\n \n-\t  bool __testhex = _Traits::eq(__ctype.widen('0'), __olds[0]) \n-\t    \t\t   && (_Traits::eq(__ctype.widen('x'), __olds[1]) \n-\t\t\t       || _Traits::eq(__ctype.widen('X'), __olds[1]));\n+\t  const bool __testhex = _Traits::eq(__ctype.widen('0'), __olds[0]) \n+\t                         && (_Traits::eq(__ctype.widen('x'), __olds[1]) \n+\t\t\t\t     || _Traits::eq(__ctype.widen('X'), __olds[1]));\n \t  if (__testhex)\n \t    {\n \t      __news[0] = __olds[0]; \n \t      __news[1] = __olds[1];\n-\t      __mod += 2;\n+\t      __mod = 2;\n \t      __news += 2;\n-\t      __beg = __pads;\n-\t      __beglen = __plen;\n-\t      __end = const_cast<_CharT*>(__olds + __mod);\n \t    }\n \t  else if (__testsign)\n \t    {\n \t      __news[0] = __olds[0];\n-\t      ++__mod;\n+\t      __mod = 1;\n \t      ++__news;\n-\t      __beg = __pads;\n-\t      __beglen = __plen;\n-\t      __end = const_cast<_CharT*>(__olds + __mod);\n-\t    }\n-\t  else\n-\t    {\n-\t      // Padding first.\n-\t      __beg = __pads;\n-\t      __beglen = __plen;\n-\t      __end = const_cast<_CharT*>(__olds);\n \t    }\n+\t  // else Padding first.\n+\t  \n+\t  __beg = __pads;\n+\t  __beglen = __plen;\n+\t  __end = const_cast<_CharT*>(__olds + __mod);\n \t}\n       else\n \t{"}]}