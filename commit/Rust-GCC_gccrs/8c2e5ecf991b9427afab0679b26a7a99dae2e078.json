{"sha": "8c2e5ecf991b9427afab0679b26a7a99dae2e078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMyZTVlY2Y5OTFiOTQyN2FmYWIwNjc5YjI2YTdhOTlkYWUyZTA3OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2017-10-26T12:22:21Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2017-10-26T12:22:21Z"}, "message": "Use -xbrace_comment=no with recent Solaris/x86 as\n\n\t* configure.ac (gcc_cv_as_ix86_xbrace_comment): Check if assembler\n\tsupports -xbrace_comment option.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/i386/sol2.h (ASM_XBRACE_COMMENT_SPEC): Define.\n\t(ASM_CPU_SPEC): Use it.\n\nFrom-SVN: r254103", "tree": {"sha": "2300a4f981b5b74fd38080d60b842abec9ffbcab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2300a4f981b5b74fd38080d60b842abec9ffbcab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c2e5ecf991b9427afab0679b26a7a99dae2e078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2e5ecf991b9427afab0679b26a7a99dae2e078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c2e5ecf991b9427afab0679b26a7a99dae2e078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2e5ecf991b9427afab0679b26a7a99dae2e078/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f073de07ad00d4be604bdbaeab14786850932601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f073de07ad00d4be604bdbaeab14786850932601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f073de07ad00d4be604bdbaeab14786850932601"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "95d9e39a43e34f8662a756126f1c627ac6a002ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c2e5ecf991b9427afab0679b26a7a99dae2e078", "patch": "@@ -1,3 +1,12 @@\n+2017-10-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (gcc_cv_as_ix86_xbrace_comment): Check if assembler\n+\tsupports -xbrace_comment option.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/i386/sol2.h (ASM_XBRACE_COMMENT_SPEC): Define.\n+\t(ASM_CPU_SPEC): Use it.\n+\n 2017-10-26  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* target.def (static_rtx_alignment): New hook."}, {"sha": "5651bcba431c40df946b940674be0e5baf7c78a2", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=8c2e5ecf991b9427afab0679b26a7a99dae2e078", "patch": "@@ -717,6 +717,12 @@\n #endif\n \n \n+/* Define if your assembler supports -xbrace_comment option. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_XBRACE_COMMENT_OPTION\n+#endif\n+\n+\n /* Define to 1 if you have the `atoq' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ATOQ"}, {"sha": "05e5e1a4949847bff213f3858004e588f3f3900b", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=8c2e5ecf991b9427afab0679b26a7a99dae2e078", "patch": "@@ -65,8 +65,16 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU64_DEFAULT_SPEC \"-xarch=generic64\"\n #endif\n \n+/* Since Studio 12.6, as needs -xbrace_comment=no so its AVX512 syntax is\n+   fully compatible with gas.  */\n+#ifdef HAVE_AS_XBRACE_COMMENT_OPTION\n+#define ASM_XBRACE_COMMENT_SPEC \"-xbrace_comment=no\"\n+#else\n+#define ASM_XBRACE_COMMENT_SPEC \"\"\n+#endif\n+\n #undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \"%(asm_cpu_default)\"\n+#define ASM_CPU_SPEC \"%(asm_cpu_default) \" ASM_XBRACE_COMMENT_SPEC\n \n /* Don't include ASM_PIC_SPEC.  While the Solaris 10+ assembler accepts -K PIC,\n    it gives many warnings: "}, {"sha": "c49e665f1ca47bb754d49dc1db4ae6b6d4aa10fa", "filename": "gcc/configure", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8c2e5ecf991b9427afab0679b26a7a99dae2e078", "patch": "@@ -25552,6 +25552,38 @@ $as_echo \"$as_me: WARNING: LTO for $target requires binutils >= 2.20.1, but vers\n \t;;\n     esac\n \n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -xbrace_comment\" >&5\n+$as_echo_n \"checking assembler for -xbrace_comment... \" >&6; }\n+if test \"${gcc_cv_as_ix86_xbrace_comment+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_ix86_xbrace_comment=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '.text' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -xbrace_comment=no -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_ix86_xbrace_comment=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_ix86_xbrace_comment\" >&5\n+$as_echo \"$gcc_cv_as_ix86_xbrace_comment\" >&6; }\n+if test $gcc_cv_as_ix86_xbrace_comment = yes; then\n+\n+$as_echo \"#define HAVE_AS_XBRACE_COMMENT_OPTION 1\" >>confdefs.h\n+\n+fi\n+\n+\n     # Test if the assembler supports the section flag 'e' for specifying\n     # an excluded section.\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .section with e\" >&5"}, {"sha": "7c0a903c4cdb00e7135a305df60a8c8e88a11ae4", "filename": "gcc/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e5ecf991b9427afab0679b26a7a99dae2e078/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=8c2e5ecf991b9427afab0679b26a7a99dae2e078", "patch": "@@ -4103,6 +4103,11 @@ foo:\tnop\n \t;;\n     esac\n \n+    gcc_GAS_CHECK_FEATURE([-xbrace_comment], gcc_cv_as_ix86_xbrace_comment,,\n+      [-xbrace_comment=no], [.text],,\n+      [AC_DEFINE(HAVE_AS_XBRACE_COMMENT_OPTION, 1,\n+\t\t[Define if your assembler supports -xbrace_comment option.])])\n+\n     # Test if the assembler supports the section flag 'e' for specifying\n     # an excluded section.\n     gcc_GAS_CHECK_FEATURE([.section with e], gcc_cv_as_section_has_e,"}]}