{"sha": "68d93a19c4d764012d947ef7c0ab8abbb0d72775", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkOTNhMTljNGQ3NjQwMTJkOTQ3ZWY3YzBhYjhhYmJiMGQ3Mjc3NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-03-19T14:08:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-03-19T14:08:58Z"}, "message": "re PR tree-optimization/84859 (bogus -Warray-bounds on a memcpy in a loop)\n\n2018-03-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84859\n\t* tree-ssa-phiopt.c (single_trailing_store_in_bb): New function.\n\t(cond_if_else_store_replacement): Perform sinking operation on\n\tsingle-store BBs regardless of MAX_STORES_TO_SINK setting.\n\tGeneralize what a BB with a single eligible store is.\n\n\t* gcc.dg/tree-ssa/pr84859.c: New testcase.\n\t* gcc.dg/tree-ssa/pr35286.c: Disable cselim.\n\t* gcc.dg/tree-ssa/split-path-6.c: Likewise.\n\t* gcc.dg/tree-ssa/split-path-7.c: Likewise.\n\nFrom-SVN: r258645", "tree": {"sha": "bb10fb061c799fb918ebf41eac6f1b6f6a97e5ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb10fb061c799fb918ebf41eac6f1b6f6a97e5ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68d93a19c4d764012d947ef7c0ab8abbb0d72775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d93a19c4d764012d947ef7c0ab8abbb0d72775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d93a19c4d764012d947ef7c0ab8abbb0d72775", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d93a19c4d764012d947ef7c0ab8abbb0d72775/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f3284a4866183caec602737f35c088d982e18bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3284a4866183caec602737f35c088d982e18bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f3284a4866183caec602737f35c088d982e18bb"}], "stats": {"total": 105, "additions": 95, "deletions": 10}, "files": [{"sha": "b27b28f44ffd59a69fee347c9150e8054b62409b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -1,3 +1,11 @@\n+2018-03-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84859\n+\t* tree-ssa-phiopt.c (single_trailing_store_in_bb): New function.\n+\t(cond_if_else_store_replacement): Perform sinking operation on\n+\tsingle-store BBs regardless of MAX_STORES_TO_SINK setting.\n+\tGeneralize what a BB with a single eligible store is.\n+\n 2018-03-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84929"}, {"sha": "9f462160a61406e0999d9db0656e29da79ed0f1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -1,3 +1,11 @@\n+2018-03-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84859\n+\t* gcc.dg/tree-ssa/pr84859.c: New testcase.\n+\t* gcc.dg/tree-ssa/pr35286.c: Disable cselim.\n+\t* gcc.dg/tree-ssa/split-path-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/split-path-7.c: Likewise.\n+\n 2018-03-19  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/84812"}, {"sha": "4429cc857bf69a80a3d62991f920f2d8fb13dc82", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr35286.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr35286.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr35286.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr35286.c?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fno-code-hoisting -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fno-code-hoisting -fno-tree-cselim -fdump-tree-pre-stats\" } */\n int g2;\n struct A {\n     int a; int b;"}, {"sha": "577b561545d9fbc8d2671342c0d88fcf2d6a0cda", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr84859.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr84859.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr84859.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr84859.c?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Warray-bounds -fdump-tree-phiopt1\" } */\n+\n+void\n+h (const void *p, unsigned n)\n+{\n+  unsigned char a[8];\n+  if (n > sizeof a)\n+    return;\n+\n+  for (; n > 0; n -= *a)\n+    {\n+      if (n > 255)\n+\t*a = 255;\n+      else\n+\t*a = n;\n+\n+      __builtin_memcpy (a, p, *a);   /* { dg-bogus \"bounds\" } */\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"MIN_EXPR\" \"phiopt1\" } } */"}, {"sha": "e9b4f2628d55112c2c417d032e39d55aec5aea35", "filename": "gcc/testsuite/gcc.dg/tree-ssa/split-path-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-6.c?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fsplit-paths -fdump-tree-split-paths-details -w\" } */\n+/* { dg-options \"-O2 -fsplit-paths -fno-tree-cselim -fdump-tree-split-paths-details -w\" } */\n \n struct __sFILE\n {"}, {"sha": "3d6186b34d98f0c5b2bba8795245609ac291671b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/split-path-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-7.c?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fsplit-paths -fdump-tree-split-paths-details -w\" } */\n+/* { dg-options \"-O2 -fsplit-paths -fno-tree-cselim -fdump-tree-split-paths-details -w\" } */\n \n \n struct _reent"}, {"sha": "8e94f6a999ab8d48c88ee78a1cb138143b5a0259", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d93a19c4d764012d947ef7c0ab8abbb0d72775/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=68d93a19c4d764012d947ef7c0ab8abbb0d72775", "patch": "@@ -2035,6 +2035,36 @@ cond_if_else_store_replacement_1 (basic_block then_bb, basic_block else_bb,\n   return true;\n }\n \n+/* Return the single store in BB with VDEF or NULL if there are\n+   other stores in the BB or loads following the store.  */\n+\n+static gimple *\n+single_trailing_store_in_bb (basic_block bb, tree vdef)\n+{\n+  if (SSA_NAME_IS_DEFAULT_DEF (vdef))\n+    return NULL;\n+  gimple *store = SSA_NAME_DEF_STMT (vdef);\n+  if (gimple_bb (store) != bb\n+      || gimple_code (store) == GIMPLE_PHI)\n+    return NULL;\n+\n+  /* Verify there is no other store in this BB.  */\n+  if (!SSA_NAME_IS_DEFAULT_DEF (gimple_vuse (store))\n+      && gimple_bb (SSA_NAME_DEF_STMT (gimple_vuse (store))) == bb\n+      && gimple_code (SSA_NAME_DEF_STMT (gimple_vuse (store))) != GIMPLE_PHI)\n+    return NULL;\n+\n+  /* Verify there is no load or store after the store.  */\n+  use_operand_p use_p;\n+  imm_use_iterator imm_iter;\n+  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, gimple_vdef (store))\n+    if (USE_STMT (use_p) != store\n+\t&& gimple_bb (USE_STMT (use_p)) == bb)\n+      return NULL;\n+\n+  return store;\n+}\n+\n /* Conditional store replacement.  We already know\n    that the recognized pattern looks like so:\n \n@@ -2061,8 +2091,6 @@ static bool\n cond_if_else_store_replacement (basic_block then_bb, basic_block else_bb,\n                                 basic_block join_bb)\n {\n-  gimple *then_assign = last_and_only_stmt (then_bb);\n-  gimple *else_assign = last_and_only_stmt (else_bb);\n   vec<data_reference_p> then_datarefs, else_datarefs;\n   vec<ddr_p> then_ddrs, else_ddrs;\n   gimple *then_store, *else_store;\n@@ -2073,13 +2101,32 @@ cond_if_else_store_replacement (basic_block then_bb, basic_block else_bb,\n   tree then_lhs, else_lhs;\n   basic_block blocks[3];\n \n-  if (MAX_STORES_TO_SINK == 0)\n+  /* Handle the case with single store in THEN_BB and ELSE_BB.  That is\n+     cheap enough to always handle as it allows us to elide dependence\n+     checking.  */\n+  gphi *vphi = NULL;\n+  for (gphi_iterator si = gsi_start_phis (join_bb); !gsi_end_p (si);\n+       gsi_next (&si))\n+    if (virtual_operand_p (gimple_phi_result (si.phi ())))\n+      {\n+\tvphi = si.phi ();\n+\tbreak;\n+      }\n+  if (!vphi)\n     return false;\n+  tree then_vdef = PHI_ARG_DEF_FROM_EDGE (vphi, single_succ_edge (then_bb));\n+  tree else_vdef = PHI_ARG_DEF_FROM_EDGE (vphi, single_succ_edge (else_bb));\n+  gimple *then_assign = single_trailing_store_in_bb (then_bb, then_vdef);\n+  if (then_assign)\n+    {\n+      gimple *else_assign = single_trailing_store_in_bb (else_bb, else_vdef);\n+      if (else_assign)\n+\treturn cond_if_else_store_replacement_1 (then_bb, else_bb, join_bb,\n+\t\t\t\t\t\t then_assign, else_assign);\n+    }\n \n-  /* Handle the case with single statement in THEN_BB and ELSE_BB.  */\n-  if (then_assign && else_assign)\n-    return cond_if_else_store_replacement_1 (then_bb, else_bb, join_bb,\n-                                             then_assign, else_assign);\n+  if (MAX_STORES_TO_SINK == 0)\n+    return false;\n \n   /* Find data references.  */\n   then_datarefs.create (1);"}]}