{"sha": "d16b9d1cb6319143da567436f9223fc06ba5cad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE2YjlkMWNiNjMxOTE0M2RhNTY3NDM2ZjkyMjNmYzA2YmE1Y2FkMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-05-27T14:37:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-05-27T14:37:02Z"}, "message": "i386.h (STACK_SIZE_MODE): Define.\n\n\t* config/i386/i386.h (STACK_SIZE_MODE): Define.\n\nFrom-SVN: r271663", "tree": {"sha": "495f3d896cb0cdf9f33f3ebad787ed869e53629f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/495f3d896cb0cdf9f33f3ebad787ed869e53629f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d16b9d1cb6319143da567436f9223fc06ba5cad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16b9d1cb6319143da567436f9223fc06ba5cad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16b9d1cb6319143da567436f9223fc06ba5cad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16b9d1cb6319143da567436f9223fc06ba5cad1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63be21c8596ab2eee819a39a2b30c3b8b7bcf8af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63be21c8596ab2eee819a39a2b30c3b8b7bcf8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63be21c8596ab2eee819a39a2b30c3b8b7bcf8af"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "d30386082afc966354d45c0fbf2a1e8d927d7939", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16b9d1cb6319143da567436f9223fc06ba5cad1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16b9d1cb6319143da567436f9223fc06ba5cad1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d16b9d1cb6319143da567436f9223fc06ba5cad1", "patch": "@@ -1,3 +1,7 @@\n+2019-05-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (STACK_SIZE_MODE): Define.\n+\n 2019-05-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90637"}, {"sha": "d9e8a412e6ebf2639b1fafeb926a358f73e7d85e", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16b9d1cb6319143da567436f9223fc06ba5cad1/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16b9d1cb6319143da567436f9223fc06ba5cad1/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d16b9d1cb6319143da567436f9223fc06ba5cad1", "patch": "@@ -1947,6 +1947,10 @@ do {\t\t\t\t\t\t\t\\\n #define STACK_SAVEAREA_MODE(LEVEL)\t\t\t\\\n   ((LEVEL) == SAVE_NONLOCAL ? (TARGET_64BIT ? TImode : DImode) : Pmode)\n \n+/* Specify the machine_mode of the size increment\n+   operand of an 'allocate_stack' named pattern.  */\n+#define STACK_SIZE_MODE Pmode\n+\n /* A C expression whose value is zero if pointers that need to be extended\n    from being `POINTER_SIZE' bits wide to `Pmode' are sign-extended and\n    greater then zero if they are zero-extended and less then zero if the"}]}