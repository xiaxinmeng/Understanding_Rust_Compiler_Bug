{"sha": "e10fbf96398ce612c334754e0614c998e3ec3335", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEwZmJmOTYzOThjZTYxMmMzMzQ3NTRlMDYxNGM5OThlM2VjMzMzNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2006-02-09T12:22:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-02-09T12:22:09Z"}, "message": "sparc.c (tls_call_delay): Fix oversight.\n\n\t* config/sparc/sparc.c (tls_call_delay): Fix oversight.\n\nFrom-SVN: r110790", "tree": {"sha": "12ac07d059bcf7fac72d3afa6eaa963996ebe2c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12ac07d059bcf7fac72d3afa6eaa963996ebe2c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e10fbf96398ce612c334754e0614c998e3ec3335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10fbf96398ce612c334754e0614c998e3ec3335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e10fbf96398ce612c334754e0614c998e3ec3335", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10fbf96398ce612c334754e0614c998e3ec3335/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dae7ec874f5e46fccf259c87fd756a0e10375e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae7ec874f5e46fccf259c87fd756a0e10375e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dae7ec874f5e46fccf259c87fd756a0e10375e63"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "2e64fe341bf24c760f9d47c005b56eb10d98a4f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10fbf96398ce612c334754e0614c998e3ec3335/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10fbf96398ce612c334754e0614c998e3ec3335/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e10fbf96398ce612c334754e0614c998e3ec3335", "patch": "@@ -1,3 +1,7 @@\n+2006-02-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.c (tls_call_delay): Fix oversight.\n+\n 2006-02-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/25979"}, {"sha": "b5781ac65d7afb2ab2c40cadea8e1cac4587b6a1", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10fbf96398ce612c334754e0614c998e3ec3335/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10fbf96398ce612c334754e0614c998e3ec3335/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=e10fbf96398ce612c334754e0614c998e3ec3335", "patch": "@@ -2416,26 +2416,34 @@ empty_delay_slot (rtx insn)\n int\n tls_call_delay (rtx trial)\n {\n-  rtx pat, unspec;\n+  rtx pat;\n \n   /* Binutils allows\n-     call __tls_get_addr, %tgd_call (foo)\n-      add %l7, %o0, %o0, %tgd_add (foo)\n+       call __tls_get_addr, %tgd_call (foo)\n+        add %l7, %o0, %o0, %tgd_add (foo)\n      while Sun as/ld does not.  */\n   if (TARGET_GNU_TLS || !TARGET_TLS)\n     return 1;\n \n   pat = PATTERN (trial);\n-  if (GET_CODE (pat) != SET || GET_CODE (SET_DEST (pat)) != PLUS)\n-    return 1;\n \n-  unspec = XEXP (SET_DEST (pat), 1);\n-  if (GET_CODE (unspec) != UNSPEC\n-      || (XINT (unspec, 1) != UNSPEC_TLSGD\n-\t  && XINT (unspec, 1) != UNSPEC_TLSLDM))\n-    return 1;\n+  /* We must reject tgd_add{32|64}, i.e.\n+       (set (reg) (plus (reg) (unspec [(reg) (symbol_ref)] UNSPEC_TLSGD)))\n+     and tldm_add{32|64}, i.e.\n+       (set (reg) (plus (reg) (unspec [(reg) (symbol_ref)] UNSPEC_TLSLDM)))\n+     for Sun as/ld.  */\n+  if (GET_CODE (pat) == SET\n+      && GET_CODE (SET_SRC (pat)) == PLUS)\n+    {\n+      rtx unspec = XEXP (SET_SRC (pat), 1);\n \n-  return 0;\n+      if (GET_CODE (unspec) == UNSPEC\n+\t  && (XINT (unspec, 1) == UNSPEC_TLSGD\n+\t      || XINT (unspec, 1) == UNSPEC_TLSLDM))\n+\treturn 0;\n+    }\n+\n+  return 1;\n }\n \n /* Return nonzero if TRIAL, an insn, can be combined with a 'restore'"}]}