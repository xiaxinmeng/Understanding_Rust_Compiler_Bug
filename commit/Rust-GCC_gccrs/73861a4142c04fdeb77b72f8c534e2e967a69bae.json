{"sha": "73861a4142c04fdeb77b72f8c534e2e967a69bae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4NjFhNDE0MmMwNGZkZWI3N2I3MmY4YzUzNGUyZTk2N2E2OWJhZQ==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2013-01-31T18:29:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-01-31T18:29:15Z"}, "message": "re PR debug/55059 (DWARF missing concrete class definition)\n\n\tPR debug/55059\n\tPR debug/54508\n\t* dwarf2out.c (prune_unused_types_mark): Mark all of parent's\n\tchildren if parent is a class.\n\t(prune_unused_types_prune): Don't add DW_AT_declaration.\n\nFrom-SVN: r195622", "tree": {"sha": "8dbe1b8c90063dc609788e21e0ec4c882763909e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dbe1b8c90063dc609788e21e0ec4c882763909e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73861a4142c04fdeb77b72f8c534e2e967a69bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73861a4142c04fdeb77b72f8c534e2e967a69bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73861a4142c04fdeb77b72f8c534e2e967a69bae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73861a4142c04fdeb77b72f8c534e2e967a69bae/comments", "author": null, "committer": null, "parents": [{"sha": "04d2daddf40fc66447d2544665faf7e412cb403e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04d2daddf40fc66447d2544665faf7e412cb403e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04d2daddf40fc66447d2544665faf7e412cb403e"}], "stats": {"total": 60, "additions": 26, "deletions": 34}, "files": [{"sha": "b3c1c52de79823edb2d31955ce740302eeee9a30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73861a4142c04fdeb77b72f8c534e2e967a69bae", "patch": "@@ -1,3 +1,11 @@\n+2013-01-31  Paul Koning  <ni1d@arrl.net>\n+\n+\tPR debug/55059\n+\tPR debug/54508\n+\t* dwarf2out.c (prune_unused_types_mark): Mark all of parent's\n+\tchildren if parent is a class.\n+\t(prune_unused_types_prune): Don't add DW_AT_declaration.\n+\n 2013-01-31  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56157"}, {"sha": "75fea2060b741ea7fda1d335975bd46b72962645", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=73861a4142c04fdeb77b72f8c534e2e967a69bae", "patch": "@@ -21905,9 +21905,11 @@ prune_unused_types_mark (dw_die_ref die, int dokids)\n       prune_unused_types_mark_generic_parms_dies (die);\n \n       /* We also have to mark its parents as used.\n-\t (But we don't want to mark our parents' kids due to this.)  */\n+\t (But we don't want to mark our parent's kids due to this,\n+\t unless it is a class.)  */\n       if (die->die_parent)\n-\tprune_unused_types_mark (die->die_parent, 0);\n+\tprune_unused_types_mark (die->die_parent,\n+\t\t\t\t class_scope_p (die->die_parent));\n \n       /* Mark any referenced nodes.  */\n       prune_unused_types_walk_attribs (die);\n@@ -22082,7 +22084,6 @@ static void\n prune_unused_types_prune (dw_die_ref die)\n {\n   dw_die_ref c;\n-  int pruned = 0;\n \n   gcc_assert (die->die_mark);\n   prune_unused_types_update_strings (die);\n@@ -22105,25 +22106,13 @@ prune_unused_types_prune (dw_die_ref die)\n \t      prev->die_sib = c->die_sib;\n \t      die->die_child = prev;\n \t    }\n-\t  pruned = 1;\n-\t  goto finished;\n+\t  return;\n \t}\n \n     if (c != prev->die_sib)\n-      {\n-\tprev->die_sib = c;\n-\tpruned = 1;\n-      }\n+      prev->die_sib = c;\n     prune_unused_types_prune (c);\n   } while (c != die->die_child);\n-\n- finished:\n-  /* If we pruned children, and this is a class, mark it as a \n-     declaration to inform debuggers that this is not a complete\n-     class definition.  */\n-  if (pruned && die->die_mark == 1 && class_scope_p (die)\n-      && ! is_declaration_die (die))\n-    add_AT_flag (die, DW_AT_declaration, 1);\n }\n \n /* Remove dies representing declarations that we never use.  */"}, {"sha": "6eb87bb9f01c67cbefda4979dab8d7b47cb69070", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/localclass1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Flocalclass1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Flocalclass1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Flocalclass1.C?ref=73861a4142c04fdeb77b72f8c534e2e967a69bae", "patch": "@@ -59,11 +59,11 @@ main ()\n // { dg-final { scan-assembler \"foo\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"staticfn1\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"staticfn2\\[^\\n\\r\\]*DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"staticfn3\\[^\\n\\r\\]*DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"staticfn4\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"staticfn3\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"staticfn4\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler-not \"staticfn5\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler-not \"staticfn6\\[^\\n\\r\\]*DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"method1\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"method1\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"arg1\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"arg2\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"arg3\\[^\\n\\r\\]*DW_AT_name\" } }"}, {"sha": "475f02b5604caf4e8a215d5088516cf38a3a5d60", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/localclass2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Flocalclass2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Flocalclass2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Flocalclass2.C?ref=73861a4142c04fdeb77b72f8c534e2e967a69bae", "patch": "@@ -59,11 +59,11 @@ main ()\n // { dg-final { scan-assembler \"foo\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"staticfn1\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"staticfn2\\[^\\n\\r\\]*DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"staticfn3\\[^\\n\\r\\]*DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"staticfn4\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"staticfn3\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"staticfn4\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler-not \"staticfn5\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler-not \"staticfn6\\[^\\n\\r\\]*DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"method1\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"method1\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"arg1\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"arg2\\[^\\n\\r\\]*DW_AT_name\" } }\n // { dg-final { scan-assembler \"arg3\\[^\\n\\r\\]*DW_AT_name\" } }"}, {"sha": "f1c77c59138740160eb22e5fabf3e88204b09446", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr54508.C", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr54508.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73861a4142c04fdeb77b72f8c534e2e967a69bae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr54508.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr54508.C?ref=73861a4142c04fdeb77b72f8c534e2e967a69bae", "patch": "@@ -2,16 +2,12 @@\n // { dg-do compile }\n // { dg-options \"-g2 -dA -fno-merge-debug-strings\" }\n \n-// { dg-final { scan-assembler-not \"\\\"cbase\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n-// { dg-final { scan-assembler \"\\\"c\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ +DW_AT_decl_line\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ +DW_AT_declaration\" } }\n-// { dg-final { scan-assembler-not \"\\\"OPCODE\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"\\\"bi\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"\\\"si\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n-// { dg-final { scan-assembler \"\\\"s\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n-// { dg-final { scan-assembler-not \"\\\"s\\\\\\\\0\\\"\\[^#;/!|@\\]+\\[#;/!|@\\]+ +DW_AT_name\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ +DW_AT_decl_line\\[\\r\\n\\]+\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_declaration\" } }\n+// { dg-final { scan-assembler \"\\\"cbase\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"OPCODE\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"bi\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"si\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n // { dg-final { scan-assembler \"\\\"f1\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n-// { dg-final { scan-assembler \"\\\"u\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ +DW_AT_decl_line\\[\\r\\n\\]+\\[^#;/!|@\\]+\\[#;/!|@\\]+ +DW_AT_declaration\" } }\n-// { dg-final { scan-assembler-not \"\\\"f2\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"f2\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ +DW_AT_name\" } }\n // { dg-final { scan-assembler-not \"\\\"nc\\\\\\\\0\\\"\\[ \\t\\]+\\# +DW_AT_name\" } }\n \n class cbase\n@@ -64,9 +60,8 @@ extern void send (int, int, const void *, int);\n void test (int src)\n {\n   int cookie = 1;\n-  static struct s ss;\n-  \n   send(src, c::OPCODE, c::testc (), cookie);\n+  send(src, c::OPCODE, s::tests (), cookie);\n   send(src, c::OPCODE, u::testu (), cookie);\n   send(src, c::OPCODE, n::ntest (), cookie);\n }"}]}