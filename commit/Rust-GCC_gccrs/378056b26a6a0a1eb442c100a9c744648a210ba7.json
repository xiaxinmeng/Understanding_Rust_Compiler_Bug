{"sha": "378056b26a6a0a1eb442c100a9c744648a210ba7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4MDU2YjI2YTZhMGExZWI0NDJjMTAwYTljNzQ0NjQ4YTIxMGJhNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-12-20T09:29:13Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-12-20T09:29:13Z"}, "message": "[arm] PR target/82975: Guard against reg_renumber being NULL in arm.h\n\nCommit missing hunk to arm.h TEST_REGNO comment.\n\n\tPR target/82975\n\t* config/arm/arm.h (TEST_REGNO): Adjust comment as expected in\n\tr255830.\n\nFrom-SVN: r255853", "tree": {"sha": "62a7ee6c56ba8321e523197a4d6d741f771f58aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62a7ee6c56ba8321e523197a4d6d741f771f58aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/378056b26a6a0a1eb442c100a9c744648a210ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378056b26a6a0a1eb442c100a9c744648a210ba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378056b26a6a0a1eb442c100a9c744648a210ba7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378056b26a6a0a1eb442c100a9c744648a210ba7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b8b4a883d74dc74ecf64643e7d3a060db489318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8b4a883d74dc74ecf64643e7d3a060db489318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b8b4a883d74dc74ecf64643e7d3a060db489318"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "bc881e5f6caa28811d2a22a844b3ac7b9ea75bab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378056b26a6a0a1eb442c100a9c744648a210ba7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378056b26a6a0a1eb442c100a9c744648a210ba7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=378056b26a6a0a1eb442c100a9c744648a210ba7", "patch": "@@ -1,3 +1,9 @@\n+2017-12-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/82975\n+\t* config/arm/arm.h (TEST_REGNO): Adjust comment as expected in\n+\tr255830.\n+\n 2017-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/83490"}, {"sha": "c46fd60da85f7f2020e5d1dc12957baf8a0302e9", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378056b26a6a0a1eb442c100a9c744648a210ba7/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378056b26a6a0a1eb442c100a9c744648a210ba7/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=378056b26a6a0a1eb442c100a9c744648a210ba7", "patch": "@@ -1615,10 +1615,7 @@ enum arm_auto_incmodes\n \n /* These assume that REGNO is a hard or pseudo reg number.\n    They give nonzero only if REGNO is a hard reg of the suitable class\n-   or a pseudo reg currently allocated to a suitable hard reg.\n-   Since they use reg_renumber, they are safe only once reg_renumber\n-   has been allocated, which happens in reginfo.c during register\n-   allocation.  */\n+   or a pseudo reg currently allocated to a suitable hard reg.  */\n #define TEST_REGNO(R, TEST, VALUE) \\\n   ((R TEST VALUE)\t\\\n     || (reg_renumber && ((unsigned) reg_renumber[R] TEST VALUE)))"}]}