{"sha": "0cf7986c823e71c4da5ccbaf1474cf325a467842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNmNzk4NmM4MjNlNzFjNGRhNWNjYmFmMTQ3NGNmMzI1YTQ2Nzg0Mg==", "commit": {"author": {"name": "Revital Eres", "email": "eres@il.ibm.com", "date": "2009-11-04T10:22:22Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2009-11-04T10:22:22Z"}, "message": "Another fix to the misaligned store vectorizer patch\n\nFrom-SVN: r153892", "tree": {"sha": "b2dfd1b6e4e39ed99be035a83cd3982b10c90616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2dfd1b6e4e39ed99be035a83cd3982b10c90616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cf7986c823e71c4da5ccbaf1474cf325a467842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf7986c823e71c4da5ccbaf1474cf325a467842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf7986c823e71c4da5ccbaf1474cf325a467842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf7986c823e71c4da5ccbaf1474cf325a467842/comments", "author": {"login": "revit13", "id": 16211463, "node_id": "MDQ6VXNlcjE2MjExNDYz", "avatar_url": "https://avatars.githubusercontent.com/u/16211463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revit13", "html_url": "https://github.com/revit13", "followers_url": "https://api.github.com/users/revit13/followers", "following_url": "https://api.github.com/users/revit13/following{/other_user}", "gists_url": "https://api.github.com/users/revit13/gists{/gist_id}", "starred_url": "https://api.github.com/users/revit13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revit13/subscriptions", "organizations_url": "https://api.github.com/users/revit13/orgs", "repos_url": "https://api.github.com/users/revit13/repos", "events_url": "https://api.github.com/users/revit13/events{/privacy}", "received_events_url": "https://api.github.com/users/revit13/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbd43827744e884071bdf14b00c6064865c93deb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd43827744e884071bdf14b00c6064865c93deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd43827744e884071bdf14b00c6064865c93deb"}], "stats": {"total": 79, "additions": 54, "deletions": 25}, "files": [{"sha": "30553dc84127d52765a17371a745fafcd521aaa5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -1,3 +1,9 @@\n+2009-11-04  Revital Eres  <eres@il.ibm.com>\n+\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n+\tConsider peeling for alignment only for stores and remove\n+\tredundant assignment.\n+\n 2009-11-04  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \tPR target/41302"}, {"sha": "5ef448ced8ac678f4ca98dfa173dae3332a8dcb5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -1,3 +1,27 @@\n+2009-11-04  Revital Eres  <eres@il.ibm.com>\n+\n+\t* gcc.target/powerpc/vsx-vectorize-3.c: Adjust tetcase following\n+\tchange in decision of peeling for alignment.\n+\t* gcc.target/powerpc/vsx-vectorize-5.c: Likewise.\n+\t* gcc.dg/vect/vect-50.c: Likewise.\n+\t* gcc.dg/vect/vect-42.c: Likewise.\n+\t* gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c:\n+\tLikewise.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c:\n+\tLikewise.\n+\t* gcc.dg/vect/vect-multitypes-6.c: Likewise.\n+\t* gcc.dg/vect/vect-60.c: Likewise.\n+\t* gcc.dg/vect/vect-52.c: Likewise.\n+\t* gcc.dg/vect/vect-44.c: Likewise.\n+\t* gcc.dg/vect/vect-27.c: Likewise.\n+\t* gcc.dg/vect/vect-29.c: Likewise.\n+\t* gcc.dg/vect/vect-72.c: Likewise.\n+\t* gcc.dg/vect/vect-56.c: Likewise.\n+\t* gcc.dg/vect/vect-48.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-3.c: Likewise.\n+\t* gfortran.dg/vect/vect-2.f90: Likewise.\n+\t* gfortran.dg/vect/vect-5.f90: Likewise.\n+\n 2009-11-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41919"}, {"sha": "5627c265523bf3929ba22d97126202a01129461f", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -35,6 +35,6 @@ int main()\n    return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "5627c265523bf3929ba22d97126202a01129461f", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -35,6 +35,6 @@ int main()\n    return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "4a2da227e3c5804f2273a2680fe733c3753cfaca", "filename": "gcc/testsuite/gcc.dg/vect/vect-27.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -46,5 +46,5 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail {! vect_hw_misalign} } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "0ad28488056a65827b6b19ab7127404b8ecec0b5", "filename": "gcc/testsuite/gcc.dg/vect/vect-29.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -51,6 +51,6 @@ int main (void)\n /* The initialization induction loop (with aligned access) is also vectorized.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" {target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3ba1c6f7fdeaba6f672a780db75a0cf7acde5074", "filename": "gcc/testsuite/gcc.dg/vect/vect-42.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -65,6 +65,6 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 3 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target { { ! vector_alignment_reachable } && { ! vect_hw_misalign } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || { ! vector_alignment_reachable } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || { ! vector_alignment_reachable } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { xfail { vect_no_align || { ! vector_alignment_reachable } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || { ! vector_alignment_reachable } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ef1a4635bfaf293a815a2aa241ded447a7499c5c", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -66,7 +66,7 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && {{! vect_no_align} && {! vect_hw_misalign} } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e47ee00de91b80582829fec8c0f94a5869439c67", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -55,6 +55,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 2 \"vect\" { target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "068c804a1683637a4253b7acff11fc611b82c2df", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -63,7 +63,7 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } }  */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && { {! vect_no_align } && {! vect_hw_misalign } } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "af485abbd1492cf0cb3f88083383a733d9627a0d", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -56,6 +56,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 2 \"vect\" { target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "7b7da123591a6e88e8299e3ee8b5192d890c296e", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -68,6 +68,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "cbdf63db123899fb997369acfbc84d27afb33450", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -69,6 +69,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "67a197519521a8314257a921d2bef183e9dd4072", "filename": "gcc/testsuite/gcc.dg/vect/vect-72.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -47,5 +47,5 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3346e71e523c17b0df86b8ee49a15702df01c6c7", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-3.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -54,6 +54,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 3 \"vect\" { target vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" {xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" {xfail { vect_no_align } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "450855137a6f1512c25ab7751f2710f7a7d09b76", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-6.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -61,6 +61,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 6 \"vect\" { target vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 6 \"vect\" {xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 6 \"vect\" {xfail { vect_no_align } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "b99bcca49f44d60f271b72e7cecf1ca2757510e7", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-3.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -54,7 +54,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {xfail {! vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "32d05b29829f59771e5baee74e4021c942bfc358", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-5.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -54,7 +54,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {xfail {! vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "0f45a70c53bbe15d1cabc0bcb904a9ae201b84e0", "filename": "gcc/testsuite/gfortran.dg/vect/vect-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-2.f90?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -15,7 +15,7 @@ SUBROUTINE FOO(A, B, C)\n ! support unaligned loads).\n \n ! { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail { { vect_no_align || { ! vect_hw_misalign } } || { ! vector_alignment_reachable } } } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail { vect_no_align || { ! vector_alignment_reachable } } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { target { vect_no_align && { ! vector_alignment_reachable } } } } }\n ! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" {target { vect_no_align || { { ! vector_alignment_reachable  } && { ! vect_hw_misalign } } } } } } "}, {"sha": "72776a6fb4969d917968434ae08049cf568072ec", "filename": "gcc/testsuite/gfortran.dg/vect/vect-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -36,7 +36,7 @@ program main\n         end\n \n ! { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign } } || {! vector_alignment_reachable} } } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || {! vector_alignment_reachable} } } } }\n ! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { vect_no_align } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 2 \"vect\" { target { vect_no_align } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } }"}, {"sha": "c13c2750270f1dd72a492e6af2d035d9edd60d9b", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf7986c823e71c4da5ccbaf1474cf325a467842/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=0cf7986c823e71c4da5ccbaf1474cf325a467842", "patch": "@@ -1176,15 +1176,14 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n     {\n       stmt = DR_STMT (dr);\n       stmt_info = vinfo_for_stmt (stmt);\n-      supportable_dr_alignment = vect_supportable_dr_alignment (dr);\n \n       /* For interleaving, only the alignment of the first access\n          matters.  */\n       if (STMT_VINFO_STRIDED_ACCESS (stmt_info)\n           && DR_GROUP_FIRST_DR (stmt_info) != stmt)\n         continue;\n \n-      if (!aligned_access_p (dr))\n+      if (!DR_IS_READ (dr) && !aligned_access_p (dr))\n         {\n \t  do_peeling = vector_alignment_reachable_p (dr);\n \t  if (do_peeling)"}]}