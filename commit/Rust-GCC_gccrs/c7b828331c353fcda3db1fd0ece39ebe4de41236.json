{"sha": "c7b828331c353fcda3db1fd0ece39ebe4de41236", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiODI4MzMxYzM1M2ZjZGEzZGIxZmQwZWNlMzllYmU0ZGU0MTIzNg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-12-01T19:21:44Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-12-01T19:21:44Z"}, "message": "c-decl.c (grokdeclarator): If pedantic, warn about arrays with incomplete element type.\n\n\t* c-decl.c (grokdeclarator): If pedantic, warn about arrays with\n\tincomplete element type.\n\t(grokparms): Before checking for incomplete parameter type, check\n\tthe type isn't error_mark_node.\n\ntestsuite:\n\t* gcc.dg/c99-array-nonobj-1.c: No longer XFAIL.\n\nFrom-SVN: r37920", "tree": {"sha": "1eb1ee47410f38b4ee9fffb0043fd1eff1e75bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eb1ee47410f38b4ee9fffb0043fd1eff1e75bbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b828331c353fcda3db1fd0ece39ebe4de41236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b828331c353fcda3db1fd0ece39ebe4de41236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b828331c353fcda3db1fd0ece39ebe4de41236", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b828331c353fcda3db1fd0ece39ebe4de41236/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ac293b0e8890b914ede144eb2701a88c5d19f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ac293b0e8890b914ede144eb2701a88c5d19f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ac293b0e8890b914ede144eb2701a88c5d19f3"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "72e27f7d6f78700de1ab621a0f0785afcd8e5874", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7b828331c353fcda3db1fd0ece39ebe4de41236", "patch": "@@ -1,3 +1,10 @@\n+2000-12-01  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-decl.c (grokdeclarator): If pedantic, warn about arrays with\n+\tincomplete element type.\n+\t(grokparms): Before checking for incomplete parameter type, check\n+\tthe type isn't error_mark_node.\n+\n 2000-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (target_char_cast): New function."}, {"sha": "135163947a28a4c790fa3bf1c88e539d20315068", "filename": "gcc/c-decl.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c7b828331c353fcda3db1fd0ece39ebe4de41236", "patch": "@@ -4526,18 +4526,10 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t      itype = build_range_type (sizetype, size_zero_node, NULL_TREE);\n \t    }\n \n-#if 0\n-\t  /* This had bad results for pointers to arrays, as in\n-\t     union incomplete (*foo)[4];  */\n-\t  /* Complain about arrays of incomplete types, except in typedefs.  */\n-\n-\t  if (!COMPLETE_TYPE_P (type)\n-\t      /* Avoid multiple warnings for nested array types.  */\n-\t      && TREE_CODE (type) != ARRAY_TYPE\n-\t      && !(specbits & (1 << (int) RID_TYPEDEF))\n-\t      && !C_TYPE_BEING_DEFINED (type))\n-\t    warning (\"array type has incomplete element type\");\n-#endif\n+\t  /* If pedantic, complain about arrays of incomplete types.  */\n+\n+\t  if (pedantic && !COMPLETE_TYPE_P (type))\n+\t    pedwarn (\"array type has incomplete element type\");\n \n #if 0\n \t  /* We shouldn't have a function type here at all!\n@@ -5055,6 +5047,8 @@ grokparms (parms_info, funcdef_flag)\n \t    {\n \t      /* Barf if the parameter itself has an incomplete type.  */\n \t      tree type = TREE_VALUE (typelt);\n+\t      if (type == error_mark_node)\n+\t\tcontinue;\n \t      if (!COMPLETE_TYPE_P (type))\n \t\t{\n \t\t  if (funcdef_flag && DECL_NAME (parm) != 0)"}, {"sha": "c6d8ed6f70970c8f477fee28101bb8e90ca517bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7b828331c353fcda3db1fd0ece39ebe4de41236", "patch": "@@ -1,3 +1,7 @@\n+2000-12-01  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.dg/c99-array-nonobj-1.c: No longer XFAIL.\n+\n 2000-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/string-opt-5.c: Add some memset tests."}, {"sha": "45fc74c4c44ce0677e1eaed7ea2cf668f0f1880f", "filename": "gcc/testsuite/gcc.dg/c99-array-nonobj-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-nonobj-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b828331c353fcda3db1fd0ece39ebe4de41236/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-nonobj-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-nonobj-1.c?ref=c7b828331c353fcda3db1fd0ece39ebe4de41236", "patch": "@@ -9,16 +9,16 @@ typedef void func (void);\n struct s;\n \n extern int a[][]; /* { dg-bogus \"warning\" \"warning in place of error\" } */\n-/* { dg-error \"array\" \"\\[\\]\\[\\] var\" { xfail *-*-* } 11 } */\n+/* { dg-error \"array\" \"\\[\\]\\[\\] var\" { target *-*-* } 11 } */\n \n void f (int [][]); /* { dg-bogus \"warning\" \"warning in place of error\" } */\n-/* { dg-error \"array\" \"\\[\\]\\[\\] arg\" { xfail *-*-* } 14 } */\n+/* { dg-error \"array\" \"\\[\\]\\[\\] arg\" { target *-*-* } 14 } */\n \n extern struct s b[]; /* { dg-bogus \"warning\" \"warning in place of error\" } */\n-/* { dg-error \"array\" \"struct \\[\\] var\" { xfail *-*-* } 17 } */\n+/* { dg-error \"array\" \"struct \\[\\] var\" { target *-*-* } 17 } */\n \n void g (struct s []); /* { dg-bogus \"warning\" \"warning in place of error\" } */\n-/* { dg-error \"array\" \"struct \\[\\] arg\" { xfail *-*-* } 20 } */\n+/* { dg-error \"array\" \"struct \\[\\] arg\" { target *-*-* } 20 } */\n \n extern func c[]; /* { dg-bogus \"warning\" \"warning in place of error\" } */\n /* { dg-error \"array\" \"func \\[\\] var\" { target *-*-* } 23 } */"}]}