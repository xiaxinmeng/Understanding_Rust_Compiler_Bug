{"sha": "1d0bd356adb40de1b4fee26a663a691b9caa5853", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQwYmQzNTZhZGI0MGRlMWI0ZmVlMjZhNjYzYTY5MWI5Y2FhNTg1Mw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2007-09-10T02:27:29Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2007-09-10T02:27:29Z"}, "message": "* config/mingw32/proc.c: New file.\n\nFrom-SVN: r128321", "tree": {"sha": "1fb15b38c1f95381d9466b96e385808549eac105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fb15b38c1f95381d9466b96e385808549eac105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d0bd356adb40de1b4fee26a663a691b9caa5853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0bd356adb40de1b4fee26a663a691b9caa5853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d0bd356adb40de1b4fee26a663a691b9caa5853", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0bd356adb40de1b4fee26a663a691b9caa5853/comments", "author": null, "committer": null, "parents": [{"sha": "f901f85af352ee6a259972643b1d848cd56a8dd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f901f85af352ee6a259972643b1d848cd56a8dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f901f85af352ee6a259972643b1d848cd56a8dd5"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "22d936b84ced1c7b3d17f85925664974b92dd80e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0bd356adb40de1b4fee26a663a691b9caa5853/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0bd356adb40de1b4fee26a663a691b9caa5853/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=1d0bd356adb40de1b4fee26a663a691b9caa5853", "patch": "@@ -1,3 +1,7 @@\n+2007-09-10  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/mingw32/proc.c: New file.\n+\n 2007-09-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* testsuite/libgomp.c/atomic-1.c: Include cpuid.h for i386 targets."}, {"sha": "def7bb5e8f48a5995eed0dfb976f519ec92e5eb0", "filename": "libgomp/config/mingw32/proc.c", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0bd356adb40de1b4fee26a663a691b9caa5853/libgomp%2Fconfig%2Fmingw32%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0bd356adb40de1b4fee26a663a691b9caa5853/libgomp%2Fconfig%2Fmingw32%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fmingw32%2Fproc.c?ref=1d0bd356adb40de1b4fee26a663a691b9caa5853", "patch": "@@ -0,0 +1,82 @@\n+/* Copyright (C) 2007 Free Software Foundation, Inc.\n+   Contributed by Danny Smith <dannysmith@users.sourceforge.net>\n+\n+   This file is part of the GNU OpenMP Library (libgomp).\n+\n+   Libgomp is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU Lesser General Public License as published by\n+   the Free Software Foundation; either version 2.1 of the License, or\n+   (at your option) any later version.\n+\n+   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for\n+   more details.\n+\n+   You should have received a copy of the GNU Lesser General Public License \n+   along with libgomp; see the file COPYING.LIB.  If not, write to the\n+   Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n+   MA 02110-1301, USA.  */\n+\n+/* As a special exception, if you link this library with other files, some\n+   of which are compiled with GCC, to produce an executable, this library\n+   does not by itself cause the resulting executable to be covered by the\n+   GNU General Public License.  This exception does not however invalidate\n+   any other reasons why the executable file might be covered by the GNU\n+   General Public License.  */\n+\n+/* This file contains system specific routines related to counting\n+   online processors and dynamic load balancing.  It is expected that\n+   a system may well want to write special versions of each of these.\n+\n+   The following implementation uses win32 API routines.  */\n+\n+#include \"libgomp.h\"\n+#include <windows.h>\n+\n+/* Count the CPU's currently available to this process.  */\n+static int\n+count_avail_process_cpus ()\n+{\n+  DWORD_PTR process_cpus;\n+  DWORD_PTR system_cpus;\n+\n+  if (GetProcessAffinityMask (GetCurrentProcess (),\n+\t\t\t      &process_cpus, &system_cpus))\n+    {\n+      unsigned int count;\n+      for (count = 0; process_cpus != 0; process_cpus >>= 1)  \n+\tif (process_cpus & 1)\n+\t  count++;\n+      return count;\n+    }\n+  return 1;\n+}\n+\n+/* At startup, determine the default number of threads.  It would seem\n+   this should be related to the number of cpus available to the process.  */\n+\n+void\n+gomp_init_num_threads (void)\n+{\n+  gomp_nthreads_var = count_avail_process_cpus ();\n+}\n+\n+/* When OMP_DYNAMIC is set, at thread launch determine the number of\n+   threads we should spawn for this team.  FIXME:  How do we adjust for\n+   load average on MS Windows?  */\n+\n+unsigned\n+gomp_dynamic_max_threads (void)\n+{\n+  int n_onln = count_avail_process_cpus ();\n+  return n_onln > gomp_nthreads_var ? gomp_nthreads_var : n_onln;\n+}\n+\n+int\n+omp_get_num_procs (void)\n+{\n+  return count_avail_process_cpus ();\n+}\n+\n+ialias (omp_get_num_procs)"}]}