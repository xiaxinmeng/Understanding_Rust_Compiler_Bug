{"sha": "96abc8222464fb1c4fba9f2ffe3fd1b081a9196e", "node_id": "C_kwDOANBUbNoAKDk2YWJjODIyMjQ2NGZiMWM0ZmJhOWYyZmZlM2ZkMWIwODFhOTE5NmU", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2023-03-09T18:41:03Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2023-03-09T18:41:03Z"}, "message": "libstdc++: Implement LWG 3820/3849 changes to cartesian_product_view\n\nThe LWG 3820 testcase revealed a bug in _M_advance, which this patch\nalso fixes.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges\n\t(cartesian_product_view::_Iterator::_Iterator): Remove\n\tconstraint on default constructor as per LWG 3849.\n\t(cartesian_product_view::_Iterator::_M_prev): Adjust position\n\tof _Nm > 0 test as per LWG 3820.\n\t(cartesian_product_view::_Iterator::_M_advance): Perform bounds\n\tchecking only on sized cartesian products.\n\t* testsuite/std/ranges/cartesian_product/1.cc (test08): New test.", "tree": {"sha": "5ea2eea5ebc154c8bba8fae31af1d9ed5905b1d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea2eea5ebc154c8bba8fae31af1d9ed5905b1d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e/comments", "author": null, "committer": null, "parents": [{"sha": "065c93b89c5e97dcbfd79ee5172cf6800c286896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065c93b89c5e97dcbfd79ee5172cf6800c286896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065c93b89c5e97dcbfd79ee5172cf6800c286896"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "0725e700c4769fbc84b4a0e89c30dbe17f9feaf1", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=96abc8222464fb1c4fba9f2ffe3fd1b081a9196e", "patch": "@@ -8224,7 +8224,7 @@ namespace views::__adaptor\n \t\t\t\t    range_reference_t<__maybe_const_t<_Const, _Vs>>...>;\n     using difference_type = decltype(cartesian_product_view::_S_difference_type());\n \n-    _Iterator() requires forward_range<__maybe_const_t<_Const, _First>> = default;\n+    _Iterator() = default;\n \n     constexpr\n     _Iterator(_Iterator<!_Const> __i)\n@@ -8389,12 +8389,12 @@ namespace views::__adaptor\n     _M_prev()\n     {\n       auto& __it = std::get<_Nm>(_M_current);\n-      if (__it == ranges::begin(std::get<_Nm>(_M_parent->_M_bases)))\n-\t{\n-\t  __it = __detail::__cartesian_common_arg_end(std::get<_Nm>(_M_parent->_M_bases));\n-\t  if constexpr (_Nm > 0)\n+      if constexpr (_Nm > 0)\n+\tif (__it == ranges::begin(std::get<_Nm>(_M_parent->_M_bases)))\n+\t  {\n+\t    __it = __detail::__cartesian_common_arg_end(std::get<_Nm>(_M_parent->_M_bases));\n \t    _M_prev<_Nm - 1>();\n-\t}\n+\t  }\n       --__it;\n     }\n \n@@ -8415,10 +8415,13 @@ namespace views::__adaptor\n \t  if constexpr (_Nm == 0)\n \t    {\n #ifdef _GLIBCXX_ASSERTIONS\n-\t      auto __size = ranges::ssize(__r);\n-\t      auto __begin = ranges::begin(__r);\n-\t      auto __offset = __it - __begin;\n-\t      __glibcxx_assert(__offset + __x >= 0 && __offset + __x <= __size);\n+\t      if constexpr (sized_range<__maybe_const_t<_Const, _First>>)\n+\t\t{\n+\t\t  auto __size = ranges::ssize(__r);\n+\t\t  auto __begin = ranges::begin(__r);\n+\t\t  auto __offset = __it - __begin;\n+\t\t  __glibcxx_assert(__offset + __x >= 0 && __offset + __x <= __size);\n+\t\t}\n #endif\n \t      __it += __x;\n \t    }"}, {"sha": "ef2ece4a168608f194f9720acf320082e0d817a1", "filename": "libstdc++-v3/testsuite/std/ranges/cartesian_product/1.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fcartesian_product%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abc8222464fb1c4fba9f2ffe3fd1b081a9196e/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fcartesian_product%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fcartesian_product%2F1.cc?ref=96abc8222464fb1c4fba9f2ffe3fd1b081a9196e", "patch": "@@ -201,6 +201,14 @@ test07()\n   VERIFY( i == 5 );\n }\n \n+void\n+test08()\n+{\n+  // LWG 3820\n+  auto r = views::cartesian_product(views::iota(0));\n+  r.begin() += 3;\n+}\n+\n int\n main()\n {\n@@ -211,4 +219,5 @@ main()\n   test05();\n   static_assert(test06());\n   test07();\n+  test08();\n }"}]}