{"sha": "b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909", "node_id": "C_kwDOANBUbNoAKGIyNmJlNjFiOGQyM2NjOWQ3YTRlMzZmZWVhZGQ5YzhmMGVjOGI5MDk", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-07-31T20:27:13Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-05T07:21:07Z"}, "message": "[Ada] Fix insertion of a runtime check for null array aggregate\n\nA null array aggregate of Ada 2022 requires a conditional runtime check\nthat was inserted as an if-statement. While gigi can handle statements\ninserted into a list of declarations, in GNATprove such a statement will\ncause a crash. It is better to insert a conditional raise node, which is\nproperly handled by both gigi and GNATprove.\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Null_Array_Aggregate): Insert check as a\n\tRaise_Constraint_Error node and not an If_Statement.", "tree": {"sha": "649fbf11938047efcf93e9e96d3ccb4901598a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/649fbf11938047efcf93e9e96d3ccb4901598a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e35ecc880f405e06fdbd2f700863477fd2f25186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35ecc880f405e06fdbd2f700863477fd2f25186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e35ecc880f405e06fdbd2f700863477fd2f25186"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "dddc75f3a2eeb69c8c95fd4d7059bfa1ba522c6a", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=b26be61b8d23cc9d7a4e36feeadd9c8f0ec8b909", "patch": "@@ -4113,12 +4113,10 @@ package body Sem_Aggr is\n          --  including modular).\n \n          Check :=\n-           Make_If_Statement (Loc,\n+           Make_Raise_Constraint_Error (Loc,\n              Condition =>\n                Make_Op_Le (Loc, New_Copy_Tree (Lo), New_Copy_Tree (Hi)),\n-             Then_Statements =>\n-               New_List (Make_Raise_Constraint_Error\n-                           (Loc, Reason => CE_Range_Check_Failed)));\n+             Reason => CE_Range_Check_Failed);\n \n          Insert_Action (N, Check);\n "}]}