{"sha": "386230f050d689cd691cf1b78920c98e131ca4e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2MjMwZjA1MGQ2ODljZDY5MWNmMWI3ODkyMGM5OGUxMzFjYTRlNw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-08-21T05:34:45Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2002-08-21T05:34:45Z"}, "message": "Authenticator.java: updated JDK 1.4\n\n2003-08-21  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/Authenticator.java: updated JDK 1.4\n\t* java/net/ContentHandler.java: updated JDK 1.4\n\nFrom-SVN: r56481", "tree": {"sha": "9950399519c9c30882e61f110996a62f1ce8421d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9950399519c9c30882e61f110996a62f1ce8421d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/386230f050d689cd691cf1b78920c98e131ca4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386230f050d689cd691cf1b78920c98e131ca4e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386230f050d689cd691cf1b78920c98e131ca4e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386230f050d689cd691cf1b78920c98e131ca4e7/comments", "author": null, "committer": null, "parents": [{"sha": "8d25d91547ef4e312071cb4f5de136c46f304d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d25d91547ef4e312071cb4f5de136c46f304d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d25d91547ef4e312071cb4f5de136c46f304d2c"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "3f1d56994570c3c073b64ce057e5b346a9ee5bab", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386230f050d689cd691cf1b78920c98e131ca4e7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386230f050d689cd691cf1b78920c98e131ca4e7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=386230f050d689cd691cf1b78920c98e131ca4e7", "patch": "@@ -1,3 +1,8 @@\n+2003-08-21  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/Authenticator.java: updated JDK 1.4\n+\t* java/net/ContentHandler.java: updated JDK 1.4\n+\n 2002-08-20  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/URISyntaxException.java: New file."}, {"sha": "f6ad9dd27b05c133ba1de06a45a215a26b163dde", "filename": "libjava/java/net/Authenticator.java", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386230f050d689cd691cf1b78920c98e131ca4e7/libjava%2Fjava%2Fnet%2FAuthenticator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386230f050d689cd691cf1b78920c98e131ca4e7/libjava%2Fjava%2Fnet%2FAuthenticator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FAuthenticator.java?ref=386230f050d689cd691cf1b78920c98e131ca4e7", "patch": "@@ -53,6 +53,7 @@\n   * @since 1.2\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @status Believed to be JDK 1.4 complete\n   */\n public abstract class Authenticator\n {\n@@ -74,6 +75,11 @@\n  * Instance Variables\n  */\n \n+/**\n+  * The hostname of the site requesting authentication\n+  */\n+private String host;\n+\n /**\n   * InternetAddress of the site requesting authentication\n   */\n@@ -156,6 +162,19 @@\n public static PasswordAuthentication\n requestPasswordAuthentication(InetAddress addr, int port, String protocol,\n                               String prompt, String scheme) \n+  throws SecurityException\n+{\n+  return(requestPasswordAuthentication (null, addr, port, protocol,\n+\t\t\t\t\tprompt, scheme));\n+}\n+\n+/**\n+ * @since 1.4\n+ */\n+public static PasswordAuthentication\n+requestPasswordAuthentication(String host, InetAddress addr, int port,\n+\t\t              String protocol, String prompt, String scheme)\n+  throws SecurityException\n {\n   SecurityManager sm = System.getSecurityManager();\n   if (sm != null)\n@@ -164,6 +183,7 @@\n   if (default_authenticator == null)\n     return(null);\n \n+  default_authenticator.host = host;\n   default_authenticator.addr = addr;\n   default_authenticator.port = port;\n   default_authenticator.protocol = protocol;\n@@ -173,6 +193,14 @@\n   return(default_authenticator.getPasswordAuthentication());\n }\n \n+/**\n+ *  @since 1.4\n+ */\n+protected final String getRequestingHost()\n+{\n+  return(host);\n+}\n+\n /*************************************************************************/\n \n /*"}, {"sha": "ce8d7ee8bdd9ebd068bf22fbcde657af9f5326b0", "filename": "libjava/java/net/ContentHandler.java", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386230f050d689cd691cf1b78920c98e131ca4e7/libjava%2Fjava%2Fnet%2FContentHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386230f050d689cd691cf1b78920c98e131ca4e7/libjava%2Fjava%2Fnet%2FContentHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FContentHandler.java?ref=386230f050d689cd691cf1b78920c98e131ca4e7", "patch": "@@ -88,4 +88,36 @@ public ContentHandler() { }\n   */\n public abstract Object getContent(URLConnection urlc) throws IOException;\n \n+/*************************************************************************/\n+\n+/**\n+  * This method reads from the <code>InputStream</code> of the passed in URL\n+  * connection and uses the data downloaded to create an <code>Object</code>\n+  * represening the content.  For example, if the URL is pointing to a GIF \n+  * file, this method might return an <code>Image</code> object.  This method \n+  * must be implemented by subclasses. If the object doesnt match any type in\n+  * classes it returns null.\n+  *\n+  * @param urlc A <code>URLConnection</code> object to read data from.\n+  *\n+  * @return An object representing the data read\n+  *\n+  * @exception IOException If an error occurs\n+  *\n+  * @since 1.3\n+  */\n+public Object getContent(URLConnection urlc, Class[] classes)\n+  throws IOException\n+{\n+  Object obj = getContent (urlc);\n+\n+  for (int i = 0; i < classes.length; i++)\n+    {\n+      if (classes [i].isInstance (obj))\n+        return obj;\n+    }\n+\n+  return null;\n+}\n+\n } // class ContentHandler"}]}