{"sha": "d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI5Y2MzMmY5ZDljMGU5M2U2OGNiZmU1NDEwZDkxOGUxOWY0NzAxYw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-03-28T19:45:44Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-03-28T19:45:44Z"}, "message": "std_sstream.h (basic_istringstream): Adjust initialization.\n\n\n2003-03-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/std/std_sstream.h (basic_istringstream): Adjust\n\tinitialization.\n\t(basic_ostringstream): Same.\n\t(basic_stringstream): Same.\n\t* include/std/std_fstream.h (basic_ifstream): Adjust initialization.\n\t(basic_ofstream): Same.\n\t(basic_fstream): Same.\n\t* include/std/std_ostream.h (basic_ostrem): Add protected ctor\n\tthat does not call init.\n\t* include/std/std_istream.h (basic_istream): Same.\n\t(basic_iostream): Construct istream, ostream uninitialized, use\n\tinit to initialize just once. Add protected ctor that does not\n\tcall init.\n\nFrom-SVN: r64980", "tree": {"sha": "91b711798ef9b8fce499fcda83f47a839a27bb6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91b711798ef9b8fce499fcda83f47a839a27bb6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/comments", "author": null, "committer": null, "parents": [{"sha": "400fbc086860b08dfc220532a0f3b7aad382ce4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400fbc086860b08dfc220532a0f3b7aad382ce4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400fbc086860b08dfc220532a0f3b7aad382ce4c"}], "stats": {"total": 69, "additions": 47, "deletions": 22}, "files": [{"sha": "30a8b3ba689a30dfcea7c5bd8ae8af93cdbf2009", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "patch": "@@ -1,3 +1,19 @@\n+2003-03-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/std/std_sstream.h (basic_istringstream): Adjust\n+\tinitialization.\n+\t(basic_ostringstream): Same.\n+\t(basic_stringstream): Same.\t\n+\t* include/std/std_fstream.h (basic_ifstream): Adjust initialization.\n+\t(basic_ofstream): Same.\n+\t(basic_fstream): Same.\n+\t* include/std/std_ostream.h (basic_ostrem): Add protected ctor\n+\tthat does not call init.\n+\t* include/std/std_istream.h (basic_istream): Same.\t\t\n+\t(basic_iostream): Construct istream, ostream uninitialized, use\n+\tinit to initialize just once. Add protected ctor that does not\n+\tcall init.\n+\n 2003-03-28  Paolo Carlini  <pcarlini@unitus.it>\n             Nathan Myers  <ncm@cantrip.org>\n "}, {"sha": "ba0fcee36baafec9645cf00c45ae4bb8f095361d", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "patch": "@@ -419,7 +419,7 @@ namespace std\n        *  The default constructor does nothing and is not normally\n        *  accessible to users.\n       */\n-      basic_ios() : ios_base() \n+      basic_ios() : ios_base(), _M_fctype(0), _M_fnumput(0), _M_fnumget(0)\n       { }\n \n       /**"}, {"sha": "845a9147b8fe69239ecd8c7d24b1a5cf1e4da750", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "patch": "@@ -525,8 +525,7 @@ namespace std\n        *  @c &sb to the base class initializer.  Does not open any files\n        *  (you haven't given it a filename to open).\n       */\n-      basic_ifstream()\n-      : __istream_type(NULL), _M_filebuf()\n+      basic_ifstream() : __istream_type(), _M_filebuf()\n       { this->init(&_M_filebuf); }\n \n       /**\n@@ -541,7 +540,7 @@ namespace std\n       */\n       explicit\n       basic_ifstream(const char* __s, ios_base::openmode __mode = ios_base::in)\n-      : __istream_type(NULL), _M_filebuf()\n+      : __istream_type(), _M_filebuf()\n       {\n \tthis->init(&_M_filebuf);\n \tthis->open(__s, __mode);\n@@ -648,8 +647,7 @@ namespace std\n        *  @c &sb to the base class initializer.  Does not open any files\n        *  (you haven't given it a filename to open).\n       */\n-      basic_ofstream()\n-      : __ostream_type(NULL), _M_filebuf()\n+      basic_ofstream(): __ostream_type(), _M_filebuf()\n       { this->init(&_M_filebuf); }\n \n       /**\n@@ -666,7 +664,7 @@ namespace std\n       explicit\n       basic_ofstream(const char* __s,\n \t\t     ios_base::openmode __mode = ios_base::out|ios_base::trunc)\n-      : __ostream_type(NULL), _M_filebuf()\n+      : __ostream_type(), _M_filebuf()\n       {\n \tthis->init(&_M_filebuf);\n \tthis->open(__s, __mode);\n@@ -776,7 +774,7 @@ namespace std\n        *  (you haven't given it a filename to open).\n       */\n       basic_fstream()\n-      : __iostream_type(NULL), _M_filebuf()\n+      : __iostream_type(), _M_filebuf()\n       { this->init(&_M_filebuf); }\n \n       /**"}, {"sha": "616fd8ab10fdf413afd70b46f80fc1c552aaae4c", "filename": "libstdc++-v3/include/std/std_istream.h", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h?ref=d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "patch": "@@ -1,6 +1,7 @@\n // Input streams -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2001, 2002, 2003\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -101,11 +102,8 @@ namespace std\n        *  their own stream buffer.\n       */\n       explicit \n-      basic_istream(__streambuf_type* __sb)\n-      { \n-\tthis->init(__sb);\n-\t_M_gcount = streamsize(0);\n-      }\n+      basic_istream(__streambuf_type* __sb): _M_gcount(streamsize(0))\n+      { this->init(__sb); }\n \n       /**\n        *  @brief  Base destructor.\n@@ -573,6 +571,10 @@ namespace std\n       __istream_type& \n       seekg(off_type, ios_base::seekdir);\n       //@}\n+\n+    protected:\n+      explicit \n+      basic_istream(): _M_gcount(streamsize(0)) { }\n     };\n   \n   /**\n@@ -738,14 +740,19 @@ namespace std\n       */\n       explicit \n       basic_iostream(basic_streambuf<_CharT, _Traits>* __sb)\n-      : __istream_type(__sb), __ostream_type(__sb)\n-      { }\n+      : __istream_type(), __ostream_type()\n+      { this->init(__sb); }\n \n       /**\n        *  @brief  Destructor does nothing.\n       */\n       virtual \n       ~basic_iostream() { }\n+\n+    protected:\n+      explicit \n+      basic_iostream() : __istream_type(), __ostream_type()\n+      { }\n     };\n \n   // [27.6.1.4] standard basic_istream manipulators"}, {"sha": "94b5a9637635a044dde9a87d310be6d95df79d6a", "filename": "libstdc++-v3/include/std/std_ostream.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h?ref=d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "patch": "@@ -355,6 +355,10 @@ namespace std\n       */\n        __ostream_type& \n       seekp(off_type, ios_base::seekdir);\n+      \n+    protected:\n+      explicit \n+      basic_ostream() { }\n     };\n \n   /**"}, {"sha": "6c0e139bf373aec9b906f29ac7ee58091a74bca3", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d29cc32f9d9c0e93e68cbfe5410d918e19f4701c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=d29cc32f9d9c0e93e68cbfe5410d918e19f4701c", "patch": "@@ -326,7 +326,7 @@ namespace std\n       */\n       explicit\n       basic_istringstream(ios_base::openmode __mode = ios_base::in)\n-      : __istream_type(NULL), _M_stringbuf(__mode | ios_base::in)\n+      : __istream_type(), _M_stringbuf(__mode | ios_base::in)\n       { this->init(&_M_stringbuf); }\n \n       /**\n@@ -347,7 +347,7 @@ namespace std\n       explicit\n       basic_istringstream(const __string_type& __str,\n \t\t\t  ios_base::openmode __mode = ios_base::in)\n-      : __istream_type(NULL), _M_stringbuf(__str, __mode | ios_base::in)\n+      : __istream_type(), _M_stringbuf(__str, __mode | ios_base::in)\n       { this->init(&_M_stringbuf); }\n \n       /**\n@@ -445,7 +445,7 @@ namespace std\n       */\n       explicit\n       basic_ostringstream(ios_base::openmode __mode = ios_base::out)\n-      : __ostream_type(NULL), _M_stringbuf(__mode | ios_base::out)\n+      : __ostream_type(), _M_stringbuf(__mode | ios_base::out)\n       { this->init(&_M_stringbuf); }\n \n       /**\n@@ -466,7 +466,7 @@ namespace std\n       explicit\n       basic_ostringstream(const __string_type& __str,\n \t\t\t  ios_base::openmode __mode = ios_base::out)\n-      : __ostream_type(NULL), _M_stringbuf(__str, __mode | ios_base::out)\n+      : __ostream_type(), _M_stringbuf(__str, __mode | ios_base::out)\n       { this->init(&_M_stringbuf); }\n \n       /**\n@@ -562,7 +562,7 @@ namespace std\n       */\n       explicit\n       basic_stringstream(ios_base::openmode __m = ios_base::out | ios_base::in)\n-      : __iostream_type(NULL), _M_stringbuf(__m)\n+      : __iostream_type(), _M_stringbuf(__m)\n       { this->init(&_M_stringbuf); }\n \n       /**\n@@ -581,7 +581,7 @@ namespace std\n       explicit\n       basic_stringstream(const __string_type& __str,\n \t\t\t ios_base::openmode __m = ios_base::out | ios_base::in)\n-      : __iostream_type(NULL), _M_stringbuf(__str, __m)\n+      : __iostream_type(), _M_stringbuf(__str, __m)\n       { this->init(&_M_stringbuf); }\n \n       /**"}]}