{"sha": "96f66730d8fe6f2523ca16c4e5cb632b2011a797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmNjY3MzBkOGZlNmYyNTIzY2ExNmM0ZTVjYjYzMmIyMDExYTc5Nw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-14T23:55:59Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-14T23:55:59Z"}, "message": "* pa.h (CONDITIONAL_REGISTER_USAGE): Do not make %r27 a global_reg.\n\nFrom-SVN: r3247", "tree": {"sha": "c1d01996a9558d4960846ca513857295ed5323e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1d01996a9558d4960846ca513857295ed5323e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f66730d8fe6f2523ca16c4e5cb632b2011a797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f66730d8fe6f2523ca16c4e5cb632b2011a797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f66730d8fe6f2523ca16c4e5cb632b2011a797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f66730d8fe6f2523ca16c4e5cb632b2011a797/comments", "author": null, "committer": null, "parents": [{"sha": "4971c587de52d0d0c9eaa6d0f27ea862727f9d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4971c587de52d0d0c9eaa6d0f27ea862727f9d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4971c587de52d0d0c9eaa6d0f27ea862727f9d48"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "9fe8c4f036d2fcd4c05824da011aa0c4b49c3478", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f66730d8fe6f2523ca16c4e5cb632b2011a797/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f66730d8fe6f2523ca16c4e5cb632b2011a797/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=96f66730d8fe6f2523ca16c4e5cb632b2011a797", "patch": "@@ -332,15 +332,12 @@ extern int target_flags;\n /* Make sure everything's fine if we *don't* have a given processor.\n    This assumes that putting a register in fixed_regs will keep the\n    compiler's mitts completely off it.  We don't bother to zero it out\n-   of register classes. \n-\n-   Make register 27 global for now.  We'll undo this kludge after 2.1.  */\n+   of register classes.   */\n \n #define CONDITIONAL_REGISTER_USAGE \\\n {\t\t\t\t\t\t\\\n   int i;\t\t\t\t\t\\\n   HARD_REG_SET x;\t\t\t\t\\\n-  global_regs[27] = 1;\t\t\t\t\\\n   if (!TARGET_SNAKE)\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       COPY_HARD_REG_SET (x, reg_class_contents[(int)SNAKE_FP_REGS]);\\"}]}