{"sha": "021cf768fba5724f6d419fbbd574ca12c76c616c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxY2Y3NjhmYmE1NzI0ZjZkNDE5ZmJiZDU3NGNhMTJjNzZjNjE2Yw==", "commit": {"author": {"name": "Joffrey Huguet", "email": "huguet@adacore.com", "date": "2021-06-10T09:39:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-09T12:35:29Z"}, "message": "[Ada] Fix layout of contracts\n\ngcc/ada/\n\n\t* libgnat/a-strunb.ads, libgnat/a-strunb__shared.ads: Fix layout\n\tin contracts.", "tree": {"sha": "f1324479ceda817ec53a486085042bb39fcf4379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1324479ceda817ec53a486085042bb39fcf4379"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/021cf768fba5724f6d419fbbd574ca12c76c616c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021cf768fba5724f6d419fbbd574ca12c76c616c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/021cf768fba5724f6d419fbbd574ca12c76c616c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021cf768fba5724f6d419fbbd574ca12c76c616c/comments", "author": {"login": "joffreyhuguet", "id": 36951399, "node_id": "MDQ6VXNlcjM2OTUxMzk5", "avatar_url": "https://avatars.githubusercontent.com/u/36951399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joffreyhuguet", "html_url": "https://github.com/joffreyhuguet", "followers_url": "https://api.github.com/users/joffreyhuguet/followers", "following_url": "https://api.github.com/users/joffreyhuguet/following{/other_user}", "gists_url": "https://api.github.com/users/joffreyhuguet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joffreyhuguet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joffreyhuguet/subscriptions", "organizations_url": "https://api.github.com/users/joffreyhuguet/orgs", "repos_url": "https://api.github.com/users/joffreyhuguet/repos", "events_url": "https://api.github.com/users/joffreyhuguet/events{/privacy}", "received_events_url": "https://api.github.com/users/joffreyhuguet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2390451ede49fa09bc0d9692802651aff66ae8a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2390451ede49fa09bc0d9692802651aff66ae8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2390451ede49fa09bc0d9692802651aff66ae8a6"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "13c7612116c871d042d356c7265ac4df15bde0de", "filename": "gcc/ada/libgnat/a-strunb.ads", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021cf768fba5724f6d419fbbd574ca12c76c616c/gcc%2Fada%2Flibgnat%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021cf768fba5724f6d419fbbd574ca12c76c616c/gcc%2Fada%2Flibgnat%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strunb.ads?ref=021cf768fba5724f6d419fbbd574ca12c76c616c", "patch": "@@ -81,7 +81,7 @@ is\n    --------------------------------------------------------\n \n    function To_Unbounded_String\n-     (Source : String) return Unbounded_String\n+     (Source : String)  return Unbounded_String\n    with\n      Post   => Length (To_Unbounded_String'Result) = Source'Length,\n      Global => null;\n@@ -91,8 +91,7 @@ is\n      (Length : Natural) return Unbounded_String\n    with\n      Post   =>\n-       Ada.Strings.Unbounded.Length (To_Unbounded_String'Result)\n-     = Length,\n+       Ada.Strings.Unbounded.Length (To_Unbounded_String'Result) = Length,\n      Global => null;\n    --  Returns an Unbounded_String that represents an uninitialized String\n    --  whose length is Length.\n@@ -524,11 +523,11 @@ is\n    with\n      Pre            =>\n        Low - 1 <= Length (Source)\n-       and then (if High >= Low\n-                 then Low - 1\n-                   <= Natural'Last - By'Length\n-                    - Natural'Max (Length (Source) - High, 0)\n-                 else Length (Source) <= Natural'Last - By'Length),\n+         and then (if High >= Low\n+                   then Low - 1\n+                     <= Natural'Last - By'Length\n+                      - Natural'Max (Length (Source) - High, 0)\n+                   else Length (Source) <= Natural'Last - By'Length),\n      Contract_Cases =>\n        (High >= Low =>\n           Length (Replace_Slice'Result)\n@@ -545,11 +544,11 @@ is\n    with\n      Pre            =>\n        Low - 1 <= Length (Source)\n-       and then (if High >= Low\n-                 then Low - 1\n-                   <= Natural'Last - By'Length\n-                    - Natural'Max (Length (Source) - High, 0)\n-                 else Length (Source) <= Natural'Last - By'Length),\n+         and then (if High >= Low\n+                   then Low - 1\n+                     <= Natural'Last - By'Length\n+                      - Natural'Max (Length (Source) - High, 0)\n+                   else Length (Source) <= Natural'Last - By'Length),\n      Contract_Cases =>\n        (High >= Low =>\n           Length (Source)\n@@ -586,7 +585,7 @@ is\n      Pre    => Position - 1 <= Length (Source)\n                  and then (if New_Item'Length /= 0\n                            then\n-                           New_Item'Length <= Natural'Last - (Position - 1)),\n+                             New_Item'Length <= Natural'Last - (Position - 1)),\n      Post   =>\n        Length (Overwrite'Result)\n      = Natural'Max (Length (Source), Position - 1 + New_Item'Length),\n@@ -600,7 +599,7 @@ is\n      Pre    => Position - 1 <= Length (Source)\n                  and then (if New_Item'Length /= 0\n                            then\n-                           New_Item'Length <= Natural'Last - (Position - 1)),\n+                             New_Item'Length <= Natural'Last - (Position - 1)),\n      Post   =>\n        Length (Source)\n      = Natural'Max (Length (Source)'Old, Position - 1 + New_Item'Length),"}, {"sha": "2091bde01c8a4bcd48def44d46407c9922a0d489", "filename": "gcc/ada/libgnat/a-strunb__shared.ads", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021cf768fba5724f6d419fbbd574ca12c76c616c/gcc%2Fada%2Flibgnat%2Fa-strunb__shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021cf768fba5724f6d419fbbd574ca12c76c616c/gcc%2Fada%2Flibgnat%2Fa-strunb__shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strunb__shared.ads?ref=021cf768fba5724f6d419fbbd574ca12c76c616c", "patch": "@@ -363,9 +363,8 @@ is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    with\n-     Pre    => (if Length (Source) /= 0\n-                then From <= Length (Source))\n-                       and then Pattern'Length /= 0,\n+     Pre    => (if Length (Source) /= 0 then From <= Length (Source))\n+               and then Pattern'Length /= 0,\n      Global => null;\n    pragma Ada_05 (Index);\n \n@@ -376,11 +375,9 @@ is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping_Function) return Natural\n    with\n-     Pre    => (if Length (Source) /= 0\n-                then From <= Length (Source))\n-                       and then Pattern'Length /= 0,\n+     Pre    => (if Length (Source) /= 0 then From <= Length (Source))\n+               and then Pattern'Length /= 0,\n      Global => null;\n-\n    pragma Ada_05 (Index);\n \n    function Index"}]}