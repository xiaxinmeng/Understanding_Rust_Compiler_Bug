{"sha": "2345fe52da74dac58173489e844647d3a94f4ca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0NWZlNTJkYTc0ZGFjNTgxNzM0ODllODQ0NjQ3ZDNhOTRmNGNhOA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-05T15:23:26Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-05T15:23:26Z"}, "message": "re PR fortran/47054 (Compilation error when cray pointers are declared in both host and internal subroutines)\n\n2019-10-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/47045\n\t* decl.c (variable_decl): Do not search parent namespace for symbol.\n\n2019-10-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/47045\n\t* gfortran.dg/pr47054_1.f90: New test\n\t* gfortran.dg/pr47054_2.f90: Ditto.\n\nFrom-SVN: r276627", "tree": {"sha": "c97e0c3f80257bacdf5fbce7c224ef8a89096f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c97e0c3f80257bacdf5fbce7c224ef8a89096f23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2345fe52da74dac58173489e844647d3a94f4ca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2345fe52da74dac58173489e844647d3a94f4ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2345fe52da74dac58173489e844647d3a94f4ca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2345fe52da74dac58173489e844647d3a94f4ca8/comments", "author": null, "committer": null, "parents": [{"sha": "74e4fb1361b89fcca2b713ac79832934a7b3030b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e4fb1361b89fcca2b713ac79832934a7b3030b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e4fb1361b89fcca2b713ac79832934a7b3030b"}], "stats": {"total": 14230, "additions": 14229, "deletions": 1}, "files": [{"sha": "84ee818a49d45f725f3080c9efe3e4a766375752", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2345fe52da74dac58173489e844647d3a94f4ca8", "patch": "@@ -1,3 +1,8 @@\n+2019-10-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/47045\n+\t* decl.c (variable_decl): Do not search parent namespace for symbol.\n+\n 2019-10-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91926"}, {"sha": "9b604c8e7c34b401fb03452b03609bbf87da60e0", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=2345fe52da74dac58173489e844647d3a94f4ca8", "patch": "@@ -2682,7 +2682,7 @@ variable_decl (int elem)\n       then we want to set the type & bail out.  */\n   if (flag_cray_pointer && !gfc_comp_struct (gfc_current_state ()))\n     {\n-      gfc_find_symbol (name, gfc_current_ns, 1, &sym);\n+      gfc_find_symbol (name, gfc_current_ns, 0, &sym);\n       if (sym != NULL && sym->attr.cray_pointee)\n \t{\n \t  m = MATCH_YES;"}, {"sha": "2397eec000f4f8028b2fb917ddd8756ed89173af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14167, "deletions": 0, "changes": 14167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2345fe52da74dac58173489e844647d3a94f4ca8"}, {"sha": "3665edbd72b2ced0b9a8435ab0c8661be745162d", "filename": "gcc/testsuite/gfortran.dg/pr47054_1.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47054_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47054_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47054_1.f90?ref=2345fe52da74dac58173489e844647d3a94f4ca8", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-fcray-pointer\" }\n+! PR fortran/47054\n+subroutine host_sub\n+   implicit none\n+   real xg\n+   pointer (paxg, xg)\n+   call internal_sub\n+   contains \n+      subroutine internal_sub\n+         implicit none\n+         real xg\n+         pointer (paxg, xg)\n+      end subroutine internal_sub\n+end subroutine host_sub"}, {"sha": "3b7c4aaf8158aa3f97c5ab730d4deae7b61b0097", "filename": "gcc/testsuite/gfortran.dg/pr47054_2.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47054_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2345fe52da74dac58173489e844647d3a94f4ca8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47054_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47054_2.f90?ref=2345fe52da74dac58173489e844647d3a94f4ca8", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do compile }\n+! { dg-options \"-fcray-pointer\" }\n+! PR fortran/47054\n+! Code contributed by Deji Akingunola <deji_aking at yahoo dot ca>\n+subroutine host_sub(F_su,F_nk)\n+   implicit none\n+   \n+   integer :: F_nk\n+   real,dimension(F_nk) :: F_su\n+      integer G_ni, G_nj\n+      real*8 G_xg_8, G_yg_8\n+      pointer (paxg_8, G_xg_8(G_ni))\n+      pointer (payg_8, G_yg_8(G_nj))\n+      common / G_p / paxg_8,payg_8\n+      common / G / G_ni, G_nj\n+   \n+   call internal_sub(F_su,F_nk)\n+   return\n+contains \n+   \n+   subroutine internal_sub(F_su,F_nk)\n+      implicit none\n+      integer G_ni, G_nj\n+      real*8 G_xg_8, G_yg_8\n+      pointer (paxg_8, G_xg_8(G_ni))\n+      pointer (payg_8, G_yg_8(G_nj))\n+      common / G_p / paxg_8,payg_8\n+      common / G / G_ni, G_nj\n+     \n+      integer :: F_nk\n+      real,dimension(F_nk) :: F_su \n+      integer k,k2\n+      \n+      k2 = 0\n+      do k = 1, F_nk, 2\n+         k2 = k2+1\n+               F_su(k) = F_su(k) + 1.0\n+      enddo\n+      return\n+   end subroutine internal_sub\n+end subroutine host_sub"}]}