{"sha": "bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM1NGVmOTlhMjJhNGE3N2VmYjdmOGY3OTIzMGE1YTBkM2QzZjRkOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-10-17T07:15:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-10-17T07:15:53Z"}, "message": "pointer-set.c (hash1): Use integer part of 2^64 / phi instead 2^32 / phi if long is 64-bit.\n\n\t* pointer-set.c (hash1): Use integer part of 2^64 / phi\n\tinstead 2^32 / phi if long is 64-bit.\n\nFrom-SVN: r89165", "tree": {"sha": "6f2f989163a99d91fc204c81b3ce32acb271350f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f2f989163a99d91fc204c81b3ce32acb271350f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9596e0648d707e99db00814dbddbb54225f98bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9596e0648d707e99db00814dbddbb54225f98bff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9596e0648d707e99db00814dbddbb54225f98bff"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "91e97316f02bcaa77f512eeaa4d136acf09eddbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8", "patch": "@@ -1,3 +1,8 @@\n+2004-10-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* pointer-set.c (hash1): Use integer part of 2^64 / phi\n+\tinstead 2^32 / phi if long is 64-bit.\n+\n 2004-10-17  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-common.h (enum rid): Remove RID_PTRBASE, RID_PTREXTENT and"}, {"sha": "f8023c7fc6c7b52e37881f54c967030710a9fdef", "filename": "gcc/pointer-set.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8/gcc%2Fpointer-set.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8/gcc%2Fpointer-set.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpointer-set.c?ref=bc54ef99a22a4a77efb7f8f79230a5a0d3d3f4d8", "patch": "@@ -46,8 +46,8 @@ struct pointer_set_t\n    relatively prime to 2^sizeof(size_t).  The result is two words.\n    Discard the most significant word, and return the most significant\n    N bits of the least significant word.  As suggested by Knuth, our\n-   choice for A is the integer part of 2^32 / phi, where phi is the\n-   golden ratio.\n+   choice for A is the integer part of (ULONG_MAX + 1.0) / phi, where phi\n+   is the golden ratio.\n \n    We don't need to do anything special for full-width multiplication\n    because we're only interested in the least significant word of the\n@@ -56,8 +56,16 @@ struct pointer_set_t\n static inline size_t\n hash1 (const void *p, unsigned long max, unsigned long logmax)\n {\n+#if HOST_BITS_PER_LONG == 32\n   const unsigned long A = 0x9e3779b9u;\n-  const unsigned long shift = sizeof(unsigned long) * CHAR_BIT - logmax;\n+#elif HOST_BITS_PER_LONG == 64\n+  const unsigned long A = 0x9e3779b97f4a7c16ul;\n+#else\n+  const double M = (ULONG_MAX + 1.0);\n+  const double B = M / ((sqrt (5) - 1) / 2.0);\n+  const unsigned long A = B - (floor (B / M) * M);\n+#endif\n+  const unsigned long shift = sizeof (unsigned long) * CHAR_BIT - logmax;\n \n   return ((A * (unsigned long) p) >> shift) & (max - 1);\n }"}]}