{"sha": "ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzODJlYmQ4Y2JkMDRhZTlkNmJkMjQ1MDdiMzA3ZjAwZDdmZjViNA==", "commit": {"author": {"name": "Po-Chun Chang", "email": "pchang9@cs.wisc.edu", "date": "2013-07-22T15:20:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-07-22T15:20:11Z"}, "message": "df-problems.c (can_move_insns_across): Exit loop once we find a non-fixed, non-global register.\n\n        * df-problems.c (can_move_insns_across): Exit loop once we\n        find a non-fixed, non-global register.\n\n        * ipa-pure-const.c (propagate_nothrow): Exit loop after\n        setting can_throw.\n\n        * omega.c (omega_eliminate_red): Break after setting red_found.\n        (omega_problem_has_red_equations): Similarly after setting found.\n        (omega_query_variable): Similarly after setting coupled.\n\n        * trans-decl.c (gfc_build_dummy_array_decl): Exit loop after\n        setting PACKED_PARTIAL.\n\nFrom-SVN: r201132", "tree": {"sha": "4674bc8f90b7739914eac2c3df90ba7086e62181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4674bc8f90b7739914eac2c3df90ba7086e62181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/comments", "author": null, "committer": null, "parents": [{"sha": "9b6e6981e12dd37db9eccf38ea4fa46fa0efd8d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6e6981e12dd37db9eccf38ea4fa46fa0efd8d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b6e6981e12dd37db9eccf38ea4fa46fa0efd8d4"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "5f3b8ae527c6dda8b563a13d3001cd8d436b1e58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "patch": "@@ -1,3 +1,15 @@\n+2013-07-22  Chang  <pchang9@cs.wisc.edu>\n+\n+\t* df-problems.c (can_move_insns_across): Exit loop once we\n+\tfind a non-fixed, non-global register.\n+\n+\t* ipa-pure-const.c (propagate_nothrow): Exit loop after\n+\tsetting can_throw.\n+\n+\t* omega.c (omega_eliminate_red): Break after setting red_found.\n+\t(omega_problem_has_red_equations): Similarly after setting found.\n+\t(omega_query_variable): Similarly after setting coupled.\n+\n 2013-07-22  Marek Polacek  <polacek@redhat.com>\n \n \t* gimplify.c: Don't include gimple.h twice."}, {"sha": "e647b5ad0a07a2bffc7c2fbdd437f5e1c026f59a", "filename": "gcc/df-problems.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "patch": "@@ -4040,7 +4040,10 @@ can_move_insns_across (rtx from, rtx to, rtx across_from, rtx across_to,\n \t  if (i < FIRST_PSEUDO_REGISTER\n \t      && ! fixed_regs[i]\n \t      && ! global_regs[i])\n-\t    fail = 1;\n+\t    {\n+\t      fail = 1;\n+\t      break;\n+\t    }\n \t}\n     }\n "}, {"sha": "4ea5d2ee99d7988f269a46e645f38ff4152a4972", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "patch": "@@ -1,3 +1,8 @@\n+2013-07-22  Chang  <pchang9@cs.wisc.edu>\n+\n+\t* trans-decl.c (gfc_build_dummy_array_decl): Exit loop after\n+\tsetting PACKED_PARTIAL.\n+\n 2013-07-22  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-array.c (gfc_array_allocate): Correct memory-leak patch."}, {"sha": "2916b4cc52e5d98f578724823350806a7cbac84b", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "patch": "@@ -975,7 +975,10 @@ gfc_build_dummy_array_decl (gfc_symbol * sym, tree dummy)\n \t\t\t&& as->lower[n]\n \t\t\t&& as->upper[n]->expr_type == EXPR_CONSTANT\n \t\t\t&& as->lower[n]->expr_type == EXPR_CONSTANT))\n-\t\t    packed = PACKED_PARTIAL;\n+\t\t    {\n+\t\t      packed = PACKED_PARTIAL;\n+\t\t      break;\n+\t\t    }\n \t\t}\n \t    }\n \t  else"}, {"sha": "b00ae2374a3a6c460fb0aa16bdcddc7b849d1667", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "patch": "@@ -1431,7 +1431,10 @@ propagate_nothrow (void)\n \t    }\n           for (ie = node->indirect_calls; ie; ie = ie->next_callee)\n \t    if (ie->can_throw_external)\n-\t      can_throw = true;\n+\t      {\n+\t\tcan_throw = true;\n+\t\tbreak;\n+\t      }\n \t  w_info = (struct ipa_dfs_info *) w->symbol.aux;\n \t  w = w_info->next_cycle;\n \t}"}, {"sha": "2443ecb0307182fed38469297a82da7a383fa2dc", "filename": "gcc/omega.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Fomega.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4/gcc%2Fomega.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomega.c?ref=ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "patch": "@@ -2591,7 +2591,10 @@ omega_eliminate_red (omega_pb pb, bool eliminate_all)\n \n   for (red_found = 0, e = pb->num_geqs - 1; e >= 0; e--)\n     if (pb->geqs[e].color == omega_red)\n-      red_found = 1;\n+      {\n+\tred_found = 1;\n+\tbreak;\n+      }\n \n   if (!red_found)\n     {\n@@ -4853,7 +4856,10 @@ omega_problem_has_red_equations (omega_pb pb)\n \n   for (e = pb->num_geqs - 1; e >= 0; e--)\n     if (pb->geqs[e].color == omega_red)\n-      result = true;\n+      {\n+\tresult = true;\n+\tbreak;\n+      }\n \n   if (!result)\n     return false;\n@@ -4906,7 +4912,10 @@ omega_problem_has_red_equations (omega_pb pb)\n \n   for (e = pb->num_geqs - 1; e >= 0; e--)\n     if (pb->geqs[e].color == omega_red)\n-      result = true;\n+      {\n+\tresult = true;\n+\tbreak;\n+      }\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -5251,7 +5260,10 @@ omega_query_variable (omega_pb pb, int i, int *lower_bound, int *upper_bound)\n \n   for (e = pb->num_subs - 1; e >= 0; e--)\n     if (pb->subs[e].coef[i] != 0)\n-      coupled = true;\n+      {\n+\tcoupled = true;\n+\tbreak;\n+      }\n \n   for (e = pb->num_eqs - 1; e >= 0; e--)\n     if (pb->eqs[e].coef[i] != 0)"}]}