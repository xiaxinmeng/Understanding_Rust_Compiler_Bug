{"sha": "6ef471dc8a2197cb24b03f62efc12606630b3541", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVmNDcxZGM4YTIxOTdjYjI0YjAzZjYyZWZjMTI2MDY2MzBiMzU0MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-14T14:25:51Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-14T14:25:51Z"}, "message": "Initial revision\n\nFrom-SVN: r9678", "tree": {"sha": "208708a35e3caa3b65886e37a56267eb15e71a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/208708a35e3caa3b65886e37a56267eb15e71a0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ef471dc8a2197cb24b03f62efc12606630b3541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef471dc8a2197cb24b03f62efc12606630b3541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ef471dc8a2197cb24b03f62efc12606630b3541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef471dc8a2197cb24b03f62efc12606630b3541/comments", "author": null, "committer": null, "parents": [{"sha": "9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3"}], "stats": {"total": 164, "additions": 164, "deletions": 0}, "files": [{"sha": "a22ec1d8c020949c5a9e321a9d2b8a57a6154376", "filename": "gcc/cp/lang-options.h", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ef471dc8a2197cb24b03f62efc12606630b3541/gcc%2Fcp%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ef471dc8a2197cb24b03f62efc12606630b3541/gcc%2Fcp%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-options.h?ref=6ef471dc8a2197cb24b03f62efc12606630b3541", "patch": "@@ -0,0 +1,106 @@\n+/* Definitions for switches for C++.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This is the contribution to the `lang_options' array in gcc.c for\n+   g++.  */\n+\n+  \"-+e0\",\t\t\t/* gcc.c tacks the `-' on the front.  */\n+  \"-+e1\",\n+  \"-+e2\",\n+  \"-faccess-control\",\n+  \"-fno-access-control\",\n+  \"-fall-virtual\",\n+  \"-fno-all-virtual\",\n+  \"-falt-external-templates\",\n+  \"-fno-alt-external-templates\",\n+  \"-fansi-overloading\",\n+  \"-fno-ansi-overloading\",\n+  \"-fcadillac\",\n+  \"-fno-cadillac\",\n+  \"-fcheck-new\",\n+  \"-fno-check-new\",\n+  \"-fconserve-space\",\n+  \"-fno-conserve-space\",\n+  \"-fdefault-inline\",\n+  \"-fno-default-inline\",\n+  \"-frtti\",\n+  \"-fno-rtti\",\n+  \"-felide-constructors\",\n+  \"-fno-elide-constructors\",\n+  \"-fenum-int-equiv\",\n+  \"-fno-enum-int-equiv\",\n+  \"-fexternal-templates\",\n+  \"-fno-external-templates\",\n+  \"-ffor-scope\",\n+  \"-fno-for-scope\",\n+  \"-fgc\",\n+  \"-fno-gc\",\n+  \"-fgnu-keywords\",\n+  \"-fno-gnu-keywords\",\n+  \"-fhandle-exceptions\",\n+  \"-fno-handle-exceptions\",\n+  \"-fhandle-signatures\",\n+  \"-fno-handle-signatures\",\n+  \"-fhuge-objects\",\n+  \"-fno-huge-objects\",\n+  \"-fimplement-inlines\",\n+  \"-fno-implement-inlines\",\n+  \"-fimplicit-templates\",\n+  \"-fno-implicit-templates\",\n+  \"-flabels-ok\",\n+  \"-fno-labels-ok\",\n+  \"-fmemoize-lookups\",\n+  \"-fno-memoize-lookups\",\n+  \"-fnonnull-objects\",\n+  \"-fno-nonnull-objects\",\n+  \"-foperator-names\",\n+  \"-fno-operator-names\",\n+  \"-frepo\",\n+  \"-fno-repo\",\n+  \"-fsave-memoized\",\n+  \"-fno-save-memoized\",\n+  \"-fshort-temps\",\n+  \"-fno-short-temps\",\n+  \"-fstats\",\n+  \"-fno-stats\",\n+  \"-fstrict-prototype\",\n+  \"-fno-strict-prototype\",\n+  \"-fthis-is-variable\",\n+  \"-fno-this-is-variable\",\n+  \"-fvtable-thunks\",\n+  \"-fno-vtable-thunks\",\n+  \"-fxref\",\n+  \"-fno-xref\",\n+\n+  \"-Wreturn-type\",\n+  \"-Wno-return-type\",\n+  \"-Woverloaded-virtual\",\n+  \"-Wno-overloaded-virtual\",\n+  \"-Wtemplate-debugging\",\n+  \"-Wno-template-debugging\",\n+  \"-Wctor-dtor-privacy\",\n+  \"-Wno-ctor-dtor-privacy\",\n+  \"-Wnon-virtual-dtor\",\n+  \"-Wno-non-virtual-dtor\",\n+  \"-Wextern-inline\",\n+  \"-Wno-extern-inline\",\n+  \"-Wreorder\",\n+  \"-Wno-reorder\",\n+  \"-Wsynth\",\n+  \"-Wno-synth\","}, {"sha": "109dcf63c0c96d000160096ebd17d7e2f5187363", "filename": "gcc/cp/lang-specs.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ef471dc8a2197cb24b03f62efc12606630b3541/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ef471dc8a2197cb24b03f62efc12606630b3541/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=6ef471dc8a2197cb24b03f62efc12606630b3541", "patch": "@@ -0,0 +1,58 @@\n+/* Definitions for specs for C++.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This is the contribution to the `default_compilers' array in gcc.c for\n+   g++.  */\n+\n+  {\".cc\", \"@c++\"},\n+  {\".cxx\", \"@c++\"},\n+  {\".cpp\", \"@c++\"},\n+  {\".c++\", \"@c++\"},\n+  {\".C\", \"@c++\"},\n+  {\"@c++\",\n+   \"cpp -lang-c++ %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n+\t%{C:%{!E:%eGNU C++ does not support -C without using -E}}\\\n+\t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n+\t-undef -D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus -D__GNUC_MINOR__=%v2\\\n+\t%{ansi:-trigraphs -$ -D__STRICT_ANSI__} %{!undef:%{!ansi:%p} %P}\\\n+        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{traditional} %{ftraditional:-traditional}\\\n+        %{traditional-cpp:-traditional} %{trigraphs}\\\n+\t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n+        %i %{!M:%{!MM:%{!E:%{!pipe:%g.ii}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n+   \"%{!M:%{!MM:%{!E:cc1plus %{!pipe:%g.ii} %1 %2\\\n+\t\t\t    %{!Q:-quiet} -dumpbase %b.cc %{d*} %{m*} %{a}\\\n+\t\t\t    %{g*} %{O*} %{W*} %{w} %{pedantic*} %{ansi}\\\n+\t\t\t    %{traditional} %{v:-version} %{pg:-p} %{p}\\\n+\t\t\t    %{f*} %{+e*} %{aux-info*}\\\n+\t\t\t    %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n+\t\t\t    %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}}|\\n\\\n+              %{!S:as %a %Y\\\n+\t\t      %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n+                      %{!pipe:%g.s} %A\\n }}}}\"},\n+  {\".ii\", \"@c++-cpp-output\"},\n+  {\"@c++-cpp-output\",\n+   \"%{!M:%{!MM:%{!E:cc1plus %i %1 %2 %{!Q:-quiet} %{d*} %{m*} %{a}\\\n+\t\t\t    %{g*} %{O*} %{W*} %{w} %{pedantic*} %{ansi}\\\n+\t\t\t    %{traditional} %{v:-version} %{pg:-p} %{p}\\\n+\t\t\t    %{f*} %{+e*} %{aux-info*}\\\n+\t\t\t    %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n+\t\t\t    %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n+\t            %{!S:as %a %Y\\\n+\t\t\t    %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n+\t\t\t    %{!pipe:%g.s} %A\\n }}}}\"},"}]}