{"sha": "7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M3MTM3MTQyY2Y4OWJkN2Y1YWJhMGI4ZmE4Mjk4NTJmOGI4YmQ5NA==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2016-08-14T18:19:10Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@gcc.gnu.org", "date": "2016-08-14T18:19:10Z"}, "message": "re PR fortran/70598 (Fortran OpenACC host_data construct ICE)\n\n2016-08-14  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\tPR fortran/70598\n\n\tgcc/fortran/\n\t* openmp.c (resolve_omp_clauses): Adjust use_device clause\n\thandling to only allow pointers and arrays.\n\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/host_data-tree.f95: Adjust to use pointers\n\tin use_device clause.\n\t* gfortran.dg/goacc/uninit-use-device-clause.f95: Likewise.\n\t* gfortran.dg/goacc/list.f95: Adjust to catch\n\t\"neither a POINTER nor an array\" error messages.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/host_data-1.f90: New test.\n\nFrom-SVN: r239457", "tree": {"sha": "670bf5a89694b2fc6c21a4f52a1aae8f2634f51a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/670bf5a89694b2fc6c21a4f52a1aae8f2634f51a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1"}], "stats": {"total": 99, "additions": 81, "deletions": 18}, "files": [{"sha": "e6336ba52d7a99f32259ef0d37961f67f8c7eaa1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -1,3 +1,9 @@\n+2016-08-14  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR fortran/70598\n+\t* openmp.c (resolve_omp_clauses): Adjust use_device clause\n+\thandling to only allow pointers and arrays.\n+\n 2016-08-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/7652"}, {"sha": "f50e6e83d919e92b09b4f5f9cea5826b2604be6f", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -3758,17 +3758,24 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t\t      && CLASS_DATA (n->sym)->attr.allocatable))\n \t\t\tgfc_error (\"ALLOCATABLE object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, &n->where);\n-\t\t      if (n->sym->attr.pointer\n-\t\t\t  || (n->sym->ts.type == BT_CLASS && CLASS_DATA (n->sym)\n-\t\t\t      && CLASS_DATA (n->sym)->attr.class_pointer))\n-\t\t\tgfc_error (\"POINTER object %qs in %s clause at %L\",\n-\t\t\t\t   n->sym->name, name, &n->where);\n+\t\t      if (n->sym->ts.type == BT_CLASS\n+\t\t\t  && CLASS_DATA (n->sym)\n+\t\t\t  && CLASS_DATA (n->sym)->attr.class_pointer)\n+\t\t\tgfc_error (\"POINTER object %qs of polymorphic type in \"\n+\t\t\t\t   \"%s clause at %L\", n->sym->name, name,\n+\t\t\t\t   &n->where);\n \t\t      if (n->sym->attr.cray_pointer)\n \t\t\tgfc_error (\"Cray pointer object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, &n->where);\n-\t\t      if (n->sym->attr.cray_pointee)\n+\t\t      else if (n->sym->attr.cray_pointee)\n \t\t\tgfc_error (\"Cray pointee object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, &n->where);\n+\t\t      else if (n->sym->attr.flavor == FL_VARIABLE\n+\t\t\t       && !n->sym->as\n+\t\t\t       && !n->sym->attr.pointer)\n+\t\t\tgfc_error (\"%s clause variable %qs at %L is neither \"\n+\t\t\t\t   \"a POINTER nor an array\", name,\n+\t\t\t\t   n->sym->name, &n->where);\n \t\t      /* FALLTHRU */\n \t\t  case OMP_LIST_DEVICE_RESIDENT:\n \t\t    check_symbol_not_pointer (n->sym, n->where, name);"}, {"sha": "ee1f86f2ece5347e1701c323dd4e10e6262917a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -1,3 +1,12 @@\n+2016-08-14  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR fortran/70598\n+\t* gfortran.dg/goacc/host_data-tree.f95: Adjust to use pointers\n+\tin use_device clause.\n+\t* gfortran.dg/goacc/uninit-use-device-clause.f95: Likewise.\n+\t* gfortran.dg/goacc/list.f95: Adjust to catch\n+\t\"neither a POINTER nor an array\" error messages.\n+\n 2016-08-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/76342"}, {"sha": "d44ca5870516fbb070391f543fb22f62af7a1654", "filename": "gcc/testsuite/gfortran.dg/goacc/host_data-tree.f95", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fhost_data-tree.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fhost_data-tree.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fhost_data-tree.f95?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -3,9 +3,9 @@\n \n program test\n   implicit none\n-  integer :: i = 1\n+  integer, pointer :: p\n \n-  !$acc host_data use_device(i)\n+  !$acc host_data use_device(p)\n   !$acc end host_data\n end program test\n-! { dg-final { scan-tree-dump-times \"pragma acc host_data use_device_ptr\\\\(i\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"pragma acc host_data use_device_ptr\\\\(p\\\\)\" 1 \"original\" } }"}, {"sha": "87c84085b1386fd42a9ae2e4b0afa8bac6b75556", "filename": "gcc/testsuite/gfortran.dg/goacc/list.f95", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Flist.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Flist.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Flist.f95?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -76,19 +76,19 @@ program test\n   !$acc parallel private (i) firstprivate (i) ! { dg-error \"present on multiple clauses\" }\n   !$acc end parallel\n \n-  !$acc host_data use_device(i)\n+  !$acc host_data use_device(i) ! { dg-error \"neither a POINTER nor an array\" }\n   !$acc end host_data\n \n-  !$acc host_data use_device(c, d)\n+  !$acc host_data use_device(c, d) ! { dg-error \"neither a POINTER nor an array\" }\n   !$acc end host_data\n \n   !$acc host_data use_device(a)\n   !$acc end host_data\n \n-  !$acc host_data use_device(i, j, k, l, a)\n+  !$acc host_data use_device(i, j, k, l, a) ! { dg-error \"neither a POINTER nor an array\" }\n   !$acc end host_data  \n \n-  !$acc host_data use_device (i) use_device (j)\n+  !$acc host_data use_device (i) use_device (j) ! { dg-error \"neither a POINTER nor an array\" }\n   !$acc end host_data\n \n   !$acc host_data use_device ! { dg-error \"Unclassifiable OpenACC directive\" }\n@@ -99,13 +99,17 @@ program test\n \n   !$acc host_data use_device(10) ! { dg-error \"Syntax error\" }\n \n-  !$acc host_data use_device(/b/, /b/) ! { dg-error \"present on multiple clauses\" }\n+  !$acc host_data use_device(/b/, /b/)\n   !$acc end host_data\n+  ! { dg-error \"neither a POINTER nor an array\" \"\" { target *-*-* } 102 }\n+  ! { dg-error \"present on multiple clauses\" \"\" { target *-*-* } 102 }\n \n-  !$acc host_data use_device(i, j, i) ! { dg-error \"present on multiple clauses\" }\n+  !$acc host_data use_device(i, j, i)\n   !$acc end host_data\n+  ! { dg-error \"neither a POINTER nor an array\" \"\" { target *-*-* } 107 }\n+  ! { dg-error \"present on multiple clauses\" \"\" { target *-*-* } 107 }\n \n-  !$acc host_data use_device(p1) ! { dg-error \"POINTER\" }\n+  !$acc host_data use_device(p1)\n   !$acc end host_data\n \n end program test"}, {"sha": "48d08a5a55da798d39472ae9377e41b8b534dccb", "filename": "gcc/testsuite/gfortran.dg/goacc/uninit-use-device-clause.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-use-device-clause.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-use-device-clause.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-use-device-clause.f95?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -2,9 +2,9 @@\n ! { dg-additional-options \"-Wuninitialized\" }\n \n subroutine test\n-  integer :: i\n+  integer, pointer :: p\n \n-  !$acc host_data use_device(i) ! { dg-warning \"is used uninitialized in this function\" }\n+  !$acc host_data use_device(p) ! { dg-warning \"is used uninitialized in this function\" }\n   !$acc end host_data\n end subroutine test\n "}, {"sha": "e15bbc0c4ee25b8e5142db27bce1188da09afe0d", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -1,3 +1,8 @@\n+2016-08-14  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR fortran/70598\n+\t* testsuite/libgomp.oacc-fortran/host_data-1.f90: New test.\n+\n 2016-08-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/58706"}, {"sha": "69a491d9887d0838e27ba4b3cf64306c0815c209", "filename": "libgomp/testsuite/libgomp.oacc-fortran/host_data-1.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fhost_data-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7137142cf89bd7f5aba0b8fa829852f8b8bd94/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fhost_data-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fhost_data-1.f90?ref=7c7137142cf89bd7f5aba0b8fa829852f8b8bd94", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do run }\n+! { dg-additional-options \"-cpp\" }\n+\n+program test\n+  implicit none\n+\n+  integer, target :: i, arr(1000)\n+  integer, pointer :: ip, iph\n+  integer, contiguous, pointer :: parr(:), parrh(:)\n+\n+  ! Assign the same targets\n+  ip => i\n+  parr => arr\n+  iph => i\n+  parrh => arr\n+\n+  !$acc data copyin(i, arr)\n+  !$acc host_data use_device(ip, parr)\n+\n+  ! Test how the pointers compare inside a host_data construct\n+#if ACC_MEM_SHARED\n+  if (.not. associated(ip, iph)) call abort\n+  if (.not. associated(parr, parrh)) call abort\n+#else\n+  if (associated(ip, iph)) call abort\n+  if (associated(parr, parrh)) call abort\n+#endif\n+\n+  !$acc end host_data\n+  !$acc end data\n+\n+end program test"}]}