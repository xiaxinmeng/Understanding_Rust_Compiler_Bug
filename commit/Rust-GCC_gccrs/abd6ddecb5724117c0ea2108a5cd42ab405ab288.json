{"sha": "abd6ddecb5724117c0ea2108a5cd42ab405ab288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJkNmRkZWNiNTcyNDExN2MwZWEyMTA4YTVjZDQyYWI0MDVhYjI4OA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-05-29T13:45:45Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-05-29T13:45:45Z"}, "message": "* config/s390/linux.h (MD_FALLBACK_FRAME_STATE_FOR): New.\n\nFrom-SVN: r53993", "tree": {"sha": "09e37972de4dabcaa3497b63004bcce501519d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09e37972de4dabcaa3497b63004bcce501519d54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abd6ddecb5724117c0ea2108a5cd42ab405ab288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd6ddecb5724117c0ea2108a5cd42ab405ab288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abd6ddecb5724117c0ea2108a5cd42ab405ab288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd6ddecb5724117c0ea2108a5cd42ab405ab288/comments", "author": null, "committer": null, "parents": [{"sha": "da06d85a2ba1ea0484730e25975667ed452a2077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da06d85a2ba1ea0484730e25975667ed452a2077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da06d85a2ba1ea0484730e25975667ed452a2077"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "df4027ffcda1e10e471d2bd3141d07c8f8210c1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd6ddecb5724117c0ea2108a5cd42ab405ab288/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd6ddecb5724117c0ea2108a5cd42ab405ab288/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abd6ddecb5724117c0ea2108a5cd42ab405ab288", "patch": "@@ -1,3 +1,7 @@\n+2002-05-29  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/linux.h (MD_FALLBACK_FRAME_STATE_FOR): New.\n+\n 2002-05-29  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (legitimate_pic_operand_p): Do not"}, {"sha": "f49e8b5db4faea0e8def70f37154f25c263b0238", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd6ddecb5724117c0ea2108a5cd42ab405ab288/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd6ddecb5724117c0ea2108a5cd42ab405ab288/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=abd6ddecb5724117c0ea2108a5cd42ab405ab288", "patch": "@@ -288,4 +288,82 @@ do {                                                                          \\\n     }                                                                         \\\n } while (0)\n \n+/* Do code reading to identify a signal frame, and set the frame\n+   state data appropriately.  See unwind-dw2.c for the structs.  */\n+\n+#define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    unsigned char *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\\n+    long new_cfa_;\t\t\t\t\t\t\t\\\n+    int i_;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    typedef struct \t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+        unsigned long psw_mask;\t\t\t\t\t\t\\\n+        unsigned long psw_addr;\t\t\t\t\t\t\\\n+        unsigned long gprs[16];\t\t\t\t\t\t\\\n+        unsigned int  acrs[16];\t\t\t\t\t\t\\\n+        unsigned int  fpc;\t\t\t\t\t\t\\\n+        unsigned int  __pad;\t\t\t\t\t\t\\\n+        double        fprs[16];\t\t\t\t\t\t\\\n+      } __attribute__ ((__aligned__ (8))) sigregs_;\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    sigregs_ *regs_;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* svc $__NR_sigreturn or svc $__NR_rt_sigreturn  */\t\t\\\n+    if (pc_[0] != 0x0a || (pc_[1] != 119 && pc_[1] != 173))\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* New-style RT frame:  \t\t\t\t\t\t\\\n+\tretcode + alignment (8 bytes)\t\t\t\t\t\\\n+\tsiginfo (128 bytes)\t\t\t\t\t\t\\\n+\tucontext (contains sigregs)  */\t\t\t\t\t\\\n+    if ((CONTEXT)->ra == (CONTEXT)->cfa)\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tstruct ucontext_\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    unsigned long     uc_flags;\t\t\t\t\t\\\n+\t    struct ucontext_ *uc_link;\t\t\t\t\t\\\n+\t    unsigned long     uc_stack[3];\t\t\t\t\\\n+\t    sigregs_          uc_mcontext;\t\t\t\t\\\n+\t  } *uc_ = (CONTEXT)->cfa + 8 + 128;\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tregs_ = &uc_->uc_mcontext;\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* Old-style RT frame and all non-RT frames:\t\t\t\\\n+\told signal mask (8 bytes)\t\t\t\t\t\\\n+\tpointer to sigregs  */\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tregs_ = *(sigregs_ **)((CONTEXT)->cfa + 8);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+      \t\t\t\t\t\t\t\t\t\\\n+    new_cfa_ = regs_->gprs[15] + 16*sizeof(long) + 32;\t\t\t\\\n+    (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n+    (FS)->cfa_reg = 15;\t\t\t\t\t\t\t\\\n+    (FS)->cfa_offset = \t\t\t\t\t\t\t\\\n+      new_cfa_ - (long) (CONTEXT)->cfa + 16*sizeof(long) + 32;\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    for (i_ = 0; i_ < 16; i_++)\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\t(FS)->regs.reg[i_].how = REG_SAVED_OFFSET;\t\t\t\\\n+\t(FS)->regs.reg[i_].loc.offset = \t\t\t\t\\\n+\t  (long)&regs_->gprs[i_] - new_cfa_;\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    for (i_ = 0; i_ < 16; i_++)\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\t(FS)->regs.reg[16+i_].how = REG_SAVED_OFFSET;\t\t\t\\\n+\t(FS)->regs.reg[16+i_].loc.offset = \t\t\t\t\\\n+\t  (long)&regs_->fprs[i_] - new_cfa_;\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* Load return addr from PSW into dummy register 32.  */\t\t\\\n+    (FS)->regs.reg[32].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[32].loc.offset = (long)&regs_->psw_addr - new_cfa_;\t\\\n+    (FS)->retaddr_column = 32;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    goto SUCCESS;\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n #endif"}]}