{"sha": "764169055b5b083f1f2167122c637ddc72c58095", "node_id": "C_kwDOANBUbNoAKDc2NDE2OTA1NWI1YjA4M2YxZjIxNjcxMjJjNjM3ZGRjNzJjNTgwOTU", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2022-04-22T08:32:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-30T08:29:02Z"}, "message": "[Ada] Introduce Opt.CCG_Mode\n\nTo handle code common to the old and the new CCG code generator.\n\ngcc/ada/\n\n\t* gnat1drv.adb, opt.ads, sem_ch7.adb: Introduce CCG_Mode.", "tree": {"sha": "a6dd33e12a1048741b5a0cd431db16aa299755a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6dd33e12a1048741b5a0cd431db16aa299755a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/764169055b5b083f1f2167122c637ddc72c58095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764169055b5b083f1f2167122c637ddc72c58095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/764169055b5b083f1f2167122c637ddc72c58095", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764169055b5b083f1f2167122c637ddc72c58095/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40e01041b3593c72f3d52013953fbfbe0011abb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e01041b3593c72f3d52013953fbfbe0011abb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e01041b3593c72f3d52013953fbfbe0011abb8"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5c6fd92a825a5b96685c8516f5c45a423db2a690", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764169055b5b083f1f2167122c637ddc72c58095/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764169055b5b083f1f2167122c637ddc72c58095/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=764169055b5b083f1f2167122c637ddc72c58095", "patch": "@@ -180,6 +180,7 @@ procedure Gnat1drv is\n       --  Set all flags required when generating C code\n \n       if Generate_C_Code then\n+         CCG_Mode := True;\n          Modify_Tree_For_C := True;\n          Transform_Function_Array := True;\n          Unnest_Subprogram_Mode := True;"}, {"sha": "c2abbcee8efd222e2cbbbe6f4103d2cbec037775", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764169055b5b083f1f2167122c637ddc72c58095/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764169055b5b083f1f2167122c637ddc72c58095/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=764169055b5b083f1f2167122c637ddc72c58095", "patch": "@@ -262,6 +262,9 @@ package Opt is\n    --  Set to True to build, bind and link all the sources of a project file\n    --  (switch -B)\n \n+   CCG_Mode : Boolean := False;\n+   --  Set to True when running as CCG (either via -gnatceg or via -emit-c)\n+\n    Check_Aliasing_Of_Parameters : Boolean := False;\n    --  GNAT\n    --  Set to True to detect whether subprogram parameters and function results"}, {"sha": "03aecc0c9320ed1ab831a97e276f8f5f70ca442e", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764169055b5b083f1f2167122c637ddc72c58095/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764169055b5b083f1f2167122c637ddc72c58095/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=764169055b5b083f1f2167122c637ddc72c58095", "patch": "@@ -409,7 +409,7 @@ package body Sem_Ch7 is\n                      --  should occur, so we need to catch all cases where the\n                      --  subprogram may be inlined by the client.\n \n-                     if not Generate_C_Code\n+                     if not CCG_Mode\n                        and then (Is_Inlined (Decl_Id)\n                                   or else Has_Pragma_Inline (Decl_Id))\n                      then\n@@ -431,7 +431,7 @@ package body Sem_Ch7 is\n                      --  unless we generate C code since inlining is then\n                      --  handled by the C compiler.\n \n-                     if not Generate_C_Code\n+                     if not CCG_Mode\n                        and then (Is_Inlined (Decl_Id)\n                                   or else Has_Pragma_Inline (Decl_Id))\n                      then"}]}