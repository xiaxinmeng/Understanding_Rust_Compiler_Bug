{"sha": "d90f84404cadb75051a6ff334af6b5c5fc252937", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwZjg0NDA0Y2FkYjc1MDUxYTZmZjMzNGFmNmI1YzVmYzI1MjkzNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-29T07:30:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-29T07:30:47Z"}, "message": "re PR tree-optimization/66677 (ICE: in vect_transform_stmt, at tree-vect-stmts.c:7626)\n\n2015-06-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66677\n\t* tree-vect-stmts.c (vect_transform_stmt): Make assert about\n\tSTMT_VINFO_VEC_STMT clobbering less strict.\n\n\t* gcc.dg/vect/pr66677.c: New testcase.\n\nFrom-SVN: r225112", "tree": {"sha": "b8cf91806f7b221330906b5310b2c51e8c0885aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8cf91806f7b221330906b5310b2c51e8c0885aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d90f84404cadb75051a6ff334af6b5c5fc252937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90f84404cadb75051a6ff334af6b5c5fc252937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90f84404cadb75051a6ff334af6b5c5fc252937", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90f84404cadb75051a6ff334af6b5c5fc252937/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04ab3d3aeb91e3601137ed3f2ed91b8815e3d8d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ab3d3aeb91e3601137ed3f2ed91b8815e3d8d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04ab3d3aeb91e3601137ed3f2ed91b8815e3d8d4"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "d819b253ec93880eab299f7f3ad6e25fe34b430a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d90f84404cadb75051a6ff334af6b5c5fc252937", "patch": "@@ -1,3 +1,9 @@\n+2015-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66677\n+\t* tree-vect-stmts.c (vect_transform_stmt): Make assert about\n+\tSTMT_VINFO_VEC_STMT clobbering less strict.\n+\n 2015-06-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/64130"}, {"sha": "b4bd5dae784e719ea00eefeed7d1a77ed17445e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d90f84404cadb75051a6ff334af6b5c5fc252937", "patch": "@@ -1,3 +1,8 @@\n+2015-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66677\n+\t* gcc.dg/vect/pr66677.c: New testcase.\n+\n 2015-06-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/64130"}, {"sha": "b95ac46d576dc91f3508eb85c4b591771e4f9958", "filename": "gcc/testsuite/gcc.dg/vect/pr66677.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66677.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66677.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66677.c?ref=d90f84404cadb75051a6ff334af6b5c5fc252937", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-msse4\" { target x86_64-*-* i?86-*-* } } */\n+\n+int *a, *b;\n+void fn1(char *p1)\n+{\n+  int x;\n+  for (; x; x += 2)\n+    {\n+      a[x] = p1[0];\n+      a[x + 1] = 0;\n+      b[x] = b[x + 1] = p1[1];\n+      p1 += 4;\n+    }\n+}"}, {"sha": "6592be2e884d83f81b2a1160462d1be5d0779e49", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f84404cadb75051a6ff334af6b5c5fc252937/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=d90f84404cadb75051a6ff334af6b5c5fc252937", "patch": "@@ -7620,14 +7620,8 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n   /* Verify SLP vectorization doesn't mess with STMT_VINFO_VEC_STMT.\n      This would break hybrid SLP vectorization.  */\n   if (slp_node)\n-    {\n-      if (PURE_SLP_STMT (stmt_info))\n-\tgcc_assert (!old_vec_stmt && !vec_stmt\n-\t\t    && !STMT_VINFO_VEC_STMT (stmt_info));\n-      else if (HYBRID_SLP_STMT (stmt_info))\n-\tgcc_assert (!vec_stmt\n-\t\t    && STMT_VINFO_VEC_STMT (stmt_info) == old_vec_stmt);\n-    }\n+    gcc_assert (!vec_stmt\n+\t\t&& STMT_VINFO_VEC_STMT (stmt_info) == old_vec_stmt);\n \n   /* Handle inner-loop stmts whose DEF is used in the loop-nest that\n      is being vectorized, but outside the immediately enclosing loop.  */"}]}