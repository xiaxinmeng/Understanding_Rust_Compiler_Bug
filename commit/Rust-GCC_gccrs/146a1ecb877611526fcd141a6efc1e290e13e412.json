{"sha": "146a1ecb877611526fcd141a6efc1e290e13e412", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ2YTFlY2I4Nzc2MTE1MjZmY2QxNDFhNmVmYzFlMjkwZTEzZTQxMg==", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@redhat.com", "date": "2003-11-20T22:44:01Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2003-11-20T22:44:01Z"}, "message": "GdkClasspathFontPeerMetrics.java: New file.\n\n2003-11-17  Graydon Hoare  <graydon@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java: New file.\n\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java\n\t(GdkFontLineMetrics): New inner class.\n\t(getLineMetrics): Return new GdkFontLineMetrics.\n\t(getFontMetrics): Return new GdkClasspathFontPeerMetrics.\n\t(layoutGlyphVector): Create GdkGlyphVector.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java (stateStack): New member.\n\t(GdkGraphics2D): Initialize state via mathod calls.\n\t(cairoSetMatrix, cairoShowGlyphs): Simplify native calls.\n\t(cairoTranslate, cairoScale, cairoRotate): Remove.\n\t(various methods): use setTransform for special transform cases.\n\t(DrawState): New inner class.\n\t(stateSave): New method.\n\t(stateRestore): New method.\n\t(various methods): use stateSave, stateRestore.\n\t(getClipInDevSpace): New method.\n\t(clip, clipRect, setClip, getClip, getClipBounds):\n\tFollow spec more closely.\n\t(getTransform): Return clone of transform.\n\t(setStroke): Set linewidth to passed width / 2.0.\n\t(setPaintMode): Set SrcOver rather than Xor.\n\t(setColor): Set paint to passed color.\n\t(drawRaster, drawImage, PainterThread, drawPixels): Take affine\n\ttransform from image to user space.\n\t(drawRenderedImage, drawRenderableImage): Implement.\n\t(getFontRenderContext, getFontMetrics, drawString, getFont):\n\tImplement\n\t(drawArc, drawOval, drawRoundRect, fillArc, fillOval, fillRoundRect):\n\tImplement.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n\tMatch changes to java side.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c:\n\tRelease resources.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c:\n\tDon't use pango for metrics.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c:\n\tNew file.\n\nFrom-SVN: r73776", "tree": {"sha": "6393cb9c46b692380d17ed826cc98c7cbca141a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6393cb9c46b692380d17ed826cc98c7cbca141a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/146a1ecb877611526fcd141a6efc1e290e13e412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/146a1ecb877611526fcd141a6efc1e290e13e412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/146a1ecb877611526fcd141a6efc1e290e13e412", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/146a1ecb877611526fcd141a6efc1e290e13e412/comments", "author": null, "committer": null, "parents": [{"sha": "531547e90e1394313f68e2c44624638f79317137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531547e90e1394313f68e2c44624638f79317137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/531547e90e1394313f68e2c44624638f79317137"}], "stats": {"total": 1090, "additions": 802, "deletions": 288}, "files": [{"sha": "7bbf92be3a967dc41481f3634001522f2e64a482", "filename": "libjava/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -1,3 +1,43 @@\n+2003-11-17  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java: New file.\n+\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java \n+\t(GdkFontLineMetrics): New inner class.\n+\t(getLineMetrics): Return new GdkFontLineMetrics.\n+\t(getFontMetrics): Return new GdkClasspathFontPeerMetrics.\n+\t(layoutGlyphVector): Create GdkGlyphVector.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java (stateStack): New member.\n+\t(GdkGraphics2D): Initialize state via mathod calls.\n+\t(cairoSetMatrix, cairoShowGlyphs): Simplify native calls.\n+\t(cairoTranslate, cairoScale, cairoRotate): Remove.\n+\t(various methods): use setTransform for special transform cases.\n+\t(DrawState): New inner class.\n+\t(stateSave): New method.\n+\t(stateRestore): New method.\n+\t(various methods): use stateSave, stateRestore.\n+\t(getClipInDevSpace): New method.\n+\t(clip, clipRect, setClip, getClip, getClipBounds): \n+\tFollow spec more closely.\n+\t(getTransform): Return clone of transform.\n+\t(setStroke): Set linewidth to passed width / 2.0.\n+\t(setPaintMode): Set SrcOver rather than Xor.\n+\t(setColor): Set paint to passed color.\n+\t(drawRaster, drawImage, PainterThread, drawPixels): Take affine\n+\ttransform from image to user space.\n+\t(drawRenderedImage, drawRenderableImage): Implement.\n+\t(getFontRenderContext, getFontMetrics, drawString, getFont): \n+\tImplement\n+\t(drawArc, drawOval, drawRoundRect, fillArc, fillOval, fillRoundRect): \n+\tImplement.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c: \n+\tMatch changes to java side.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c: \n+\tRelease resources.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c: \n+\tDon't use pango for metrics.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c: \n+\tNew file.\n+\n 2003-11-19  Guilhem Lavaux <guilhem@kaffe.org>\n \t    Jim Pick  <jim@kaffe.org>\n "}, {"sha": "ca262890bb5772e8c75df7515240fede3c77f6fc", "filename": "libjava/gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java", "status": "modified", "additions": 59, "deletions": 5, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkClasspathFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkClasspathFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkClasspathFontPeer.java?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -49,6 +49,7 @@\n import java.util.StringTokenizer;\n import java.text.CharacterIterator;\n import java.text.AttributedCharacterIterator;\n+import java.text.StringCharacterIterator;\n import java.awt.font.TextAttribute;\n import gnu.classpath.Configuration;\n import gnu.java.awt.peer.ClasspathFontPeer;\n@@ -180,10 +181,56 @@ public byte getBaselineFor (Font font, char c)\n     throw new UnsupportedOperationException ();\n   }\n \n+  protected class GdkFontLineMetrics extends LineMetrics\n+  {\n+    FontMetrics fm;\n+    int nchars; \n+\n+    public GdkFontLineMetrics (FontMetrics m, int n)\n+    {\n+      fm = m;\n+      nchars = n;\n+    }\n+\n+    public float getAscent()\n+    {\n+      return (float) fm.getAscent ();\n+    }\n+  \n+    public int getBaselineIndex()\n+    {\n+      return Font.ROMAN_BASELINE;\n+    }\n+    \n+    public float[] getBaselineOffsets()\n+    {\n+      return new float[3];\n+    }\n+    \n+    public float getDescent()\n+    {\n+      return (float) fm.getDescent ();\n+    }\n+    \n+    public float getHeight()\n+    {\n+      return (float) fm.getHeight ();\n+    }\n+    \n+    public float getLeading() { return 0.f; }    \n+    public int getNumChars() { return nchars; }\n+    public float getStrikethroughOffset() { return 0.f; }    \n+    public float getStrikethroughThickness() { return 0.f; }  \n+    public float getUnderlineOffset() { return 0.f; }\n+    public float getUnderlineThickness() { return 0.f; }\n+\n+  }\n+\n+\n   public LineMetrics getLineMetrics (Font font, CharacterIterator ci, \n                                      int begin, int limit, FontRenderContext rc)\n   {\n-    throw new UnsupportedOperationException ();\n+    return new GdkFontLineMetrics (getFontMetrics (font), limit - begin);\n   }\n \n   public Rectangle2D getMaxCharBounds (Font font, FontRenderContext rc)\n@@ -214,25 +261,32 @@ public Rectangle2D getStringBounds (Font font, CharacterIterator ci,\n \n   public boolean hasUniformLineMetrics (Font font)\n   {\n-    throw new UnsupportedOperationException ();\n+    return true;\n   }\n \n   public GlyphVector layoutGlyphVector (Font font, FontRenderContext frc, \n                                         char[] chars, int start, int limit, \n                                         int flags)\n   {\n-    throw new UnsupportedOperationException ();  \n+    int nchars = (limit - start) + 1;\n+    char[] nc = new char[nchars];\n+\n+    for (int i = 0; i < nchars; ++i)\n+      nc[i] = chars[start + i];\n+\n+    return createGlyphVector (font, frc, \n+                              new StringCharacterIterator (new String (nc)));\n   }\n \n   public LineMetrics getLineMetrics (Font font, String str, \n                                      FontRenderContext frc)\n   {\n-    throw new UnsupportedOperationException();\n+    return new GdkFontLineMetrics (getFontMetrics (font), str.length ());\n   }\n \n   public FontMetrics getFontMetrics (Font font)\n   {\n-    throw new UnsupportedOperationException();\n+    return new GdkClasspathFontPeerMetrics (font);\n   }\n \n }"}, {"sha": "2f019e4dbc4baac537a9da5b9ccebfda312dd217", "filename": "libjava/gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkClasspathFontPeerMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkClasspathFontPeerMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkClasspathFontPeerMetrics.java?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -0,0 +1,116 @@\n+/* GdkClasspathFontPeerMetrics.java\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+\n+   This file is part of GNU Classpath.\n+\n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+\n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+\n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.gtk;\n+\n+import java.awt.*;\n+import java.awt.font.*;\n+import java.awt.geom.*;\n+\n+public class GdkClasspathFontPeerMetrics extends FontMetrics\n+{\n+  private final int native_state = GtkGenericPeer.getUniqueInteger();\n+\n+  private static final int ASCENT = 0, MAX_ASCENT = 1, \n+                       DESCENT = 2, MAX_DESCENT = 3, \n+                       MAX_ADVANCE = 4;\n+\n+  private int[] metrics;\n+  private native int[] initState (Object font);\n+\n+  public GdkClasspathFontPeerMetrics (Font font)\n+  {\n+    super (font);\n+    metrics = initState (font.getPeer());\n+  }\n+\n+  public int stringWidth (String str)\n+  {\n+    GlyphVector gv = font.createGlyphVector \n+      (new FontRenderContext \n+       (new AffineTransform (), false, false), str);\n+    Rectangle2D r = gv.getVisualBounds ();\n+    return (int) r.getWidth ();\n+  }\n+\n+  public int charWidth (char ch)\n+  {\n+    return stringWidth (new String (new char[] { ch }));\n+  }\n+\n+  public int charsWidth (char data[], int off, int len)\n+  {\n+    return stringWidth (new String (data, off, len));\n+  }\n+\n+  /* \n+     Sun's Motif implementation always returns 0 or 1 here (???), but\n+     going by the X11 man pages, it seems as though we should return\n+     font.ascent + font.descent.\n+  */\n+  public int getLeading ()\n+  {\n+    return 1;\n+//      return metrics[ASCENT] + metrics[DESCENT];\n+  }\n+\n+  public int getAscent ()\n+  {\n+    return metrics[ASCENT];\n+  }\n+\n+  public int getMaxAscent ()\n+  {\n+    return metrics[MAX_ASCENT];\n+  }\n+\n+  public int getDescent ()\n+  {\n+    return metrics[DESCENT];\n+  }\n+\n+  public int getMaxDescent ()\n+  {\n+    return metrics[MAX_DESCENT];\n+  }\n+\n+  public int getMaxAdvance ()\n+  {\n+    return metrics[MAX_ADVANCE];\n+  }\n+}"}, {"sha": "036e40f972d85a2651e2756327a0433e7a84ebbb", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 275, "deletions": 169, "changes": 444, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -47,6 +47,7 @@\n \n import java.text.AttributedCharacterIterator;\n import java.util.Map;\n+import java.util.Stack;\n import java.lang.Integer;\n import gnu.java.awt.ClasspathToolkit;\n import gnu.java.awt.peer.ClasspathFontPeer;\n@@ -78,6 +79,8 @@ public class GdkGraphics2D extends Graphics2D\n   private AffineTransform transform;\n   private GtkComponentPeer component;\n   private Font font;  \n+\n+  private Stack stateStack;\n   \n   native private int[] initState (GtkComponentPeer component);\n   native private void initState (int width, int height);\n@@ -122,33 +125,50 @@ public Graphics create (int x, int y, int width, int height)\n       clip = new Rectangle (g.getClipBounds ());\n \n     if (g.transform == null)\n-      transform = null;\n+      transform = AffineTransform.getTranslateInstance (0.5, 0.5);\n     else\n       transform = new AffineTransform (g.transform);\n \n+    font = g.font;\n     component = g.component;\n     copyState (g);\n \n     setColor (fg);\n+    setBackground (bg);\n+    setPaint (paint);\n+    setStroke (stroke);\n     setClip (clip);\n     setTransform (transform);\n+    stateStack = new Stack();\n   }\n \n   GdkGraphics2D (int width, int height)\n   {\n     initState (width, height);\n-    bg = Color.black;\n-    fg = Color.black;\n-    transform = new AffineTransform ();\n+\n+    setColor(Color.black);\n+    setBackground (Color.black);\n+    setPaint (getColor());\n+    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n+    setTransform (AffineTransform.getTranslateInstance (0.5, 0.5));\n+    setStroke (new BasicStroke ());\n+\n+    stateStack = new Stack();\n   }\n \n   GdkGraphics2D (GtkComponentPeer component)\n   {\n     this.component = component;\n     int rgb[] = initState (component);\n-    fg = new Color (rgb[0], rgb[1], rgb[2]);\n-    bg = new Color (rgb[3], rgb[4], rgb[5]);\n-    transform = new AffineTransform ();\n+\n+    setColor (new Color (rgb[0], rgb[1], rgb[2]));\n+    setBackground (new Color (rgb[3], rgb[4], rgb[5]));\n+    setPaint (getColor());\n+    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n+    setTransform (AffineTransform.getTranslateInstance (0.5, 0.5));\n+    setStroke (new BasicStroke ());\n+\n+    stateStack = new Stack ();\n   }\n \n \n@@ -160,7 +180,7 @@ public Graphics create (int x, int y, int width, int height)\n   private native void gdkDrawDrawable (GdkGraphics2D other, int x, int y);\n \n   // drawing utility methods\n-  private native void drawPixels (int pixels[], int w, int h, int stride);\n+  private native void drawPixels (int pixels[], int w, int h, int stride, double i2u[]);\n   private native void setTexturePixels (int pixels[], int w, int h, int stride);\n   private native void setGradient (double x1, double y1,\n                                    double x2, double y2,\n@@ -171,13 +191,10 @@ private native void setGradient (double x1, double y1,\n   // simple passthroughs to cairo\n   private native void cairoSave ();\n   private native void cairoRestore ();\n-  private native void cairoSetMatrix (double m00, double m10, \n-                                      double m01, double m11,\n-                                      double m02, double m12);\n+  private native void cairoSetMatrix (double m[]);\n   private native void cairoSetFont (GdkClasspathFontPeer peer);\n   private native void cairoShowGlyphs (int codes[],\n-                                       float positions[],\n-                                       int nglyphs);\n+                                       float positions[]);\n   private native void cairoSetOperator (int cairoOperator);\n   private native void cairoSetRGBColor (double red, double green, double blue);\n   private native void cairoSetAlpha (double alpha);\n@@ -187,20 +204,17 @@ private native void cairoShowGlyphs (int codes[],\n   private native void cairoSetLineJoin (int cairoLineJoin);\n   private native void cairoSetDash (double dashes[], int ndash, double offset);\n   private native void cairoSetMiterLimit (double limit);\n-  private native void cairoTranslate (double tx, double ty);\n-  private native void cairoScale (double sx, double sy);\n-  private native void cairoRotate (double angle);\n   private native void cairoNewPath ();\n   private native void cairoMoveTo (double x, double y);\n   private native void cairoLineTo (double x, double y);\n   private native void cairoCurveTo (double x1, double y1,\n-                                 double x2, double y2,\n-                                 double x3, double y3);  \n+                                    double x2, double y2,\n+                                    double x3, double y3);  \n   private native void cairoRelMoveTo (double dx, double dy);\n   private native void cairoRelLineTo (double dx, double dy);\n   private native void cairoRelCurveTo (double dx1, double dy1,\n-                                    double dx2, double dy2,\n-                                    double dx3, double dy3);\n+                                       double dx2, double dy2,\n+                                       double dx3, double dy3);\n   private native void cairoRectangle (double x, double y, \n                                    double width, double height);\n   private native void cairoClosePath ();\n@@ -213,6 +227,51 @@ private native void cairoRectangle (double x, double y,\n   ////// General Drawing Support Methods //////\n   /////////////////////////////////////////////\n \n+    private class DrawState\n+    {\n+\tprivate Paint paint;\n+\tprivate Stroke stroke;\n+\tprivate Color fg;\n+\tprivate Color bg;\n+\tprivate Shape clip;\n+\tprivate AffineTransform transform;\n+\tprivate Font font;  \n+\tDrawState (GdkGraphics2D g)\n+\t{\n+\t    this.paint = g.paint;\n+\t    this.stroke = g.stroke;\n+\t    this.fg = g.fg;\n+\t    this.bg = g.bg;\n+\t    this.clip = g.clip;\n+\t    if (g.transform != null)\n+\t\tthis.transform = (AffineTransform) g.transform.clone();\n+\t    this.font = g.font;\n+\t}\n+\tpublic void restore(GdkGraphics2D g)\n+\t{\n+\t    g.paint = this.paint;\n+\t    g.stroke = this.stroke;\n+\t    g.fg = this.fg;\n+\t    g.bg = this.bg;\n+\t    g.clip = this.clip;\n+\t    g.transform = this.transform;\n+\t    g.font = this.font;\n+\t}\n+    }\n+    \n+    private void stateSave ()\n+    {\n+\tstateStack.push (new DrawState (this));\n+\tcairoSave ();\n+    }\n+\n+    private void stateRestore ()\n+    {\n+\t((DrawState)(stateStack.pop ())).restore (this);\n+\tcairoRestore ();\n+    }\n+\n+\n   double x;\n   double y;\n   private void setPos (double nx, double ny)\n@@ -288,7 +347,7 @@ public void draw (Shape s)\n         return;\n       }\n \n-    cairoSave ();\n+    stateSave ();\n     cairoNewPath ();\n     if (s instanceof Rectangle2D)\n       {\n@@ -298,12 +357,12 @@ public void draw (Shape s)\n     else      \n       walkPath (s.getPathIterator (null));\n     cairoStroke ();\n-    cairoRestore ();\n+    stateRestore ();\n   }\n \n-  public void fill(Shape s)\n+  public void fill (Shape s)\n   {\n-    cairoSave();\n+    stateSave();\n     cairoNewPath ();\n     if (s instanceof Rectangle2D)\n       {\n@@ -313,23 +372,40 @@ public void fill(Shape s)\n     else      \n       walkPath (s.getPathIterator (null));\n     cairoFill ();\n-    cairoRestore ();\n+    stateRestore ();\n   }\n \n   public void clip (Shape s)\n   {\n-    clip = s;\n-    cairoNewPath ();\n-    if (s instanceof Rectangle2D)\n-      {\n-        Rectangle2D r = (Rectangle2D)s;\n-        cairoRectangle (r.getX (), r.getY (), \n-                        r.getWidth (), r.getHeight ());\n-      }\n-    else      \n-      walkPath (s.getPathIterator (null));\n-    cairoClosePath ();\n-    cairoClip ();\n+      // update it\n+\n+      if (clip == null || s == null)\n+\t  clip = s;\n+      else if (s instanceof Rectangle2D\n+\t       && clip instanceof Rectangle2D)\n+\t  {\n+\t      Rectangle2D r = (Rectangle2D)s;\n+\t      Rectangle2D curr = (Rectangle2D)clip;\n+\t      clip = curr.createIntersection (r);\n+\t  }\n+      else\n+\t  throw new UnsupportedOperationException ();\n+\n+      // draw it\n+      if (clip != null)\n+\t  {\n+\t      cairoNewPath ();\n+\t      if (clip instanceof Rectangle2D)\n+\t\t  {\n+\t\t      Rectangle2D r = (Rectangle2D)clip;\n+\t\t      cairoRectangle (r.getX (), r.getY (), \n+\t\t\t\t      r.getWidth (), r.getHeight ());\n+\t\t  }\n+\t      else\n+\t\t  walkPath (clip.getPathIterator (null));\n+\t      cairoClosePath ();\n+\t      cairoClip ();\n+\t  }\n   }\n \n   public Paint getPaint ()\n@@ -339,11 +415,14 @@ public Paint getPaint ()\n \n   public AffineTransform getTransform ()\n   {\n-    return transform;\n+      return (AffineTransform) transform.clone ();\n   }\n \n   public void setPaint (Paint p)\n   {\n+    if (paint == null)\n+        return;\n+      \n     paint = p;\n     if (paint instanceof Color)\n       {\n@@ -385,7 +464,7 @@ public void setTransform (AffineTransform tx)\n       {\n         double m[] = new double[6];\n         transform.getMatrix (m);\n-        cairoSetMatrix (m[0], m[1], m[2], m[3], m[4], m[5]);\n+        cairoSetMatrix (m);\n       }\n   }\n \n@@ -400,39 +479,34 @@ public void transform (AffineTransform tx)\n \n   public void rotate(double theta)\n   {\n-    if (transform != null)\n-      transform.rotate (theta);\n-    cairoRotate (theta);\n+    transform (AffineTransform.getRotateInstance (theta));\n   }\n \n   public void rotate(double theta, double x, double y)\n   {\n-    if (transform != null)\n-      transform.rotate (theta, x, y);\n-    cairoTranslate (x, y);\n-    cairoRotate (theta);\n-    cairoTranslate (-x, -y);\n+    transform (AffineTransform.getRotateInstance (theta, x, y));\n   }\n \n   public void scale(double sx, double sy)\n   {\n-    if (transform != null)\n-      transform.scale (sx, sy);\n-    cairoScale (sx, sy);\n+    transform (AffineTransform.getScaleInstance (sx, sy));\n   }\n \n   public void translate (double tx, double ty)\n   {\n-    if (transform != null)\n-      transform.translate (tx, ty);\n-    cairoTranslate (tx, ty);\n+    transform (AffineTransform.getTranslateInstance (tx, ty));\n   }\n \n   public void translate (int x, int y)\n   {\n     translate ((double) x, (double) y);\n   }\n \n+  public void shear(double shearX, double shearY)\n+  {\n+    transform (AffineTransform.getShearInstance (shearX, shearY));\n+  }\n+\n   public Stroke getStroke()\n   {\n     return stroke;\n@@ -445,7 +519,7 @@ public void setStroke (Stroke st)\n       {\n         BasicStroke bs = (BasicStroke) stroke;\n         cairoSetLineCap (bs.getEndCap());\n-        cairoSetLineWidth (bs.getLineWidth());\n+        cairoSetLineWidth (bs.getLineWidth() / 2.0);\n         cairoSetLineJoin (bs.getLineJoin());\n         cairoSetMiterLimit (bs.getMiterLimit());\n         float dashes[] = bs.getDashArray();\n@@ -467,7 +541,7 @@ public void setStroke (Stroke st)\n \n   public void setPaintMode () \n   { \n-    setComposite (java.awt.AlphaComposite.Xor); \n+    setComposite (java.awt.AlphaComposite.SrcOver); \n   }\n \n   public void setXORMode (Color c) \n@@ -478,6 +552,7 @@ public void setXORMode (Color c)\n   public void setColor (Color c)\n   {\n     fg = c;\n+    paint = c;\n     cairoSetRGBColor (fg.getRed() / 255.0, \n                       fg.getGreen() / 255.0, \n                       fg.getBlue() / 255.0);\n@@ -491,29 +566,12 @@ public Color getColor ()\n \n   public void clipRect (int x, int y, int width, int height)\n   {\n-    // this is *slightly* different than all the other clip functions: it\n-    // intersects the clip area with the new clip rectangle. obviously.  of\n-    // course, since Shape doesn't *have* any way of intersecting with a\n-    // rectangle, we will promote the current clipping region to its\n-    // bounding rectangle and then intersect with that.\n-    if (clip == null)\n-      {\n-        cairoNewPath ();\n-        cairoRectangle (x, y, width, height);\n-        cairoClosePath ();\n-        cairoClip ();\n-        clip = new Rectangle (x, y, width, height);\n-      }\n-    else\n-      {\n-        clip (clip.getBounds ().intersection \n-              (new Rectangle (x, y, width, height)));\n-      }\n+      clip (new Rectangle (x, y, width, height));\n   }\n \n   public Shape getClip ()\n   {\n-    return clip;\n+    return getClipInDevSpace ();\n   }\n \n   public Rectangle getClipBounds ()\n@@ -524,13 +582,32 @@ public Rectangle getClipBounds ()\n       return clip.getBounds ();\n   }\n \n+    protected Rectangle2D getClipInDevSpace ()\n+    {\n+\tRectangle2D uclip = clip.getBounds2D ();\n+\tif (transform == null)\n+\t    return uclip;\n+\telse\n+\t    {\n+\t\tPoint2D pos = transform.transform (new Point2D.Double(uclip.getX (), \n+\t\t\t\t\t\t\t\t      uclip.getY ()), \n+\t\t\t\t\t\t   (Point2D)null);\t\t\n+\t\tPoint2D extent = transform.deltaTransform (new Point2D.Double(uclip.getWidth (), \n+\t\t\t\t\t\t\t\t\t      uclip.getHeight ()), \n+\t\t\t\t\t\t\t   (Point2D)null);\n+\t\treturn new Rectangle2D.Double (pos.getX (), pos.getY (),\n+\t\t\t\t\t       extent.getX (), extent.getY ());\t      \n+\t    }\n+    }\n+\n   public void setClip (int x, int y, int width, int height)\n   {\n-    cairoNewPath ();\n-    cairoRectangle (x, y, width, height);\n-    cairoClosePath ();\n-    cairoClip ();\n-    clip = new Rectangle (x, y, width, height);\n+      cairoNewPath ();\n+      cairoRectangle (x, y, width, height);\n+      cairoClosePath ();\n+      cairoClip ();\n+      clip = new Rectangle2D.Double ((double)x, (double)y, \n+\t\t\t\t     (double)width, (double)height);\n   }\n \n   public void setClip (Shape s)\n@@ -558,7 +635,7 @@ public void draw3DRect(int x, int y, int width,\n     double y1 = (double) y;\n     double y2 = (double) y + height;\n \n-    cairoSave ();\n+    stateSave ();\n     \n     cairoNewPath ();\n     setColor (light);\n@@ -574,9 +651,7 @@ public void draw3DRect(int x, int y, int width,\n     cairoLineTo (x2, y2);\n     cairoStroke ();\n     \n-    cairoRestore ();    \n-    setColor (std);\n-\n+    stateRestore ();    \n   }\n \n   public void fill3DRect(int x, int y, int width, \n@@ -594,15 +669,15 @@ public void fill3DRect(int x, int y, int width,\n       \n     draw3DRect (x, y, width, height, raised);\n     \n-    cairoSave ();\n-    cairoTranslate (step/2.0, step/2.0);\n+    stateSave ();\n+    translate (step/2.0, step/2.0);\n     cairoNewPath ();\n     cairoRectangle ((double) x, (double) y, \n                     ((double) width) - step, \n                     ((double) height) - step );\n     cairoClosePath ();\n     cairoFill ();\n-    cairoRestore ();\n+    stateRestore ();\n   }\n \n \n@@ -618,7 +693,7 @@ public void fillRect (int x, int y, int width, int height)\n \n   public void clearRect (int x, int y, int width, int height)\n   {\n-    cairoSave ();\n+    stateSave ();\n     cairoSetRGBColor (bg.getRed() / 255.0, \n                       bg.getGreen() / 255.0, \n                       bg.getBlue() / 255.0);\n@@ -627,21 +702,19 @@ public void clearRect (int x, int y, int width, int height)\n     cairoRectangle (x, y, width, height);\n     cairoClosePath ();\n     cairoFill ();\n-    cairoRestore ();\n+    stateRestore ();\n   }\n \n   public void setBackground(Color c)\n   {\n     bg = c;\n   }\n \n-\n   public Color getBackground()\n   {\n     return bg;\n   }\n \n-\n   private void doPolygon(int[] xPoints, int[] yPoints, int nPoints, \n                          boolean close, boolean fill)\n   {    \n@@ -698,7 +771,8 @@ public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints)\n     doPolygon (xPoints, yPoints, nPoints, false, false);\n   }\n \n-  private boolean drawRaster (ColorModel cm, Raster r)\n+  private boolean drawRaster (ColorModel cm, Raster r, \n+                              AffineTransform imageToUser)\n   {\n     if (r == null)\n       return false;\n@@ -712,6 +786,16 @@ private boolean drawRaster (ColorModel cm, Raster r)\n     if (cm == null)\n       cm = ColorModel.getRGBdefault ();\n \n+    double[] i2u = new double[6];\n+    if (imageToUser != null)\n+      imageToUser.getMatrix(i2u);\n+    else\n+      {\n+        i2u[0] = 1; i2u[1] = 0;\n+        i2u[2] = 0; i2u[3] = 1;\n+        i2u[2] = 0; i2u[3] = 0;\n+      }\n+\n     int pixels[] = null;\n \n     if (sm.getDataType () == DataBuffer.TYPE_INT &&\n@@ -735,23 +819,39 @@ private boolean drawRaster (ColorModel cm, Raster r)\n         pixels = pixels2;\n       }\n     \n-    cairoSave ();\n-    cairoTranslate (x, y);\n-    drawPixels (pixels, r.getWidth (), r.getHeight (), r.getWidth ());\n-    cairoRestore ();    \n+    stateSave ();\n+    translate (x, y);\n+    drawPixels (pixels, r.getWidth (), r.getHeight (), r.getWidth (), i2u);\n+    stateRestore ();    \n     return true;\n   }\n \n-  public boolean drawImage (Image img, int x, int y, \n-                            ImageObserver observer)\n+  public void drawRenderedImage(RenderedImage image,\n+                                AffineTransform xform)\n+  {\n+    drawRaster (image.getColorModel(), image.getData(), xform);\n+  }\n+  \n+  public void drawRenderableImage(RenderableImage image,\n+                                  AffineTransform xform)\n+  {\n+    drawRenderedImage (image.createRendering (new RenderContext (xform)), xform);\n+  }\n+  \n+  public boolean drawImage(Image img, \n+                           AffineTransform xform,\n+                           ImageObserver obs)\n   {\n     if (img instanceof GtkOffScreenImage &&\n         img.getGraphics () instanceof GdkGraphics2D &&            \n-        (transform == null || transform.isIdentity ())) \n+        (xform == null \n+         || xform.getType () == AffineTransform.TYPE_IDENTITY \n+         || xform.getType () == AffineTransform.TYPE_TRANSLATION)\n+        ) \n       {\n         // we are being asked to flush a double buffer from Gdk\n         GdkGraphics2D g2 = (GdkGraphics2D) img.getGraphics ();\n-        gdkDrawDrawable (g2, x, y);\n+        gdkDrawDrawable (g2, (int)xform.getTranslateX(), (int)xform.getTranslateY());\n         return true;\n       }\n     else\n@@ -760,17 +860,32 @@ public boolean drawImage (Image img, int x, int y,\n           {\n             // draw an image which has actually been loaded into memory fully\n             BufferedImage b = (BufferedImage) img;\n-            return drawRaster (b.getColorModel (), b.getData ());\n+            return drawRaster (b.getColorModel (), b.getData (), xform);\n           }        \n         else\n           {\n             // begin progressive loading in a separate thread\n-            new PainterThread (this, img);\n+            new PainterThread (this, img, xform);\n             return false;\n           }\n       }\n   }\n \n+  public void drawImage(BufferedImage image,\n+                        BufferedImageOp op,\n+                        int x,\n+                        int y)\n+  {\n+    Image filtered = op.filter(image, null);\n+    drawImage(filtered, new AffineTransform(1f,0f,0f,1f,x,y), null);\n+  }\n+\n+  public boolean drawImage (Image img, int x, int y, \n+                            ImageObserver observer)\n+  {\n+    return drawImage(img, new AffineTransform(1f,0f,0f,1f,x,y), observer);    \n+  }\n+\n \n   ////////////////////////////////////////\n   ////// Supporting Private Classes //////\n@@ -790,10 +905,12 @@ private class PainterThread implements Runnable, ImageConsumer\n     GdkGraphics2D gr;\n     Image image;\n     ColorModel defaultModel;\n+    AffineTransform xform;\n \n-    public PainterThread (GdkGraphics2D g, Image im)\n+    public PainterThread (GdkGraphics2D g, Image im, AffineTransform xf)\n     {\n       image = im;\n+      xform = xf;\n       this.gr = (GdkGraphics2D) g.create ();\n       new Thread (this).start ();\n     }\n@@ -823,8 +940,8 @@ public void setPixels (int x, int y, int w, int h, ColorModel model,\n     public void setPixels (int x, int y, int w, int h, ColorModel model, \n                            int[] pixels, int off, int scansize)\n       {\n-        gr.cairoSave ();\n-        gr.cairoTranslate (x, y);\n+        gr.stateSave ();\n+        gr.translate (x, y);\n \n         if (model == null)\n           model = defaultModel;\n@@ -843,8 +960,10 @@ public void setPixels (int x, int y, int w, int h, ColorModel model,\n         else\n           pixels2 = pixels;\n \n-        gr.drawPixels (pixels2, w, h, scansize);\n-        gr.cairoRestore ();\n+        double[] xf = new double[6];\n+        xform.getMatrix(xf);        \n+        gr.drawPixels (pixels2, w, h, scansize, xf);\n+        gr.stateRestore ();\n       }\n \n     public void setProperties (java.util.Hashtable props)\n@@ -934,43 +1053,7 @@ public CompositeContext createContext (ColorModel srcColorModel,\n   ////// Unimplemented Stubs and Overloads //////\n   ///////////////////////////////////////////////\n \n-  public boolean drawImage(Image image, \n-                           AffineTransform xform,\n-                           ImageObserver obs)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n-  \n-  public void drawImage(BufferedImage image,\n-                        BufferedImageOp op,\n-                        int x,\n-                        int y)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n   \n-  public void drawRenderedImage(RenderedImage image,\n-                                AffineTransform xform)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n-  \n-  public void drawRenderableImage(RenderableImage image,\n-                                  AffineTransform xform)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n-\n-  public void drawString(String text, float x, float y)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n-  \n-  public void drawString(AttributedCharacterIterator iterator,\n-                         float x, float y)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n     \n   public boolean hit(Rectangle rect, Shape text,\n                      boolean onStroke)\n@@ -1014,30 +1097,27 @@ public RenderingHints getRenderingHints()\n     throw new java.lang.UnsupportedOperationException ();\n   }\n \n-  public void shear(double shearX, double shearY)\n-  {\n-    throw new java.lang.UnsupportedOperationException ();\n-  }\n-\n   public Composite getComposite()\n   {\n     throw new java.lang.UnsupportedOperationException ();\n   }\n \n   public FontRenderContext getFontRenderContext ()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    return new FontRenderContext (transform, true, true);\n   }\n \n   public void drawGlyphVector (GlyphVector g, float x, float y)\n   {    \n-    cairoSave ();\n-    cairoTranslate ((double)x, (double)y);\n+    stateSave ();\n+    setFont (g.getFont ());\n+    translate ((double)x, (double)y);\n+    cairoMoveTo (0, 0);\n     int nglyphs = g.getNumGlyphs ();\n     int codes[] = g.getGlyphCodes (0, nglyphs, (int []) null);\n     float posns[] = g.getGlyphPositions (0, nglyphs, (float []) null);\n-    cairoShowGlyphs (codes, posns, nglyphs);\n-    cairoRestore ();\n+    cairoShowGlyphs (codes, posns);\n+    stateRestore ();\n   }\n \n   public void copyArea (int x, int y, int width, int height, int dx, int dy)\n@@ -1048,7 +1128,10 @@ public void copyArea (int x, int y, int width, int height, int dx, int dy)\n   public void drawArc (int x, int y, int width, int height,\n                        int startAngle, int arcAngle)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    draw (new Arc2D.Double((double)x, (double)y, \n+                           (double)width, (double)height,\n+                           (double)startAngle, (double)arcAngle,\n+                           Arc2D.OPEN));\n   }\n \n   public boolean drawImage (Image img, int x, int y, Color bgcolor, \n@@ -1085,61 +1168,84 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n \n   public void drawOval(int x, int y, int width, int height)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    drawArc (x, y, width, height, 0, 360);\n   }\n \n   public void drawRoundRect(int x, int y, int width, int height, \n                             int arcWidth, int arcHeight)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    int x1 = x + arcWidth, x2 = x + width - arcWidth;\n+    int y1 = y + arcHeight, y2 = y + height - arcHeight;\n+    fillRect (x1, y, x2 - x1, height);\n+    fillRect (x, y1, width, y2 - y1);\n+    fillArc (x, y, arcWidth, arcHeight, 90, 90);\n+    fillArc (x1, y, arcWidth, arcHeight, 0, 90);\n+    fillArc (x2, y2, arcWidth, arcHeight, 270, 90);\n+    fillArc (x, y2, arcWidth, arcHeight, 180, 90);\n   }\n \n   public void drawString (String str, int x, int y)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    drawString (str, (float)x, (float)y);\n+  }\n+\n+  public void drawString (String str, float x, float y)\n+  {\n+    GlyphVector gv = font.createGlyphVector (getFontRenderContext(), str);\n+    drawGlyphVector (gv, x, y);\n   }\n \n   public void drawString (AttributedCharacterIterator ci, int x, int y)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    drawString (ci, (float)x, (float)y);\n+  }\n+\n+  public void drawString (AttributedCharacterIterator ci, float x, float y)\n+  {\n+    GlyphVector gv = font.createGlyphVector (getFontRenderContext(), ci);\n+    drawGlyphVector (gv, x, y);\n   }\n \n   public void fillArc (int x, int y, int width, int height, \n                        int startAngle, int arcAngle)\n   {\n-    cairoNewPath ();\n-    walkPath (new Arc2D.Double((double)x, (double)y, \n-                               (double)width, (double)height,\n-                               (double)startAngle, (double)arcAngle,\n-                               Arc2D.PIE).getPathIterator (null));\n-    cairoClosePath ();\n-    cairoFill ();\n+    fill (new Arc2D.Double((double)x, (double)y, \n+                           (double)width, (double)height,\n+                           (double)startAngle, (double)arcAngle,\n+                           Arc2D.OPEN));\n   }\n \n   public void fillOval(int x, int y, int width, int height)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    fillArc (x, y, width, height, 0, 360);\n   }\n \n   public void fillRoundRect (int x, int y, int width, int height, \n                              int arcWidth, int arcHeight)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    int x1 = x + arcWidth, x2 = x + width - arcWidth;\n+    int y1 = y + arcHeight, y2 = y + height - arcHeight;\n+    fillRect (x1, y, x2 - x1, height);\n+    fillRect (x, y1, width, y2 - y1);\n+    fillArc (x, y, arcWidth, arcHeight, 90, 90);\n+    fillArc (x1, y, arcWidth, arcHeight, 0, 90);\n+    fillArc (x2, y2, arcWidth, arcHeight, 270, 90);\n+    fillArc (x, y2, arcWidth, arcHeight, 180, 90);\n   }\n \n   public Font getFont ()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    return font;\n   }\n \n   public FontMetrics getFontMetrics ()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    return Toolkit.getDefaultToolkit ().getFontMetrics (font);\n   }\n \n   public FontMetrics getFontMetrics (Font f)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    return Toolkit.getDefaultToolkit ().getFontMetrics (f);\n   }\n \n   public void setFont (Font f)"}, {"sha": "afb705bf6e1835c85aac5a02b182d322504cd262", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeer.c?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -120,6 +120,13 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkClasspathFontPeer_setFont\n   pfont = (struct peerfont *)NSA_GET_FONT_PTR (env, self);\n   g_assert (pfont != NULL);\n \n+  if (pfont->ctx != NULL)\n+    g_object_unref (pfont->ctx);\n+  if (pfont->font != NULL)\n+    g_object_unref (pfont->font);\n+  if (pfont->desc != NULL)\n+    pango_font_description_free (pfont->desc);\n+\n   pfont->desc = pango_font_description_new ();\n   g_assert (pfont->desc != NULL);\n \n@@ -153,7 +160,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkClasspathFontPeer_setFont\n \n   pfont->font = pango_font_map_load_font (map, pfont->ctx, pfont->desc);\n   g_assert (pfont->font != NULL);\n-  \n+\n   gdk_threads_leave ();\n }\n "}, {"sha": "0f0b424467cece56ea9b9a807311a06ba57fbb73", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -0,0 +1,93 @@\n+/* gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c\n+   Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n+\n+   This file is part of GNU Classpath.\n+   \n+   GNU Classpath is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+   \n+   GNU Classpath is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with GNU Classpath; see the file COPYING.  If not, write to the\n+   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.\n+   \n+   Linking this library statically or dynamically with other modules is\n+   making a combined work based on this library.  Thus, the terms and\n+   conditions of the GNU General Public License cover the whole\n+   combination.\n+   \n+   As a special exception, the copyright holders of this library give you\n+   permission to link this library with independent modules to produce an\n+   executable, regardless of the license terms of these independent\n+   modules, and to copy and distribute the resulting executable under\n+   terms of your choice, provided that you also meet, for each linked\n+   independent module, the terms and conditions of the license of that\n+   module.  An independent module is a module which is not derived from\n+   or based on this library.  If you modify this library, you may extend\n+   this exception to your version of the library, but you are not\n+   obligated to do so.  If you do not wish to do so, delete this\n+   exception statement from your version. */\n+\n+#include <math.h>\n+\n+#include \"gtkpeer.h\"\n+#include \"gdkfont.h\"\n+#include \"gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.h\"\n+\n+#define ASCENT      0\n+#define MAX_ASCENT  1\n+#define DESCENT     2\n+#define MAX_DESCENT 3\n+#define MAX_ADVANCE 4\n+#define NUM_METRICS 5\n+\n+JNIEXPORT jintArray JNICALL Java_gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics_initState\n+  (JNIEnv *env, jobject self, jobject font)\n+{\n+  jintArray array;\n+  jint *metrics;\n+  struct peerfont *pf = NULL;\n+\n+  pf = NSA_GET_FONT_PTR(env, font);\n+  g_assert (pf != NULL);\n+\n+  array = (*env)->NewIntArray (env, NUM_METRICS);\n+  metrics = (*env)->GetIntArrayElements (env, array, NULL);\n+\n+  gdk_threads_enter ();\n+\n+#define DOUBLE_TO_26_6(d) ((FT_F26Dot6)((d) * 63.0))\n+#define DOUBLE_FROM_26_6(t) (((double)((t) >> 6)) \\\n+\t\t\t     + ((double)((t) & 0x3F) / 63.0))\n+\n+  double pointsize = pango_font_description_get_size (pf->desc);\n+  pointsize /= (double) PANGO_SCALE;\n+\n+  FT_Face face = pango_ft2_font_get_face (pf->font);  \n+  FT_Set_Char_Size( face, \n+\t\t    DOUBLE_TO_26_6 (pointsize),\n+\t\t    DOUBLE_TO_26_6 (pointsize),\n+\t\t    0, 0);\n+\n+  metrics[ASCENT]      = ceil (DOUBLE_FROM_26_6(face->size->metrics.ascender));\n+  metrics[MAX_ASCENT]  = metrics[ASCENT];\n+  metrics[DESCENT]     = floor (DOUBLE_FROM_26_6(face->size->metrics.descender));\n+  if (metrics[DESCENT] < 0)\n+    metrics[DESCENT] = - metrics[DESCENT];\n+  metrics[MAX_DESCENT] = metrics[DESCENT];\n+  metrics[MAX_ADVANCE] = ceil (DOUBLE_FROM_26_6(face->size->metrics.max_advance));\n+\n+  gdk_threads_leave ();\n+\n+  (*env)->ReleaseIntArrayElements (env, array, metrics, 0);\n+\n+  return array;\n+}\n+"}, {"sha": "29616c738edfb7879412934afb8611d2d3e78d5b", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c", "status": "modified", "additions": 131, "deletions": 42, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGlyphVector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGlyphVector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGlyphVector.c?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -40,6 +40,16 @@\n \n struct state_table *native_glyphvector_state_table;\n \n+typedef struct { \n+  double x;\n+  double y;\n+  double width;\n+  double height;\n+} rect_t;\n+\n+#define DOUBLE_TO_26_6(d) ((FT_F26Dot6)((d) * 63.0))\n+#define DOUBLE_FROM_26_6(t) (((double)((t) >> 6)) \\\n+\t\t\t     + ((double)((t) & 0x3F) / 63.0))\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_initStaticState \n   (JNIEnv *env, jclass clazz)\n@@ -64,8 +74,11 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_initState\n   vec = (struct glyphvec *) g_malloc0 (sizeof (struct glyphvec));\n   g_assert (vec != NULL);\n \n-  vec->desc = pango_font_description_copy (pfont->desc);\n+  vec->desc = pango_font_describe (pfont->font); \n   g_assert (vec->desc != NULL);\n+\n+  vec->font = pfont->font;\n+  g_object_ref (vec->font);\n     \n   vec->ctx = pfont->ctx;\n   g_object_ref (vec->ctx);\n@@ -150,10 +163,10 @@ static void seek_glyph_idx (GList *list, int idx,\n   *g = gs->glyphs + nidx;\n }\n \n-static void union_rects (PangoRectangle *r1, \n-\t\t\t const PangoRectangle *r2)\n+static void union_rects (rect_t *r1, \n+\t\t\t const rect_t *r2)\n {\n-  PangoRectangle r;\n+  rect_t r;\n \n   g_assert (r1 != NULL);\n   g_assert (r2 != NULL);\n@@ -184,7 +197,7 @@ static void union_rects (PangoRectangle *r1,\n   *r1 = r;  \n }\n \n-static jdoubleArray rect_to_array (JNIEnv *env, const PangoRectangle *r)\n+static jdoubleArray rect_to_array (JNIEnv *env, const rect_t *r)\n {\n   /* We often return rectangles as arrays : { x, y, w, h } */\n   jdoubleArray ret;\n@@ -193,11 +206,11 @@ static jdoubleArray rect_to_array (JNIEnv *env, const PangoRectangle *r)\n   ret = (*env)->NewDoubleArray (env, 4);\n   rp = (*env)->GetDoubleArrayElements (env, ret, NULL);\n   g_assert (rp != NULL);\n-  rp[0] = r->x / (double)PANGO_SCALE;\n+  rp[0] = r->x;\n   /* freetype and pango's view of space is upside down from java2d's */\n-  rp[1] = (r->y / (double)PANGO_SCALE) * -1;\n-  rp[2] = r->width / (double)PANGO_SCALE;\n-  rp[3] = r->height / (double)PANGO_SCALE;\n+  rp[1] = r->y * -1;\n+  rp[2] = r->width;\n+  rp[3] = r->height;\n   (*env)->ReleaseDoubleArrayElements (env, ret, rp, 0);\n   return ret;\n }\n@@ -251,18 +264,14 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_setChars\n   str = (gchar *)(*env)->GetStringUTFChars (env, chars, NULL);\n   g_assert (str != NULL);\n \n-  /* step 1: mark the text as having our FontFescription as an \n-     attribute, then \"itemize\" the text */\n+  /* step 1: set our FontFescription in the context, then \"itemize\" the\n+     text */\n \n   attrs = pango_attr_list_new ();\n   g_assert (attrs != NULL);\n   \n-  PangoAttribute *da = pango_attr_font_desc_new(vec->desc);\n-  g_assert (da != NULL);\n-  da->start_index = 0;\n-  da->end_index = len;\n-  \n-  pango_attr_list_insert (attrs, da);\n+  pango_context_set_font_description (vec->ctx, vec->desc);\n+\n   items = pango_itemize (vec->ctx, str, 0, len, attrs, NULL);\n   g_assert (items != NULL);\n   \n@@ -393,33 +402,53 @@ JNIEXPORT jint JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphCharIndex\n }\n \n \n-JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_allLogicalExtents \n+JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_allInkExtents \n   (JNIEnv *env, jobject self)\n {\n   struct glyphvec *vec = NULL;\n+  int j;\n   GList *i;\n   PangoGlyphItem *gi = NULL;\n-  PangoRectangle rect = {0,0,0,0};\n-  PangoRectangle tmp, dummy;  \n+  rect_t rect = {0,0,0,0};\n+  rect_t tmp;  \n   jdoubleArray ret;\n+  double x = 0, y = 0;\n+  double pointsize;\n+  FT_Face face;\n \n   gdk_threads_enter ();\n   g_assert (self != NULL);\n   vec = (struct glyphvec *)NSA_GET_GV_PTR (env, self);\n   g_assert (vec != NULL);\n   g_assert (vec->glyphitems != NULL);\n \n+  pointsize = pango_font_description_get_size (vec->desc);\n+  pointsize /= (double) PANGO_SCALE;\n+\n   for (i = g_list_first (vec->glyphitems); i != NULL; i = g_list_next (i))\n     {\n       g_assert (i->data != NULL);\n       gi = (PangoGlyphItem *)i->data;\n       g_assert (gi->glyphs != NULL);\n+\n+      face = pango_ft2_font_get_face (gi->item->analysis.font);\n+      FT_Set_Char_Size( face, \n+\t\t\tDOUBLE_TO_26_6 (pointsize),\n+\t\t\tDOUBLE_TO_26_6 (pointsize),\n+\t\t\t0, 0);\n       \n-      pango_glyph_string_extents (gi->glyphs,\n-\t\t\t\t  gi->item->analysis.font,\n-\t\t\t\t  &dummy,\n-\t\t\t\t  &tmp);\n-      union_rects (&rect, &tmp);\n+      for (j = 0; j < gi->glyphs->num_glyphs; ++j)\n+\t{\n+\t  FT_Load_Glyph (face, gi->glyphs->glyphs[j].glyph, FT_LOAD_DEFAULT);\n+\t  /* FIXME: this needs to change for vertical layouts */\n+\t  tmp.x = x + DOUBLE_FROM_26_6 (face->glyph->metrics.horiBearingX);\n+\t  tmp.y = y + DOUBLE_FROM_26_6 (face->glyph->metrics.horiBearingY);\n+\t  tmp.width = DOUBLE_FROM_26_6 (face->glyph->metrics.width);\n+\t  tmp.height = DOUBLE_FROM_26_6 (face->glyph->metrics.height);\n+\t  union_rects (&rect, &tmp);\n+\t  x += DOUBLE_FROM_26_6 (face->glyph->advance.x);\n+\t  y += DOUBLE_FROM_26_6 (face->glyph->advance.y);\n+\t}\n     }      \n \n   ret = rect_to_array (env, &rect);\n@@ -428,61 +457,106 @@ JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_allLogi\n }\n \n \n-JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_allInkExtents \n+JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_allLogicalExtents \n   (JNIEnv *env, jobject self)\n {\n   struct glyphvec *vec = NULL;\n+  int j;\n   GList *i;\n   PangoGlyphItem *gi = NULL;\n-  PangoRectangle rect = {0,0,0,0};\n-  PangoRectangle tmp, dummy;  \n+  rect_t rect = {0,0,0,0};\n+  rect_t tmp;  \n   jdoubleArray ret;\n+  double x = 0, y = 0;\n+  double pointsize;\n+  FT_Face face;\n \n   gdk_threads_enter ();\n   g_assert (self != NULL);\n   vec = (struct glyphvec *)NSA_GET_GV_PTR (env, self);\n   g_assert (vec != NULL);\n   g_assert (vec->glyphitems != NULL);\n \n+  pointsize = pango_font_description_get_size (vec->desc);\n+  pointsize /= (double) PANGO_SCALE;\n+\n   for (i = g_list_first (vec->glyphitems); i != NULL; i = g_list_next (i))\n     {\n       g_assert (i->data != NULL);\n       gi = (PangoGlyphItem *)i->data;\n       g_assert (gi->glyphs != NULL);\n+\n+      face = pango_ft2_font_get_face (gi->item->analysis.font);\n+      FT_Set_Char_Size( face, \n+\t\t\tDOUBLE_TO_26_6 (pointsize),\n+\t\t\tDOUBLE_TO_26_6 (pointsize),\n+\t\t\t0, 0);\n       \n-      pango_glyph_string_extents (gi->glyphs,\n-\t\t\t\t  gi->item->analysis.font,\n-\t\t\t\t  &tmp,\n-\t\t\t\t  &dummy);\n-      union_rects (&rect, &tmp);\n+      for (j = 0; j < gi->glyphs->num_glyphs; ++j)\n+\t{\n+\t  FT_Load_Glyph (face, gi->glyphs->glyphs[j].glyph, FT_LOAD_DEFAULT);\n+\n+\t  /* FIXME: also, this is probably not the correct set of metrics;\n+\t     the \"logical bounds\" are some fancy combination of hori\n+\t     advance and height such that it's good for inverting as a\n+\t     highlight. revisit. */\n+\n+\t  tmp.x = x;\n+\t  tmp.y = y;\n+\t  tmp.width = DOUBLE_FROM_26_6 (face->glyph->advance.x);\n+\t  tmp.height = DOUBLE_FROM_26_6 (face->glyph->advance.y);\n+\t  union_rects (&rect, &tmp);\n+\t  x += DOUBLE_FROM_26_6 (face->glyph->advance.x);\n+\t  y += DOUBLE_FROM_26_6 (face->glyph->advance.y);\n+\t}\n     }      \n \n   ret = rect_to_array (env, &rect);\n   gdk_threads_leave ();\n   return ret;\n }\n \n+\n JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphLogicalExtents \n   (JNIEnv *env, jobject self, jint idx)\n {\n   struct glyphvec *vec = NULL;\n-  PangoRectangle rect = {0,0,0,0};\n-  PangoRectangle dummy;  \n+  rect_t rect = {0,0,0,0};\n   PangoGlyphInfo *gi = NULL;\n   PangoFont *font = NULL;\n   jdoubleArray ret;\n+  double pointsize;\n+  FT_Face face;\n \n   gdk_threads_enter ();\n   g_assert (self != NULL);\n   vec = (struct glyphvec *)NSA_GET_GV_PTR (env, self);\n   g_assert (vec != NULL);\n   g_assert (vec->glyphitems != NULL);\n-\n+ \n   seek_glyph_idx (vec->glyphitems, idx, &gi, &font);\n   g_assert (gi != NULL);\n   g_assert (font != NULL);\n \n-  pango_font_get_glyph_extents (font, gi->glyph, &dummy, &rect);\n+  pointsize = pango_font_description_get_size (vec->desc);\n+  pointsize /= (double) PANGO_SCALE;\n+  face = pango_ft2_font_get_face (font);\n+  FT_Set_Char_Size( face, \n+\t\t    DOUBLE_TO_26_6 (pointsize),\n+\t\t    DOUBLE_TO_26_6 (pointsize),\n+\t\t    0, 0);\n+  \n+  FT_Load_Glyph (face, gi->glyph, FT_LOAD_DEFAULT);\n+\n+  /* FIXME: this is probably not the correct set of metrics;\n+     the \"logical bounds\" are some fancy combination of hori\n+     advance and height such that it's good for inverting as a\n+     highlight. revisit. */\n+  \n+  rect.x = 0; \n+  rect.y = 0; \n+  rect.width = DOUBLE_FROM_26_6 (face->glyph->advance.x);\n+  rect.height = DOUBLE_FROM_26_6 (face->glyph->advance.y);\n \n   ret = rect_to_array (env, &rect);\n   gdk_threads_leave ();\n@@ -494,29 +568,44 @@ JNIEXPORT jdoubleArray JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphIn\n   (JNIEnv *env, jobject self, jint idx)\n {\n   struct glyphvec *vec = NULL;\n-  PangoRectangle rect = {0,0,0,0};\n-  PangoRectangle dummy;  \n+  rect_t rect = {0,0,0,0};\n   PangoGlyphInfo *gi = NULL;\n   PangoFont *font = NULL;\n   jdoubleArray ret;\n-\n+  double pointsize;\n+  FT_Face face;\n+  \n   gdk_threads_enter ();\n   g_assert (self != NULL);\n   vec = (struct glyphvec *)NSA_GET_GV_PTR (env, self);\n   g_assert (vec != NULL);\n   g_assert (vec->glyphitems != NULL);\n-\n+ \n   seek_glyph_idx (vec->glyphitems, idx, &gi, &font);\n   g_assert (gi != NULL);\n   g_assert (font != NULL);\n \n-  pango_font_get_glyph_extents (font, gi->glyph, &rect, &dummy);\n+  pointsize = pango_font_description_get_size (vec->desc);\n+  pointsize /= (double) PANGO_SCALE;\n+  face = pango_ft2_font_get_face (font);\n+  FT_Set_Char_Size( face, \n+\t\t    DOUBLE_TO_26_6 (pointsize),\n+\t\t    DOUBLE_TO_26_6 (pointsize),\n+\t\t    0, 0);\n+  \n+  FT_Load_Glyph (face, gi->glyph, FT_LOAD_DEFAULT);\n+  /* FIXME: this needs to change for vertical layouts */\n+  rect.x = DOUBLE_FROM_26_6 (face->glyph->metrics.horiBearingX);\n+  rect.y = DOUBLE_FROM_26_6 (face->glyph->metrics.horiBearingY);\n+  rect.width = DOUBLE_FROM_26_6 (face->glyph->metrics.width);\n+  rect.height = DOUBLE_FROM_26_6 (face->glyph->metrics.height);\n \n   ret = rect_to_array (env, &rect);\n   gdk_threads_leave ();\n   return ret;\n }\n \n+\n JNIEXPORT jboolean JNICALL Java_gnu_java_awt_peer_gtk_GdkGlyphVector_glyphIsHorizontal \n   (JNIEnv *env, jobject self, jint idx)\n {"}, {"sha": "76305cae050c0a65828dc48fcd96e4418d9b0bb3", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c", "status": "modified", "additions": 80, "deletions": 71, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146a1ecb877611526fcd141a6efc1e290e13e412/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c?ref=146a1ecb877611526fcd141a6efc1e290e13e412", "patch": "@@ -302,6 +302,8 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_copyState\n   g_old = (struct graphics2d *) NSA_GET_G2D_PTR (env, old);\n   g_assert (g_old != NULL);\n \n+  if (g_old->debug) printf (\"copying state from existing graphics2d\\n\");\n+\n   g->drawable = g_old->drawable;\n   g->debug = g_old->debug; \n \n@@ -316,7 +318,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_copyState\n   else\n     init_graphics2d_as_pixbuf (g);\n \n-  cairo_surface_set_filter (g->surface, CAIRO_FILTER_BILINEAR);\n+  cairo_surface_set_filter (g->surface, CAIRO_FILTER_FAST);\n \n   gdk_threads_leave ();\n \n@@ -649,36 +651,61 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_setTexturePixels\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_drawPixels \n-  (JNIEnv *env, jobject obj, jintArray jarr, jint w, jint h, jint stride)\n+  (JNIEnv *env, jobject obj, jintArray java_pixels, \n+   jint w, jint h, jint stride, jdoubleArray java_matrix)\n {\n   struct graphics2d *gr = NULL;\n-  jint *jpixels = NULL;\n+  jint *native_pixels = NULL;\n+  jdouble *native_matrix = NULL;\n \n   gr = (struct graphics2d *) NSA_GET_G2D_PTR (env, obj);\n   g_assert (gr != NULL);\n \n   if (gr->debug) printf (\"drawPixels (%d pixels, %dx%d, stride: %d)\\n\",\n-\t\t\t (*env)->GetArrayLength (env, jarr), w, h, stride);\n+\t\t\t (*env)->GetArrayLength (env, java_pixels), w, h, stride);\n \n-  jpixels = (*env)->GetIntArrayElements (env, jarr, NULL);\n-  g_assert (jpixels != NULL);\n+  native_pixels = (*env)->GetIntArrayElements (env, java_pixels, NULL);\n+  native_matrix = (*env)->GetDoubleArrayElements (env, java_matrix, NULL);\n+  g_assert (native_pixels != NULL);\n+  g_assert (native_matrix != NULL);\n+  g_assert ((*env)->GetArrayLength (env, java_matrix) == 6);\n \n   begin_drawing_operation (gr);\n-\n   \n  {\n-   cairo_surface_t *surf = cairo_surface_create_for_image ((char *)jpixels, \n+   cairo_matrix_t *mat = NULL;\n+   cairo_surface_t *surf = cairo_surface_create_for_image ((char *)native_pixels, \n \t\t\t\t\t\t\t   CAIRO_FORMAT_ARGB32, \n \t\t\t\t\t\t\t   w, h, stride * 4);   \n-   cairo_surface_set_filter (surf, CAIRO_FILTER_BILINEAR);\n+   mat = cairo_matrix_create ();\n+   cairo_matrix_set_affine (mat, \n+\t\t\t    native_matrix[0], native_matrix[1],\n+\t\t\t    native_matrix[2], native_matrix[3],\n+\t\t\t    native_matrix[4], native_matrix[5]);\n+   cairo_surface_set_matrix (surf, mat);\n+   if (native_matrix[0] != 1.\n+       || native_matrix[1] != 0.\n+       || native_matrix[2] != 0.\n+       || native_matrix[3] != 1.)\n+     {\n+       cairo_surface_set_filter (surf, CAIRO_FILTER_BILINEAR);\n+       cairo_surface_set_filter (gr->surface, CAIRO_FILTER_BILINEAR);\n+     }\n+   else\n+     {\n+       cairo_surface_set_filter (surf, CAIRO_FILTER_FAST);\n+       cairo_surface_set_filter (gr->surface, CAIRO_FILTER_FAST);\n+     }\n    cairo_show_surface (gr->cr, surf, w, h);\n+   cairo_surface_set_filter (gr->surface, CAIRO_FILTER_FAST);\n+   cairo_matrix_destroy (mat);\n    cairo_surface_destroy (surf);\n  }\n   \n-\n  end_drawing_operation (gr);\n \n-  (*env)->ReleaseIntArrayElements (env, jarr, jpixels, 0);\n+  (*env)->ReleaseIntArrayElements (env, java_pixels, native_pixels, 0);\n+  (*env)->ReleaseDoubleArrayElements (env, java_matrix, native_matrix, 0);\n \n }\n \n@@ -706,25 +733,34 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoRestore\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetMatrix \n-   (JNIEnv *env, jobject obj,\n-    jdouble m00, jdouble m10,\n-    jdouble m01, jdouble m11,\n-    jdouble m02, jdouble m12)\n+   (JNIEnv *env, jobject obj, jdoubleArray java_matrix)\n {\n   struct graphics2d *gr = NULL;\n+  jdouble *native_matrix = NULL;\n+\n   gr = (struct graphics2d *) NSA_GET_G2D_PTR (env, obj);\n   g_assert (gr != NULL);\n-  if (gr->debug) printf (\"cairo_set_matrix\\n\");\n+\n+  native_matrix = (*env)->GetDoubleArrayElements (env, java_matrix, NULL);  \n+  g_assert (native_matrix != NULL);\n+  g_assert ((*env)->GetArrayLength (env, java_matrix) == 6);\n+\n+  if (gr->debug) printf (\"cairo_set_matrix [ %f, %f, %f, %f, %f, %f ]\\n\",\n+\t\t\t native_matrix[0], native_matrix[1],\n+\t\t\t native_matrix[2], native_matrix[3],\n+\t\t\t native_matrix[4], native_matrix[5]);\n \n   {\n     cairo_matrix_t * mat = cairo_matrix_create ();\n-    cairo_matrix_set_affine (mat,\n-\t\t\t     m00, m10,\n-\t\t\t     m01, m11,\n-\t\t\t     m02, m12);\n+    cairo_matrix_set_affine (mat, \n+\t\t\t     native_matrix[0], native_matrix[1],\n+\t\t\t     native_matrix[2], native_matrix[3],\n+\t\t\t     native_matrix[4], native_matrix[5]);\n     cairo_set_matrix (gr->cr, mat);\n     cairo_matrix_destroy (mat);\n   }\n+\n+  (*env)->ReleaseDoubleArrayElements (env, java_matrix, native_matrix, 0);\n   update_pattern_transform (gr);\n }\n \n@@ -750,8 +786,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetFont\n   ft = cairo_ft_font_create_for_ft_face (face);\n   g_assert (ft != NULL);\n \n-  if (gr->debug) printf (\"cairo_set_font '%s'\\n\", \n-\t\t\t face->family_name);\n+  if (gr->debug) printf (\"cairo_set_font '%s'\\n\", face->family_name);\n   \n   cairo_set_font (gr->cr, ft);\n \n@@ -765,40 +800,46 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetFont\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoShowGlyphs\n-   (JNIEnv *env, jobject obj, jintArray jcodes, jfloatArray jposns, jint nglyphs)\n+   (JNIEnv *env, jobject obj, jintArray java_codes, jfloatArray java_posns)\n {\n   struct graphics2d *gr = NULL;\n   cairo_glyph_t *glyphs = NULL;\n-  jfloat *posns = NULL;\n-  jint *codes = NULL;\n+  jfloat *native_posns = NULL;\n+  jint *native_codes = NULL;\n   jint i;\n+  jint ncodes, nposns;\n \n   gr = (struct graphics2d *) NSA_GET_G2D_PTR (env, obj);\n   g_assert (gr != NULL);\n \n-  if (gr->debug) printf (\"cairo_show_glyphs (%d glyphs)\\n\", nglyphs);\n+  native_codes = (*env)->GetIntArrayElements (env, java_codes, NULL);  \n+  native_posns = (*env)->GetFloatArrayElements (env, java_posns, NULL);  \n+  g_assert (native_codes != NULL);\n+  g_assert (native_posns != NULL);\n \n-  glyphs = malloc (sizeof(cairo_glyph_t) * nglyphs);\n-  g_assert (glyphs);\n+  ncodes = (*env)->GetArrayLength (env, java_codes);\n+  nposns = (*env)->GetArrayLength (env, java_posns);\n+  g_assert (2 * ncodes == nposns);\n \n-  codes = (*env)->GetIntArrayElements (env, jcodes, NULL);  \n-  g_assert (codes != NULL);\n+  if (gr->debug) printf (\"cairo_show_glyphs (%d glyphs)\\n\", ncodes);\n \n-  posns = (*env)->GetFloatArrayElements (env, jposns, NULL);  \n-  g_assert (posns != NULL);\n+  glyphs = malloc (sizeof(cairo_glyph_t) * ncodes);\n+  g_assert (glyphs);\n \n-  for (i = 0; i < nglyphs; ++i)\n+  for (i = 0; i < ncodes; ++i)\n     {\n-      glyphs[i].index = codes[i];\n-      glyphs[i].x = (double) posns[2*i];\n-      glyphs[i].y = (double) posns[2*i + 1];\n+      glyphs[i].index = native_codes[i];\n+      glyphs[i].x = (double) native_posns[2*i];\n+      glyphs[i].y = (double) native_posns[2*i + 1];\n+      if (gr->debug) printf (\"cairo_show_glyphs (glyph %d (code %d) : %f,%f)\\n\", \n+\t\t\t     i, glyphs[i].index, glyphs[i].x, glyphs[i].y);\n     }\n \n-  (*env)->ReleaseIntArrayElements (env, jcodes, codes, 0);\n-  (*env)->ReleaseFloatArrayElements (env, jposns, posns, 0);\n+  (*env)->ReleaseIntArrayElements (env, java_codes, native_codes, 0);\n+  (*env)->ReleaseFloatArrayElements (env, java_posns, native_posns, 0);\n \n   begin_drawing_operation (gr);\n-  cairo_show_glyphs (gr->cr, glyphs, nglyphs);\n+  cairo_show_glyphs (gr->cr, glyphs, ncodes);\n   end_drawing_operation (gr);\n \n   free(glyphs);\n@@ -991,38 +1032,6 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetMiterLim\n   cairo_set_miter_limit (gr->cr, miter);\n }\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoTranslate \n-   (JNIEnv *env, jobject obj, jdouble dx, jdouble dy)\n-{\n-  struct graphics2d *gr = NULL;\n-  gr = (struct graphics2d *) NSA_GET_G2D_PTR (env, obj);\n-  g_assert (gr != NULL);\n-  if (gr->debug) printf (\"cairo_translate (%f, %f)\\n\", dx, dy);\n-  cairo_translate (gr->cr, dx, dy);\n-  update_pattern_transform (gr);\n-}\n-\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoScale \n-   (JNIEnv *env, jobject obj, jdouble sx, jdouble sy)\n-{\n-  struct graphics2d *gr = NULL;\n-  gr = (struct graphics2d *) NSA_GET_G2D_PTR (env, obj);\n-  g_assert (gr != NULL);\n-  if (gr->debug) printf (\"cairo_scale (%f, %f)\\n\", sx, sy);\n-  cairo_scale (gr->cr, sx, sy);\n-  update_pattern_transform (gr);\n-}\n-\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoRotate \n-   (JNIEnv *env, jobject obj, jdouble angle)\n-{\n-  struct graphics2d *gr = NULL;\n-  gr = (struct graphics2d *) NSA_GET_G2D_PTR (env, obj);\n-  g_assert (gr != NULL);\n-  if (gr->debug) printf (\"cairo_rotate %f\\n\", angle);\n-  cairo_rotate (gr->cr, angle);\n-  update_pattern_transform (gr);\n-}\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoNewPath \n    (JNIEnv *env, jobject obj)"}]}