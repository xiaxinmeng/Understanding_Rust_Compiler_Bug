{"sha": "068c84e3b5320330426785102f3d784f078d1144", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY4Yzg0ZTNiNTMyMDMzMDQyNjc4NTEwMmYzZDc4NGYwNzhkMTE0NA==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-10-16T19:47:45Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-10-16T19:47:45Z"}, "message": "atomicity.h (__exchange_and_add): Use TAS on __mcf5400__.\n\n\t* config/cpu/m68k/atomicity.h (__exchange_and_add): Use TAS on\n\t__mcf5400__. Don't rely on __mc68000__ to detect a bare 68000.\n\tDocument SMP safeness of asm macros.\n\nFrom-SVN: r72570", "tree": {"sha": "877ce22a76bd7a75d1d241528d69a5d11d75a614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/877ce22a76bd7a75d1d241528d69a5d11d75a614"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/068c84e3b5320330426785102f3d784f078d1144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068c84e3b5320330426785102f3d784f078d1144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068c84e3b5320330426785102f3d784f078d1144", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068c84e3b5320330426785102f3d784f078d1144/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e8a52484b64956ec2cc84e98eb4110b43c7b885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8a52484b64956ec2cc84e98eb4110b43c7b885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e8a52484b64956ec2cc84e98eb4110b43c7b885"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "043e3cd5c1d72549f033296ba7f10bbd2ae9863d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068c84e3b5320330426785102f3d784f078d1144/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068c84e3b5320330426785102f3d784f078d1144/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=068c84e3b5320330426785102f3d784f078d1144", "patch": "@@ -1,3 +1,9 @@\n+2003-10-16  Bernardo Innocenti  <bernie@develer.com>\n+\n+\t* config/cpu/m68k/atomicity.h (__exchange_and_add): Use TAS on\n+\t__mcf5400__. Don't rely on __mc68000__ to detect a bare 68000.\n+\tDocument SMP safeness of asm macros.\n+\n 2003-10-16  Paolo Carlini  <pcarlini@suse.de>\n \n \t* src/locale.cc (locale::locale(const char*)): Tweak"}, {"sha": "c4ce17dac67efbabd476f7374312cedf04cf9cac", "filename": "libstdc++-v3/config/cpu/m68k/atomicity.h", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068c84e3b5320330426785102f3d784f078d1144/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068c84e3b5320330426785102f3d784f078d1144/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fatomicity.h?ref=068c84e3b5320330426785102f3d784f078d1144", "patch": "@@ -94,22 +94,25 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n {\n   _Atomic_word __result;\n \n-// bset with no immediate addressing\n-#if defined(__mcf5200__) || defined(__mcf5300__) || defined(__mcf5400__)\n+// bset with no immediate addressing (not SMP-safe)\n+#if defined(__mcf5200__) || defined(__mcf5300__)\n   __asm__ __volatile__(\"1: bset.b #7,%0@\\n\\tjbne 1b\"\n \t\t       : /* no outputs */\n \t\t       : \"a\"(&__Atomicity_lock<0>::_S_atomicity_lock)\n \t\t       : \"cc\", \"memory\");\n \n-// bset with immediate addressing\n-#elif defined(__mc68000__)\n-  __asm__ __volatile__(\"1: bset.b #7,%0\\n\\tjbne 1b\"\n+// CPU32 and MCF5400 support test-and-set (SMP-safe).\n+#elif defined(__mcpu32__) || defined(__mcf5400__)\n+  __asm__ __volatile__(\"1: tas %0\\n\\tjbne 1b\"\n \t\t       : \"+m\"(__Atomicity_lock<0>::_S_atomicity_lock)\n \t\t       : /* none */\n \t\t       : \"cc\");\n \n-#else // 680x0, cpu32, 5400 support test-and-set.\n-  __asm__ __volatile__(\"1: tas %0\\n\\tjbne 1b\"\n+// Use bset with immediate addressing for 68000/68010 (not SMP-safe)\n+// NOTE: TAS is available on the 68000, but unsupported by some Amiga\n+// memory controllers.\n+#else\n+  __asm__ __volatile__(\"1: bset.b #7,%0\\n\\tjbne 1b\"\n \t\t       : \"+m\"(__Atomicity_lock<0>::_S_atomicity_lock)\n \t\t       : /* none */\n \t\t       : \"cc\");"}]}