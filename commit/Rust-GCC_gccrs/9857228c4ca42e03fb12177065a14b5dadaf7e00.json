{"sha": "9857228c4ca42e03fb12177065a14b5dadaf7e00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1NzIyOGM0Y2E0MmUwM2ZiMTIxNzcwNjVhMTRiNWRhZGFmN2UwMA==", "commit": {"author": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-05-20T19:17:12Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-05-20T19:17:12Z"}, "message": "re PR tree-optimization/36181 (Simple for loop generates ICE with -ftree-parallelize-loops=2)\n\n2008-05-20  Sebastian Pop  <sebastian.pop@amd.com>\n\t    Jan Sjodin  <jan.sjodin@amd.com>\n\n\tPR tree-optimization/36181\n\t* tree-parloops.c (loop_has_vector_phi_nodes): New.\n\t(parallelize_loops): Don't parallelize when the loop has vector\n\tphi nodes.\n\n\t* gcc.dg/tree-ssa/pr36181.c: New.\n\nFrom-SVN: r135673", "tree": {"sha": "cf4a0fe3e80a3306003282e6187090dd233f10c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf4a0fe3e80a3306003282e6187090dd233f10c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9857228c4ca42e03fb12177065a14b5dadaf7e00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9857228c4ca42e03fb12177065a14b5dadaf7e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9857228c4ca42e03fb12177065a14b5dadaf7e00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9857228c4ca42e03fb12177065a14b5dadaf7e00/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f275479a9813d4165e9e6766e4f7c6eec1b9792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f275479a9813d4165e9e6766e4f7c6eec1b9792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f275479a9813d4165e9e6766e4f7c6eec1b9792"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "65cb134a4616ff20b88d5fb45e6e3d3c2336b538", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9857228c4ca42e03fb12177065a14b5dadaf7e00", "patch": "@@ -1,3 +1,11 @@\n+2008-05-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Jan Sjodin  <jan.sjodin@amd.com>\n+\n+\tPR tree-optimization/36181\n+\t* tree-parloops.c (loop_has_vector_phi_nodes): New.\n+\t(parallelize_loops): Don't parallelize when the loop has vector\n+\tphi nodes.\n+\n 2008-05-20  Jan Sjodin  <jan.sjodin@amd.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n "}, {"sha": "0ff1a091d549695b991f00411d18ac610c01bb03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9857228c4ca42e03fb12177065a14b5dadaf7e00", "patch": "@@ -1,3 +1,9 @@\n+2008-05-20  Jan Sjodin  <jan.sjodin@amd.com>\n+\t    Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/36181\n+\t* gcc.dg/tree-ssa/pr36181.c: New.\n+\n 2008-05-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR testsuite/36057"}, {"sha": "6eda0a4270a2a8860ab9f3031bfabb7c5b7cfecf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr36181.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr36181.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr36181.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr36181.c?ref=9857228c4ca42e03fb12177065a14b5dadaf7e00", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -ftree-parallelize-loops=2\" } */\n+\n+int foo ()\n+{\n+  int i, sum = 0, data[1024];\n+\n+  for(i = 0; i<1024; i++)\n+    sum += data[i];\n+\n+  return sum;\n+}\n+"}, {"sha": "109e3058921b190abdee620ee76f9ab0e6ab1973", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9857228c4ca42e03fb12177065a14b5dadaf7e00/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=9857228c4ca42e03fb12177065a14b5dadaf7e00", "patch": "@@ -1797,6 +1797,27 @@ gen_parallel_loop (struct loop *loop, htab_t reduction_list,\n   omp_expand_local (parallel_head);\n }\n \n+/* Returns true when LOOP contains vector phi nodes.  */\n+\n+static bool\n+loop_has_vector_phi_nodes (struct loop *loop)\n+{\n+  unsigned i;\n+  basic_block *bbs = get_loop_body_in_dom_order (loop);\n+  bool res = true;\n+  tree phi;\n+\n+  for (i = 0; i < loop->num_nodes; i++)\n+    for (phi = phi_nodes (bbs[i]); phi; phi = PHI_CHAIN (phi))\n+      if (TREE_CODE (TREE_TYPE (PHI_RESULT (phi))) == VECTOR_TYPE)\n+\tgoto end;\n+\n+  res = false;\n+ end:\n+  free (bbs);\n+  return res;\n+}\n+\n /* Detect parallel loops and generate parallel code using libgomp\n    primitives.  Returns true if some loop was parallelized, false\n    otherwise.  */\n@@ -1828,6 +1849,8 @@ parallelize_loops (void)\n \t  /* And of course, the loop must be parallelizable.  */\n \t  || !can_duplicate_loop_p (loop)\n \t  || loop_has_blocks_with_irreducible_flag (loop)\n+\t  /* FIXME: the check for vector phi nodes could be removed.  */\n+\t  || loop_has_vector_phi_nodes (loop)\n \t  || !loop_parallel_p (loop, reduction_list, &niter_desc))\n \tcontinue;\n "}]}