{"sha": "bec17cf31e9094ea1e015d8cf5fca2583a4161a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjMTdjZjMxZTkwOTRlYTFlMDE1ZDhjZjVmY2EyNTgzYTQxNjFhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-04-23T09:34:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-04-23T09:34:57Z"}, "message": "* typeck.c (comp_target_types): Fix PMFs.\n\nFrom-SVN: r19383", "tree": {"sha": "b5d110300a90fa737f587e7e011fb840ac40b3f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5d110300a90fa737f587e7e011fb840ac40b3f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec17cf31e9094ea1e015d8cf5fca2583a4161a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec17cf31e9094ea1e015d8cf5fca2583a4161a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec17cf31e9094ea1e015d8cf5fca2583a4161a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec17cf31e9094ea1e015d8cf5fca2583a4161a8/comments", "author": null, "committer": null, "parents": [{"sha": "04a81d94f44365d400f18f2973fd95856351c681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a81d94f44365d400f18f2973fd95856351c681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a81d94f44365d400f18f2973fd95856351c681"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "c6025dffafd3477fd79129790b7113cd4c2ab53c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec17cf31e9094ea1e015d8cf5fca2583a4161a8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec17cf31e9094ea1e015d8cf5fca2583a4161a8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bec17cf31e9094ea1e015d8cf5fca2583a4161a8", "patch": "@@ -1,3 +1,7 @@\n+Thu Apr 23 09:32:58 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* typeck.c (comp_target_types): Fix PMFs.\n+\n Wed Apr 22 13:24:48 1998  Mark Mitchell  <mmitchell@usa.net>\n \n \t* class.c (finish_struct): Set TREE_PRIVATE and TREE_PROTECTED for"}, {"sha": "c0b00b0a3e5a12fc1cf0573cf944fb5e95228d7d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec17cf31e9094ea1e015d8cf5fca2583a4161a8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec17cf31e9094ea1e015d8cf5fca2583a4161a8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=bec17cf31e9094ea1e015d8cf5fca2583a4161a8", "patch": "@@ -959,19 +959,55 @@ comp_target_types (ttl, ttr, nptrs)\n     return comp_array_types (comp_target_types, ttl, ttr, 0);\n   else if (TREE_CODE (ttr) == FUNCTION_TYPE || TREE_CODE (ttr) == METHOD_TYPE)\n     {\n+      tree argsl, argsr;\n+      int saw_contra = 0;\n+\n       if (pedantic)\n \t{\n \t  if (comptypes (TREE_TYPE (ttl), TREE_TYPE (ttr), 1) == 0)\n \t    return 0;\n \t}\n       else\n \t{\n-\t  if (comp_target_types (TREE_TYPE (ttl), TREE_TYPE (ttr), -1) == 0)\n-\t    return 0;\n+\t  switch (comp_target_types (TREE_TYPE (ttl), TREE_TYPE (ttr), -1))\n+\t    {\n+\t    case 0:\n+\t      return 0;\n+\t    case -1:\n+\t      saw_contra = 1;\n+\t    }\n \t}\n \n-      return comp_target_parms (TYPE_ARG_TYPES (ttl),\n-\t\t\t\tTYPE_ARG_TYPES (ttr), 1);\n+      argsl = TYPE_ARG_TYPES (ttl);\n+      argsr = TYPE_ARG_TYPES (ttr);\n+\n+      /* Compare 'this' here, not in comp_target_parms.  */\n+      if (TREE_CODE (ttr) == METHOD_TYPE)\n+\t{\n+\t  tree tl = TYPE_METHOD_BASETYPE (ttl);\n+\t  tree tr = TYPE_METHOD_BASETYPE (ttr);\n+\n+\t  if (comptypes (tr, tl, 0) == 0)\n+\t    {\n+\t      if (comptypes (tl, tr, 0))\n+\t\tsaw_contra = 1;\n+\t      else\n+\t\treturn 0;\n+\t    }\n+\n+\t  argsl = TREE_CHAIN (argsl);\n+\t  argsr = TREE_CHAIN (argsr);\n+\t}\n+\n+\tswitch (comp_target_parms (argsl, argsr, 1))\n+\t  {\n+\t  case 0:\n+\t    return 0;\n+\t  case -1:\n+\t    saw_contra = 1;\n+\t  }\n+\n+\treturn saw_contra ? -1 : 1;\n     }\n   /* for C++ */\n   else if (TREE_CODE (ttr) == OFFSET_TYPE)"}]}