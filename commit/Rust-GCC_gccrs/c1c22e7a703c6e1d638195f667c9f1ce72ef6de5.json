{"sha": "c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjMjJlN2E3MDNjNmUxZDYzODE5NWY2NjdjOWYxY2U3MmVmNmRlNQ==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-17T21:00:59Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-17T21:00:59Z"}, "message": "ali.adb: Type reference does not reset current file.\n\n\t* ali.adb: Type reference does not reset current file.\n\n\t* ali.adb: Recognize and scan renaming reference\n\n\t* ali.ads: Add spec for storing renaming references.\n\n\t* lib-xref.ads: Add documentation for handling of renaming references\n\n\t* lib-xref.adb: Implement output of renaming reference.\n\n\t* checks.adb:\n\t(Determine_Range): Document local variables\n\t(Determine_Range): Make sure Hbound is initialized. It looks as though\n\t there could be a real problem here with an uninitialized reference\n\t to Hbound, but no actual example of failure has been found.\n\n\t* g-socket.ads:\n\tFix comment of Shutdown_Socket and Close_Socket. These functions\n\tshould not fail silently because if they are called twice, this\n\tprobably means that there is a race condition in the user program.\n\tAnyway, this behaviour is consistent with the rest of this unit.\n\tWhen an error occurs, an exception is raised with the error message\n\tas exception message.\n\nFrom-SVN: r48125", "tree": {"sha": "425ca9a59ec19c276fa2119f9e7b007ba368384d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/425ca9a59ec19c276fa2119f9e7b007ba368384d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/comments", "author": null, "committer": null, "parents": [{"sha": "7eb7bb079d2fb0c22d9e31995a3ea8d812e5a042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb7bb079d2fb0c22d9e31995a3ea8d812e5a042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb7bb079d2fb0c22d9e31995a3ea8d812e5a042"}], "stats": {"total": 233, "additions": 193, "deletions": 40}, "files": [{"sha": "2c049d969ae9c91b5645a42d6be50a15c10363d3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -1,3 +1,31 @@\n+2001-12-17  Robert Dewar <dewar@gnat.com>\n+\n+\t* ali.adb: Type reference does not reset current file.\n+\t\n+\t* ali.adb: Recognize and scan renaming reference\n+\t\n+\t* ali.ads: Add spec for storing renaming references.\n+\t\n+\t* lib-xref.ads: Add documentation for handling of renaming references\n+\t\n+\t* lib-xref.adb: Implement output of renaming reference.\n+\t\n+\t* checks.adb:\n+\t(Determine_Range): Document local variables\n+\t(Determine_Range): Make sure Hbound is initialized. It looks as though\n+\t there could be a real problem here with an uninitialized reference\n+\t to Hbound, but no actual example of failure has been found.\n+\t\n+2001-12-17  Laurent Pautet <pautet@gnat.com>\n+\n+\t* g-socket.ads:\n+\tFix comment of Shutdown_Socket and Close_Socket. These functions\n+\tshould not fail silently because if they are called twice, this\n+\tprobably means that there is a race condition in the user program.\n+\tAnyway, this behaviour is consistent with the rest of this unit.\n+\tWhen an error occurs, an exception is raised with the error message\n+\tas exception message.\n+\n 2001-12-17  Robert Dewar <dewar@gnat.com>\n \n \t* frontend.adb: Move call to Check_Unused_Withs from Frontend, so "}, {"sha": "c0d744ffb93102e1e8760558cd74633b90949a6d", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -134,7 +134,7 @@ package body ALI is\n       --  all lower case. This only happends for systems where file names are\n       --  not case sensitive, and ensures that gnatbind works correctly on\n       --  such systems, regardless of the case of the file name. Note that\n-      --  a name can be terminated by a right typeref bracket.\n+      --  a name can be terminated by a right typeref bracket or '='.\n \n       function Get_Nat return Nat;\n       --  Skip blanks, then scan out an unsigned integer value in Nat range\n@@ -305,8 +305,11 @@ package body ALI is\n          loop\n             Name_Len := Name_Len + 1;\n             Name_Buffer (Name_Len) := Getc;\n-            exit when At_End_Of_Field;\n-            exit when Nextc = ')' or else Nextc = '}' or else Nextc = '>';\n+            exit when At_End_Of_Field\n+              or else Nextc = ')'\n+              or else Nextc = '}'\n+              or else Nextc = '>'\n+              or else Nextc = '=';\n          end loop;\n \n          --  Convert file name to all lower case if file names are not case\n@@ -1305,8 +1308,29 @@ package body ALI is\n                   XE.Lib    := (Getc = '*');\n                   XE.Entity := Get_Name;\n \n+                  --  Renaming reference is present\n+\n+                  if Nextc = '=' then\n+                     P := P + 1;\n+                     XE.Rref_Line := Get_Nat;\n+\n+                     if Getc /= ':' then\n+                        Fatal_Error;\n+                     end if;\n+\n+                     XE.Rref_Col := Get_Nat;\n+\n+                  --  No renaming reference present\n+\n+                  else\n+                     XE.Rref_Line := 0;\n+                     XE.Rref_Col  := 0;\n+                  end if;\n+\n                   Skip_Space;\n \n+                  --  See if type reference present\n+\n                   case Nextc is\n                      when '<'    => XE.Tref := Tref_Derived;\n                      when '('    => XE.Tref := Tref_Access;\n@@ -1332,7 +1356,6 @@ package body ALI is\n                         if Nextc = '|' then\n                            XE.Tref_File_Num :=\n                              Sdep_Id (N + Nat (First_Sdep_Entry) - 1);\n-                           Current_File_Num := XE.Tref_File_Num;\n                            P := P + 1;\n                            N := Get_Nat;\n \n@@ -1347,6 +1370,7 @@ package body ALI is\n                      end if;\n \n                      P := P + 1; -- skip closing bracket\n+                     Skip_Space;\n \n                   --  No typeref entry present\n "}, {"sha": "1e427e836b83f455d7ff8aa4020f3f9d0153c1a9", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.3 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -616,6 +616,14 @@ package ALI is\n       Entity : Name_Id;\n       --  Name of entity\n \n+      Rref_Line : Nat;\n+      --  This field is set to the line number of a renaming reference if\n+      --  one is present, or to zero if no renaming reference is present\n+\n+      Rref_Col : Nat;\n+      --  This field is set to the column number of a renaming reference\n+      --  if one is present, or to zero if no renaming reference is present.\n+\n       Tref : Tref_Kind;\n       --  Indicates if a typeref is present, and if so what kind. Set to\n       --  Tref_None if no typeref field is present."}, {"sha": "6f0c87974bfcf422f706e987034256eb1a69d634", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 40, "deletions": 13, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -1958,18 +1958,31 @@ package body Checks is\n       Lo : out Uint;\n       Hi : out Uint)\n    is\n-      Typ  : constant Entity_Id := Etype (N);\n+      Typ : constant Entity_Id := Etype (N);\n+\n+      Lo_Left : Uint;\n+      Hi_Left : Uint;\n+      --  Lo and Hi bounds of left operand\n \n-      Lo_Left  : Uint;\n       Lo_Right : Uint;\n-      Hi_Left  : Uint;\n       Hi_Right : Uint;\n-      Bound    : Node_Id;\n-      Hbound   : Uint;\n-      Lor      : Uint;\n-      Hir      : Uint;\n-      OK1      : Boolean;\n-      Cindex   : Cache_Index;\n+      --  Lo and Hi bounds of right (or only) operand\n+\n+      Bound : Node_Id;\n+      --  Temp variable used to hold a bound node\n+\n+      Hbound : Uint;\n+      --  High bound of base type of expression\n+\n+      Lor : Uint;\n+      Hir : Uint;\n+      --  Refined values for low and high bounds, after tightening\n+\n+      OK1 : Boolean;\n+      --  Used in lower level calls to indicate if call succeeded\n+\n+      Cindex : Cache_Index;\n+      --  Used to search cache\n \n       function OK_Operands return Boolean;\n       --  Used for binary operators. Determines the ranges of the left and\n@@ -2042,7 +2055,11 @@ package body Checks is\n \n       --  We use the actual bound unless it is dynamic, in which case\n       --  use the corresponding base type bound if possible. If we can't\n-      --  get a bound then\n+      --  get a bound then we figure we can't determine the range (a\n+      --  peculiar case, that perhaps cannot happen, but there is no\n+      --  point in bombing in this optimization circuit.\n+\n+      --  First the low bound\n \n       Bound := Type_Low_Bound (Typ);\n \n@@ -2057,12 +2074,15 @@ package body Checks is\n          return;\n       end if;\n \n+      --  Now the high bound\n+\n       Bound := Type_High_Bound (Typ);\n \n-      if Compile_Time_Known_Value (Bound) then\n-         Hi := Expr_Value (Bound);\n+      --  We need the high bound of the base type later on, and this should\n+      --  always be compile time known. Again, it is not clear that this\n+      --  can ever be false, but no point in bombing.\n \n-      elsif Compile_Time_Known_Value (Type_High_Bound (Base_Type (Typ))) then\n+      if Compile_Time_Known_Value (Type_High_Bound (Base_Type (Typ))) then\n          Hbound := Expr_Value (Type_High_Bound (Base_Type (Typ)));\n          Hi := Hbound;\n \n@@ -2071,6 +2091,13 @@ package body Checks is\n          return;\n       end if;\n \n+      --  If we have a static subtype, then that may have a tighter bound\n+      --  so use the upper bound of the subtype instead in this case.\n+\n+      if Compile_Time_Known_Value (Bound) then\n+         Hi := Expr_Value (Bound);\n+      end if;\n+\n       --  We may be able to refine this value in certain situations. If\n       --  refinement is possible, then Lor and Hir are set to possibly\n       --  tighter bounds, and OK1 is set to True."}, {"sha": "2ed95ed9bcec9327e9db48da3c68d93730c84f04", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n --                                                                          --\n@@ -622,7 +622,6 @@ package GNAT.Sockets is\n \n    procedure Close_Socket (Socket : Socket_Type);\n    --  Close a socket and more specifically a non-connected socket.\n-   --  Fail silently.\n \n    procedure Connect_Socket\n      (Socket : Socket_Type;\n@@ -718,7 +717,7 @@ package GNAT.Sockets is\n    --  Shutdown a connected socket. If How is Shut_Read, further\n    --  receives will be disallowed. If How is Shut_Write, further\n    --  sends will be disallowed. If how is Shut_Read_Write, further\n-   --  sends and receives will be disallowed. Fail silently.\n+   --  sends and receives will be disallowed.\n \n    type Stream_Access is access all Ada.Streams.Root_Stream_Type'Class;\n    --  Same interface as Ada.Streams.Stream_IO"}, {"sha": "06397c74fce9476f9d61f974363baf1611113c2a", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -449,6 +449,9 @@ package body Lib.Xref is\n          Tref : Entity_Id;\n          --  Type reference\n \n+         Rref : Node_Id;\n+         --  Renaming reference\n+\n          Trunit : Unit_Number_Type;\n          --  Unit number for type reference\n \n@@ -730,7 +733,51 @@ package body Lib.Xref is\n                         end loop;\n                      end if;\n \n-                     --  Output type reference if any\n+                     --  See if we have a renaming reference\n+\n+                     if Is_Object (XE.Ent)\n+                       and then Present (Renamed_Object (XE.Ent))\n+                     then\n+                        Rref := Renamed_Object (XE.Ent);\n+\n+                     elsif Is_Overloadable (XE.Ent)\n+                       and then Nkind (Parent (Declaration_Node (XE.Ent))) =\n+                                            N_Subprogram_Renaming_Declaration\n+                     then\n+                        Rref := Name (Parent (Declaration_Node (XE.Ent)));\n+\n+                     elsif Ekind (XE.Ent) = E_Package\n+                       and then Nkind (Declaration_Node (XE.Ent)) =\n+                                         N_Package_Renaming_Declaration\n+                     then\n+                        Rref := Name (Declaration_Node (XE.Ent));\n+\n+                     else\n+                        Rref := Empty;\n+                     end if;\n+\n+                     if Present (Rref) then\n+                        if Nkind (Rref) = N_Expanded_Name then\n+                           Rref := Selector_Name (Rref);\n+                        end if;\n+\n+                        if Nkind (Rref) /= N_Identifier then\n+                           Rref := Empty;\n+                        end if;\n+                     end if;\n+\n+                     --  Write out renaming reference if we have one\n+\n+                     if Debug_Flag_MM and then Present (Rref) then\n+                        Write_Info_Char ('=');\n+                        Write_Info_Nat\n+                          (Int (Get_Logical_Line_Number (Sloc (Rref))));\n+                        Write_Info_Char (':');\n+                        Write_Info_Nat\n+                          (Int (Get_Column_Number (Sloc (Rref))));\n+                     end if;\n+\n+                     --  See if we have a type reference\n \n                      Tref := XE.Ent;\n                      Left := '{';\n@@ -807,6 +854,8 @@ package body Lib.Xref is\n \n                         exit when No (Tref) or else Tref = Sav;\n \n+                        --  Here we have a type reference to output\n+\n                         --  Case of standard entity, output name\n \n                         if Sloc (Tref) = Standard_Location then\n@@ -863,6 +912,8 @@ package body Lib.Xref is\n                         end if;\n                      end loop;\n \n+                     --  End of processing for entity output\n+\n                      Curru := Curxu;\n                      Crloc := No_Location;\n                   end if;"}, {"sha": "396d8468ee8f63550a9342521015956cbc59af11", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 34, "deletions": 18, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c22e7a703c6e1d638195f667c9f1ce72ef6de5/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=c1c22e7a703c6e1d638195f667c9f1ce72ef6de5", "patch": "@@ -56,7 +56,7 @@ package Lib.Xref is\n    --\n    --  The lines following the header look like\n    --\n-   --     line type col level  entity typeref  ref  ref  ref\n+   --     line type col level entity renameref typeref ref  ref  ref\n    --\n    --        line is the line number of the referenced entity. It starts\n    --        in column one.\n@@ -73,9 +73,24 @@ package Lib.Xref is\n    --\n    --        entity is the name of the referenced entity, with casing in\n    --        the canical casing for the source file where it is defined.\n+\n+   --        renameref provides information on renaming. If the entity is\n+   --        a package, object or overloadable entity which is declared by\n+   --        a renaming declaration, and the renaming refers to an entity\n+   --        with a simple identifier or expanded name, then renameref has\n+   --        the form:\n+   --\n+   --            =line:col\n+   --\n+   --        Here line:col give the reference to the identifier that\n+   --        appears in the renaming declaration. Note that we never need\n+   --        a file entry, since this identifier is always in the current\n+   --        file in which the entity is declared. Currently, renameref\n+   --        appears only for the simple renaming case. If the renaming\n+   --        reference is a complex expressions, then renameref is omitted.\n    --\n-   --        typeref is the reference for the type. This part is optional.\n-   --        It is present for the following cases:\n+   --        typeref is the reference for a related type. This part is\n+   --        optional. It is present for the following cases:\n    --\n    --          derived types (points to the parent type)   LR=<>\n    --          access types (points to designated type)    LR=()\n@@ -84,20 +99,20 @@ package Lib.Xref is\n    --          enumeration literals (points to enum type)  LR={}\n    --          objects and components (points to type)     LR={}\n    --\n-   --        In the above list LR shows the brackets used in the output,\n-   --        which has one of the two following forms:\n+   --          In the above list LR shows the brackets used in the output,\n+   --          which has one of the two following forms:\n    --\n-   --          L file | line type col R      user entity\n-   --          L name-in-lower-case   R      standard entity\n+   --            L file | line type col R      user entity\n+   --            L name-in-lower-case   R      standard entity\n    --\n-   --        For the form for a user entity, file is the dependency number\n-   --        of the file containing the declaration of the parent type. This\n-   --        number and the following vertical bar are omitted if the relevant\n-   --        type is defined in the same file as the current entity. The line,\n-   --        type, col are defined as previously described, and specify the\n-   --        location of the relevant type declaration in the referenced file.\n-   --        For the standard entity form, the name between the brackets is\n-   --        the normal name of the entity in lower case letters.\n+   --          For the form for a user entity, file is the dependency number\n+   --          of the file containing the declaration of the related type.\n+   --          This number and the following vertical bar are omitted if the\n+   --          relevant type is defined in the same file as the current entity.\n+   --          The line, type, col are defined as previously described, and\n+   --          specify the location of the relevant type declaration in the\n+   --          referenced file. For the standard entity form, the name between\n+   --          the brackets is the normal name of the entity in lower case.\n    --\n    --     There may be zero or more ref entries on each line\n    --\n@@ -201,11 +216,12 @@ package Lib.Xref is\n    --\n    --              a reference on line 11, column 56 of unit number 3\n    --\n-   --        2U13 p3 5b13 8r4 12r13 12t15\n+   --        2U13 p3=2:35 5b13 8r4 12r13 12t15\n    --\n    --           This line gives references for the non-publicly visible\n-   --           procedure p3 declared on line 2, column 13. There are\n-   --           four references:\n+   --           procedure p3 declared on line 2, column 13. This procedure\n+   --           renames the procedure whose identifier reference is at\n+   --           line 2 column 35. There are four references:\n    --\n    --              the corresponding body entity at line 5, column 13,\n    --              of the current file."}]}