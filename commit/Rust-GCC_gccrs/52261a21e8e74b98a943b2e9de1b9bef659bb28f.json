{"sha": "52261a21e8e74b98a943b2e9de1b9bef659bb28f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyNjFhMjFlOGU3NGI5OGE5NDNiMmU5ZGUxYjliZWY2NTliYjI4Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-06-06T08:07:31Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-06-06T08:07:31Z"}, "message": "predict.c (tree_estimate_probability_bb): Add LOCAL_ONLY.\n\n\t* predict.c (tree_estimate_probability_bb): Add LOCAL_ONLY.\n\t(tree_guess_outgoing_edge_probabilities): New.\n\t* predict.h (tree_guess_outgoing_edge_probabilities): Declare.\n\t* tree-cfg.c (gimple_find_sub_bbs): Propagate profile.\n\nFrom-SVN: r248912", "tree": {"sha": "f665b1228f58eeb2c1de5f21abf8a0c865ad3f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f665b1228f58eeb2c1de5f21abf8a0c865ad3f74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52261a21e8e74b98a943b2e9de1b9bef659bb28f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52261a21e8e74b98a943b2e9de1b9bef659bb28f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52261a21e8e74b98a943b2e9de1b9bef659bb28f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52261a21e8e74b98a943b2e9de1b9bef659bb28f/comments", "author": null, "committer": null, "parents": [{"sha": "ce6ec23497cbe4cbac8165b927deaba220a523d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6ec23497cbe4cbac8165b927deaba220a523d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce6ec23497cbe4cbac8165b927deaba220a523d8"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "7d6eb885a67cb4a437a2957914f730927b4e5991", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52261a21e8e74b98a943b2e9de1b9bef659bb28f", "patch": "@@ -1,3 +1,10 @@\n+2017-06-06  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* predict.c (tree_estimate_probability_bb): Add LOCAL_ONLY.\n+\t(tree_guess_outgoing_edge_probabilities): New.\n+\t* predict.h (tree_guess_outgoing_edge_probabilities): Declare.\n+\t* tree-cfg.c (gimple_find_sub_bbs): Propagate profile.\n+\n 2017-06-06  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-split.c (split_function): Initialize return bb profile."}, {"sha": "2dbe3afa48ba49a6e38b9d5269605939eeafcc20", "filename": "gcc/predict.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=52261a21e8e74b98a943b2e9de1b9bef659bb28f", "patch": "@@ -2665,10 +2665,11 @@ assert_is_empty (const_basic_block const &, edge_prediction *const &value,\n   return false;\n }\n \n-/* Predict branch probabilities and estimate profile for basic block BB.  */\n+/* Predict branch probabilities and estimate profile for basic block BB.\n+   When LOCAL_ONLY is set do not use any global properties of CFG.  */\n \n static void\n-tree_estimate_probability_bb (basic_block bb)\n+tree_estimate_probability_bb (basic_block bb, bool local_only)\n {\n   edge e;\n   edge_iterator ei;\n@@ -2742,6 +2743,7 @@ tree_estimate_probability_bb (basic_block bb)\n       /* Look for block we are guarding (ie we dominate it,\n \t but it doesn't postdominate us).  */\n       if (e->dest != EXIT_BLOCK_PTR_FOR_FN (cfun) && e->dest != bb\n+\t  && !local_only\n \t  && dominated_by_p (CDI_DOMINATORS, e->dest, e->src)\n \t  && !dominated_by_p (CDI_POST_DOMINATORS, e->src, e->dest))\n \t{\n@@ -2800,7 +2802,7 @@ tree_estimate_probability (bool dry_run)\n     predict_loops ();\n \n   FOR_EACH_BB_FN (bb, cfun)\n-    tree_estimate_probability_bb (bb);\n+    tree_estimate_probability_bb (bb, false);\n \n   FOR_EACH_BB_FN (bb, cfun)\n     combine_predictions_for_bb (bb, dry_run);\n@@ -2816,6 +2818,19 @@ tree_estimate_probability (bool dry_run)\n   free_dominance_info (CDI_POST_DOMINATORS);\n   remove_fake_exit_edges ();\n }\n+\n+/* Set edge->probability for each successor edge of BB.  */\n+void\n+tree_guess_outgoing_edge_probabilities (basic_block bb)\n+{\n+  bb_predictions = new hash_map<const_basic_block, edge_prediction *>;\n+  tree_estimate_probability_bb (bb, true);\n+  combine_predictions_for_bb (bb, false);\n+  if (flag_checking)\n+    bb_predictions->traverse<void *, assert_is_empty> (NULL);\n+  delete bb_predictions;\n+  bb_predictions = NULL;\n+}\n \f\n /* Predict edges to successors of CUR whose sources are not postdominated by\n    BB by PRED and recurse to all postdominators.  */"}, {"sha": "1441fa4d8eb86cdc8fcfebe7f532133656c5ba28", "filename": "gcc/predict.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2Fpredict.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2Fpredict.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.h?ref=52261a21e8e74b98a943b2e9de1b9bef659bb28f", "patch": "@@ -83,6 +83,7 @@ extern void remove_predictions_associated_with_edge (edge);\n extern void predict_edge_def (edge, enum br_predictor, enum prediction);\n extern void invert_br_probabilities (rtx);\n extern void guess_outgoing_edge_probabilities (basic_block);\n+extern void tree_guess_outgoing_edge_probabilities (basic_block);\n extern void tree_estimate_probability (bool);\n extern void handle_missing_profiles (void);\n extern bool counts_to_freqs (void);"}, {"sha": "1d5271a085c688de173794123121b78cadb2085a", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52261a21e8e74b98a943b2e9de1b9bef659bb28f/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=52261a21e8e74b98a943b2e9de1b9bef659bb28f", "patch": "@@ -1048,10 +1048,27 @@ gimple_find_sub_bbs (gimple_seq seq, gimple_stmt_iterator *gsi)\n   while (bb != afterbb)\n     {\n       struct omp_region *cur_region = NULL;\n+      profile_count cnt = profile_count::zero ();\n+      int freq = 0;\n+\n       int cur_omp_region_idx = 0;\n       int mer = make_edges_bb (bb, &cur_region, &cur_omp_region_idx);\n       gcc_assert (!mer && !cur_region);\n       add_bb_to_loop (bb, afterbb->loop_father);\n+\n+      edge e;\n+      edge_iterator ei;\n+      FOR_EACH_EDGE (e, ei, bb->preds)\n+\t{\n+\t  cnt += e->count;\n+\t  freq += EDGE_FREQUENCY (e);\n+\t}\n+      bb->count = cnt;\n+      bb->frequency = freq;\n+      tree_guess_outgoing_edge_probabilities (bb);\n+      FOR_EACH_EDGE (e, ei, bb->succs)\n+\te->count = bb->count.apply_probability (e->probability);\n+\n       bb = bb->next_bb;\n     }\n   return true;"}]}