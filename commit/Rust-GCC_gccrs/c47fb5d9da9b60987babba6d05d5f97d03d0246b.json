{"sha": "c47fb5d9da9b60987babba6d05d5f97d03d0246b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ3ZmI1ZDlkYTliNjA5ODdiYWJiYTZkMDVkNWY5N2QwM2QwMjQ2Yg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-12-11T11:12:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:12:41Z"}, "message": "[Ada] Add \"Global => null\" contracts to Ada.Calendar routines\n\nRoutines in Ada.Real_Time are already annotated with Global => null\ncontracts to suppress spurious warnings from the flow analysis in\nGNATprove. This patch adds such contracts to Ada.Calendar. No change in\nruntime behavior expected.\n\n2018-12-11  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-calend.ads: Add \"Global => null\" contracts to pure\n\troutines.\n\nFrom-SVN: r267018", "tree": {"sha": "36371e6dfc550a9b17aeb58a253f8635ca23247b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36371e6dfc550a9b17aeb58a253f8635ca23247b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c47fb5d9da9b60987babba6d05d5f97d03d0246b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47fb5d9da9b60987babba6d05d5f97d03d0246b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c47fb5d9da9b60987babba6d05d5f97d03d0246b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47fb5d9da9b60987babba6d05d5f97d03d0246b/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "921186579c3ba7d4e1fea8e967ec7d0f804167bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921186579c3ba7d4e1fea8e967ec7d0f804167bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921186579c3ba7d4e1fea8e967ec7d0f804167bf"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "c0ba34a874fca6cde6eea3f8a716068b0f14705f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47fb5d9da9b60987babba6d05d5f97d03d0246b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47fb5d9da9b60987babba6d05d5f97d03d0246b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c47fb5d9da9b60987babba6d05d5f97d03d0246b", "patch": "@@ -1,3 +1,8 @@\n+2018-12-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnat/a-calend.ads: Add \"Global => null\" contracts to pure\n+\troutines.\n+\n 2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* freeze.adb (Check_Pragma_Thread_Local_Storage): Use the"}, {"sha": "02accbd17eb657f282e06a995b3b4f624aa44403", "filename": "gcc/ada/libgnat/a-calend.ads", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47fb5d9da9b60987babba6d05d5f97d03d0246b/gcc%2Fada%2Flibgnat%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47fb5d9da9b60987babba6d05d5f97d03d0246b/gcc%2Fada%2Flibgnat%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-calend.ads?ref=c47fb5d9da9b60987babba6d05d5f97d03d0246b", "patch": "@@ -61,17 +61,19 @@ is\n    --  the result will contain all elapsed leap seconds since the start of\n    --  Ada time until now.\n \n-   function Year    (Date : Time) return Year_Number;\n-   function Month   (Date : Time) return Month_Number;\n-   function Day     (Date : Time) return Day_Number;\n-   function Seconds (Date : Time) return Day_Duration;\n+   function Year    (Date : Time) return Year_Number  with Global => null;\n+   function Month   (Date : Time) return Month_Number with Global => null;\n+   function Day     (Date : Time) return Day_Number   with Global => null;\n+   function Seconds (Date : Time) return Day_Duration with Global => null;\n \n    procedure Split\n      (Date    : Time;\n       Year    : out Year_Number;\n       Month   : out Month_Number;\n       Day     : out Day_Number;\n-      Seconds : out Day_Duration);\n+      Seconds : out Day_Duration)\n+   with\n+     Global => null;\n    --  Break down a time value into its date components set in the current\n    --  time zone. If Split is called on a time value created using Ada 2005\n    --  Time_Of in some arbitrary time zone, the input value will always be\n@@ -81,7 +83,9 @@ is\n      (Year    : Year_Number;\n       Month   : Month_Number;\n       Day     : Day_Number;\n-      Seconds : Day_Duration := 0.0) return Time;\n+      Seconds : Day_Duration := 0.0) return Time\n+   with\n+     Global => null;\n    --  GNAT Note: Normally when procedure Split is called on a Time value\n    --  result of a call to function Time_Of, the out parameters of procedure\n    --  Split are identical to the in parameters of function Time_Of. However,\n@@ -97,19 +101,27 @@ is\n    --  Seconds may be 14340.0 (3:59:00) instead of 10740.0 (2:59:00 being\n    --  a time that not exist).\n \n-   function \"+\" (Left : Time;     Right : Duration) return Time;\n-   function \"+\" (Left : Duration; Right : Time)     return Time;\n-   function \"-\" (Left : Time;     Right : Duration) return Time;\n-   function \"-\" (Left : Time;     Right : Time)     return Duration;\n+   function \"+\" (Left : Time;     Right : Duration) return Time\n+   with\n+     Global => null;\n+   function \"+\" (Left : Duration; Right : Time)     return Time\n+   with\n+     Global => null;\n+   function \"-\" (Left : Time;     Right : Duration) return Time\n+   with\n+     Global => null;\n+   function \"-\" (Left : Time;     Right : Time)     return Duration\n+   with\n+     Global => null;\n    --  The first three functions will raise Time_Error if the resulting time\n    --  value is less than the start of Ada time in UTC or greater than the\n    --  end of Ada time in UTC. The last function will raise Time_Error if the\n    --  resulting difference cannot fit into a duration value.\n \n-   function \"<\"  (Left, Right : Time) return Boolean;\n-   function \"<=\" (Left, Right : Time) return Boolean;\n-   function \">\"  (Left, Right : Time) return Boolean;\n-   function \">=\" (Left, Right : Time) return Boolean;\n+   function \"<\"  (Left, Right : Time) return Boolean with Global => null;\n+   function \"<=\" (Left, Right : Time) return Boolean with Global => null;\n+   function \">\"  (Left, Right : Time) return Boolean with Global => null;\n+   function \">=\" (Left, Right : Time) return Boolean with Global => null;\n \n    Time_Error : exception;\n "}]}