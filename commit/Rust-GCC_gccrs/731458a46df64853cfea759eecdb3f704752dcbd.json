{"sha": "731458a46df64853cfea759eecdb3f704752dcbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMxNDU4YTQ2ZGY2NDg1M2NmZWE3NTllZWNkYjNmNzA0NzUyZGNiZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-21T09:46:38Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-21T09:46:38Z"}, "message": "re PR target/8366 ([sparc-sun-solaris2.7] C testsuite failure w/-m64 -fpic -O in execute/loop-2d.c)\n\n\tPR optimization/8366\n\t* config/sparc/sparc.h: (SYMBOLIC_CONST): New macro.\n\t(GO_IF_LEGITIMATE_ADDRESS): Use it. Reject the form\n\tPIC+SYMBOLIC_CONST in other modes than Pmode.\n\t(GO_IF_MODE_DEPENDENT_ADDRESS): Use it. Mark\n\tthe form PIC+SYMBOLIC_CONST as mode dependent.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r64657", "tree": {"sha": "ae593015fccda5a4879fbe4577f86ef274187d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae593015fccda5a4879fbe4577f86ef274187d18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/731458a46df64853cfea759eecdb3f704752dcbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731458a46df64853cfea759eecdb3f704752dcbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/731458a46df64853cfea759eecdb3f704752dcbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731458a46df64853cfea759eecdb3f704752dcbd/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30b3f142281e886b688b852374172d3abeb3239a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b3f142281e886b688b852374172d3abeb3239a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b3f142281e886b688b852374172d3abeb3239a"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "2178dac3b0d803f1f83906829eb3b0cbbfec24ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731458a46df64853cfea759eecdb3f704752dcbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731458a46df64853cfea759eecdb3f704752dcbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=731458a46df64853cfea759eecdb3f704752dcbd", "patch": "@@ -1,3 +1,13 @@\n+2003-03-21  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Richard Henderson  <rth@redhat.com>\n+\n+\tPR optimization/8366\n+\t* config/sparc/sparc.h: (SYMBOLIC_CONST): New macro.\n+\t(GO_IF_LEGITIMATE_ADDRESS): Use it. Reject the form\n+\tPIC+SYMBOLIC_CONST in other modes than Pmode.\n+\t(GO_IF_MODE_DEPENDENT_ADDRESS): Use it. Mark\n+\tthe form PIC+SYMBOLIC_CONST as mode dependent.\n+\n 2003-03-21  DJ Delorie  <dj@redhat.com>\n \n \t* config/stormy16/stormy16.c (xstormy16_expand_arith): Make"}, {"sha": "2e47ba456e74f1c4bc872dd86de0cea211b0c556", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731458a46df64853cfea759eecdb3f704752dcbd/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731458a46df64853cfea759eecdb3f704752dcbd/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=731458a46df64853cfea759eecdb3f704752dcbd", "patch": "@@ -2180,6 +2180,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n    If you change this, execute \"rm explow.o recog.o reload.o\".  */\n \n+#define SYMBOLIC_CONST(X) symbolic_operand (X, VOIDmode)\n+\n #define RTX_OK_FOR_BASE_P(X)\t\t\t\t\t\t\\\n   ((GET_CODE (X) == REG && REG_OK_FOR_BASE_P (X))\t\t\t\\\n   || (GET_CODE (X) == SUBREG\t\t\t\t\t\t\\\n@@ -2213,6 +2215,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\t   && GET_CODE (op1) != REG\t\t\\\n \t\t   && GET_CODE (op1) != LO_SUM\t\t\\\n \t\t   && GET_CODE (op1) != MEM\t\t\\\n+\t\t   && (! SYMBOLIC_CONST (op1)\t\t\\\n+\t\t       || MODE == Pmode)\t\t\\\n \t\t   && (GET_CODE (op1) != CONST_INT\t\\\n \t\t       || SMALL_INT (op1)))\t\t\\\n \t    goto ADDR;\t\t\t\t\t\\\n@@ -2300,6 +2304,34 @@ do {\t\t\t\t\t\t\t\t\t\\\n   else if (GET_CODE (X) == CONST_INT && SMALL_INT (X))\t\\\n     goto ADDR;\t\t\t\t\t\t\\\n }\n+\n+/* Go to LABEL if ADDR (a legitimate address expression)\n+   has an effect that depends on the machine mode it is used for.\n+\n+   In PIC mode,\n+\n+      (mem:HI [%l7+a])\n+\n+   is not equivalent to\n+   \n+      (mem:QI [%l7+a]) (mem:QI [%l7+a+1])\n+\n+   because [%l7+a+1] is interpreted as the address of (a+1).  */\n+\n+#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR, LABEL)\t\\\n+{\t\t\t\t\t\t\t\\\n+  if (flag_pic == 1)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (GET_CODE (ADDR) == PLUS)\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  rtx op0 = XEXP (ADDR, 0);\t\t\t\\\n+\t  rtx op1 = XEXP (ADDR, 1);\t\t\t\\\n+\t  if (op0 == pic_offset_table_rtx\t\t\\\n+\t      && SYMBOLIC_CONST (op1))\t\t\t\\\n+\t    goto LABEL;\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+}\n \f\n /* Try machine-dependent ways of modifying an illegitimate address\n    to be legitimate.  If we find one, return the new, valid address.\n@@ -2377,12 +2409,6 @@ do {                                                                    \\\n     }\t\t\t\t\t\t\t\t\t\\\n   /* ??? 64-bit reloads.  */\t\t\t\t\t\t\\\n } while (0)\n-\n-/* Go to LABEL if ADDR (a legitimate address expression)\n-   has an effect that depends on the machine mode it is used for.\n-   On the SPARC this is never true.  */\n-\n-#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR,LABEL)\n \f\n /* Specify the machine mode that this machine uses\n    for the index in the tablejump instruction.  */"}]}