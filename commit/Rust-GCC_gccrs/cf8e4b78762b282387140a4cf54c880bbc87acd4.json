{"sha": "cf8e4b78762b282387140a4cf54c880bbc87acd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y4ZTRiNzg3NjJiMjgyMzg3MTQwYTRjZjU0Yzg4MGJiYzg3YWNkNA==", "commit": {"author": {"name": "Dara Hazeghi", "email": "dhazeghi@yahoo.com", "date": "2003-06-19T19:04:03Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-06-19T19:04:03Z"}, "message": "configure.in: Add check for malloc.h needed by m68k for function free().\n\n* configure.in: Add check for malloc.h needed by\nm68k for function free().\n* configure: Regenerated.\n* config.in: Add HAVE_MALLOC_H.\n* hashtab.c: include malloc.h were available for\nfree().\n\nFrom-SVN: r68213", "tree": {"sha": "ac195bf90dec9c09ee26c024098cd64f92ec748d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac195bf90dec9c09ee26c024098cd64f92ec748d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf8e4b78762b282387140a4cf54c880bbc87acd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8e4b78762b282387140a4cf54c880bbc87acd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf8e4b78762b282387140a4cf54c880bbc87acd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8e4b78762b282387140a4cf54c880bbc87acd4/comments", "author": null, "committer": null, "parents": [{"sha": "5f6c070d3db282ca4b07569f2cf8ba9951979110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6c070d3db282ca4b07569f2cf8ba9951979110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6c070d3db282ca4b07569f2cf8ba9951979110"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "84d4bcdf16f46638dca4c9ce38daffa63f5ad120", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=cf8e4b78762b282387140a4cf54c880bbc87acd4", "patch": "@@ -1,3 +1,12 @@\n+2003-06-19  Dara Hazeghi  <dhazeghi@yahoo.com>\n+\n+\t* configure.in: Add check for malloc.h needed by\n+\tm68k for function free().\n+\t* configure: Regenerated.\n+\t* config.in: Add HAVE_MALLOC_H.\n+\t* hashtab.c: include malloc.h were available for\n+\tfree().\n+\n 2003-06-09  Albert Chin-A-Young  <china@thewrittenword.com>\n \t\n \tPR bootstrap/10974"}, {"sha": "50ed32668525e56b56d3181943ef4ec3aefa3d9a", "filename": "libiberty/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=cf8e4b78762b282387140a4cf54c880bbc87acd4", "patch": "@@ -291,6 +291,9 @@\n /* Define if you have the <unistd.h> header file.  */\n #undef HAVE_UNISTD_H\n \n+/* Define if you have the <malloc.h> header file.  */\n+#undef HAVE_MALLOC_H\n+\n /* whether byteorder is bigendian */\n #undef WORDS_BIGENDIAN\n "}, {"sha": "77d5170a877f49a32114dc8329eedfefb0246da3", "filename": "libiberty/configure", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=cf8e4b78762b282387140a4cf54c880bbc87acd4", "patch": "@@ -1492,7 +1492,7 @@ else\n fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n-for ac_hdr in sys/file.h sys/param.h limits.h stdlib.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h\n+for ac_hdr in sys/file.h sys/param.h limits.h stdlib.h malloc.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n@@ -2900,7 +2900,7 @@ case \"${host}\" in\n esac\n \n \n-for ac_hdr in unistd.h\n+for ac_hdr in stdlib.h unistd.h sys/stat.h sys/types.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n@@ -3032,11 +3032,24 @@ else\n #include <fcntl.h>\n #include <sys/mman.h>\n \n+#if HAVE_SYS_TYPES_H\n+# include <sys/types.h>\n+#endif\n+\n+#if HAVE_STDLIB_H\n+# include <stdlib.h>\n+#endif\n+\n+#if HAVE_SYS_STAT_H\n+# include <sys/stat.h>\n+#endif\n+\n+#if HAVE_UNISTD_H\n+# include <unistd.h>\n+#endif\n+\n /* This mess was copied from the GNU getpagesize.h.  */\n #ifndef HAVE_GETPAGESIZE\n-# ifdef HAVE_UNISTD_H\n-#  include <unistd.h>\n-# endif\n \n /* Assume that all systems that can run configure have sys/param.h.  */\n # ifndef HAVE_SYS_PARAM_H\n@@ -3144,7 +3157,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:3148: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3161: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -3168,15 +3181,15 @@ fi\n \n \n echo $ac_n \"checking for working strncmp\"\"... $ac_c\" 1>&6\n-echo \"configure:3172: checking for working strncmp\" >&5\n+echo \"configure:3185: checking for working strncmp\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_strncmp_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_strncmp_works=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3180 \"configure\"\n+#line 3193 \"configure\"\n #include \"confdefs.h\"\n \n /* Test by Jim Wilson and Kaveh Ghazi.\n@@ -3240,7 +3253,7 @@ main ()\n }\n \n EOF\n-if { (eval echo configure:3244: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3257: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_strncmp_works=yes\n else"}, {"sha": "5dca13ed6f62b9c5f051293d19235f5407a11626", "filename": "libiberty/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=cf8e4b78762b282387140a4cf54c880bbc87acd4", "patch": "@@ -143,7 +143,7 @@ AC_SUBST_FILE(host_makefile_frag)\n # It's OK to check for header files.  Although the compiler may not be\n # able to link anything, it had better be able to at least compile\n # something.\n-AC_CHECK_HEADERS(sys/file.h sys/param.h limits.h stdlib.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h)\n+AC_CHECK_HEADERS(sys/file.h sys/param.h limits.h stdlib.h malloc.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h)\n AC_HEADER_SYS_WAIT\n AC_HEADER_TIME\n "}, {"sha": "cbf82592be1ef60ac18cc5bba7112ca86f253322", "filename": "libiberty/hashtab.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fhashtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8e4b78762b282387140a4cf54c880bbc87acd4/libiberty%2Fhashtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhashtab.c?ref=cf8e4b78762b282387140a4cf54c880bbc87acd4", "patch": "@@ -45,6 +45,10 @@ Boston, MA 02111-1307, USA.  */\n #include <string.h>\n #endif\n \n+#ifdef HAVE_MALLOC_H\n+#include <malloc.h>\n+#endif\n+\n #include <stdio.h>\n \n #include \"libiberty.h\""}]}