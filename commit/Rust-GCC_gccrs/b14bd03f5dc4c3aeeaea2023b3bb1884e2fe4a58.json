{"sha": "b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE0YmQwM2Y1ZGM0YzNhZWVhZWEyMDIzYjNiYjE4ODRlMmZlNGE1OA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2010-06-14T13:09:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T13:09:06Z"}, "message": "lib-util.adb: Minor code reorganization.\n\n2010-06-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* lib-util.adb: Minor code reorganization.\n\nFrom-SVN: r160738", "tree": {"sha": "644d95c20142b722e374da23c877fc0986c0d0c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644d95c20142b722e374da23c877fc0986c0d0c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58/comments", "author": null, "committer": null, "parents": [{"sha": "7eaa7cdf7da806ba900237e34eb11fd580039da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eaa7cdf7da806ba900237e34eb11fd580039da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eaa7cdf7da806ba900237e34eb11fd580039da3"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "53a2c3bf3a54642ea7445609c13a950176e1cec4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58", "patch": "@@ -1,3 +1,7 @@\n+2010-06-14  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* lib-util.adb: Minor code reorganization.\n+\n 2010-06-14  Robert Dewar  <dewar@adacore.com>\n \n \t* ali.adb (Scan_ALI): Implement reading and storing of N lines"}, {"sha": "9047690d6637a05b770d95c241e974941418134e", "filename": "gcc/ada/lib-util.adb", "status": "modified", "additions": 21, "deletions": 26, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58/gcc%2Fada%2Flib-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58/gcc%2Fada%2Flib-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-util.adb?ref=b14bd03f5dc4c3aeeaea2023b3bb1884e2fe4a58", "patch": "@@ -40,8 +40,13 @@ package body Lib.Util is\n \n    Info_Buffer_Col : Natural := 1;\n    --  Column number of next character to be written.\n-   --  Can be different from Info_Buffer_Len + 1.\n-   --  because of tab characters written by Write_Info_Tab.\n+   --  Can be different from Info_Buffer_Len + 1 because of tab characters\n+   --  written by Write_Info_Tab.\n+\n+   procedure Write_Info_Hex_Byte (J : Natural);\n+   --  Place two hex digits representing the value J (which is in the range\n+   --  0-255) in Info_Buffer, incrementing Info_Buffer_Len by 2. The digits\n+   --  are output using lower case letters.\n \n    ---------------------\n    -- Write_Info_Char --\n@@ -59,20 +64,6 @@ package body Lib.Util is\n    --------------------------\n \n    procedure Write_Info_Char_Code (Code : Char_Code) is\n-\n-      procedure Write_Info_Hex_Byte (J : Natural);\n-      --  Write single hex digit\n-\n-      procedure Write_Info_Hex_Byte (J : Natural) is\n-         Hexd : constant String := \"0123456789abcdef\";\n-\n-      begin\n-         Write_Info_Char (Hexd (J / 16 + 1));\n-         Write_Info_Char (Hexd (J mod 16 + 1));\n-      end Write_Info_Hex_Byte;\n-\n-   --  Start of processing for Write_Info_Char_Code\n-\n    begin\n       --  00 .. 7F\n \n@@ -128,6 +119,17 @@ package body Lib.Util is\n       end if;\n    end Write_Info_EOL;\n \n+   -------------------------\n+   -- Write_Info_Hex_Byte --\n+   -------------------------\n+\n+   procedure Write_Info_Hex_Byte (J : Natural) is\n+      Hexd : constant array (0 .. 15) of Character := \"0123456789abcdef\";\n+   begin\n+      Write_Info_Char (Hexd (J / 16));\n+      Write_Info_Char (Hexd (J mod 16));\n+   end Write_Info_Hex_Byte;\n+\n    -------------------------\n    -- Write_Info_Initiate --\n    -------------------------\n@@ -210,16 +212,9 @@ package body Lib.Util is\n             end if;\n \n          else\n-            declare\n-               Hex : constant array (0 .. 15) of Character :=\n-                       \"0123456789ABCDEF\";\n-\n-            begin\n-               Write_Info_Char ('{');\n-               Write_Info_Char (Hex (Character'Pos (C) / 16));\n-               Write_Info_Char (Hex (Character'Pos (C) mod 16));\n-               Write_Info_Char ('}');\n-            end;\n+            Write_Info_Char ('{');\n+            Write_Info_Hex_Byte (Character'Pos (C));\n+            Write_Info_Char ('}');\n          end if;\n       end loop;\n "}]}