{"sha": "4926b75a9fecb157fef00f88c828e3cfc9ceb6fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkyNmI3NWE5ZmVjYjE1N2ZlZjAwZjg4YzgyOGUzY2ZjOWNlYjZmZA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-01-26T23:05:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-26T23:05:08Z"}, "message": "emit-rtl.c (gen_lowpart_common): Handle more case where converting a CONST_INT into SFmode.\n\n        * emit-rtl.c (gen_lowpart_common): Handle more case where converting\n        a CONST_INT into SFmode.\n\nFrom-SVN: r17498", "tree": {"sha": "62ff1e3d78d26e4712e45a35ae0ded9c1243e794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62ff1e3d78d26e4712e45a35ae0ded9c1243e794"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd/comments", "author": null, "committer": null, "parents": [{"sha": "c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "ce25f7e573a7c7f2e2ca3376ac57592f988fdfc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4926b75a9fecb157fef00f88c828e3cfc9ceb6fd", "patch": "@@ -1,3 +1,8 @@\n+Tue Jan 27 00:07:02 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+        * emit-rtl.c (gen_lowpart_common): Handle more case where converting\n+\ta CONST_INT into SFmode.\n+\n Tue Jan 20 16:01:03 1998  Anthony Green  <green@cygnus.com>\n \n \t* flags.h: New flag (optimize_size)."}, {"sha": "602766d2e6764ba6e799495dc1c9c0653170fb75", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4926b75a9fecb157fef00f88c828e3cfc9ceb6fd/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=4926b75a9fecb157fef00f88c828e3cfc9ceb6fd", "patch": "@@ -795,14 +795,10 @@ gen_lowpart_common (mode, x)\n #endif\n \n   /* We need an extra case for machines where HOST_BITS_PER_WIDE_INT is the\n-     same as sizeof (double), such as the alpha.  We only handle the\n-     REAL_ARITHMETIC case, which is easy.  Testing HOST_BITS_PER_WIDE_INT\n-     is not strictly necessary, but is done to restrict this code to cases\n-     where it is known to work.  */\n+     same as sizeof (double) or when sizeof (float) is larger than the\n+     size of a word on the target machine.  */\n #ifdef REAL_ARITHMETIC\n-  else if (mode == SFmode\n-\t   && GET_CODE (x) == CONST_INT\n-\t   && GET_MODE_BITSIZE (mode) * 2 == HOST_BITS_PER_WIDE_INT)\n+  else if (mode == SFmode && GET_CODE (x) == CONST_INT)\n     {\n       REAL_VALUE_TYPE r;\n       HOST_WIDE_INT i;"}]}