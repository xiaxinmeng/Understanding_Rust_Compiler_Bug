{"sha": "dbe36d674a7e0916981fbb8728d4c31d26e84462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJlMzZkNjc0YTdlMDkxNjk4MWZiYjg3MjhkNGMzMWQyNmU4NDQ2Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T11:06:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T11:06:39Z"}, "message": "[multiple changes]\n\n2011-09-01  Pascal Obry  <obry@adacore.com>\n\n\t* prj-proc.adb, prj.ads, sinput-p.adb: Minor reformatting.\n\n2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Generate references to\n\tthe formals of a subprogram stub that acts as a spec.\n\n2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Expand_Inlined_Call): If an actual is a by_reference\n\ttype, declare a renaming for it, not an object declaration.\n\nFrom-SVN: r178407", "tree": {"sha": "98b929665df3df7318cc6c5fd428f4415c125e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98b929665df3df7318cc6c5fd428f4415c125e73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbe36d674a7e0916981fbb8728d4c31d26e84462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe36d674a7e0916981fbb8728d4c31d26e84462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe36d674a7e0916981fbb8728d4c31d26e84462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe36d674a7e0916981fbb8728d4c31d26e84462/comments", "author": null, "committer": null, "parents": [{"sha": "f503788621ee1fadc3bcd506f8939b3cd82d6876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f503788621ee1fadc3bcd506f8939b3cd82d6876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f503788621ee1fadc3bcd506f8939b3cd82d6876"}], "stats": {"total": 118, "additions": 68, "deletions": 50}, "files": [{"sha": "a9f6b8b7a611a74b90371c9058ca90529ede14bb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dbe36d674a7e0916981fbb8728d4c31d26e84462", "patch": "@@ -1,3 +1,17 @@\n+2011-09-01  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-proc.adb, prj.ads, sinput-p.adb: Minor reformatting.\n+\n+2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Generate references to\n+\tthe formals of a subprogram stub that acts as a spec.\n+\n+2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Inlined_Call): If an actual is a by_reference\n+\ttype, declare a renaming for it, not an object declaration.\n+\n 2011-09-01  Yannick Moy  <moy@adacore.com>\n \n \t* ali-util.adb, ali-util.ads (Read_Withed_ALIs): Add parameter"}, {"sha": "5f607796953c774099671f479fdfc343e26a641f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=dbe36d674a7e0916981fbb8728d4c31d26e84462", "patch": "@@ -4188,6 +4188,7 @@ package body Exp_Ch6 is\n             if Ekind (F) = E_In_Parameter\n               and then not Is_Limited_Type (Etype (A))\n               and then not Is_Tagged_Type  (Etype (A))\n+              and then not Is_By_Reference_Type (Etype (A))\n               and then\n                (not Is_Array_Type (Etype (A))\n                  or else not Is_Object_Reference (A)"}, {"sha": "251b86d7661948d6d0c039a230397391ce275feb", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=dbe36d674a7e0916981fbb8728d4c31d26e84462", "patch": "@@ -1992,7 +1992,7 @@ package body Prj.Proc is\n          Var  : Variable_Id := No_Variable;\n \n       begin\n-         --  First, find the list where to find the variable or attribute.\n+         --  First, find the list where to find the variable or attribute\n \n          if Is_Attribute then\n             if Pkg /= No_Package then\n@@ -2009,7 +2009,7 @@ package body Prj.Proc is\n             end if;\n          end if;\n \n-         --  Loop through the list, to find if it has already been declared.\n+         --  Loop through the list, to find if it has already been declared\n \n          while Var /= No_Variable\n            and then Shared.Variable_Elements.Table (Var).Name /= Name\n@@ -2496,7 +2496,7 @@ package body Prj.Proc is\n       Extended_By            : Project_Id)\n    is\n       Shared : constant Shared_Project_Tree_Data_Access :=\n-        In_Tree.Shared;\n+                 In_Tree.Shared;\n \n       Child_Env              : Prj.Tree.Environment;\n       --  Only used for the root aggregate project (if any). This is left\n@@ -2765,7 +2765,6 @@ package body Prj.Proc is\n             Project := Processed_Projects.Get (Name);\n \n             if Project /= No_Project then\n-\n                --  Make sure that, when a project is extended, the project id\n                --  of the project extending it is recorded in its data, even\n                --  when it has already been processed as an imported project."}, {"sha": "3ab0f3e62d37d745fee18a7ecb1f5a4ff4322bae", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=dbe36d674a7e0916981fbb8728d4c31d26e84462", "patch": "@@ -235,10 +235,10 @@ package Prj is\n    --  packages) for a project or a package in a project.\n \n    No_Declarations : constant Declarations :=\n-     (Variables  => No_Variable,\n-      Attributes => No_Variable,\n-      Arrays     => No_Array,\n-      Packages   => No_Package);\n+                       (Variables  => No_Variable,\n+                        Attributes => No_Variable,\n+                        Arrays     => No_Array,\n+                        Packages   => No_Package);\n    --  Default value of Declarations: indicates that there is no declarations\n \n    type Package_Element is record\n@@ -1861,39 +1861,39 @@ private\n    end record;\n \n    Gprbuild_Flags : constant Processing_Flags :=\n-     (Report_Error               => null,\n-      When_No_Sources            => Warning,\n-      Require_Sources_Other_Lang => True,\n-      Allow_Duplicate_Basenames  => False,\n-      Compiler_Driver_Mandatory  => True,\n-      Error_On_Unknown_Language  => True,\n-      Require_Obj_Dirs           => Error,\n-      Allow_Invalid_External     => Error,\n-      Missing_Source_Files       => Error,\n-      Ignore_Missing_With        => False);\n+                      (Report_Error               => null,\n+                       When_No_Sources            => Warning,\n+                       Require_Sources_Other_Lang => True,\n+                       Allow_Duplicate_Basenames  => False,\n+                       Compiler_Driver_Mandatory  => True,\n+                       Error_On_Unknown_Language  => True,\n+                       Require_Obj_Dirs           => Error,\n+                       Allow_Invalid_External     => Error,\n+                       Missing_Source_Files       => Error,\n+                       Ignore_Missing_With        => False);\n \n    Gprclean_Flags : constant Processing_Flags :=\n-     (Report_Error               => null,\n-      When_No_Sources            => Warning,\n-      Require_Sources_Other_Lang => True,\n-      Allow_Duplicate_Basenames  => False,\n-      Compiler_Driver_Mandatory  => True,\n-      Error_On_Unknown_Language  => True,\n-      Require_Obj_Dirs           => Warning,\n-      Allow_Invalid_External     => Error,\n-      Missing_Source_Files       => Error,\n-      Ignore_Missing_With        => False);\n+                      (Report_Error               => null,\n+                       When_No_Sources            => Warning,\n+                       Require_Sources_Other_Lang => True,\n+                       Allow_Duplicate_Basenames  => False,\n+                       Compiler_Driver_Mandatory  => True,\n+                       Error_On_Unknown_Language  => True,\n+                       Require_Obj_Dirs           => Warning,\n+                       Allow_Invalid_External     => Error,\n+                       Missing_Source_Files       => Error,\n+                       Ignore_Missing_With        => False);\n \n    Gnatmake_Flags : constant Processing_Flags :=\n-     (Report_Error               => null,\n-      When_No_Sources            => Error,\n-      Require_Sources_Other_Lang => False,\n-      Allow_Duplicate_Basenames  => False,\n-      Compiler_Driver_Mandatory  => False,\n-      Error_On_Unknown_Language  => False,\n-      Require_Obj_Dirs           => Error,\n-      Allow_Invalid_External     => Error,\n-      Missing_Source_Files       => Error,\n-      Ignore_Missing_With        => False);\n+                      (Report_Error               => null,\n+                       When_No_Sources            => Error,\n+                       Require_Sources_Other_Lang => False,\n+                       Allow_Duplicate_Basenames  => False,\n+                       Compiler_Driver_Mandatory  => False,\n+                       Error_On_Unknown_Language  => False,\n+                       Require_Obj_Dirs           => Error,\n+                       Allow_Invalid_External     => Error,\n+                       Missing_Source_Files       => Error,\n+                       Ignore_Missing_With        => False);\n \n end Prj;"}, {"sha": "d3dfedd43f080eb596e7d32959dd043673796673", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=dbe36d674a7e0916981fbb8728d4c31d26e84462", "patch": "@@ -2565,10 +2565,14 @@ package body Sem_Ch6 is\n             Set_Contract (Body_Id, Make_Contract (Sloc (Body_Id)));\n             Generate_Reference\n               (Body_Id, Body_Id, 'b', Set_Ref => False, Force => True);\n-            Generate_Reference_To_Formals (Body_Id);\n             Install_Formals (Body_Id);\n             Push_Scope (Body_Id);\n          end if;\n+\n+         --  For stubs and bodies with no previous spec, generate references to\n+         --  formals.\n+\n+         Generate_Reference_To_Formals (Body_Id);\n       end if;\n \n       --  If the return type is an anonymous access type whose designated type\n@@ -2600,7 +2604,7 @@ package body Sem_Ch6 is\n \n       --  If this is the proper body of a stub, we must verify that the stub\n       --  conforms to the body, and to the previous spec if one was present.\n-      --  we know already that the body conforms to that spec. This test is\n+      --  We know already that the body conforms to that spec. This test is\n       --  only required for subprograms that come from source.\n \n       if Nkind (Parent (N)) = N_Subunit\n@@ -2626,8 +2630,8 @@ package body Sem_Ch6 is\n \n                if not Conformant then\n \n-                  --  The stub was taken to be a new declaration. Indicate\n-                  --  that it lacks a body.\n+                  --  The stub was taken to be a new declaration. Indicate that\n+                  --  it lacks a body.\n \n                   Set_Has_Completion (Old_Id, False);\n                end if;\n@@ -2651,7 +2655,7 @@ package body Sem_Ch6 is\n       end if;\n \n       --  Ada 2005 (AI-262): In library subprogram bodies, after the analysis\n-      --  if its specification we have to install the private withed units.\n+      --  of the specification we have to install the private withed units.\n       --  This holds for child units as well.\n \n       if Is_Compilation_Unit (Body_Id)\n@@ -2763,8 +2767,8 @@ package body Sem_Ch6 is\n \n          if Present (Last_Real_Spec_Entity) then\n \n-            --  No body entities (happens when the only real spec entities\n-            --  come from precondition and postcondition pragmas)\n+            --  No body entities (happens when the only real spec entities come\n+            --  from precondition and postcondition pragmas).\n \n             if No (Last_Entity (Body_Id)) then\n                Set_First_Entity\n@@ -2781,8 +2785,8 @@ package body Sem_Ch6 is\n             Set_Last_Entity (Body_Id, Last_Entity (Spec_Id));\n             Set_Last_Entity (Spec_Id, Last_Real_Spec_Entity);\n \n-         --  Case where there are no spec entities, in this case there can\n-         --  be no body entities either, so just move everything.\n+         --  Case where there are no spec entities, in this case there can be\n+         --  no body entities either, so just move everything.\n \n          else\n             pragma Assert (No (Last_Entity (Body_Id)));\n@@ -2804,7 +2808,7 @@ package body Sem_Ch6 is\n       --  might be the following common idiom for a stubbed function:\n       --  statement of the procedure raises an exception. In particular this\n       --  deals with the common idiom of a stubbed function, which might\n-      --  appear as something like\n+      --  appear as something like:\n \n       --     function F (A : Integer) return Some_Type;\n       --        X : Some_Type;"}, {"sha": "156f036d3cfde6af4028738eb2ac7cc9627f0d7a", "filename": "gcc/ada/sinput-p.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fsinput-p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe36d674a7e0916981fbb8728d4c31d26e84462/gcc%2Fada%2Fsinput-p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.adb?ref=dbe36d674a7e0916981fbb8728d4c31d26e84462", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -97,7 +97,7 @@ package body Sinput.P is\n    -----------------------\n \n    function Load_Project_File (Path : String) return Source_File_Index is\n-      X    : Source_File_Index;\n+      X : Source_File_Index;\n \n    begin\n       X := Sinput.C.Load_File (Path);"}]}