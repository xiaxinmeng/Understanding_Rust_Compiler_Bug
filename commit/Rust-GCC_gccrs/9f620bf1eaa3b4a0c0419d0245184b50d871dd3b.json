{"sha": "9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2MjBiZjFlYWEzYjRhMGMwNDE5ZDAyNDUxODRiNTBkODcxZGQzYg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-07-10T08:25:18Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-07-10T08:25:18Z"}, "message": "Insert new bound in try_transform_to_exit_first_loop_alt\n\n2015-07-10  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-parloops.c (try_transform_to_exit_first_loop_alt): If not found,\n\tinsert nit + 1 bound.\n\n\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: New test.\n\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: New test.\n\n\t* gfortran.dg/parloops-exit-first-loop-alt-2.f95: New test.\n\t* gfortran.dg/parloops-exit-first-loop-alt.f95: New test.\n\nFrom-SVN: r225655", "tree": {"sha": "44f02740ee8ce53dcbdabefda2290ac7c2c32586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44f02740ee8ce53dcbdabefda2290ac7c2c32586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/comments", "author": null, "committer": null, "parents": [{"sha": "094fe02336be4ba0bf630ab056d34c0333ff0852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094fe02336be4ba0bf630ab056d34c0333ff0852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094fe02336be4ba0bf630ab056d34c0333ff0852"}], "stats": {"total": 157, "additions": 156, "deletions": 1}, "files": [{"sha": "91bf101a22c38e9b7be507923b98e27f3b5c052f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -1,3 +1,8 @@\n+2015-07-10  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-parloops.c (try_transform_to_exit_first_loop_alt): If not found,\n+\tinsert nit + 1 bound.\n+\n 2015-07-10  Richard Biener  <rguenther@suse.de>\n \n \t* tree-if-conv.c (if_convertible_gimple_assign_stmt_p):"}, {"sha": "59e446c43cfef8f2981151bb3e33281833fa3bb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -1,3 +1,8 @@\n+2015-07-10  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* gfortran.dg/parloops-exit-first-loop-alt-2.f95: New test.\n+\t* gfortran.dg/parloops-exit-first-loop-alt.f95: New test.\n+\n 2015-07-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66823"}, {"sha": "f26a6e375adeba7f6960bc5015cbe58b71c41a2b", "filename": "gcc/testsuite/gfortran.dg/parloops-exit-first-loop-alt-2.f95", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt-2.f95?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -0,0 +1,24 @@\n+! { dg-additional-options \"-O2\" }\n+! { dg-require-effective-target pthread }\n+! { dg-additional-options \"-ftree-parallelize-loops=2\" }\n+! { dg-additional-options \"-fdump-tree-parloops\" }\n+\n+! Constant bound, vector addition.\n+\n+subroutine foo ()\n+  integer, parameter :: n = 1000\n+  integer, dimension (0:n-1) :: a, b, c\n+  common a, b, c\n+  integer :: ii\n+\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii) + 25\n+  end do\n+end subroutine foo\n+\n+! Three times plus 25:\n+! - once in f._loopfn.0\n+! - once in the parallel\n+! - once in the low iteration count loop\n+! Crucially, none for a peeled off last iteration following the parallel.\n+! { dg-final { scan-tree-dump-times \"(?n) \\\\+ 25;\" 3 \"parloops\" } }"}, {"sha": "6dc8a38c1ef38f3e4f58cabc4e14b66e67e78a9b", "filename": "gcc/testsuite/gfortran.dg/parloops-exit-first-loop-alt.f95", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt.f95?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -0,0 +1,25 @@\n+! { dg-additional-options \"-O2\" }\n+! { dg-require-effective-target pthread }\n+! { dg-additional-options \"-ftree-parallelize-loops=2\" }\n+! { dg-additional-options \"-fdump-tree-parloops\" }\n+\n+! Variable bound, vector addition.\n+\n+subroutine foo (nr)\n+  integer, intent(in) :: nr\n+  integer, parameter :: n = 1000\n+  integer, dimension (0:n-1) :: a, b, c\n+  common a, b, c\n+  integer :: ii\n+\n+  do ii = 0, nr - 1\n+     c(ii) = a(ii) + b(ii) + 25\n+  end do\n+end subroutine foo\n+\n+! Three times plus 25:\n+! - once in f._loopfn.0\n+! - once in the parallel\n+! - once in the low iteration count loop\n+! Crucially, none for a peeled off last iteration following the parallel.\n+! { dg-final { scan-tree-dump-times \"(?n) \\\\+ 25;\" 3 \"parloops\" } }"}, {"sha": "bda5d05cb6fca072e353b3de2f0ce33195a272df", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -1828,8 +1828,18 @@ try_transform_to_exit_first_loop_alt (struct loop *loop,\n \talt_bound = op1;\n     }\n \n+  /* If not found, insert nit + 1.  */\n   if (alt_bound == NULL_TREE)\n-    return false;\n+    {\n+      alt_bound = fold_build2 (PLUS_EXPR, nit_type, nit,\n+\t\t\t       build_int_cst_type (nit_type, 1));\n+\n+      gimple_stmt_iterator gsi = gsi_last_bb (loop_preheader_edge (loop)->src);\n+\n+      alt_bound\n+\t= force_gimple_operand_gsi (&gsi, alt_bound, true, NULL_TREE, false,\n+\t\t\t\t    GSI_CONTINUE_LINKING);\n+    }\n \n   transform_to_exit_first_loop_alt (loop, reduction_list, alt_bound);\n   return true;"}, {"sha": "ff1fd17ab3626cb1a962f0abf66c4c8980565a4b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -1,3 +1,8 @@\n+2015-07-10  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: New test.\n+\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: New test.\n+\n 2015-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR libgomp/65099"}, {"sha": "56add651026b76469f6c980cff3b18b748c08563", "filename": "libgomp/testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+! { dg-additional-options \"-O2\" }\n+! { dg-additional-options \"-ftree-parallelize-loops=2\" }\n+\n+! Constant bound, vector addition.\n+\n+subroutine foo ()\n+  integer, parameter :: n = 1000\n+  integer, dimension (0:n-1) :: a, b, c\n+  common a, b, c\n+  integer :: ii\n+\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+end subroutine foo\n+\n+program main\n+  integer, parameter :: n = 1000\n+  integer, parameter :: distrib = 10\n+  integer, dimension (0:n-1) :: a, b, c\n+  common a, b, c\n+  integer :: i, j, k\n+\n+  do j = 0, ((n / distrib) -1)\n+     do i = 0, distrib - 1\n+\tk = i + (distrib * j)\n+\ta(k) = k\n+\tb(k) = MODULO ((k * 3), 7)\n+\tc(k) = k * 2;\n+     end do\n+  end do\n+\n+  call foo ()\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. (i + MODULO ((i * 3), 7))) call abort\n+  end do\n+\n+end program"}, {"sha": "72b3c8d647764948698813e88ec322eb0892a393", "filename": "libgomp/testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f620bf1eaa3b4a0c0419d0245184b50d871dd3b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95?ref=9f620bf1eaa3b4a0c0419d0245184b50d871dd3b", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do run }\n+! { dg-additional-options \"-O2\" }\n+! { dg-additional-options \"-ftree-parallelize-loops=2\" }\n+\n+! Variable bound, vector addition.\n+\n+subroutine foo (nr)\n+  integer, intent(in) :: nr\n+  integer, parameter :: n = 1000\n+  integer, dimension (0:n-1) :: a, b, c\n+  common a, b, c\n+  integer :: ii\n+\n+  do ii = 0, nr - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+end subroutine foo\n+\n+program main\n+  integer, parameter :: n = 1000\n+  integer, parameter :: distrib = 10\n+  integer, dimension (0:n-1) :: a, b, c\n+  common a, b, c\n+  integer :: i, j, k\n+\n+  do j = 0, ((n / distrib) -1)\n+     do i = 0, distrib - 1\n+\tk = i + (distrib * j)\n+\ta(k) = k\n+\tb(k) = MODULO ((k * 3), 7)\n+\tc(k) = k * 2;\n+     end do\n+  end do\n+\n+  call foo (n)\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. (i + MODULO ((i * 3), 7))) call abort\n+  end do\n+\n+end program"}]}