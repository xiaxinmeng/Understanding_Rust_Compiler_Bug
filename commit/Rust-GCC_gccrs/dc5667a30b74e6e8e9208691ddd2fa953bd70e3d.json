{"sha": "dc5667a30b74e6e8e9208691ddd2fa953bd70e3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1NjY3YTMwYjc0ZTZlOGU5MjA4NjkxZGRkMmZhOTUzYmQ3MGUzZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-06-01T12:48:06Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-06-01T12:48:06Z"}, "message": "Change use to type-based pool allocator in\n\n\t* tree-ssa-structalias.c (new_var_info): Use new type-based pool allocator.\n\t(new_constraint): Likewise.\n\t(init_alias_vars): Likewise.\n\t(delete_points_to_sets): Likewise.\n\nFrom-SVN: r223967", "tree": {"sha": "718cab2381c6c3bdb00e30fb6fde38998cd97e20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/718cab2381c6c3bdb00e30fb6fde38998cd97e20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33e7d32e1ccbc5c2b4c4a25d7536584a4ccc101a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e7d32e1ccbc5c2b4c4a25d7536584a4ccc101a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33e7d32e1ccbc5c2b4c4a25d7536584a4ccc101a"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "7b3ec008d53b6094447d34dff9be7aed9e0aacf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc5667a30b74e6e8e9208691ddd2fa953bd70e3d", "patch": "@@ -1,3 +1,10 @@\n+2015-06-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-ssa-structalias.c (new_var_info): Use new type-based pool allocator.\n+\t(new_constraint): Likewise.\n+\t(init_alias_vars): Likewise.\n+\t(delete_points_to_sets): Likewise.\n+\n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n \t* tree-ssa-strlen.c (new_strinfo): Use new type-based pool allocator."}, {"sha": "e802d78367b76641a9f9d2ba22b08d2f60adfe37", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5667a30b74e6e8e9208691ddd2fa953bd70e3d/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=dc5667a30b74e6e8e9208691ddd2fa953bd70e3d", "patch": "@@ -354,7 +354,8 @@ static varinfo_t lookup_vi_for_tree (tree);\n static inline bool type_can_have_subvars (const_tree);\n \n /* Pool of variable info structures.  */\n-static alloc_pool variable_info_pool;\n+static pool_allocator<variable_info> variable_info_pool\n+  (\"Variable info pool\", 30);\n \n /* Map varinfo to final pt_solution.  */\n static hash_map<varinfo_t, pt_solution *> *final_solutions;\n@@ -395,7 +396,7 @@ static varinfo_t\n new_var_info (tree t, const char *name)\n {\n   unsigned index = varmap.length ();\n-  varinfo_t ret = (varinfo_t) pool_alloc (variable_info_pool);\n+  varinfo_t ret = variable_info_pool.allocate ();\n \n   ret->id = index;\n   ret->name = name;\n@@ -554,7 +555,7 @@ struct constraint\n /* List of constraints that we use to build the constraint graph from.  */\n \n static vec<constraint_t> constraints;\n-static alloc_pool constraint_pool;\n+static pool_allocator<constraint> constraint_pool (\"Constraint pool\", 30);\n \n /* The constraint graph is represented as an array of bitmaps\n    containing successor nodes.  */\n@@ -676,7 +677,7 @@ static constraint_t\n new_constraint (const struct constraint_expr lhs,\n \t\tconst struct constraint_expr rhs)\n {\n-  constraint_t ret = (constraint_t) pool_alloc (constraint_pool);\n+  constraint_t ret = constraint_pool.allocate ();\n   ret->lhs = lhs;\n   ret->rhs = rhs;\n   return ret;\n@@ -6681,10 +6682,6 @@ init_alias_vars (void)\n   bitmap_obstack_initialize (&oldpta_obstack);\n   bitmap_obstack_initialize (&predbitmap_obstack);\n \n-  constraint_pool = create_alloc_pool (\"Constraint pool\",\n-\t\t\t\t       sizeof (struct constraint), 30);\n-  variable_info_pool = create_alloc_pool (\"Variable info pool\",\n-\t\t\t\t\t  sizeof (struct variable_info), 30);\n   constraints.create (8);\n   varmap.create (8);\n   vi_for_tree = new hash_map<tree, varinfo_t>;\n@@ -6964,8 +6961,8 @@ delete_points_to_sets (void)\n   free (graph);\n \n   varmap.release ();\n-  free_alloc_pool (variable_info_pool);\n-  free_alloc_pool (constraint_pool);\n+  variable_info_pool.release ();\n+  constraint_pool.release ();\n \n   obstack_free (&fake_var_decl_obstack, NULL);\n "}]}