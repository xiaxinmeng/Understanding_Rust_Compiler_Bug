{"sha": "bd29eba228a2d866aac76c013d0425b28e8f08e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQyOWViYTIyOGEyZDg2NmFhYzc2YzAxM2QwNDI1YjI4ZThmMDhlMQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-12-23T16:26:11Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-12-23T16:26:11Z"}, "message": "Fix PR46758: Do not use int_cst_value.\n\n2010-12-23  Sebastian Pop  <sebastian.pop@amd.com>\n\t    Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46758\n\t* graphite-sese-to-poly.c (scan_tree_for_params_right_scev): Use\n\ttree_int_to_gmp instead of int_cst_value.\n\t(scan_tree_for_params_int): Same.\n\t(scan_tree_for_params): Same.\n\t(pdr_add_data_dimensions): Use ppl_set_inhomogeneous_tree.\n\n\t* gcc.dg/graphite/run-id-pr46758.c: New.\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r168211", "tree": {"sha": "e554feece0bdea8a580635a59a666f5458d2c828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e554feece0bdea8a580635a59a666f5458d2c828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd29eba228a2d866aac76c013d0425b28e8f08e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd29eba228a2d866aac76c013d0425b28e8f08e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd29eba228a2d866aac76c013d0425b28e8f08e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd29eba228a2d866aac76c013d0425b28e8f08e1/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01be8516aa6411606f2629cdc19c6acf62511ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01be8516aa6411606f2629cdc19c6acf62511ca6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01be8516aa6411606f2629cdc19c6acf62511ca6"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "83ad1a9c3826e5d20e3c3ce36e90ae79a4a374da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd29eba228a2d866aac76c013d0425b28e8f08e1", "patch": "@@ -1,3 +1,13 @@\n+2010-12-23  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46758\n+\t* graphite-sese-to-poly.c (scan_tree_for_params_right_scev): Use\n+\ttree_int_to_gmp instead of int_cst_value.\n+\t(scan_tree_for_params_int): Same.\n+\t(scan_tree_for_params): Same.\n+\t(pdr_add_data_dimensions): Use ppl_set_inhomogeneous_tree.\n+\n 2010-12-23  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/47002"}, {"sha": "a1373c75a606bf506d9a50b20cdea8de94d4e7c6", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=bd29eba228a2d866aac76c013d0425b28e8f08e1", "patch": "@@ -612,7 +612,7 @@ scan_tree_for_params_right_scev (sese s, tree e, int var,\n       gcc_assert (TREE_CODE (e) == INTEGER_CST);\n \n       mpz_init (val);\n-      mpz_set_si (val, int_cst_value (e));\n+      tree_int_to_gmp (e, val);\n       add_value_to_dim (l, expr, val);\n       mpz_clear (val);\n     }\n@@ -626,16 +626,13 @@ scan_tree_for_params_int (tree cst, ppl_Linear_Expression_t expr, mpz_t k)\n {\n   mpz_t val;\n   ppl_Coefficient_t coef;\n-  int v = int_cst_value (cst);\n+  tree type = TREE_TYPE (cst);\n \n   mpz_init (val);\n-  mpz_set_si (val, 0);\n \n   /* Necessary to not get \"-1 = 2^n - 1\". */\n-  if (v < 0)\n-    mpz_sub_ui (val, val, -v);\n-  else\n-    mpz_add_ui (val, val, v);\n+  mpz_set_double_int (val, double_int_sext (tree_to_double_int (cst),\n+\t\t\t\t\t    TYPE_PRECISION (type)), false);\n \n   mpz_mul (val, val, k);\n   ppl_new_Coefficient (&coef);\n@@ -713,7 +710,7 @@ scan_tree_for_params (sese s, tree e, ppl_Linear_Expression_t c,\n \t      mpz_t val;\n \t      gcc_assert (host_integerp (TREE_OPERAND (e, 1), 0));\n \t      mpz_init (val);\n-\t      mpz_set_si (val, int_cst_value (TREE_OPERAND (e, 1)));\n+\t      tree_int_to_gmp (TREE_OPERAND (e, 1), val);\n \t      mpz_mul (val, val, k);\n \t      scan_tree_for_params (s, TREE_OPERAND (e, 0), c, val);\n \t      mpz_clear (val);\n@@ -728,7 +725,7 @@ scan_tree_for_params (sese s, tree e, ppl_Linear_Expression_t c,\n \t      mpz_t val;\n \t      gcc_assert (host_integerp (TREE_OPERAND (e, 0), 0));\n \t      mpz_init (val);\n-\t      mpz_set_si (val, int_cst_value (TREE_OPERAND (e, 0)));\n+\t      tree_int_to_gmp (TREE_OPERAND (e, 0), val);\n \t      mpz_mul (val, val, k);\n \t      scan_tree_for_params (s, TREE_OPERAND (e, 1), c, val);\n \t      mpz_clear (val);\n@@ -1614,10 +1611,13 @@ pdr_add_data_dimensions (ppl_Polyhedron_t accesses, data_reference_p dr,\n       /* subscript - low >= 0 */\n       if (host_integerp (low, 0))\n \t{\n+\t  tree minus_low;\n+\n \t  ppl_new_Linear_Expression_with_dimension (&expr, accessp_nb_dims);\n \t  ppl_set_coef (expr, subscript, 1);\n \n-\t  ppl_set_inhomogeneous (expr, -int_cst_value (low));\n+\t  minus_low = fold_build1 (NEGATE_EXPR, TREE_TYPE (low), low);\n+\t  ppl_set_inhomogeneous_tree (expr, minus_low);\n \n \t  ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n \t  ppl_Polyhedron_add_constraint (accesses, cstr);\n@@ -1637,7 +1637,7 @@ pdr_add_data_dimensions (ppl_Polyhedron_t accesses, data_reference_p dr,\n \t  ppl_new_Linear_Expression_with_dimension (&expr, accessp_nb_dims);\n \t  ppl_set_coef (expr, subscript, -1);\n \n-\t  ppl_set_inhomogeneous (expr, int_cst_value (high));\n+\t  ppl_set_inhomogeneous_tree (expr, high);\n \n \t  ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n \t  ppl_Polyhedron_add_constraint (accesses, cstr);"}, {"sha": "f695502c715be4e94b8d9b1528cc3aa7d3cb2da9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd29eba228a2d866aac76c013d0425b28e8f08e1", "patch": "@@ -1,3 +1,8 @@\n+2010-12-22  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/46758\n+\t* gcc.dg/graphite/run-id-pr46758.c: New.\n+\n 2010-12-23  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/46978"}, {"sha": "81411f5708e21df68e50d5d81ccf6e5683c585ae", "filename": "gcc/testsuite/gcc.dg/graphite/run-id-pr46758.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr46758.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd29eba228a2d866aac76c013d0425b28e8f08e1/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr46758.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr46758.c?ref=bd29eba228a2d866aac76c013d0425b28e8f08e1", "patch": "@@ -0,0 +1,18 @@\n+int\n+movegt (int y, long long a)\n+{\n+  int i;\n+  int ret = 0;\n+  for (i = 0; i < y; i++)\n+    if (a == -1LL << 33)\n+      ret = -1;\n+  return ret;\n+}\n+\n+int\n+main ()\n+{\n+  if (movegt (1, -1LL << 33) != -1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}