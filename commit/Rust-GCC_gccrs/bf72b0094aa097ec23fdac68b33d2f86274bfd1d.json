{"sha": "bf72b0094aa097ec23fdac68b33d2f86274bfd1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3MmIwMDk0YWEwOTdlYzIzZmRhYzY4YjMzZDJmODYyNzRiZmQxZA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2011-10-29T01:01:34Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2011-10-29T01:01:34Z"}, "message": "Add missing page rounding of a page_entry\n\nThis one place in ggc forgot to round page_entry->bytes to the\nnext page boundary, which lead to all the heuristics in freeing to\ncheck for continuous memory failing. Round here too, like all other\nallocators already do. The memory consumed should be the same\nfor MMAP because the kernel would round anyways. It may slightly\nincrease memory usage when malloc groups are used.\n\nThis will also increase the hitrate on the free page list\nslightly.\n\ngcc/:\n\n2011-10-18  Andi Kleen  <ak@linux.intel.com>\n\n\t* ggc-page.c (alloc_pages): Always round up to entry_size.\n\nFrom-SVN: r180647", "tree": {"sha": "68feb3c0af7c2a57c894bfbcfdcd0d088cc63d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68feb3c0af7c2a57c894bfbcfdcd0d088cc63d89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf72b0094aa097ec23fdac68b33d2f86274bfd1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf72b0094aa097ec23fdac68b33d2f86274bfd1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf72b0094aa097ec23fdac68b33d2f86274bfd1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf72b0094aa097ec23fdac68b33d2f86274bfd1d/comments", "author": null, "committer": null, "parents": [{"sha": "3b6a5655d7535efcc9897a14545a16a16a7e6eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6a5655d7535efcc9897a14545a16a16a7e6eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6a5655d7535efcc9897a14545a16a16a7e6eb8"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "65df15b4005a369241045b5a5f61f080b7429987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf72b0094aa097ec23fdac68b33d2f86274bfd1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf72b0094aa097ec23fdac68b33d2f86274bfd1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf72b0094aa097ec23fdac68b33d2f86274bfd1d", "patch": "@@ -1,3 +1,7 @@\n+2011-10-18  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* ggc-page.c (alloc_pages): Always round up entry_size.\n+\n 2011-10-19  Andi Kleen  <ak@linux.intel.com>\n \n \t* Makefile.in (MOSTLYCLEANFILES): Add gcc-ar/nm/ranlib."}, {"sha": "077bc8e2beef5d54118ba7dc4d12cab0ca16f39f", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf72b0094aa097ec23fdac68b33d2f86274bfd1d/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf72b0094aa097ec23fdac68b33d2f86274bfd1d/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=bf72b0094aa097ec23fdac68b33d2f86274bfd1d", "patch": "@@ -737,6 +737,7 @@ alloc_page (unsigned order)\n   entry_size = num_objects * OBJECT_SIZE (order);\n   if (entry_size < G.pagesize)\n     entry_size = G.pagesize;\n+  entry_size = ROUND_UP (entry_size, G.pagesize);\n \n   entry = NULL;\n   page = NULL;"}]}