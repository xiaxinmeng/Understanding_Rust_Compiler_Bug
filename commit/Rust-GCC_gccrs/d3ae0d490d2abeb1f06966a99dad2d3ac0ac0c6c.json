{"sha": "d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhZTBkNDkwZDJhYmViMWYwNjk2NmE5OWRhZDJkM2FjMGFjMGM2Yw==", "commit": {"author": {"name": "Martin Kahlert", "email": "martin.kahlert@infineon.com", "date": "2002-02-08T14:18:24Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-02-08T14:18:24Z"}, "message": "jni.cc (_Jv_JNI_NewLocalRef): Make sure, that NULL frame is not dereferenced.\n\n2002-02-08  Martin Kahlert  <martin.kahlert@infineon.com>\n\n\t* jni.cc (_Jv_JNI_NewLocalRef): Make sure, that NULL frame is not\n\tdereferenced.\n\t(_Jv_JNI_AttachCurrentThread): Produce full featured env->locals\n\tframe.\n\nFrom-SVN: r49615", "tree": {"sha": "d5ffecfa0b304e63a02d6498298f2274abb68b2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5ffecfa0b304e63a02d6498298f2274abb68b2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c/comments", "author": null, "committer": null, "parents": [{"sha": "e7d7a7a734759ee8189dfcd780a6d659af115f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d7a7a734759ee8189dfcd780a6d659af115f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7d7a7a734759ee8189dfcd780a6d659af115f80"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "cd13bb359fa42a342180ac974d074fdeccb75bff", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c", "patch": "@@ -1,3 +1,10 @@\n+2002-02-08  Martin Kahlert  <martin.kahlert@infineon.com>\n+\n+\t* jni.cc (_Jv_JNI_NewLocalRef): Make sure, that NULL frame is not\n+\tdereferenced.\n+\t(_Jv_JNI_AttachCurrentThread): Produce full featured env->locals\n+\tframe.\n+\n 2002-02-07  Tom Tromey  <tromey@redhat.com>\n \n \t* java/io/natFile.cc (_access): Use __builtin_alloca."}, {"sha": "9ee0df4a45110b9dfdeb8cb2da4189da2d208d67", "filename": "libjava/jni.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=d3ae0d490d2abeb1f06966a99dad2d3ac0ac0c6c", "patch": "@@ -1,6 +1,6 @@\n // jni.cc - JNI implementation, including the jump table.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -325,7 +325,7 @@ _Jv_JNI_NewLocalRef (JNIEnv *env, jobject obj)\n \n       // If we found a slot, or if the frame we just searched is the\n       // mark frame, then we are done.\n-      if (done || frame->marker != MARK_NONE)\n+      if (done || frame == NULL || frame->marker != MARK_NONE)\n \tbreak;\n     }\n \n@@ -2131,6 +2131,15 @@ _Jv_JNI_AttachCurrentThread (JavaVM *, jstring name, void **penv, void *args)\n       _Jv_Free (env);\n       return JNI_ERR;\n     }\n+\n+  env->locals->marker = MARK_SYSTEM;\n+  env->locals->size = FRAME_SIZE;\n+  env->locals->next = env->locals;\n+  env->locals = NULL;\n+\n+  for (int i = 0; i < env->locals->size; ++i)\n+    env->locals->vec[i] = NULL;\n+\n   *penv = reinterpret_cast<void *> (env);\n \n   // This thread might already be a Java thread -- this function might"}]}