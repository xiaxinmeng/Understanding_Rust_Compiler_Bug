{"sha": "1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyMThhYzNmZjI5NGEyZTczZThiYjAwMmFhMzk4YWFlYTYwZjQxYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-05T09:57:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-05T09:57:10Z"}, "message": "[multiple changes]\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb: Do not elaborate type definition if syntax error.\n\n2010-10-05  Javier Miranda  <miranda@adacore.com>\n\n\t* sprint.adb (Sprint_Node_Actual): Improve output of subprogram bodies\n\tto generate the full-qualified names of its corresponding spec.\n\tThis facilitates locating the corresponing body when reading\n\tthe DG output.\n\n2010-10-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb (Make_Helper_Function_Name): For a tagged type, use\n\tcanonical name without serial number only if the helper is becoming a\n\tprimitive of the type.\n\n2010-10-05  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_DT): Minor code reorganization.\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch6.adb: improve recovery with extra paren in function spec.\n\n2010-10-05  Quentin Ochem  <ochem@adacore.com>\n\n\t* prj-tree.ads: Project_Path is now aliased.\n\n2010-10-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* checks.adb: Minor reformatting.\n\n2010-10-05  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* mlib-tgt-specific-mingw.adb (No_Argument_List): Delete.\n\t(Shared_Libgcc): New aliased variable.\n\t(Shared_Libgcc_Switch): New constant.\n\t(Build_Dynamic_Library): Pass Shared_Libgcc_Switch to the compiler\n\t* gcc-interface/Makefile.in (gnatlib-shared-win32): Pass -shared-libgcc\n\tto the compiler.\n\t\n2010-10-05  Vincent Celier  <celier@adacore.com>\n\n\t* prj-part.adb (Parse_Simple_Project): When checking if a child project\n\timports its parent project, also look in projects being extended by\n\timported projects.\n\n2010-10-05  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat_ugn.texi: Adjust instructions in G.10 Building DLLs with GNAT.\n\n2010-10-05  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_cg.adb (Slot_Number): Add support to handle aliased entities.\n\t(Generate_CG_Output): Switch -gnatd.Z is no longer needed to\n\tactivate this output.\n\n2010-10-05  Arnaud Charlet  <charlet@adacore.com>\n\n\t* back_end.adb (Call_Back_End): Generate an error message when scil\n\tgeneration is enabled, and no scil back-end (by default) is available.\n\n2010-10-05  Javier Miranda  <miranda@adacore.com>\n\n\t* debug.adb: Update documentation because -gnatd.Z is no longer required\n\tto generate the call-graph information.\n\n2010-10-05  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch5.adb (Expand_Simple_Function_Return): Rewrite expansion of a\n\truntime access check by an equivalent expansion that causes\n\tno problems in the VM backend. The original expansion was\n\tnot good for the VM backends because when Tagged_Type_Expansion\n\tis disabled the attribute Access_Disp_Table is not available.\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Covers): In a dispatching context, T1 covers T2 if T2\n\tis class-wide and T1 is its specific type.\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.adb: Add guard to Is_String_Type to prevent cascaded errors.\n\n2010-10-05  Vincent Celier  <celier@adacore.com>\n\n\t* back_end.ads: Minor spelling error correction.\n\n2010-10-05  Arnaud Charlet  <charlet@adacore.com>\n\n\t* switch-c.adb, gnat1drv.adb (Scan_Front_End_Switches): Disable\n\twarnings when -gnatC is specified here so that warnings can be\n\tre-enabled  explicitly.\n\t(Adjust_Global_Switches): No longer suppress warnings.\n\n2010-10-05  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.adb: Minor reformatting.\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb: add guard in Analyze_One_Call to prevent crash when a\n\tnon-discrete type appears as an actual in a call.\n\nFrom-SVN: r164976", "tree": {"sha": "ca558945029a1751f81049619541e389d3223bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca558945029a1751f81049619541e389d3223bf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/comments", "author": null, "committer": null, "parents": [{"sha": "dfa8a067caa5a7479c19c9aa7f9fc9aa19b19364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa8a067caa5a7479c19c9aa7f9fc9aa19b19364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfa8a067caa5a7479c19c9aa7f9fc9aa19b19364"}], "stats": {"total": 412, "additions": 315, "deletions": 97}, "files": [{"sha": "0d57cde28b438162887815c5503829f5e70592ee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -1,3 +1,147 @@\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb: Do not elaborate type definition if syntax error.\n+\n+2010-10-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sprint.adb (Sprint_Node_Actual): Improve output of subprogram bodies\n+\tto generate the full-qualified names of its corresponding spec.\n+\tThis facilitates locating the corresponing body when reading\n+\tthe DG output.\n+\n+2010-10-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Make_Helper_Function_Name): For a tagged type, use\n+\tcanonical name without serial number only if the helper is becoming a\n+\tprimitive of the type.\n+\n+2010-10-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT): Minor code reorganization.\n+\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch6.adb: improve recovery with extra paren in function spec.\n+\n+2010-10-05  Quentin Ochem  <ochem@adacore.com>\n+\n+\t* prj-tree.ads: Project_Path is now aliased.\n+\n+2010-10-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* checks.adb: Minor reformatting.\n+\n+2010-10-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* mlib-tgt-specific-mingw.adb (No_Argument_List): Delete.\n+\t(Shared_Libgcc): New aliased variable.\n+\t(Shared_Libgcc_Switch): New constant.\n+\t(Build_Dynamic_Library): Pass Shared_Libgcc_Switch to the compiler\n+\t* gcc-interface/Makefile.in (gnatlib-shared-win32): Pass -shared-libgcc\n+\tto the compiler.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\t\n+2010-10-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-part.adb (Parse_Simple_Project): When checking if a child project\n+\timports its parent project, also look in projects being extended by\n+\timported projects.\n+\n+2010-10-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat_ugn.texi: Adjust instructions in G.10 Building DLLs with GNAT.\n+\n+2010-10-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_cg.adb (Slot_Number): Add support to handle aliased entities.\n+\t(Generate_CG_Output): Switch -gnatd.Z is no longer needed to\n+\tactivate this output.\n+\n+2010-10-05  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* back_end.adb (Call_Back_End): Generate an error message when scil\n+\tgeneration is enabled, and no scil back-end (by default) is available.\n+\n+2010-10-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* debug.adb: Update documentation because -gnatd.Z is no longer required\n+\tto generate the call-graph information.\n+\n+2010-10-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Simple_Function_Return): Rewrite expansion of a\n+\truntime access check by an equivalent expansion that causes\n+\tno problems in the VM backend. The original expansion was\n+\tnot good for the VM backends because when Tagged_Type_Expansion\n+\tis disabled the attribute Access_Disp_Table is not available.\n+\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Covers): In a dispatching context, T1 covers T2 if T2\n+\tis class-wide and T1 is its specific type.\n+\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.adb: Add guard to Is_String_Type to prevent cascaded errors.\n+\n+2010-10-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* back_end.ads: Minor spelling error correction.\n+\n+2010-10-05  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* switch-c.adb, gnat1drv.adb (Scan_Front_End_Switches): Disable\n+\twarnings when -gnatC is specified here so that warnings can be\n+\tre-enabled  explicitly.\n+\t(Adjust_Global_Switches): No longer suppress warnings.\n+\n+2010-10-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.adb: Minor reformatting.\n+\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb: add guard in Analyze_One_Call to prevent crash when a\n+\tnon-discrete type appears as an actual in a call.\n+\n+2010-10-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Scan_Make_Arg): Take into account new switch\n+\t--source-info=file.\n+\t* makeusg.adb: Add line for new switch --source-info=file.\n+\t* makeutl.ads (Source_Info_Option): New constant String for new builder\n+\tswitch.\n+\t* prj-conf.adb: Put subprograms in alphabetical order\n+\t(Process_Project_And_Apply_Config): Read/write an eventual source info\n+\tfile, if necessary.\n+\t* prj-nmsc.adb (Look_For_Sources.Get_Sources_From_Source_Info): New\n+\tprocedure.\n+\t(Look_For_Sources): If a source info file was successfully read, get the\n+\tsource data from the data read from the source info file.\n+\t* prj-util.adb (Source_Info_Table): New table\n+\t(Source_Info_Project_HTable): New hash table\n+\t(Create): New procedure\n+\t(Put (File), Put_Line): New procedures\n+\t(Write_Source_Info_File): New procedure\n+\t(Read_Source_Info_File): New procedure\n+\t(Initialize): New procedure\n+\t(Source_Info_Of): New procedure\n+\t(Next): New procedure\n+\t(Close): When file is an out file, fail if the buffer cannot be written\n+\tor if the file cannot be close successfully.\n+\t(Get_Line): Fail if file is an out file\n+\t* prj-util.ads (Create): New procedure\n+\t(Put (File), Put_Line): New procedures\n+\t(Write_Source_Info_File): New procedure\n+\t(Read_Source_Info_File): New procedure\n+\t(Source_Info_Data): New record type\n+\t(Source_Info_Iterator): New private type\n+\t(Initialize): New procedure\n+\t(Source_Info_Of): New procedure\n+\t(Next): New procedure\n+\t* prj.ads (Project_Tree_Data): New components Source_Info_File_Name and\n+\tSource_Info_File_Exists.\n+\n 2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch4.adb: Fix typo."}, {"sha": "697ad484d2a43dd7dcfec61199e53799a57c7c57", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -26,6 +26,7 @@\n with Atree;     use Atree;\n with Debug;     use Debug;\n with Elists;    use Elists;\n+with Errout;    use Errout;\n with Lib;       use Lib;\n with Osint;     use Osint;\n with Opt;       use Opt;\n@@ -118,6 +119,17 @@ package body Back_End is\n          File_Info_Array (J).Num_Source_Lines := Num_Source_Lines (J);\n       end loop;\n \n+      if Generate_SCIL then\n+         Error_Msg_N (\"'S'C'I'L generation not available\", Cunit (Main_Unit));\n+\n+         if CodePeer_Mode\n+           or else (Mode /= Generate_Object\n+                    and then not Back_Annotate_Rep_Info)\n+         then\n+            return;\n+         end if;\n+      end if;\n+\n       gigi\n         (gnat_root          => Int (Cunit (Main_Unit)),\n          max_gnat_node      => Int (Last_Node_Id - First_Node_Id + 1),"}, {"sha": "93e1ba643817d61fe1fb88d22939bcd891960f93", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -35,7 +35,7 @@ package Back_End is\n       Declarations_Only,\n       --  Partial back end operation with no object file generation. In this\n       --  mode the only useful action performed by gigi is to process all\n-      --  declarations issuing any error messages (in partcicular those to\n+      --  declarations issuing any error messages (in particular those to\n       --  do with rep clauses), and to back annotate representation info.\n \n       Skip);"}, {"sha": "e73f644025b0cd8d204e04fb79f5ff6ee78123ee", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -4099,13 +4099,13 @@ package body Checks is\n          end if;\n       end if;\n \n-      --  If this is a boolean expression, only its elementary consituents need\n+      --  If this is a boolean expression, only its elementary operands need\n       --  checking: if they are valid, a boolean or short-circuit operation\n       --  with them will be valid as well.\n \n       if Base_Type (Typ) = Standard_Boolean\n-        and then\n-          (Nkind (Expr) in N_Op or else Nkind (Expr) in N_Short_Circuit)\n+           and then\n+         (Nkind (Expr) in N_Op or else Nkind (Expr) in N_Short_Circuit)\n       then\n          return;\n       end if;"}, {"sha": "ba2845ddbfa7d85e06038b66dc447b5ad53620f8", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -143,7 +143,7 @@ package body Debug is\n    --  d.W  Print out debugging information for Walk_Library_Items\n    --  d.X  Use Expression_With_Actions\n    --  d.Y  Do not use Expression_With_Actions\n-   --  d.Z  Generate call-graph information\n+   --  d.Z\n \n    --  d1   Error msgs have node numbers where possible\n    --  d2   Eliminate error flags in verbose form error messages"}, {"sha": "ef0efdf72a571a5d0df06cc523d185bc03dc89cc", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -6182,6 +6182,7 @@ package body Einfo is\n    begin\n       return Ekind (Id) in String_Kind\n         or else (Is_Array_Type (Id)\n+                  and then Id /= Any_Composite\n                   and then Number_Dimensions (Id) = 1\n                   and then Is_Character_Type (Component_Type (Id)));\n    end Is_String_Type;\n@@ -7701,7 +7702,8 @@ package body Einfo is\n               E_Generic_Package                            =>\n             Write_Str (\"Renamed_Entity\");\n \n-         when Incomplete_Or_Private_Kind                   =>\n+         when Incomplete_Or_Private_Kind                   |\n+            E_Record_Subtype                               =>\n             Write_Str (\"Private_Dependents\");\n \n          when Concurrent_Kind                              =>"}, {"sha": "f549c58e4119b8b841b0b1dd48a8bb8c4daa174f", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -24,7 +24,6 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n-with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Exp_Disp; use Exp_Disp;\n@@ -110,11 +109,9 @@ package body Exp_CG is\n \n    begin\n       --  No output if the \"ci\" output file has not been previously opened\n-      --  by toplev.c. Temporarily the output is also disabled with -gnatd.Z\n+      --  by toplev.c\n \n-      if Callgraph_Info_File = Null_Address\n-        or else not Debug_Flag_Dot_ZZ\n-      then\n+      if Callgraph_Info_File = Null_Address then\n          return;\n       end if;\n \n@@ -393,11 +390,12 @@ package body Exp_CG is\n    -----------------\n \n    function Slot_Number (Prim : Entity_Id) return Uint is\n+      E : constant Entity_Id := Ultimate_Alias (Prim);\n    begin\n-      if Is_Predefined_Dispatching_Operation (Prim) then\n-         return -DT_Position (Prim);\n+      if Is_Predefined_Dispatching_Operation (E) then\n+         return -DT_Position (E);\n       else\n-         return DT_Position (Prim);\n+         return DT_Position (E);\n       end if;\n    end Slot_Number;\n "}, {"sha": "47b15d7ce83d6de1b6a0e5119e3b6793feff112b", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -27,7 +27,6 @@ with Atree;    use Atree;\n with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n-with Elists;   use Elists;\n with Exp_Atag; use Exp_Atag;\n with Exp_Aggr; use Exp_Aggr;\n with Exp_Ch6;  use Exp_Ch6;\n@@ -4145,13 +4144,11 @@ package body Exp_Ch5 is\n                       Make_Selected_Component (Loc,\n                         Prefix => Duplicate_Subexpr (Exp),\n                         Selector_Name =>\n-                          New_Reference_To (First_Tag_Component (Utyp), Loc)),\n+                          Make_Identifier (Loc, Chars => Name_uTag)),\n                     Right_Opnd =>\n-                      Unchecked_Convert_To (RTE (RE_Tag),\n-                        New_Reference_To\n-                          (Node (First_Elmt\n-                                  (Access_Disp_Table (Base_Type (Utyp)))),\n-                           Loc))),\n+                      Make_Attribute_Reference (Loc,\n+                        Prefix => New_Occurrence_Of (Base_Type (Utyp), Loc),\n+                        Attribute_Name => Name_Tag)),\n                 Reason => CE_Tag_Check_Failed));\n \n          --  If the result type is a specific nonlimited tagged type, then we"}, {"sha": "2bbe2ae7995d09832a698818b47ed522a453fddc", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -5022,6 +5022,7 @@ package body Exp_Disp is\n             declare\n                Prim_Elmt : Elmt_Id;\n                Prim      : Entity_Id;\n+               Size_Comp : Node_Id;\n \n             begin\n                Prim_Elmt := First_Elmt (Primitive_Operations (Typ));\n@@ -5032,22 +5033,25 @@ package body Exp_Disp is\n                      Prim := Ultimate_Alias (Prim);\n \n                      if Is_Abstract_Subprogram (Prim) then\n-                        Append_To (TSD_Aggr_List,\n+                        Size_Comp :=\n                           Unchecked_Convert_To (RTE (RE_Size_Ptr),\n-                            New_Reference_To (RTE (RE_Null_Address), Loc)));\n+                            New_Reference_To (RTE (RE_Null_Address), Loc));\n                      else\n-                        Append_To (TSD_Aggr_List,\n+                        Size_Comp :=\n                           Unchecked_Convert_To (RTE (RE_Size_Ptr),\n                             Make_Attribute_Reference (Loc,\n                               Prefix => New_Reference_To (Prim, Loc),\n-                              Attribute_Name => Name_Unrestricted_Access)));\n+                              Attribute_Name => Name_Unrestricted_Access));\n                      end if;\n \n                      exit;\n                   end if;\n \n                   Next_Elmt (Prim_Elmt);\n                end loop;\n+\n+               pragma Assert (Present (Size_Comp));\n+               Append_To (TSD_Aggr_List, Size_Comp);\n             end;\n          end if;\n       end if;"}, {"sha": "545fda9674792f99efb12e2bb3c2d8e750addec6", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -10549,9 +10549,9 @@ package body Exp_Dist is\n             if Is_Itype (Typ) and then Typ /= Base_Type (Typ) then\n                Build_TypeCode_Function\n                   (Loc  => Loc,\n-                  Typ  => Etype (Typ),\n-                  Decl => Decl,\n-                  Fnam => Fnam);\n+                   Typ  => Etype (Typ),\n+                   Decl => Decl,\n+                   Fnam => Fnam);\n                return;\n             end if;\n \n@@ -11036,26 +11036,30 @@ package body Exp_Dist is\n          begin\n             declare\n                Serial : Nat := 0;\n-               --  For tagged types, we use a canonical name so that it matches\n-               --  the primitive spec. For all other cases, we use a serialized\n-               --  name so that multiple generations of the same procedure do\n-               --  not clash.\n+               --  For tagged types that aren't frozen yet, generate the helper\n+               --  under its canonical name so that it matches the primitive\n+               --  spec. For all other cases, we use a serialized name so that\n+               --  multiple generations of the same procedure do not clash.\n \n             begin\n-               if not Is_Tagged_Type (Typ) then\n+               if Is_Tagged_Type (Typ) and then not Is_Frozen (Typ) then\n+                  null;\n+\n+               else\n                   Serial := Increment_Serial_Number;\n                end if;\n \n-               --  Use prefixed underscore to avoid potential clash with used\n+               --  Use prefixed underscore to avoid potential clash with user\n                --  identifier (we use attribute names for Nam).\n \n                return\n                  Make_Defining_Identifier (Loc,\n                    Chars =>\n                      New_External_Name\n-                       (Related_Id => Nam,\n-                        Suffix => ' ', Suffix_Index => Serial,\n-                        Prefix => '_'));\n+                       (Related_Id   => Nam,\n+                        Suffix       => ' ',\n+                        Suffix_Index => Serial,\n+                        Prefix       => '_'));\n             end;\n          end Make_Helper_Function_Name;\n       end Helpers;"}, {"sha": "752c02db3f5a24f1be6234d17a7179733a0884ab", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -1815,30 +1815,31 @@ ada/exp_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/casing.ads ada/checks.ads ada/checks.adb ada/debug.ads \\\n    ada/einfo.ads ada/einfo.adb ada/elists.ads ada/elists.adb \\\n    ada/err_vars.ads ada/errout.ads ada/erroutc.ads ada/eval_fat.ads \\\n-   ada/exp_aggr.ads ada/exp_atag.ads ada/exp_ch11.ads ada/exp_ch2.ads \\\n-   ada/exp_ch3.ads ada/exp_ch3.adb ada/exp_ch4.ads ada/exp_ch6.ads \\\n-   ada/exp_ch7.ads ada/exp_ch9.ads ada/exp_disp.ads ada/exp_dist.ads \\\n-   ada/exp_pakd.ads ada/exp_smem.ads ada/exp_strm.ads ada/exp_tss.ads \\\n-   ada/exp_tss.adb ada/exp_util.ads ada/exp_util.adb ada/fname.ads \\\n-   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n-   ada/g-htable.ads ada/hostparm.ads ada/inline.ads ada/itypes.ads \\\n+   ada/exp_aggr.ads ada/exp_atag.ads ada/exp_cg.ads ada/exp_ch11.ads \\\n+   ada/exp_ch2.ads ada/exp_ch3.ads ada/exp_ch3.adb ada/exp_ch4.ads \\\n+   ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_ch9.ads ada/exp_dbug.ads \\\n+   ada/exp_disp.ads ada/exp_disp.adb ada/exp_dist.ads ada/exp_pakd.ads \\\n+   ada/exp_smem.ads ada/exp_strm.ads ada/exp_tss.ads ada/exp_tss.adb \\\n+   ada/exp_util.ads ada/exp_util.adb ada/fname.ads ada/fname-uf.ads \\\n+   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n+   ada/hostparm.ads ada/inline.ads ada/itypes.ads ada/layout.ads \\\n    ada/lib.ads ada/namet.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n    ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n-   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/sem.ads \\\n-   ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_cat.ads \\\n-   ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n-   ada/sem_eval.ads ada/sem_mech.ads ada/sem_res.ads ada/sem_scil.ads \\\n-   ada/sem_type.ads ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/system.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n+   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/scil_ll.ads \\\n+   ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb \\\n+   ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n+   ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads ada/sem_mech.ads \\\n+   ada/sem_res.ads ada/sem_scil.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\"}, {"sha": "a98d61e993f54d896f923f1dfc13e50796ffb0dd", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -2561,11 +2561,13 @@ gnatlib-shared-win32:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) $(RTSDIR)/libgna*$(soext)\n-\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(TARGET_LIBGCC2_CFLAGS) \\\n+\tcd $(RTSDIR); ../../xgcc -B../../ -shared -shared-libgcc \\\n+\t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) $(MISCLIB)\n-\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(TARGET_LIBGCC2_CFLAGS) \\\n+\tcd $(RTSDIR); ../../xgcc -B../../ -shared -shared-libgcc \\\n+\t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\"}, {"sha": "1fad814cf6cab4d7c554da788bcdcfb49f3f0782", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -230,14 +230,12 @@ procedure Gnat1drv is\n          Assertions_Enabled    := True;\n          Debug_Pragmas_Enabled := True;\n \n-         --  Suppress compiler warnings, since what we are interested in here\n-         --  is what CodePeer can find out. Also disable all simple value\n-         --  propagation. This is an optimization which is valuable for code\n-         --  optimization, and also for generation of compiler warnings, but\n-         --  these are being turned off anyway, and CodePeer understands\n-         --  things more clearly if references are not optimized in this way.\n-\n-         Warning_Mode  := Suppress;\n+         --  Disable all simple value propagation. This is an optimization\n+         --  which is valuable for code optimization, and also for generation\n+         --  of compiler warnings, but these are being turned off by default,\n+         --  and CodePeer generates better messages (referencing original\n+         --  variables) this way.\n+\n          Debug_Flag_MM := True;\n \n          --  Set normal RM validity checking, and checking of IN OUT parameters"}, {"sha": "3c00382cec9bca239dfb448944b12da974920867", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -27716,11 +27716,11 @@ into the DLL. This is done by using the standard @command{gnatmake} tool.\n \n @item building the DLL\n \n-To build the DLL you must use @command{gcc}'s @option{-shared}\n-option. It is quite simple to use this method:\n+To build the DLL you must use @command{gcc}'s @option{-shared} and\n+@option{-shared-libgcc} options. It is quite simple to use this method:\n \n @smallexample\n-$ gcc -shared -o api.dll obj1.o obj2.o @dots{}\n+$ gcc -shared -shared-libgcc -o api.dll obj1.o obj2.o @dots{}\n @end smallexample\n \n It is important to note that in this case all symbols found in the\n@@ -27729,7 +27729,7 @@ the set of symbols to export by passing to @command{gcc} a definition\n file, @pxref{The Definition File}. For example:\n \n @smallexample\n-$ gcc -shared -o api.dll api.def obj1.o obj2.o @dots{}\n+$ gcc -shared -shared-libgcc -o api.dll api.def obj1.o obj2.o @dots{}\n @end smallexample\n \n If you use a definition file you must export the elaboration procedures"}, {"sha": "44adcd4e2f3c32d8a16d3f7670e9eae58deb0c7a", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -38,9 +38,8 @@ with Tempdir;\n \n with Ada.Command_Line;  use Ada.Command_Line;\n \n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-\n with GNAT.Case_Util; use GNAT.Case_Util;\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.HTable;\n \n package body Makeutl is"}, {"sha": "f1eedf5f23455a83722dcdd61335c8c863e6a892", "filename": "gcc/ada/mlib-tgt-specific-mingw.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fmlib-tgt-specific-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fmlib-tgt-specific-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-mingw.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,8 +61,10 @@ package body MLib.Tgt.Specific is\n \n    function PIC_Option return String;\n \n-   No_Argument_List : constant String_List := (1 .. 0 => null);\n-   --  Used as value of parameter Options or Options2 in calls to Gcc\n+   Shared_Libgcc : aliased String := \"-shared-libgcc\";\n+\n+   Shared_Libgcc_Switch : constant Argument_List :=\n+                            (1 => Shared_Libgcc'Access);\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -99,7 +101,7 @@ package body MLib.Tgt.Specific is\n       Tools.Gcc\n         (Output_File => Lib_File,\n          Objects     => Ofiles,\n-         Options     => No_Argument_List,\n+         Options     => Shared_Libgcc_Switch,\n          Options_2   => Options,\n          Driver_Name => Driver_Name);\n    end Build_Dynamic_Library;"}, {"sha": "17e3f8517e1ad7f5c7d7fa31307415cdedbced5d", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -224,10 +224,8 @@ package body Ch6 is\n          --  case is for subunits.\n \n          if Pf_Flags /= Pf_Decl_Gins_Pbod_Rnam_Stub\n-              and then\n-            Pf_Flags /= Pf_Decl_Pbod\n-              and then\n-            Pf_Flags /= Pf_Pbod\n+           and then Pf_Flags /= Pf_Decl_Pbod\n+           and then Pf_Flags /= Pf_Pbod\n          then\n             Error_Msg_SC (\"overriding indicator not allowed here!\");\n \n@@ -376,9 +374,17 @@ package body Ch6 is\n          end if;\n \n       else\n+         --  Skip extra parenthesis at end of formal part, and if\n+         --  function scan result subtype.\n+\n+         Ignore (Tok_Right_Paren);\n+\n          if Func then\n-            Ignore (Tok_Right_Paren);\n             TF_Return;\n+\n+            if Prev_Token = Tok_Return then\n+               Result_Node := P_Subtype_Mark;\n+            end if;\n          end if;\n       end if;\n "}, {"sha": "cc058b60022410a9b55bc0355e3dea2cca3ee65e", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -1653,6 +1653,7 @@ package body Prj.Part is\n             Parent_Node  : Project_Node_Id := Empty_Node;\n             With_Clause  : Project_Node_Id :=\n                              First_With_Clause_Of (Project, In_Tree);\n+            Imp_Proj_Name : Name_Id;\n \n          begin\n             --  If there is an extended project, check its name\n@@ -1666,11 +1667,23 @@ package body Prj.Part is\n             --  If the parent project is not the extended project,\n             --  check each imported project until we find the parent project.\n \n+            Imported_Loop :\n             while not Parent_Found and then Present (With_Clause) loop\n                Parent_Node := Project_Node_Of (With_Clause, In_Tree);\n-               Parent_Found := Name_Of (Parent_Node, In_Tree) = Parent_Name;\n+\n+               Extension_Loop :\n+               while Present (Parent_Node) loop\n+                  Imp_Proj_Name := Name_Of (Parent_Node, In_Tree);\n+                  Parent_Found := Imp_Proj_Name = Parent_Name;\n+                  exit Imported_Loop when Parent_Found;\n+                  Parent_Node :=\n+                    Extended_Project_Of\n+                      (Project_Declaration_Of (Parent_Node, In_Tree),\n+                       In_Tree);\n+               end loop Extension_Loop;\n+\n                With_Clause := Next_With_Clause_Of (With_Clause, In_Tree);\n-            end loop;\n+            end loop Imported_Loop;\n \n             if Parent_Found then\n                Set_Parent_Project_Of (Project, In_Tree, To => Parent_Node);"}, {"sha": "5ed88d5e5f6cc7f51f214d077ac668a72c89db28", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -1475,7 +1475,7 @@ package Prj.Tree is\n       --  The target name, if any, specified with the gprbuild or gprclean\n       --  switch --target=.\n \n-      Project_Path : Prj.Env.Project_Search_Path;\n+      Project_Path : aliased Prj.Env.Project_Search_Path;\n       --  The project path is tree specific, since we might want to load\n       --  simultaneously multiple projects, each with its own search path, in\n       --  particular when using different compilers with different default"}, {"sha": "0b66cd6ece5e0b478bd22ebb018584239e126c4e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -4060,6 +4060,11 @@ package body Sem_Ch3 is\n             when N_Record_Definition =>\n                Record_Type_Declaration (T, N, Prev);\n \n+            --  If declaration has a parse error, nothing to elaborate.\n+\n+            when N_Error =>\n+               null;\n+\n             when others =>\n                raise Program_Error;\n "}, {"sha": "35c1553a0a920fa0540330e239d250d02c6f1000", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -6097,14 +6097,24 @@ package body Sem_Ch4 is\n            and then Is_Type (Entity (Actual))\n            and then No (Next (Actual))\n          then\n-            Rewrite (N,\n-              Make_Slice (Loc,\n-                Prefix => Make_Function_Call (Loc,\n-                  Name => Relocate_Node (Name (N))),\n+            --  A single actual that is a type name indicates a slice if the\n+            --  type is discrete, and an error otherwise.\n+\n+            if Is_Discrete_Type (Entity (Actual)) then\n+               Rewrite (N,\n+                 Make_Slice (Loc,\n+                   Prefix => Make_Function_Call (Loc,\n+                     Name => Relocate_Node (Name (N))),\n                 Discrete_Range =>\n-                  New_Occurrence_Of (Entity (Actual), Sloc (Actual))));\n+                     New_Occurrence_Of (Entity (Actual), Sloc (Actual))));\n+\n+               Analyze (N);\n+\n+            else\n+               Error_Msg_N (\"invalid use of type in expression\", Actual);\n+               Set_Etype (N, Any_Type);\n+            end if;\n \n-            Analyze (N);\n             return True;\n \n          elsif not Has_Compatible_Type (Actual, Etype (Index)) then"}, {"sha": "44f6960c0c21da1e9cc3cfc179e11946c5140599", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -876,10 +876,13 @@ package body Sem_Type is\n             return False;\n          end;\n \n-      --  In a dispatching call the actual may be class-wide\n+         --  In a dispatching call the actual may be class-wide, the formal\n+         --  may be its specific type, or that of a descendent of it.\n \n       elsif Is_Class_Wide_Type (T2)\n-        and then Base_Type (Root_Type (T2)) = Base_Type (T1)\n+        and then\n+          (Class_Wide_Type (T1) = T2\n+             or else Base_Type (Root_Type (T2)) = Base_Type (T1))\n       then\n          return True;\n "}, {"sha": "60aad672af9e69feace556394e9f125cfa138f8e", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -2785,7 +2785,13 @@ package body Sprint is\n             end if;\n \n             Write_Indent;\n-            Sprint_Node_Sloc (Specification (Node));\n+\n+            if Present (Corresponding_Spec (Node)) then\n+               Sprint_Node_Sloc (Parent (Corresponding_Spec (Node)));\n+            else\n+               Sprint_Node_Sloc (Specification (Node));\n+            end if;\n+\n             Write_Str (\" is\");\n \n             Sprint_Indented_List (Declarations (Node));"}, {"sha": "17ea1e7fdce4a194cf23579ec5f9549a5ae79c49", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c218ac3ff294a2e73e8bb002aa398aaea60f41b/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=1c218ac3ff294a2e73e8bb002aa398aaea60f41b", "patch": "@@ -245,7 +245,19 @@ package body Switch.C is\n \n             when 'C' =>\n                Ptr := Ptr + 1;\n-               CodePeer_Mode := True;\n+\n+               if not CodePeer_Mode then\n+                  CodePeer_Mode := True;\n+\n+                  --  Suppress compiler warnings by default, since what we are\n+                  --  interested in here is what CodePeer can find out. Note\n+                  --  that if -gnatwxxx is specified after -gnatC on the\n+                  --  command line, we do not want to override this setting in\n+                  --  Adjust_Global_Switches, and assume that the user wants to\n+                  --  get both warnings from GNAT and CodePeer messages.\n+\n+                  Warning_Mode := Suppress;\n+               end if;\n \n             --  Processing for d switch\n "}]}