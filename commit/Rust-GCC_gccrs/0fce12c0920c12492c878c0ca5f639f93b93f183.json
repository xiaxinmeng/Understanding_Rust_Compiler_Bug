{"sha": "0fce12c0920c12492c878c0ca5f639f93b93f183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjZTEyYzA5MjBjMTI0OTJjODc4YzBjYTVmNjM5ZjkzYjkzZjE4Mw==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2020-06-26T17:35:36Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2020-06-26T18:22:45Z"}, "message": "Fix failure in gfortran.dg/gomp/combined-if.f90 test\n\nEnabling nvptx offloading results in extra '#pragma omp simd' statements\nin the tree dump with an extra '_simt_'.\n\n2020-06-26  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tgcc/testsuite/\n\t* gfortran.dg/gomp/combined-if.f90: Adjust expected number\n\tof matches depending on whether nvptx offloading is supported.\n\t* lib/target-supports.exp\n\t(check_effective_target_offload_nvptx): New.", "tree": {"sha": "0f38b1d17b0ca226b231f257ab8f15f5ae08a02d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f38b1d17b0ca226b231f257ab8f15f5ae08a02d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fce12c0920c12492c878c0ca5f639f93b93f183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fce12c0920c12492c878c0ca5f639f93b93f183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fce12c0920c12492c878c0ca5f639f93b93f183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fce12c0920c12492c878c0ca5f639f93b93f183/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3d77404c060c0d65d8d4c97254995737d0fc032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d77404c060c0d65d8d4c97254995737d0fc032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3d77404c060c0d65d8d4c97254995737d0fc032"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "0bb6c28b286a11e02de5e3fe1c344945ea691aa6", "filename": "gcc/testsuite/gfortran.dg/gomp/combined-if.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fce12c0920c12492c878c0ca5f639f93b93f183/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcombined-if.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fce12c0920c12492c878c0ca5f639f93b93f183/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcombined-if.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcombined-if.f90?ref=0fce12c0920c12492c878c0ca5f639f93b93f183", "patch": "@@ -104,5 +104,6 @@ subroutine test_target_teams_distribute_parallel_loop_simd\n end module\n \n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target.* if\\\\(\" 9 \"omplower\" } }\n-! { dg-final { scan-tree-dump-times \"(?n)#pragma omp simd.* if\\\\(\" 7 \"omplower\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp simd.* if\\\\(\" 4 \"omplower\" { target { ! offload_nvptx } } } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp simd.* if\\\\(\" 7 \"omplower\" { target { offload_nvptx } } } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp parallel.* if\\\\(\" 6 \"omplower\" } }"}, {"sha": "2279361175d6eae0c37731d6cfb4d955c4d2a7ff", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fce12c0920c12492c878c0ca5f639f93b93f183/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fce12c0920c12492c878c0ca5f639f93b93f183/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0fce12c0920c12492c878c0ca5f639f93b93f183", "patch": "@@ -9820,6 +9820,14 @@ proc check_effective_target_vect_max_reduc { } {\n     return 0\n }\n \n+# Return 1 if the compiler has been configured with nvptx offloading.\n+\n+proc check_effective_target_offload_nvptx { } {\n+    return [check_no_compiler_messages offload_nvptx assembly {\n+\tint main () {return 0;}\n+    } \"-foffload=nvptx-none\" ]\n+}\n+\n # Return 1 if the compiler has been configured with hsa offloading.\n \n proc check_effective_target_offload_hsa { } {\n@@ -9828,7 +9836,7 @@ proc check_effective_target_offload_hsa { } {\n     } \"-foffload=hsa\" ]\n }\n \n-# Return 1 if the compiler has been configured with hsa offloading.\n+# Return 1 if the compiler has been configured with gcn offloading.\n \n proc check_effective_target_offload_gcn { } {\n     return [check_no_compiler_messages offload_gcn assembly {"}]}