{"sha": "1fcd592b88f96a998ce87afa839b844835410acf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjZDU5MmI4OGY5NmE5OThjZTg3YWZhODM5Yjg0NDgzNTQxMGFjZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-03-15T23:13:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-15T23:13:04Z"}, "message": "alpha.c (alpha_va_arg): Manipulate the type size as a tree.\n\n        * config/alpha/alpha.c (alpha_va_arg): Manipulate the type\n        size as a tree.\n\nFrom-SVN: r50857", "tree": {"sha": "d1195c7dccb4261aff788805fee4a0d2298fc342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1195c7dccb4261aff788805fee4a0d2298fc342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fcd592b88f96a998ce87afa839b844835410acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcd592b88f96a998ce87afa839b844835410acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcd592b88f96a998ce87afa839b844835410acf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcd592b88f96a998ce87afa839b844835410acf/comments", "author": null, "committer": null, "parents": [{"sha": "e67e72c7cbc583f00582843e30ae449372afa91c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e67e72c7cbc583f00582843e30ae449372afa91c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e67e72c7cbc583f00582843e30ae449372afa91c"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "c866f74da1ba5e309a1cef4e91ff0de3da9c1812", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcd592b88f96a998ce87afa839b844835410acf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcd592b88f96a998ce87afa839b844835410acf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fcd592b88f96a998ce87afa839b844835410acf", "patch": "@@ -1,3 +1,8 @@\n+2002-03-15  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (alpha_va_arg): Manipulate the type\n+\tsize as a tree.\n+\n 2002-03-15  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.md (\"tstqi_1\"): Try to use ldab instead of tst."}, {"sha": "ed25a7df49cc086ce199544c094d70007f638e88", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcd592b88f96a998ce87afa839b844835410acf/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcd592b88f96a998ce87afa839b844835410acf/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=1fcd592b88f96a998ce87afa839b844835410acf", "patch": "@@ -5767,17 +5767,27 @@ rtx\n alpha_va_arg (valist, type)\n      tree valist, type;\n {\n-  HOST_WIDE_INT tsize;\n   rtx addr;\n-  tree t;\n+  tree t, type_size, rounded_size;\n   tree offset_field, base_field, addr_tree, addend;\n   tree wide_type, wide_ofs;\n   int indirect = 0;\n \n   if (TARGET_ABI_OPEN_VMS || TARGET_ABI_UNICOSMK)\n     return std_expand_builtin_va_arg (valist, type);\n \n-  tsize = ((TREE_INT_CST_LOW (TYPE_SIZE (type)) / BITS_PER_UNIT + 7) / 8) * 8;\n+  if (type == error_mark_node\n+      || (type_size = TYPE_SIZE_UNIT (TYPE_MAIN_VARIANT (type))) == NULL\n+      || TREE_OVERFLOW (type_size))\n+    rounded_size = size_zero_node;\n+  else\n+    rounded_size = fold (build (MULT_EXPR, sizetype,\n+\t\t\t\tfold (build (TRUNC_DIV_EXPR, sizetype,\n+\t\t\t\t\t     fold (build (PLUS_EXPR, sizetype,\n+\t\t\t\t\t\t\t  type_size,\n+\t\t\t\t\t\t\t  size_int (7))),\n+\t\t\t\t\t     size_int (8))),\n+\t\t\t\tsize_int (8)));\n \n   base_field = TYPE_FIELDS (TREE_TYPE (valist));\n   offset_field = TREE_CHAIN (base_field);\n@@ -5795,7 +5805,7 @@ alpha_va_arg (valist, type)\n   if (TYPE_MODE (type) == TFmode || TYPE_MODE (type) == TCmode)\n     {\n       indirect = 1;\n-      tsize = UNITS_PER_WORD;\n+      rounded_size = size_int (UNITS_PER_WORD);\n     }\n   else if (FLOAT_TYPE_P (type))\n     {\n@@ -5819,7 +5829,7 @@ alpha_va_arg (valist, type)\n \n   t = build (MODIFY_EXPR, TREE_TYPE (offset_field), offset_field,\n \t     build (PLUS_EXPR, TREE_TYPE (offset_field), \n-\t\t    offset_field, build_int_2 (tsize, 0)));\n+\t\t    offset_field, rounded_size));\n   TREE_SIDE_EFFECTS (t) = 1;\n   expand_expr (t, const0_rtx, VOIDmode, EXPAND_NORMAL);\n "}]}