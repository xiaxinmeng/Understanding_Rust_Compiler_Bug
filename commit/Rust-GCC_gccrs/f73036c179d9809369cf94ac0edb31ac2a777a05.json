{"sha": "f73036c179d9809369cf94ac0edb31ac2a777a05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjczMDM2YzE3OWQ5ODA5MzY5Y2Y5NGFjMGVkYjMxYWMyYTc3N2EwNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-04-30T10:42:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-04-30T10:42:14Z"}, "message": "Make-lang.in (ACATSCMD): New variable.\n\nada/\n\t* gcc-interface/Make-lang.in (ACATSCMD): New variable.\n\t(check-acats): Use it.\n\t(check_acats_targets): Likewise.\ntestsuite/\n\t* ada/acats/run_acats: Rename into...\n\t* ada/acats/run_acats.sh: ...this.  Only export BASE variable.\n\t* ada/acats/run_all.sh: Remove redundant test.\n\t(target_run): Move around.\n\t(target_gnatchop): Use newly built executable.\n\t(target_gnatmake): Likewise.\n\tCheck that the compilation of impbit succeeds.\n\nFrom-SVN: r235678", "tree": {"sha": "e5cab1c1981c16b075e1306e798661ea5cfe202e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5cab1c1981c16b075e1306e798661ea5cfe202e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f73036c179d9809369cf94ac0edb31ac2a777a05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f73036c179d9809369cf94ac0edb31ac2a777a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f73036c179d9809369cf94ac0edb31ac2a777a05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f73036c179d9809369cf94ac0edb31ac2a777a05/comments", "author": null, "committer": null, "parents": [{"sha": "ace08cb86b33a6d4274d477084c8e7c96937e3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace08cb86b33a6d4274d477084c8e7c96937e3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace08cb86b33a6d4274d477084c8e7c96937e3a2"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "ebb3bb3a512e502d4430704d0341971ff3570057", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f73036c179d9809369cf94ac0edb31ac2a777a05", "patch": "@@ -1,3 +1,9 @@\n+2016-04-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in (ACATSCMD): New variable.\n+\t(check-acats): Use it.\n+\t(check_acats_targets): Likewise.\n+\n 2016-04-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/70786"}, {"sha": "fbfa6c62ea5a6a48c695e74d0882292282e149d5", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=f73036c179d9809369cf94ac0edb31ac2a777a05", "patch": "@@ -868,6 +868,7 @@ check-ada: check-acats check-gnat\n check-ada-subtargets: check-acats-subtargets check-gnat-subtargets\n \n ACATSDIR = $(TESTSUITEDIR)/ada/acats\n+ACATSCMD = run_acats.sh\n \n check_acats_numbers0:=1 2 3 4 5 6 7 8 9\n check_acats_numbers1:=0 $(check_acats_numbers0)\n@@ -892,7 +893,7 @@ check-acats:\n \t  mkdir $(ACATSDIR)-parallel; \\\n \t  ( testdir=`cd ${srcdir}/${ACATSDIR} && ${PWD_COMMAND}`; \\\n \t    export testdir; \\\n-\t    cd $(ACATSDIR) && $(SHELL) $${testdir}/run_acats NONE ) \\\n+\t    cd $(ACATSDIR) && $(SHELL) $${testdir}/$(ACATSCMD) NONE ) \\\n \t    || exit 1; \\\n \t  GCC_RUNTEST_PARALLELIZE_DIR=$$rootme/$(ACATSDIR)-parallel; \\\n \t  export GCC_RUNTEST_PARALLELIZE_DIR; \\\n@@ -913,7 +914,7 @@ check-acats:\n \t  exit 0; \\\n \tfi; \\\n \ttestdir=`cd ${srcdir}/${ACATSDIR} && ${PWD_COMMAND}`; \\\n-\texport testdir; cd $(ACATSDIR) && $(SHELL) $${testdir}/run_acats $(CHAPTERS)\n+\texport testdir; cd $(ACATSDIR) && $(SHELL) $${testdir}/$(ACATSCMD) $(CHAPTERS)\n \n check-acats-subtargets:\n \t@echo check-acats\n@@ -925,7 +926,7 @@ $(check_acats_targets): check-acats%:\n \tfi; \\\n \ttest -d $(ACATSDIR)$* || mkdir -p $(ACATSDIR)$*; \\\n \ttestdir=`cd ${srcdir}/${ACATSDIR} && ${PWD_COMMAND}`; \\\n-\texport testdir; cd $(ACATSDIR)$* && $(SHELL) $${testdir}/run_acats\n+\texport testdir; cd $(ACATSDIR)$* && $(SHELL) $${testdir}/$(ACATSCMD)\n \ttouch $$GCC_RUNTEST_PARALLELIZE_DIR/finished\n \n .PHONY: check-acats $(check_acats_targets)"}, {"sha": "56bb64bef6ca69f37206726e0c73934419eeea6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f73036c179d9809369cf94ac0edb31ac2a777a05", "patch": "@@ -1,3 +1,13 @@\n+2016-04-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ada/acats/run_acats: Rename into...\n+\t* ada/acats/run_acats.sh: ...this.  Only export BASE variable.\n+\t* ada/acats/run_all.sh: Remove redundant test.\n+\t(target_run): Move around.\n+\t(target_gnatchop): Use newly built executable.\n+\t(target_gnatmake): Likewise.\n+\tCheck that the compilation of impbit succeeds.\n+\n 2016-04-30  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* g++.old-deja/g++.jason/thunk3.C: Remove SH5 checks."}, {"sha": "1a2c050bafdcca307b50e438040940b1d5b309f2", "filename": "gcc/testsuite/ada/acats/run_acats.sh", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Ftestsuite%2Fada%2Facats%2Frun_acats.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Ftestsuite%2Fada%2Facats%2Frun_acats.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Frun_acats.sh?ref=f73036c179d9809369cf94ac0edb31ac2a777a05", "patch": "@@ -47,9 +47,7 @@ if [ ! -f $BASE/gnatmake ]; then\n    exit 1\n fi\n \n-GCC_DRIVER=\"$BASE/xgcc\"\n-GCC=\"$BASE/xgcc -B$BASE/\"\n-export PATH ADA_INCLUDE_PATH ADA_OBJECTS_PATH GCC_DRIVER GCC LD_LIBRARY_PATH\n+export PATH ADA_INCLUDE_PATH ADA_OBJECTS_PATH BASE LD_LIBRARY_PATH\n \n echo '#!/bin/sh' > host_gnatchop\n echo PATH=`dirname $host_gnatchop`:'$PATH' >> host_gnatchop", "previous_filename": "gcc/testsuite/ada/acats/run_acats"}, {"sha": "764598398a28561d42812f31b45fc5a8d97e7fa3", "filename": "gcc/testsuite/ada/acats/run_all.sh", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Ftestsuite%2Fada%2Facats%2Frun_all.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f73036c179d9809369cf94ac0edb31ac2a777a05/gcc%2Ftestsuite%2Fada%2Facats%2Frun_all.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Frun_all.sh?ref=f73036c179d9809369cf94ac0edb31ac2a777a05", "patch": "@@ -12,10 +12,6 @@\n gccflags=\"-O2\"\n gnatflags=\"-gnatws\"\n \n-target_run () {\n-  eval $EXPECT -f $testdir/run_test.exp $*\n-}\n-\n # End of customization section.\n \n # Perform arithmetic evaluation on the ARGs, and store the result in the\n@@ -52,29 +48,30 @@ log () {\n \n dir=`${PWDCMD-pwd}`\n \n-if [ \"$testdir\" = \"\" ]; then\n-   echo You must use make check or make check-ada\n-   exit 1\n-fi\n-\n if [ \"$dir\" = \"$testdir\" ]; then\n   echo \"error: srcdir must be different than objdir, exiting.\"\n   exit 1\n fi\n \n+GCC=\"$BASE/xgcc -B$BASE/\"\n+\n target_gnatchop () {\n-  gnatchop --GCC=\"$GCC_DRIVER\" $*\n+  $BASE/gnatchop --GCC=\"$BASE/xgcc\" $*\n }\n \n target_gnatmake () {\n-  echo gnatmake --GCC=\\\"$GCC\\\" $gnatflags $gccflags $* -largs $EXTERNAL_OBJECTS --GCC=\\\"$GCC\\\"\n-  gnatmake --GCC=\"$GCC\" $gnatflags $gccflags $* -largs $EXTERNAL_OBJECTS --GCC=\"$GCC\"\n+  echo $BASE/gnatmake --GNATBIND=$BASE/gnatbind --GNATLINK=$BASE/gnatlink --GCC=\"$GCC\" $gnatflags $gccflags $* -largs $EXTERNAL_OBJECTS --GCC=\"$GCC\"\n+  $BASE/gnatmake --GNATBIND=$BASE/gnatbind --GNATLINK=$BASE/gnatlink --GCC=\"$GCC\" $gnatflags $gccflags $* -largs $EXTERNAL_OBJECTS --GCC=\"$GCC\"\n }\n \n target_gcc () {\n   $GCC $gccflags $*\n }\n \n+target_run () {\n+  eval $EXPECT -f $testdir/run_test.exp $*\n+}\n+\n clean_dir () {\n   rm -f \"$binmain\" *.o *.ali > /dev/null 2>&1\n }\n@@ -128,6 +125,10 @@ cp $testdir/support/*.ada $testdir/support/*.a $testdir/support/*.tst $dir/suppo\n \n # Find out the size in bit of an address on the target\n target_gnatmake $testdir/support/impbit.adb >> $dir/acats.log 2>&1\n+if [ $? -ne 0 ]; then\n+   display \"**** Failed to compile impbit\"\n+   exit 1\n+fi\n target_run $dir/support/impbit > $dir/support/impbit.out 2>&1\n target_bit=`cat $dir/support/impbit.out`\n echo target_bit=\"$target_bit\" >> $dir/acats.log"}]}