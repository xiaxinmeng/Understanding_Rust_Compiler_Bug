{"sha": "1814c828a021adaab7eb98124e9db3a3341a86e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxNGM4MjhhMDIxYWRhYWI3ZWI5ODEyNGU5ZGIzYTMzNDFhODZlMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-09-30T15:23:55Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-09-30T15:23:55Z"}, "message": "Add trailing dots so length of spec string matches number of arguments.\n\n2020-09-30  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* trans-io.c (gfc_build_io_library_fndecls): Add trailing dots so\n\tlength of spec string matches number of arguments.", "tree": {"sha": "60b6ad11f8efcd73eff4b5442d64d40cfbdf9a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60b6ad11f8efcd73eff4b5442d64d40cfbdf9a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1814c828a021adaab7eb98124e9db3a3341a86e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1814c828a021adaab7eb98124e9db3a3341a86e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1814c828a021adaab7eb98124e9db3a3341a86e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1814c828a021adaab7eb98124e9db3a3341a86e3/comments", "author": null, "committer": null, "parents": [{"sha": "373b99dc40949efa697326f378e5022a02e0328b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373b99dc40949efa697326f378e5022a02e0328b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373b99dc40949efa697326f378e5022a02e0328b"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "363cca51ef9a8548b64f90f86df1b12771432f73", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814c828a021adaab7eb98124e9db3a3341a86e3/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814c828a021adaab7eb98124e9db3a3341a86e3/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=1814c828a021adaab7eb98124e9db3a3341a86e3", "patch": "@@ -328,86 +328,86 @@ gfc_build_io_library_fndecls (void)\n   dt_parm_type = build_pointer_type (st_parameter[IOPARM_ptype_dt].type);\n \n   iocall[IOCALL_X_INTEGER] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_integer\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_integer\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_INTEGER_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_integer_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_integer_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_LOGICAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_logical\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_logical\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_LOGICAL_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_logical_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_logical_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_CHARACTER] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_character\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_CHARACTER_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_character_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_CHARACTER_WIDE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character_wide\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_character_wide\")), \".wW..\",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tgfc_charlen_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_CHARACTER_WIDE_WRITE] =\n     gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character_wide_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_character_wide_write\")), \".wR..\",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tgfc_charlen_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_REAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_real\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_REAL_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_real_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_complex\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_complex_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   /* Version for __float128.  */\n   iocall[IOCALL_X_REAL128] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real128\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_real128\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_REAL128_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real128_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_real128_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX128] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex128\")), \".wW\",\n+\tget_identifier (PREFIX(\"transfer_complex128\")), \".wW.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX128_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex128_write\")), \".wR\",\n+\tget_identifier (PREFIX(\"transfer_complex128_write\")), \".wR.\",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_ARRAY] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_array\")), \".ww\",\n+\tget_identifier (PREFIX(\"transfer_array\")), \".ww..\",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tinteger_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_ARRAY_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_array_write\")), \".wr\",\n+\tget_identifier (PREFIX(\"transfer_array_write\")), \".wr..\",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tinteger_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_DERIVED] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_derived\")), \".wrR\",\n-\tvoid_type_node, 2, dt_parm_type, pvoid_type_node, pchar_type_node);\n+\tget_identifier (PREFIX(\"transfer_derived\")), \".wr\",\n+\tvoid_type_node, 2, dt_parm_type, pvoid_type_node);\n \n   /* Library entry points */\n \n@@ -475,18 +475,18 @@ gfc_build_io_library_fndecls (void)\n \tvoid_type_node, 1, dt_parm_type);\n \n   iocall[IOCALL_SET_NML_VAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_set_nml_var\")), \".w.R\",\n+\tget_identifier (PREFIX(\"st_set_nml_var\")), \".w.R...\",\n \tvoid_type_node, 6, dt_parm_type, pvoid_type_node, pvoid_type_node,\n \tgfc_int4_type_node, gfc_charlen_type_node, get_dtype_type_node());\n \n   iocall[IOCALL_SET_NML_DTIO_VAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_set_nml_dtio_var\")), \".w.R\",\n+\tget_identifier (PREFIX(\"st_set_nml_dtio_var\")), \".w.R.....\",\n \tvoid_type_node, 8, dt_parm_type, pvoid_type_node, pvoid_type_node,\n \tgfc_int4_type_node, gfc_charlen_type_node, get_dtype_type_node(),\n \tpvoid_type_node, pvoid_type_node);\n \n   iocall[IOCALL_SET_NML_VAL_DIM] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_set_nml_var_dim\")), \".w\",\n+\tget_identifier (PREFIX(\"st_set_nml_var_dim\")), \".w....\",\n \tvoid_type_node, 5, dt_parm_type, gfc_int4_type_node,\n \tgfc_array_index_type, gfc_array_index_type, gfc_array_index_type);\n }"}]}