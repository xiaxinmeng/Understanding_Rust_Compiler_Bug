{"sha": "3ea685e75abb8e48098ba4b51e3fa6b5e120111f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VhNjg1ZTc1YWJiOGU0ODA5OGJhNGI1MWUzZmE2YjVlMTIwMTExZg==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2017-04-25T07:31:22Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-04-25T07:31:22Z"}, "message": "S/390: Use load-on-condition in cstorecc4\n\ngcc/ChangeLog:\n\n2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"cstorecc4\"): Use load-on-condition and deal\n\twith CCZmode for TARGET_Z196.\n\nFrom-SVN: r247130", "tree": {"sha": "423d691896e4cab7d3de7f7be2629822f3950cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/423d691896e4cab7d3de7f7be2629822f3950cbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ea685e75abb8e48098ba4b51e3fa6b5e120111f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea685e75abb8e48098ba4b51e3fa6b5e120111f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea685e75abb8e48098ba4b51e3fa6b5e120111f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea685e75abb8e48098ba4b51e3fa6b5e120111f/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba5d69f3f27f4e30f95d658cf36f5d2e1debf09e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5d69f3f27f4e30f95d658cf36f5d2e1debf09e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba5d69f3f27f4e30f95d658cf36f5d2e1debf09e"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "2f2365b0b18825b93d38bcffe3d9528bc789a55d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea685e75abb8e48098ba4b51e3fa6b5e120111f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea685e75abb8e48098ba4b51e3fa6b5e120111f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ea685e75abb8e48098ba4b51e3fa6b5e120111f", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"cstorecc4\"): Use load-on-condition and deal\n+\twith CCZmode for TARGET_Z196.\n+\n 2017-04-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/80501"}, {"sha": "6a1cab6947aee2fe5e65f9e3be3766d5a6a84947", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea685e75abb8e48098ba4b51e3fa6b5e120111f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea685e75abb8e48098ba4b51e3fa6b5e120111f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=3ea685e75abb8e48098ba4b51e3fa6b5e120111f", "patch": "@@ -6518,13 +6518,30 @@\n   [(parallel\n     [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t  (match_operator:SI 1 \"s390_eqne_operator\"\n-           [(match_operand:CCZ1 2 \"register_operand\")\n+           [(match_operand 2 \"cc_reg_operand\")\n \t    (match_operand 3 \"const0_operand\")]))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n-  \"emit_insn (gen_sne (operands[0], operands[2]));\n-   if (GET_CODE (operands[1]) == EQ)\n-     emit_insn (gen_xorsi3 (operands[0], operands[0], const1_rtx));\n+  \"machine_mode mode = GET_MODE (operands[2]);\n+   if (TARGET_Z196)\n+     {\n+       rtx cond, ite;\n+\n+       if (GET_CODE (operands[1]) == NE)\n+\t cond = gen_rtx_NE (VOIDmode, operands[2], const0_rtx);\n+       else\n+\t cond = gen_rtx_EQ (VOIDmode, operands[2], const0_rtx);\n+       ite = gen_rtx_IF_THEN_ELSE (SImode, cond, const1_rtx, const0_rtx);\n+       emit_insn (gen_rtx_SET (operands[0], ite));\n+     }\n+   else\n+     {\n+       if (mode != CCZ1mode)\n+\t FAIL;\n+       emit_insn (gen_sne (operands[0], operands[2]));\n+       if (GET_CODE (operands[1]) == EQ)\n+\t emit_insn (gen_xorsi3 (operands[0], operands[0], const1_rtx));\n+     }\n    DONE;\")\n \n (define_insn_and_split \"sne\""}]}