{"sha": "a40d994753b00e453f5b97686bebed73e7de6692", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwZDk5NDc1M2IwMGU0NTNmNWI5NzY4NmJlYmVkNzNlN2RlNjY5Mg==", "commit": {"author": {"name": "Patrick Bernardi", "email": "bernardi@adacore.com", "date": "2018-01-11T08:50:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:50:43Z"}, "message": "[Ada] Aspect/pragma Secondary_Stack_Size can evaluate non-literals as zero\n\nThis patch fixes the problem of aspect/pragma Secondary_Stack_Size expressions\nwith non-literals evaluating as zero in static secondary stacks allocations.\nThe aspect Secondary_Stack_Size is now converted to a pragma instead of an\nattribute as the attribute does not have visibility on the discriminant.\nAdditionally, the discriminant of the corresponding record type is now\nreferenced if the pragma expression contains a discriminant.\n\nNo simple test available as the problem only impacts programs when\nSystem.Parameters.Sec_Stack_Dynamic = False\n\n2018-01-11  Patrick Bernardi  <bernardi@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Simplified\n\tSecondary_Stack_Size handling as a pragma is now generated for the\n\tcorresponding aspect instead of an attribute.  Pragma expression is\n\trelocated instead of evaluated. Discriminant of the corresponding\n\trecord type is referenced rather than the type discriminant.\n\t(Create_Secondary_Stack_For_Task, Make_Task_Create_Call): Update\n\tSecondary_Stack_Size rep item checks to only look for the pragma rep.\n\t* sem_ch13.adb (Analyze_One_Aspect): Transform\n\tAspect_Secondary_Stack_Size into a pragma instead of an attribute\n\tbecause the attribute does not have visibility on a task type's\n\tdiscriminants when the type's definition is expanded.\n\t(Analyze_Attribute_Definition_Clause): Remove handling of\n\tAttribute_Secondary_Stack_Size.\n\t* snames.adb-tmpl, snames.ads-tmpl: Remove\n\tAttribute_Secondary_Stack_Size, no longer used.\n\nFrom-SVN: r256488", "tree": {"sha": "e13f9e3d64bf886a2083351b8ee6e44d4e9221fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e13f9e3d64bf886a2083351b8ee6e44d4e9221fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a40d994753b00e453f5b97686bebed73e7de6692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40d994753b00e453f5b97686bebed73e7de6692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40d994753b00e453f5b97686bebed73e7de6692", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40d994753b00e453f5b97686bebed73e7de6692/comments", "author": {"login": "burratoo", "id": 23646118, "node_id": "MDQ6VXNlcjIzNjQ2MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/23646118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burratoo", "html_url": "https://github.com/burratoo", "followers_url": "https://api.github.com/users/burratoo/followers", "following_url": "https://api.github.com/users/burratoo/following{/other_user}", "gists_url": "https://api.github.com/users/burratoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/burratoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burratoo/subscriptions", "organizations_url": "https://api.github.com/users/burratoo/orgs", "repos_url": "https://api.github.com/users/burratoo/repos", "events_url": "https://api.github.com/users/burratoo/events{/privacy}", "received_events_url": "https://api.github.com/users/burratoo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b199a185b21857c2c26b470f8241d95d767c8c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b199a185b21857c2c26b470f8241d95d767c8c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b199a185b21857c2c26b470f8241d95d767c8c9"}], "stats": {"total": 147, "additions": 74, "deletions": 73}, "files": [{"sha": "ca74b1c65300148a64896ef139c248df648857d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a40d994753b00e453f5b97686bebed73e7de6692", "patch": "@@ -1,3 +1,21 @@\n+2018-01-11  Patrick Bernardi  <bernardi@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Simplified\n+\tSecondary_Stack_Size handling as a pragma is now generated for the\n+\tcorresponding aspect instead of an attribute.  Pragma expression is\n+\trelocated instead of evaluated. Discriminant of the corresponding\n+\trecord type is referenced rather than the type discriminant.\n+\t(Create_Secondary_Stack_For_Task, Make_Task_Create_Call): Update\n+\tSecondary_Stack_Size rep item checks to only look for the pragma rep.\n+\t* sem_ch13.adb (Analyze_One_Aspect): Transform\n+\tAspect_Secondary_Stack_Size into a pragma instead of an attribute\n+\tbecause the attribute does not have visibility on a task type's\n+\tdiscriminants when the type's definition is expanded.\n+\t(Analyze_Attribute_Definition_Clause): Remove handling of\n+\tAttribute_Secondary_Stack_Size.\n+\t* snames.adb-tmpl, snames.ads-tmpl: Remove\n+\tAttribute_Secondary_Stack_Size, no longer used.\n+\n 2018-01-11  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch8.adb: Minor comment fix."}, {"sha": "d89b112bf0f9766b1aee5dcf522e0703bd7487be", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 33, "deletions": 27, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a40d994753b00e453f5b97686bebed73e7de6692", "patch": "@@ -5437,7 +5437,7 @@ package body Exp_Ch9 is\n         (Restriction_Active (No_Implicit_Heap_Allocations)\n           or else Restriction_Active (No_Implicit_Task_Allocations))\n         and then not Restriction_Active (No_Secondary_Stack)\n-        and then Has_Rep_Item\n+        and then Has_Rep_Pragma\n                    (T, Name_Secondary_Stack_Size, Check_Parents => False);\n    end Create_Secondary_Stack_For_Task;\n \n@@ -11933,7 +11933,7 @@ package body Exp_Ch9 is\n                   Set_Analyzed (Task_Size);\n \n                else\n-                  Task_Size := Relocate_Node (Expr_N);\n+                  Task_Size := New_Copy_Tree (Expr_N);\n                end if;\n             end;\n \n@@ -11971,29 +11971,35 @@ package body Exp_Ch9 is\n \n       if Create_Secondary_Stack_For_Task (TaskId) then\n          declare\n-            Ritem     : Node_Id;\n-            Size_Expr : Node_Id;\n+            Stack_Size : Node_Id;\n \n-         begin\n-            --  First extract the secondary stack size from the task type's\n-            --  representation aspect.\n+            Size_Expr : constant Node_Id :=\n+                          Expression (First (\n+                            Pragma_Argument_Associations (\n+                              Get_Rep_Pragma (TaskId,\n+                                Name_Secondary_Stack_Size))));\n \n-            Ritem :=\n-              Get_Rep_Item\n-                (TaskId, Name_Secondary_Stack_Size, Check_Parents => False);\n+         begin\n+            --  The secondary stack is defined inside the corresponding\n+            --  record. Therefore if the size of the stack is set by means\n+            --  of a discriminant, we must reference the discriminant of the\n+            --  corresponding record type.\n \n-            --  Get Secondary_Stack_Size expression. Can be a pragma or aspect.\n+            if Nkind (Size_Expr) in N_Has_Entity\n+              and then Present (Discriminal_Link (Entity (Size_Expr)))\n+            then\n+               Stack_Size :=\n+                 New_Occurrence_Of\n+                   (CR_Discriminant (Discriminal_Link (Entity (Size_Expr))),\n+                    Loc);\n+               Set_Parent   (Stack_Size, Parent (Size_Expr));\n+               Set_Etype    (Stack_Size, Etype (Size_Expr));\n+               Set_Analyzed (Stack_Size);\n \n-            if Nkind (Ritem) = N_Pragma then\n-               Size_Expr :=\n-                 Expression\n-                   (First (Pragma_Argument_Associations (Ritem)));\n             else\n-               Size_Expr := Expression (Ritem);\n+               Stack_Size := New_Copy_Tree (Size_Expr);\n             end if;\n \n-            pragma Assert (Compile_Time_Known_Value (Size_Expr));\n-\n             --  Create the secondary stack for the task\n \n             Decl_SS :=\n@@ -12010,8 +12016,8 @@ package body Exp_Ch9 is\n                         Constraint   =>\n                           Make_Index_Or_Discriminant_Constraint (Loc,\n                             Constraints  => New_List (\n-                              Make_Integer_Literal (Loc,\n-                                Expr_Value (Size_Expr)))))));\n+                              Convert_To (RTE (RE_Size_Type),\n+                                Stack_Size))))));\n \n             Append_To (Cdecls, Decl_SS);\n          end;\n@@ -12052,16 +12058,16 @@ package body Exp_Ch9 is\n \n              Expression =>\n                Convert_To (RTE (RE_Size_Type),\n-                 Relocate_Node (\n+                 New_Copy_Tree (\n                    Expression (First (\n                      Pragma_Argument_Associations (\n                        Get_Rep_Pragma (TaskId, Name_Storage_Size))))))));\n       end if;\n \n       --  Add the _Secondary_Stack_Size component if a Secondary_Stack_Size\n-      --  rep item is present.\n+      --  pragma is present.\n \n-      if Has_Rep_Item\n+      if Has_Rep_Pragma\n            (TaskId, Name_Secondary_Stack_Size, Check_Parents => False)\n       then\n          Append_To (Cdecls,\n@@ -12135,7 +12141,7 @@ package body Exp_Ch9 is\n \n              Expression =>\n                Convert_To (RTE (RE_Time_Span),\n-                 Relocate_Node (\n+                 New_Copy_Tree (\n                    Expression (First (\n                      Pragma_Argument_Associations (\n                        Get_Relative_Deadline_Pragma (Taskdef))))))));\n@@ -14246,15 +14252,15 @@ package body Exp_Ch9 is\n       end if;\n \n       --  Secondary_Stack_Size parameter. Set RE_Unspecified_Size unless there\n-      --  is a Secondary_Stack_Size rep item, in which case take the value from\n-      --  the rep item. If the restriction No_Secondary_Stack is active then a\n+      --  is a Secondary_Stack_Size pragma, in which case take the value from\n+      --  the pragma. If the restriction No_Secondary_Stack is active then a\n       --  size of 0 is passed regardless to prevent the allocation of the\n       --  unused stack.\n \n       if Restriction_Active (No_Secondary_Stack) then\n          Append_To (Args, Make_Integer_Literal (Loc, 0));\n \n-      elsif Has_Rep_Item\n+      elsif Has_Rep_Pragma\n               (Ttyp, Name_Secondary_Stack_Size, Check_Parents => False)\n       then\n          Append_To (Args,"}, {"sha": "b26d99f8511d4aa9520ab4f0daac486cb16a2477", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 21, "deletions": 41, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a40d994753b00e453f5b97686bebed73e7de6692", "patch": "@@ -2210,7 +2210,6 @@ package body Sem_Ch13 is\n                   | Aspect_Output\n                   | Aspect_Read\n                   | Aspect_Scalar_Storage_Order\n-                  | Aspect_Secondary_Stack_Size\n                   | Aspect_Simple_Storage_Pool\n                   | Aspect_Size\n                   | Aspect_Small\n@@ -3205,6 +3204,27 @@ package body Sem_Ch13 is\n                      end;\n                   end if;\n \n+               --  Secondary_Stack_Size\n+\n+               --  Aspect Secondary_Stack_Size needs to be converted into a\n+               --  pragma for two reasons: the attribute is not analyzed until\n+               --  after the expansion of the task type declaration and the\n+               --  attribute does not have visibility on the discriminant.\n+\n+               when Aspect_Secondary_Stack_Size =>\n+                  Make_Aitem_Pragma\n+                    (Pragma_Argument_Associations => New_List (\n+                       Make_Pragma_Argument_Association (Loc,\n+                         Expression => Relocate_Node (Expr))),\n+                     Pragma_Name                  =>\n+                       Name_Secondary_Stack_Size);\n+\n+                  Decorate (Aspect, Aitem);\n+                  Insert_Pragma (Aitem);\n+                  goto Continue;\n+\n+               --  Volatile_Function\n+\n                --  Aspect Volatile_Function is never delayed because it is\n                --  equivalent to a source pragma which appears after the\n                --  related subprogram.\n@@ -5851,46 +5871,6 @@ package body Sem_Ch13 is\n                Set_SSO_Set_High_By_Default (Base_Type (U_Ent), False);\n             end if;\n \n-         --------------------------\n-         -- Secondary_Stack_Size --\n-         --------------------------\n-\n-         when Attribute_Secondary_Stack_Size =>\n-\n-            --  Secondary_Stack_Size attribute definition clause not allowed\n-            --  except from aspect specification.\n-\n-            if From_Aspect_Specification (N) then\n-               if not Is_Task_Type (U_Ent) then\n-                  Error_Msg_N\n-                    (\"Secondary Stack Size can only be defined for task\", Nam);\n-\n-               elsif Duplicate_Clause then\n-                  null;\n-\n-               else\n-                  Check_Restriction (No_Secondary_Stack, Expr);\n-\n-                  --  The expression must be analyzed in the special manner\n-                  --  described in \"Handling of Default and Per-Object\n-                  --  Expressions\" in sem.ads.\n-\n-                  --  The visibility to the discriminants must be restored\n-\n-                  Push_Scope_And_Install_Discriminants (U_Ent);\n-                  Preanalyze_Spec_Expression (Expr, Any_Integer);\n-                  Uninstall_Discriminants_And_Pop_Scope (U_Ent);\n-\n-                  if not Is_OK_Static_Expression (Expr) then\n-                     Check_Restriction (Static_Storage_Size, Expr);\n-                  end if;\n-               end if;\n-\n-            else\n-               Error_Msg_N\n-                 (\"attribute& cannot be set with definition clause\", N);\n-            end if;\n-\n          ----------\n          -- Size --\n          ----------"}, {"sha": "f085b84dbcbeb69bea3c698cd1c0a91379611870", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=a40d994753b00e453f5b97686bebed73e7de6692", "patch": "@@ -134,8 +134,6 @@ package body Snames is\n          return Attribute_Dispatching_Domain;\n       elsif N = Name_Interrupt_Priority then\n          return Attribute_Interrupt_Priority;\n-      elsif N = Name_Secondary_Stack_Size then\n-         return Attribute_Secondary_Stack_Size;\n       else\n          return Attribute_Id'Val (N - First_Attribute_Name);\n       end if;"}, {"sha": "73d96e67dc0da2dfd71cf628fd64eca252d849d3", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d994753b00e453f5b97686bebed73e7de6692/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=a40d994753b00e453f5b97686bebed73e7de6692", "patch": "@@ -1706,11 +1706,10 @@ package Snames is\n \n       Attribute_CPU,\n       Attribute_Dispatching_Domain,\n-      Attribute_Interrupt_Priority,\n-      Attribute_Secondary_Stack_Size);\n+      Attribute_Interrupt_Priority);\n \n    subtype Internal_Attribute_Id is Attribute_Id range\n-     Attribute_CPU .. Attribute_Secondary_Stack_Size;\n+     Attribute_CPU .. Attribute_Interrupt_Priority;\n \n    type Attribute_Class_Array is array (Attribute_Id) of Boolean;\n    --  Type used to build attribute classification flag arrays"}]}