{"sha": "9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI4OWRhYmZkODUxZjBlZTBlOWYwYzZlMTQxZjhlM2ZiYTA4ZDFkNw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-06-16T10:47:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-12T12:50:56Z"}, "message": "[Ada] Duplicate Size/Value_Size clause\n\ngcc/ada/\n\n\t* sem_ch13.adb (Duplicate_Clause): Add a helper routine\n\tCheck_One_Attr, with a parameter for the attribute_designator we\n\tare looking for, and one for the attribute_designator of the\n\tcurrent node (which are usually the same). For Size and\n\tValue_Size, call it twice, once for each.\n\t* errout.ads: Fix a typo.", "tree": {"sha": "cc0bb6341b5a75cb860101712c5a0a169b57945a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc0bb6341b5a75cb860101712c5a0a169b57945a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86b228b87b64ffa6991fce0dc188985d7a9a173a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b228b87b64ffa6991fce0dc188985d7a9a173a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b228b87b64ffa6991fce0dc188985d7a9a173a"}], "stats": {"total": 69, "additions": 55, "deletions": 14}, "files": [{"sha": "9b2e08d65e7c39af32cb9c04cbc65efb929f2a24", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7", "patch": "@@ -279,7 +279,7 @@ package Errout is\n    --      The character ? appearing anywhere in a message makes the message\n    --      warning instead of a normal error message, and the text of the\n    --      message will be preceded by \"warning:\" in the normal case. The\n-   --      handling of warnings if further controlled by the Warning_Mode\n+   --      handling of warnings is further controlled by the Warning_Mode\n    --      option (-w switch), see package Opt for further details, and also by\n    --      the current setting from pragma Warnings. This pragma applies only\n    --      to warnings issued from the semantic phase (not the parser), but"}, {"sha": "91d41b4a63bae599f44a72955a9ab70c01fe4fcf", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 54, "deletions": 13, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=9b89dabfd851f0ee0e9f0c6e141f8e3fba08d1d7", "patch": "@@ -5181,7 +5181,9 @@ package body Sem_Ch13 is\n       --  This routine checks if the aspect for U_Ent being given by attribute\n       --  definition clause N is for an aspect that has already been specified,\n       --  and if so gives an error message. If there is a duplicate, True is\n-      --  returned, otherwise if there is no error, False is returned.\n+      --  returned, otherwise there is no error, and False is returned. Size\n+      --  and Value_Size are considered to conflict, but for compatibility,\n+      --  this is merely a warning.\n \n       procedure Check_Indexing_Functions;\n       --  Check that the function in Constant_Indexing or Variable_Indexing\n@@ -6007,7 +6009,47 @@ package body Sem_Ch13 is\n       ----------------------\n \n       function Duplicate_Clause return Boolean is\n-         A : Node_Id;\n+\n+         function Check_One_Attr (Attr_1, Attr_2 : Name_Id) return Boolean;\n+         --  Check for one attribute; Attr_1 is the attribute_designator we are\n+         --  looking for. Attr_2 is the attribute_designator of the current\n+         --  node. Normally, this is called just once by Duplicate_Clause, with\n+         --  Attr_1 = Attr_2. However, it needs to be called twice for Size and\n+         --  Value_Size, because these mean the same thing. For compatibility,\n+         --  we allow specifying both Size and Value_Size, but only if the two\n+         --  sizes are equal.\n+\n+         --------------------\n+         -- Check_One_Attr --\n+         --------------------\n+\n+         function Check_One_Attr (Attr_1, Attr_2 : Name_Id) return Boolean is\n+            A : constant Node_Id :=\n+              Get_Rep_Item (U_Ent, Attr_1, Check_Parents => False);\n+         begin\n+            if Present (A) then\n+               if Attr_1 = Attr_2 then\n+                  Error_Msg_Name_1 := Attr_1;\n+                  Error_Msg_Sloc := Sloc (A);\n+                  Error_Msg_NE (\"aspect% for & previously given#\", N, U_Ent);\n+\n+               else\n+                  pragma Assert (Attr_1 in Name_Size | Name_Value_Size);\n+                  pragma Assert (Attr_2 in Name_Size | Name_Value_Size);\n+\n+                  Error_Msg_Name_1 := Attr_2;\n+                  Error_Msg_Name_2 := Attr_1;\n+                  Error_Msg_Sloc := Sloc (A);\n+                  Error_Msg_NE (\"?% for & conflicts with % #\", N, U_Ent);\n+               end if;\n+\n+               return True;\n+            end if;\n+\n+            return False;\n+         end Check_One_Attr;\n+\n+      --  Start of processing for Duplicate_Clause\n \n       begin\n          --  Nothing to do if this attribute definition clause comes from\n@@ -6019,21 +6061,20 @@ package body Sem_Ch13 is\n             return False;\n          end if;\n \n-         --  Otherwise current clause may duplicate previous clause, or a\n-         --  previously given pragma or aspect specification for the same\n-         --  aspect.\n-\n-         A := Get_Rep_Item (U_Ent, Chars (N), Check_Parents => False);\n+         --  Special cases for Size and Value_Size\n \n-         if Present (A) then\n-            Error_Msg_Name_1 := Chars (N);\n-            Error_Msg_Sloc := Sloc (A);\n-\n-            Error_Msg_NE (\"aspect% for & previously given#\", N, U_Ent);\n+         if (Chars (N) = Name_Size\n+               and then Check_One_Attr (Name_Value_Size, Name_Size))\n+           or else\n+            (Chars (N) = Name_Value_Size\n+               and then Check_One_Attr (Name_Size, Name_Value_Size))\n+         then\n             return True;\n          end if;\n \n-         return False;\n+         --  Normal case (including Size and Value_Size)\n+\n+         return Check_One_Attr (Chars (N), Chars (N));\n       end Duplicate_Clause;\n \n    --  Start of processing for Analyze_Attribute_Definition_Clause"}]}