{"sha": "b1def36c41f48e3f4de7b3890d635ee083e98abe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkZWYzNmM0MWY0OGUzZjRkZTdiMzg5MGQ2MzVlZTA4M2U5OGFiZQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2011-06-08T11:19:08Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2011-06-08T11:19:08Z"}, "message": "arm.c (arm_libcall_uses_aapcs_base): Use correct ABI for double-precision helper functions in hard-float mode if...\n\n\t* config/arm/arm.c (arm_libcall_uses_aapcs_base): Use correct ABI\n\tfor double-precision helper functions in hard-float mode if only\n\tsingle-precision arithmetic is supported in hardware.\n\nFrom-SVN: r174803", "tree": {"sha": "df7cd2510dce64cde52d6314e894a7835b6762c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df7cd2510dce64cde52d6314e894a7835b6762c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1def36c41f48e3f4de7b3890d635ee083e98abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1def36c41f48e3f4de7b3890d635ee083e98abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1def36c41f48e3f4de7b3890d635ee083e98abe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1def36c41f48e3f4de7b3890d635ee083e98abe/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76aa78e9eb7ade737abc19cbea1bcd690170b039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aa78e9eb7ade737abc19cbea1bcd690170b039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76aa78e9eb7ade737abc19cbea1bcd690170b039"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "7ee682176d35fb093a4a814c3277e4fc32fedb94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1def36c41f48e3f4de7b3890d635ee083e98abe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1def36c41f48e3f4de7b3890d635ee083e98abe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1def36c41f48e3f4de7b3890d635ee083e98abe", "patch": "@@ -1,3 +1,9 @@\n+2011-06-08  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_libcall_uses_aapcs_base): Use correct ABI\n+\tfor double-precision helper functions in hard-float mode if only\n+\tsingle-precision arithmetic is supported in hardware.\n+\n 2011-06-08  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/49303"}, {"sha": "61a315eb21bc71b99a7a7c1a0845aa128ecab165", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1def36c41f48e3f4de7b3890d635ee083e98abe/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1def36c41f48e3f4de7b3890d635ee083e98abe/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b1def36c41f48e3f4de7b3890d635ee083e98abe", "patch": "@@ -3345,6 +3345,28 @@ arm_libcall_uses_aapcs_base (const_rtx libcall)\n \t\t   convert_optab_libfunc (sfix_optab, DImode, SFmode));\n       add_libcall (libcall_htab,\n \t\t   convert_optab_libfunc (ufix_optab, DImode, SFmode));\n+\n+      /* Values from double-precision helper functions are returned in core\n+\t registers if the selected core only supports single-precision\n+\t arithmetic, even if we are using the hard-float ABI.  The same is\n+\t true for single-precision helpers, but we will never be using the\n+\t hard-float ABI on a CPU which doesn't support single-precision\n+\t operations in hardware.  */\n+      add_libcall (libcall_htab, optab_libfunc (add_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (sdiv_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (smul_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (neg_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (sub_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (eq_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (lt_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (le_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (ge_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (gt_optab, DFmode));\n+      add_libcall (libcall_htab, optab_libfunc (unord_optab, DFmode));\n+      add_libcall (libcall_htab, convert_optab_libfunc (sext_optab, DFmode,\n+\t\t\t\t\t\t\tSFmode));\n+      add_libcall (libcall_htab, convert_optab_libfunc (trunc_optab, SFmode,\n+\t\t\t\t\t\t\tDFmode));\n     }\n \n   return libcall && htab_find (libcall_htab, libcall) != NULL;"}]}