{"sha": "f4eafec9bc30855c45cfe86a0b04b88719516e76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlYWZlYzliYzMwODU1YzQ1Y2ZlODZhMGIwNGI4ODcxOTUxNmU3Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-07-16T15:11:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-07-16T15:11:57Z"}, "message": "re PR middle-end/86511 (Traps are generated for non-trapping compares)\n\n\tPR target/86511\n\t* expmed.c (emit_store_flag): Do not emit setcc followed by a\n\tconditional move when trapping comparison was split to a\n\tnon-trapping one (and vice versa).\n\nFrom-SVN: r262736", "tree": {"sha": "fb66d8bc9abfcd970df7650dfbc6f6afea97e03b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb66d8bc9abfcd970df7650dfbc6f6afea97e03b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4eafec9bc30855c45cfe86a0b04b88719516e76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4eafec9bc30855c45cfe86a0b04b88719516e76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4eafec9bc30855c45cfe86a0b04b88719516e76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4eafec9bc30855c45cfe86a0b04b88719516e76/comments", "author": null, "committer": null, "parents": [{"sha": "e2144dde6e6d6c965885121697cbbfd2aa25a9bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2144dde6e6d6c965885121697cbbfd2aa25a9bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2144dde6e6d6c965885121697cbbfd2aa25a9bc"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "b4a8151cc6936f41dfd44e4665648b309b8010d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eafec9bc30855c45cfe86a0b04b88719516e76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eafec9bc30855c45cfe86a0b04b88719516e76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4eafec9bc30855c45cfe86a0b04b88719516e76", "patch": "@@ -1,3 +1,10 @@\n+2018-07-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/86511\n+\t* expmed.c (emit_store_flag): Do not emit setcc followed by a\n+\tconditional move when trapping comparison was split to a\n+\tnon-trapping one (and vice versa).\n+\n 2018-07-16  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_function_profiler): Generate nops\n@@ -126,11 +133,12 @@\n \twhen result_eq is false.\n \t(expand_builtin_strcmp): Inline the calls first.\n \t(expand_builtin_strncmp): Likewise.\n-\t(inline_string_cmp): New routine. Expand a string compare \n+\t(inline_string_cmp): New routine. Expand a string compare\n \tcall by using a sequence of char comparison.\n \t(inline_expand_builtin_string_cmp): New routine. Inline expansion\n \ta call to str(n)cmp/memcmp.\n-\t* doc/invoke.texi (--param builtin-string-cmp-inline-length): New option.\n+\t* doc/invoke.texi (--param builtin-string-cmp-inline-length):\n+\tNew option.\n \t* params.def (BUILTIN_STRING_CMP_INLINE_LENGTH): New.\n \n 2018-07-13  Richard Earnshaw  <rearnsha@arm.com>\n@@ -724,9 +732,9 @@\n \n \t* config.gcc (riscv*-*-*): When setting xlen, handle riscv-*.\n \n-2018-07-05  Indu Bhagat  <indu.bhagat@oracle.com> \n+2018-07-05  Indu Bhagat  <indu.bhagat@oracle.com>\n \n-\t* config/aarch64/aarch64-simd.md: correct flags text for \n+\t* config/aarch64/aarch64-simd.md: correct flags text for\n \tMIN_EXPR replacement.\n \n 2018-07-05  James Clarke  <jrtc27@jrtc27.com>"}, {"sha": "f114eb45e01fe57690b505af559571823819e2b1", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4eafec9bc30855c45cfe86a0b04b88719516e76/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4eafec9bc30855c45cfe86a0b04b88719516e76/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f4eafec9bc30855c45cfe86a0b04b88719516e76", "patch": "@@ -6038,6 +6038,11 @@ emit_store_flag (rtx target, enum rtx_code code, rtx op0, rtx op1,\n       if (!HAVE_conditional_move)\n \treturn 0;\n \n+      /* Do not turn a trapping comparison into a non-trapping one.  */\n+      if ((code != EQ && code != NE && code != UNEQ && code != LTGT)\n+\t  && flag_trapping_math)\n+\treturn 0;\n+\n       /* Try using a setcc instruction for ORDERED/UNORDERED, followed by a\n \t conditional move.  */\n       tem = emit_store_flag_1 (subtarget, first_code, op0, op1, mode, 0,"}]}