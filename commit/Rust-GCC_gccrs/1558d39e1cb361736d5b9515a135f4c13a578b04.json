{"sha": "1558d39e1cb361736d5b9515a135f4c13a578b04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1OGQzOWUxY2IzNjE3MzZkNWI5NTE1YTEzNWY0YzEzYTU3OGIwNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-10-14T13:50:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-10-14T13:50:24Z"}, "message": "1.cc: Remove 'test' variables.\n\n2016-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/26_numerics/accumulate/1.cc: Remove 'test' variables.\n\t* testsuite/26_numerics/adjacent_difference/1.cc: Likewise.\n\t* testsuite/26_numerics/complex/13450.cc: Likewise.\n\t* testsuite/26_numerics/complex/50880.cc: Likewise.\n\t* testsuite/26_numerics/complex/c99.cc: Likewise.\n\t* testsuite/26_numerics/complex/cons/48760.cc: Likewise.\n\t* testsuite/26_numerics/complex/cons/48760_c++0x.cc: Likewise.\n\t* testsuite/26_numerics/complex/dr781_dr1137.cc: Likewise.\n\t* testsuite/26_numerics/complex/dr844.cc: Likewise.\n\t* testsuite/26_numerics/complex/inserters_extractors/char/1.cc:\n\tLikewise.\n\t* testsuite/26_numerics/complex/inserters_extractors/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/26_numerics/complex/value_operations/1.cc: Likewise.\n\t* testsuite/26_numerics/complex/value_operations/dr387.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/19322.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/\n\tc99_classification_macros_c++11.c: Likewise.c\n\t* testsuite/26_numerics/headers/cmath/\n\tc99_classification_macros_c++98.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/c_math.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/dr550.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/hypot.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/powi.cc: Likewise.\n\t* testsuite/26_numerics/headers/cstdlib/13943.cc: Likewise.\n\t* testsuite/26_numerics/inner_product/1.cc: Likewise.\n\t* testsuite/26_numerics/iota/1.cc: Likewise.\n\t* testsuite/26_numerics/partial_sum/1.cc: Likewise.\n\t* testsuite/26_numerics/random/bernoulli_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/bernoulli_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/bernoulli_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/bernoulli_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/binomial_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/binomial_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/binomial_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/binomial_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/cauchy_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/cauchy_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/cauchy_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/cauchy_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/chi_squared_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/chi_squared_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/chi_squared_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/chi_squared_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/default_random_engine.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/operators/equal.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/26_numerics/random/discrete_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/discrete_distribution/cons/\n\tinitlist.cc: Likewise.\n\t* testsuite/26_numerics/random/discrete_distribution/cons/\n\tnum_xbound_fun.cc: Likewise.\n\t* testsuite/26_numerics/random/discrete_distribution/cons/range.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discrete_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/discrete_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/exponential_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/exponential_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/exponential_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/exponential_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/extreme_value_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/extreme_value_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/extreme_value_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/extreme_value_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/fisher_f_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/fisher_f_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/fisher_f_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/fisher_f_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/gamma_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/gamma_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/gamma_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/gamma_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/geometric_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/geometric_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/geometric_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/geometric_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/26_numerics/random/knuth_b.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\t55215.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n\t51795.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/26_numerics/random/lognormal_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/lognormal_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/lognormal_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/lognormal_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/26_numerics/random/minstd_rand.cc: Likewise.\n\t* testsuite/26_numerics/random/minstd_rand0.cc: Likewise.\n\t* testsuite/26_numerics/random/mt19937.cc: Likewise.\n\t* testsuite/26_numerics/random/mt19937_64.cc: Likewise.\n\t* testsuite/26_numerics/random/negative_binomial_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/negative_binomial_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/negative_binomial_distribution/\n\toperators/equal.cc: Likewise.\n\t* testsuite/26_numerics/random/negative_binomial_distribution/\n\toperators/inequal.cc: Likewise.\n\t* testsuite/26_numerics/random/normal_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/normal_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/normal_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/normal_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n\tinitlist_fun.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n\tnum_xbound_fun.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n\trange.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/\n\toperators/equal.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/\n\toperators/inequal.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n\tinitlist_fun.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n\tnum_xbound_fun.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n\trange.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/\n\toperators/equal.cc: Likewise.\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/\n\toperators/inequal.cc: Likewise.\n\t* testsuite/26_numerics/random/poisson_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/poisson_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/poisson_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/poisson_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/random_device/cons/default.cc: Likewise.\n\t* testsuite/26_numerics/random/random_device/cons/token.cc: Likewise.\n\t* testsuite/26_numerics/random/ranlux24.cc: Likewise.\n\t* testsuite/26_numerics/random/ranlux24_base.cc: Likewise.\n\t* testsuite/26_numerics/random/ranlux48.cc: Likewise.\n\t* testsuite/26_numerics/random/ranlux48_base.cc: Likewise.\n\t* testsuite/26_numerics/random/seed_seq/cons/initlist.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/26_numerics/random/student_t_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/student_t_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/student_t_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/student_t_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\t55215.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_int_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_int_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_int_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_int_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_real_distribution/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_real_distribution/cons/\n\tparms.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_real_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/uniform_real_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/random/weibull_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/weibull_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/weibull_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/26_numerics/random/weibull_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/26_numerics/slice/1.cc: Likewise.\n\t* testsuite/26_numerics/slice_array/array_assignment.cc: Likewise.\n\t* testsuite/26_numerics/valarray/27867.cc: Likewise.\n\t* testsuite/26_numerics/valarray/28277.cc: Likewise.\n\t* testsuite/26_numerics/valarray/30416.cc: Likewise.\n\t* testsuite/26_numerics/valarray/dr543.cc: Likewise.\n\t* testsuite/26_numerics/valarray/dr630-1.cc: Likewise.\n\t* testsuite/26_numerics/valarray/dr630-2.cc: Likewise.\n\t* testsuite/26_numerics/valarray/dr630-3.C: Likewise.\n\t* testsuite/26_numerics/valarray/init-list.cc: Likewise.\n\t* testsuite/26_numerics/valarray/moveable.cc: Likewise.\n\t* testsuite/26_numerics/valarray/operators.cc: Likewise.\n\t* testsuite/26_numerics/valarray/swap.cc: Likewise.\n\t* testsuite/experimental/deque/erasure.cc: Likewise.\n\t* testsuite/experimental/filesystem/iterators/directory_iterator.cc:\n\tLikewise.\n\t* testsuite/experimental/filesystem/iterators/\n\trecursive_directory_iterator.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/absolute.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/canonical.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/copy.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/copy_file.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n\tLikewise.\n\t* testsuite/experimental/filesystem/operations/create_directory.cc:\n\tLikewise.\n\t* testsuite/experimental/filesystem/operations/current_path.cc:\n\tLikewise.\n\t* testsuite/experimental/filesystem/operations/exists.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/file_size.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/last_write_time.cc:\n\tLikewise.\n\t* testsuite/experimental/filesystem/operations/permissions.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/status.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n\tLikewise.\n\t* testsuite/experimental/filesystem/path/native/string.cc: Likewise.\n\t* testsuite/experimental/forward_list/erasure.cc: Likewise.\n\t* testsuite/experimental/list/erasure.cc: Likewise.\n\t* testsuite/experimental/map/erasure.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/assign/assign.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/comparison/comparison.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/alias_ctor.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/alloc_ctor.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/copy_ctor.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/default_ctor.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/move_ctor.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/pointer_ctor.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/dest/dest.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/modifiers/reset.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/modifiers/swap.cc: Likewise.\n\t* testsuite/experimental/memory/shared_ptr/observers/bool_conv.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/observers/operators.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/observers/owner_before.cc:\n\tLikewise.\n\t* testsuite/experimental/memory/shared_ptr/observers/use_count.cc:\n\tLikewise.\n\t* testsuite/experimental/memory_resource/1.cc: Likewise.\n\t* testsuite/experimental/memory_resource/null_memory_resource.cc:\n\tLikewise.\n\t* testsuite/experimental/memory_resource/resource_adaptor.cc: Likewise.\n\t* testsuite/experimental/set/erasure.cc: Likewise.\n\t* testsuite/experimental/string/erasure.cc: Likewise.\n\t* testsuite/experimental/string_view/capacity/1.cc: Likewise.\n\t* testsuite/experimental/string_view/cons/char/1.cc: Likewise.\n\t* testsuite/experimental/string_view/cons/char/2.cc: Likewise.\n\t* testsuite/experimental/string_view/cons/char/3.cc: Likewise.\n\t* testsuite/experimental/string_view/cons/wchar_t/1.cc: Likewise.\n\t* testsuite/experimental/string_view/cons/wchar_t/2.cc: Likewise.\n\t* testsuite/experimental/string_view/cons/wchar_t/3.cc: Likewise.\n\t* testsuite/experimental/string_view/element_access/char/1.cc: Likewise.\n\t* testsuite/experimental/string_view/element_access/char/empty.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/element_access/char/\n\tfront_back.cc: Likewise.\n\t* testsuite/experimental/string_view/element_access/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/element_access/wchar_t/empty.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/element_access/wchar_t/\n\tfront_back.cc: Likewise.\n\t* testsuite/experimental/string_view/inserters/char/1.cc: Likewise.\n\t* testsuite/experimental/string_view/inserters/char/2.cc: Likewise.\n\t* testsuite/experimental/string_view/inserters/char/3.cc: Likewise.\n\t* testsuite/experimental/string_view/inserters/pod/10081-out.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/inserters/wchar_t/1.cc: Likewise.\n\t* testsuite/experimental/string_view/inserters/wchar_t/2.cc: Likewise.\n\t* testsuite/experimental/string_view/inserters/wchar_t/3.cc: Likewise.\n\t* testsuite/experimental/string_view/modifiers/remove_prefix/char/\n\t1.cc: Likewise.\n\t* testsuite/experimental/string_view/modifiers/remove_prefix/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/experimental/string_view/modifiers/remove_suffix/char/\n\t1.cc: Likewise.\n\t* testsuite/experimental/string_view/modifiers/remove_suffix/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/experimental/string_view/operations/compare/char/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/compare/char/\n\t13650.cc: Likewise.\n\t* testsuite/experimental/string_view/operations/compare/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/experimental/string_view/operations/compare/wchar_t/\n\t13650.cc: Likewise.\n\t* testsuite/experimental/string_view/operations/copy/char/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/copy/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/data/char/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/data/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/char/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/char/2.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/char/3.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/char/4.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/find/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/rfind/char/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/rfind/char/2.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/rfind/char/3.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/rfind/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/rfind/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/rfind/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/substr/char/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/substr/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operations/to_string/1.cc:\n\tLikewise.\n\t* testsuite/experimental/string_view/operators/char/2.cc: Likewise.\n\t* testsuite/experimental/string_view/operators/wchar_t/2.cc: Likewise.\n\t* testsuite/experimental/unordered_map/erasure.cc: Likewise.\n\t* testsuite/experimental/unordered_set/erasure.cc: Likewise.\n\t* testsuite/experimental/vector/erasure.cc: Likewise.\n\t* testsuite/ext/array_allocator/1.cc: Likewise.\n\t* testsuite/ext/array_allocator/2.cc: Likewise.\n\t* testsuite/ext/array_allocator/3.cc: Likewise.\n\t* testsuite/ext/array_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/bitmap_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/codecvt/1.cc: Likewise.\n\t* testsuite/ext/codecvt/char-1.cc: Likewise.\n\t* testsuite/ext/codecvt/char-2.cc: Likewise.\n\t* testsuite/ext/codecvt/wchar_t.cc: Likewise.\n\t* testsuite/ext/enc_filebuf/char/13189.cc: Likewise.\n\t* testsuite/ext/enc_filebuf/char/13598.cc: Likewise.\n\t* testsuite/ext/enc_filebuf/wchar_t/13189.cc: Likewise.\n\t* testsuite/ext/ext_pointer/1.cc: Likewise.\n\t* testsuite/ext/ext_pointer/1_neg.cc: Likewise.\n\t* testsuite/ext/malloc_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/mt_allocator/check_allocate_big_per_type.cc: Likewise.\n\t* testsuite/ext/mt_allocator/tune-1.cc: Likewise.\n\t* testsuite/ext/mt_allocator/tune-2.cc: Likewise.\n\t* testsuite/ext/mt_allocator/tune-3.cc: Likewise.\n\t* testsuite/ext/mt_allocator/tune-4.cc: Likewise.\n\t* testsuite/ext/mt_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/new_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/pod_char_traits.cc: Likewise.\n\t* testsuite/ext/pool_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/random/arcsine_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/arcsine_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/arcsine_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/ext/random/arcsine_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/random/arcsine_distribution/operators/serialize.cc:\n\tLikewise.\n\t* testsuite/ext/random/beta_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/beta_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/beta_distribution/operators/equal.cc: Likewise.\n\t* testsuite/ext/random/beta_distribution/operators/inequal.cc: Likewise.\n\t* testsuite/ext/random/hoyt_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/hoyt_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/hoyt_distribution/operators/equal.cc: Likewise.\n\t* testsuite/ext/random/hoyt_distribution/operators/inequal.cc: Likewise.\n\t* testsuite/ext/random/hoyt_distribution/operators/serialize.cc:\n\tLikewise.\n\t* testsuite/ext/random/hypergeometric_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/ext/random/hypergeometric_distribution/cons/parms.cc:\n\tLikewise.\n\t* testsuite/ext/random/hypergeometric_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/ext/random/hypergeometric_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/ext/random/hypergeometric_distribution/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/ext/random/k_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/k_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/k_distribution/operators/equal.cc: Likewise.\n\t* testsuite/ext/random/k_distribution/operators/inequal.cc: Likewise.\n\t* testsuite/ext/random/k_distribution/operators/serialize.cc: Likewise.\n\t* testsuite/ext/random/logistic_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/logistic_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/logistic_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/ext/random/logistic_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/random/logistic_distribution/operators/serialize.cc:\n\tLikewise.\n\t* testsuite/ext/random/nakagami_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/nakagami_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/nakagami_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/ext/random/nakagami_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/random/nakagami_distribution/operators/serialize.cc:\n\tLikewise.\n\t* testsuite/ext/random/normal_mv_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/normal_mv_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/normal_mv_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/ext/random/normal_mv_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/random/pareto_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/pareto_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/pareto_distribution/operators/equal.cc: Likewise.\n\t* testsuite/ext/random/pareto_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/random/pareto_distribution/operators/serialize.cc:\n\tLikewise.\n\t* testsuite/ext/random/rice_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/rice_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/rice_distribution/operators/equal.cc: Likewise.\n\t* testsuite/ext/random/rice_distribution/operators/inequal.cc: Likewise.\n\t* testsuite/ext/random/rice_distribution/operators/serialize.cc: \n\tLikewise.\n\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/operators/\n\tequal.cc: Likewise.\n\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/ext/random/triangular_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/ext/random/triangular_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/triangular_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/ext/random/triangular_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/random/uniform_on_sphere_distribution/cons/default.cc:\n\tLikewise.\n\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n\tequal.cc: Likewise.\n\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n\tgenerate.cc: Likewise.\n\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n\tinequal.cc: Likewise.\n\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n\tserialize.cc: Likewise.\n\t* testsuite/ext/random/von_mises_distribution/cons/default.cc: Likewise.\n\t* testsuite/ext/random/von_mises_distribution/cons/parms.cc: Likewise.\n\t* testsuite/ext/random/von_mises_distribution/operators/equal.cc:\n\tLikewise.\n\t* testsuite/ext/random/von_mises_distribution/operators/inequal.cc:\n\tLikewise.\n\t* testsuite/ext/rope/2.cc: Likewise.\n\t* testsuite/ext/rope/3.cc: Likewise.\n\t* testsuite/ext/rope/4.cc: Likewise.\n\t* testsuite/ext/rope/pthread7-rope.cc: Likewise.\n\t* testsuite/ext/special_functions/conf_hyperg/check_nan.cc: Likewise.\n\t* testsuite/ext/special_functions/conf_hyperg/check_value.cc: Likewise.\n\t* testsuite/ext/special_functions/hyperg/check_nan.cc: Likewise.\n\t* testsuite/ext/special_functions/hyperg/check_value.cc: Likewise.\n\t* testsuite/ext/stdio_filebuf/char/10063-1.cc: Likewise.\n\t* testsuite/ext/stdio_filebuf/char/10063-2.cc: Likewise.\n\t* testsuite/ext/stdio_filebuf/char/10063-3.cc: Likewise.\n\t* testsuite/ext/stdio_filebuf/char/2.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/char/1.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/char/12048-1.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/char/12048-2.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/char/12048-3.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/char/12048-4.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/1.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-1.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-2.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-3.cc: Likewise.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-4.cc: Likewise.\n\t* testsuite/ext/throw_allocator/variadic_construct.cc: Likewise.\n\t* testsuite/ext/type_traits/add_unsigned.cc: Likewise.\n\t* testsuite/ext/type_traits/remove_unsigned.cc: Likewise.\n\t* testsuite/ext/vstring/capacity/29134.cc: Likewise.\n\t* testsuite/ext/vstring/capacity/shrink_to_fit.cc: Likewise.\n\t* testsuite/ext/vstring/cons/58415-1.cc: Likewise.\n\t* testsuite/ext/vstring/cons/moveable.cc: Likewise.\n\t* testsuite/ext/vstring/element_access/char/58163.cc: Likewise.\n\t* testsuite/ext/vstring/element_access/char/front_back.cc: Likewise.\n\t* testsuite/ext/vstring/element_access/wchar_t/58163.cc: Likewise.\n\t* testsuite/ext/vstring/element_access/wchar_t/front_back.cc: Likewise.\n\t* testsuite/ext/vstring/hash/char/1.cc: Likewise.\n\t* testsuite/ext/vstring/hash/wchar_t/1.cc: Likewise.\n\t* testsuite/ext/vstring/init-list.cc: Likewise.\n\t* testsuite/ext/vstring/inserters_extractors/char/28277.cc: Likewise.\n\t* testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc: Likewise.\n\t* testsuite/ext/vstring/modifiers/assign/move_assign.cc: Likewise.\n\t* testsuite/ext/vstring/modifiers/pop_back/char/1.cc: Likewise.\n\t* testsuite/ext/vstring/modifiers/pop_back/wchar_t/1.cc: Likewise.\n\t* testsuite/ext/vstring/operators/1.cc: Likewise.\n\t* testsuite/ext/vstring/operators/2.cc: Likewise.\n\nFrom-SVN: r241164", "tree": {"sha": "101b2ac7de4522ba0f0d61f0a45f178ff7ac3ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/101b2ac7de4522ba0f0d61f0a45f178ff7ac3ccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1558d39e1cb361736d5b9515a135f4c13a578b04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1558d39e1cb361736d5b9515a135f4c13a578b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1558d39e1cb361736d5b9515a135f4c13a578b04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1558d39e1cb361736d5b9515a135f4c13a578b04/comments", "author": null, "committer": null, "parents": [{"sha": "238fc3441cecc5bdf982009c168d9f5b9085e8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238fc3441cecc5bdf982009c168d9f5b9085e8de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/238fc3441cecc5bdf982009c168d9f5b9085e8de"}], "stats": {"total": 1560, "additions": 636, "deletions": 924}, "files": [{"sha": "a87971f9fe89a82abde3a4987b88d65e259d0d08", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 600, "deletions": 0, "changes": 600, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -1,3 +1,603 @@\n+2016-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/26_numerics/accumulate/1.cc: Remove 'test' variables.\n+\t* testsuite/26_numerics/adjacent_difference/1.cc: Likewise.\n+\t* testsuite/26_numerics/complex/13450.cc: Likewise.\n+\t* testsuite/26_numerics/complex/50880.cc: Likewise.\n+\t* testsuite/26_numerics/complex/c99.cc: Likewise.\n+\t* testsuite/26_numerics/complex/cons/48760.cc: Likewise.\n+\t* testsuite/26_numerics/complex/cons/48760_c++0x.cc: Likewise.\n+\t* testsuite/26_numerics/complex/dr781_dr1137.cc: Likewise.\n+\t* testsuite/26_numerics/complex/dr844.cc: Likewise.\n+\t* testsuite/26_numerics/complex/inserters_extractors/char/1.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/complex/inserters_extractors/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/complex/value_operations/1.cc: Likewise.\n+\t* testsuite/26_numerics/complex/value_operations/dr387.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/19322.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/\n+\tc99_classification_macros_c++11.c: Likewise.c\n+\t* testsuite/26_numerics/headers/cmath/\n+\tc99_classification_macros_c++98.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/c_math.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/dr550.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/hypot.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/powi.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/13943.cc: Likewise.\n+\t* testsuite/26_numerics/inner_product/1.cc: Likewise.\n+\t* testsuite/26_numerics/iota/1.cc: Likewise.\n+\t* testsuite/26_numerics/partial_sum/1.cc: Likewise.\n+\t* testsuite/26_numerics/random/bernoulli_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/bernoulli_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/bernoulli_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/bernoulli_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/binomial_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/binomial_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/binomial_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/binomial_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/cauchy_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/cauchy_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/cauchy_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/cauchy_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/chi_squared_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/chi_squared_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/chi_squared_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/chi_squared_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/default_random_engine.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/26_numerics/random/discrete_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/discrete_distribution/cons/\n+\tinitlist.cc: Likewise.\n+\t* testsuite/26_numerics/random/discrete_distribution/cons/\n+\tnum_xbound_fun.cc: Likewise.\n+\t* testsuite/26_numerics/random/discrete_distribution/cons/range.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discrete_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/discrete_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/exponential_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/exponential_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/exponential_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/exponential_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/extreme_value_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/extreme_value_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/extreme_value_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/extreme_value_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/fisher_f_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/fisher_f_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/fisher_f_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/fisher_f_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/gamma_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/gamma_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/gamma_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/gamma_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/geometric_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/geometric_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/geometric_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/geometric_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/26_numerics/random/knuth_b.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\t55215.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n+\t51795.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/26_numerics/random/lognormal_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/lognormal_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/lognormal_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/lognormal_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/26_numerics/random/minstd_rand.cc: Likewise.\n+\t* testsuite/26_numerics/random/minstd_rand0.cc: Likewise.\n+\t* testsuite/26_numerics/random/mt19937.cc: Likewise.\n+\t* testsuite/26_numerics/random/mt19937_64.cc: Likewise.\n+\t* testsuite/26_numerics/random/negative_binomial_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/negative_binomial_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/negative_binomial_distribution/\n+\toperators/equal.cc: Likewise.\n+\t* testsuite/26_numerics/random/negative_binomial_distribution/\n+\toperators/inequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/normal_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/normal_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/normal_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/normal_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n+\tinitlist_fun.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n+\tnum_xbound_fun.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/\n+\trange.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/\n+\toperators/equal.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/\n+\toperators/inequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n+\tinitlist_fun.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n+\tnum_xbound_fun.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/\n+\trange.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/\n+\toperators/equal.cc: Likewise.\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/\n+\toperators/inequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/poisson_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/poisson_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/poisson_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/poisson_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/random_device/cons/default.cc: Likewise.\n+\t* testsuite/26_numerics/random/random_device/cons/token.cc: Likewise.\n+\t* testsuite/26_numerics/random/ranlux24.cc: Likewise.\n+\t* testsuite/26_numerics/random/ranlux24_base.cc: Likewise.\n+\t* testsuite/26_numerics/random/ranlux48.cc: Likewise.\n+\t* testsuite/26_numerics/random/ranlux48_base.cc: Likewise.\n+\t* testsuite/26_numerics/random/seed_seq/cons/initlist.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/26_numerics/random/student_t_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/student_t_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/student_t_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/student_t_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\t55215.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_int_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_int_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_int_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_int_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_real_distribution/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_real_distribution/cons/\n+\tparms.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_real_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/uniform_real_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/weibull_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/weibull_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/weibull_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/26_numerics/random/weibull_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/26_numerics/slice/1.cc: Likewise.\n+\t* testsuite/26_numerics/slice_array/array_assignment.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/27867.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/28277.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/30416.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/dr543.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/dr630-1.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/dr630-2.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/dr630-3.C: Likewise.\n+\t* testsuite/26_numerics/valarray/init-list.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/moveable.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/operators.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/swap.cc: Likewise.\n+\t* testsuite/experimental/deque/erasure.cc: Likewise.\n+\t* testsuite/experimental/filesystem/iterators/directory_iterator.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/iterators/\n+\trecursive_directory_iterator.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/absolute.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/canonical.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/copy.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/copy_file.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/create_directory.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/current_path.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/exists.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/file_size.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/last_write_time.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/permissions.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/status.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/path/native/string.cc: Likewise.\n+\t* testsuite/experimental/forward_list/erasure.cc: Likewise.\n+\t* testsuite/experimental/list/erasure.cc: Likewise.\n+\t* testsuite/experimental/map/erasure.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/assign/assign.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/comparison/comparison.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/alias_ctor.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/alloc_ctor.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/copy_ctor.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/default_ctor.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/move_ctor.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/pointer_ctor.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/dest/dest.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/modifiers/reset.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/modifiers/swap.cc: Likewise.\n+\t* testsuite/experimental/memory/shared_ptr/observers/bool_conv.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/observers/operators.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/observers/owner_before.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory/shared_ptr/observers/use_count.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory_resource/1.cc: Likewise.\n+\t* testsuite/experimental/memory_resource/null_memory_resource.cc:\n+\tLikewise.\n+\t* testsuite/experimental/memory_resource/resource_adaptor.cc: Likewise.\n+\t* testsuite/experimental/set/erasure.cc: Likewise.\n+\t* testsuite/experimental/string/erasure.cc: Likewise.\n+\t* testsuite/experimental/string_view/capacity/1.cc: Likewise.\n+\t* testsuite/experimental/string_view/cons/char/1.cc: Likewise.\n+\t* testsuite/experimental/string_view/cons/char/2.cc: Likewise.\n+\t* testsuite/experimental/string_view/cons/char/3.cc: Likewise.\n+\t* testsuite/experimental/string_view/cons/wchar_t/1.cc: Likewise.\n+\t* testsuite/experimental/string_view/cons/wchar_t/2.cc: Likewise.\n+\t* testsuite/experimental/string_view/cons/wchar_t/3.cc: Likewise.\n+\t* testsuite/experimental/string_view/element_access/char/1.cc: Likewise.\n+\t* testsuite/experimental/string_view/element_access/char/empty.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/element_access/char/\n+\tfront_back.cc: Likewise.\n+\t* testsuite/experimental/string_view/element_access/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/element_access/wchar_t/empty.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/element_access/wchar_t/\n+\tfront_back.cc: Likewise.\n+\t* testsuite/experimental/string_view/inserters/char/1.cc: Likewise.\n+\t* testsuite/experimental/string_view/inserters/char/2.cc: Likewise.\n+\t* testsuite/experimental/string_view/inserters/char/3.cc: Likewise.\n+\t* testsuite/experimental/string_view/inserters/pod/10081-out.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/inserters/wchar_t/1.cc: Likewise.\n+\t* testsuite/experimental/string_view/inserters/wchar_t/2.cc: Likewise.\n+\t* testsuite/experimental/string_view/inserters/wchar_t/3.cc: Likewise.\n+\t* testsuite/experimental/string_view/modifiers/remove_prefix/char/\n+\t1.cc: Likewise.\n+\t* testsuite/experimental/string_view/modifiers/remove_prefix/wchar_t/\n+\t1.cc: Likewise.\n+\t* testsuite/experimental/string_view/modifiers/remove_suffix/char/\n+\t1.cc: Likewise.\n+\t* testsuite/experimental/string_view/modifiers/remove_suffix/wchar_t/\n+\t1.cc: Likewise.\n+\t* testsuite/experimental/string_view/operations/compare/char/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/compare/char/\n+\t13650.cc: Likewise.\n+\t* testsuite/experimental/string_view/operations/compare/wchar_t/\n+\t1.cc: Likewise.\n+\t* testsuite/experimental/string_view/operations/compare/wchar_t/\n+\t13650.cc: Likewise.\n+\t* testsuite/experimental/string_view/operations/copy/char/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/copy/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/data/char/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/data/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/char/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/char/2.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/char/3.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/char/4.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/find/wchar_t/4.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/rfind/char/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/rfind/char/2.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/rfind/char/3.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/rfind/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/rfind/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/rfind/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/substr/char/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/substr/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operations/to_string/1.cc:\n+\tLikewise.\n+\t* testsuite/experimental/string_view/operators/char/2.cc: Likewise.\n+\t* testsuite/experimental/string_view/operators/wchar_t/2.cc: Likewise.\n+\t* testsuite/experimental/unordered_map/erasure.cc: Likewise.\n+\t* testsuite/experimental/unordered_set/erasure.cc: Likewise.\n+\t* testsuite/experimental/vector/erasure.cc: Likewise.\n+\t* testsuite/ext/array_allocator/1.cc: Likewise.\n+\t* testsuite/ext/array_allocator/2.cc: Likewise.\n+\t* testsuite/ext/array_allocator/3.cc: Likewise.\n+\t* testsuite/ext/array_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/bitmap_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/codecvt/1.cc: Likewise.\n+\t* testsuite/ext/codecvt/char-1.cc: Likewise.\n+\t* testsuite/ext/codecvt/char-2.cc: Likewise.\n+\t* testsuite/ext/codecvt/wchar_t.cc: Likewise.\n+\t* testsuite/ext/enc_filebuf/char/13189.cc: Likewise.\n+\t* testsuite/ext/enc_filebuf/char/13598.cc: Likewise.\n+\t* testsuite/ext/enc_filebuf/wchar_t/13189.cc: Likewise.\n+\t* testsuite/ext/ext_pointer/1.cc: Likewise.\n+\t* testsuite/ext/ext_pointer/1_neg.cc: Likewise.\n+\t* testsuite/ext/malloc_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/mt_allocator/check_allocate_big_per_type.cc: Likewise.\n+\t* testsuite/ext/mt_allocator/tune-1.cc: Likewise.\n+\t* testsuite/ext/mt_allocator/tune-2.cc: Likewise.\n+\t* testsuite/ext/mt_allocator/tune-3.cc: Likewise.\n+\t* testsuite/ext/mt_allocator/tune-4.cc: Likewise.\n+\t* testsuite/ext/mt_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/new_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/pod_char_traits.cc: Likewise.\n+\t* testsuite/ext/pool_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/random/arcsine_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/arcsine_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/arcsine_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/arcsine_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/arcsine_distribution/operators/serialize.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/beta_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/beta_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/beta_distribution/operators/equal.cc: Likewise.\n+\t* testsuite/ext/random/beta_distribution/operators/inequal.cc: Likewise.\n+\t* testsuite/ext/random/hoyt_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/hoyt_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/hoyt_distribution/operators/equal.cc: Likewise.\n+\t* testsuite/ext/random/hoyt_distribution/operators/inequal.cc: Likewise.\n+\t* testsuite/ext/random/hoyt_distribution/operators/serialize.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/hypergeometric_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/hypergeometric_distribution/cons/parms.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/hypergeometric_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/ext/random/hypergeometric_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/ext/random/hypergeometric_distribution/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/ext/random/k_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/k_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/k_distribution/operators/equal.cc: Likewise.\n+\t* testsuite/ext/random/k_distribution/operators/inequal.cc: Likewise.\n+\t* testsuite/ext/random/k_distribution/operators/serialize.cc: Likewise.\n+\t* testsuite/ext/random/logistic_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/logistic_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/logistic_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/logistic_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/logistic_distribution/operators/serialize.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/nakagami_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/nakagami_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/nakagami_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/nakagami_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/nakagami_distribution/operators/serialize.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/normal_mv_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/normal_mv_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/normal_mv_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/normal_mv_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/pareto_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/pareto_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/pareto_distribution/operators/equal.cc: Likewise.\n+\t* testsuite/ext/random/pareto_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/pareto_distribution/operators/serialize.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/rice_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/rice_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/rice_distribution/operators/equal.cc: Likewise.\n+\t* testsuite/ext/random/rice_distribution/operators/inequal.cc: Likewise.\n+\t* testsuite/ext/random/rice_distribution/operators/serialize.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/ext/random/simd_fast_mersenne_twister_engine/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/ext/random/triangular_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/triangular_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/triangular_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/triangular_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/uniform_on_sphere_distribution/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n+\tequal.cc: Likewise.\n+\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n+\tgenerate.cc: Likewise.\n+\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n+\tinequal.cc: Likewise.\n+\t* testsuite/ext/random/uniform_on_sphere_distribution/operators/\n+\tserialize.cc: Likewise.\n+\t* testsuite/ext/random/von_mises_distribution/cons/default.cc: Likewise.\n+\t* testsuite/ext/random/von_mises_distribution/cons/parms.cc: Likewise.\n+\t* testsuite/ext/random/von_mises_distribution/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/ext/random/von_mises_distribution/operators/inequal.cc:\n+\tLikewise.\n+\t* testsuite/ext/rope/2.cc: Likewise.\n+\t* testsuite/ext/rope/3.cc: Likewise.\n+\t* testsuite/ext/rope/4.cc: Likewise.\n+\t* testsuite/ext/rope/pthread7-rope.cc: Likewise.\n+\t* testsuite/ext/special_functions/conf_hyperg/check_nan.cc: Likewise.\n+\t* testsuite/ext/special_functions/conf_hyperg/check_value.cc: Likewise.\n+\t* testsuite/ext/special_functions/hyperg/check_nan.cc: Likewise.\n+\t* testsuite/ext/special_functions/hyperg/check_value.cc: Likewise.\n+\t* testsuite/ext/stdio_filebuf/char/10063-1.cc: Likewise.\n+\t* testsuite/ext/stdio_filebuf/char/10063-2.cc: Likewise.\n+\t* testsuite/ext/stdio_filebuf/char/10063-3.cc: Likewise.\n+\t* testsuite/ext/stdio_filebuf/char/2.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/char/1.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/char/12048-1.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/char/12048-2.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/char/12048-3.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/char/12048-4.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/1.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-1.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-2.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-3.cc: Likewise.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12948-4.cc: Likewise.\n+\t* testsuite/ext/throw_allocator/variadic_construct.cc: Likewise.\n+\t* testsuite/ext/type_traits/add_unsigned.cc: Likewise.\n+\t* testsuite/ext/type_traits/remove_unsigned.cc: Likewise.\n+\t* testsuite/ext/vstring/capacity/29134.cc: Likewise.\n+\t* testsuite/ext/vstring/capacity/shrink_to_fit.cc: Likewise.\n+\t* testsuite/ext/vstring/cons/58415-1.cc: Likewise.\n+\t* testsuite/ext/vstring/cons/moveable.cc: Likewise.\n+\t* testsuite/ext/vstring/element_access/char/58163.cc: Likewise.\n+\t* testsuite/ext/vstring/element_access/char/front_back.cc: Likewise.\n+\t* testsuite/ext/vstring/element_access/wchar_t/58163.cc: Likewise.\n+\t* testsuite/ext/vstring/element_access/wchar_t/front_back.cc: Likewise.\n+\t* testsuite/ext/vstring/hash/char/1.cc: Likewise.\n+\t* testsuite/ext/vstring/hash/wchar_t/1.cc: Likewise.\n+\t* testsuite/ext/vstring/init-list.cc: Likewise.\n+\t* testsuite/ext/vstring/inserters_extractors/char/28277.cc: Likewise.\n+\t* testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc: Likewise.\n+\t* testsuite/ext/vstring/modifiers/assign/move_assign.cc: Likewise.\n+\t* testsuite/ext/vstring/modifiers/pop_back/char/1.cc: Likewise.\n+\t* testsuite/ext/vstring/modifiers/pop_back/wchar_t/1.cc: Likewise.\n+\t* testsuite/ext/vstring/operators/1.cc: Likewise.\n+\t* testsuite/ext/vstring/operators/2.cc: Likewise.\n+\n 2016-10-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/65122"}, {"sha": "d4b1d3f7db1fd6840941829dd0f35b14cf72ef44", "filename": "libstdc++-v3/testsuite/26_numerics/accumulate/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@ const int NA = sizeof(A) / sizeof(int);\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int res = std::accumulate(A, A + NA, 11);\n   VERIFY( res == 66 );\n }\n@@ -38,8 +36,6 @@ const int NB = sizeof(B) / sizeof(bool);\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int res = std::accumulate(B, B + NB, 100);\n   VERIFY( res == 106 );\n }"}, {"sha": "db10404f8f078a203f59e440fc04f6d607b3f369", "filename": "libstdc++-v3/testsuite/26_numerics/adjacent_difference/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ const int N = sizeof(A) / sizeof(int);\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int D[N];\n \n   std::adjacent_difference(A, A + N, D);"}, {"sha": "fa1ade349cfa495c35f0f0186d6eccbe7f484dbd", "filename": "libstdc++-v3/testsuite/26_numerics/complex/13450.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F13450.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F13450.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F13450.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,7 +27,6 @@ template<typename T>\n   void test01_do(T a, T b)\n   {\n     using namespace std;\n-    bool test __attribute__((unused)) = true;\n     typedef complex<T> cplx;\n \n     T eps = numeric_limits<T>::epsilon() * 100;"}, {"sha": "8d6e6637f0f5909965e934fe27c72ce9a1b7961f", "filename": "libstdc++-v3/testsuite/26_numerics/complex/50880.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F50880.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F50880.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F50880.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n template<typename T>\n   void test01_do()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const std::complex<T> ca(T(-2), T(2));\n     const std::complex<T> cb(T(-2), T(0));\n     const std::complex<T> cc(T(-2), T(-2));"}, {"sha": "b8b1aabefca13253ac7cb67d6d12affe92e54cd4", "filename": "libstdc++-v3/testsuite/26_numerics/complex/c99.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fc99.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fc99.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fc99.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n #if _GLIBCXX_HAVE_COMPLEX_H\n   double _Complex x = .5;\n   double _Complex y = cacos (x);"}, {"sha": "e7dbd1cc2152c465bf2454e1a5dde3484e90a590", "filename": "libstdc++-v3/testsuite/26_numerics/complex/cons/48760.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcons%2F48760.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcons%2F48760.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcons%2F48760.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,8 +24,6 @@\n template<typename T>\n   void do_test01()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     if (std::numeric_limits<T>::has_quiet_NaN)\n       {\n \tstd::complex<T> c1(T(0), std::numeric_limits<T>::quiet_NaN());"}, {"sha": "1a308379049c65abacd12d9e74c7d0b3ecc55b12", "filename": "libstdc++-v3/testsuite/26_numerics/complex/cons/48760_c++0x.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcons%2F48760_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcons%2F48760_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcons%2F48760_c%2B%2B0x.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,8 +25,6 @@\n template<typename T>\n   void do_test01()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     if (std::numeric_limits<T>::has_quiet_NaN)\n       {\n \tstd::complex<T> c1(T(0), std::numeric_limits<T>::quiet_NaN());"}, {"sha": "d7a91ba2db97074268733601c99fd686212dca9b", "filename": "libstdc++-v3/testsuite/26_numerics/complex/dr781_dr1137.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781_dr1137.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781_dr1137.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781_dr1137.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,7 +26,6 @@\n // DR 1137. Return type of conj and proj.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::check_ret_type;\n \n   typedef std::complex<float>       cmplx_f_type;"}, {"sha": "dced71049b695e1f4456a37c1debe42d27c226ef", "filename": "libstdc++-v3/testsuite/26_numerics/complex/dr844.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr844.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr844.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr844.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,7 +29,6 @@\n // and also PR57974.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::check_ret_type;\n \n   typedef std::complex<float>       cmplx_f_type;"}, {"sha": "e3bd714d91c16ee1a4627fdde64684b1d98aa2cd", "filename": "libstdc++-v3/testsuite/26_numerics/complex/inserters_extractors/char/1.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Finserters_extractors%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Finserters_extractors%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Finserters_extractors%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -37,7 +37,6 @@ template<typename R>\n int\n test_good(std::string str, R x, R y)\n {\n-  bool test __attribute__((unused)) = true;\n   std::complex<R> z;\n   char ch;\n   std::istringstream iss(str);\n@@ -53,7 +52,6 @@ template<typename R>\n int\n test_fail(std::string str)\n {\n-  bool test __attribute__((unused)) = true;\n   std::complex<R> z;\n   std::istringstream iss(str);\n   iss >> z;\n@@ -86,7 +84,6 @@ testall()\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n   \n   complex<float> cf01(-1.1, -333.2);\n   stringstream ss;\n@@ -104,8 +101,6 @@ template class std::basic_string<char, gnu_char_traits, std::allocator<char> >;\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // Construct locale with specialized facets.\n   typedef gnu_sstream::__num_put_type numput_type;\n   typedef gnu_sstream::__num_get_type numget_type;"}, {"sha": "a08f19b19f1cd37ab861d139033c75d7ee902557", "filename": "libstdc++-v3/testsuite/26_numerics/complex/inserters_extractors/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Finserters_extractors%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Finserters_extractors%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Finserters_extractors%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -34,7 +34,6 @@ template<typename R>\n int\n test_good(std::wstring str, R x, R y)\n {\n-  bool test __attribute__((unused)) = true;\n   std::complex<R> z;\n   wchar_t ch;\n   std::wistringstream iss(str);\n@@ -50,7 +49,6 @@ template<typename R>\n int\n test_fail(std::wstring str)\n {\n-  bool test __attribute__((unused)) = true;\n   std::complex<R> z;\n   std::wistringstream iss(str);\n   iss >> z;\n@@ -83,7 +81,6 @@ testall()\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n   \n   complex<float> cf01(-1.1, -333.2);\n   wstringstream ss;\n@@ -102,8 +99,6 @@ template class std::basic_string<wchar_t, gnu_char_traits,\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // Construct locale with specialized facets.\n   typedef gnu_sstream::__num_put_type numput_type;\n   typedef gnu_sstream::__num_get_type numget_type;"}, {"sha": "35fc7214a78a08a50cce2dbc63e6947cab943dbf", "filename": "libstdc++-v3/testsuite/26_numerics/complex/value_operations/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,7 +26,6 @@\n void test01()\n {\n  using namespace std;\n- bool test __attribute__((unused)) = true;\n  typedef complex<double> complex_type;\n  const double cd1 = -11.451;\n  const double cd2 = -442.1533;"}, {"sha": "752d42aa0dc68b7076c56f9c48584db87ed417bc", "filename": "libstdc++-v3/testsuite/26_numerics/complex/value_operations/dr387.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2Fdr387.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2Fdr387.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2Fdr387.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,8 +25,6 @@ template<typename T>\n   void\n   do_test()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const T r = 1.0;\n     const T i = -1.0;\n     const T v = 0.0;"}, {"sha": "394c52cc7c4b50df80fd821ced4cf41014c444f0", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/19322.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F19322.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F19322.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F19322.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/19322\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( !std::isnan(3.0) );\n }\n "}, {"sha": "9387d53a866c9a2cda93b8c943feaf978117b8a9", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/c99_classification_macros_c++11.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B11.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -48,8 +48,6 @@ void isunordered() { }\n template <typename _Tp, typename _Up = _Tp>\n   void test_c99_classify()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     typedef _Tp fp_type_one;\n     typedef _Up fp_type_two;\n     fp_type_one f1 = 1.0;"}, {"sha": "e494d1a7ee6ccbeb6270f4212b8bc3e067cb43d2", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/c99_classification_macros_c++98.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B98.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B98.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B98.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -51,8 +51,6 @@ void isunordered() { }\n template <typename _Tp>\n   void test_c99_classify()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     typedef _Tp fp_type;\n     fp_type f1 = 1.0;\n     fp_type f2 = 3.0;"}, {"sha": "38804656a9a032cb946307f2feb3d07f2106a320", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/c_math.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc_math.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc_math.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc_math.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -35,7 +35,7 @@ test01()\n int\n test02()\n {\n-\tstd::sin(static_cast<float>(0));\n+  std::sin(static_cast<float>(0));\n   return 0;\n }\n \n@@ -51,7 +51,6 @@ test03()\n int\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n   float x[2] = {1, 2};\n   float y = 3.4;\n   std::modf(y, &x[0]);"}, {"sha": "ee3f30953a8409cb6af78cc6b3798fde187c3673", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/dr550.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fdr550.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fdr550.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fdr550.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n // DR 550. What should the return type of pow(float,int) be?\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::check_ret_type;\n \n   const int          i1 = 1;"}, {"sha": "ad9e77ef4e0810f0a58794c8fbca1a89127bb168", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/hypot.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fhypot.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fhypot.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fhypot.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -50,7 +50,6 @@ template<typename Tp, unsigned int Num>\n   void\n   test(const testcase_hypot<Tp> (&data)[Num], Tp toler)\n   {\n-    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}, {"sha": "ea9a1604e565049864a8685a030a13f772f8f001", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/powi.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fpowi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fpowi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fpowi.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,7 +26,6 @@ template<typename T>\n   void test01_do()\n   {\n     using namespace std;\n-    bool test __attribute__((unused)) = true;\n     \n     VERIFY( pow(T(1.0), 0) == T(1.0) );\n     VERIFY( pow(T(2.0), 0) == T(1.0) );"}, {"sha": "4259ba67e140be8c08ae9166ee6ee176968ea52e", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cstdlib/13943.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F13943.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F13943.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F13943.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,7 +24,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   VERIFY( llabs(-3) == 3 );\n   "}, {"sha": "17fb528ec57fc09ea2733aae3b7ef6469f0914a7", "filename": "libstdc++-v3/testsuite/26_numerics/inner_product/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -31,17 +31,13 @@ const int NB = sizeof(B1) / sizeof(bool);\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int res = std::inner_product(A1, A1 + NA, A2, 31);\n   VERIFY( res == 983 );\n }\n \n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int res = std::inner_product(B1, B1 + NB, B2, 100);\n   VERIFY( res == 102 );\n }"}, {"sha": "7cfdd2ae34340afb652db91aba47d401ec16c3e3", "filename": "libstdc++-v3/testsuite/26_numerics/iota/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fiota%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fiota%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fiota%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -31,8 +31,6 @@ const int N = sizeof(A) / sizeof(int);\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::iota(A, A + N, 1);\n   VERIFY( std::equal(A, A + N, B) );\n "}, {"sha": "6710f19c9b9ab8f3dcd1b87bdba4d5f37f8c1e30", "filename": "libstdc++-v3/testsuite/26_numerics/partial_sum/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ const int N = sizeof(A) / sizeof(int);\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int D[N];\n \n   std::partial_sum(B, B + N, D);"}, {"sha": "0ce5aad4be7352ecb5cc441e06be0bcc6b7f24f6", "filename": "libstdc++-v3/testsuite/26_numerics/random/bernoulli_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bernoulli_distribution u;\n   VERIFY( u.p() == 0.5 );\n   VERIFY( u.min() == std::numeric_limits<bool>::min() );"}, {"sha": "8e6ca43195d3f8a443281d335f1948488c222fec", "filename": "libstdc++-v3/testsuite/26_numerics/random/bernoulli_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bernoulli_distribution u(0.75);\n   VERIFY( u.p() == 0.75 );\n   VERIFY( u.min() == std::numeric_limits<bool>::min() );"}, {"sha": "cdee2c1763773b34dc95a7145364bfa0e73c87d4", "filename": "libstdc++-v3/testsuite/26_numerics/random/bernoulli_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   std::bernoulli_distribution u(0.75), v, w;\n \n   VERIFY( v == w );"}, {"sha": "fc57210952df3a702f388b2f69fd4ff6eaa9dde3", "filename": "libstdc++-v3/testsuite/26_numerics/random/bernoulli_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbernoulli_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   std::bernoulli_distribution u(0.75), v, w;\n \n   VERIFY( u != v );"}, {"sha": "38a0c3ff1bc763209712c8cf94c9595d43fbcc0f", "filename": "libstdc++-v3/testsuite/26_numerics/random/binomial_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::binomial_distribution<> u;\n   VERIFY( u.t() == 1 );\n   VERIFY( u.p() == 0.5 );"}, {"sha": "e93f0c3900893ed291ca1070bfae1fdba9929782", "filename": "libstdc++-v3/testsuite/26_numerics/random/binomial_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::binomial_distribution<> u(3, 0.75);\n   VERIFY( u.t() == 3 );\n   VERIFY( u.p() == 0.75 );"}, {"sha": "3e93edf9ccd03e5300de527da6cd6ab6c456cf22", "filename": "libstdc++-v3/testsuite/26_numerics/random/binomial_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::binomial_distribution<int> u(3, 0.75), v, w;\n   \n   VERIFY( v == w );"}, {"sha": "e01ff8e33b339ac060138112f737463a555ec703", "filename": "libstdc++-v3/testsuite/26_numerics/random/binomial_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::binomial_distribution<int> u(3, 0.75), v, w;\n   \n   VERIFY( u != v );"}, {"sha": "2ada9129eb007e6aa2a39c59928a23930f06d5ca", "filename": "libstdc++-v3/testsuite/26_numerics/random/cauchy_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::cauchy_distribution<> u;\n   VERIFY( u.a() == 0.0 );\n   VERIFY( u.b() == 1.0 );"}, {"sha": "6bd0e1cd643159cc75c88b4719793a4ca56619af", "filename": "libstdc++-v3/testsuite/26_numerics/random/cauchy_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::cauchy_distribution<> u(5.0, 2.0);\n   VERIFY( u.a() == 5.0 );\n   VERIFY( u.b() == 2.0 );"}, {"sha": "6a95f1e11bf2a6d58865dac7ecb96542d433df39", "filename": "libstdc++-v3/testsuite/26_numerics/random/cauchy_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::cauchy_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "c0bd9b46020fb540962c2ca6a2492250f12ae934", "filename": "libstdc++-v3/testsuite/26_numerics/random/cauchy_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fcauchy_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::cauchy_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "381b18b04ebd68af724c136e3c5ba6a9c7f78e9e", "filename": "libstdc++-v3/testsuite/26_numerics/random/chi_squared_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::chi_squared_distribution<> u;\n   VERIFY( u.n() == 1 );\n   typedef std::chi_squared_distribution<>::result_type result_type;"}, {"sha": "d6d9e0b6d231b582b9a6372cc0035815e862a165", "filename": "libstdc++-v3/testsuite/26_numerics/random/chi_squared_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::chi_squared_distribution<> u(1.5);\n   VERIFY( u.n() == 1.5 );\n   typedef std::chi_squared_distribution<>::result_type result_type;"}, {"sha": "c2c9bd4182f05bfb8349c0e55b4a6a0310baa611", "filename": "libstdc++-v3/testsuite/26_numerics/random/chi_squared_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::chi_squared_distribution<double> u(1.5), v, w;\n \n   VERIFY( v == w );"}, {"sha": "a1ba055ba4d6a6e66b8b33cfef3c5ef2a39853dd", "filename": "libstdc++-v3/testsuite/26_numerics/random/chi_squared_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fchi_squared_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::chi_squared_distribution<double> u(1.5), v, w;\n \n   VERIFY( u != v );"}, {"sha": "ad2f0dc2341610cadfbf64b36c4f95bcfdfb23ae", "filename": "libstdc++-v3/testsuite/26_numerics/random/default_random_engine.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdefault_random_engine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdefault_random_engine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdefault_random_engine.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::default_random_engine a;\n   a.discard(9999);\n "}, {"sha": "36ab8ace53c2eb1aec2ab3bdd4513d0a28761504", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/55215.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2F55215.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -38,8 +38,6 @@ int g(int x)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const int f1 = f(0);\n   const int f2 = f(0);\n "}, {"sha": "1d0658d5ea6197923b844ec43a47c6c7daea44cf", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::discard_block_engine\n     <\n     std::subtract_with_carry_engine<unsigned long, 24, 10, 24>,"}, {"sha": "93dd53f1f3150de4bad51dea8cb6d8589285b488", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::discard_block_engine\n     <\n     std::subtract_with_carry_engine<unsigned long, 24, 10, 24>,"}, {"sha": "c0baa7a16a12ac3d69be947198864b54cdb2880b", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   std::discard_block_engine\n     <"}, {"sha": "4cd8b2eeeb929734417293884f9721c88feaa0ae", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::discrete_distribution<> u;\n   std::vector<double> probablility = u.probabilities();\n   VERIFY( probablility.size() == 1 );"}, {"sha": "35d3018ba8462c85fa9e250d1085bbcdbfeeb2f4", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/cons/initlist.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Finitlist.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Finitlist.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Finitlist.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::discrete_distribution<> u({0.0, 2.0, 4.0, 3.0, 4.0, 0.0});\n   std::vector<double> probablility = u.probabilities();\n   VERIFY( probablility.size() == 6 );"}, {"sha": "45fc3550fcca26e7c1dfbfc401decd3bfd27170d", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/cons/num_xbound_fun.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fnum_xbound_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fnum_xbound_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fnum_xbound_fun.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -55,8 +55,6 @@ struct cosine_distribution\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   cosine_distribution cd(1.5, 3.0);\n   std::discrete_distribution<> u(21, -10.0, 10.0, cd);\n   std::vector<double> probablility = u.probabilities();"}, {"sha": "13e8c9c51dfe3068333542ef6b65825371a1911e", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/cons/range.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Frange.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> wt = {0.5, 1.0, 2.5, 1.5, 0.5};\n   std::discrete_distribution<> u(wt.begin(), wt.end());\n   std::vector<double> probablility = u.probabilities();"}, {"sha": "78218415e291bee79acc50a8cd1b0b842c1a63fe", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> wt = { 0.5, 1.0, 2.5, 1.5, 0.5 };\n   std::discrete_distribution<int> u(wt.begin(), wt.end()), v, w;\n "}, {"sha": "786c316acc2ae3d8a0d36804c5f5b486ac68cd90", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> wt = { 0.5, 1.0, 2.5, 1.5, 0.5 };\n   std::discrete_distribution<int> u(wt.begin(), wt.end()), v, w;\n "}, {"sha": "ba3f62d794fb1b6ea692082d3341ea1e8050296d", "filename": "libstdc++-v3/testsuite/26_numerics/random/exponential_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::exponential_distribution<> u;\n   VERIFY( u.lambda() == 1.0 );\n   typedef std::exponential_distribution<>::result_type result_type;"}, {"sha": "1c9a7b34bc81e8dbdbdf9970d0c2c8712b93fe6a", "filename": "libstdc++-v3/testsuite/26_numerics/random/exponential_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::exponential_distribution<> u(0.5);\n   VERIFY( u.lambda() == 0.5 );\n   typedef std::exponential_distribution<>::result_type result_type;"}, {"sha": "dabc9c4954e3544d13516ff75b9c959dea8389b3", "filename": "libstdc++-v3/testsuite/26_numerics/random/exponential_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::exponential_distribution<double> u(0.5), v, w;\n \n   VERIFY( v == w );"}, {"sha": "a3f31609d37d5992993f1645274cff877fabccc4", "filename": "libstdc++-v3/testsuite/26_numerics/random/exponential_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fexponential_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::exponential_distribution<double> u(0.5), v, w;\n \n   VERIFY( u != v );"}, {"sha": "cbad3e29c4cd9fa3f23227ffd1c8690f600449a3", "filename": "libstdc++-v3/testsuite/26_numerics/random/extreme_value_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::extreme_value_distribution<> u;\n   VERIFY( u.a() == 0.0 );\n   VERIFY( u.b() == 1.0 );"}, {"sha": "86675514aafb426c7e09ba4a2876058414c5359d", "filename": "libstdc++-v3/testsuite/26_numerics/random/extreme_value_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::extreme_value_distribution<> u(5.0, 2.0);\n   VERIFY( u.a() == 5.0 );\n   VERIFY( u.b() == 2.0 );"}, {"sha": "71f4618bf6ae5d26781b494d970f8ef50958dab0", "filename": "libstdc++-v3/testsuite/26_numerics/random/extreme_value_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::extreme_value_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "3e82315856cda254b4efc26a10964aed7bde5f6e", "filename": "libstdc++-v3/testsuite/26_numerics/random/extreme_value_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fextreme_value_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::extreme_value_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "18837fbc80bd32f6fad3d3320e739b6c5702b5ec", "filename": "libstdc++-v3/testsuite/26_numerics/random/fisher_f_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::fisher_f_distribution<> u;\n   VERIFY( u.m() == 1.0 );\n   VERIFY( u.n() == 1.0 );"}, {"sha": "de7a3acc5f51397726631dff322191df9acdc6c1", "filename": "libstdc++-v3/testsuite/26_numerics/random/fisher_f_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::fisher_f_distribution<> u(2.0, 3.0);\n   VERIFY( u.m() == 2.0 );\n   VERIFY( u.n() == 3.0 );"}, {"sha": "336017f2632eb27a3280b28649cd72a27262ad5d", "filename": "libstdc++-v3/testsuite/26_numerics/random/fisher_f_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::fisher_f_distribution<double> u(2.0, 3.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "9ae879bfa1fbefcd1ea55aa6d39ad5f437a21a84", "filename": "libstdc++-v3/testsuite/26_numerics/random/fisher_f_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Ffisher_f_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::fisher_f_distribution<double> u(2.0, 3.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "4288e0c2b2dc0a3af9906a701f4b04fcced8fac4", "filename": "libstdc++-v3/testsuite/26_numerics/random/gamma_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::gamma_distribution<> u;\n   VERIFY( u.alpha() == 1.0 );\n   VERIFY( u.beta() == 1.0 );"}, {"sha": "a2d752874d543eb553eb34a8ea5d5aa4d44fcb61", "filename": "libstdc++-v3/testsuite/26_numerics/random/gamma_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::gamma_distribution<> u(1.5, 3.0);\n   VERIFY( u.alpha() == 1.5 );\n   VERIFY( u.beta() == 3.0 );"}, {"sha": "88259ae9989ed6e7bdfb36fc2fbae371bc959eec", "filename": "libstdc++-v3/testsuite/26_numerics/random/gamma_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::gamma_distribution<double> u(1.5, 3.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "29032eea28f7b75531a61bef1cb3da166065aa9f", "filename": "libstdc++-v3/testsuite/26_numerics/random/gamma_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgamma_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::gamma_distribution<double> u(1.5, 3.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "4d2fdd576c2c5b2ab2bb7f924d294f04fe4cb6cd", "filename": "libstdc++-v3/testsuite/26_numerics/random/geometric_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::geometric_distribution<> u;\n   VERIFY( u.p() == 0.5 );\n   VERIFY( u.min() == 0 );"}, {"sha": "21c2b668a935f2da4afc29600062b6ae1d7dee77", "filename": "libstdc++-v3/testsuite/26_numerics/random/geometric_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::geometric_distribution<> u(0.75);\n   VERIFY( u.p() == 0.75 );\n   VERIFY( u.min() == 0 );"}, {"sha": "3e6ed589fb56b31c1f6780a47956126918ab288f", "filename": "libstdc++-v3/testsuite/26_numerics/random/geometric_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::geometric_distribution<int> u(0.75), v, w;\n \n   VERIFY( v == w );"}, {"sha": "602284e30a708ce6f6f9ddb520d874d8bca8fb80", "filename": "libstdc++-v3/testsuite/26_numerics/random/geometric_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fgeometric_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::geometric_distribution<int> u(0.75), v, w;\n \n   VERIFY( u != v );"}, {"sha": "e1fc65633fad238c0ab35e73e85fcbe063552650", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/55215.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2F55215.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -40,8 +40,6 @@ int g(int x)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const int f1 = f(0);\n   const int f2 = f(0);\n "}, {"sha": "dba33126651fa53564aa9376bc0e10ffe3b457ff", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::independent_bits_engine\n     <std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>,\n      48, uint_fast64_t> u, v;"}, {"sha": "9e21224a2d932572e6d470412909d644b1d70c6b", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::independent_bits_engine\n     <std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>,\n      48, uint_fast64_t> u, v;"}, {"sha": "8b102bdd24e52e6ebfde005fa9eee105686a0ba6", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   std::independent_bits_engine\n     <std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>,"}, {"sha": "c01d120dbe6a934133326516c163a7721ad99e56", "filename": "libstdc++-v3/testsuite/26_numerics/random/knuth_b.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fknuth_b.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fknuth_b.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fknuth_b.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::knuth_b a;\n   a.discard(9999);\n "}, {"sha": "5c0604f50611efc55408a8e450e4d8bddbfdf6cb", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/55215.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2F55215.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -38,8 +38,6 @@ int g(int x)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const int f1 = f(0);\n   const int f2 = f(0);\n "}, {"sha": "0f8b616493837318f6b6dafbe206547fe493de57", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> x;\n   VERIFY( x.min() == 1 );\n   VERIFY( x.max() == 2147483647-1 );"}, {"sha": "b21ec4737c72f1a1fadce0a04b5f29f221da0909", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/operators/51795.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2F51795.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2F51795.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2F51795.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::linear_congruential_engine<std::uint64_t, 1103515245ULL,\n \t\t\t\t\t  12345, 2147483648ULL> engine;\n   engine eng(1103527590ULL);"}, {"sha": "0be657ecbafea882bfbca213d05dec06451056b7", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::minstd_rand0 a;\n   std::minstd_rand0 b;\n   std::minstd_rand0 c(120);"}, {"sha": "b935847aad772f89edabdeec5d7f7515ff47132f", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::minstd_rand0 a;\n   std::minstd_rand0 b;\n   std::minstd_rand0 c(120);"}, {"sha": "cfdea122579e3dc05854262b7bbd9eed1578264f", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   std::minstd_rand0 u;\n   std::minstd_rand0 v;"}, {"sha": "69d21bbca48425a079f44f89e52965e726f09359", "filename": "libstdc++-v3/testsuite/26_numerics/random/lognormal_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::lognormal_distribution<> u;\n   VERIFY( u.m() == 0.0 );\n   VERIFY( u.s() == 1.0 );"}, {"sha": "3009a239b3d1d9a033c99f5baa82813ebbc456f3", "filename": "libstdc++-v3/testsuite/26_numerics/random/lognormal_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::lognormal_distribution<> u(5.0, 2.0);\n   VERIFY( u.m() == 5.0 );\n   VERIFY( u.s() == 2.0 );"}, {"sha": "418f92c7bb3cea79f030325f855f762010470201", "filename": "libstdc++-v3/testsuite/26_numerics/random/lognormal_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::lognormal_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "c6f9e4cca81566690d4596c2ed7f2206c2fbb2c4", "filename": "libstdc++-v3/testsuite/26_numerics/random/lognormal_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flognormal_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::lognormal_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "3e5d7517ffdabe5ee4d0e304a6bfe3294486a8e0", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/55215.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2F55215.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -38,8 +38,6 @@ int g(int x)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const int f1 = f(0);\n   const int f2 = f(0);\n "}, {"sha": "535291105a3b2cd0ee3ba1f762c6162ab9bad608", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/default.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,7 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef unsigned long value_type;\n \n   std::mersenne_twister_engine<"}, {"sha": "2ca1cce2281e358eaecb0e7b7616f3b557153727", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::mersenne_twister_engine<\n     unsigned long, 32, 624, 397, 31,\n     0x9908b0dful, 11,"}, {"sha": "7dbaf599d8cf4bee30c8473e3ec092bde2e0c585", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::mersenne_twister_engine<\n     unsigned long, 32, 624, 397, 31,\n     0x9908b0dful, 11,"}, {"sha": "0f2ebb11c51db9e77b7fdaab85459da26f359631", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   std::mersenne_twister_engine<\n     unsigned long, 32, 624, 397, 31,"}, {"sha": "7f079279265d5183039a111e4a64ff6e4984abf2", "filename": "libstdc++-v3/testsuite/26_numerics/random/minstd_rand.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fminstd_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fminstd_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fminstd_rand.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::minstd_rand a;\n   a.discard(9999);\n "}, {"sha": "4fe102cacd0b078a4739dfd100d589fdd62914c6", "filename": "libstdc++-v3/testsuite/26_numerics/random/minstd_rand0.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fminstd_rand0.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fminstd_rand0.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fminstd_rand0.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::minstd_rand0 a;\n   a.discard(9999);\n "}, {"sha": "7796a9cfa4d0fcb1a82fa66742c61c8bbe823f1e", "filename": "libstdc++-v3/testsuite/26_numerics/random/mt19937.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmt19937.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmt19937.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmt19937.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::mt19937 a;\n   a.discard(9999);\n "}, {"sha": "d004baaff9dfe0daf6b70d7e9cf281737b03e632", "filename": "libstdc++-v3/testsuite/26_numerics/random/mt19937_64.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmt19937_64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmt19937_64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmt19937_64.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::mt19937_64 a;\n   a.discard(9999);\n "}, {"sha": "fdfc882c7ddce07551370f87cc3da3fdd24447b4", "filename": "libstdc++-v3/testsuite/26_numerics/random/negative_binomial_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::negative_binomial_distribution<> u;\n   VERIFY( u.k() == 1 );\n   VERIFY( u.p() == 0.5 );"}, {"sha": "41e2ef9d387763676aab36ced7f4a33e4dfe9054", "filename": "libstdc++-v3/testsuite/26_numerics/random/negative_binomial_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::negative_binomial_distribution<> u(3, 0.75);\n   VERIFY( u.k() == 3 );\n   VERIFY( u.p() == 0.75 );"}, {"sha": "b2b99a211842874357e7d221d183802bc4269a25", "filename": "libstdc++-v3/testsuite/26_numerics/random/negative_binomial_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::negative_binomial_distribution<int> u(3, 0.75), v, w;\n \n   VERIFY( v == w );"}, {"sha": "e1643b4ff7405e6f317102e118bbaa90896ceec4", "filename": "libstdc++-v3/testsuite/26_numerics/random/negative_binomial_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnegative_binomial_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::negative_binomial_distribution<int> u(3, 0.75), v, w;\n \n   VERIFY( u != v );"}, {"sha": "7bcae800af6431bdc738beb975c7b179f2d0fa11", "filename": "libstdc++-v3/testsuite/26_numerics/random/normal_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::normal_distribution<> u;\n   VERIFY( u.mean() == 0.0 );\n   VERIFY( u.stddev() == 1.0 );"}, {"sha": "497c7e1e077407799bb9e7d7dc5d4d31817be1b2", "filename": "libstdc++-v3/testsuite/26_numerics/random/normal_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::normal_distribution<> u(5.0, 2.0);\n   VERIFY( u.mean() == 5.0 );\n   VERIFY( u.stddev() == 2.0 );"}, {"sha": "8ccbc2adc77331c4fad2516659b689f030d7ad63", "filename": "libstdc++-v3/testsuite/26_numerics/random/normal_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::normal_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "0944a2acd226f1404dddbda22376fa9402dea648", "filename": "libstdc++-v3/testsuite/26_numerics/random/normal_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fnormal_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::normal_distribution<double> u(5.0, 2.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "be3100feac16163c7547df860c75e651ac1e347f", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::piecewise_constant_distribution<> u;\n   std::vector<double> interval = u.intervals();\n   std::vector<double> density = u.densities();"}, {"sha": "3b894a2c98a1ac037d7056ee666aac80005e3fb5", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/cons/initlist_fun.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Finitlist_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Finitlist_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Finitlist_fun.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -56,8 +56,6 @@ struct cosine_distribution\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   cosine_distribution cd(1.5, 3.0);\n   std::piecewise_constant_distribution<> u({-10.0, -8.0, -6.0, -4.0, -2.0,\n                                             0.0, 2.0, 4.0, 6.0, 8.0, 10.0},"}, {"sha": "a678ff2d27a6afc23a7183a832e2037cae899b70", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/cons/num_xbound_fun.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fnum_xbound_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fnum_xbound_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fnum_xbound_fun.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -56,8 +56,6 @@ struct cosine_distribution\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   cosine_distribution cd(1.5, 3.0);\n   std::piecewise_constant_distribution<> u(21, -10.0, 10.0, cd);\n   std::vector<double> interval = u.intervals();"}, {"sha": "b455e575df54866a9eb1d2de1713b4caeb81d173", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/cons/range.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Frange.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> x = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0};\n   std::vector<double> wt = {0.5, 1.0, 2.5, 1.5, 0.5};\n   std::piecewise_constant_distribution<> u(x.begin(), x.end(), wt.begin());"}, {"sha": "ff0ce4ac6b7d5e2fe91785fb681acbeaf97a4ce1", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> x = { 0.0, 1.0, 2.0, 3.0, 4.0, 5.0 };\n   std::vector<double> wt = { 0.5, 1.0, 2.5, 1.5, 0.5 };\n   std::piecewise_constant_distribution<double>"}, {"sha": "4c0efff510b998e8ebe4786a4064af586044c05b", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> x = { 0.0, 1.0, 2.0, 3.0, 4.0, 5.0 };\n   std::vector<double> wt = { 0.5, 1.0, 2.5, 1.5, 0.5 };\n   std::piecewise_constant_distribution<double>"}, {"sha": "94f214f0a831ef6aff16b9d624c7f0cca44620a0", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::piecewise_linear_distribution<> u;\n   std::vector<double> interval = u.intervals();\n   std::vector<double> density = u.densities();"}, {"sha": "9c4a7bcf9b38a6c17657e52b014a9eab9fbfb006", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/cons/initlist_fun.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Finitlist_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Finitlist_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Finitlist_fun.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -56,8 +56,6 @@ struct cosine_distribution\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   cosine_distribution cd(1.5, 3.0);\n   std::piecewise_linear_distribution<> u({-10.0, -8.0, -6.0, -4.0, -2.0,\n                                           0.0, 2.0, 4.0, 6.0, 8.0, 10.0},"}, {"sha": "cb121331378478476a27ae4b5c8cb57fe9ba3bf0", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/cons/num_xbound_fun.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fnum_xbound_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fnum_xbound_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fnum_xbound_fun.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -56,8 +56,6 @@ struct cosine_distribution\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   cosine_distribution cd(1.5, 3.0);\n   std::piecewise_linear_distribution<> u(21, -10.0, 10.0, cd);\n   std::vector<double> interval = u.intervals();"}, {"sha": "e30e2824c7988e3abdd94e23e60e50f059c7937a", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/cons/range.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Frange.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> x = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0};\n   std::vector<double> wt = {0.0, 1.0, 2.5, 1.5, 3.5, 0.0};\n   std::piecewise_linear_distribution<> u(x.begin(), x.end(), wt.begin());"}, {"sha": "8060120f13e9bcf5fe42c917fc49f29a27221f06", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> x = { 0.0, 1.0, 2.0, 3.0, 4.0, 5.0 };\n   std::vector<double> wt = { 0.0, 1.0, 2.5, 1.5, 0.5, 0.0 };\n   std::piecewise_linear_distribution<double>"}, {"sha": "8b933bc7c587e832d5f4ae1551c361a37d420128", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<double> x = { 0.0, 1.0, 2.0, 3.0, 4.0, 5.0 };\n   std::vector<double> wt = { 0.0, 1.0, 2.5, 1.5, 0.5, 0.0 };\n   std::piecewise_linear_distribution<double>"}, {"sha": "bf735a8fb33446473b90af272c7ab3b7061ed0c8", "filename": "libstdc++-v3/testsuite/26_numerics/random/poisson_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::poisson_distribution<> u;\n   VERIFY( u.mean() == 1.0 );\n   VERIFY( u.min() == 0 );"}, {"sha": "4b2cbe05539161aaa7d39ffca4a6abd6ec04ef69", "filename": "libstdc++-v3/testsuite/26_numerics/random/poisson_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::poisson_distribution<> u(5.0);\n   VERIFY( u.mean() == 5.0 );\n   VERIFY( u.min() == 0 );"}, {"sha": "ea336522d73cd8abd9041ba6f9f1590ff86a0b30", "filename": "libstdc++-v3/testsuite/26_numerics/random/poisson_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::poisson_distribution<int> u(5.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "68a01171669ebcc74402ffb6227960606d0a1293", "filename": "libstdc++-v3/testsuite/26_numerics/random/poisson_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::poisson_distribution<int> u(5.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "da9e658f54cb524616bcab60e16b36df0d002d4c", "filename": "libstdc++-v3/testsuite/26_numerics/random/random_device/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Frandom_device%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Frandom_device%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Frandom_device%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::random_device x;\n \n   VERIFY( x.min() == std::numeric_limits<std::random_device::result_type>::min() );"}, {"sha": "b146998ec7e134207c246000e4a027761295658b", "filename": "libstdc++-v3/testsuite/26_numerics/random/random_device/cons/token.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Frandom_device%2Fcons%2Ftoken.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Frandom_device%2Fcons%2Ftoken.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Frandom_device%2Fcons%2Ftoken.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n #ifdef _GLIBCXX_USE_RANDOM_TR1\n   std::random_device x(\"/dev/random\");\n #else"}, {"sha": "5df380ea42ee4571141890347c04a3c13ffb84bc", "filename": "libstdc++-v3/testsuite/26_numerics/random/ranlux24.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux24.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux24.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux24.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ranlux24 a;\n   a.discard(9999);\n "}, {"sha": "c23f0635870f4732bb704b8d604f702305f23102", "filename": "libstdc++-v3/testsuite/26_numerics/random/ranlux24_base.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux24_base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux24_base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux24_base.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ranlux24_base a;\n   a.discard(9999);\n "}, {"sha": "530212f59f7c99e6c3495125f87a248ab5fbbbfc", "filename": "libstdc++-v3/testsuite/26_numerics/random/ranlux48.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux48.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux48.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux48.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ranlux48 a;\n   a.discard(9999);\n "}, {"sha": "03b9faaf152312abcc9ddd0ccfcaeef3fa91b0f3", "filename": "libstdc++-v3/testsuite/26_numerics/random/ranlux48_base.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux48_base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux48_base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Franlux48_base.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ranlux48_base a;\n   a.discard(9999);\n "}, {"sha": "7fcd53ed17cd3c146cc635096ca4fa2acd10c81c", "filename": "libstdc++-v3/testsuite/26_numerics/random/seed_seq/cons/initlist.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fseed_seq%2Fcons%2Finitlist.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fseed_seq%2Fcons%2Finitlist.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fseed_seq%2Fcons%2Finitlist.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::seed_seq seq({0, 1, 2, 3, 4, 5, 6, 7, 8, 9});\n \n   std::vector<unsigned> foo(10000);"}, {"sha": "7fede12d73a118f180ac73ed7a137986b39f446a", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/55215.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2F55215.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -38,8 +38,6 @@ int g(int x)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const int f1 = f(0);\n   const int f2 = f(0);\n "}, {"sha": "62f51877d2f470b97ce561ce95988d430b69443b", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shuffle_order_engine\n     <\n       std::linear_congruential_engine<uint_fast32_t,16807UL, 0UL, 2147483647UL>,"}, {"sha": "a141cded7c38aa8124f72e940e2ebd5c0865e2f2", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shuffle_order_engine\n     <\n       std::linear_congruential_engine<uint_fast32_t,16807UL, 0UL, 2147483647UL>,"}, {"sha": "1892291ca0818debec4cccf97380e71a64600a98", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   std::shuffle_order_engine\n     <"}, {"sha": "befc58bf61287f0dcb9eea9dd7c446b537688cbd", "filename": "libstdc++-v3/testsuite/26_numerics/random/student_t_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::student_t_distribution<> u;\n   VERIFY( u.n() == 1.0 );\n   typedef std::student_t_distribution<>::result_type result_type;"}, {"sha": "c01cd69b280e44359d629eb0999e741af3384a31", "filename": "libstdc++-v3/testsuite/26_numerics/random/student_t_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::student_t_distribution<> u(1.5);\n   VERIFY( u.n() == 1.5 );\n   typedef std::student_t_distribution<>::result_type result_type;"}, {"sha": "75f8c891b3f0740fe54e4ed3e688787d2bb2664c", "filename": "libstdc++-v3/testsuite/26_numerics/random/student_t_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::student_t_distribution<double> u(1.5), v, w;\n \n   VERIFY( v == w );"}, {"sha": "59a4e92a4a69c9743f1cf9b9731c8f566186c506", "filename": "libstdc++-v3/testsuite/26_numerics/random/student_t_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fstudent_t_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::student_t_distribution<double> u(1.5), v, w;\n \n   VERIFY( u != v );"}, {"sha": "9197640145c82c6b858b70b6bc67308b09d2c45b", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/55215.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2F55215.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -38,8 +38,6 @@ int g(int x)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const int f1 = f(0);\n   const int f2 = f(0);\n "}, {"sha": "1096599cb08d5d98257e71d23ced79b67e17ba75", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> x;\n   VERIFY( x.min() == 0 );\n   VERIFY( x.max() == ((1UL << 24) - 1) );"}, {"sha": "22b327c8c94ede6919859f80b0d44378a3d433bd", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> u;\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> v;\n "}, {"sha": "15538a93d9c2b00a04d44a6c8b957afc1c46c6ff", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> u;\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> v;\n "}, {"sha": "270f34b23632a4c22030ec56478ceb90d44c90d9", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> u;\n   std::subtract_with_carry_engine<unsigned long, 24, 10, 24> v;"}, {"sha": "6541a1824e42cb2dbcde5e6615e4fa406bf0a53b", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_int_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_int_distribution<int> u;\n   VERIFY( u.a() == 0 );\n   VERIFY( u.b() == std::numeric_limits<int>::max() );"}, {"sha": "0b5fdb5bc091f2d2f398e8551d478ca7154ec42c", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_int_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_int_distribution<int> u(1, 20);\n   VERIFY( u.a() == 1 );\n   VERIFY( u.b() == 20 );"}, {"sha": "08fdb6d157ee1a85949ce6308f6ec08e454a6c23", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_int_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_int_distribution<int> u(1, 20), v, w;\n \n   VERIFY( v == w );"}, {"sha": "44503e00accf20108b81184cdb94123adcdee812", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_int_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_int_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_int_distribution<int> u(1, 20), v, w;\n \n   VERIFY( u != v );"}, {"sha": "ff31394838c886e3fa297d0eb1e85425b374dc98", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_real_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_real_distribution<double> u;\n   VERIFY( u.a() == 0.0 );\n   VERIFY( u.b() == 1.0 );"}, {"sha": "2a35b3bce0afc3a0e0c71a4fac64a3127af6e306", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_real_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_real_distribution<double> u(-5.0, 5.0);\n   VERIFY( u.a() == -5.0 );\n   VERIFY( u.b() == 5.0 );"}, {"sha": "f6e53ac6c5ba498ac9fe4e19c8116c653e8410ff", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_real_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_real_distribution<double> u(-5.0, 5.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "398ddd59e75cb5cb4005767f00027b687b8c53e2", "filename": "libstdc++-v3/testsuite/26_numerics/random/uniform_real_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Funiform_real_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::uniform_real_distribution<double> u(-5.0, 5.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "c7c41a43cf2db5242c5caaee41c83e68df8d47d7", "filename": "libstdc++-v3/testsuite/26_numerics/random/weibull_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::weibull_distribution<> u;\n   VERIFY( u.a() == 1.0 );\n   VERIFY( u.b() == 1.0 );"}, {"sha": "88dd2daabe52b3a3d2a5d2e4ad577c34e3c14b78", "filename": "libstdc++-v3/testsuite/26_numerics/random/weibull_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::weibull_distribution<> u(2.0, 3.5);\n   VERIFY( u.a() == 2.0 );\n   VERIFY( u.b() == 3.5 );"}, {"sha": "b721be9f193711c7a2b77f4f7e3b1f1a15e4318e", "filename": "libstdc++-v3/testsuite/26_numerics/random/weibull_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::weibull_distribution<double> u(2.0, 3.5), v, w;\n \n   VERIFY( v == w );"}, {"sha": "d98a2173ad6827c6277ecb51bad85385d07b4d01", "filename": "libstdc++-v3/testsuite/26_numerics/random/weibull_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fweibull_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::weibull_distribution<double> u(2.0, 3.5), v, w;\n \n   VERIFY( u != v );"}, {"sha": "130c7b280db1af70e836d7c2f2f28b3152969c39", "filename": "libstdc++-v3/testsuite/26_numerics/slice/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -50,7 +50,6 @@ assignment(std::size_t start, std::size_t size, std::size_t stride)\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n   std::srand(20020717);         \n   using std::rand;\n   VERIFY(construction(rand(), rand(), rand()));"}, {"sha": "a5725f3b4fe24fb0a3190bbb0f63d8e8a0cbe3c3", "filename": "libstdc++-v3/testsuite/26_numerics/slice_array/array_assignment.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,7 +23,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::valarray;\n   using std::slice;\n   valarray<int> v(1, 10), w(2, 10);"}, {"sha": "cfc29203f11068eded2e54d8dd9e9a75023eab67", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/27867.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F27867.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F27867.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F27867.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,8 +22,6 @@\n // libstdc++/27867\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::valarray<int> v1(100, 1);\n   std::valarray<int> v2(100, 1);\n   std::valarray<bool> v3(true, 1);"}, {"sha": "fdd5d2b216cc504ba6d7b1e1b50723a2a237cae4", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/28277.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F28277.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n // libstdc++/28277\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::valarray<int> v1(1, MAX_SIZE);\n \n   const std::valarray<int> v2 = v1.shift(1);"}, {"sha": "cfb305509f1c5a6556c3a5f4024f5edf79ae3a01", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/30416.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F30416.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F30416.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F30416.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -44,7 +44,6 @@ init_vala(std::valarray<int>& v, size_t first, size_t last, int val)\n // libstdc++/30416\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   // shift"}, {"sha": "bb79e63d557cc444b27ba81858afe06cea890ce9", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/dr543.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr543.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr543.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr543.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -21,8 +21,6 @@\n // DR 543. valarray slice default constructor\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::valarray<int> v1(10);\n   std::valarray<int> v2 = v1[std::slice()];\n   VERIFY( v2.size() == 0 );"}, {"sha": "5f1ea778ee93331eefc0b5a74d3f172c77bf4428", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/dr630-1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -21,7 +21,6 @@\n // DR 630.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   valarray<int> v1;"}, {"sha": "2d84d0ddb043816d913923d7b61c251d7631f8ba", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/dr630-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,7 +23,6 @@\n // DR 630.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   valarray<int> v1;"}, {"sha": "590d167787fe2f4f19f0dab8aea48dc435c5ba0d", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/dr630-3.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr630-3.C?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -21,8 +21,6 @@\n // libstdc++/57666\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::valarray<int> a(3), b(3), d1, d2;\n   d1 = a;\n   VERIFY( d1.size() == 3 );"}, {"sha": "698c8d50123a7f096bf40d4d63893de2489779d6", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/init-list.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Finit-list.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   valarray<int> m({ 1, 5, 37 });\n   VERIFY(m.size() == 3);\n   VERIFY(m[0] == 1);\n@@ -38,8 +36,6 @@ int test01()\n   VERIFY(m[0] == 28);\n   VERIFY(m[1] == 37);\n   VERIFY(m[2] == 102);\n-\n-  return test;\n }\n \n int main()"}, {"sha": "d0162c95d8dcbc2e0f754fc04f7b1103fa5e29e2", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fmoveable.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::valarray<int> a(1, 1), b(-1, 2);\n   b = std::move(a);\n   VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );"}, {"sha": "ea02210c2f0c4004ba386161d4cb476a15018915", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/operators.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Foperators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Foperators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Foperators.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,7 +23,6 @@\n \n void test01() // check unary operators\n {\n-  bool test __attribute__((unused)) = true;\n   std::valarray<int> u(1);\n   u[0]=1;\n \n@@ -35,7 +34,6 @@ void test01() // check unary operators\n \n void test02() // check binary operators\n {\n-  bool test __attribute__((unused)) = true;\n   std::valarray<int> u(1), v(1);\n   u[0]=1;\n   v[0]=3;"}, {"sha": "091ae44564fc2b8cba88e2cb82a0d2967a24a2f5", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fswap.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::valarray<int> a(1, 1), b(-1, 2);\n   b.swap(a);\n   VERIFY( b.size() == 1 && b[0] == 1"}, {"sha": "b7d81da154b0108b180f1b6f1fe30cfe1678ccb3", "filename": "libstdc++-v3/testsuite/experimental/deque/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fdeque%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fdeque%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fdeque%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_odd = [](const int i) { return i % 2 != 0; };\n \n   std::deque<int> d{ 10, 11, 12, 14, 15, 17, 18, 19 };\n@@ -36,8 +34,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::deque<int> d{ 10, 11, 12, 14, 15, 17, 18, 19 };\n   std::experimental::erase(d, 14);\n   std::deque<int> t{ 10, 11, 12, 15, 17, 18, 19 };"}, {"sha": "5c80fb7ab4d1ba98187c72391a5067f68eb6312d", "filename": "libstdc++-v3/testsuite/experimental/filesystem/iterators/directory_iterator.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Fdirectory_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Fdirectory_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Fdirectory_iterator.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n   std::error_code ec;\n \n   // Test non-existent path.\n@@ -74,8 +73,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   const auto p = __gnu_test::nonexistent_path();\n   create_directory(p, fs::current_path(), ec);\n@@ -98,8 +95,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   const auto p = __gnu_test::nonexistent_path();\n   create_directories(p / \"longer_than_small_string_buffer\", ec);\n@@ -117,17 +112,13 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   const fs::directory_iterator it;\n   VERIFY( it == fs::directory_iterator() );\n }\n \n void\n test05()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto p = __gnu_test::nonexistent_path();\n   create_directory(p);\n   create_directory_symlink(p, p / \"l\");"}, {"sha": "37b26066774c8e3a947fb37b83dbb36c173fa2ff", "filename": "libstdc++-v3/testsuite/experimental/filesystem/iterators/recursive_directory_iterator.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n   std::error_code ec;\n \n   // Test non-existent path.\n@@ -101,8 +100,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   const auto p = __gnu_test::nonexistent_path();\n   create_directories(p / \"d1/d2\", ec);\n@@ -128,8 +125,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   const auto p = __gnu_test::nonexistent_path();\n   create_directories(p / \"longer_than_small_string_buffer\", ec);\n@@ -147,8 +142,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   // libstdc++/71004\n   const fs::recursive_directory_iterator it;\n   VERIFY( it == fs::recursive_directory_iterator() );\n@@ -157,8 +150,6 @@ test04()\n void\n test05()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto p = __gnu_test::nonexistent_path();\n   create_directory(p);\n   create_directory_symlink(p, p / \"l\");"}, {"sha": "512447d46f43c377bc4edfd4c32e987a8d5cd4d6", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/absolute.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fabsolute.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fabsolute.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fabsolute.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,17 +30,13 @@ using std::experimental::filesystem::path;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   for (const path& p : __gnu_test::test_paths)\n     VERIFY( absolute(p).is_absolute() );\n }\n \n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   path p1(\"/\");\n   VERIFY( absolute(p1) == p1 );\n   VERIFY( absolute(p1, \"/bar\") == p1 );"}, {"sha": "b643048c9637648c02f8080e5576811e42615e5a", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/canonical.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcanonical.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcanonical.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcanonical.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   auto p = __gnu_test::nonexistent_path();\n   canonical( p, ec );\n@@ -64,8 +62,6 @@ void\n test02()\n {\n #if __cpp_exceptions\n-  bool test __attribute__((unused)) = false;\n-\n   fs::path p = \"rel\", base = __gnu_test::nonexistent_path();\n   fs::path e1, e2;\n   try {"}, {"sha": "0d112a21ff61664335e2ed4825599dec01435e16", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/copy.cc", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -32,8 +32,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto p = __gnu_test::nonexistent_path();\n   std::error_code ec;\n \n@@ -59,8 +57,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto from = __gnu_test::nonexistent_path();\n   auto to = __gnu_test::nonexistent_path();\n   std::error_code ec;\n@@ -98,8 +94,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto from = __gnu_test::nonexistent_path();\n   auto to = __gnu_test::nonexistent_path();\n \n@@ -124,8 +118,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto from = __gnu_test::nonexistent_path();\n   auto to = __gnu_test::nonexistent_path();\n   std::error_code ec;\n@@ -136,8 +128,6 @@ test04()\n void\n test05()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto to = __gnu_test::nonexistent_path();\n   std::error_code ec;\n "}, {"sha": "9cb09d3ebaffd6cacd5996a7630b12c7aa510a70", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/copy_file.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy_file.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy_file.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy_file.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,7 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n   using std::experimental::filesystem::copy_options;\n   std::error_code ec;\n "}, {"sha": "efc005cfd0978d7bbae2e06f93dac058482917d1", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directories.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n   std::error_code ec;\n \n   // Test empty path."}, {"sha": "e34c7704a52ec837f926b3e36cdcefc0c80beda0", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directory.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n   std::error_code ec;\n \n   // Test empty path."}, {"sha": "ad1a84ea5d072c7de272fa71f9210200eb3d3b99", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/current_path.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcurrent_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcurrent_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcurrent_path.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   fs::path dot(\".\");\n   fs::path cwd = fs::current_path();\n   std::error_code ec;\n@@ -42,8 +40,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   auto oldwd = fs::current_path();\n   auto tmpdir = fs::temp_directory_path();\n   current_path(tmpdir);"}, {"sha": "0eaa671d55207c94eee39b21867147a4fe9bcb5e", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/exists.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ using std::experimental::filesystem::path;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   VERIFY( exists(path{\"/\"}) );\n   VERIFY( exists(path{\"/.\"}) );\n   VERIFY( exists(path{\".\"}) );\n@@ -40,17 +38,13 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   path rel = __gnu_test::nonexistent_path();\n   VERIFY( !exists(rel) );\n }\n \n void\n test03()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   path abs = absolute(__gnu_test::nonexistent_path());\n   VERIFY( !exists(abs) );\n }"}, {"sha": "6ca8b65988306ad0bfd532895ba667951b0d6b62", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/file_size.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ffile_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ffile_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ffile_size.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   size_t size = fs::file_size(\".\", ec);\n   VERIFY( ec == std::errc::is_a_directory );\n@@ -48,8 +46,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   fs::path p = __gnu_test::nonexistent_path();\n \n   std::error_code ec;"}, {"sha": "dee55a53cdb1dfbdbc6bf267e97cd51f5f69e0a6", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/last_write_time.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Flast_write_time.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Flast_write_time.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Flast_write_time.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -35,7 +35,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using time_type = std::experimental::filesystem::file_time_type;\n \n   auto p = __gnu_test::nonexistent_path();"}, {"sha": "07e83664a6746f7b204a9f849220fed5ac49f0e3", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/permissions.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fpermissions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fpermissions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fpermissions.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,7 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using perms = std::experimental::filesystem::perms;\n \n   auto p = __gnu_test::nonexistent_path();"}, {"sha": "257cbceb77a38e22a7db399f9839f89f44291fc4", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/status.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fstatus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fstatus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fstatus.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   std::error_code ec;\n   fs::file_status st1 = fs::status(\".\", ec);\n   VERIFY( !ec );\n@@ -42,8 +40,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   fs::path p = __gnu_test::nonexistent_path();\n \n   std::error_code ec;"}, {"sha": "6e202c98dde1ba1e7554b196a39601c6470263d8", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/temp_directory_path.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -38,8 +38,6 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   clean_env();\n \n   if (!fs::exists(\"/tmp\"))\n@@ -56,8 +54,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = false;\n-\n   clean_env();\n \n   if (::setenv(\"TMPDIR\", __gnu_test::nonexistent_path().string().c_str(), 1))"}, {"sha": "2bf0edc39c54e3da2ade811097ef69bb6e465cfc", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/native/string.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fnative%2Fstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fnative%2Fstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fnative%2Fstring.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace std::experimental::filesystem;\n   const std::string s = \"abc\";\n   path p(s);\n@@ -43,8 +41,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace std::experimental::filesystem;\n   const char* s = \"abc\";\n   path p(s);"}, {"sha": "0079ed67d11c6d120008335e8be9de370679085a", "filename": "libstdc++-v3/testsuite/experimental/forward_list/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fforward_list%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fforward_list%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fforward_list%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_odd = [](const int i) { return i % 2 != 0; };\n \n   std::forward_list<int> fl{ 10, 11, 12, 14, 15, 17, 18, 19 };\n@@ -36,8 +34,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::forward_list<int> fl{ 10, 11, 12, 14, 15, 17, 18, 19 };\n   std::experimental::erase(fl, 14);\n   std::forward_list<int> t{ 10, 11, 12, 15, 17, 18, 19 };"}, {"sha": "9e5a3fe854fcfc294692d478fbf0cf0c0e59a456", "filename": "libstdc++-v3/testsuite/experimental/list/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Flist%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Flist%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Flist%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_odd = [](const int i) { return i % 2 != 0; };\n \n   std::list<int> l{ 10, 11, 12, 14, 15, 17, 18, 19 };\n@@ -36,8 +34,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::list<int> l{ 0, 11, 0, 0, 22, 33, 0, 0, 44, 0 };\n   std::experimental::erase(l, 0);\n   std::list<int> t{ 11, 22, 33, 44 };"}, {"sha": "4890b839081563de8d4aa43f10e25edb9925b76c", "filename": "libstdc++-v3/testsuite/experimental/map/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmap%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmap%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmap%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ auto is_odd_pair = [](const std::pair<const int, std::string>& p)\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::map<int, std::string> m{ { 10, \"A\" }, { 11, \"B\" },\n \t\t\t\t{ 12, \"C\" }, { 14, \"D\" },\n \t\t\t\t{ 15, \"E\" }, { 17, \"F\" },\n@@ -43,8 +41,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::multimap<int, std::string> mm{ { 20, \"S\" }, { 21, \"T\" },\n \t\t\t\t      { 22, \"U\" }, { 22, \"V\" },\n \t\t\t\t      { 23, \"W\" }, { 23, \"X\" },"}, {"sha": "4ad5a82eb505a6599c0be5cd7068984d05776afd", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/assign/assign.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fassign%2Fassign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fassign%2Fassign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fassign%2Fassign.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -60,7 +60,6 @@ void\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a;\n   std::experimental::shared_ptr<A[]> a1;\n@@ -98,8 +97,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> p(new A[5]);\n   std::experimental::shared_ptr<A[5]> p1;\n   std::experimental::shared_ptr<A[]> p2;"}, {"sha": "fafa6eb13649ac1a7ef9e8aac73539d33516b3c6", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/comparison/comparison.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcomparison%2Fcomparison.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcomparison%2Fcomparison.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcomparison%2Fcomparison.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -36,8 +36,6 @@ struct B : A\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // test empty shared_ptrs compare equivalent\n   std::experimental::shared_ptr<A[5]> p1;\n   std::experimental::shared_ptr<B[5]> p2;\n@@ -50,8 +48,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> A_default;\n \n   std::experimental::shared_ptr<A[5]> A_from_A(new A[5]);"}, {"sha": "3e96139ef9cd6c6fe23670d484dd0ac3402b18b8", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/alias_ctor.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Falias_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Falias_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Falias_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -43,7 +43,7 @@ struct B : A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n+  bool test = true;\n \n   std::experimental::shared_ptr<A[5]> a;\n   std::experimental::shared_ptr<bool> b1(a, &test);\n@@ -59,8 +59,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> a(new A[5]);\n   std::experimental::shared_ptr<int> i1(a, &a[0].i);\n   VERIFY( i1.use_count() == 2 );\n@@ -73,8 +71,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<B> b(new B);\n   std::experimental::shared_ptr<A> a1(b, b.get());\n   std::experimental::shared_ptr<A> a2(b, &b->a);"}, {"sha": "b0f0b1ecfb4b98e70a2cb7d10ee278791a835153", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/alloc_ctor.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Falloc_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Falloc_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Falloc_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -42,7 +42,6 @@ long D::delete_count = 0;\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   tracker_allocator_counter::reset();\n \n   std::experimental::shared_ptr<A[5]> p1(new A[5], deletefunc, tracker_allocator<A[5]>());"}, {"sha": "1f1c70b79425b58a16d2d72bd8ac4743a974052c", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/copy_ctor.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fcopy_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -63,7 +63,6 @@ int\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1;\n   std::experimental::shared_ptr<A[5]> a2(a1);\n@@ -80,7 +79,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1(new A[5]);\n   std::experimental::shared_ptr<A[5]> a2(a1);\n@@ -97,7 +95,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1(new A[5], &deleter);\n   std::experimental::shared_ptr<A[5]> a2(a1);\n@@ -114,7 +111,6 @@ int\n test04()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1(std::experimental::shared_ptr<A[5]>\n                                           (new A[5]));\n@@ -131,7 +127,6 @@ int\n test05()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1(new A[5]);\n   std::experimental::shared_ptr<A[]> a2(a1);\n@@ -150,7 +145,6 @@ int\n test06()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<B> a1(new B);\n   std::experimental::shared_ptr<A> a2(a1);"}, {"sha": "e675c57cdfe105499f715851c40586da94c8f8a0", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/default_ctor.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fdefault_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fdefault_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fdefault_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> a;\n   VERIFY( a.get() == 0 );\n "}, {"sha": "f1040577a1d1637b05a05c95b40edc4edd906cd9", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/move_ctor.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fmove_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fmove_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fmove_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -55,7 +55,6 @@ struct reset_count_struct\n int test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1;\n   std::experimental::shared_ptr<A[5]> a2(std::move(a1));\n@@ -71,7 +70,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a1(new A[5]);\n   std::experimental::shared_ptr<A[5]> a2(std::move(a1));\n@@ -86,7 +84,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> b(new A[5], D());\n   std::experimental::shared_ptr<A[5]> b1(std::move(b));\n@@ -108,7 +105,6 @@ void\n test04()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[5]> a(std::move(std::experimental\n                                         ::shared_ptr<A[5]>\n@@ -123,7 +119,6 @@ void\n test05()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::experimental::shared_ptr<A[]> a(std::move(std::experimental\n                                         ::shared_ptr<A[5]>"}, {"sha": "5a14f7cbb8b57f87ebcd91a5e18f68b1d0ff7bf5", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/pointer_ctor.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fpointer_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fpointer_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fpointer_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -31,8 +31,6 @@ struct B : A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = 0;\n   std::experimental::shared_ptr<A> p(a);\n   VERIFY( p.get() == 0 );\n@@ -43,8 +41,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A[5];\n   std::experimental::shared_ptr<A[5]> p(a);\n   VERIFY( p.get() == a );\n@@ -55,8 +51,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   B * const b = new B[5];\n   std::experimental::shared_ptr<A[5]> p(b);\n   VERIFY( p.get() == b );"}, {"sha": "5b4938b33ef8efc26e24415a647e8eea2035bf2a", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Funique_ptr_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Funique_ptr_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Funique_ptr_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -36,8 +36,6 @@ struct A : std::experimental::enable_shared_from_this<A>\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A[]> up(new A[5]);\n   std::experimental::shared_ptr<A> sp(std::move(up));\n   VERIFY( up.get() == 0 );"}, {"sha": "71cf583af32b326fe8feb002e117793057c6d923", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fweak_ptr_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fweak_ptr_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fweak_ptr_ctor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * a = new A[5];\n   std::experimental::shared_ptr<A[5]> a1(a);\n   std::experimental::weak_ptr<A[5]> wa(a1);"}, {"sha": "600c0c6c2c09a97a1bbdd12b226e7b8030147402", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/dest/dest.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fdest%2Fdest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fdest%2Fdest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fdest%2Fdest.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -67,7 +67,6 @@ int\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   {\n     std::experimental::shared_ptr<A[5]> a;\n@@ -85,7 +84,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   {\n     std::experimental::shared_ptr<B[5]> a;\n@@ -104,7 +102,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   {\n     std::experimental::shared_ptr<B[]> a;"}, {"sha": "e0be63bea4d764de6775496e0711ca58bcbd063c", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/modifiers/reset.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Freset.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Freset.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Freset.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -37,8 +37,6 @@ long D::delete_count = 0;\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A[5];\n   std::experimental::shared_ptr<A[5]> p1(a);\n   std::experimental::shared_ptr<A[5]> p2(p1);\n@@ -52,8 +50,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A[5];\n   B * const b = new B[5];\n   std::experimental::shared_ptr<A[5]> p1(a);\n@@ -68,8 +64,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   {\n     std::experimental::shared_ptr<A[5]> p1;\n     p1.reset(new B[5], D());"}, {"sha": "8d74422240d7c9562d8066e3460fccea97e5ad62", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/modifiers/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fmodifiers%2Fswap.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a1 = new A[5];\n   A * const a2 = new A[5];\n   std::experimental::shared_ptr<A[5]> p1(a1);"}, {"sha": "75bb4903df37d1e040bfdab44f0a0ddccd0ed957", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/observers/bool_conv.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fbool_conv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fbool_conv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fbool_conv.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@ struct A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::experimental::shared_ptr<A[5]> p1;\n   VERIFY( static_cast<bool>(p1) == false );\n   const std::experimental::shared_ptr<A[5]> p2(p1);\n@@ -41,8 +39,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> p1(new A[5]);\n   VERIFY( static_cast<bool>(p1) );\n   std::experimental::shared_ptr<A[5]> p2(p1);\n@@ -55,8 +51,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> p1(new A[5]);\n   std::experimental::shared_ptr<A[5]> p2(p1);\n   p2.reset(new A[5]);"}, {"sha": "94a65889ae2cdb62bfde2a67d2294d5ed3c8501c", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/observers/operators.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Foperators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Foperators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Foperators.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -34,8 +34,6 @@ struct A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A[5];\n   const std::experimental::shared_ptr<A[5]> p(a);\n   VERIFY( p.get() == a );\n@@ -64,8 +62,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A[5];\n   const std::experimental::shared_ptr<A[5]> p(a);\n   VERIFY( p.get() == a );\n@@ -75,8 +71,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A[5];\n   const std::experimental::shared_ptr<A[5]> p(a);\n   VERIFY( &p[0].i == &a[0].i );"}, {"sha": "0303b1f73e755cf7d1e3d04149ac2107f9477c5d", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/observers/owner_before.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fowner_before.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fowner_before.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fowner_before.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -36,8 +36,6 @@ struct B : A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // test empty shared_ptrs compare equivalent\n   std::experimental::shared_ptr<A[5]> p1;\n   std::experimental::shared_ptr<B[5]> p2;\n@@ -47,8 +45,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> a0;\n \n   std::experimental::shared_ptr<A[5]> a1(new A[5]);\n@@ -69,8 +65,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> p1(new A[5]);\n   std::experimental::shared_ptr<int> p2(p1, &p1[0].i);\n   VERIFY( !p1.owner_before(p2) && !p2.owner_before(p1) );"}, {"sha": "b591a7e319c37395f9c1830e4a9899113898db6e", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/observers/use_count.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fuse_count.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fuse_count.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fobservers%2Fuse_count.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -31,8 +31,6 @@ struct B : A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::experimental::shared_ptr<A[5]> p1;\n   VERIFY( p1.use_count() == 0 );\n   const std::experimental::shared_ptr<A[5]> p2(p1);\n@@ -42,8 +40,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> p1(new A[5]);\n   std::experimental::shared_ptr<A[5]> p2(p1);\n   p1.reset();\n@@ -54,8 +50,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::experimental::shared_ptr<A[5]> p1(new A[5]);\n   std::experimental::shared_ptr<A[5]> p2(p1);\n   p2.reset(new B[5]);"}, {"sha": "16007b900f99893966f5b22d3dde6a5b41495b83", "filename": "libstdc++-v3/testsuite/experimental/memory_resource/1.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -86,8 +86,6 @@ void clear()\n void\n test01()\n {\n-  bool test __attribute((unused)) = false;\n-\n   memory_resource* r = new_delete_resource();\n   VERIFY(get_default_resource() == r);\n   void *p = get_default_resource()->allocate(5);\n@@ -109,8 +107,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute((unused)) = false;\n-\n   clear();\n   {\n     CountedResource cr;\n@@ -126,8 +122,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute((unused)) = false;\n-\n   clear();\n   CountedResource cr;\n   polymorphic_allocator<A> pa(&cr);\n@@ -144,8 +138,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute((unused)) = false;\n-\n   polymorphic_allocator<A> pa1(get_default_resource());\n   polymorphic_allocator<A> pa2(get_default_resource());\n   VERIFY(pa1 == pa2);"}, {"sha": "7d9b55f37e15e88c82eaae5f94c22631ec0293b0", "filename": "libstdc++-v3/testsuite/experimental/memory_resource/null_memory_resource.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2Fnull_memory_resource.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2Fnull_memory_resource.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2Fnull_memory_resource.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ using std::experimental::pmr::new_delete_resource;\n void\n test06()\n {\n-  bool test __attribute((unused)) = false;\n-\n   memory_resource* r = null_memory_resource();\n   bool caught = false;\n "}, {"sha": "980dd5b88fd7dff4cf4d81b00e326ec48f632065", "filename": "libstdc++-v3/testsuite/experimental/memory_resource/resource_adaptor.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2Fresource_adaptor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2Fresource_adaptor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory_resource%2Fresource_adaptor.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -43,7 +43,6 @@ template<typename T>\n void\n test05()\n {\n-  bool test __attribute((unused)) = false;\n   using std::max_align_t;\n   using std::uintptr_t;\n   void* p = nullptr;"}, {"sha": "b534af4c9472559e555d6ff1befb11a31b09e259", "filename": "libstdc++-v3/testsuite/experimental/set/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fset%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fset%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fset%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,8 +25,6 @@ auto is_odd = [](const int i) { return i % 2 != 0; };\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::set<int> s{ 10, 11, 12, 14, 15, 17, 18, 19 };\n   std::experimental::erase_if(s, is_odd);\n   std::set<int> t{ 10, 12, 14, 18 };\n@@ -36,8 +34,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::multiset<int> ms{ 20, 21, 22, 22, 23, 23, 24, 25 };\n   std::experimental::erase_if(ms, is_odd);\n   std::multiset<int> t{ 20, 22, 22, 24 };"}, {"sha": "1d0c548e4c253e3218a541f91554e4f40682912a", "filename": "libstdc++-v3/testsuite/experimental/string/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_vowel = [](const char c)\n   {\n     return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';\n@@ -38,8 +36,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::string str = \"cute fluffy kittens\";\n   std::experimental::erase(str, 'f');\n   VERIFY( str == \"cute luy kittens\" );"}, {"sha": "f6cb3eae67ed021896658698390537076788298c", "filename": "libstdc++-v3/testsuite/experimental/string_view/capacity/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcapacity%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -126,8 +126,6 @@ namespace std\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::basic_string_view<A<B>> str02;\n   typedef std::experimental::basic_string_view< A<B> >::size_type size_type_o;\n   size_type_o sz03;"}, {"sha": "a90d78a2641dbf2fb6718863fadd7c84d5cbbff7", "filename": "libstdc++-v3/testsuite/experimental/string_view/cons/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n   typedef std::experimental::string_view::size_type csize_type;\n \n   // basic_string_view()"}, {"sha": "a40001ef7cd43f5128cc21c7cc1a8618ede0dc33", "filename": "libstdc++-v3/testsuite/experimental/string_view/cons/char/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,7 +27,6 @@\n void\n test03()\n {\n-  bool test [[gnu::unused]] = true;\n   const char* with_nulls = \"This contains \\0 a zero byte.\";\n \n   // These are tests to see how basic_string_view handles data with NUL"}, {"sha": "d2f3aafd6fca1e5d78845062ee291dc46a031153", "filename": "libstdc++-v3/testsuite/experimental/string_view/cons/char/3.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fchar%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -21,13 +21,10 @@\n \n #include <experimental/string_view>\n #include <vector>\n-#include <testsuite_hooks.h>\n \n void\n test05()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   char const * s = 0;\n   std::experimental::string_view zero_length_built_with_NULL(s, 0);\n }"}, {"sha": "515bde356617127e034b76fe2e30a30da3232704", "filename": "libstdc++-v3/testsuite/experimental/string_view/cons/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n   typedef std::experimental::wstring_view::size_type csize_type;\n \n   // basic_string_view()"}, {"sha": "dfce0a482aeec091bbf9552a42d6f8c375abf8a9", "filename": "libstdc++-v3/testsuite/experimental/string_view/cons/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n void\n test03()\n {\n-  bool test [[gnu::unused]] = true;\n   const wchar_t* with_nulls = L\"This contains \\0 a zero byte.\";\n \n   // These are tests to see how basic_string_view handles data with NUL"}, {"sha": "d8c24f692a12f25cca56a97726b64277c912f32c", "filename": "libstdc++-v3/testsuite/experimental/string_view/cons/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcons%2Fwchar_t%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -20,13 +20,10 @@\n // basic_string_view constructors.\n \n #include <experimental/string_view>\n-#include <testsuite_hooks.h>\n \n void\n test05()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   wchar_t const * s = 0;\n   std::experimental::wstring_view zero_length_built_with_NULL(s, 0);\n }"}, {"sha": "1e8c99bfd937cefb5a6047a12c6b0d64a4c58f9d", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,11 +23,9 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   typedef std::experimental::string_view::const_reference cref;\n   typedef std::experimental::string_view::reference ref;\n@@ -62,8 +60,6 @@ test01()\n   {\n     VERIFY( false );\n   }\n-\n-  return test;\n }\n \n int"}, {"sha": "977e41e79ae197a78a8a01dba08a4b989ba5b61c", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/char/empty.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2Fempty.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,8 +24,6 @@\n int\n main()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   {\n     std::experimental::string_view empty;\n     VERIFY( empty.empty() );"}, {"sha": "352ceefd6d00aa675a6a5000428f2991e35e142c", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/char/front_back.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2Ffront_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2Ffront_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fchar%2Ffront_back.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,8 +24,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::string_view str(\"ramifications\");\n   const std::experimental::string_view cstr(\"melodien\");\n "}, {"sha": "c6b7f68744a7e9dead07f37fd0b295ba0de409e2", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,11 +23,9 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   typedef std::experimental::wstring_view::const_reference cref;\n   typedef std::experimental::wstring_view::reference ref;\n@@ -62,8 +60,6 @@ test01()\n   {\n     VERIFY( false );\n   }\n-\n-  return test;\n }\n \n int"}, {"sha": "d747cee2b02e4778e0c3aeccc01307c856538d87", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/wchar_t/empty.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2Fempty.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,8 +24,6 @@\n int\n main()\n {\n-  bool test [[gnu::unused]] = true;\n-  \n   {\n     std::experimental::wstring_view empty;\n     VERIFY( empty.empty() );"}, {"sha": "49a81e21c015e8d0f012024cee37614bbbf23fd4", "filename": "libstdc++-v3/testsuite/experimental/string_view/element_access/wchar_t/front_back.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2Ffront_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2Ffront_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Felement_access%2Fwchar_t%2Ffront_back.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,8 +24,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::wstring_view str(L\"ramifications\");\n   const std::experimental::wstring_view cstr(L\"melodien\");\n "}, {"sha": "285b26479632e654ddcb9a49ba6c4781876f2f13", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,11 +30,9 @@\n #include <iostream>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   typedef std::experimental::string_view::const_reference cref;\n   typedef std::experimental::string_view::reference ref;\n@@ -56,8 +54,6 @@ test01()\n   \n   std::experimental::string_view hello_world;\n   std::cout << hello_world;\n-\n-  return test;\n }\n \n int"}, {"sha": "8cb97f628095477ac93a75a7e1189383aeb4e96f", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/char/2.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -36,8 +36,6 @@\n void\n test05(std::size_t size)\n {\n-  bool test [[gnu::unused]] = true;\n-\n   const char filename[] = \"inserters_extractors-2.txt\";\n   const char fillc = 'f';\n   std::ofstream ofs(filename);\n@@ -51,11 +49,11 @@ test05(std::size_t size)\n   // stress test\n   ofs << str << std::endl;\n   if (!ofs.good()) \n-    test = false;\n+    VERIFY( false );\n \n   ofs << str << std::endl;\n   if (!ofs.good()) \n-    test = false;\n+    VERIFY( false );\n \n   VERIFY( str.size() == size );\n   VERIFY( ofs.good() );"}, {"sha": "f9011cd1d8173774694c426d8a6ba344a26d1ad2", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/char/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fchar%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -32,8 +32,6 @@\n void\n test09()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::string_view foo{\"peace\\0\\0\\0& love\"};\n \n   std::ostringstream oss1;"}, {"sha": "d16d003115e33ec62f48d9349c8a017e45cbf8f9", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/pod/10081-out.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fpod%2F10081-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fpod%2F10081-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fpod%2F10081-out.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -37,8 +37,6 @@ test01()\n   typedef basic_stringbuf<pod_ushort> \tstringbuf_type;\n   typedef basic_ostream<pod_ushort> \tostream_type;\n \n-  bool test [[gnu::unused]] = true;\n-\n   string_type str;\n   stringbuf_type strbuf01;\n   ostream_type stream(&strbuf01);"}, {"sha": "12ee3f915996be72f5f60d5d922825ae3c50f685", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,11 +30,9 @@\n #include <iostream>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   typedef std::experimental::wstring_view::const_reference cref;\n   typedef std::experimental::wstring_view::reference ref;\n@@ -61,8 +59,6 @@ test01()\n   \n   std::experimental::wstring_view hello_world;\n   std::wcout << hello_world;\n-\n-  return test;\n }\n \n int"}, {"sha": "20ed9bcd56dcc5a05f7d5f3b3f6860274f140794", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/wchar_t/2.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -35,8 +35,6 @@\n void\n test05(std::size_t size)\n {\n-  bool test [[gnu::unused]] = true;\n-\n   const char filename[] = \"inserters_extractors-2.txt\";\n   const wchar_t fillc = L'f';\n   std::wofstream ofs(filename);\n@@ -49,12 +47,12 @@ test05(std::size_t size)\n \n   // stress test\n   ofs << str << std::endl;\n-  if (!ofs.good()) \n-    test = false;\n+  if (!ofs.good())\n+    VERIFY( false );\n \n   ofs << str << std::endl;\n-  if (!ofs.good()) \n-    test = false;\n+  if (!ofs.good())\n+    VERIFY( false );\n \n   VERIFY( str.size() == size );\n   VERIFY( ofs.good() );"}, {"sha": "af9fc1c4c9bd9e7fbfd66b64d73b4f6a6285616d", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fwchar_t%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -31,8 +31,6 @@\n void\n test09()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::wstring_view foo{L\"peace\\0\\0\\0& love\"};\n   \n   std::wostringstream oss1;"}, {"sha": "a0b5f3989df93acd3dd4107ff449a44f376b3757", "filename": "libstdc++-v3/testsuite/experimental/string_view/modifiers/remove_prefix/char/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_prefix%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_prefix%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_prefix%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   using namespace std::experimental;\n \n   string_view str0{\"olympus mons\"};"}, {"sha": "9ebff02155a7de18bd435651f174879034a4e5d5", "filename": "libstdc++-v3/testsuite/experimental/string_view/modifiers/remove_prefix/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_prefix%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_prefix%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_prefix%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   using namespace std::experimental;\n \n   wstring_view str0{L\"olympus mons\"};"}, {"sha": "ab0b396b4e8bb66945bda77b518135c8c20117dc", "filename": "libstdc++-v3/testsuite/experimental/string_view/modifiers/remove_suffix/char/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_suffix%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_suffix%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_suffix%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   using namespace std::experimental;\n \n   string_view str0{\"olympus mons\"};"}, {"sha": "48194586ac97bfb477659c184f9ae88c80de438f", "filename": "libstdc++-v3/testsuite/experimental/string_view/modifiers/remove_suffix/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_suffix%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_suffix%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fmodifiers%2Fremove_suffix%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   using namespace std::experimental;\n \n   wstring_view str0{L\"olympus mons\"};"}, {"sha": "4b4350fecce6fc27972b8a62d3e224b00b86c94d", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/compare/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -41,7 +41,6 @@ test_value(int result, want_value expected);\n int\n test_value(int result, want_value expected)\n {\n-  bool test [[gnu::unused]] = true;\n   bool pass = false;\n \n   switch (expected) {"}, {"sha": "3b5d02ff25c9661ade4b7555e5406b98e7c03d08", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/compare/char/13650.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fchar%2F13650.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fchar%2F13650.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fchar%2F13650.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,7 +27,6 @@ void\n test01()\n {\n   using namespace std::experimental;\n-  bool test [[gnu::unused]] = true;\n \n   const char lit_01[]{ 'w', 'e', '\\0', 'r', 'd' };\n   const char lit_02[]{ 'w', 'e', 'i', '\\0', 'd' };"}, {"sha": "772fb8969c9275bb9568babf7f149c7f223304bd", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/compare/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -40,7 +40,6 @@ test_value(int result, want_value expected);\n int\n test_value(int result, want_value expected)\n {\n-  bool test [[gnu::unused]] = true;\n   bool pass = false;\n \n   switch (expected) {"}, {"sha": "696dd21cee1d345bad63a1f97388f8bf7c70f2b8", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/compare/wchar_t/13650.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fwchar_t%2F13650.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fwchar_t%2F13650.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcompare%2Fwchar_t%2F13650.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,7 +27,6 @@ void\n test01()\n {\n   using namespace std::experimental;\n-  bool test [[gnu::unused]] = true;\n \n   const wchar_t lit_01[] = { L'w', L'e', L'\\0', L'r', L'd' };\n   const wchar_t lit_02[] = { L'w', L'e', L'i', L'\\0', L'd' };"}, {"sha": "9f33bd07c20b116114acce5881c06dcd4d206115", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/copy/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcopy%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcopy%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcopy%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n \n   const char str_lit01[] = \"123456789A\";\n@@ -36,8 +34,6 @@ test01()\n   csize_type len = str01.copy(buffer, sizeof(buffer), 8);\n   VERIFY( 2 == len );\n   VERIFY( '9' == buffer[0] );\n-\n-  return test;\n }\n \n int"}, {"sha": "e14c375b7079b2be1695b39ae427e713991f4929", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/copy/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcopy%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcopy%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fcopy%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   csize_type csz01;\n \n@@ -37,8 +35,6 @@ test01()\n   csize_type len = str01.copy(buffer, sizeof(buffer), 8);\n   VERIFY( 2 == len );\n   VERIFY( L'9' == buffer[0] );\n-\n-  return test;\n }\n \n int"}, {"sha": "439cad62932c9057ece0ac541597bc19213b3ada", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/data/char/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fdata%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fdata%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fdata%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,8 +25,6 @@\n int\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::string_view empty;\n \n   VERIFY( empty.size() == 0 );"}, {"sha": "29a39aa10839a4c0eb36622c9e3e35f2ee051f58", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/data/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fdata%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fdata%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fdata%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,8 +25,6 @@\n int\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::wstring_view empty;\n \n   VERIFY( empty.size() == 0 );"}, {"sha": "f28534eee840f4358b2244a4676a3a32bedc617d", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   typedef std::experimental::string_view::const_reference cref;\n   typedef std::experimental::string_view::reference ref;\n@@ -85,8 +83,6 @@ test01()\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.find('/');\n   VERIFY( csz01 == npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "facb3caec863f2333af0e79cbf9733e2af39a095", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/char/2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   csize_type npos = std::experimental::string_view::npos;\n   csize_type csz01, csz02;\n@@ -84,8 +82,6 @@ test02()\n   csz01 = str01.find_first_of('z');\n   csz02 = str01.size() - 1;\n   VERIFY( csz01 == csz02 );\n-\n-  return test;\n }\n \n int"}, {"sha": "54633ebac2a8ab2bc9f452b636b4d3a4c16acbbd", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/char/3.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test03()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   csize_type npos = std::experimental::string_view::npos;\n   csize_type csz01;\n@@ -84,8 +82,6 @@ test03()\n   VERIFY( csz01 == 0 );\n   csz01 = str04.find_first_not_of('S');\n   VERIFY( csz01 == npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "330be3ebb2e85fc4135907aad34953febeb3ad3a", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/char/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fchar%2F4.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   csize_type npos = std::experimental::string_view::npos;\n "}, {"sha": "fb8151e2b1702b9ac2bb0a2c346e05fd631f2d01", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   typedef std::experimental::wstring_view::const_reference cref;\n   typedef std::experimental::wstring_view::reference ref;\n@@ -85,8 +83,6 @@ test01()\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.find(L'/');\n   VERIFY( csz01 == npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "a25eee2e19b8251ae74b3ff4d7e30ecc1a60ddf3", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   csize_type npos = std::experimental::wstring_view::npos;\n   csize_type csz01, csz02;\n@@ -84,8 +82,6 @@ test02()\n   csz01 = str01.find_first_of(L'z');\n   csz02 = str01.size() - 1;\n   VERIFY( csz01 == csz02 );\n-\n-  return test;\n }\n \n int"}, {"sha": "323bc69d6907d8025c79bf751beabbfd3a5c56f1", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/wchar_t/3.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n #include <experimental/string_view>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test03()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   csize_type npos = std::experimental::wstring_view::npos;\n   csize_type csz01;\n@@ -84,8 +82,6 @@ test03()\n   VERIFY( csz01 == 0 );\n   csz01 = str04.find_first_not_of(L'S');\n   VERIFY( csz01 == npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "68a0c44d5f5e018556c69991ce0ee42352f3bbd1", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/find/wchar_t/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Ffind%2Fwchar_t%2F4.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   csize_type npos = std::experimental::wstring_view::npos;\n "}, {"sha": "e81cff0d4807b7e00ddf71e788efe1f96b6d66b3", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/rfind/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n \n // basic_string_view rfind\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   typedef std::experimental::string_view::const_reference cref;\n   typedef std::experimental::string_view::reference ref;\n@@ -85,8 +83,6 @@ test01()\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.rfind('/');\n   VERIFY( csz01 == npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "01fc6278ad63288ce66fc198cc4ad2df48996b6d", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/rfind/char/2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n \n // basic_string_view::find_last_of\n \n-bool\n+void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::string_view z(\"ab\");\n   std::experimental::string_view::size_type pos;\n   pos = z.find_last_of(\"ab\");\n@@ -43,8 +41,6 @@ test02()\n   VERIFY( pos == 1 );\n   pos = z.find_last_of('X');\n   VERIFY( pos == std::experimental::string_view::npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "9fbb32676a8c650ddff33469e0af7b22138cf5ac", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/rfind/char/3.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fchar%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n \n // basic_string_view::find_last_not_of\n \n-bool\n+void\n test03()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   std::experimental::string_view::size_type pos;\n   csize_type npos = std::experimental::string_view::npos;\n@@ -58,9 +56,8 @@ test03()\n   VERIFY( pos == 0 );\n   pos = z.find_last_not_of(\"Xa\");\n   VERIFY( pos == 1 );\n-\n-  return test;\n }\n+\n int\n main()\n {"}, {"sha": "f1686f40e7b12113e1b03aba1673e90554614d84", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/rfind/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n \n // basic_string_view rfind\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   typedef std::experimental::wstring_view::const_reference cref;\n   typedef std::experimental::wstring_view::reference ref;\n@@ -85,8 +83,6 @@ test01()\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.rfind(L'/');\n   VERIFY( csz01 == npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "8b9f8fd96a278831cae16a7ffb0d088c1bce52b9", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/rfind/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n \n // basic_string_view::find_last_of\n \n-bool\n+void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::wstring_view::size_type pos;\n   std::experimental::wstring_view z(L\"ab\");\n   pos = z.find_last_of(L\"ab\");\n@@ -43,8 +41,6 @@ test02()\n   VERIFY( pos == 1 );\n   pos = z.find_last_of(L'X');\n   VERIFY( pos == std::experimental::wstring_view::npos );\n-\n-  return test;\n }\n \n int"}, {"sha": "1a2ccd555b2e5773659c50439515eae6eb25e801", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/rfind/wchar_t/3.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Frfind%2Fwchar_t%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -22,11 +22,9 @@\n \n // basic_string_view::find_last_not_of\n \n-bool\n+void\n test03()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   std::experimental::wstring_view::size_type pos;\n   csize_type npos = std::experimental::wstring_view::npos;\n@@ -58,9 +56,8 @@ test03()\n   VERIFY( pos == 0 );\n   pos = z.find_last_not_of(L\"Xa\");\n   VERIFY( pos == 1 );\n-\n-  return test;\n }\n+\n int\n main()\n {"}, {"sha": "6763b987e79119c159e5ee7097fefd84b2b0c3b5", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/substr/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fchar%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,11 +23,9 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::string_view::size_type csize_type;\n   typedef std::experimental::string_view::const_reference cref;\n   typedef std::experimental::string_view::reference ref;\n@@ -70,8 +68,6 @@ test01()\n   {\n     VERIFY( false );\n   }\n-\n-  return test;\n }\n \n int"}, {"sha": "8de2946dde4cdeb7a7bd8ea9f3667bb4534a7c38", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/substr/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fwchar_t%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,11 +23,9 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   typedef std::experimental::wstring_view::size_type csize_type;\n   typedef std::experimental::wstring_view::const_reference cref;\n   typedef std::experimental::wstring_view::reference ref;\n@@ -70,8 +68,6 @@ test01()\n   {\n     VERIFY( false );\n   }\n-\n-  return test;\n }\n \n int"}, {"sha": "6662de50a8e2d0c8799162e999918e9ea0f883c0", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/to_string/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fto_string%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fto_string%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fto_string%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -24,11 +24,9 @@\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n \n-bool\n+void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   const char str_lit[] = \"123456789A\";\n   const std::experimental::string_view sv(str_lit);\n   char buffer[4] = { 0 };\n@@ -42,8 +40,6 @@ test01()\n   VERIFY( std::equal(s1.begin(), s1.end(), s2.begin(), s2.end()) );\n   auto s3 = static_cast<std::string>(sv);\n   VERIFY( s3 == s1 );\n-\n-  return test;\n }\n \n int"}, {"sha": "819f565c8b53fe72d74db2e84677b0a7c59bfab2", "filename": "libstdc++-v3/testsuite/experimental/string_view/operators/char/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperators%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperators%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperators%2Fchar%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -115,8 +115,6 @@ template<class charT, class traits, class Allocator>\n int\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::string_view \tstr_0(\"costa rica\");\n   std::experimental::string_view \tstr_1(\"costa marbella\");\n   std::experimental::string_view \tstr_2(\"cost\");"}, {"sha": "cb8f57e8fbf19bd1cb48c38bcbb4f0d5424959b0", "filename": "libstdc++-v3/testsuite/experimental/string_view/operators/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperators%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperators%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperators%2Fwchar_t%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -115,8 +115,6 @@ template<class charT, class traits, class Allocator>\n int\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::experimental::wstring_view \tstr_0(L\"costa rica\");\n   std::experimental::wstring_view \tstr_1(L\"costa marbella\");\n   std::experimental::wstring_view \tstr_2(L\"cost\");"}, {"sha": "de603dbad1b5861e3eb412682781ed7f3d8f443a", "filename": "libstdc++-v3/testsuite/experimental/unordered_map/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_map%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_map%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_map%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,8 +28,6 @@ auto is_odd_pair = [](const std::pair<const int, std::string>& p)\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::unordered_map<int, std::string> um{ { 10, \"A\" }, { 11, \"B\" },\n \t\t\t\t\t   { 12, \"C\" }, { 14, \"D\" },\n \t\t\t\t\t   { 15, \"E\" }, { 17, \"F\" },\n@@ -43,8 +41,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::unordered_multimap<int, std::string> umm{ { 20, \"S\" }, { 21, \"T\" },\n \t\t\t\t\t\t { 22, \"U\" }, { 22, \"V\" },\n \t\t\t\t\t\t { 23, \"W\" }, { 23, \"X\" },"}, {"sha": "8c35d0776156eb2d011ac89d6fa6ff5da647516e", "filename": "libstdc++-v3/testsuite/experimental/unordered_set/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_set%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_set%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_set%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_odd = [](const int i) { return i % 2 != 0; };\n \n   std::unordered_set<int> us{ 10, 11, 12, 14, 15, 17, 18, 19 };\n@@ -36,8 +34,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_odd = [](const int i) { return i % 2 != 0; };\n \n   std::unordered_multiset<int> ums{ 20, 21, 22, 22, 23, 23, 24, 25 };"}, {"sha": "762527ef3016cf60b9a8a36609848424e1581b3f", "filename": "libstdc++-v3/testsuite/experimental/vector/erasure.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fvector%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fvector%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fvector%2Ferasure.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -23,8 +23,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   auto is_odd = [](const int i) { return i % 2 != 0; };\n \n   std::vector<int> v{ 10, 11, 12, 14, 15, 17, 18, 19 };\n@@ -36,8 +34,6 @@ test01()\n void\n test02()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::vector<int> v{ 0, 11, 0, 0, 22, 33, 0, 0, 44, 0 };\n   std::experimental::erase(v, 0);\n   std::vector<int> t{ 11, 22, 33, 44 };"}, {"sha": "232ef1d0dcbcdcf87d9ad05edc213aca359fa7fe", "filename": "libstdc++-v3/testsuite/ext/array_allocator/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@ array_type extern_array;\n \n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   using __gnu_cxx::__versa_string;\n   typedef __gnu_cxx::array_allocator<char_type, array_type> allocator_type;\n   typedef __versa_string<char_type, traits_type, allocator_type> string_type;"}, {"sha": "743485f232ee83ef2392bb0f6f91456ff1126cae", "filename": "libstdc++-v3/testsuite/ext/array_allocator/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -30,8 +30,6 @@ array_type extern_array;\n \n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   using __gnu_cxx::__versa_string;\n   typedef __gnu_cxx::array_allocator<char_type, array_type> allocator_type;\n   typedef __versa_string<char_type, traits_type, allocator_type> string_type;"}, {"sha": "4904d36b1d0f4ecfccb6870c7026666a0810c2b5", "filename": "libstdc++-v3/testsuite/ext/array_allocator/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@ array_type extern_array;\n \n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   using __gnu_cxx::__versa_string;\n   typedef __gnu_cxx::array_allocator<char_type, array_type> allocator_type;\n   typedef __versa_string<char_type, traits_type, allocator_type> string_type;"}, {"sha": "d92501419ad89ce7d40d02c9df87a0f0e159c859", "filename": "libstdc++-v3/testsuite/ext/array_allocator/variadic_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2Fvariadic_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2Fvariadic_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2Fvariadic_construct.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, char> pair_type;\n   typedef std::tr1::array<pair_type, 3> array_type;\n   array_type store;"}, {"sha": "5fed671ff2b78c4b3b7b3a91173d6c5882c76157", "filename": "libstdc++-v3/testsuite/ext/bitmap_allocator/variadic_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fvariadic_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fvariadic_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fvariadic_construct.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, char> pair_type;\n   __gnu_cxx::bitmap_allocator<pair_type> alloc1;\n "}, {"sha": "48d243c48a1c36bcf0ac31becf2db35b59dae688", "filename": "libstdc++-v3/testsuite/ext/codecvt/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -37,7 +37,6 @@ void test01()\n   typedef __gnu_cxx::encoding_state    \t\t\tstate_type;\n   typedef codecvt<int_type, ext_type, state_type>\tunicode_codecvt;\n \n-  bool test __attribute__((unused)) = true;\n   const ext_type* \te_lit = \"black pearl jasmine tea\";\n   int \t\t\tsize = strlen(e_lit);\n "}, {"sha": "aef05c45bf4b00d6b42e1d3501b1615757e368a9", "filename": "libstdc++-v3/testsuite/ext/codecvt/char-1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -62,7 +62,6 @@ void test01()\n   typedef char_traits<int_type>\t\t\tint_traits;\n   typedef char_traits<ext_type>\t\t\text_traits;\n \n-  bool test __attribute__((unused)) = true;\n   const ext_type* \te_lit = \"black pearl jasmine tea\";\n   int \t\t\tsize = strlen(e_lit);\n "}, {"sha": "2b035f4c3f4f211f4e48f66e4162cc780fcd975d", "filename": "libstdc++-v3/testsuite/ext/codecvt/char-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fchar-2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -62,7 +62,6 @@ void test02()\n   typedef char_traits<int_type>\t\t\tint_traits;\n   typedef char_traits<ext_type>\t\t\text_traits;\n \n-  bool test __attribute__((unused)) = true;\n   const ext_type* \te_lit = \"black pearl jasmine tea\";\n   int \t\t\tsize = strlen(e_lit);\n "}, {"sha": "62fde65fe80709ebd6f703a72a8994da39760bea", "filename": "libstdc++-v3/testsuite/ext/codecvt/wchar_t.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fwchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fwchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fcodecvt%2Fwchar_t.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -39,7 +39,6 @@ void test01()\n   typedef char_traits<int_type>\t\t\tint_traits;\n   typedef char_traits<ext_type>\t\t\text_traits;\n \n-  bool test __attribute__((unused)) = true;\n   int \t\t\tsize = 23;\n   char  e_lit_base[96] __attribute__((aligned(__alignof__(ext_type)))) =\n   {"}, {"sha": "c5a6d2e892cda7bf3303799df258e806d1a5dccb", "filename": "libstdc++-v3/testsuite/ext/enc_filebuf/char/13189.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13189.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13189.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13189.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@ void test01()\n   typedef filebuf_type::state_type state_type;\n   typedef codecvt<char_type, char, state_type> enc_codecvt;\n \n-  bool test __attribute__((unused)) = true;\n   ios_base::openmode mode = ios_base::in | ios_base::out | ios_base::trunc;\n   try\n     {"}, {"sha": "f83f478784c6605588e86b4e3215103e5937aed0", "filename": "libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,7 +29,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef char char_type;\n   typedef __gnu_cxx::enc_filebuf<char_type> filebuf_type;\n   typedef filebuf_type::state_type state_type;"}, {"sha": "169af8d828ca82b64f0f7416d5f4ef5be630ab09", "filename": "libstdc++-v3/testsuite/ext/enc_filebuf/wchar_t/13189.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fwchar_t%2F13189.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fwchar_t%2F13189.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fwchar_t%2F13189.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -28,7 +28,6 @@ void test01()\n   typedef filebuf_type::state_type state_type;\n   typedef codecvt<char_type, char, state_type> enc_codecvt;\n \n-  bool test __attribute__((unused)) = true;\n   ios_base::openmode mode = ios_base::in | ios_base::out | ios_base::trunc;\n   try\n     {"}, {"sha": "f4160d92350d069d60d60e86576c2e3924227961", "filename": "libstdc++-v3/testsuite/ext/ext_pointer/1.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -31,8 +31,6 @@ using __gnu_cxx::__const_pointer_cast;\n \n void \n test01() {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef _Pointer_adapter<_Relative_pointer_impl<int> >       pointer;\n   typedef _Pointer_adapter<_Relative_pointer_impl<const int> > const_pointer;\n \n@@ -100,8 +98,6 @@ void inc3(_Pointer_adapter<_Relative_pointer_impl<const A> > a) {\n }\n \n void test02() {\n-  bool test __attribute__((unused)) = true;\n-\n   B b;\n   b.i = 2;\n   b.j = 2;\n@@ -150,8 +146,6 @@ void test02() {\n }\n \n void test03() {\n-  bool test __attribute__((unused)) = true;\n-\n   B b;\n   B* bPtr = &b;\n   A* aPtr __attribute__((unused)) = __static_pointer_cast<A*>(bPtr);\n@@ -172,8 +166,6 @@ void test03() {\n // Confirm the usability of the __static_pointer_cast<> template function\n // to transform between _Pointer_adapter and standard versions.\n void test04() {\n-  bool test __attribute__((unused)) = true;\n-\n   B b;\n   B_pointer bPtr = &b;\n "}, {"sha": "d27f885cc96f382b8a76fe7cdb4127bc20cb3237", "filename": "libstdc++-v3/testsuite/ext/ext_pointer/1_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -45,8 +45,6 @@ typedef _Pointer_adapter<_Relative_pointer_impl<const A> > const_A_pointer;\n \n \n void test01(void) {\n-  bool test __attribute__((unused)) = true;\n-\n   A a;\n   B b;\n "}, {"sha": "065c67a6daf7f253f5c53c07b3d7875a5d2ffa64", "filename": "libstdc++-v3/testsuite/ext/malloc_allocator/variadic_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmalloc_allocator%2Fvariadic_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmalloc_allocator%2Fvariadic_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmalloc_allocator%2Fvariadic_construct.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, char> pair_type;\n   __gnu_cxx::malloc_allocator<pair_type> alloc1;\n "}, {"sha": "a29b2775b63cb35a8e137a2a844b5e2ea414d9f1", "filename": "libstdc++-v3/testsuite/ext/mt_allocator/check_allocate_big_per_type.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Fcheck_allocate_big_per_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Fcheck_allocate_big_per_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Fcheck_allocate_big_per_type.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@ struct big { char array[256]; };\n // __per_type_pool_policy\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef big value_type;\n \n   using __gnu_cxx::__pool;"}, {"sha": "c75a08fcb96d3d1219686b42c082c30fb0fc846d", "filename": "libstdc++-v3/testsuite/ext/mt_allocator/tune-1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-1.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -32,8 +32,6 @@\n // __common_pool_policy\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using __gnu_cxx::__pool;\n   using __gnu_cxx::__common_pool_policy;\n "}, {"sha": "2480cf538758076c08db7657ed55a7d8c7fdaabd", "filename": "libstdc++-v3/testsuite/ext/mt_allocator/tune-2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-2.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -32,8 +32,6 @@\n // __per_type_pool_policy\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::pod_int value_type;\n \n   using __gnu_cxx::__pool;"}, {"sha": "d897f361e2454fc86cf6260d511e8276dbe95eac", "filename": "libstdc++-v3/testsuite/ext/mt_allocator/tune-3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-3.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -41,8 +41,6 @@ struct test_policy<__common_pool_policy<__pool, false> >\n template<typename _Tp, typename _Cp>\n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_cxx::__pool_base::_Tune tune_type;\n   typedef _Tp value_type;\n   typedef _Cp policy_type;"}, {"sha": "780ebff9fc72687e2f5ab2d268b5371d0948b4b3", "filename": "libstdc++-v3/testsuite/ext/mt_allocator/tune-4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Ftune-4.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -48,8 +48,6 @@ struct pod2\n template<typename _Tp, typename _Cp>\n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   typedef __gnu_cxx::__pool_base::_Tune tune_type;\n   typedef _Tp value_type;\n   typedef _Cp policy_type;"}, {"sha": "b54e9efc1bc5f70380b0a8633991c4d6f8de1c43", "filename": "libstdc++-v3/testsuite/ext/mt_allocator/variadic_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Fvariadic_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Fvariadic_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fmt_allocator%2Fvariadic_construct.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, char> pair_type;\n   __gnu_cxx::__mt_alloc<pair_type> alloc1;\n "}, {"sha": "cde3828b85943fa9ddebd4dde8dc880c01633993", "filename": "libstdc++-v3/testsuite/ext/new_allocator/variadic_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fnew_allocator%2Fvariadic_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fnew_allocator%2Fvariadic_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fnew_allocator%2Fvariadic_construct.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, char> pair_type;\n   __gnu_cxx::new_allocator<pair_type> alloc1;\n "}, {"sha": "384c04e95398198ec4ccfb93d7ee1f58f6b04156", "filename": "libstdc++-v3/testsuite/ext/pod_char_traits.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpod_char_traits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpod_char_traits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpod_char_traits.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -32,7 +32,7 @@ int main()\n   typedef character<value_type, int_type>\tchar_type;\n   typedef std::char_traits<char_type> \t\ttraits_type;\n \n-  bool test __attribute__((unused)) = true;\n+  bool test = true;\n \n   // 1 char_type <-> value_type conversions\n   value_type uc1 = 'c';"}, {"sha": "8e48eec6b3bcbe74c1e63ba49254069a7c0977e3", "filename": "libstdc++-v3/testsuite/ext/pool_allocator/variadic_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpool_allocator%2Fvariadic_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpool_allocator%2Fvariadic_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpool_allocator%2Fvariadic_construct.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -25,7 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, char> pair_type;\n   __gnu_cxx::__pool_alloc<pair_type> alloc1;\n "}, {"sha": "dec037fdb503240d310bc187865eccbb3aec0e49", "filename": "libstdc++-v3/testsuite/ext/random/arcsine_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::arcsine_distribution<> u;\n   VERIFY( u.a() == 0.0 );\n   VERIFY( u.b() == 1.0 );"}, {"sha": "d01d550826a0db4eca49cd7d3dcfceee89920e2b", "filename": "libstdc++-v3/testsuite/ext/random/arcsine_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::arcsine_distribution<> u(-1.5, 3.0);\n   VERIFY( u.a() == -1.5 );\n   VERIFY( u.b() == 3.0 );"}, {"sha": "55c4b24d8b1851b099ef05fe3a98bcbdceb2fb8a", "filename": "libstdc++-v3/testsuite/ext/random/arcsine_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::arcsine_distribution<double> u(-2.0, 3.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "abf678d82dedf3d9802cc959e01a981cc96b65e8", "filename": "libstdc++-v3/testsuite/ext/random/arcsine_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::arcsine_distribution<double> u(-2.0, 3.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "3c0faa394ff8d8bfd37cff40ae3a9bf956886fd6", "filename": "libstdc++-v3/testsuite/ext/random/arcsine_distribution/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Farcsine_distribution%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   __gnu_cxx::arcsine_distribution<double> u(-1.5, 3.0), v;\n   std::minstd_rand0 rng;"}, {"sha": "713b20b255b3238ee360ae59c1e12f3e807b605a", "filename": "libstdc++-v3/testsuite/ext/random/beta_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::beta_distribution<> u;\n   VERIFY( u.alpha() == 1.0 );\n   VERIFY( u.beta() == 1.0 );"}, {"sha": "56214393238f9e91644e7ba9668547434b82a444", "filename": "libstdc++-v3/testsuite/ext/random/beta_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::beta_distribution<> u(1.5, 3.0);\n   VERIFY( u.alpha() == 1.5 );\n   VERIFY( u.beta() == 3.0 );"}, {"sha": "e304c5b5d03b8a06a44020c9ecf2e24111f2dfb9", "filename": "libstdc++-v3/testsuite/ext/random/beta_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::beta_distribution<double> u(1.5, 3.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "e4ca655c431898b9d311ce671e22019cc013767a", "filename": "libstdc++-v3/testsuite/ext/random/beta_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fbeta_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::beta_distribution<double> u(1.5, 3.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "db8231803808d4b927398f5afe520c177016f736", "filename": "libstdc++-v3/testsuite/ext/random/hoyt_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::hoyt_distribution<> u;\n   VERIFY( u.q() == 0.5 );\n   VERIFY( u.omega() == 1.0 );"}, {"sha": "b6ea0b8dba99679b24ae2a98fbe3a9e65629d9de", "filename": "libstdc++-v3/testsuite/ext/random/hoyt_distribution/cons/parms.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Fcons%2Fparms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Fcons%2Fparms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Fcons%2Fparms.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::hoyt_distribution<> u(0.05, 3.0);\n   VERIFY( u.q() == 0.05 );\n   VERIFY( u.omega() == 3.0 );"}, {"sha": "03775f8c652f594f448d8b59e703f1fedb983083", "filename": "libstdc++-v3/testsuite/ext/random/hoyt_distribution/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Fequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::hoyt_distribution<double> u(0.05, 3.0), v, w;\n \n   VERIFY( v == w );"}, {"sha": "1c07cfc1b6d89fe4d195a234c5e867987f06dab4", "filename": "libstdc++-v3/testsuite/ext/random/hoyt_distribution/operators/inequal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Finequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Finequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Finequal.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_cxx::hoyt_distribution<double> u(0.05, 3.0), v, w;\n \n   VERIFY( u != v );"}, {"sha": "a2c1f2cfc86b98148a1dee3565321cba275d91df", "filename": "libstdc++-v3/testsuite/ext/random/hoyt_distribution/operators/serialize.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhoyt_distribution%2Foperators%2Fserialize.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::stringstream str;\n   __gnu_cxx::hoyt_distribution<double> u(0.05, 3.0), v;\n   std::minstd_rand0 rng;"}, {"sha": "f17f081cef08176ab45512963857b68b49a7a43d", "filename": "libstdc++-v3/testsuite/ext/random/hypergeometric_distribution/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhypergeometric_distribution%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1558d39e1cb361736d5b9515a135f4c13a578b04/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhypergeometric_distribution%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhypergeometric_distribution%2Fcons%2Fdefault.cc?ref=1558d39e1cb361736d5b9515a135f4c13a578b04", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   __gnu_cxx::hypergeometric_distribution<> u;\n   VERIFY( u.total_size() == 10 );\n   VERIFY( u.successful_size() == 5 );"}]}