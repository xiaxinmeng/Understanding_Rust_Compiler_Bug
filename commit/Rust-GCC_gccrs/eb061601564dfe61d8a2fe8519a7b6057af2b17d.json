{"sha": "eb061601564dfe61d8a2fe8519a7b6057af2b17d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwNjE2MDE1NjRkZmU2MWQ4YTJmZTg1MTlhN2I2MDU3YWYyYjE3ZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-05-20T13:37:11Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-05-20T13:37:11Z"}, "message": "tree-ssa-alias.c (refs_may_alias_p_2): Break out from ...\n\n\n\n\t* tree-ssa-alias.c (refs_may_alias_p_2): Break out from ...\n\t(refs_may_alias_p_1): ... here; update stats.\n\t(refs_may_alias_p): Do not update stats here.\n\nFrom-SVN: r271419", "tree": {"sha": "cad9d9f379e6896c76e6fc9000a46242732ce0b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cad9d9f379e6896c76e6fc9000a46242732ce0b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb061601564dfe61d8a2fe8519a7b6057af2b17d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb061601564dfe61d8a2fe8519a7b6057af2b17d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb061601564dfe61d8a2fe8519a7b6057af2b17d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb061601564dfe61d8a2fe8519a7b6057af2b17d/comments", "author": null, "committer": null, "parents": [{"sha": "0841bc15630c18bac94ff6ed8ba2d878d639caf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0841bc15630c18bac94ff6ed8ba2d878d639caf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0841bc15630c18bac94ff6ed8ba2d878d639caf6"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "1cefccff4a62866fd18cb4ed43820cdfb9dd8406", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb061601564dfe61d8a2fe8519a7b6057af2b17d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb061601564dfe61d8a2fe8519a7b6057af2b17d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb061601564dfe61d8a2fe8519a7b6057af2b17d", "patch": "@@ -1,3 +1,9 @@\n+2019-05-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-ssa-alias.c (refs_may_alias_p_2): Break out from ...\n+\t(refs_may_alias_p_1): ... here; update stats.\n+\t(refs_may_alias_p): Do not update stats here.\n+\n 2019-05-20  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (find_func_aliases): POINTER_DIFF_EXPR"}, {"sha": "5b5f1462463d774954c657c3fa6dd352bcb72cbf", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb061601564dfe61d8a2fe8519a7b6057af2b17d/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb061601564dfe61d8a2fe8519a7b6057af2b17d/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=eb061601564dfe61d8a2fe8519a7b6057af2b17d", "patch": "@@ -1470,8 +1470,8 @@ indirect_refs_may_alias_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n \n /* Return true, if the two memory references REF1 and REF2 may alias.  */\n \n-bool\n-refs_may_alias_p_1 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n+static bool\n+refs_may_alias_p_2 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n {\n   tree base1, base2;\n   poly_int64 offset1 = 0, offset2 = 0;\n@@ -1628,6 +1628,20 @@ refs_may_alias_p_1 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n   gcc_unreachable ();\n }\n \n+/* Return true, if the two memory references REF1 and REF2 may alias\n+   and update statistics.  */\n+\n+bool\n+refs_may_alias_p_1 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n+{\n+  bool res = refs_may_alias_p_2 (ref1, ref2, tbaa_p);\n+  if (res)\n+    ++alias_stats.refs_may_alias_p_may_alias;\n+  else\n+    ++alias_stats.refs_may_alias_p_no_alias;\n+  return res;\n+}\n+\n static bool\n refs_may_alias_p (tree ref1, ao_ref *ref2, bool tbaa_p)\n {\n@@ -1640,15 +1654,9 @@ bool\n refs_may_alias_p (tree ref1, tree ref2, bool tbaa_p)\n {\n   ao_ref r1, r2;\n-  bool res;\n   ao_ref_init (&r1, ref1);\n   ao_ref_init (&r2, ref2);\n-  res = refs_may_alias_p_1 (&r1, &r2, tbaa_p);\n-  if (res)\n-    ++alias_stats.refs_may_alias_p_may_alias;\n-  else\n-    ++alias_stats.refs_may_alias_p_no_alias;\n-  return res;\n+  return refs_may_alias_p_1 (&r1, &r2, tbaa_p);\n }\n \n /* Returns true if there is a anti-dependence for the STORE that"}]}