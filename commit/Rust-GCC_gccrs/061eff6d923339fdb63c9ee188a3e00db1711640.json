{"sha": "061eff6d923339fdb63c9ee188a3e00db1711640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYxZWZmNmQ5MjMzMzlmZGI2M2M5ZWUxODhhM2UwMGRiMTcxMTY0MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-13T20:45:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-13T20:45:27Z"}, "message": "sse.md (*sse2_maskmovdqu): Emit addr32 prefix when Pmode != word_mode.\n\n\t* config/i386/sse.md (*sse2_maskmovdqu): Emit addr32 prefix\n\twhen Pmode != word_mode.  Add length_address attribute.\n\t(sse3_monitor_<mode>): Merge from sse3_monitor and\n\tsse3_monitor64_<mode> insn patterns.  Emit addr32 prefix when\n\tPmode != word_mode.  Update insn length attribute.\n\t* config/i386/i386.c (ix86_option_override_internal): Update\n\tix86_gen_monitor selection for merged sse3_monitor insn.\n\nFrom-SVN: r201708", "tree": {"sha": "54d86f2140e835225db25ea6baca84e8567f2b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54d86f2140e835225db25ea6baca84e8567f2b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/061eff6d923339fdb63c9ee188a3e00db1711640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061eff6d923339fdb63c9ee188a3e00db1711640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061eff6d923339fdb63c9ee188a3e00db1711640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061eff6d923339fdb63c9ee188a3e00db1711640/comments", "author": null, "committer": null, "parents": [{"sha": "5ff3a1f733a09412023e5d8d7c9d79d988d9b310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff3a1f733a09412023e5d8d7c9d79d988d9b310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff3a1f733a09412023e5d8d7c9d79d988d9b310"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "53620ac31cf5671371f2dafab68bb5ceeb4f399e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061eff6d923339fdb63c9ee188a3e00db1711640/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061eff6d923339fdb63c9ee188a3e00db1711640/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=061eff6d923339fdb63c9ee188a3e00db1711640", "patch": "@@ -1,3 +1,13 @@\n+2013-08-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (*sse2_maskmovdqu): Emit addr32 prefix\n+\twhen Pmode != word_mode.  Add length_address attribute.\n+\t(sse3_monitor_<mode>): Merge from sse3_monitor and\n+\tsse3_monitor64_<mode> insn patterns.  Emit addr32 prefix when\n+\tPmode != word_mode.  Update insn length attribute.\n+\t* config/i386/i386.c (ix86_option_override_internal): Update\n+\tix86_gen_monitor selection for merged sse3_monitor insn.\n+\n 2013-08-13  Julian Brown  <julian@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Don't\n@@ -57,7 +67,7 @@\n 2013-08-13  David Malcolm  <dmalcolm@redhat.com>\n \n \t* config/i386/t-i386 (i386.o): Rename stray PIPELINE_H to\n-\tPASS_MANAGER_H\n+\tPASS_MANAGER_H.\n \n 2013-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "e3f345ab925d7b7a39a20e9ccb500c6b52f697c0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061eff6d923339fdb63c9ee188a3e00db1711640/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061eff6d923339fdb63c9ee188a3e00db1711640/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=061eff6d923339fdb63c9ee188a3e00db1711640", "patch": "@@ -4170,24 +4170,19 @@ ix86_option_override_internal (bool main_args_p)\n       ix86_gen_leave = gen_leave_rex64;\n       if (Pmode == DImode)\n \t{\n-\t  ix86_gen_monitor = gen_sse3_monitor64_di;\n \t  ix86_gen_tls_global_dynamic_64 = gen_tls_global_dynamic_64_di;\n \t  ix86_gen_tls_local_dynamic_base_64\n \t    = gen_tls_local_dynamic_base_64_di;\n \t}\n       else\n \t{\n-\t  ix86_gen_monitor = gen_sse3_monitor64_si;\n \t  ix86_gen_tls_global_dynamic_64 = gen_tls_global_dynamic_64_si;\n \t  ix86_gen_tls_local_dynamic_base_64\n \t    = gen_tls_local_dynamic_base_64_si;\n \t}\n     }\n   else\n-    {\n-      ix86_gen_leave = gen_leave;\n-      ix86_gen_monitor = gen_sse3_monitor;\n-    }\n+    ix86_gen_leave = gen_leave;\n \n   if (Pmode == DImode)\n     {\n@@ -4199,6 +4194,7 @@ ix86_option_override_internal (bool main_args_p)\n       ix86_gen_allocate_stack_worker = gen_allocate_stack_worker_probe_di;\n       ix86_gen_adjust_stack_and_probe = gen_adjust_stack_and_probedi;\n       ix86_gen_probe_stack_range = gen_probe_stack_rangedi;\n+      ix86_gen_monitor = gen_sse3_monitor_di;\n     }\n   else\n     {\n@@ -4210,6 +4206,7 @@ ix86_option_override_internal (bool main_args_p)\n       ix86_gen_allocate_stack_worker = gen_allocate_stack_worker_probe_si;\n       ix86_gen_adjust_stack_and_probe = gen_adjust_stack_and_probesi;\n       ix86_gen_probe_stack_range = gen_probe_stack_rangesi;\n+      ix86_gen_monitor = gen_sse3_monitor_si;\n     }\n \n #ifdef USE_IX86_CLD"}, {"sha": "0eaaf292ee24f328cef4fd2d6398f918a7d70628", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061eff6d923339fdb63c9ee188a3e00db1711640/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061eff6d923339fdb63c9ee188a3e00db1711640/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=061eff6d923339fdb63c9ee188a3e00db1711640", "patch": "@@ -7731,9 +7731,17 @@\n \t\t       (mem:V16QI (match_dup 0))]\n \t\t      UNSPEC_MASKMOV))]\n   \"TARGET_SSE2\"\n-  \"%vmaskmovdqu\\t{%2, %1|%1, %2}\"\n+{\n+  /* We can't use %^ here due to ASM_OUTPUT_OPCODE processing\n+     that requires %v to be at the beginning of the opcode name.  */\n+  if (Pmode != word_mode)\n+    fputs (\"\\taddr32\", asm_out_file);\n+  return \"%vmaskmovdqu\\t{%2, %1|%1, %2}\";\n+}\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_data16\" \"1\")\n+   (set (attr \"length_address\")\n+     (symbol_ref (\"Pmode != word_mode\")))\n    ;; The implicit %rdi operand confuses default length_vex computation.\n    (set (attr \"length_vex\")\n      (symbol_ref (\"3 + REX_SSE_REGNO_P (REGNO (operands[2]))\")))\n@@ -7781,26 +7789,18 @@\n   \"mwait\"\n   [(set_attr \"length\" \"3\")])\n \n-(define_insn \"sse3_monitor\"\n-  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"a\")\n-\t\t     (match_operand:SI 1 \"register_operand\" \"c\")\n-\t\t     (match_operand:SI 2 \"register_operand\" \"d\")]\n-\t\t    UNSPECV_MONITOR)]\n-  \"TARGET_SSE3 && !TARGET_64BIT\"\n-  \"monitor\\t%0, %1, %2\"\n-  [(set_attr \"length\" \"3\")])\n-\n-(define_insn \"sse3_monitor64_<mode>\"\n+(define_insn \"sse3_monitor_<mode>\"\n   [(unspec_volatile [(match_operand:P 0 \"register_operand\" \"a\")\n \t\t     (match_operand:SI 1 \"register_operand\" \"c\")\n \t\t     (match_operand:SI 2 \"register_operand\" \"d\")]\n \t\t    UNSPECV_MONITOR)]\n-  \"TARGET_SSE3 && TARGET_64BIT\"\n+  \"TARGET_SSE3\"\n ;; 64bit version is \"monitor %rax,%rcx,%rdx\". But only lower 32bits in\n ;; RCX and RDX are used.  Since 32bit register operands are implicitly\n ;; zero extended to 64bit, we only need to set up 32bit registers.\n-  \"monitor\"\n-  [(set_attr \"length\" \"3\")])\n+  \"%^monitor\"\n+  [(set (attr \"length\")\n+     (symbol_ref (\"(Pmode != word_mode) + 3\")))])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}]}