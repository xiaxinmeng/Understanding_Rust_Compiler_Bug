{"sha": "5453d5bde8413766efffff9fc5e3205fea13bc7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1M2Q1YmRlODQxMzc2NmVmZmZmZjlmYzVlMzIwNWZlYTEzYmM3Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-06-11T10:47:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-06-11T10:47:39Z"}, "message": "[multiple changes]\n\n2004-06-11  Vincent Celier  <celier@gnat.com>\n\n\t* mlib-tgt-vms-alpha.adb (Build_Dynamic_Library): Issue switch -R to\n\tgnatsym, when symbol policy is Restricted.\n\n\t* mlib-tgt-vms-ia64.adb (Build_Dynamic_Library): Issue switch -R to\n\tgnatsym, when symbol policy is Restricted.\n\n\t* symbols-vms-alpha.adb (Initialize): When symbol policy is Restricted,\n\tread the symbol file.\n\t(Finalize): Fail in symbol policy Restricted if a symbol in the original\n\tsymbol file is not in the object files. Do not create a new symbol file\n\twhen symbol policy is Restricted.\n\n\t* gnatbind.adb (Gnatbind): Initialize Snames, because Snames is used\n\tin Scng.\n\n\t* gnatsym.adb (Parse_Vmd_Line): Process new switch -R for symbol policy\n\tRestricted.\n\t(Usage): Line for new switch -R\n\n\t* make.adb (Initialize): When the platform is not VMS, add the\n\tdirectory where gnatmake is invoked in the front of the path, if\n\tgnatmake is invoked with directory information.  Change the Scan_Args\n\twhile loop to a for loop.\n\t(Recursive_Compute_Depth): Remove parameter Visited. Improve efficiency:\n\tif Depth is equal or greater than the proposed depth, there is nothing\n\tto do.\n\t(Initialize): Call Recursive_Compute_Depth with initial Depth equal to 1\n\tinstead of 0.\n\n\t* prj.ads: Add new symbol policy Restricted.\n\n\t* prj-dect.adb (Parse_Case_Construction): Call End_Case_Construction\n\twith the new parameters Check_All_Labels and Case_Location.\n\n\t* prj-nmsc.adb (Ada_Check): Process new symbol policy Restricted\n\t(Library_Symbol_File needs to be defined).\n\n\t* prj-strt.adb (End_Case_Construction): New parameters Check_All_Labels\n\tand Case_Location If Check_All_Labels is True, check that all values of\n\tthe string type are used, and output warning(s) if they are not.\n\n\t* prj-strt.ads (End_Case_Construction): New parameters Check_All_Labels\n\tand Case_Location.\n\n\t* gnat_ugn.texi: Reorder subclauses in menus \"Switches for gcc\"\n\n\t* gnat_ugn.texi: Update documentation about the library directory in\n\tLibrary Projects.\n\n\t* makegpr.adb (Display_Command): In verbose mode, also display the\n\tvalue of the CPATH env var, when the compiler is gcc.\n\t(Initialize): Change the Scan_Args while loop to a for loop\n\t(Compile_Individual_Sources): Change directory to object directory\n\tbefore compilations.\n\n\t* symbols.ads: New symbol policy Restricted.\n\n2004-06-11  Olivier Hainque  <hainque@act-europe.fr>\n\n\t* a-except.adb (Raise_After_Setup family): Remove. The responsibility\n\tis now taken care of internally in the Exception_Propagation package\n\tand does not require clients assistance any more.\n\n\t* a-exexpr.adb (Is_Setup_And_Not_Propagated,\n\tSet_Setup_And_Not_Propagated, and Clear_Setup_And_Not_Propagated): New\n\tfunctions. Helpers to maintain a predicate required in the handling of\n\toccurrence transfer between tasks.\n\tThis is now handled internally and does not require clients assistance\n\tfor the setup/propagate separation anymore.\n\t(Setup_Exception, Propagate_Exception): Simplify the Private_Data\n\tallocation strategy, handle the Setup_And_Not_Propagated predicate and\n\tdocument.\n\n\t* s-taenca.adb (Check_Exception): Use raise_with_msg instead of\n\traise_after_setup, now that everything is handled internally within the\n\tsetup/propagation engine.\n\n2004-06-11  Hristian Kirtchev  <kirtchev@gnat.com>\n\n\t* exp_ch6.adb (Expand_Inlined_Call): Add function Formal_Is_Used_Once.\n\tAdd additional conditions for the case of an actual being a simple\n\tname or literal. Improve inlining by preventing the generation\n\tof temporaries with a short lifetime (one use).\n\n2004-06-11  Hristian Kirtchev  <kirtchev@gnat.com>\n\n\tPR ada/15587\n\n\t* einfo.ads: Minor comment updates for Has_Completion and\n\tE_Constant list of flags.\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): Full constant declarations\n\tand constant redeclarations now set the Has_Completion flag of their\n\tdefining identifiers.\n\n\t* sem_ch7.adb (Analyze_Package_Spec): Add procedure\n\tInspect_Deferred_Constant_Completion.\n\tUsed to detect private deferred constants that have not been completed\n\teither by a constant redeclaration or pragma Import. Emits error message\n\t\"constant declaration requires initialization expression\".\n\n\t* sem_prag.adb (Process_Import_Or_Interface): An Import pragma now\n\tcompletes a deferred constant.\n\n2004-06-11  Geert Bosch  <bosch@gnat.com>\n\n\t* eval_fat.adb (Decompose_Int): Fix rounding of negative numbers.\n\n\t* s-fatgen.adb (Gradual_Scaling): Correct off-by-one error in\n\tcalculating exponent for scaling denormal numbers.\n\t(Leading_Part): Properly raise Constraint_Error for zero or negative\n\tAdjustment.\n\t(Remainder): Properly raise Constraint_Error for zero divisor.\n\n2004-06-11  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* sem_util.adb: Minor reformatting.\n\n\t* exp_ch2.adb (Expand_Entry_Parameter): Generate an explicit\n\tdereference when accessing the entry parameter record.\n\t(Check_Array_Type): Always check for possible implicit dereference.\n\t(maybe_implicit_dereference): Rename to check_no_implicit_derefence.\n\tAbort if a pointer is still present (denoting that an implicit\n\tdereference was left in the tree by the front-end).\n\n\t* sem_attr.adb (Expand_Entry_Parameter): Generate an explicit\n\tdereference when accessing the entry parameter record.\n\t(Check_Array_Type): Always check for possible implicit dereference.\n\t(maybe_implicit_dereference): Rename to check_no_implicit_derefence.\n\tAbort if a pointer is still present (denoting that an implicit\n\tdereference was left in the tree by the front-end).\n\n2004-06-11  Emmanuel Briot  <briot@act-europe.fr>\n\n\t* g-debpoo.adb (Deallocate, Dereference): Add prefix \"error:\" to error\n\tmessage, like the compiler itself does. Easier to parse the output.\n\n\t* g-debpoo.ads: (Allocate, Deallocate, Dereference): Add comments.\n\n\t* gnat_ugn.texi (gnatxref, gnatfind): Clarify that source names should\n\tbe base names, and not includes directories.\n\n2004-06-11  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* Makefile.generic ($(EXEC)): Depend on $(OBJECTS), not $(OBJ_FILES),\n\tso that dependencies are properly taken into account by make.\n\n2004-06-11  Arnaud Charlet  <charlet@act-europe.fr>\n\n\tPR ada/15622\n\t* s-unstyp.ads, s-maccod.ads, sem_ch8.adb, s-auxdec.ads,\n\texp_intr.adb, s-auxdec-vms_64.ads: Fix typo: instrinsic -> intrinsic\n\n2004-06-11  Jerome Guitton  <guitton@act-europe.fr>\n\n\t* Makefile.in (install-gnatlib): install target-specific run-time files.\n\n\t* Make-lang.in: Remove obsolete targets.\n\n2004-06-11  Ed Schonberg  <schonberg@gnat.com>\n\n\t* par-ch12.adb (P_Generic): Add scope before analyzing subprogram\n\tspecification, to catch misuses of program unit names.\n\n\t* sem_res.adb (Resolve_Type_Conversion): Do not emit warnings on\n\tsuperfluous conversions in an instance.\n\n2004-06-11  Ed Schonberg  <schonberg@gnat.com>\n\n\tPR ada/15403\n\n\t* sem_ch12.adb (Save_References): If operator node has been folded to\n\tenumeration literal, associated_node must be discarded.\n\n2004-06-11  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* s-stchop-vxworks.adb: Add required pragma Convention to\n\tTask_Descriptor because it is updated by a C function.\n\nFrom-SVN: r82973", "tree": {"sha": "087a2a5de5d1db66fdac9e584721922ca4c2cc21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/087a2a5de5d1db66fdac9e584721922ca4c2cc21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5453d5bde8413766efffff9fc5e3205fea13bc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5453d5bde8413766efffff9fc5e3205fea13bc7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5453d5bde8413766efffff9fc5e3205fea13bc7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5453d5bde8413766efffff9fc5e3205fea13bc7b/comments", "author": null, "committer": null, "parents": [{"sha": "d1ee83813d3719902016705cfb1898b1bb005027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ee83813d3719902016705cfb1898b1bb005027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ee83813d3719902016705cfb1898b1bb005027"}], "stats": {"total": 1138, "additions": 842, "deletions": 296}, "files": [{"sha": "8e5893db74c7704df81fd0857542457f09ada431", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1,3 +1,184 @@\n+2004-06-11  Vincent Celier  <celier@gnat.com>\n+\n+\t* mlib-tgt-vms-alpha.adb (Build_Dynamic_Library): Issue switch -R to\n+\tgnatsym, when symbol policy is Restricted.\n+\n+\t* mlib-tgt-vms-ia64.adb (Build_Dynamic_Library): Issue switch -R to\n+\tgnatsym, when symbol policy is Restricted.\n+\n+\t* symbols-vms-alpha.adb (Initialize): When symbol policy is Restricted,\n+\tread the symbol file.\n+\t(Finalize): Fail in symbol policy Restricted if a symbol in the original\n+\tsymbol file is not in the object files. Do not create a new symbol file\n+\twhen symbol policy is Restricted.\n+\n+\t* gnatbind.adb (Gnatbind): Initialize Snames, because Snames is used\n+\tin Scng.\n+\n+\t* gnatsym.adb (Parse_Vmd_Line): Process new switch -R for symbol policy\n+\tRestricted.\n+\t(Usage): Line for new switch -R\n+\n+\t* make.adb (Initialize): When the platform is not VMS, add the\n+\tdirectory where gnatmake is invoked in the front of the path, if\n+\tgnatmake is invoked with directory information.  Change the Scan_Args\n+\twhile loop to a for loop.\n+\t(Recursive_Compute_Depth): Remove parameter Visited. Improve efficiency:\n+\tif Depth is equal or greater than the proposed depth, there is nothing\n+\tto do.\n+\t(Initialize): Call Recursive_Compute_Depth with initial Depth equal to 1\n+\tinstead of 0.\n+\n+\t* prj.ads: Add new symbol policy Restricted.\n+\n+\t* prj-dect.adb (Parse_Case_Construction): Call End_Case_Construction\n+\twith the new parameters Check_All_Labels and Case_Location.\n+\n+\t* prj-nmsc.adb (Ada_Check): Process new symbol policy Restricted\n+\t(Library_Symbol_File needs to be defined).\n+\n+\t* prj-strt.adb (End_Case_Construction): New parameters Check_All_Labels\n+\tand Case_Location If Check_All_Labels is True, check that all values of\n+\tthe string type are used, and output warning(s) if they are not.\n+\n+\t* prj-strt.ads (End_Case_Construction): New parameters Check_All_Labels\n+\tand Case_Location.\n+\n+\t* gnat_ugn.texi: Reorder subclauses in menus \"Switches for gcc\"\n+\n+\t* gnat_ugn.texi: Update documentation about the library directory in\n+\tLibrary Projects.\n+\n+\t* makegpr.adb (Display_Command): In verbose mode, also display the\n+\tvalue of the CPATH env var, when the compiler is gcc.\n+\t(Initialize): Change the Scan_Args while loop to a for loop\n+\t(Compile_Individual_Sources): Change directory to object directory\n+\tbefore compilations.\n+\n+\t* symbols.ads: New symbol policy Restricted.\n+\n+2004-06-11  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t* a-except.adb (Raise_After_Setup family): Remove. The responsibility\n+\tis now taken care of internally in the Exception_Propagation package\n+\tand does not require clients assistance any more.\n+\n+\t* a-exexpr.adb (Is_Setup_And_Not_Propagated,\n+\tSet_Setup_And_Not_Propagated, and Clear_Setup_And_Not_Propagated): New\n+\tfunctions. Helpers to maintain a predicate required in the handling of\n+\toccurrence transfer between tasks.\n+\tThis is now handled internally and does not require clients assistance\n+\tfor the setup/propagate separation anymore.\n+\t(Setup_Exception, Propagate_Exception): Simplify the Private_Data\n+\tallocation strategy, handle the Setup_And_Not_Propagated predicate and\n+\tdocument.\n+\n+\t* s-taenca.adb (Check_Exception): Use raise_with_msg instead of\n+\traise_after_setup, now that everything is handled internally within the\n+\tsetup/propagation engine.\n+\n+2004-06-11  Hristian Kirtchev  <kirtchev@gnat.com>\n+\n+\t* exp_ch6.adb (Expand_Inlined_Call): Add function Formal_Is_Used_Once.\n+\tAdd additional conditions for the case of an actual being a simple\n+\tname or literal. Improve inlining by preventing the generation\n+\tof temporaries with a short lifetime (one use).\n+\n+2004-06-11  Hristian Kirtchev  <kirtchev@gnat.com>\n+\n+\tPR ada/15587\n+\n+\t* einfo.ads: Minor comment updates for Has_Completion and\n+\tE_Constant list of flags.\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Full constant declarations\n+\tand constant redeclarations now set the Has_Completion flag of their\n+\tdefining identifiers.\n+\n+\t* sem_ch7.adb (Analyze_Package_Spec): Add procedure\n+\tInspect_Deferred_Constant_Completion.\n+\tUsed to detect private deferred constants that have not been completed\n+\teither by a constant redeclaration or pragma Import. Emits error message\n+\t\"constant declaration requires initialization expression\".\n+\n+\t* sem_prag.adb (Process_Import_Or_Interface): An Import pragma now\n+\tcompletes a deferred constant.\n+\n+2004-06-11  Geert Bosch  <bosch@gnat.com>\n+\n+\t* eval_fat.adb (Decompose_Int): Fix rounding of negative numbers.\n+\n+\t* s-fatgen.adb (Gradual_Scaling): Correct off-by-one error in\n+\tcalculating exponent for scaling denormal numbers.\n+\t(Leading_Part): Properly raise Constraint_Error for zero or negative\n+\tAdjustment.\n+\t(Remainder): Properly raise Constraint_Error for zero divisor.\n+\n+2004-06-11  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* sem_util.adb: Minor reformatting.\n+\n+\t* exp_ch2.adb (Expand_Entry_Parameter): Generate an explicit\n+\tdereference when accessing the entry parameter record.\n+\t(Check_Array_Type): Always check for possible implicit dereference.\n+\t(maybe_implicit_dereference): Rename to check_no_implicit_derefence.\n+\tAbort if a pointer is still present (denoting that an implicit\n+\tdereference was left in the tree by the front-end).\n+\n+\t* sem_attr.adb (Expand_Entry_Parameter): Generate an explicit\n+\tdereference when accessing the entry parameter record.\n+\t(Check_Array_Type): Always check for possible implicit dereference.\n+\t(maybe_implicit_dereference): Rename to check_no_implicit_derefence.\n+\tAbort if a pointer is still present (denoting that an implicit\n+\tdereference was left in the tree by the front-end).\n+\n+2004-06-11  Emmanuel Briot  <briot@act-europe.fr>\n+\n+\t* g-debpoo.adb (Deallocate, Dereference): Add prefix \"error:\" to error\n+\tmessage, like the compiler itself does. Easier to parse the output.\n+\n+\t* g-debpoo.ads: (Allocate, Deallocate, Dereference): Add comments.\n+\n+\t* gnat_ugn.texi (gnatxref, gnatfind): Clarify that source names should\n+\tbe base names, and not includes directories.\n+\n+2004-06-11  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* Makefile.generic ($(EXEC)): Depend on $(OBJECTS), not $(OBJ_FILES),\n+\tso that dependencies are properly taken into account by make.\n+\n+2004-06-11  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\tPR ada/15622\n+\t* s-unstyp.ads, s-maccod.ads, sem_ch8.adb, s-auxdec.ads,\n+\texp_intr.adb, s-auxdec-vms_64.ads: Fix typo: instrinsic -> intrinsic\n+\n+2004-06-11  Jerome Guitton  <guitton@act-europe.fr>\n+\n+\t* Makefile.in (install-gnatlib): install target-specific run-time files.\n+\n+\t* Make-lang.in: Remove obsolete targets.\n+\n+2004-06-11  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* par-ch12.adb (P_Generic): Add scope before analyzing subprogram\n+\tspecification, to catch misuses of program unit names.\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): Do not emit warnings on\n+\tsuperfluous conversions in an instance.\n+\n+2004-06-11  Ed Schonberg  <schonberg@gnat.com>\n+\n+\tPR ada/15403\n+\n+\t* sem_ch12.adb (Save_References): If operator node has been folded to\n+\tenumeration literal, associated_node must be discarded.\n+\n+2004-06-11  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* s-stchop-vxworks.adb: Add required pragma Convention to\n+\tTask_Descriptor because it is updated by a C function.\n+\n 2004-06-08  Arnaud Charlet  <charlet@act-europe.fr>\n \n \tPR ada/15568"}, {"sha": "05ea6eaac10c803f61ed7b375c199137652fc113", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -279,12 +279,6 @@ gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) \\\n \t     $(LIBS) $(SYSLIBS)\n \n-install-rts-zfp: force\n-\t$(MAKE) -C ada  $(FLAGS_TO_PASS) install-rts RTS_NAME=zfp\n-\n-install-rts-ravenscar: force\n-\t$(MAKE) -C ada  $(FLAGS_TO_PASS) install-rts RTS_NAME=ravenscar\n-\n # use cross-gcc\n gnat-cross: force\n \tmake $(GNAT1_ADA_OBJS) CC=\"gcc -B../stage1/\" CFLAGS=\"-S -gnatp\" \\"}, {"sha": "7ecd218461b747d77865f85956b1a5d50fe13812", "filename": "gcc/ada/Makefile.generic", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FMakefile.generic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FMakefile.generic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.generic?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -344,7 +344,7 @@ link:\n else\n \n link: $(EXEC_DIR)/$(EXEC) archive-objects\n-$(EXEC_DIR)/$(EXEC): $(OBJ_FILES)\n+$(EXEC_DIR)/$(EXEC): $(OBJECTS)\n \t@$(display) $(LINKER) -o $(EXEC_DIR)/$(EXEC) $(OBJ_DIR)/$(MAIN_OBJECT) $(LDFLAGS) $(FLDFLAGS)\n \t@$(LINKER) -o $(EXEC_DIR)/$(EXEC) $(OBJ_DIR)/$(MAIN_OBJECT) $(LDFLAGS) $(FLDFLAGS)\n endif"}, {"sha": "97544297887a3759b5afbef475da9ac3b0556db9", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1622,6 +1622,9 @@ install-gnatlib: ../stamp-gnatlib\n \t    $(INSTALL_DATA) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t    $(RANLIB) $(DESTDIR)$(ADA_RTL_OBJ_DIR)/$$file; \\\n \tdone\n+\t-$(foreach file, $(EXTRA_ADALIB_FILES), \\\n+\t    $(INSTALL_DATA_DATE) rts/$(file) $(DESTDIR)$(ADA_RTL_OBJ_DIR) && \\\n+\t) true\n #     Install the shared libraries, if any, using $(INSTALL) instead\n #     of $(INSTALL_DATA). The latter may force a mode inappropriate\n #     for shared libraries on some targets, e.g. on HP-UX where the x"}, {"sha": "477caa87558da9d66de55d641e02478e66791985", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 2, "deletions": 32, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -331,20 +331,6 @@ package body Ada.Exceptions is\n    --  exception occurrence referenced by the Current_Excep in the TSD.\n    --  Abort is deferred before the raise call.\n \n-   procedure Raise_With_Msg (E : Exception_Id; Setup : Boolean);\n-   pragma No_Return (Raise_With_Msg);\n-   --  Similar to above, with an extra parameter to indicate wether\n-   --  Setup_Exception has been called already.\n-\n-   procedure Raise_After_Setup (E : Exception_Id);\n-   pragma No_Return (Raise_After_Setup);\n-   pragma Export (C, Raise_After_Setup, \"__gnat_raise_after_setup\");\n-   --  Wrapper to Raise_With_Msg and Setup set to True.\n-   --\n-   --  This is called by System.Tasking.Entry_Calls.Check_Exception when an\n-   --  exception has occured during an entry call. The exception to propagate\n-   --  has been setup and initialized via Transfer_Occurrence in this case.\n-\n    procedure Raise_With_Location_And_Msg\n      (E : Exception_Id;\n       F : Big_String_Ptr;\n@@ -993,13 +979,11 @@ package body Ada.Exceptions is\n    -- Raise_With_Msg --\n    --------------------\n \n-   procedure Raise_With_Msg (E : Exception_Id; Setup : Boolean) is\n+   procedure Raise_With_Msg (E : Exception_Id) is\n       Excep : constant EOA := Get_Current_Excep.all;\n \n    begin\n-      if not Setup then\n-         Exception_Propagation.Setup_Exception (Excep, Excep);\n-      end if;\n+      Exception_Propagation.Setup_Exception (Excep, Excep);\n \n       Excep.Exception_Raised := False;\n       Excep.Id               := E;\n@@ -1010,20 +994,6 @@ package body Ada.Exceptions is\n       Raise_Current_Excep (E);\n    end Raise_With_Msg;\n \n-   procedure Raise_With_Msg (E : Exception_Id) is\n-   begin\n-      Raise_With_Msg (E, Setup => False);\n-   end Raise_With_Msg;\n-\n-   -----------------------\n-   -- Raise_After_Setup --\n-   -----------------------\n-\n-   procedure Raise_After_Setup (E : Exception_Id) is\n-   begin\n-      Raise_With_Msg (E, Setup => True);\n-   end Raise_After_Setup;\n-\n    --------------------------------------\n    -- Calls to Run-Time Check Routines --\n    --------------------------------------"}, {"sha": "0d0eb09475942ba7dbc0115300089d538fe6693f", "filename": "gcc/ada/a-exexpr.adb", "status": "modified", "additions": 127, "deletions": 45, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -36,6 +36,8 @@ with Interfaces;\n with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n \n+with System.Storage_Elements;  use System.Storage_Elements;\n+\n pragma Warnings (Off);\n --  Since several constructs give warnings in 3.14a1, including unreferenced\n --  variables and pragma Unreferenced itself.\n@@ -170,22 +172,6 @@ package body Exception_Propagation is\n    procedure Free is new Unchecked_Deallocation\n      (Exception_Occurrence, EOA);\n \n-   function Remove\n-     (Top   : EOA;\n-      Excep : GNAT_GCC_Exception_Access) return Boolean;\n-   --  Remove Excep from the stack starting at Top.\n-   --  Return True if Excep was found and removed, false otherwise.\n-\n-   --  Hooks called when entering/leaving an exception handler for a given\n-   --  occurrence, aimed at handling the stack of active occurrences. The\n-   --  calls are generated by gigi in tree_transform/N_Exception_Handler.\n-\n-   procedure Begin_Handler (GCC_Exception : GNAT_GCC_Exception_Access);\n-   pragma Export (C, Begin_Handler, \"__gnat_begin_handler\");\n-\n-   procedure End_Handler (GCC_Exception : GNAT_GCC_Exception_Access);\n-   pragma Export (C, End_Handler, \"__gnat_end_handler\");\n-\n    function CleanupUnwind_Handler\n      (UW_Version   : Integer;\n       UW_Phases    : Unwind_Action;\n@@ -211,6 +197,41 @@ package body Exception_Propagation is\n       UW_Argument  : System.Address);\n    pragma Import (C, Unwind_ForcedUnwind, \"__gnat_Unwind_ForcedUnwind\");\n \n+   --------------------------------------------\n+   -- Occurrence stack management facilities --\n+   --------------------------------------------\n+\n+   function Remove\n+     (Top   : EOA;\n+      Excep : GNAT_GCC_Exception_Access) return Boolean;\n+   --  Remove Excep from the stack starting at Top.\n+   --  Return True if Excep was found and removed, false otherwise.\n+\n+   --  Hooks called when entering/leaving an exception handler for a given\n+   --  occurrence, aimed at handling the stack of active occurrences. The\n+   --  calls are generated by gigi in tree_transform/N_Exception_Handler.\n+\n+   procedure Begin_Handler (GCC_Exception : GNAT_GCC_Exception_Access);\n+   pragma Export (C, Begin_Handler, \"__gnat_begin_handler\");\n+\n+   procedure End_Handler (GCC_Exception : GNAT_GCC_Exception_Access);\n+   pragma Export (C, End_Handler, \"__gnat_end_handler\");\n+\n+   --  To handle the case of a task \"transferring\" an exception occurrence to\n+   --  another task, for instance via Exceptional_Complete_Rendezvous, we need\n+   --  to be able to identify occurrences which have been Setup and not yet\n+   --  Propagated. We hijack one of the common header fields for that purpose,\n+   --  setting it to a special key value during the setup process, clearing it\n+   --  at the very beginning of the propagation phase, and expecting it never\n+   --  to be reset to the special value later on.\n+\n+   Setup_Key : constant := 16#DEAD_BEEF#;\n+\n+   function Is_Setup_And_Not_Propagated (E : EOA) return Boolean;\n+\n+   procedure Set_Setup_And_Not_Propagated (E : EOA);\n+   procedure Clear_Setup_And_Not_Propagated (E : EOA);\n+\n    ------------------------------------------------------------\n    -- Accessors to basic components of a GNAT exception data --\n    ------------------------------------------------------------\n@@ -316,11 +337,48 @@ package body Exception_Propagation is\n       return URC_NO_REASON;\n    end CleanupUnwind_Handler;\n \n+   ---------------------------------\n+   -- Is_Setup_And_Not_Propagated --\n+   ---------------------------------\n+\n+   function Is_Setup_And_Not_Propagated (E : EOA) return Boolean is\n+      GCC_E : GNAT_GCC_Exception_Access :=\n+        To_GNAT_GCC_Exception (E.Private_Data);\n+   begin\n+      return GCC_E /= null and then GCC_E.Header.Private1 = Setup_Key;\n+   end Is_Setup_And_Not_Propagated;\n+\n+   ------------------------------------\n+   -- Clear_Setup_And_Not_Propagated --\n+   ------------------------------------\n+\n+   procedure Clear_Setup_And_Not_Propagated (E : EOA) is\n+      GCC_E : GNAT_GCC_Exception_Access :=\n+        To_GNAT_GCC_Exception (E.Private_Data);\n+   begin\n+      pragma Assert (GCC_E /= null);\n+      GCC_E.Header.Private1 := 0;\n+   end Clear_Setup_And_Not_Propagated;\n+\n+   ----------------------------------\n+   -- Set_Setup_And_Not_Propagated --\n+   ----------------------------------\n+\n+   procedure Set_Setup_And_Not_Propagated (E : EOA) is\n+      GCC_E : GNAT_GCC_Exception_Access :=\n+        To_GNAT_GCC_Exception (E.Private_Data);\n+   begin\n+      pragma Assert (GCC_E /= null);\n+      GCC_E.Header.Private1 := Setup_Key;\n+   end Set_Setup_And_Not_Propagated;\n+\n    ---------------------\n    -- Setup_Exception --\n    ---------------------\n \n-   --  Push the current exception occurrence on the stack before overriding it.\n+   --  In this implementation of the exception propagation scheme, this\n+   --  subprogram should be understood as: Setup the exception occurrence\n+   --  stack headed at Current for a forthcoming raise of Excep.\n \n    procedure Setup_Exception\n      (Excep    : EOA;\n@@ -331,38 +389,62 @@ package body Exception_Propagation is\n       Next          : EOA;\n       GCC_Exception : GNAT_GCC_Exception_Access;\n \n-      --  Note that we make no use of the Reraised indication at this point.\n-\n-      --  The information is still passed around just in case of future needs,\n-      --  since we've already switched between using/not-using it a number of\n-      --  times.\n-\n    begin\n-      --  If the current exception is not live, the stack is empty and there\n-      --  is nothing to do. Note that the stack always appears empty for\n-      --  mechanisms that do not require one. For the mechanism we implement\n-      --  in this unit, the initial Private_Data allocation for an occurrence\n-      --  is issued by Propagate_Exception.\n \n-      if Top.Private_Data = System.Null_Address then\n+      --  The exception Excep is soon to be propagated, and the storage used\n+      --  for that will be the occurrence statically allocated for the current\n+      --  thread. This storage might currently be used for a still active\n+      --  occurrence, so we need to push it on the thread's occurrence stack\n+      --  (headed at that static occurrence) before it gets clobbered.\n+\n+      --  What we do here is to trigger this push when need be, and allocate a\n+      --  Private_Data block for the forthcoming Propagation.\n+\n+      --  Some tasking rendez-vous attempts lead to an occurrence transfer\n+      --  from the server to the client (see Exceptional_Complete_Rendezvous).\n+      --  In those cases Setup is called twice for the very same occurrence\n+      --  before it gets propagated: once from the server, because this is\n+      --  where the occurrence contents is elaborated and known, and then\n+      --  once from the client when it detects the case and actually raises\n+      --  the exception in its own context.\n+\n+      --  The Is_Setup_And_Not_Propagated predicate tells us when we are in\n+      --  the second call to Setup for a Transferred occurrence, and there is\n+      --  nothing to be done here in this situation. This predicate cannot be\n+      --  True if we are dealing with a Reraise, and we may even be called\n+      --  with a raw uninitialized Excep occurrence in this case so we should\n+      --  not check anyway. Observe the front-end expansion for a \"raise;\" to\n+      --  see that happening. We get a local occurrence and a direct call to\n+      --  Save_Occurrence without the intermediate init-proc call.\n+\n+      if not Reraised and then Is_Setup_And_Not_Propagated (Excep) then\n          return;\n       end if;\n \n-      --  Shift the contents of the Top of the stack in a freshly allocated\n-      --  entry, which leaves the room in the fixed Top entry available for the\n-      --  occurrence about to be propagated.\n+      --  Allocate what will be the Private_Data block for the exception\n+      --  to be propagated.\n \n-      Next := new Exception_Occurrence;\n-      Save_Occurrence_And_Private (Next.all, Top.all);\n+      GCC_Exception := new GNAT_GCC_Exception;\n \n-      --  Allocate Private_Data for the occurrence about to be propagated\n-      --  and link everything together.\n+      --  If the Top of the occurrence stack is not currently used for an\n+      --  active exception (the stack is empty) we just need to setup the\n+      --  Private_Data pointer.\n \n-      GCC_Exception := new GNAT_GCC_Exception;\n-      GCC_Exception.Next_Exception := Next;\n+      --  Otherwise, we also need to shift the contents of the Top of the\n+      --  stack in a freshly allocated entry and link everything together.\n+\n+      if Top.Private_Data /= System.Null_Address then\n+         Next := new Exception_Occurrence;\n+         Save_Occurrence_And_Private (Next.all, Top.all);\n+\n+         GCC_Exception.Next_Exception := Next;\n+         Top.Private_Data := GCC_Exception.all'Address;\n+      end if;\n \n       Top.Private_Data := GCC_Exception.all'Address;\n \n+      Set_Setup_And_Not_Propagated (Top);\n+\n    end Setup_Exception;\n \n    -------------------\n@@ -403,16 +485,16 @@ package body Exception_Propagation is\n       GCC_Exception : GNAT_GCC_Exception_Access;\n \n    begin\n-      if Excep.Private_Data = System.Null_Address then\n-         GCC_Exception := new GNAT_GCC_Exception;\n-         Excep.Private_Data := GCC_Exception.all'Address;\n-      else\n-         GCC_Exception := To_GNAT_GCC_Exception (Excep.Private_Data);\n-      end if;\n+      pragma Assert (Excep.Private_Data /= System.Null_Address);\n \n-      --  Fill in the useful flags for the personality routine called for each\n+      --  Retrieve the Private_Data for this occurrence and set the useful\n+      --  flags for the personality routine, which will be called for each\n       --  frame via Unwind_RaiseException below.\n \n+      GCC_Exception := To_GNAT_GCC_Exception (Excep.Private_Data);\n+\n+      Clear_Setup_And_Not_Propagated (Excep);\n+\n       GCC_Exception.Id := Excep.Id;\n       GCC_Exception.N_Cleanups_To_Trigger := 0;\n "}, {"sha": "7327be8b246401547645c638518e0864e98bbfe9", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1250,8 +1250,8 @@ package Einfo is\n --    Has_Completion (Flag26)\n --       Present in all entities that require a completion (functions,\n --       procedures, private types, limited private types, incomplete types,\n---       and packages that require a body). Set if the completion has been\n---       encountered and analyzed.\n+--       constants and packages that require a body). The flag is set if the\n+--       completion has been encountered and analyzed.\n \n --    Has_Completion_In_Body (Flag71)\n --       Present in  \"Taft amendment types\" that is to say incomplete types\n@@ -4142,6 +4142,7 @@ package Einfo is\n    --    Has_Alignment_Clause          (Flag46)\n    --    Has_Atomic_Components         (Flag86)\n    --    Has_Biased_Representation     (Flag139)\n+   --    Has_Completion                (Flag26)   (constants only)\n    --    Has_Size_Clause               (Flag29)\n    --    Has_Volatile_Components       (Flag87)\n    --    Is_Atomic                     (Flag85)"}, {"sha": "00a131dd623d23afa9b18928024b330e3774522f", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -382,14 +382,10 @@ package body Eval_Fat is\n       Calculate_Fraction_And_Exponent : begin\n          Uintp_Mark := Mark;\n \n-         --  Put back sign before applying the rounding.\n-\n-         if UR_Is_Negative (X) then\n-            Fraction := -Fraction;\n-         end if;\n-\n          --  Determine correct rounding based on the remainder\n-         --  which is in N and the divisor D.\n+         --  which is in N and the divisor D. The rounding is\n+         --  performed on the absolute value of X, so Ceiling\n+         --  and Floor need to check for the sign of X explicitly.\n \n          case Mode is\n             when Round_Even =>\n@@ -416,11 +412,14 @@ package body Eval_Fat is\n                end if;\n \n             when Ceiling =>\n-               if N > Uint_0 then\n+               if N > Uint_0 and then not UR_Is_Negative (X) then\n                   Fraction := Fraction + 1;\n                end if;\n \n-            when Floor   => null;\n+            when Floor   =>\n+               if N > Uint_0 and then UR_Is_Negative (X) then\n+                  Fraction := Fraction + 1;\n+               end if;\n          end case;\n \n          --  The result must be normalized to [1.0/Radix, 1.0),\n@@ -431,6 +430,12 @@ package body Eval_Fat is\n             Exponent := Exponent + 1;\n          end if;\n \n+         --  Put back sign after applying the rounding.\n+\n+         if UR_Is_Negative (X) then\n+            Fraction := -Fraction;\n+         end if;\n+\n          Release_And_Save (Uintp_Mark, Fraction, Exponent);\n       end Calculate_Fraction_And_Exponent;\n    end Decompose_Int;"}, {"sha": "966670d68c2b1df76975c54208b4c5cfbeb09c78", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -519,8 +519,9 @@ package body Exp_Ch2 is\n       P_Comp_Ref :=\n         Make_Selected_Component (Loc,\n           Prefix =>\n-            Unchecked_Convert_To (Parm_Type,\n-              New_Reference_To (Addr_Ent, Loc)),\n+            Make_Explicit_Dereference (Loc,\n+              Unchecked_Convert_To (Parm_Type,\n+                New_Reference_To (Addr_Ent, Loc))),\n           Selector_Name =>\n             New_Reference_To (Entry_Component (Ent_Formal), Loc));\n "}, {"sha": "edb31846708dc8c1a2a14031c8bcd7717597451c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -2278,6 +2278,9 @@ package body Exp_Ch6 is\n       --  If procedure body has no local variables, inline body without\n       --  creating block,  otherwise rewrite call with block.\n \n+      function Formal_Is_Used_Once (Formal : Entity_Id) return Boolean;\n+      --  Determine whether a formal parameter is used only once in Orig_Bod\n+\n       ---------------------\n       -- Make_Exit_Label --\n       ---------------------\n@@ -2512,6 +2515,62 @@ package body Exp_Ch6 is\n          end if;\n       end Rewrite_Procedure_Call;\n \n+      -------------------------\n+      -- Formal_Is_Used_Once --\n+      ------------------------\n+\n+      function Formal_Is_Used_Once (Formal : Entity_Id) return Boolean is\n+         Use_Counter : Int := 0;\n+\n+         function Count_Uses (N : Node_Id) return Traverse_Result;\n+         --  Traverse the tree and count the uses of the formal parameter.\n+         --  In this case, for optimization purposes, we do not need to\n+         --  continue the traversal once more than one use is encountered.\n+\n+         function Count_Uses (N : Node_Id) return Traverse_Result is\n+         begin\n+\n+            --  The original node is an identifier\n+\n+            if Nkind (N) = N_Identifier\n+              and then Present (Entity (N))\n+\n+               --  The original node's entity points to the one in the\n+               --  copied body.\n+\n+              and then Nkind (Entity (N)) = N_Identifier\n+              and then Present (Entity (Entity (N)))\n+\n+               --  The entity of the copied node is the formal parameter\n+\n+              and then Entity (Entity (N)) = Formal\n+            then\n+               Use_Counter := Use_Counter + 1;\n+\n+               if Use_Counter > 1 then\n+\n+                  --  Denote more than one use and abandon the traversal\n+\n+                  Use_Counter := 2;\n+                  return Abandon;\n+\n+               end if;\n+            end if;\n+\n+            return OK;\n+         end Count_Uses;\n+\n+         procedure Count_Formal_Uses is new Traverse_Proc (Count_Uses);\n+\n+      --  Start of processing for Formal_Is_Used_Once\n+\n+      begin\n+\n+         Count_Formal_Uses (Orig_Bod);\n+         return Use_Counter = 1;\n+\n+      end Formal_Is_Used_Once;\n+\n    --  Start of processing for Expand_Inlined_Call\n \n    begin\n@@ -2608,6 +2667,13 @@ package body Exp_Ch6 is\n                (not Is_Scalar_Type (Etype (A))\n                  or else Ekind (Entity (A)) = E_Enumeration_Literal))\n \n+         --  When the actual is an identifier and the corresponding formal\n+         --  is used only once in the original body, the formal can be\n+         --  substituted directly with the actual parameter.\n+\n+           or else (Nkind (A) = N_Identifier\n+             and then Formal_Is_Used_Once (F))\n+\n            or else Nkind (A) = N_Real_Literal\n            or else Nkind (A) = N_Integer_Literal\n            or else Nkind (A) = N_Character_Literal"}, {"sha": "f7014d25f937cb6bfe1a3484faedc1f86ef9126c", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -72,7 +72,7 @@ package body Exp_Intr is\n \n    procedure Expand_Shift (N : Node_Id; E : Entity_Id; K : Node_Kind);\n    --  Expand an intrinsic shift operation, N and E are from the call to\n-   --  Expand_Instrinsic_Call (call node and subprogram spec entity) and\n+   --  Expand_Intrinsic_Call (call node and subprogram spec entity) and\n    --  K is the kind for the shift node\n \n    procedure Expand_Unc_Conversion (N : Node_Id; E : Entity_Id);"}, {"sha": "340c2f65158dfba48dc5304f0c93acb760782147", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1095,7 +1095,7 @@ package body GNAT.Debug_Pools is\n          if Pool.Raise_Exceptions then\n             raise Freeing_Not_Allocated_Storage;\n          else\n-            Put (\"Freeing not allocated storage, at \");\n+            Put (\"error: Freeing not allocated storage, at \");\n             Put_Line (Pool.Stack_Trace_Depth, null,\n                       Deallocate_Label'Address,\n                       Code_Address_For_Deallocate_End);\n@@ -1106,7 +1106,7 @@ package body GNAT.Debug_Pools is\n          if Pool.Raise_Exceptions then\n             raise Freeing_Deallocated_Storage;\n          else\n-            Put (\"Freeing already deallocated storage, at \");\n+            Put (\"error: Freeing already deallocated storage, at \");\n             Put_Line (Pool.Stack_Trace_Depth, null,\n                       Deallocate_Label'Address,\n                       Code_Address_For_Deallocate_End);\n@@ -1225,7 +1225,7 @@ package body GNAT.Debug_Pools is\n          if Pool.Raise_Exceptions then\n             raise Accessing_Not_Allocated_Storage;\n          else\n-            Put (\"Accessing not allocated storage, at \");\n+            Put (\"error: Accessing not allocated storage, at \");\n             Put_Line (Pool.Stack_Trace_Depth, null,\n                       Dereference_Label'Address,\n                       Code_Address_For_Dereference_End);\n@@ -1238,7 +1238,7 @@ package body GNAT.Debug_Pools is\n             if Pool.Raise_Exceptions then\n                raise Accessing_Deallocated_Storage;\n             else\n-               Put (\"Accessing deallocated storage, at \");\n+               Put (\"error: Accessing deallocated storage, at \");\n                Put_Line\n                  (Pool.Stack_Trace_Depth, null,\n                   Dereference_Label'Address,"}, {"sha": "6207f93878d9e5ff131fc491b228644bedd4f48a", "filename": "gcc/ada/g-debpoo.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fg-debpoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fg-debpoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -249,20 +249,35 @@ private\n       Storage_Address          : out Address;\n       Size_In_Storage_Elements : Storage_Count;\n       Alignment                : Storage_Count);\n+   --  Allocate a new chunk of memory, and set it up so that the debug pool\n+   --  can check accesses to its data, and report incorrect access later on.\n+   --  The parameters have the same semantics as defined in the ARM95.\n \n    procedure Deallocate\n      (Pool                     : in out Debug_Pool;\n       Storage_Address          : Address;\n       Size_In_Storage_Elements : Storage_Count;\n       Alignment                : Storage_Count);\n+   --  Mark a block of memory as invalid. It might not be physically removed\n+   --  immediately, depending on the setup of the debug pool, so that checks\n+   --  are still possible.\n+   --  The parameters have the same semantics as defined in the ARM95.\n \n    function Storage_Size (Pool : Debug_Pool) return SSC;\n+   --  Return the maximal size of data that can be allocated through Pool.\n+   --  Since Pool uses the malloc() system call, all the memory is accessible\n+   --  through the pool\n \n    procedure Dereference\n      (Pool                     : in out Debug_Pool;\n       Storage_Address          : System.Address;\n       Size_In_Storage_Elements : Storage_Count;\n       Alignment                : Storage_Count);\n+   --  Check whether a derefence statement is valid, ie whether the pointer\n+   --  was allocated through Pool. As documented above, errors will be\n+   --  reported either by a special error message or an exception, depending\n+   --  on the setup of the storage pool.\n+   --  The parameters have the same semantics as defined in the ARM95.\n \n    type Byte_Count is mod System.Max_Binary_Modulus;\n    --  Type used for maintaining byte counts, needs to be large enough"}, {"sha": "809973c7d089a271d691604486de79b81fc71bbb", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -280,10 +280,10 @@ Switches for gcc\n * Output and Error Message Control::\n * Warning Message Control::\n * Debugging and Assertion Control::\n-* Run-Time Checks::\n-* Stack Overflow Checking::\n * Validity Checking::\n * Style Checking::\n+* Run-Time Checks::\n+* Stack Overflow Checking::\n * Using gcc for Syntax Checking::\n * Using gcc for Semantic Checking::\n * Compiling Ada 83 Programs::\n@@ -3631,10 +3631,10 @@ describe the switches in more detail in functionally grouped sections.\n * Output and Error Message Control::\n * Warning Message Control::\n * Debugging and Assertion Control::\n-* Run-Time Checks::\n-* Stack Overflow Checking::\n * Validity Checking::\n * Style Checking::\n+* Run-Time Checks::\n+* Stack Overflow Checking::\n * Using gcc for Syntax Checking::\n * Using gcc for Semantic Checking::\n * Compiling Ada 83 Programs::\n@@ -12435,6 +12435,8 @@ The @code{Library_Dir} attribute has a string value that designates the path\n (absolute or relative) of the directory where the library will reside.\n It must designate an existing directory, and this directory must be\n different from the project's object directory. It also needs to be writable.\n+The directory should only be used for one library; the reason is that all\n+files contained in this directory may be deleted by the Project Manager.\n \n If both @code{Library_Name} and @code{Library_Dir} are specified and\n are legal, then the project file defines a library project.  The optional\n@@ -13758,6 +13760,10 @@ specifying @file{source*.adb} is the same as giving every file in the current\n directory whose name starts with @file{source} and whose extension is\n @file{adb}.\n \n+You shouldn't specify any directory name, just base names. @command{gnatxref}\n+and @command{gnatfind} will be able to locate these files by themselves using\n+the source path. If you specify directories, no result is produced.\n+\n @end table\n \n @noindent"}, {"sha": "6d5595e7264569d2f72cb9eca8927ed159d135ba", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -43,6 +43,7 @@ with Osint;    use Osint;\n with Osint.B;  use Osint.B;\n with Output;   use Output;\n with Rident;   use Rident;\n+with Snames;\n with Switch;   use Switch;\n with Switch.B; use Switch.B;\n with Targparm; use Targparm;\n@@ -444,6 +445,7 @@ begin\n \n    Csets.Initialize;\n    Namet.Initialize;\n+   Snames.Initialize;\n \n    --  Acquire target parameters\n "}, {"sha": "f639f43fd14893c3e7e31f69ddd8ff2035505c27", "filename": "gcc/ada/gnatsym.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fgnatsym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fgnatsym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatsym.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -124,7 +124,7 @@ procedure Gnatsym is\n    procedure Parse_Cmd_Line is\n    begin\n       loop\n-         case GNAT.Command_Line.Getopt (\"c C q r: s: v V:\") is\n+         case GNAT.Command_Line.Getopt (\"c C q r: R s: v V:\") is\n             when ASCII.NUL =>\n                exit;\n \n@@ -141,6 +141,9 @@ procedure Gnatsym is\n                Reference_Symbol_File_Name :=\n                  new String'(GNAT.Command_Line.Parameter);\n \n+            when 'R' =>\n+               Symbol_Policy := Restricted;\n+\n             when 's' =>\n                Symbol_File_Name := new String'(GNAT.Command_Line.Parameter);\n \n@@ -183,10 +186,11 @@ procedure Gnatsym is\n    begin\n       Write_Line (\"gnatsym [options] object_file {object_file}\");\n       Write_Eol;\n-      Write_Line (\"   -c       Compliant policy\");\n-      Write_Line (\"   -C       Controlled policy\");\n+      Write_Line (\"   -c       Compliant symbol policy\");\n+      Write_Line (\"   -C       Controlled symbol policy\");\n       Write_Line (\"   -q       Quiet mode\");\n       Write_Line (\"   -r<ref>  Reference symbol file name\");\n+      Write_Line (\"   -R       Restricted symbol policy\");\n       Write_Line (\"   -s<sym>  Symbol file name\");\n       Write_Line (\"   -v       Verbose mode\");\n       Write_Line (\"   -V<ver>  Version\");"}, {"sha": "3de414cce223ec73dfe586e6efd9e14f66bd8192", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 55, "deletions": 41, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -502,12 +502,8 @@ package body Make is\n    procedure Debug_Msg (S : String; N : Name_Id);\n    --  If Debug.Debug_Flag_W is set outputs string S followed by name N.\n \n-   type Project_Array is array (Positive range <>) of Project_Id;\n-   No_Projects : constant Project_Array := (1 .. 0 => No_Project);\n-\n    procedure Recursive_Compute_Depth\n      (Project : Project_Id;\n-      Visited : Project_Array;\n       Depth   : Natural);\n    --  Compute depth of Project and of the projects it depends on\n \n@@ -5554,8 +5550,6 @@ package body Make is\n    ----------------\n \n    procedure Initialize is\n-      Next_Arg : Positive;\n-\n    begin\n       --  Override default initialization of Check_Object_Consistency\n       --  since this is normally False for GNATBIND, but is True for\n@@ -5585,10 +5579,37 @@ package body Make is\n \n       Mains.Delete;\n \n-      Next_Arg := 1;\n-      Scan_Args : while Next_Arg <= Argument_Count loop\n+      --  Add the directory where gnatmake is invoked in the front of the\n+      --  path, if gnatmake is invoked with directory information.\n+      --  Only do this if the platform is not VMS, where the notion of path\n+      --  does not really exist.\n+\n+      if not OpenVMS then\n+         declare\n+            Command : constant String := Command_Name;\n+         begin\n+            for Index in reverse Command'Range loop\n+               if Command (Index) = Directory_Separator then\n+                  declare\n+                     Absolute_Dir : constant String :=\n+                       Normalize_Pathname (Command (Command'First .. Index));\n+                     PATH : constant String :=\n+                       Absolute_Dir & Path_Separator & Getenv (\"PATH\").all;\n+\n+                  begin\n+                     Setenv (\"PATH\", PATH);\n+                  end;\n+\n+                  exit;\n+               end if;\n+            end loop;\n+         end;\n+      end if;\n+\n+      --  Scan the switches and arguments\n+\n+      Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n          Scan_Make_Arg (Argument (Next_Arg), And_Save => True);\n-         Next_Arg := Next_Arg + 1;\n       end loop Scan_Args;\n \n       if Usage_Requested then\n@@ -5688,8 +5709,13 @@ package body Make is\n \n          --  Compute depth of each project\n \n+         for Proj in 1 .. Projects.Last loop\n+            Projects.Table (Proj).Seen := False;\n+            Projects.Table (Proj).Depth := 0;\n+         end loop;\n+\n          Recursive_Compute_Depth\n-           (Main_Project, Visited => No_Projects, Depth => 0);\n+           (Main_Project, Depth => 1);\n \n       else\n \n@@ -6189,26 +6215,28 @@ package body Make is\n \n    procedure Recursive_Compute_Depth\n      (Project : Project_Id;\n-      Visited : Project_Array;\n       Depth   : Natural)\n    is\n       List : Project_List;\n       Proj : Project_Id;\n-      OK : Boolean;\n-      New_Visited : constant Project_Array := Visited & Project;\n \n    begin\n-      --  Nothing to do if there is no project\n+      --  Nothing to do if there is no project or if the project has already\n+      --  been seen or if the depth is large enough.\n \n-      if Project = No_Project then\n+      if Project = No_Project\n+        or else Projects.Table (Project).Seen\n+        or else Projects.Table (Project).Depth >= Depth\n+      then\n          return;\n       end if;\n \n-      --  If current depth of project is lower than Depth, adjust it\n+      Projects.Table (Project).Depth := Depth;\n \n-      if Projects.Table (Project).Depth < Depth then\n-         Projects.Table (Project).Depth := Depth;\n-      end if;\n+      --  Mark the project as Seen to avoid endless loop caused by limited\n+      --  withs.\n+\n+      Projects.Table (Project).Seen := True;\n \n       List := Projects.Table (Project).Imported_Projects;\n \n@@ -6217,34 +6245,20 @@ package body Make is\n       while List /= Empty_Project_List loop\n          Proj := Project_Lists.Table (List).Project;\n          List := Project_Lists.Table (List).Next;\n-\n-         OK := True;\n-\n-         --  To avoid endless loops due to cycles with limited widts,\n-         --  do not revisit a project that is already in the chain of imports\n-         --  that brought us here.\n-\n-         for J in Visited'Range loop\n-            if Visited (J) = Proj then\n-               OK := False;\n-               exit;\n-            end if;\n-         end loop;\n-\n-         if OK then\n-            Recursive_Compute_Depth\n-              (Project => Proj,\n-               Visited => New_Visited,\n-               Depth => Depth + 1);\n-         end if;\n+         Recursive_Compute_Depth\n+           (Project => Proj,\n+            Depth => Depth + 1);\n       end loop;\n \n       --  Visit a project being extended, if any\n \n       Recursive_Compute_Depth\n         (Project => Projects.Table (Project).Extends,\n-         Visited => New_Visited,\n-         Depth => Depth + 1);\n+         Depth   => Depth + 1);\n+\n+      --  Reset the Seen flag, as we leave this project\n+\n+      Projects.Table (Project).Seen := False;\n    end Recursive_Compute_Depth;\n \n    -----------------------"}, {"sha": "691a6de930de86adc229e13a4fc364e470e5f2ae", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -392,7 +392,10 @@ package body Makegpr is\n       First_Source : Other_Source_Id);\n    --  ??? needs comment\n \n-   procedure Display_Command (Name : String; Path : String_Access);\n+   procedure Display_Command\n+     (Name  : String;\n+      Path  : String_Access;\n+      CPATH : String_Access := null);\n    --  Display the command for a spawned process, if in Verbose_Mode or\n    --  not in Quiet_Output.\n \n@@ -1625,6 +1628,7 @@ package body Makegpr is\n    is\n       Source  : Other_Source := Other_Sources.Table (Source_Id);\n       Success : Boolean;\n+      CPATH   : String_Access := null;\n \n    begin\n       --  If the compiler is not know yet, get its path name\n@@ -1808,11 +1812,18 @@ package body Makegpr is\n \n       Add_Search_Directories (Data, Source.Language);\n \n+      --  Set CPATH, if compiler is GCC\n+\n+      if Compiler_Is_Gcc (Source.Language) then\n+         CPATH := Current_Include_Paths (Source.Language);\n+      end if;\n+\n       --  And invoke the compiler\n \n       Display_Command\n-        (Compiler_Names (Source.Language).all,\n-         Compiler_Paths (Source.Language));\n+        (Name  => Compiler_Names (Source.Language).all,\n+         Path  => Compiler_Paths (Source.Language),\n+         CPATH => CPATH);\n \n       Spawn\n         (Compiler_Paths (Source.Language).all,\n@@ -1881,6 +1892,10 @@ package body Makegpr is\n       Get_Imported_Directories (Main_Project, Data);\n       Projects.Table (Main_Project) := Data;\n \n+      --  Compilation will occur in the object directory\n+\n+      Change_Dir (Get_Name_String (Data.Object_Directory));\n+\n       if not Data.Sources_Present then\n          if Ada_Is_A_Language then\n             Mains.Reset;\n@@ -2238,7 +2253,11 @@ package body Makegpr is\n    -- Display_Command --\n    ---------------------\n \n-   procedure Display_Command (Name : String; Path : String_Access) is\n+   procedure Display_Command\n+     (Name  : String;\n+      Path  : String_Access;\n+      CPATH : String_Access := null)\n+   is\n    begin\n       --  Only display the command in Verbose Mode (-v) or when\n       --  not in Quiet Output (no -q).\n@@ -2247,6 +2266,11 @@ package body Makegpr is\n          --  In Verbose Mode output the full path of the spawned process\n \n          if Verbose_Mode then\n+            if CPATH /= null then\n+               Write_Str  (\"CPATH = \");\n+               Write_Line (CPATH.all);\n+            end if;\n+\n             Write_Str (Path.all);\n \n          else\n@@ -2584,8 +2608,6 @@ package body Makegpr is\n    ----------------\n \n    procedure Initialize is\n-      Next_Arg : Positive;\n-\n    begin\n       --  Do some necessary package initializations\n \n@@ -2605,13 +2627,10 @@ package body Makegpr is\n       Add_Str_To_Name_Buffer (\"compiler_command\");\n       Name_Compiler_Command := Name_Find;\n \n-      Next_Arg := 1;\n-\n       --  Get the command line arguments\n \n-      Scan_Args : while Next_Arg <= Argument_Count loop\n+      Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n          Scan_Arg (Argument (Next_Arg));\n-         Next_Arg := Next_Arg + 1;\n       end loop Scan_Args;\n \n       --  Fail if command line ended with \"-P\""}, {"sha": "b3b71722fb693b633d7a8d4f3f249fb511e6e9f1", "filename": "gcc/ada/mlib-tgt-vms-alpha.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -438,6 +438,10 @@ package body MLib.Tgt is\n          when Controlled =>\n             Last_Argument := Last_Argument + 1;\n             Arguments (Last_Argument) := new String'(\"-C\");\n+\n+         when Restricted =>\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(\"-R\");\n       end case;\n \n       --  Add each relevant object file"}, {"sha": "5ce66cce12e227d6e4168456cf6403c7ae6eddeb", "filename": "gcc/ada/mlib-tgt-vms-ia64.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -471,6 +471,10 @@ package body MLib.Tgt is\n          when Controlled =>\n             Last_Argument := Last_Argument + 1;\n             Arguments (Last_Argument) := new String'(\"-C\");\n+\n+         when Restricted =>\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(\"-R\");\n       end case;\n \n       --  Add each relevant object file"}, {"sha": "4dd2b1e01cd53c6f72b44bc36719059fa177de57", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -200,7 +200,15 @@ package body Ch12 is\n          Set_Specification (Gen_Decl, P_Package (Pf_Spcn));\n       else\n          Gen_Decl := New_Node (N_Generic_Subprogram_Declaration, Gen_Sloc);\n+\n          Set_Specification (Gen_Decl, P_Subprogram_Specification);\n+\n+         if Nkind (Defining_Unit_Name (Specification (Gen_Decl)))\n+           = N_Defining_Program_Unit_Name\n+           and then Scope.Last > 0\n+         then\n+            Error_Msg_SP (\"child unit allowed only at library level\");\n+         end if;\n          TF_Semicolon;\n       end if;\n "}, {"sha": "35cb8c0c13594210756ac8867399862d1fee61ce", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -26,6 +26,7 @@\n \n with Err_Vars; use Err_Vars;\n with Namet;    use Namet;\n+with Opt;      use Opt;\n with Prj.Err;  use Prj.Err;\n with Prj.Strt; use Prj.Strt;\n with Prj.Tree; use Prj.Tree;\n@@ -535,7 +536,10 @@ package body Prj.Dect is\n \n       First_Declarative_Item : Project_Node_Id := Empty_Node;\n \n-      First_Choice : Project_Node_Id := Empty_Node;\n+      First_Choice           : Project_Node_Id := Empty_Node;\n+\n+      When_Others            : Boolean := False;\n+      --  Set to True when there is a \"when others =>\" clause\n \n    begin\n       Case_Construction  :=\n@@ -612,6 +616,7 @@ package body Prj.Dect is\n          Scan;\n \n          if Token = Tok_Others then\n+            When_Others := True;\n \n             --  Scan past \"others\"\n \n@@ -661,7 +666,9 @@ package body Prj.Dect is\n          end if;\n       end loop When_Loop;\n \n-      End_Case_Construction;\n+      End_Case_Construction\n+        (Check_All_Labels => not When_Others and not Quiet_Output,\n+         Case_Location    => Location_Of (Case_Construction));\n \n       Expect (Tok_End, \"`END CASE`\");\n       Remove_Next_End_Node;"}, {"sha": "c87b7e3f722294fa735d93e86cef60667fdafea7", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 41, "deletions": 27, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1209,7 +1209,44 @@ package body Prj.Nmsc is\n                   end;\n                end if;\n \n-               if not Lib_Symbol_File.Default then\n+               if not Lib_Symbol_Policy.Default then\n+                  declare\n+                     Value : constant String :=\n+                               To_Lower\n+                                 (Get_Name_String (Lib_Symbol_Policy.Value));\n+\n+                  begin\n+                     if Value = \"autonomous\" or else Value = \"default\" then\n+                        Data.Symbol_Data.Symbol_Policy := Autonomous;\n+\n+                     elsif Value = \"compliant\" then\n+                        Data.Symbol_Data.Symbol_Policy := Compliant;\n+\n+                     elsif Value = \"controlled\" then\n+                        Data.Symbol_Data.Symbol_Policy := Controlled;\n+\n+                     elsif Value = \"restricted\" then\n+                        Data.Symbol_Data.Symbol_Policy := Restricted;\n+\n+                     else\n+                        Error_Msg\n+                          (Project,\n+                           \"illegal value for Library_Symbol_Policy\",\n+                           Lib_Symbol_Policy.Location);\n+                     end if;\n+                  end;\n+               end if;\n+\n+               if Lib_Symbol_File.Default then\n+                  if Data.Symbol_Data.Symbol_Policy = Restricted then\n+                     Error_Msg\n+                       (Project,\n+                        \"Library_Symbol_File needs to be defined when \" &\n+                        \"symbol policy is Restricted\",\n+                        Lib_Symbol_Policy.Location);\n+                  end if;\n+\n+               else\n                   Data.Symbol_Data.Symbol_File := Lib_Symbol_File.Value;\n \n                   Get_Name_String (Lib_Symbol_File.Value);\n@@ -1245,33 +1282,10 @@ package body Prj.Nmsc is\n                   end if;\n                end if;\n \n-               if not Lib_Symbol_Policy.Default then\n-                  declare\n-                     Value : constant String :=\n-                               To_Lower\n-                                 (Get_Name_String (Lib_Symbol_Policy.Value));\n-\n-                  begin\n-                     if Value = \"autonomous\" or else Value = \"default\" then\n-                        Data.Symbol_Data.Symbol_Policy := Autonomous;\n-\n-                     elsif Value = \"compliant\" then\n-                        Data.Symbol_Data.Symbol_Policy := Compliant;\n-\n-                     elsif Value = \"controlled\" then\n-                        Data.Symbol_Data.Symbol_Policy := Controlled;\n-\n-                     else\n-                        Error_Msg\n-                          (Project,\n-                           \"illegal value for Library_Symbol_Policy\",\n-                           Lib_Symbol_Policy.Location);\n-                     end if;\n-                  end;\n-               end if;\n-\n                if Lib_Ref_Symbol_File.Default then\n-                  if Data.Symbol_Data.Symbol_Policy /= Autonomous then\n+                  if Data.Symbol_Data.Symbol_Policy = Compliant\n+                    or else Data.Symbol_Data.Symbol_Policy = Controlled\n+                  then\n                      Error_Msg\n                        (Project,\n                         \"a reference symbol file need to be defined\","}, {"sha": "dabd2a1730d4c962d803a7bdc7461ea877b1810d", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -260,8 +260,48 @@ package body Prj.Strt is\n    -- End_Case_Construction --\n    ---------------------------\n \n-   procedure End_Case_Construction is\n+   procedure End_Case_Construction\n+     (Check_All_Labels   : Boolean;\n+      Case_Location      : Source_Ptr)\n+   is\n+      Non_Used : Natural := 0;\n+      First_Non_Used : Choice_Node_Id := First_Choice_Node_Id;\n    begin\n+      --  First, if Check_All_Labels is True, check if all values\n+      --  of the string type have been used.\n+\n+      if Check_All_Labels then\n+         for Choice in Choice_First .. Choices.Last loop\n+               if not Choices.Table (Choice).Already_Used then\n+                  Non_Used := Non_Used + 1;\n+\n+                  if Non_Used = 1 then\n+                     First_Non_Used := Choice;\n+                  end if;\n+               end if;\n+         end loop;\n+\n+         --  If only one is not used, report a single warning for this value\n+         if Non_Used = 1 then\n+            Error_Msg_Name_1 := Choices.Table (First_Non_Used).The_String;\n+            Error_Msg (\"?value { is not used as label\", Case_Location);\n+\n+         --  If several are not used, report a warning for each one of them\n+\n+         elsif Non_Used > 1 then\n+            Error_Msg\n+              (\"?the following values are not used as labels:\",\n+               Case_Location);\n+\n+            for Choice in First_Non_Used .. Choices.Last loop\n+               if not Choices.Table (Choice).Already_Used then\n+                  Error_Msg_Name_1 := Choices.Table (Choice).The_String;\n+                  Error_Msg (\"\\?{\", Case_Location);\n+               end if;\n+            end loop;\n+         end if;\n+      end if;\n+\n       --  If this is the only case construction, empty the tables\n \n       if Choice_Lasts.Last = 1 then"}, {"sha": "612a3984d27fdf9741c02f84ee4ad4bc8e5cf2ee", "filename": "gcc/ada/prj-strt.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-strt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj-strt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -53,11 +53,16 @@ private package Prj.Strt is\n    --  into a table to be checked against the case labels of the\n    --  case construction.\n \n-   procedure End_Case_Construction;\n+   procedure End_Case_Construction\n+     (Check_All_Labels   : Boolean;\n+      Case_Location      : Source_Ptr);\n    --  This procedure is called at the end of a case construction\n    --  to remove the case labels and to restore the previous state.\n    --  In particular, in the case of nested case constructions,\n    --  the case labels of the enclosing case construction are restored.\n+   --  When When_Others is False and we are not in quiet output, a warning\n+   --  is emitted for each value of the case variable string type that has\n+   --  not been specified.\n \n    procedure Parse_Choice_List\n      (First_Choice : out Project_Node_Id);"}, {"sha": "0edac399d6b84f9b8c6ead63bea46ed6df24eb91", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -172,8 +172,8 @@ package Prj is\n \n    type Lib_Kind is (Static, Dynamic, Relocatable);\n \n-   type Policy is (Autonomous, Compliant, Controlled);\n-   --  See explaination about this type in package Symbol\n+   type Policy is (Autonomous, Compliant, Controlled, Restricted);\n+   --  See explaination about this type in package Symbols\n \n    type Symbol_Record is record\n       Symbol_File   : Name_Id := No_Name;"}, {"sha": "111be333b94b5519c8242f4da97ef25e986e5af4", "filename": "gcc/ada/s-auxdec-vms_64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-auxdec-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-auxdec-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms_64.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -463,7 +463,7 @@ private\n    --  convention C so that the critical parameters are passed by reference.\n    --  Without this, the parameters are passed by copy, creating load/store\n    --  race conditions. We also inline them, since this seems more in the\n-   --  spirit of the original (hardware instrinsic) routines.\n+   --  spirit of the original (hardware intrinsic) routines.\n \n    pragma Convention (C, Clear_Interlocked);\n    pragma Inline_Always (Clear_Interlocked);"}, {"sha": "c3e16f502ca502fbf9ea0ef72d37c4a28acf0f37", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -459,7 +459,7 @@ private\n    --  convention C so that the critical parameters are passed by reference.\n    --  Without this, the parameters are passed by copy, creating load/store\n    --  race conditions. We also inline them, since this seems more in the\n-   --  spirit of the original (hardware instrinsic) routines.\n+   --  spirit of the original (hardware intrinsic) routines.\n \n    pragma Convention (C, Clear_Interlocked);\n    pragma Inline_Always (Clear_Interlocked);"}, {"sha": "50b5e63548c11820026b89a849f7086bfd3f758c", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -302,12 +302,12 @@ package body System.Fat_Gen is\n       Ex : UI := Adjustment;\n \n    begin\n-      if Adjustment < T'Machine_Emin then\n+      if Adjustment < T'Machine_Emin - 1 then\n          Y  := 2.0 ** T'Machine_Emin;\n          Y1 := Y;\n          Ex := Ex - T'Machine_Emin;\n \n-         while Ex <= 0 loop\n+         while Ex < 0 loop\n             Y := T'Machine (Y / 2.0);\n \n             if Y = 0.0 then\n@@ -337,6 +337,9 @@ package body System.Fat_Gen is\n       if Radix_Digits >= T'Machine_Mantissa then\n          return X;\n \n+      elsif Radix_Digits <= 0 then\n+         raise Constraint_Error;\n+\n       else\n          L := Exponent (X) - Radix_Digits;\n          Y := Truncation (Scaling (X, -L));\n@@ -433,6 +436,10 @@ package body System.Fat_Gen is\n       P_Even   : Boolean;\n \n    begin\n+      if Y = 0.0 then\n+         raise Constraint_Error;\n+      end if;\n+\n       if X > 0.0 then\n          Sign_X :=  1.0;\n          Arg := X;"}, {"sha": "0c970d65824f880edcf2793c779f56ab1e3475a8", "filename": "gcc/ada/s-maccod.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-maccod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-maccod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-maccod.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides machine code support, both for instrinsic machine\n+--  This package provides machine code support, both for intrinsic machine\n --  operations, and also for machine code statements. See GNAT documentation\n --  for full details.\n "}, {"sha": "a5cb67a927bd08b603a47b129e6748659d0f11ff", "filename": "gcc/ada/s-stchop-vxworks.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-stchop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-stchop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop-vxworks.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -122,6 +122,7 @@ package body System.Stack_Checking.Operations is\n          Td_ErrorStatus  : Interfaces.C.int; -- most recent task error status\n          Td_Delay        : Interfaces.C.int; -- delay/timeout ticks\n       end record;\n+      pragma Convention (C, Task_Descriptor);\n \n       --  This VxWorks procedure fills in a specified task descriptor\n       --  for a specified task."}, {"sha": "d63a9454b960b22f62b07be61e850a3468443d54", "filename": "gcc/ada/s-taenca.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-taenca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-taenca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taenca.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -154,7 +154,7 @@ package body System.Tasking.Entry_Calls is\n       use type Ada.Exceptions.Exception_Id;\n \n       procedure Internal_Raise (X : Ada.Exceptions.Exception_Id);\n-      pragma Import (C, Internal_Raise, \"__gnat_raise_after_setup\");\n+      pragma Import (C, Internal_Raise, \"__gnat_raise_with_msg\");\n \n       E : constant Ada.Exceptions.Exception_Id :=\n             Entry_Call.Exception_To_Raise;"}, {"sha": "7617c9ac4663f8789c917df06bf51ca011b80b23", "filename": "gcc/ada/s-unstyp.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-unstyp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fs-unstyp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-unstyp.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -88,7 +88,7 @@ pragma Pure (Unsigned_Types);\n    --  Types used for packed array conversions\n \n    subtype Bytes_F is Packed_Bytes4 (1 .. Float'Size / 8);\n-   --  Type used in implementation of Is_Negative instrinsic (see Exp_Intr)\n+   --  Type used in implementation of Is_Negative intrinsic (see Exp_Intr)\n \n    function Shift_Left\n      (Value  : Short_Short_Unsigned;"}, {"sha": "18c6177724f1c7ede3a4e0e3aa3f2353b8cd0522", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -671,12 +671,8 @@ package body Sem_Attr is\n             --  object, and that the expression, if present, is static\n             --  and within the range of the dimensions of the type.\n \n-            if Is_Array_Type (P_Type) then\n-               Index := First_Index (P_Base_Type);\n-\n-            else pragma Assert (Is_Access_Type (P_Type));\n-               Index := First_Index (Base_Type (Designated_Type (P_Type)));\n-            end if;\n+            pragma Assert (Is_Array_Type (P_Type));\n+            Index := First_Index (P_Base_Type);\n \n             if No (E1) then\n \n@@ -722,6 +718,7 @@ package body Sem_Attr is\n          --  Normal case of array type or subtype\n \n          Check_Either_E0_Or_E1;\n+         Check_Dereference;\n \n          if Is_Array_Type (P_Type) then\n             if not Is_Constrained (P_Type)\n@@ -740,26 +737,18 @@ package body Sem_Attr is\n \n             D := Number_Dimensions (P_Type);\n \n-         elsif Is_Access_Type (P_Type)\n-           and then Is_Array_Type (Designated_Type (P_Type))\n-         then\n-            if Is_Entity_Name (P) and then Is_Type (Entity (P)) then\n-               Error_Attr (\"prefix of % attribute cannot be access type\", P);\n-            end if;\n-\n-            D := Number_Dimensions (Designated_Type (P_Type));\n-\n-            --  If there is an implicit dereference, then we must freeze\n-            --  the designated type of the access type, since the type of\n-            --  the referenced array is this type (see AI95-00106).\n-\n-            Freeze_Before (N, Designated_Type (P_Type));\n-\n          else\n             if Is_Private_Type (P_Type) then\n                Error_Attr\n                  (\"prefix for % attribute may not be private type\", P);\n \n+            elsif Is_Access_Type (P_Type)\n+              and then Is_Array_Type (Designated_Type (P_Type))\n+              and then Is_Entity_Name (P)\n+              and then Is_Type (Entity (P))\n+            then\n+               Error_Attr (\"prefix of % attribute cannot be access type\", P);\n+\n             elsif Attr_Id = Attribute_First\n                     or else\n                   Attr_Id = Attribute_Last\n@@ -874,6 +863,13 @@ package body Sem_Attr is\n \n          Resolve (P);\n          if Is_Access_Type (P_Type) then\n+\n+            --  If there is an implicit dereference, then we must freeze\n+            --  the designated type of the access type, since the type of\n+            --  the referenced array is this type (see AI95-00106).\n+\n+            Freeze_Before (N, Designated_Type (P_Type));\n+\n             Rewrite (P,\n               Make_Explicit_Dereference (Sloc (P),\n                 Prefix => Relocate_Node (P)));\n@@ -1861,6 +1857,7 @@ package body Sem_Attr is\n \n          --  If the prefix is a selected component whose prefix is of an\n          --  access type, then introduce an explicit dereference.\n+         --  ??? Could we reuse Check_Dereference here?\n \n          if Nkind (Pref) = N_Selected_Component\n            and then Is_Access_Type (Ptyp)"}, {"sha": "6f1083acda8ac4b4aec6c356760d0057096e8add", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -9531,7 +9531,6 @@ package body Sem_Ch12 is\n                   --  inlining.\n \n                   Rewrite (N, New_Copy (N2));\n-                  Set_Associated_Node (N, N2);\n                   Set_Analyzed (N, False);\n                end if;\n             end if;"}, {"sha": "ea0991faa29ce57a9a0b730396c24bb5f0defac9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1696,6 +1696,13 @@ package body Sem_Ch3 is\n \n          Set_Is_True_Constant (Id, True);\n \n+         --  If we are analyzing a constant declaration, set its completion\n+         --  flag after analyzing the expression.\n+\n+         if Constant_Present (N) then\n+            Set_Has_Completion (Id);\n+         end if;\n+\n          if not Assignment_OK (N) then\n             Check_Initialization (T, E);\n          end if;"}, {"sha": "d0a5b63e3779dc61bdaef5f18be01a127ed060e0", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -691,6 +691,12 @@ package body Sem_Ch7 is\n       --  Child and Unit are entities of compilation units. True if Child\n       --  is a public child of Parent as defined in 10.1.1\n \n+      procedure Inspect_Deferred_Constant_Completion;\n+      --  Examines the deferred constants in the private part of the\n+      --  package specification. Emits the error \"constant declaration\n+      --  requires initialization expression \" if not completed by an\n+      --  import pragma.\n+\n       ---------------------\n       -- Clear_Constants --\n       ---------------------\n@@ -793,6 +799,42 @@ package body Sem_Ch7 is\n          end if;\n       end Is_Public_Child;\n \n+      --------------------------------------------\n+      --  Inspect_Deferred_Constant_Completion  --\n+      --------------------------------------------\n+\n+      procedure Inspect_Deferred_Constant_Completion is\n+         Decl   : Node_Id;\n+      begin\n+\n+         Decl := First (Priv_Decls);\n+         while Present (Decl) loop\n+\n+            --  Deferred constant signature\n+\n+            if Nkind (Decl) = N_Object_Declaration\n+              and then Constant_Present (Decl)\n+              and then No (Expression (Decl))\n+\n+               --  No need to check internally generated constants\n+\n+              and then Comes_From_Source (Decl)\n+\n+               --  The constant is not completed. A full object declaration\n+               --  or a pragma Import complete a deferred constant.\n+\n+              and then not Has_Completion (Defining_Identifier (Decl))\n+            then\n+               Error_Msg_N\n+                 (\"constant declaration requires initialization expression\",\n+                 Defining_Identifier (Decl));\n+\n+            end if;\n+\n+            Decl := Next (Decl);\n+         end loop;\n+      end Inspect_Deferred_Constant_Completion;\n+\n    --  Start of processing for Analyze_Package_Specification\n \n    begin\n@@ -887,6 +929,11 @@ package body Sem_Ch7 is\n \n          Analyze_Declarations (Priv_Decls);\n \n+         --  Check the private declarations for incomplete deferred\n+         --  constants.\n+\n+         Inspect_Deferred_Constant_Completion;\n+\n          --  The first private entity is the immediate follower of the last\n          --  visible entity, if there was one.\n "}, {"sha": "78aceb63e20740a42f1be306f157460bcdce9719", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -1436,7 +1436,7 @@ package body Sem_Ch8 is\n                Set_Alias (New_S, Old_S);\n             end if;\n \n-            --  Note that we do not set Is_Instrinsic_Subprogram if we have\n+            --  Note that we do not set Is_Intrinsic_Subprogram if we have\n             --  a renaming as body, since the entity in this case is not an\n             --  intrinsic (it calls an intrinsic, but we have a real body\n             --  for this call, and it is in this body that the required"}, {"sha": "8501a71c72c49a8b979fd35284ba228072708eea", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -2705,6 +2705,12 @@ package body Sem_Prag is\n                Set_Is_Public (Def_Id);\n                Process_Interface_Name (Def_Id, Arg3, Arg4);\n \n+               --  pragma Import completes deferred constants\n+\n+               if Ekind (Def_Id) = E_Constant then\n+                  Set_Has_Completion (Def_Id);\n+               end if;\n+\n                --  It is not possible to import a constant of an unconstrained\n                --  array type (e.g. string) because there is no simple way to\n                --  write a meaningful subtype for it."}, {"sha": "53574d6067340b0c4710adcc77120a9a583c7164", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6355,6 +6355,7 @@ package body Sem_Res is\n       if Warn_On_Redundant_Constructs\n         and then Comes_From_Source (Orig_N)\n         and then Nkind (Orig_N) = N_Type_Conversion\n+        and then not In_Instance\n       then\n          Orig_N := Original_Node (Expression (Orig_N));\n          Orig_T := Target_Type;"}, {"sha": "d7e5f3b3ee84550910bc1cffeeb9bd80fbb2610d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -42,7 +42,7 @@ with Nmake;    use Nmake;\n with Output;   use Output;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n-with Rtsfind; use Rtsfind;\n+with Rtsfind;  use Rtsfind;\n with Scans;    use Scans;\n with Scn;      use Scn;\n with Sem;      use Sem;"}, {"sha": "0f0c6240f26c43b83848a656de43b5a984122c64", "filename": "gcc/ada/symbols-vms-alpha.adb", "status": "modified", "additions": 97, "deletions": 65, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsymbols-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsymbols-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols-vms-alpha.adb?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -229,25 +229,52 @@ package body Symbols is\n \n       Success := True;\n \n-      --  If policy is not autonomous, attempt to read the reference file\n+      --  If policy is Compliant or Controlled, attempt to read the reference\n+      --  file. If policy is Restricted, attempt to read the symbol file.\n \n       if Sym_Policy /= Autonomous then\n-         begin\n-            Open (File, In_File, Reference);\n+         case Sym_Policy is\n+            when Autonomous =>\n+               null;\n \n-         exception\n-            when Ada.Text_IO.Name_Error =>\n-               return;\n+            when Compliant | Controlled =>\n+               begin\n+                  Open (File, In_File, Reference);\n \n-            when X : others =>\n-               if not Quiet then\n-                  Put_Line (\"could not open \"\"\" & Reference & \"\"\"\");\n-                  Put_Line (Exception_Message (X));\n-               end if;\n+               exception\n+                  when Ada.Text_IO.Name_Error =>\n+                     Success := False;\n+                     return;\n \n-               Success := False;\n-               return;\n-         end;\n+                  when X : others =>\n+                     if not Quiet then\n+                        Put_Line (\"could not open \"\"\" & Reference & \"\"\"\");\n+                        Put_Line (Exception_Message (X));\n+                     end if;\n+\n+                     Success := False;\n+                     return;\n+               end;\n+\n+            when Restricted =>\n+               begin\n+                  Open (File, In_File, Symbol_File);\n+\n+               exception\n+                  when Ada.Text_IO.Name_Error =>\n+                     Success := False;\n+                     return;\n+\n+                  when X : others =>\n+                     if not Quiet then\n+                        Put_Line (\"could not open \"\"\" & Symbol_File & \"\"\"\");\n+                        Put_Line (Exception_Message (X));\n+                     end if;\n+\n+                     Success := False;\n+                     return;\n+               end;\n+         end case;\n \n          --  Read line by line\n \n@@ -637,7 +664,7 @@ package body Symbols is\n                             \"\"\" is no longer present in the object files\");\n                end if;\n \n-               if Sym_Policy = Controlled then\n+               if Sym_Policy = Controlled or else Sym_Policy = Restricted then\n                   Success := False;\n                   return;\n \n@@ -656,78 +683,83 @@ package body Symbols is\n             end if;\n          end loop;\n \n-         --  Append additional symbols, if any, to the Original_Symbols table\n+         if Sym_Policy /= Restricted then\n \n-         for Index in 1 .. Symbol_Table.Last (Complete_Symbols) loop\n-            S_Data := Complete_Symbols.Table (Index);\n+            --  Append additional symbols, if any, to the Original_Symbols\n+            --  table.\n \n-            if S_Data.Present then\n+            for Index in 1 .. Symbol_Table.Last (Complete_Symbols) loop\n+               S_Data := Complete_Symbols.Table (Index);\n \n-               if Sym_Policy = Controlled then\n-                  Put_Line (\"symbol \"\"\" & S_Data.Name.all &\n-                            \"\"\" is not in the reference symbol file\");\n-                  Success := False;\n-                  return;\n+               if S_Data.Present then\n \n-               elsif Soft_Minor_ID then\n-                  Minor_ID := Minor_ID + 1;\n-                  Soft_Minor_ID := False;\n+                  if Sym_Policy = Controlled then\n+                     Put_Line (\"symbol \"\"\" & S_Data.Name.all &\n+                               \"\"\" is not in the reference symbol file\");\n+                     Success := False;\n+                     return;\n+\n+                  elsif Soft_Minor_ID then\n+                     Minor_ID := Minor_ID + 1;\n+                     Soft_Minor_ID := False;\n+                  end if;\n+\n+                  Symbol_Table.Increment_Last (Original_Symbols);\n+                  Original_Symbols.Table\n+                    (Symbol_Table.Last (Original_Symbols)) := S_Data;\n+                  Complete_Symbols.Table (Index).Present := False;\n                end if;\n+            end loop;\n \n-               Symbol_Table.Increment_Last (Original_Symbols);\n-               Original_Symbols.Table (Symbol_Table.Last (Original_Symbols)) :=\n-                 S_Data;\n-               Complete_Symbols.Table (Index).Present := False;\n-            end if;\n-         end loop;\n+            --  Create the symbol file\n \n-         --  Create the symbol file\n+            Create (File, Ada.Text_IO.Out_File, Symbol_File_Name.all);\n \n-         Create (File, Ada.Text_IO.Out_File, Symbol_File_Name.all);\n+            Put (File, Case_Sensitive);\n+            Put_Line (File, \"yes\");\n \n-         Put (File, Case_Sensitive);\n-         Put_Line (File, \"yes\");\n+            --  Put a line in the symbol file for each symbol in the symbol\n+            --  table.\n \n-         --  Put a line in the symbol file for each symbol in the symbol table\n+            for Index in 1 .. Symbol_Table.Last (Original_Symbols) loop\n+               if Original_Symbols.Table (Index).Present then\n+                  Put (File, Symbol_Vector);\n+                  Put (File, Original_Symbols.Table (Index).Name.all);\n \n-         for Index in 1 .. Symbol_Table.Last (Original_Symbols) loop\n-            if Original_Symbols.Table (Index).Present then\n-               Put (File, Symbol_Vector);\n-               Put (File, Original_Symbols.Table (Index).Name.all);\n+                  if Original_Symbols.Table (Index).Kind = Data then\n+                     Put_Line (File, Equal_Data);\n \n-               if Original_Symbols.Table (Index).Kind = Data then\n-                  Put_Line (File, Equal_Data);\n+                  else\n+                     Put_Line (File, Equal_Procedure);\n+                  end if;\n \n-               else\n-                  Put_Line (File, Equal_Procedure);\n+                  Free (Original_Symbols.Table (Index).Name);\n                end if;\n+            end loop;\n \n-               Free (Original_Symbols.Table (Index).Name);\n-            end if;\n-         end loop;\n-\n-         Put (File, Case_Sensitive);\n-         Put_Line (File, \"NO\");\n+            Put (File, Case_Sensitive);\n+            Put_Line (File, \"NO\");\n \n-         --  Put the version IDs\n+            --  Put the version IDs\n \n-         Put (File, Gsmatch);\n-         Put (File, Image (Major_ID));\n-         Put (File, ',');\n-         Put_Line  (File, Image (Minor_ID));\n+            Put (File, Gsmatch);\n+            Put (File, Image (Major_ID));\n+            Put (File, ',');\n+            Put_Line  (File, Image (Minor_ID));\n \n-         --  And we are done\n+            --  And we are done\n \n-         Close (File);\n+            Close (File);\n \n-         --  Reset both tables\n+            --  Reset both tables\n \n-         Symbol_Table.Set_Last (Original_Symbols, 0);\n-         Symbol_Table.Set_Last (Complete_Symbols, 0);\n+            Symbol_Table.Set_Last (Original_Symbols, 0);\n+            Symbol_Table.Set_Last (Complete_Symbols, 0);\n \n-         --  Clear the symbol file name\n+            --  Clear the symbol file name\n \n-         Free (Symbol_File_Name);\n+            Free (Symbol_File_Name);\n+         end if;\n \n          Success := True;\n       end if;"}, {"sha": "81a87d00b6a0172fa9094e34e44660d02d2d23d4", "filename": "gcc/ada/symbols.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsymbols.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453d5bde8413766efffff9fc5e3205fea13bc7b/gcc%2Fada%2Fsymbols.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols.ads?ref=5453d5bde8413766efffff9fc5e3205fea13bc7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,9 +44,13 @@ package Symbols is\n       --  all symbols are already found in the reference file or with an\n       --  incremented minor ID, if not.\n \n-       Controlled);\n+       Controlled,\n       --  Fail if symbols are not the same as those in the reference file\n \n+      Restricted);\n+      --  Restrict the symbols to those in the symbol file. Fail if some\n+      --  symbols in the symbol file are not exported from the object files.\n+\n    type Symbol_Kind is (Data, Proc);\n    --  To distinguish between the different kinds of symbols\n "}]}