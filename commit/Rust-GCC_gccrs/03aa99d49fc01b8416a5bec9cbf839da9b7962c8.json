{"sha": "03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNhYTk5ZDQ5ZmMwMWI4NDE2YTViZWM5Y2JmODM5ZGE5Yjc5NjJjOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-08-04T20:44:20Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-08-04T20:44:20Z"}, "message": "c-common.c (flag_noniso_default_format_attributes): Delete.\n\n\n\t* c-common.c (flag_noniso_default_format_attributes): Delete.\n\t(built_in_attribute): Don't define/undefine DEF_FN_ATTR.\n\t(c_attrs_initialized): Delete.\n\t(c_common_nodes_and_builtins): Don't test c_attrs_initialized,\n\talways call c_init_attributes.\n\t(c_init_attributes): Don't define/undefine DEF_FN_ATTR.  Don't\n\tset c_attrs_initialized when done.\n\t(c_common_insert_default_attributes): Delete.\n\t* c-common.h (flag_noniso_default_format_attributes): Delete.\n\t(c_coomon_insert_default_attributes): Delete prototype.\n\t* c-opts.c (set_std_c89, set_std_c99, set_std_cxx98): Dont set\n\tflag_noniso_default_format_attributes.\n\n\t* c-decl.c (c_insert_default_attributes): Delete.\n\t* c-tree.h (c_insert_default_attributes): Delete prototype.\n\n\t* attribs.c (decl_attributes): Don't call insert_default_attributes\n\tlanghook.  Update function description comment.\n\t* langhooks.h (lang_hooks): Remove insert_default_attributes field.\n\t* langhooks-def.h (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Delete.\n\t* c-lang.c (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Don't define.\n\t* system.h: Poison LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES macro.\n\ncp/\n\t* decl.c (cxx_insert_default_attributes): Delete.\n\t* cp-tree.h (cxx_insert_default_attributes): Don't prototype.\n\t* cp-lang.c (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Don't define.\n\nobjc/\n\t* objc-lang.c (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Don't define.\n\nFrom-SVN: r70155", "tree": {"sha": "4397ff77c6b263352ecb5627286fed328cbb04ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4397ff77c6b263352ecb5627286fed328cbb04ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/comments", "author": null, "committer": null, "parents": [{"sha": "38e596df667d2c263921e990d4e0cb3b4dbb8ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e596df667d2c263921e990d4e0cb3b4dbb8ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38e596df667d2c263921e990d4e0cb3b4dbb8ead"}], "stats": {"total": 115, "additions": 37, "deletions": 78}, "files": [{"sha": "60a391c45ec5088cb6885a9cbf4e777f567289c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -1,3 +1,31 @@\n+2003-08-04  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* c-common.c (flag_noniso_default_format_attributes): Delete.\n+\t(built_in_attribute): Don't define/undefine DEF_FN_ATTR.\n+\t(c_attrs_initialized): Delete.\n+\t(c_common_nodes_and_builtins): Don't test c_attrs_initialized,\n+\talways call c_init_attributes.\n+\t(c_init_attributes): Don't define/undefine DEF_FN_ATTR.  Don't\n+\tset c_attrs_initialized when done.\n+\t(c_common_insert_default_attributes): Delete.\n+\t* c-common.h (flag_noniso_default_format_attributes): Delete.\n+\t(c_coomon_insert_default_attributes): Delete prototype.\n+\t* c-opts.c (set_std_c89, set_std_c99, set_std_cxx98): Dont set\n+\tflag_noniso_default_format_attributes.\n+\n+\t* c-decl.c (c_insert_default_attributes): Delete.\n+\t* c-tree.h (c_insert_default_attributes): Delete prototype.\n+\n+\t* attribs.c (decl_attributes): Don't call insert_default_attributes\n+\tlanghook.  Update function description comment.\n+\t* langhooks.h (lang_hooks): Remove insert_default_attributes field.\n+\t* langhooks-def.h (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Delete.\n+\t* c-lang.c (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Don't define.\n+\t* system.h: Poison LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES macro.\n+\n+\t* objc/objc-lang.c (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Don't\n+\tdefine.\n+\n 2003-08-04  Richard Sandiford  <rsandif@redhat.com>\n \n \t* config/mips/mips.c (override_options): Disable -G on targets that"}, {"sha": "38a4308bdaaed4cad48f075f2ff2181b98437fbc", "filename": "gcc/attribs.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -134,11 +134,7 @@ init_attributes (void)\n    information, in the form of a bitwise OR of flags in enum attribute_flags\n    from tree.h.  Depending on these flags, some attributes may be\n    returned to be applied at a later stage (for example, to apply\n-   a decl attribute to the declaration rather than to its type).  If\n-   ATTR_FLAG_BUILT_IN is not set and *NODE is a DECL, then also consider\n-   whether there might be some default attributes to apply to this DECL;\n-   if so, decl_attributes will be called recursively with those attributes\n-   and ATTR_FLAG_BUILT_IN set.  */\n+   a decl attribute to the declaration rather than to its type).  */\n \n tree\n decl_attributes (tree *node, tree attributes, int flags)\n@@ -151,10 +147,6 @@ decl_attributes (tree *node, tree attributes, int flags)\n \n   (*targetm.insert_attributes) (*node, &attributes);\n \n-  if (DECL_P (*node) && TREE_CODE (*node) == FUNCTION_DECL\n-      && !(flags & (int) ATTR_FLAG_BUILT_IN))\n-    (*lang_hooks.insert_default_attributes) (*node);\n-\n   for (a = attributes; a; a = TREE_CHAIN (a))\n     {\n       tree name = TREE_PURPOSE (a);"}, {"sha": "60e980f62ecfcd07baf47d29f7448527db46d5e2", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -372,11 +372,6 @@ int flag_isoc99;\n \n int flag_hosted = 1;\n \n-/* Nonzero means add default format_arg attributes for functions not\n-   in ISO C.  */\n-\n-int flag_noniso_default_format_attributes = 1;\n-\n /* Nonzero means warn when casting a function call to a type that does\n    not match the return type (e.g. (float)sqrt() or (anything*)malloc()\n    when there is no previous declaration of sqrt or malloc.  */\n@@ -2957,20 +2952,16 @@ enum built_in_attribute\n #define DEF_ATTR_INT(ENUM, VALUE) ENUM,\n #define DEF_ATTR_IDENT(ENUM, STRING) ENUM,\n #define DEF_ATTR_TREE_LIST(ENUM, PURPOSE, VALUE, CHAIN) ENUM,\n-#define DEF_FN_ATTR(NAME, ATTRS, PREDICATE) /* No entry needed in enum.  */\n #include \"builtin-attrs.def\"\n #undef DEF_ATTR_NULL_TREE\n #undef DEF_ATTR_INT\n #undef DEF_ATTR_IDENT\n #undef DEF_ATTR_TREE_LIST\n-#undef DEF_FN_ATTR\n   ATTR_LAST\n };\n \n static GTY(()) tree built_in_attributes[(int) ATTR_LAST];\n \n-static bool c_attrs_initialized = false;\n-\n static void c_init_attributes (void);\n \n /* Build tree nodes and builtin functions common to both C and C++ language\n@@ -3348,8 +3339,7 @@ c_common_nodes_and_builtins (void)\n #undef DEF_FUNCTION_TYPE_VAR_3\n #undef DEF_POINTER_TYPE\n \n-  if (!c_attrs_initialized)\n-    c_init_attributes ();\n+  c_init_attributes ();\n \n #define DEF_BUILTIN(ENUM, NAME, CLASS, TYPE, LIBTYPE,\t\t\t\\\n \t\t    BOTH_P, FALLBACK_P, NONANSI_P, ATTRS, IMPLICIT)\t\\\n@@ -4176,21 +4166,11 @@ c_init_attributes (void)\n     = tree_cons (built_in_attributes[(int) PURPOSE],\t\\\n \t\t built_in_attributes[(int) VALUE],\t\\\n \t\t built_in_attributes[(int) CHAIN]);\n-#define DEF_FN_ATTR(NAME, ATTRS, PREDICATE) /* No initialization needed.  */\n #include \"builtin-attrs.def\"\n #undef DEF_ATTR_NULL_TREE\n #undef DEF_ATTR_INT\n #undef DEF_ATTR_IDENT\n #undef DEF_ATTR_TREE_LIST\n-#undef DEF_FN_ATTR\n-  c_attrs_initialized = true;\n-}\n-\n-/* Depending on the name of DECL, apply default attributes to it.  */\n-\n-void\n-c_common_insert_default_attributes (tree decl ATTRIBUTE_UNUSED)\n-{\n }\n \n /* Output a -Wshadow warning MSGCODE about NAME, and give the location"}, {"sha": "9be6dfecabe8d391b7cc0223cb719a54c46d36ea", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -549,11 +549,6 @@ extern int flag_isoc99;\n \n extern int flag_hosted;\n \n-/* Nonzero means add default format_arg attributes for functions not\n-   in ISO C.  */\n-\n-extern int flag_noniso_default_format_attributes;\n-\n /* Nonzero means warn when casting a function call to a type that does\n    not match the return type (e.g. (float)sqrt() or (anything*)malloc()\n    when there is no previous declaration of sqrt or malloc.  */\n@@ -893,7 +888,6 @@ extern void check_function_format (int *, tree, tree);\n extern void set_Wformat (int);\n extern tree handle_format_attribute (tree *, tree, tree, int, bool *);\n extern tree handle_format_arg_attribute (tree *, tree, tree, int, bool *);\n-extern void c_common_insert_default_attributes (tree);\n extern int c_common_handle_option (size_t code, const char *arg, int value);\n extern bool c_common_missing_argument (const char *opt, size_t code);\n extern tree c_common_type_for_mode (enum machine_mode, int);"}, {"sha": "550d6c83880db8539ad6a8721225f232c381e3ee", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -2370,17 +2370,6 @@ builtin_function (const char *name, tree type, int function_code,\n \n   return decl;\n }\n-\n-/* Apply default attributes to a function, if a system function with default\n-   attributes.  */\n-\n-void\n-c_insert_default_attributes (tree decl)\n-{\n-  if (!TREE_PUBLIC (decl))\n-    return;\n-  c_common_insert_default_attributes (decl);\n-}\n \f\n /* Called when a declaration is seen that contains no names to declare.\n    If its type is a reference to a structure, union or enum inherited"}, {"sha": "d998e19727819c8353cab5165380015d266ac766", "filename": "gcc/c-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -61,8 +61,6 @@ enum c_language_kind c_language = clk_c;\n #define LANG_HOOKS_PARSE_FILE c_common_parse_file\n #undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n #define LANG_HOOKS_TRUTHVALUE_CONVERSION c_common_truthvalue_conversion\n-#undef LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES\n-#define LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES c_insert_default_attributes\n #undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n #undef LANG_HOOKS_UNSAFE_FOR_REEVAL"}, {"sha": "012f24ba53a8a9bfeedd74d82489e325c9427d4f", "filename": "gcc/c-opts.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -1459,7 +1459,6 @@ set_std_c89 (int c94, int iso)\n   flag_no_asm = iso;\n   flag_no_gnu_keywords = iso;\n   flag_no_nonansi_builtin = iso;\n-  flag_noniso_default_format_attributes = !iso;\n   flag_isoc94 = c94;\n   flag_isoc99 = 0;\n   flag_writable_strings = 0;\n@@ -1472,7 +1471,6 @@ set_std_c99 (int iso)\n   cpp_set_lang (parse_in, iso ? CLK_STDC99: CLK_GNUC99);\n   flag_no_asm = iso;\n   flag_no_nonansi_builtin = iso;\n-  flag_noniso_default_format_attributes = !iso;\n   flag_iso = iso;\n   flag_isoc99 = 1;\n   flag_isoc94 = 1;\n@@ -1486,7 +1484,6 @@ set_std_cxx98 (int iso)\n   cpp_set_lang (parse_in, iso ? CLK_CXX98: CLK_GNUCXX);\n   flag_no_gnu_keywords = iso;\n   flag_no_nonansi_builtin = iso;\n-  flag_noniso_default_format_attributes = !iso;\n   flag_iso = iso;\n }\n "}, {"sha": "afcd04224f64ed9f34d793f44ea7ed7defe35635", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -186,7 +186,6 @@ extern void insert_block (tree);\n extern void set_block (tree);\n extern tree pushdecl (tree);\n \n-extern void c_insert_default_attributes (tree);\n extern void c_init_decl_processing (void);\n extern void c_dup_lang_specific_decl (tree);\n extern void c_print_identifier (FILE *, tree, int);"}, {"sha": "737a97caa528e48812d145c61d588e18beaaa25e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -1,3 +1,9 @@\n+2003-08-04  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* decl.c (cxx_insert_default_attributes): Delete.\n+\t* cp-tree.h (cxx_insert_default_attributes): Don't prototype.\n+\t* cp-lang.c (LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES): Don't define.\n+\n 2003-08-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/11704"}, {"sha": "ab0d305b2aaef4a08dfba07eb947a9d670e36d37", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -77,8 +77,6 @@ static bool cp_var_mod_type_p (tree);\n #define LANG_HOOKS_MAYBE_BUILD_CLEANUP cxx_maybe_build_cleanup\n #undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n #define LANG_HOOKS_TRUTHVALUE_CONVERSION c_common_truthvalue_conversion\n-#undef LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES\n-#define LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES cxx_insert_default_attributes\n #undef LANG_HOOKS_UNSAFE_FOR_REEVAL\n #define LANG_HOOKS_UNSAFE_FOR_REEVAL c_common_unsafe_for_reeval\n #undef LANG_HOOKS_SET_DECL_ASSEMBLER_NAME"}, {"sha": "ffae1bfc66fa7aba05140b87292808c4f22376d8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -3638,7 +3638,6 @@ extern tree pushdecl\t\t\t\t(tree);\n extern void cxx_init_decl_processing\t\t(void);\n enum cp_tree_node_structure_enum cp_tree_node_structure \n   (union lang_tree_node *);\n-extern void cxx_insert_default_attributes\t(tree);\n extern bool cxx_mark_addressable\t\t(tree);\n extern void cxx_push_function_context\t\t(struct function *);\n extern void cxx_pop_function_context\t\t(struct function *);"}, {"sha": "6bd5c86a198861aa3923f95d981d05114249d4c9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -6642,19 +6642,6 @@ push_throw_library_fn (tree name, tree type)\n   TREE_NOTHROW (fn) = 0;\n   return fn;\n }\n-\n-/* Apply default attributes to a function, if a system function with default\n-   attributes.  */\n-\n-void\n-cxx_insert_default_attributes (tree decl)\n-{\n-  if (!DECL_EXTERN_C_FUNCTION_P (decl))\n-    return;\n-  if (!TREE_PUBLIC (decl))\n-    return;\n-  c_common_insert_default_attributes (decl);\n-}\n \f\n /* When we call finish_struct for an anonymous union, we create\n    default copy constructors and such.  But, an anonymous union"}, {"sha": "478553b5d322a4cee27eac817e500c12dc0999cf", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -99,7 +99,6 @@ extern void lhd_initialize_diagnostics (struct diagnostic_context *);\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL lhd_do_nothing_t\n #define LANG_HOOKS_UNSAFE_FOR_REEVAL\tlhd_unsafe_for_reeval\n #define LANG_HOOKS_STATICP\t\tlhd_staticp\n-#define LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES lhd_do_nothing_t\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL lhd_do_nothing_t\n #define LANG_HOOKS_UNSAVE_EXPR_NOW\tlhd_unsave_expr_now\n #define LANG_HOOKS_MAYBE_BUILD_CLEANUP\tlhd_return_null_tree\n@@ -259,7 +258,6 @@ extern int lhd_tree_dump_type_quals (tree);\n   LANG_HOOKS_EXPAND_CONSTANT, \\\n   LANG_HOOKS_EXPAND_EXPR, \\\n   LANG_HOOKS_TRUTHVALUE_CONVERSION, \\\n-  LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES, \\\n   LANG_HOOKS_SAFE_FROM_P, \\\n   LANG_HOOKS_FINISH_INCOMPLETE_DECL, \\\n   LANG_HOOKS_UNSAFE_FOR_REEVAL, \\"}, {"sha": "4ac0250164ce15a35cde26418d4c73caa8ea9c9d", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -272,10 +272,6 @@ struct lang_hooks\n      error_mark_node).  */\n   tree (*truthvalue_conversion) (tree);\n \n-  /* Possibly apply default attributes to a function (represented by\n-     a FUNCTION_DECL).  */\n-  void (*insert_default_attributes) (tree);\n-\n   /* Hook called by safe_from_p for language-specific tree codes.  It is\n      up to the language front-end to install a hook if it has any such\n      codes that safe_from_p needs to know about.  Since same_from_p will"}, {"sha": "eda8c5dd19cff1b063b7c367edf84d263953fc64", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -61,8 +61,6 @@ enum c_language_kind c_language = clk_objc;\n #define LANG_HOOKS_MARK_ADDRESSABLE c_mark_addressable\n #undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n #define LANG_HOOKS_TRUTHVALUE_CONVERSION c_common_truthvalue_conversion\n-#undef LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES\n-#define LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES c_insert_default_attributes\n #undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n #undef LANG_HOOKS_UNSAFE_FOR_REEVAL"}, {"sha": "aae0dda56fde12d583b57e37d1be26a359e23592", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03aa99d49fc01b8416a5bec9cbf839da9b7962c8/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=03aa99d49fc01b8416a5bec9cbf839da9b7962c8", "patch": "@@ -614,7 +614,7 @@ typedef char _Bool;\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\\n-\tLANG_HOOKS_MARK_TREE\n+\tLANG_HOOKS_MARK_TREE LANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES\n \n /* Libiberty macros that are no longer used in GCC.  */\n #undef ANSI_PROTOTYPES"}]}