{"sha": "eab1ee22545ddc53bbe25ab6c4140f29a8879891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiMWVlMjI1NDVkZGM1M2JiZTI1YWI2YzQxNDBmMjlhODg3OTg5MQ==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2016-11-02T14:46:33Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2016-11-02T14:46:33Z"}, "message": "Allow warning flags to associate through gfc_error.\n\n\tgcc/fortran/\n\t* gfortran.h (gfc_error): New declaration for gfc_error with 'opt'.\n\t* error.c (gfc_error): Add optional 'opt' argument.\n\t* error.c (gfc_notify_std): Call fully-qualified gfc_error.\n\nFrom-SVN: r241794", "tree": {"sha": "615139715669daed8aa9f8ae9cb12a7714708950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/615139715669daed8aa9f8ae9cb12a7714708950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eab1ee22545ddc53bbe25ab6c4140f29a8879891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1ee22545ddc53bbe25ab6c4140f29a8879891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab1ee22545ddc53bbe25ab6c4140f29a8879891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1ee22545ddc53bbe25ab6c4140f29a8879891/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5304d04437ac683b9a4c8207728db70774560222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5304d04437ac683b9a4c8207728db70774560222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5304d04437ac683b9a4c8207728db70774560222"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "b92928ce443343a3f747b0d1d4d646e3eb8c0429", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1ee22545ddc53bbe25ab6c4140f29a8879891/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1ee22545ddc53bbe25ab6c4140f29a8879891/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eab1ee22545ddc53bbe25ab6c4140f29a8879891", "patch": "@@ -1,3 +1,9 @@\n+2016-11-02  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.h (gfc_error): New declaration for gfc_error with 'opt'.\n+\t* error.c (gfc_error): Add optional 'opt' argument.\n+\t* error.c (gfc_notify_std): Call fully-qualified gfc_error.\n+\n 2016-11-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/78178"}, {"sha": "0fd8a4e74e308b3294f4e93d49f0af68826eb3d2", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1ee22545ddc53bbe25ab6c4140f29a8879891/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1ee22545ddc53bbe25ab6c4140f29a8879891/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=eab1ee22545ddc53bbe25ab6c4140f29a8879891", "patch": "@@ -67,7 +67,7 @@ gfc_push_suppress_errors (void)\n }\n \n static void\n-gfc_error (const char *gmsgid, va_list ap)  ATTRIBUTE_GCC_GFC(1,0);\n+gfc_error (int opt, const char *gmsgid, va_list ap)  ATTRIBUTE_GCC_GFC(2,0);\n \n static bool\n gfc_warning (int opt, const char *gmsgid, va_list ap) ATTRIBUTE_GCC_GFC(2,0);\n@@ -902,7 +902,7 @@ gfc_notify_std (int std, const char *gmsgid, ...)\n   if (warning)\n     gfc_warning (0, buffer, argp);\n   else\n-    gfc_error (buffer, argp);\n+    gfc_error (0, buffer, argp);\n   va_end (argp);\n \n   return (warning && !warnings_are_errors) ? true : false;\n@@ -1233,15 +1233,15 @@ gfc_warning_check (void)\n /* Issue an error.  */\n \n static void\n-gfc_error (const char *gmsgid, va_list ap)\n+gfc_error (int opt, const char *gmsgid, va_list ap)\n {\n   va_list argp;\n   va_copy (argp, ap);\n   bool saved_abort_on_error = false;\n \n   if (warnings_not_errors)\n     {\n-      gfc_warning (/*opt=*/0, gmsgid, argp);\n+      gfc_warning (opt, gmsgid, argp);\n       va_end (argp);\n       return;\n     }\n@@ -1288,12 +1288,22 @@ gfc_error (const char *gmsgid, va_list ap)\n }\n \n \n+void\n+gfc_error (int opt, const char *gmsgid, ...)\n+{\n+  va_list argp;\n+  va_start (argp, gmsgid);\n+  gfc_error (opt, gmsgid, argp);\n+  va_end (argp);\n+}\n+\n+\n void\n gfc_error (const char *gmsgid, ...)\n {\n   va_list argp;\n   va_start (argp, gmsgid);\n-  gfc_error (gmsgid, argp);\n+  gfc_error (0, gmsgid, argp);\n   va_end (argp);\n }\n "}, {"sha": "b559e8ac5cb0503d2f87929f61703673c1733dbf", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1ee22545ddc53bbe25ab6c4140f29a8879891/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1ee22545ddc53bbe25ab6c4140f29a8879891/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=eab1ee22545ddc53bbe25ab6c4140f29a8879891", "patch": "@@ -2730,6 +2730,7 @@ bool gfc_warning_now_at (location_t loc, int opt, const char *gmsgid, ...)\n void gfc_clear_warning (void);\n void gfc_warning_check (void);\n \n+void gfc_error (int opt, const char *, ...) ATTRIBUTE_GCC_GFC(2,3);\n void gfc_error (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_error_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_fatal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);"}]}