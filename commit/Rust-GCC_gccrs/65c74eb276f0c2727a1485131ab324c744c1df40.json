{"sha": "65c74eb276f0c2727a1485131ab324c744c1df40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVjNzRlYjI3NmYwYzI3MjdhMTQ4NTEzMWFiMzI0Yzc0NGMxZGY0MA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-05-25T07:38:32Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-05-25T07:38:32Z"}, "message": "cgraph.c (cgraph_node::get_availability): Fix typo in comment.\n\n* cgraph.c (cgraph_node::get_availability): Fix typo in comment.\n* symtab.c (symtab_node::binds_to_current_def_p): Likewise.\n* varpool.c (varpool_node::get_availability): Likewise.\n\nFrom-SVN: r236690", "tree": {"sha": "7f69de75c069b2544dbf8cc8f777b84cd4327d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f69de75c069b2544dbf8cc8f777b84cd4327d5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65c74eb276f0c2727a1485131ab324c744c1df40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c74eb276f0c2727a1485131ab324c744c1df40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65c74eb276f0c2727a1485131ab324c744c1df40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c74eb276f0c2727a1485131ab324c744c1df40/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "568da5e6e1d08b98244bf3e55d50e8811404124d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568da5e6e1d08b98244bf3e55d50e8811404124d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568da5e6e1d08b98244bf3e55d50e8811404124d"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "f2a1e5372bdc6f563c8a33cee9cea4df5cacd417", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65c74eb276f0c2727a1485131ab324c744c1df40", "patch": "@@ -1,3 +1,9 @@\n+2016-05-25  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* cgraph.c (cgraph_node::get_availability): Fix typo in comment.\n+\t* symtab.c (symtab_node::binds_to_current_def_p): Likewise.\n+\t* varpool.c (varpool_node::get_availability): Likewise.\n+\n 2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/altivec.md (VNEG iterator): New iterator for"}, {"sha": "08bf9bf96a2abcd4a369c012d41e9aebb0017346", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=65c74eb276f0c2727a1485131ab324c744c1df40", "patch": "@@ -2235,7 +2235,7 @@ cgraph_node::get_availability (symtab_node *ref)\n   else if (!externally_visible)\n     avail = AVAIL_AVAILABLE;\n   /* If this is a reference from symbol itself and there are no aliases, we\n-     may be sure that the symbol was not interposed by soemthing else because\n+     may be sure that the symbol was not interposed by something else because\n      the symbol itself would be unreachable otherwise.\n \n      Also comdat groups are always resolved in groups.  */"}, {"sha": "ded6ecc17d53f1b69a7fae6cc702e430bfe3717c", "filename": "gcc/symtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=65c74eb276f0c2727a1485131ab324c744c1df40", "patch": "@@ -2239,7 +2239,7 @@ symtab_node::binds_to_current_def_p (symtab_node *ref)\n     }\n \n   /* If this is a reference from symbol itself and there are no aliases, we\n-     may be sure that the symbol was not interposed by soemthing else because\n+     may be sure that the symbol was not interposed by something else because\n      the symbol itself would be unreachable otherwise.  This is important\n      to optimize recursive functions well.\n "}, {"sha": "ab615fa33fc5f678f5d4e2218671d57cb6a3dad4", "filename": "gcc/varpool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65c74eb276f0c2727a1485131ab324c744c1df40/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=65c74eb276f0c2727a1485131ab324c744c1df40", "patch": "@@ -499,7 +499,7 @@ varpool_node::get_availability (symtab_node *ref)\n       return avail;\n     }\n   /* If this is a reference from symbol itself and there are no aliases, we\n-     may be sure that the symbol was not interposed by soemthing else because\n+     may be sure that the symbol was not interposed by something else because\n      the symbol itself would be unreachable otherwise.  */\n   if ((this == ref && !has_aliases_p ())\n       || (ref && get_comdat_group ()"}]}