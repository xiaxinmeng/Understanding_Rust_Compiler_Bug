{"sha": "128be7f933402a4fba107e7b12751d09e8d85f5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4YmU3ZjkzMzQwMmE0ZmJhMTA3ZTdiMTI3NTFkMDllOGQ4NWY1Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-07-05T16:28:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-07-05T16:28:35Z"}, "message": "re PR c++/14263 (Cryptic diagnostic for cast from virtual base class not using dynamic_cast)\n\n/cp\n2013-07-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/14263\n\t* class.c (build_base_path): Improve diagnostic.\n\n/testsuite\n2013-07-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/14263\n\t* g++.dg/inherit/virtual10.C: New.\n\nFrom-SVN: r200718", "tree": {"sha": "81669bad4b1a4e092776311d0373543dfdea5446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81669bad4b1a4e092776311d0373543dfdea5446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/128be7f933402a4fba107e7b12751d09e8d85f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128be7f933402a4fba107e7b12751d09e8d85f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128be7f933402a4fba107e7b12751d09e8d85f5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128be7f933402a4fba107e7b12751d09e8d85f5f/comments", "author": null, "committer": null, "parents": [{"sha": "1c6269d3f574465892c1a100dfda81f4e3dba1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c6269d3f574465892c1a100dfda81f4e3dba1ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c6269d3f574465892c1a100dfda81f4e3dba1ab"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "c45c8be9aa64af17ec96453b92148b478642f5dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=128be7f933402a4fba107e7b12751d09e8d85f5f", "patch": "@@ -1,3 +1,8 @@\n+2013-07-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/14263\n+\t* class.c (build_base_path): Improve diagnostic.\n+\n 2013-07-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/38634"}, {"sha": "e5166324e4c2be9768f6b8e74f218a85839143fa", "filename": "gcc/cp/class.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=128be7f933402a4fba107e7b12751d09e8d85f5f", "patch": "@@ -291,9 +291,31 @@ build_base_path (enum tree_code code,\n   if (code == MINUS_EXPR && v_binfo)\n     {\n       if (complain & tf_error)\n-\terror (\"cannot convert from base %qT to derived type %qT via \"\n-\t       \"virtual base %qT\", BINFO_TYPE (binfo), BINFO_TYPE (d_binfo),\n-\t       BINFO_TYPE (v_binfo));\n+\t{\n+\t  if (SAME_BINFO_TYPE_P (BINFO_TYPE (binfo), BINFO_TYPE (v_binfo)))\n+\t    {\n+\t      if (want_pointer)\n+\t\terror (\"cannot convert from pointer to base class %qT to \"\n+\t\t       \"pointer to derived class %qT because the base is \"\n+\t\t       \"virtual\", BINFO_TYPE (binfo), BINFO_TYPE (d_binfo));\n+\t      else\n+\t\terror (\"cannot convert from base class %qT to derived \"\n+\t\t       \"class %qT because the base is virtual\",\n+\t\t       BINFO_TYPE (binfo), BINFO_TYPE (d_binfo));\n+\t    }\t      \n+\t  else\n+\t    {\n+\t      if (want_pointer)\n+\t\terror (\"cannot convert from pointer to base class %qT to \"\n+\t\t       \"pointer to derived class %qT via virtual base %qT\",\n+\t\t       BINFO_TYPE (binfo), BINFO_TYPE (d_binfo),\n+\t\t       BINFO_TYPE (v_binfo));\n+\t      else\n+\t\terror (\"cannot convert from base class %qT to derived \"\n+\t\t       \"class %qT via virtual base %qT\", BINFO_TYPE (binfo),\n+\t\t       BINFO_TYPE (d_binfo), BINFO_TYPE (v_binfo));\n+\t    }\n+\t}\n       return error_mark_node;\n     }\n "}, {"sha": "4124aa4f9d660817bd20e0497c8ba566e738fbbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=128be7f933402a4fba107e7b12751d09e8d85f5f", "patch": "@@ -1,3 +1,8 @@\n+2013-07-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/14263\n+\t* g++.dg/inherit/virtual10.C: New.\n+\n 2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n \n \tPR c/57821"}, {"sha": "4cb858b9293171b0d1b24809989b89cd95a66d1c", "filename": "gcc/testsuite/g++.dg/inherit/virtual10.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128be7f933402a4fba107e7b12751d09e8d85f5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual10.C?ref=128be7f933402a4fba107e7b12751d09e8d85f5f", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/14263\n+\n+struct A { };\n+\n+struct B : virtual A { };\n+\n+int main()\n+{\n+   A* p = new B;\n+   B* q = static_cast<B*>(p);  // { dg-error \"cannot convert from pointer to base class 'A' to pointer to derived class 'B' because the base is virtual\" }\n+}"}]}