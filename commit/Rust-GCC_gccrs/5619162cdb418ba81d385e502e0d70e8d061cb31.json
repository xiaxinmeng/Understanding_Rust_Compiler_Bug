{"sha": "5619162cdb418ba81d385e502e0d70e8d061cb31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYxOTE2MmNkYjQxOGJhODFkMzg1ZTUwMmUwZDcwZThkMDYxY2IzMQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-01-10T11:48:37Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-01-10T11:48:37Z"}, "message": "arm.c (arm_new_rtx_costs): Use destination mode when handling a SET rtx.\n\n2014-01-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.c (arm_new_rtx_costs): Use destination mode\n\twhen handling a SET rtx.\n\nFrom-SVN: r206521", "tree": {"sha": "2ad13d383da016f9b79480c642b1d3f61eb78dd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ad13d383da016f9b79480c642b1d3f61eb78dd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5619162cdb418ba81d385e502e0d70e8d061cb31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5619162cdb418ba81d385e502e0d70e8d061cb31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5619162cdb418ba81d385e502e0d70e8d061cb31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5619162cdb418ba81d385e502e0d70e8d061cb31/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d17b99fe35239b2db77533ecd89ab4687ac5799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d17b99fe35239b2db77533ecd89ab4687ac5799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d17b99fe35239b2db77533ecd89ab4687ac5799"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "b6f808903ff71f85b47d0c908bd51af04a0c2134", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5619162cdb418ba81d385e502e0d70e8d061cb31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5619162cdb418ba81d385e502e0d70e8d061cb31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5619162cdb418ba81d385e502e0d70e8d061cb31", "patch": "@@ -1,3 +1,8 @@\n+2014-01-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_new_rtx_costs): Use destination mode\n+\twhen handling a SET rtx.\n+\n 2014-01-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-a53): Specify FL_CRC32."}, {"sha": "18196b31d57daf6c509940a33aa654bd3f77042b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5619162cdb418ba81d385e502e0d70e8d061cb31/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5619162cdb418ba81d385e502e0d70e8d061cb31/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5619162cdb418ba81d385e502e0d70e8d061cb31", "patch": "@@ -9092,6 +9092,9 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n     {\n     case SET:\n       *cost = 0;\n+      /* SET RTXs don't have a mode so we get it from the destination.  */\n+      mode = GET_MODE (SET_DEST (x));\n+\n       if (REG_P (SET_SRC (x))\n \t  && REG_P (SET_DEST (x)))\n \t{\n@@ -9106,14 +9109,15 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t     in 16 bits in Thumb mode.  */\n \t  if (!speed_p && TARGET_THUMB && outer_code == COND_EXEC)\n \t    *cost >>= 1;\n+\n+\t  return true;\n \t}\n \n       if (CONST_INT_P (SET_SRC (x)))\n \t{\n \t  /* Handle CONST_INT here, since the value doesn't have a mode\n \t     and we would otherwise be unable to work out the true cost.  */\n \t  *cost = rtx_cost (SET_DEST (x), SET, 0, speed_p);\n-\t  mode = GET_MODE (SET_DEST (x));\n \t  outer_code = SET;\n \t  /* Slightly lower the cost of setting a core reg to a constant.\n \t     This helps break up chains and allows for better scheduling.  */"}]}