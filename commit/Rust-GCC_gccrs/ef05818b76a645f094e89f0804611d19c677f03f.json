{"sha": "ef05818b76a645f094e89f0804611d19c677f03f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwNTgxOGI3NmE2NDVmMDk0ZTg5ZjA4MDQ2MTFkMTljNjc3ZjAzZg==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2004-07-23T23:34:17Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2004-07-23T23:34:17Z"}, "message": "Makefile.am: Rename jar binary to fastjar.\n\n2004-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am: Rename jar binary to fastjar.\n\t* Makefile.in: Regenerate.\n\t* fastjar.texi: Rename references to jar binary with fastjar.\n\n2004-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Make-lang.in: Replace rmic and rmiregistry references with\n\tgrmic and grmiregistry.\n\t* gcj.texi: Likewise.\n\n2004-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am: Replace jar, rmic and rmiregistry references with\n\tgjar, grmic and grmiregistry.\n\t* configure.in: Likewise.\n\t* Makefile.in: Regenerate.\n\t* configure: Likewise.\n\t* gcj/Makefile.in: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\nFrom-SVN: r85101", "tree": {"sha": "c441da0edad58a944786909749dd1d7878509614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c441da0edad58a944786909749dd1d7878509614"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef05818b76a645f094e89f0804611d19c677f03f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef05818b76a645f094e89f0804611d19c677f03f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef05818b76a645f094e89f0804611d19c677f03f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef05818b76a645f094e89f0804611d19c677f03f/comments", "author": null, "committer": null, "parents": [{"sha": "d91ba7b021e59c8ab455b04214a8d0a1925befaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d91ba7b021e59c8ab455b04214a8d0a1925befaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d91ba7b021e59c8ab455b04214a8d0a1925befaf"}], "stats": {"total": 323, "additions": 173, "deletions": 150}, "files": [{"sha": "7b354255e2ec8adff33fa708ddfdd107bb395080", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -1,3 +1,9 @@\n+2004-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am: Rename jar binary to fastjar.\n+\t* Makefile.in: Regenerate.\n+\t* fastjar.texi: Rename references to jar binary with fastjar.\n+\n 2004-07-19  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* jartool.c (main): Ensure that only one of ftruncate and _chsize"}, {"sha": "901e8995d8a865437b45e431fd477c9bb7cd5faa", "filename": "fastjar/Makefile.am", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FMakefile.am?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -45,12 +45,12 @@ AM_CPPFLAGS = -I. -I$(top_srcdir) $(ZINCS) -I$(top_srcdir)/../include\n \n LIBIBERTY = ../libiberty/libiberty.a\n \n-bin_PROGRAMS = jar grepjar\n-jar_SOURCES = jartool.c dostime.c compress.c pushback.c shift.c jartool.h \\\n+bin_PROGRAMS = fastjar grepjar\n+fastjar_SOURCES = jartool.c dostime.c compress.c pushback.c shift.c jartool.h \\\n zipfile.h dostime.h compress.h pushback.h shift.h\n-jar_LDADD = $(ZLIBS) $(LIBIBERTY)\n-jar_DEPENDENCIES = $(ZDEPS) $(LIBIBERTY)\n-jar_CPPFLAGS = $(AM_CPPFLAGS) -DWITH_SHIFT_DOWN\n+fastjar_LDADD = $(ZLIBS) $(LIBIBERTY)\n+fastjar_DEPENDENCIES = $(ZDEPS) $(LIBIBERTY)\n+fastjar_CPPFLAGS = $(AM_CPPFLAGS) -DWITH_SHIFT_DOWN\n \n grepjar_SOURCES = jargrep.c dostime.c compress.c pushback.c jartool.h \\\n zipfile.h dostime.h compress.h pushback.h\n@@ -65,7 +65,7 @@ info_TEXINFOS = fastjar.texi\n fastjar_TEXINFOS = \\\n \t../gcc/doc/include/gcc-common.texi \\\n \t../gcc/doc/include/gpl.texi\n-man_MANS = jar.1 grepjar.1\n+man_MANS = fastjar.1 grepjar.1\n EXTRA_DIST = $(man_MANS)\n \n TEXI2POD = perl $(srcdir)/../contrib/texi2pod.pl\n@@ -76,10 +76,10 @@ POD2MAN = pod2man --center=\"GNU\" --release=\"gcc-@gcc_version@\"\n \t\tmv -f $(@).T$$$$ $@) || \\\n \t\t(rm -f $(@).T$$$$ && exit 1)\n \n-.INTERMEDIATE: jar.pod grepjar.pod\n+.INTERMEDIATE: fastjar.pod grepjar.pod\n \n-jar.pod: $(srcdir)/fastjar.texi\n-\t-$(TEXI2POD) -D jar $< > $@\n+fastjar.pod: $(srcdir)/fastjar.texi\n+\t-$(TEXI2POD) -D fastjar $< > $@\n \n grepjar.pod: $(srcdir)/fastjar.texi\n \t-$(TEXI2POD) -D grepjar $< > $@\n@@ -97,13 +97,13 @@ endif\n \n all-local: $(STAMP_GENINSRC) \n \n-stamp-geninsrc: jar.1 grepjar.1 fastjar.info\n-\t-cp -p $(top_builddir)/jar.1 $(srcdir)/jar.1\n+stamp-geninsrc: fastjar.1 grepjar.1 fastjar.info\n+\t-cp -p $(top_builddir)/fastjar.1 $(srcdir)/fastjar.1\n \t-cp -p $(top_builddir)/grepjar.1 $(srcdir)/grepjar.1\n \t-cp -p $(top_builddir)/fastjar.info $(srcdir)/fastjar.info\n \ttouch $@\n \n CLEANFILES = stamp-geninsrc\n-MAINTAINERCLEANFILES = $(srcdir)/jar.1 \\\n+MAINTAINERCLEANFILES = $(srcdir)/fastjar.1 \\\n                        $(srcdir)/grepjar.1 \\\n                        $(srcdir)/fastjar.info"}, {"sha": "2bef6898446e0c1409c30f758a96e35593298e62", "filename": "fastjar/Makefile.in", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FMakefile.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -16,7 +16,7 @@\n \n # Process this with automake to create Makefile.in\n \n-SOURCES = $(grepjar_SOURCES) $(jar_SOURCES)\n+SOURCES = $(fastjar_SOURCES) $(grepjar_SOURCES)\n \n srcdir = @srcdir@\n top_srcdir = @top_srcdir@\n@@ -38,7 +38,7 @@ POST_INSTALL = :\n NORMAL_UNINSTALL = :\n PRE_UNINSTALL = :\n POST_UNINSTALL = :\n-bin_PROGRAMS = jar$(EXEEXT) grepjar$(EXEEXT)\n+bin_PROGRAMS = fastjar$(EXEEXT) grepjar$(EXEEXT)\n subdir = .\n DIST_COMMON = README $(am__configure_deps) $(fastjar_TEXINFOS) \\\n \t$(srcdir)/../compile $(srcdir)/../install-sh \\\n@@ -59,24 +59,24 @@ CONFIG_CLEAN_FILES = install-defs.sh\n am__installdirs = \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(infodir)\" \"$(DESTDIR)$(man1dir)\"\n binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)\n PROGRAMS = $(bin_PROGRAMS)\n+am_fastjar_OBJECTS = fastjar-jartool.$(OBJEXT) \\\n+\tfastjar-dostime.$(OBJEXT) fastjar-compress.$(OBJEXT) \\\n+\tfastjar-pushback.$(OBJEXT) fastjar-shift.$(OBJEXT)\n+fastjar_OBJECTS = $(am_fastjar_OBJECTS)\n+am__DEPENDENCIES_1 =\n+am__DEPENDENCIES_2 = ../libiberty/libiberty.a\n am_grepjar_OBJECTS = jargrep.$(OBJEXT) dostime.$(OBJEXT) \\\n \tcompress.$(OBJEXT) pushback.$(OBJEXT)\n grepjar_OBJECTS = $(am_grepjar_OBJECTS)\n-am__DEPENDENCIES_1 =\n-am__DEPENDENCIES_2 = ../libiberty/libiberty.a\n-am_jar_OBJECTS = jar-jartool.$(OBJEXT) jar-dostime.$(OBJEXT) \\\n-\tjar-compress.$(OBJEXT) jar-pushback.$(OBJEXT) \\\n-\tjar-shift.$(OBJEXT)\n-jar_OBJECTS = $(am_jar_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I.\n depcomp =\n am__depfiles_maybe =\n COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n \t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n CCLD = $(CC)\n LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n-SOURCES = $(grepjar_SOURCES) $(jar_SOURCES)\n-DIST_SOURCES = $(grepjar_SOURCES) $(jar_SOURCES)\n+SOURCES = $(fastjar_SOURCES) $(grepjar_SOURCES)\n+DIST_SOURCES = $(fastjar_SOURCES) $(grepjar_SOURCES)\n INFO_DEPS = $(srcdir)/fastjar.info\n am__TEXINFO_TEX_DIR = $(srcdir)/../gcc/doc/include\n DVIS = fastjar.dvi\n@@ -229,12 +229,12 @@ AM_MAKEFLAGS = \\\n \n AM_CPPFLAGS = -I. -I$(top_srcdir) $(ZINCS) -I$(top_srcdir)/../include\n LIBIBERTY = ../libiberty/libiberty.a\n-jar_SOURCES = jartool.c dostime.c compress.c pushback.c shift.c jartool.h \\\n+fastjar_SOURCES = jartool.c dostime.c compress.c pushback.c shift.c jartool.h \\\n zipfile.h dostime.h compress.h pushback.h shift.h\n \n-jar_LDADD = $(ZLIBS) $(LIBIBERTY)\n-jar_DEPENDENCIES = $(ZDEPS) $(LIBIBERTY)\n-jar_CPPFLAGS = $(AM_CPPFLAGS) -DWITH_SHIFT_DOWN\n+fastjar_LDADD = $(ZLIBS) $(LIBIBERTY)\n+fastjar_DEPENDENCIES = $(ZDEPS) $(LIBIBERTY)\n+fastjar_CPPFLAGS = $(AM_CPPFLAGS) -DWITH_SHIFT_DOWN\n grepjar_SOURCES = jargrep.c dostime.c compress.c pushback.c jartool.h \\\n zipfile.h dostime.h compress.h pushback.h\n \n@@ -248,7 +248,7 @@ fastjar_TEXINFOS = \\\n \t../gcc/doc/include/gcc-common.texi \\\n \t../gcc/doc/include/gpl.texi\n \n-man_MANS = jar.1 grepjar.1\n+man_MANS = fastjar.1 grepjar.1\n EXTRA_DIST = $(man_MANS)\n TEXI2POD = perl $(srcdir)/../contrib/texi2pod.pl\n POD2MAN = pod2man --center=\"GNU\" --release=\"gcc-@gcc_version@\"\n@@ -260,7 +260,7 @@ POD2MAN = pod2man --center=\"GNU\" --release=\"gcc-@gcc_version@\"\n # --enable-generated-files-in-srcdir in the configure script.\n @GENINSRC_TRUE@STAMP_GENINSRC = stamp-geninsrc\n CLEANFILES = stamp-geninsrc\n-MAINTAINERCLEANFILES = $(srcdir)/jar.1 \\\n+MAINTAINERCLEANFILES = $(srcdir)/fastjar.1 \\\n                        $(srcdir)/grepjar.1 \\\n                        $(srcdir)/fastjar.info\n \n@@ -344,12 +344,12 @@ uninstall-binPROGRAMS:\n \n clean-binPROGRAMS:\n \t-test -z \"$(bin_PROGRAMS)\" || rm -f $(bin_PROGRAMS)\n+fastjar$(EXEEXT): $(fastjar_OBJECTS) $(fastjar_DEPENDENCIES) \n+\t@rm -f fastjar$(EXEEXT)\n+\t$(LINK) $(fastjar_LDFLAGS) $(fastjar_OBJECTS) $(fastjar_LDADD) $(LIBS)\n grepjar$(EXEEXT): $(grepjar_OBJECTS) $(grepjar_DEPENDENCIES) \n \t@rm -f grepjar$(EXEEXT)\n \t$(LINK) $(grepjar_LDFLAGS) $(grepjar_OBJECTS) $(grepjar_LDADD) $(LIBS)\n-jar$(EXEEXT): $(jar_OBJECTS) $(jar_DEPENDENCIES) \n-\t@rm -f jar$(EXEEXT)\n-\t$(LINK) $(jar_LDFLAGS) $(jar_OBJECTS) $(jar_LDADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n@@ -363,35 +363,35 @@ distclean-compile:\n .c.obj:\n \t$(COMPILE) -c `$(CYGPATH_W) '$<'`\n \n-jar-jartool.o: jartool.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-jartool.o `test -f 'jartool.c' || echo '$(srcdir)/'`jartool.c\n+fastjar-jartool.o: jartool.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-jartool.o `test -f 'jartool.c' || echo '$(srcdir)/'`jartool.c\n \n-jar-jartool.obj: jartool.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-jartool.obj `if test -f 'jartool.c'; then $(CYGPATH_W) 'jartool.c'; else $(CYGPATH_W) '$(srcdir)/jartool.c'; fi`\n+fastjar-jartool.obj: jartool.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-jartool.obj `if test -f 'jartool.c'; then $(CYGPATH_W) 'jartool.c'; else $(CYGPATH_W) '$(srcdir)/jartool.c'; fi`\n \n-jar-dostime.o: dostime.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-dostime.o `test -f 'dostime.c' || echo '$(srcdir)/'`dostime.c\n+fastjar-dostime.o: dostime.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-dostime.o `test -f 'dostime.c' || echo '$(srcdir)/'`dostime.c\n \n-jar-dostime.obj: dostime.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-dostime.obj `if test -f 'dostime.c'; then $(CYGPATH_W) 'dostime.c'; else $(CYGPATH_W) '$(srcdir)/dostime.c'; fi`\n+fastjar-dostime.obj: dostime.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-dostime.obj `if test -f 'dostime.c'; then $(CYGPATH_W) 'dostime.c'; else $(CYGPATH_W) '$(srcdir)/dostime.c'; fi`\n \n-jar-compress.o: compress.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-compress.o `test -f 'compress.c' || echo '$(srcdir)/'`compress.c\n+fastjar-compress.o: compress.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-compress.o `test -f 'compress.c' || echo '$(srcdir)/'`compress.c\n \n-jar-compress.obj: compress.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-compress.obj `if test -f 'compress.c'; then $(CYGPATH_W) 'compress.c'; else $(CYGPATH_W) '$(srcdir)/compress.c'; fi`\n+fastjar-compress.obj: compress.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-compress.obj `if test -f 'compress.c'; then $(CYGPATH_W) 'compress.c'; else $(CYGPATH_W) '$(srcdir)/compress.c'; fi`\n \n-jar-pushback.o: pushback.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-pushback.o `test -f 'pushback.c' || echo '$(srcdir)/'`pushback.c\n+fastjar-pushback.o: pushback.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-pushback.o `test -f 'pushback.c' || echo '$(srcdir)/'`pushback.c\n \n-jar-pushback.obj: pushback.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-pushback.obj `if test -f 'pushback.c'; then $(CYGPATH_W) 'pushback.c'; else $(CYGPATH_W) '$(srcdir)/pushback.c'; fi`\n+fastjar-pushback.obj: pushback.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-pushback.obj `if test -f 'pushback.c'; then $(CYGPATH_W) 'pushback.c'; else $(CYGPATH_W) '$(srcdir)/pushback.c'; fi`\n \n-jar-shift.o: shift.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-shift.o `test -f 'shift.c' || echo '$(srcdir)/'`shift.c\n+fastjar-shift.o: shift.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-shift.o `test -f 'shift.c' || echo '$(srcdir)/'`shift.c\n \n-jar-shift.obj: shift.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jar-shift.obj `if test -f 'shift.c'; then $(CYGPATH_W) 'shift.c'; else $(CYGPATH_W) '$(srcdir)/shift.c'; fi`\n+fastjar-shift.obj: shift.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fastjar_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fastjar-shift.obj `if test -f 'shift.c'; then $(CYGPATH_W) 'shift.c'; else $(CYGPATH_W) '$(srcdir)/shift.c'; fi`\n \n .texi.info:\n \trestore=: && \\\n@@ -854,18 +854,18 @@ uninstall-man: uninstall-man1\n \t\tmv -f $(@).T$$$$ $@) || \\\n \t\t(rm -f $(@).T$$$$ && exit 1)\n \n-.INTERMEDIATE: jar.pod grepjar.pod\n+.INTERMEDIATE: fastjar.pod grepjar.pod\n \n-jar.pod: $(srcdir)/fastjar.texi\n-\t-$(TEXI2POD) -D jar $< > $@\n+fastjar.pod: $(srcdir)/fastjar.texi\n+\t-$(TEXI2POD) -D fastjar $< > $@\n \n grepjar.pod: $(srcdir)/fastjar.texi\n \t-$(TEXI2POD) -D grepjar $< > $@\n \n all-local: $(STAMP_GENINSRC) \n \n-stamp-geninsrc: jar.1 grepjar.1 fastjar.info\n-\t-cp -p $(top_builddir)/jar.1 $(srcdir)/jar.1\n+stamp-geninsrc: fastjar.1 grepjar.1 fastjar.info\n+\t-cp -p $(top_builddir)/fastjar.1 $(srcdir)/fastjar.1\n \t-cp -p $(top_builddir)/grepjar.1 $(srcdir)/grepjar.1\n \t-cp -p $(top_builddir)/fastjar.info $(srcdir)/fastjar.info\n \ttouch $@"}, {"sha": "5fb856c46e061b23ab8f6b15ecd87a9bb5be3245", "filename": "fastjar/fastjar.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2Ffastjar.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/fastjar%2Ffastjar.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Ffastjar.texi?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -24,7 +24,7 @@\n \n @dircategory Individual utilities\n @direntry\n-* jar: (fastjar)Invoking jar.\n+* fastjar: (fastjar)Invoking fastjar.\n                             An archive tool for Java archives\n * grepjar: (fastjar)Invoking grepjar.\n                             Search files in a jar file for a pattern\n@@ -74,20 +74,20 @@ section entitled ``GNU General Public License''.\n @node Top\n @top Introduction\n \n-This manual describes how to use @command{jar} and @command{grepjar}.\n+This manual describes how to use @command{fastjar} and @command{grepjar}.\n \n @menu\n-* Invoking jar::\tOptions supported by @command{jar}\n+* Invoking fastjar::\tOptions supported by @command{fastjar}\n * Invoking grepjar::    Options supported by @command{grepjar}\n * Copying::\t\tThe GNU General Public License\n @end menu\n \n-@node Invoking jar\n-@chapter Invoking jar\n+@node Invoking fastjar\n+@chapter Invoking fastjar\n \n-@c man title jar archive tool for Java archives\n+@c man title fastjar archive tool for Java archives\n \n-@c man begin DESCRIPTION jar\n+@c man begin DESCRIPTION fastjar\n \n @code{fastjar} is an implementation of Sun's jar utility that comes with\n the JDK, written entirely in C, and runs in a fraction of the time while\n@@ -100,16 +100,16 @@ the same order the @option{-m} and @option{-f} flags are specified.\n @c man end\n \n @ignore\n-@c man begin SYNOPSIS jar\n-jar @option{-ctxu} [@option{OPTIONS}] [@var{jar-file}] [@var{manifest-file}] [@option{-C} @var{dir}] @var{files}@dots{}\n+@c man begin SYNOPSIS fastjar\n+fastjar @option{-ctxu} [@option{OPTIONS}] [@var{jar-file}] [@var{manifest-file}] [@option{-C} @var{dir}] @var{files}@dots{}\n @c man end\n-@c man begin SEEALSO jar\n+@c man begin SEEALSO fastjar\n gcj(1), gij(1), grepjar(1)\n and the Info entry for @file{gcj}.\n @c man end\n @end ignore\n \n-@c man begin OPTIONS jar\n+@c man begin OPTIONS fastjar\n \n Exactly one of the following actions must be specified:\n \n@@ -189,7 +189,7 @@ a pattern.\n grepjar [@option{-bcinsw}] @option{-e} @var{PATTERN} | @var{PATTERN} @var{files}@dots{}\n @c man end\n @c man begin SEEALSO grepjar\n-jar(1), gcj(1), gij(1), gfdl(7) and the Info entry for @file{gcj}.\n+fastjar(1), gcj(1), gij(1), gfdl(7) and the Info entry for @file{gcj}.\n @c man end\n @end ignore\n "}, {"sha": "f3daf2981ce914116c2abf4438e1b2bd6506b9fe", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -1,3 +1,9 @@\n+2004-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Make-lang.in: Replace rmic and rmiregistry references with\n+\tgrmic and grmiregistry.\n+\t* gcj.texi: Likewise.\n+\n 2004-07-20  Andrew Haley  <aph@redhat.com>\n \n \tPR java/16431."}, {"sha": "2944383eeb371fe607195dd92c913071418b78b9", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -167,7 +167,7 @@ java.srcinfo: doc/gcj.info\n \n dvi:: doc/gcj.dvi\n JAVA_MANFILES = doc/gcj.1 doc/gcjh.1 doc/jv-scan.1 doc/jcf-dump.1 doc/gij.1 \\\n-                doc/jv-convert.1 doc/rmic.1 doc/rmiregistry.1\n+                doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1\n \n java.man: $(JAVA_MANFILES)\n \n@@ -247,8 +247,8 @@ java.maintainer-clean:\n \t-rm -f $(docobjdir)/jv-scan.1 $(docobjdir)/jcf-dump.1\n \t-rm -f $(docobjdir)/gij.1\n \t-rm -f $(docobjdir)/jv-convert.1\n-\t-rm -f $(docobjdir)/rmic.1\n-\t-rm -f $(docobjdir)/rmiregistry.1\n+\t-rm -f $(docobjdir)/grmic.1\n+\t-rm -f $(docobjdir)/grmiregistry.1\n #\f\n # Stage hooks:\n # The main makefile has already created stage?/java.\n@@ -378,7 +378,7 @@ doc/gcj.dvi: java/gcj.texi $(docdir)/include/fdl.texi \\\n \t$(TEXI2DVI) -I $(abs_docdir)/include -o $@ $<\n \n .INTERMEDIATE: gcj.pod gcjh.pod jv-scan.pod jcf-dump.pod gij.pod \\\n-  jv-convert.pod rmic.pod rmiregistry.pod\n+  jv-convert.pod grmic.pod grmiregistry.pod\n \n gcj.pod: java/gcj.texi\n \t-$(TEXI2POD) -D gcj < $< > $@\n@@ -392,18 +392,18 @@ gij.pod: java/gcj.texi\n \t-$(TEXI2POD) -D gij < $< > $@\n jv-convert.pod: java/gcj.texi\n \t-$(TEXI2POD) -D jv-convert < $< > $@\n-rmic.pod: java/gcj.texi\n-\t-$(TEXI2POD) -D rmic < $< > $@\n-rmiregistry.pod: java/gcj.texi\n-\t-$(TEXI2POD) -D rmiregistry < $< > $@\n+grmic.pod: java/gcj.texi\n+\t-$(TEXI2POD) -D grmic < $< > $@\n+grmiregistry.pod: java/gcj.texi\n+\t-$(TEXI2POD) -D grmiregistry < $< > $@\n \n # Install the man pages.\n java.install-man: installdirs \\\n                   $(DESTDIR)$(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext) \\\n \t\t  $(JAVA_TARGET_INDEPENDENT_BIN_TOOLS:%=doc/%.1) \\\n-\t\t  doc/gij.1 doc/jv-convert.1 doc/rmic.1 doc/rmiregistry.1\n+\t\t  doc/gij.1 doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1\n \tfor tool in $(JAVA_TARGET_INDEPENDENT_BIN_TOOLS) \\\n-\t\tgij jv-convert rmic rmiregistry ; do \\\n+\t\tgij jv-convert grmic grmiregistry ; do \\\n \t  tool_transformed_name=`echo $$tool|sed '$(program_transform_name)'`; \\\n \t  man_name=$(DESTDIR)$(man1dir)/$${tool_transformed_name}$(man1ext); \\\n \t  rm -f $$man_name ; \\"}, {"sha": "e8da2ccbf27d5551f1dd1c005b6879929546bd1a", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -66,9 +66,9 @@ man page gfdl(7).\n * gij: (gcj)Invoking gij.   GNU interpreter for Java bytecode\n * jv-convert: (gcj)Invoking jv-convert.\n                             Convert file from one encoding to another\n-* rmic: (gcj)Invoking rmic.\n+* grmic: (gcj)Invoking grmic.\n                             Generate stubs for Remote Method Invocation.\n-* rmiregistry: (gcj)Invoking rmiregistry.\n+* grmiregistry: (gcj)Invoking grmiregistry.\n                             The remote object registry.\n @end direntry\n @end format\n@@ -113,8 +113,8 @@ files and object files, and it can read both Java source code and\n * Invoking jcf-dump::   Print information about class files\n * Invoking gij::\tInterpreting Java bytecodes\n * Invoking jv-convert:: Converting from one encoding to another\n-* Invoking rmic::        Generate stubs for Remote Method Invocation.\n-* Invoking rmiregistry:: The remote object registry.\n+* Invoking grmic::        Generate stubs for Remote Method Invocation.\n+* Invoking grmiregistry:: The remote object registry.\n * About CNI::           Description of the Compiled Native Interface\n * System properties::   Modifying runtime behavior of the libgcj library\n * Resources::\t\tWhere to look for more information\n@@ -1019,13 +1019,13 @@ Print version information, then exit.\n \n @c man end\n \n-@node Invoking rmic\n-@chapter Invoking rmic\n+@node Invoking grmic\n+@chapter Invoking grmic\n \n-@c man title rmic Generate stubs for Remote Method Invocation\n+@c man title grmic Generate stubs for Remote Method Invocation\n \n-@c man begin SYNOPSIS rmic\n-@command{rmic} [@option{OPTION}] @dots{} @var{class} @dots{}\n+@c man begin SYNOPSIS grmic\n+@command{grmic} [@option{OPTION}] @dots{} @var{class} @dots{}\n @ignore\n   [@option{-keep}]\n   [@option{-keepgenerated}]\n@@ -1040,16 +1040,16 @@ Print version information, then exit.\n @end ignore\n @c man end\n \n-@c man begin DESCRIPTION rmic\n+@c man begin DESCRIPTION grmic\n \n-@command{rmic} is a utility included with @code{libgcj} which generates\n+@command{grmic} is a utility included with @code{libgcj} which generates\n stubs for remote objects.\n \n @c FIXME: Add real information here.\n @c This really isn't much more than the --help output.\n \n Note that this program isn't yet fully compatible with the JDK\n-@command{rmic}.  Some options, such as @option{-classpath}, are\n+@command{grmic}.  Some options, such as @option{-classpath}, are\n recognized but currently ignored.  We have left these options\n undocumented for now.\n \n@@ -1058,31 +1058,31 @@ instance, @option{--help} is accepted.\n \n @c man end\n \n-@c man begin OPTIONS rmic\n+@c man begin OPTIONS grmic\n \n @table @gcctabopt\n @item -keep\n @itemx -keepgenerated\n-By default, @command{rmic} deletes intermediate files.  Either of these\n+By default, @command{grmic} deletes intermediate files.  Either of these\n options causes it not to delete such files.\n \n @item -v1.1\n-Cause @command{rmic} to create stubs and skeletons for the 1.1\n+Cause @command{grmic} to create stubs and skeletons for the 1.1\n protocol version.\n \n @item -vcompat\n-Cause @command{rmic} to create stubs and skeletons compatible with both\n+Cause @command{grmic} to create stubs and skeletons compatible with both\n the 1.1 and 1.2 protocol versions.  This is the default.\n \n @item -v1.2\n-Cause @command{rmic} to create stubs and skeletons for the 1.2\n+Cause @command{grmic} to create stubs and skeletons for the 1.2\n protocol version.\n \n @item -nocompile\n Don't compile the generated files.\n \n @item -verbose\n-Print information about what @command{rmic} is doing.\n+Print information about what @command{grmic} is doing.\n \n @item -d @var{directory}\n Put output files in @var{directory}.  By default the files are put in\n@@ -1098,30 +1098,30 @@ Print version information, then exit.\n @c man end\n \n \n-@node Invoking rmiregistry\n-@chapter Invoking rmiregistry\n+@node Invoking grmiregistry\n+@chapter Invoking grmiregistry\n \n-@c man title rmiregistry Remote object registry\n+@c man title grmiregistry Remote object registry\n \n-@c man begin SYNOPSIS rmiregistry\n-@command{rmic} [@option{OPTION}] @dots{} [@var{port}]\n+@c man begin SYNOPSIS grmiregistry\n+@command{grmic} [@option{OPTION}] @dots{} [@var{port}]\n @ignore\n   [@option{--help}]\n   [@option{--version}]\n @end ignore\n @c man end\n \n-@c man begin DESCRIPTION rmiregistry\n+@c man begin DESCRIPTION grmiregistry\n \n-@command{rmiregistry} starts a remote object registry on the current\n+@command{grmiregistry} starts a remote object registry on the current\n host.  If no port number is specified, then port 1099 is used.\n \n @c FIXME: Add real information here.\n @c This really isn't much more than the --help output.\n \n @c man end\n \n-@c man begin OPTIONS rmiregistry\n+@c man begin OPTIONS grmiregistry\n \n @table @gcctabopt\n @item --help"}, {"sha": "a1280c74b1557293c184431b8ab93de20ede4828", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -1,3 +1,14 @@\n+2004-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am: Replace jar, rmic and rmiregistry references with\n+\tgjar, grmic and grmiregistry.\n+\t* configure.in: Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\t* gcj/Makefile.in: Likewise.\n+\t* include/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n 2004-07-23  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* gnu/java/net/protocol/http/Connection.java: Use GetPropertyAction"}, {"sha": "fb0db4603d875dd08c91833bc6434ab0ce3a39a1", "filename": "libjava/Makefile.am", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -60,7 +60,7 @@ propdir = $(libdir)\n \n ## For now, only on native systems.  FIXME.\n if NATIVE\n-bin_PROGRAMS = jv-convert gij rmic rmiregistry\n+bin_PROGRAMS = jv-convert gij grmic grmiregistry\n endif\n \n bin_SCRIPTS = addr2name.awk\n@@ -777,29 +777,29 @@ gij_LDADD = -L$(here)/.libs libgcj.la\n ## linking this program.\n gij_DEPENDENCIES = libgcj.la libgcj.spec\n \n-rmic_SOURCES =\n+grmic_SOURCES =\n ## This is a dummy definition.\n-EXTRA_rmic_SOURCES = $(rmi_java_source_files)\n-rmic_LDFLAGS = --main=gnu.java.rmi.rmic.RMIC \\\n+EXTRA_grmic_SOURCES = $(rmi_java_source_files)\n+grmic_LDFLAGS = --main=gnu.java.rmi.rmic.RMIC \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n-rmic_LINK = $(GCJLINK)\n+grmic_LINK = $(GCJLINK)\n ## See jv_convert_LDADD.\n-rmic_LDADD = -L$(here)/.libs libgcj.la\n+grmic_LDADD = -L$(here)/.libs libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n-rmic_DEPENDENCIES = libgcj.la libgcj.spec\n+grmic_DEPENDENCIES = libgcj.la libgcj.spec\n \n-rmiregistry_SOURCES =\n+grmiregistry_SOURCES =\n ## This is a dummy definition.\n-EXTRA_rmiregistry_SOURCES = $(rmi_java_source_files)\n-rmiregistry_LDFLAGS = --main=gnu.java.rmi.registry.RegistryImpl \\\n+EXTRA_grmiregistry_SOURCES = $(rmi_java_source_files)\n+grmiregistry_LDFLAGS = --main=gnu.java.rmi.registry.RegistryImpl \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n-rmiregistry_LINK = $(GCJLINK)\n+grmiregistry_LINK = $(GCJLINK)\n ## See jv_convert_LDADD.\n-rmiregistry_LDADD = -L$(here)/.libs libgcj.la\n+grmiregistry_LDADD = -L$(here)/.libs libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n-rmiregistry_DEPENDENCIES = libgcj.la libgcj.spec\n+grmiregistry_DEPENDENCIES = libgcj.la libgcj.spec\n \n # The Unicode consortium does not permit re-distributing the file JIS0201.TXT.\n # You can get it from ftp://ftp.unicode.org/Public/MAPPINGS/EASTASIA/JIS/."}, {"sha": "13f20632cdd82440b20ca7db7686718b5283bc92", "filename": "libjava/Makefile.in", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -193,7 +193,7 @@ jar_DATA = libgcj-@gcc_version@.jar\n secdir = $(libdir)/security\n propdir = $(libdir)\n \n-@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij rmic rmiregistry\n+@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij grmic grmiregistry\n \n bin_SCRIPTS = addr2name.awk\n \n@@ -536,23 +536,23 @@ gij_LINK = $(GCJLINK)\n gij_LDADD = -L$(here)/.libs libgcj.la\n gij_DEPENDENCIES = libgcj.la libgcj.spec\n \n-rmic_SOURCES = \n-EXTRA_rmic_SOURCES = $(rmi_java_source_files)\n-rmic_LDFLAGS = --main=gnu.java.rmi.rmic.RMIC \\\n+grmic_SOURCES = \n+EXTRA_grmic_SOURCES = $(rmi_java_source_files)\n+grmic_LDFLAGS = --main=gnu.java.rmi.rmic.RMIC \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n \n-rmic_LINK = $(GCJLINK)\n-rmic_LDADD = -L$(here)/.libs libgcj.la\n-rmic_DEPENDENCIES = libgcj.la libgcj.spec\n+grmic_LINK = $(GCJLINK)\n+grmic_LDADD = -L$(here)/.libs libgcj.la\n+grmic_DEPENDENCIES = libgcj.la libgcj.spec\n \n-rmiregistry_SOURCES = \n-EXTRA_rmiregistry_SOURCES = $(rmi_java_source_files)\n-rmiregistry_LDFLAGS = --main=gnu.java.rmi.registry.RegistryImpl \\\n+grmiregistry_SOURCES = \n+EXTRA_grmiregistry_SOURCES = $(rmi_java_source_files)\n+grmiregistry_LDFLAGS = --main=gnu.java.rmi.registry.RegistryImpl \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n \n-rmiregistry_LINK = $(GCJLINK)\n-rmiregistry_LDADD = -L$(here)/.libs libgcj.la\n-rmiregistry_DEPENDENCIES = libgcj.la libgcj.spec\n+grmiregistry_LINK = $(GCJLINK)\n+grmiregistry_LDADD = -L$(here)/.libs libgcj.la\n+grmiregistry_DEPENDENCIES = libgcj.la libgcj.spec\n \n gen_from_JIS_SOURCES = \n EXTRA_gen_from_JIS_SOURCES = $(srcdir)/$(CONVERT_DIR)/gen-from-JIS.c \\\n@@ -3059,15 +3059,15 @@ gnu/gcj/xlib/natXConfigureEvent.lo gnu/gcj/xlib/natXException.lo \\\n gnu/gcj/xlib/natXExposeEvent.lo gnu/gcj/xlib/natXImage.lo \\\n gnu/gcj/xlib/natXUnmapEvent.lo\n @NATIVE_TRUE@bin_PROGRAMS =  jv-convert$(EXEEXT) gij$(EXEEXT) \\\n-@NATIVE_TRUE@rmic$(EXEEXT) rmiregistry$(EXEEXT)\n+@NATIVE_TRUE@grmic$(EXEEXT) grmiregistry$(EXEEXT)\n @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS =  \\\n @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS$(EXEEXT)\n PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)\n \n jv_convert_OBJECTS = \n gij_OBJECTS =  gij.$(OBJEXT)\n-rmic_OBJECTS = \n-rmiregistry_OBJECTS = \n+grmic_OBJECTS = \n+grmiregistry_OBJECTS = \n gen_from_JIS_OBJECTS = \n gen_from_JIS_LDFLAGS = \n SCRIPTS =  $(bin_SCRIPTS)\n@@ -4902,8 +4902,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/org/xml/sax/helpers/XMLReaderFactory.P .deps/posix-threads.P \\\n .deps/posix.P .deps/prims.P .deps/resolve.P .deps/verify.P \\\n .deps/win32-threads.P .deps/win32.P\n-SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(libgij_la_SOURCES) $(lib_org_xml_sax_la_SOURCES) $(lib_org_w3c_dom_la_SOURCES) $(lib_gnu_java_awt_peer_gtk_la_SOURCES) $(lib_gnu_awt_xlib_la_SOURCES) $(EXTRA_lib_gnu_awt_xlib_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(rmic_SOURCES) $(EXTRA_rmic_SOURCES) $(rmiregistry_SOURCES) $(EXTRA_rmiregistry_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)\n-OBJECTS = $(libgcj_la_OBJECTS) $(libgij_la_OBJECTS) $(lib_org_xml_sax_la_OBJECTS) $(lib_org_w3c_dom_la_OBJECTS) $(lib_gnu_java_awt_peer_gtk_la_OBJECTS) $(lib_gnu_awt_xlib_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(rmic_OBJECTS) $(rmiregistry_OBJECTS) $(gen_from_JIS_OBJECTS)\n+SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(libgij_la_SOURCES) $(lib_org_xml_sax_la_SOURCES) $(lib_org_w3c_dom_la_SOURCES) $(lib_gnu_java_awt_peer_gtk_la_SOURCES) $(lib_gnu_awt_xlib_la_SOURCES) $(EXTRA_lib_gnu_awt_xlib_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(grmic_SOURCES) $(EXTRA_grmic_SOURCES) $(grmiregistry_SOURCES) $(EXTRA_grmiregistry_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)\n+OBJECTS = $(libgcj_la_OBJECTS) $(libgij_la_OBJECTS) $(lib_org_xml_sax_la_OBJECTS) $(lib_org_w3c_dom_la_OBJECTS) $(lib_gnu_java_awt_peer_gtk_la_OBJECTS) $(lib_gnu_awt_xlib_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(grmic_OBJECTS) $(grmiregistry_OBJECTS) $(gen_from_JIS_OBJECTS)\n \n all: all-redirect\n .SUFFIXES:\n@@ -5047,13 +5047,13 @@ gij$(EXEEXT): $(gij_OBJECTS) $(gij_DEPENDENCIES)\n \t@rm -f gij$(EXEEXT)\n \t$(gij_LINK) $(gij_LDFLAGS) $(gij_OBJECTS) $(gij_LDADD) $(LIBS)\n \n-rmic$(EXEEXT): $(rmic_OBJECTS) $(rmic_DEPENDENCIES)\n-\t@rm -f rmic$(EXEEXT)\n-\t$(rmic_LINK) $(rmic_LDFLAGS) $(rmic_OBJECTS) $(rmic_LDADD) $(LIBS)\n+grmic$(EXEEXT): $(grmic_OBJECTS) $(grmic_DEPENDENCIES)\n+\t@rm -f grmic$(EXEEXT)\n+\t$(grmic_LINK) $(grmic_LDFLAGS) $(grmic_OBJECTS) $(grmic_LDADD) $(LIBS)\n \n-rmiregistry$(EXEEXT): $(rmiregistry_OBJECTS) $(rmiregistry_DEPENDENCIES)\n-\t@rm -f rmiregistry$(EXEEXT)\n-\t$(rmiregistry_LINK) $(rmiregistry_LDFLAGS) $(rmiregistry_OBJECTS) $(rmiregistry_LDADD) $(LIBS)\n+grmiregistry$(EXEEXT): $(grmiregistry_OBJECTS) $(grmiregistry_DEPENDENCIES)\n+\t@rm -f grmiregistry$(EXEEXT)\n+\t$(grmiregistry_LINK) $(grmiregistry_LDFLAGS) $(grmiregistry_OBJECTS) $(grmiregistry_LDADD) $(LIBS)\n \n gen-from-JIS$(EXEEXT): $(gen_from_JIS_OBJECTS) $(gen_from_JIS_DEPENDENCIES)\n \t@rm -f gen-from-JIS$(EXEEXT)"}, {"sha": "0795cf1b50e9382c1483e868e2fcbb4b2a0eef91", "filename": "libjava/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -1664,7 +1664,7 @@ else\n   if { (eval echo configure:1665: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.$ac_ext | *.c | *.o | *.obj) ;;\n+      *.c | *.o | *.obj) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -7186,7 +7186,7 @@ case \"${which_gcj}\" in\n    built)\n       GCJ=\"$built_gcc_dir/gcj -B`${PWDCMD-pwd}`/ -B$built_gcc_dir/\"\n       GCJH='$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh'\n-      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar'\n+      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar'\n    ;;\n    cross)\n       if test \"x${with_newlib}\" = \"xyes\"; then\n@@ -7203,7 +7203,7 @@ case \"${which_gcj}\" in\n       GCJ=\"gcj -B`${PWDCMD-pwd}`/\"\n       ## In this case, gcj is found outside the build tree.  However, zip is\n       ## found in the build tree.\n-      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar'\n+      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar'\n       GCJH=gcjh\n    ;;\n esac\n@@ -9272,7 +9272,7 @@ if test \"$no_recursion\" != yes; then\n       fi\n     fi\n \n-    cd \"$ac_popdir\"\n+    cd $ac_popdir\n   done\n fi\n "}, {"sha": "47773fefc82fa696f6a15dcfab05b140f58e819b", "filename": "libjava/configure.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -1092,7 +1092,7 @@ case \"${which_gcj}\" in\n    built)\n       GCJ=\"$built_gcc_dir/gcj -B`${PWDCMD-pwd}`/ -B$built_gcc_dir/\"\n       GCJH='$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh'\n-      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar'\n+      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar'\n    ;;\n    cross)\n       if test \"x${with_newlib}\" = \"xyes\"; then\n@@ -1109,7 +1109,7 @@ case \"${which_gcj}\" in\n       GCJ=\"gcj -B`${PWDCMD-pwd}`/\"\n       ## In this case, gcj is found outside the build tree.  However, zip is\n       ## found in the build tree.\n-      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar'\n+      ZIP='$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar'\n       GCJH=gcjh\n    ;;\n esac"}, {"sha": "2d39365b349f4ed904ff78bba43bb3414a9e02eb", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -178,7 +178,7 @@ DIST_COMMON =  ./stamp-h2.in Makefile.am Makefile.in libgcj-config.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:"}, {"sha": "6c0f2a0aabe0490efb299a34b917fa94fde8f3e4", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -174,7 +174,7 @@ DIST_COMMON =  ./stamp-h1.in Makefile.am Makefile.in config.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:"}, {"sha": "1a0f6cf50ba67b2c664920631bdf89f4a770f344", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef05818b76a645f094e89f0804611d19c677f03f/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=ef05818b76a645f094e89f0804611d19c677f03f", "patch": "@@ -183,7 +183,7 @@ DIST_COMMON =  Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:"}]}