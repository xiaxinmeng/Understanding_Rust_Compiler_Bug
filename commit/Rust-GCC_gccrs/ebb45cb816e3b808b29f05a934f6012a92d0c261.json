{"sha": "ebb45cb816e3b808b29f05a934f6012a92d0c261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJiNDVjYjgxNmUzYjgwOGIyOWYwNWE5MzRmNjAxMmE5MmQwYzI2MQ==", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2021-06-24T13:20:14Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-24T13:20:14Z"}, "message": "libstdc++: Remove dead code in simd\n\nThis helper type became unused at some point.\n\nSigned-off-by: Matthias Kretz <m.kretz@gsi.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/simd_fixed_size.h\n\t(_AbisInSimdTuple): Removed.", "tree": {"sha": "3ece2802fac4082231e90ea997d788e6697c9b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ece2802fac4082231e90ea997d788e6697c9b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebb45cb816e3b808b29f05a934f6012a92d0c261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb45cb816e3b808b29f05a934f6012a92d0c261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb45cb816e3b808b29f05a934f6012a92d0c261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb45cb816e3b808b29f05a934f6012a92d0c261/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0237aa8c706f09bb2568224afcdac40b5e47c3e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0237aa8c706f09bb2568224afcdac40b5e47c3e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0237aa8c706f09bb2568224afcdac40b5e47c3e1"}], "stats": {"total": 49, "additions": 0, "deletions": 49}, "files": [{"sha": "b6fb47cdf39fa035d56ad8818ca19a86a6abfe1a", "filename": "libstdc++-v3/include/experimental/bits/simd_fixed_size.h", "status": "modified", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebb45cb816e3b808b29f05a934f6012a92d0c261/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_fixed_size.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebb45cb816e3b808b29f05a934f6012a92d0c261/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_fixed_size.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_fixed_size.h?ref=ebb45cb816e3b808b29f05a934f6012a92d0c261", "patch": "@@ -1025,55 +1025,6 @@ template <typename _Tp, int _Np, typename... _As, typename _Next, int _Remain>\n       _Tp, _Remain, _SimdTuple<_Tp, _As..., typename _Next::abi_type>>::type;\n   };\n \n-// }}}\n-// _AbisInSimdTuple {{{\n-template <typename _Tp>\n-  struct _SeqOp;\n-\n-template <size_t _I0, size_t... _Is>\n-  struct _SeqOp<index_sequence<_I0, _Is...>>\n-  {\n-    using _FirstPlusOne = index_sequence<_I0 + 1, _Is...>;\n-    using _NotFirstPlusOne = index_sequence<_I0, (_Is + 1)...>;\n-    template <size_t _First, size_t _Add>\n-    using _Prepend = index_sequence<_First, _I0 + _Add, (_Is + _Add)...>;\n-  };\n-\n-template <typename _Tp>\n-  struct _AbisInSimdTuple;\n-\n-template <typename _Tp>\n-  struct _AbisInSimdTuple<_SimdTuple<_Tp>>\n-  {\n-    using _Counts = index_sequence<0>;\n-    using _Begins = index_sequence<0>;\n-  };\n-\n-template <typename _Tp, typename _Ap>\n-  struct _AbisInSimdTuple<_SimdTuple<_Tp, _Ap>>\n-  {\n-    using _Counts = index_sequence<1>;\n-    using _Begins = index_sequence<0>;\n-  };\n-\n-template <typename _Tp, typename _A0, typename... _As>\n-  struct _AbisInSimdTuple<_SimdTuple<_Tp, _A0, _A0, _As...>>\n-  {\n-    using _Counts = typename _SeqOp<typename _AbisInSimdTuple<\n-      _SimdTuple<_Tp, _A0, _As...>>::_Counts>::_FirstPlusOne;\n-    using _Begins = typename _SeqOp<typename _AbisInSimdTuple<\n-      _SimdTuple<_Tp, _A0, _As...>>::_Begins>::_NotFirstPlusOne;\n-  };\n-\n-template <typename _Tp, typename _A0, typename _A1, typename... _As>\n-  struct _AbisInSimdTuple<_SimdTuple<_Tp, _A0, _A1, _As...>>\n-  {\n-    using _Counts = typename _SeqOp<typename _AbisInSimdTuple<\n-      _SimdTuple<_Tp, _A1, _As...>>::_Counts>::template _Prepend<1, 0>;\n-    using _Begins = typename _SeqOp<typename _AbisInSimdTuple<\n-      _SimdTuple<_Tp, _A1, _As...>>::_Begins>::template _Prepend<0, 1>;\n-  };\n-\n // }}}\n // __autocvt_to_simd {{{\n template <typename _Tp, bool = is_arithmetic_v<__remove_cvref_t<_Tp>>>"}]}