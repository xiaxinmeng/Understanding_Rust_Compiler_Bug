{"sha": "cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M5NTZiYTJjYjRkNzJiZjc5ZmQ1MDhiOTZhMGU1YWVmYjhiNDg4Mg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-03-09T22:01:15Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-03-09T22:01:15Z"}, "message": "frv.h: Use TARGET_CPU_CPP_BUILTINS, not CPP_PREDEFINES.\n\n\t* config/frv/frv.h: Use TARGET_CPU_CPP_BUILTINS, not CPP_PREDEFINES.\n\t* config/ip2k/ip2k.h: Similarly.\n\t* config/m32r/m32r.h: Similarly.\n\t* config/m68hc11/m68hc11.h: Similarly.\n\t* config/mn10200/mn10200.h: Similarly.\n\t* config/mn10300/mn10300.h: Similarly.\n\t* config/pdp11/pdp11.h: Similarly.\n\t* config/v850/v850.h: Similarly.\n\t* config/rs6000/vxworks.h: Similarly for TARGET_OS_CPP_BUILTINS.\n\t* config/v850/retms.h: Similarly for TARGET_OS_CPP_BUILTINS.\n\t* config/mips/iris3.h: Remove #if 0 block.\n\nFrom-SVN: r64049", "tree": {"sha": "65d0d6a17e094bd608d3cc8c6cf1bb99cb3cb3a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d0d6a17e094bd608d3cc8c6cf1bb99cb3cb3a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/comments", "author": null, "committer": null, "parents": [{"sha": "6544fbcb2ae41e065b956179bbc6cf7176c8901e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6544fbcb2ae41e065b956179bbc6cf7176c8901e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6544fbcb2ae41e065b956179bbc6cf7176c8901e"}], "stats": {"total": 144, "additions": 89, "deletions": 55}, "files": [{"sha": "2fb0ef842245293d6407bcc51edbbe1df58e394c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -1,3 +1,24 @@\n+2003-03-09  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* config/frv/frv.h: Use TARGET_CPU_CPP_BUILTINS, not CPP_PREDEFINES.\n+\t* config/ip2k/ip2k.h: Similarly.\n+\t* config/m32r/m32r.h: Similarly.\n+\t* config/m68hc11/m68hc11.h: Similarly.\n+\t* config/mn10200/mn10200.h: Similarly.\n+\t* config/mn10300/mn10300.h: Similarly.\n+\t* config/pdp11/pdp11.h: Similarly.\n+\t* config/v850/v850.h: Similarly.\n+\t* config/rs6000/vxworks.h: Similarly for TARGET_OS_CPP_BUILTINS.\n+\t* config/v850/retms.h: Similarly for TARGET_OS_CPP_BUILTINS.\n+\t* config/mips/iris3.h: Remove #if 0 block.\n+\n+2003-03-09  Roger Sayle  <roger@eyesopen.com>\n+\t    Joern Rennecke <joern.rennecke@superh.com>\n+\n+\t* gcc.c (do_spec_1) ['{']: Revert 2003-02-24 patch.  Don't handle\n+\tpending argument upon return from handle_braces here.\n+\t(do_spec_2): Instead handle it upon return from do_spec_1 here.\n+\n 2003-03-09  Roger Sayle  <roger@eyesopen.com>\n \t    Joern Rennecke <joern.rennecke@superh.com>\n "}, {"sha": "39bc1769575b5fb1a2f9ff586167e03c969fb127", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -280,16 +280,13 @@\n \n /* Run-time target specifications */\n \n-/* Define this to be a string constant containing `-D' options to define the\n-   predefined macros that identify this machine and system.  These macros will\n-   be predefined unless the `-ansi' option is specified.\n-\n-   In addition, a parallel set of macros are predefined, whose names are made\n-   by appending `__' at the beginning and at the end.  These `__' macros are\n-   permitted by the ANSI standard, so they are predefined regardless of whether\n-   `-ansi' is specified.  */\n-\n-#define CPP_PREDEFINES \"-D__frv__ -Amachine(frv)\"\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__frv__\");\t\t\\\n+      builtin_assert (\"machine=frv\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n \f\n /* This declaration should be present.  */"}, {"sha": "a4cd4e45b20c28828551af3e89be1525be407e08", "filename": "gcc/config/ip2k/ip2k.h", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fip2k%2Fip2k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fip2k%2Fip2k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -27,26 +27,15 @@ Boston, MA 02111-1307, USA.  */\n #include \"elfos.h\"\n #undef ASM_SPEC\t\t\t/* But we have a GAS assembler.  */\n \n-#define CPP_PREDEFINES \\\n-  \"-DIP2K -D_DOUBLE_IS_32BITS -D__BUFSIZ__=512 -D__FILENAME_MAX__=128\"\n-/* Define this to be a string constant containing `-D' options to\n-   define the predefined macros that identify this machine and system.\n-   These macros will be predefined unless the `-ansi' option is\n-   specified.\n-\n-   In addition, a parallel set of macros are predefined, whose names\n-   are made by appending `__' at the beginning and at the end.  These\n-   `__' macros are permitted by the ANSI standard, so they are\n-   predefined regardless of whether `-ansi' is specified.\n-\n-   For example, on the Sun, one can use the following value:\n-\n-   \"-Dmc68000 -Dsun -Dunix\"\n-\n-   The result is to define the macros `__mc68000__', `__sun__' and\n-   `__unix__' unconditionally, and the macros `mc68000', `sun' and\n-   `unix' provided `-ansi' is not specified.  */\n-\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define_std (\"IP2K\");\t\t\\\n+      builtin_define (\"_DOUBLE_IS_32BITS\");\t\\\n+      builtin_define (\"_BUFSIZ=512\");\t\t\\\n+      builtin_define (\"__FILENAME_MAX__=128\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* This declaration should be present.  */\n extern int target_flags;"}, {"sha": "0c48b3ea4c59176cd058848ae23dc0d999c2d995", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -105,7 +105,14 @@ Boston, MA 02111-1307, USA.  */\n \n /* Names to predefine in the preprocessor for this target machine.  */\n /* __M32R__ is defined by the existing compiler so we use that.  */\n-#define CPP_PREDEFINES \"-Acpu=m32r -Amachine=m32r -D__M32R__\"\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__M32R__\");\t\t\\\n+      builtin_assert (\"cpu=m32r\");\t\t\\\n+      builtin_assert (\"machine=m32r\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* This macro defines names of additional specifications to put in the specs\n    that can be used in various specifications like CC1_SPEC.  Its definition"}, {"sha": "7fc467bf2a8db84417027fb010a59e07a91c10a3", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -84,7 +84,12 @@ Boston, MA 02111-1307, USA.\n #define STARTFILE_SPEC \"crt1%O%s\"\n \n /* Names to predefine in the preprocessor for this target machine.  */\n-#define CPP_PREDEFINES\t\t\"-Dmc68hc1x\"\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define_std (\"mc68hc1x\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* As an embedded target, we have no libc.  */\n #define inhibit_libc"}, {"sha": "042f74286ea03658a71098cbff01e8f4065ac753", "filename": "gcc/config/mips/iris3.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fmips%2Firis3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fmips%2Firis3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis3.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -20,16 +20,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SGI_TARGET 1\t\t/* inform other mips files this is SGI */\n \n-/* Names to predefine in the preprocessor for this target machine.  */\n-/* Temporarily #if 0'd until Irix header consolidation.  */\n-#if 0\n-#define CPP_PREDEFINES\t\"\\\n--Dunix -Dmips -Dsgi -DSVR3 -Dhost_mips -DMIPSEB -DSYSTYPE_SYSV \\\n--Asystem=unix -Asystem=svr3 -Acpu=mips -Amachine=mips\"\n-#define SUBTARGET_CPP_SPEC \"\\\n-%{!ansi:-D__EXTENSIONS__} -D_MIPSEB -D_SYSTYPE_SYSV\"\n-#endif\n-\n #define STARTFILE_SPEC\t\"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}\"\n #define LIB_SPEC\t\\\n \t\"%{!p:%{!pg:%{!static:%{!g*:-lc_s}} -lc}}%{p:-lc_p}%{pg:-lc_p} crtn.o%s\""}, {"sha": "7ea4bb3f39810a0cb9e879ad5e2eb1da64071fe1", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -32,7 +32,13 @@ Boston, MA 02111-1307, USA.  */\n \n /* Names to predefine in the preprocessor for this target machine.  */\n \n-#define CPP_PREDEFINES \"-D__mn10200__ -D__MN10200__\"\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__mn10200__\");\t\t\\\n+      builtin_define (\"__MN10200__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n "}, {"sha": "0bde1766d925b6524bf7f4064a239be550a93d4d", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -33,7 +33,13 @@ Boston, MA 02111-1307, USA.  */\n \n /* Names to predefine in the preprocessor for this target machine.  */\n \n-#define CPP_PREDEFINES \"-D__mn10300__ -D__MN10300__\"\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__mn10300__\");\t\t\\\n+      builtin_define (\"__MN10300__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #define CPP_SPEC \"%{mam33:-D__AM33__}\"\n "}, {"sha": "07f3704aac3d4ec9126c76b105528cd8bc6c9d76", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -30,7 +30,12 @@ Boston, MA 02111-1307, USA.  */\n \n /* Names to predefine in the preprocessor for this target machine.  */\n \n-#define CPP_PREDEFINES \"-Dpdp11\"\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define_std (\"pdp11\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION fprintf (stderr, \" (pdp11)\");"}, {"sha": "5f2cde10475c1d70ae853543ac0e41a3c27efd79", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -18,11 +18,14 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* N.B. Only big endian PPC is supported by VxWorks.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n-  \"-D__vxworks -D__vxworks__ -D_BIG_ENDIAN -D__BIG_ENDIAN__\"\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__vxworks\");\t\t\\\n+      builtin_define (\"__vxworks__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* We have to kill off the entire specs set created by rs6000/sysv4.h\n    and substitute our own set.  The top level vxworks.h has done some"}, {"sha": "6a312acc45f7062f4a75fbf965c0aff9877aa436", "filename": "gcc/config/v850/rtems.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fv850%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fv850%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Frtems.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -20,7 +20,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__v851__ -D__v850 -D__rtems__ \\\n-  -Asystem=rtems -Acpu=v850 -Amachine=v850\"\n+#define TARGET_OS_CPP_BUILTINS() do {\t\t\\\n+  builtin_define( \"__rtems__\" );\t\t\\\n+  builtin_assert( \"system=rtems\" );\t\t\\\n+} while (0)"}, {"sha": "531b73be6cea43903a464a293b124c10f9f8094d", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=cc956ba2cb4d72bf79fd508b96a0e5aefb8b4882", "patch": "@@ -65,7 +65,12 @@\n  { \"subtarget_cpp_spec\", SUBTARGET_CPP_SPEC } \n \n /* Names to predefine in the preprocessor for this target machine.  */\n-#define CPP_PREDEFINES \"-D__v851__ -D__v850\"\n+#define TARGET_CPU_CPP_BUILTINS() do {\t\t\\\n+  builtin_define( \"__v851__\" );\t\t\t\\\n+  builtin_define( \"__v850\" );\t\t\t\\\n+  builtin_assert( \"machine=v850\" );\t\t\\\n+  builtin_assert( \"cpu=v850\" );\t\t\t\\\n+} while(0)\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n "}]}