{"sha": "26a8813fa33bf0812690f848e0ef5d432587a82f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZhODgxM2ZhMzNiZjA4MTI2OTBmODQ4ZTBlZjVkNDMyNTg3YTgyZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-03-15T00:42:43Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-03-15T00:42:43Z"}, "message": "genrecog: Fix crash on invalid input\n\nIf your machine description refers to a non-existent predicate genrecog\ncrashes.  This fixes it.\n\n\n\t* genrecog.c (match_pattern_2): If pred is NULL don't call\n\tsafe_predicate_mode on it.\n\nFrom-SVN: r234206", "tree": {"sha": "6b196c9a8b3779b7c85edb7eb2feee8c64dada80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b196c9a8b3779b7c85edb7eb2feee8c64dada80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26a8813fa33bf0812690f848e0ef5d432587a82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a8813fa33bf0812690f848e0ef5d432587a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a8813fa33bf0812690f848e0ef5d432587a82f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a8813fa33bf0812690f848e0ef5d432587a82f/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26a7773c2f46845e5c94a98f6ee5c96081fa511d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a7773c2f46845e5c94a98f6ee5c96081fa511d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a7773c2f46845e5c94a98f6ee5c96081fa511d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "637ef039cd87762cfe5b760f021b721354bca041", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a8813fa33bf0812690f848e0ef5d432587a82f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a8813fa33bf0812690f848e0ef5d432587a82f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26a8813fa33bf0812690f848e0ef5d432587a82f", "patch": "@@ -1,3 +1,8 @@\n+2016-03-15  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* genrecog.c (match_pattern_2): If pred is NULL don't call\n+\tsafe_predicate_mode on it.\n+\n 2016-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/70219"}, {"sha": "47e42660fcc854e5da3eba4bee2bb4b06a7352b1", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a8813fa33bf0812690f848e0ef5d432587a82f/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a8813fa33bf0812690f848e0ef5d432587a82f/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=26a8813fa33bf0812690f848e0ef5d432587a82f", "patch": "@@ -4037,7 +4037,7 @@ match_pattern_2 (state *s, md_rtx_info *info, position *pos, rtx pattern)\n \t\t/* Check the mode first, to distinguish things like SImode\n \t\t   and DImode register_operands, as described above.  */\n \t\tmachine_mode mode = GET_MODE (e->pattern);\n-\t\tif (safe_predicate_mode (pred, mode))\n+\t\tif (pred && safe_predicate_mode (pred, mode))\n \t\t  s = add_decision (s, rtx_test::mode (e->pos), mode, true);\n \n \t\t/* Assign to operands[] first, so that the rtx usually doesn't"}]}