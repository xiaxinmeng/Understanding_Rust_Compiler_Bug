{"sha": "8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRkOWExMjBhMjRkMWZhMGNkNDQ2ODBlMzdkM2Q3NDZiNGNlNzQ4OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2008-07-10T18:45:25Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2008-07-10T18:45:25Z"}, "message": "Makefile.in (LOOSE_WARN, [...]): Update comments.\n\n\t* Makefile.in (LOOSE_WARN, STRICT_WARN): Update comments.\n\t* configure.ac (loose_warn): Move -Wc++-compat from here...\n\t(strict_warn): ...to here.\n\t* configure: Regenerate.\n\nFrom-SVN: r137699", "tree": {"sha": "923e67cbf2580563bed00a7d86733723f0978c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/923e67cbf2580563bed00a7d86733723f0978c9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/comments", "author": null, "committer": null, "parents": [{"sha": "e68152b607d95496a9eb81b0aa2e5c18495cf5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68152b607d95496a9eb81b0aa2e5c18495cf5d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68152b607d95496a9eb81b0aa2e5c18495cf5d6"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "e5d68ed6ef889482cf068869b48e8228c397267e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "patch": "@@ -1,3 +1,10 @@\n+2008-07-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (LOOSE_WARN, STRICT_WARN): Update comments.\n+\t* configure.ac (loose_warn): Move -Wc++-compat from here...\n+\t(strict_warn): ...to here.\n+\t* configure: Regenerate.\n+\n 2008-07-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config.gcc (arm-*-coff*, armel-*-coff*, h8300-*-*,"}, {"sha": "1617adcbf4042f2ad40e7ba8ef1a7e954407ff94", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "patch": "@@ -155,10 +155,9 @@ coverageexts = .{gcda,gcno}\n # flags from configure.  The user is free to explicitly turn these flags\n # off if they wish.\n # LOOSE_WARN are the warning flags to use when compiling something\n-# which is only compiled with gcc, such as libgcc and the frontends\n-# other than C.\n+# which is only compiled with gcc, such as libgcc.\n # STRICT_WARN are the additional warning flags to\n-# apply to the back end and the C front end, which may be compiled\n+# apply to the back end and some front ends, which may be compiled\n # with other compilers.\n LOOSE_WARN = @loose_warn@\n STRICT_WARN = @strict_warn@"}, {"sha": "09d2768e669c489c11a0b48883c1da0f3b8164e9", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "patch": "@@ -7015,7 +7015,7 @@ fi\n loose_warn=\n save_CFLAGS=\"$CFLAGS\"\n for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n-\t  -Wmissing-prototypes -Wcast-qual -Wc++-compat; do\n+\t  -Wmissing-prototypes -Wcast-qual; do\n   as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   echo \"$as_me:$LINENO: checking whether $CC supports $option\" >&5\n@@ -7082,7 +7082,7 @@ CFLAGS=\"$save_CFLAGS\"\n \n strict_warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -Wold-style-definition \\\n+for option in -Wold-style-definition -Wc++-compat \\\n                           -Wmissing-format-attribute; do\n   as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n "}, {"sha": "d5244bd380094ebccef01476e39993ba02c53656", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dd9a120a24d1fa0cd44680e37d3d746b4ce7488/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=8dd9a120a24d1fa0cd44680e37d3d746b4ce7488", "patch": "@@ -323,8 +323,8 @@ AC_CHECK_TYPES([__int64], [AC_CHECK_SIZEOF(__int64)])\n # So, we only use -pedantic if we can disable those warnings.\n \n ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n-\t  -Wmissing-prototypes -Wcast-qual -Wc++-compat], [loose_warn])\n-ACX_PROG_CC_WARNING_OPTS([-Wold-style-definition \\\n+\t  -Wmissing-prototypes -Wcast-qual], [loose_warn])\n+ACX_PROG_CC_WARNING_OPTS([-Wold-style-definition -Wc++-compat \\\n                           -Wmissing-format-attribute], [strict_warn])\n ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long -Wno-variadic-macros \\\n \t\t\t\t     -Wno-overlength-strings], [strict_warn])"}]}