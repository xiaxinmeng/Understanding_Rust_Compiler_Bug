{"sha": "4ada1976c90d133790ae647ef649b4aab7d2b487", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFkYTE5NzZjOTBkMTMzNzkwYWU2NDdlZjY0OWI0YWFiN2QyYjQ4Nw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-27T12:38:05Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-27T12:38:05Z"}, "message": "URL.java (getURLStreamHandler): Check if we have to use cache before trying to retrieve handler from cache.\n\n2003-09-27  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/URL.java (getURLStreamHandler):\n\tCheck if we have to use cache before trying to retrieve handler from\n\tcache. Rename facName to clsName to match classpath more. Reformated\n\tsome little pieces.\n\nFrom-SVN: r71852", "tree": {"sha": "bd343e17cde3ce8c7460374042e97685cbdf6aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd343e17cde3ce8c7460374042e97685cbdf6aa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ada1976c90d133790ae647ef649b4aab7d2b487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ada1976c90d133790ae647ef649b4aab7d2b487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ada1976c90d133790ae647ef649b4aab7d2b487", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ada1976c90d133790ae647ef649b4aab7d2b487/comments", "author": null, "committer": null, "parents": [{"sha": "9415397d87dbecbdd0d2e96e6c57098494012f6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9415397d87dbecbdd0d2e96e6c57098494012f6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9415397d87dbecbdd0d2e96e6c57098494012f6b"}], "stats": {"total": 60, "additions": 39, "deletions": 21}, "files": [{"sha": "8cd4e1e013e28f5072c13472b3c0902d3b2c7965", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ada1976c90d133790ae647ef649b4aab7d2b487/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ada1976c90d133790ae647ef649b4aab7d2b487/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4ada1976c90d133790ae647ef649b4aab7d2b487", "patch": "@@ -1,3 +1,10 @@\n+2003-09-27  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/URL.java (getURLStreamHandler):\n+\tCheck if we have to use cache before trying to retrieve handler from\n+\tcache. Rename facName to clsName to match classpath more. Reformated\n+\tsome little pieces.\n+\n 2003-09-27  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/SelectionKeyImpl.java"}, {"sha": "0e0f3186945e8e34666abf78159536be35ff97c0", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 32, "deletions": 21, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ada1976c90d133790ae647ef649b4aab7d2b487/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ada1976c90d133790ae647ef649b4aab7d2b487/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=4ada1976c90d133790ae647ef649b4aab7d2b487", "patch": "@@ -753,18 +753,21 @@ public String toString()\n   {\n     URLStreamHandler ph;\n \n-    // See if a handler has been cached for this protocol.\n-    if ((ph = (URLStreamHandler) ph_cache.get(protocol)) != null)\n-      return ph;\n+    // First, see if a protocol handler is in our cache.\n+    if (cache_handlers)\n+      {\n+        if ((ph = (URLStreamHandler) ph_cache.get(protocol)) != null)\n+          return ph;\n+      }\n \n     // If a non-default factory has been set, use it to find the protocol.\n     if (factory != null)\n       {\n-\tph = factory.createURLStreamHandler(protocol);\n+\tph = factory.createURLStreamHandler (protocol);\n       }\n     else if (protocol.equals (\"core\"))\n       {\n- \tph = new gnu.gcj.protocol.core.Handler ();\n+ \tph = new gnu.gcj.protocol.core.Handler();\n       }\n     else if (protocol.equals (\"file\"))\n       {\n@@ -778,7 +781,7 @@ else if (protocol.equals (\"file\"))\n \t// fix this problem.  If other protocols are required in a\n \t// statically linked application they will need to be handled in\n \t// the same way as \"file\".\n-\tph = new gnu.gcj.protocol.file.Handler ();\n+\tph = new gnu.gcj.protocol.file.Handler();\n       }\n \n     // Non-default factory may have returned null or a factory wasn't set.\n@@ -793,22 +796,30 @@ else if (protocol.equals (\"file\"))\n \tpropVal = (propVal == null) ? \"\" : (propVal + \"|\");\n \tpropVal = propVal + \"gnu.gcj.protocol|sun.net.www.protocol\";\n \n-\tStringTokenizer pkgPrefix = new StringTokenizer(propVal, \"|\");\n+\t// Finally loop through our search path looking for a match.\n+\tStringTokenizer pkgPrefix = new StringTokenizer (ph_search_path, \"|\");\n+        \n \tdo\n-\t  {\n-\t    String facName = pkgPrefix.nextToken() + \".\" + protocol +\n-\t\t\t\t\".Handler\";\n-\t    try\n-\t      {\n-\t\tph = (URLStreamHandler) Class.forName(facName).newInstance();\n-\t      }\n-\t    catch (Exception e)\n-\t      {\n-\t\t// Can't instantiate; handler still null, go on to next element.\n-\t      }\n-\t  } while ((ph == null ||\n-\t\t    ! (ph instanceof URLStreamHandler)) &&\n-\t\t   pkgPrefix.hasMoreTokens());\n+          {\n+            String clsName = pkgPrefix.nextToken() + \".\" + protocol + \".Handler\";\n+         \n+            try\n+              {\n+                Object obj = Class.forName (clsName).newInstance();\n+\t    \n+                if (!(obj instanceof URLStreamHandler))\n+                  continue;\n+                else\n+                  ph = (URLStreamHandler) obj;\n+              }\n+            catch (Exception e)\n+              {\n+                // Can't instantiate; handler still null, go on to next element.\n+              }\n+          }\n+\twhile ((ph == null ||\n+\t\t!(ph instanceof URLStreamHandler))\n+               && pkgPrefix.hasMoreTokens());\n       }\n \n     // Update the hashtable with the new protocol handler."}]}