{"sha": "2b894715ba76dc0e8ca8d73adc814d68deeacfda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI4OTQ3MTViYTc2ZGMwZThjYThkNzNhZGM4MTRkNjhkZWVhY2ZkYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-11-27T00:10:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-11-27T00:10:18Z"}, "message": "Fix expand_atomic_fetch_op wrt unused_result.\n\n        * optabs.c (expand_atomic_fetch_op): Always return result.\n\nFrom-SVN: r181750", "tree": {"sha": "01dacf29ef3b1b931a0f9ef419e373c31f31998d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01dacf29ef3b1b931a0f9ef419e373c31f31998d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b894715ba76dc0e8ca8d73adc814d68deeacfda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b894715ba76dc0e8ca8d73adc814d68deeacfda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b894715ba76dc0e8ca8d73adc814d68deeacfda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b894715ba76dc0e8ca8d73adc814d68deeacfda/comments", "author": null, "committer": null, "parents": [{"sha": "022c0cd11d277b3e6b76c060f7f8d3f1dc675127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022c0cd11d277b3e6b76c060f7f8d3f1dc675127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022c0cd11d277b3e6b76c060f7f8d3f1dc675127"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c16f1d8db5838c285a9c490912c22b59ab9deaf0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b894715ba76dc0e8ca8d73adc814d68deeacfda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b894715ba76dc0e8ca8d73adc814d68deeacfda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b894715ba76dc0e8ca8d73adc814d68deeacfda", "patch": "@@ -1,5 +1,7 @@\n 2011-11-26  Richard Henderson  <rth@redhat.com>\n \n+\t* optabs.c (expand_atomic_fetch_op): Always return result.\n+\n \t* optabs.c (init_sync_libfuncs_1): Include max in iteration.\n \n \t* omp-low.c (expand_omp_atomic): Assume anything aligned to"}, {"sha": "a1917cc322046130750769a764f278c6af968c08", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b894715ba76dc0e8ca8d73adc814d68deeacfda/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b894715ba76dc0e8ca8d73adc814d68deeacfda/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=2b894715ba76dc0e8ca8d73adc814d68deeacfda", "patch": "@@ -8068,7 +8068,7 @@ expand_atomic_fetch_op (rtx target, rtx mem, rtx val, enum rtx_code code,\n \t{\n \t  /* If the result isn't used, no need to do compensation code.  */\n \t  if (unused_result)\n-\t    return target;\n+\t    return result;\n \n \t  /* Issue compensation code.  Fetch_after  == fetch_before OP val.\n \t     Fetch_before == after REVERSE_OP val.  */\n@@ -8110,9 +8110,7 @@ expand_atomic_fetch_op (rtx target, rtx mem, rtx val, enum rtx_code code,\n \t  result = emit_library_call_value (libfunc, NULL, LCT_NORMAL, mode,\n \t\t\t\t\t    2, addr, ptr_mode, val, mode);\n \n-\t  if (unused_result)\n-\t    return target;\n-\t  if (fixup)\n+\t  if (!unused_result && fixup)\n \t    result = expand_simple_binop (mode, code, result, val, target,\n \t\t\t\t\t  true, OPTAB_LIB_WIDEN);\n \t  return result;"}]}