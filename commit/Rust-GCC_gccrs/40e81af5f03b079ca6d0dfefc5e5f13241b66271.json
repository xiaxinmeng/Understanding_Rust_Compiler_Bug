{"sha": "40e81af5f03b079ca6d0dfefc5e5f13241b66271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBlODFhZjVmMDNiMDc5Y2E2ZDBkZmVmYzVlNWYxMzI0MWI2NjI3MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-08-14T23:13:22Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-08-14T23:13:22Z"}, "message": "(loop_iterations): Use PREV_INSN not prev_nonnote_insn.\n\nFrom-SVN: r7925", "tree": {"sha": "1d7ac72401277122e1d75c6af2fda1bb891603f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d7ac72401277122e1d75c6af2fda1bb891603f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40e81af5f03b079ca6d0dfefc5e5f13241b66271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e81af5f03b079ca6d0dfefc5e5f13241b66271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e81af5f03b079ca6d0dfefc5e5f13241b66271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e81af5f03b079ca6d0dfefc5e5f13241b66271/comments", "author": null, "committer": null, "parents": [{"sha": "87fc3db7132e6199bac0e699194ccac8902ebc0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fc3db7132e6199bac0e699194ccac8902ebc0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fc3db7132e6199bac0e699194ccac8902ebc0a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7a3c4f9b8e11acbaa54c1352d2aa61148f5c758d", "filename": "gcc/unroll.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e81af5f03b079ca6d0dfefc5e5f13241b66271/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e81af5f03b079ca6d0dfefc5e5f13241b66271/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=40e81af5f03b079ca6d0dfefc5e5f13241b66271", "patch": "@@ -3093,7 +3093,11 @@ loop_iterations (loop_start, loop_end)\n   loop_final_value = 0;\n   loop_iteration_var = 0;\n \n-  last_loop_insn = prev_nonnote_insn (loop_end);\n+  /* We used to use pren_nonnote_insn here, but that fails because it might\n+     accidentally get the branch for a contained loop if the branch for this\n+     loop was deleted.  We can only trust branches immediately before the\n+     loop_end.  */\n+  last_loop_insn = PREV_INSN (loop_end);\n \n   comparison = get_condition_for_loop (last_loop_insn);\n   if (comparison == 0)"}]}