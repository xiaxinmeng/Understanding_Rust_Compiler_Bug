{"sha": "fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExZTU1YjBhMGM4NDNiNThjNmU2MjhmYjNjMjlhZmEzNmZjZjc3OA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-06-21T19:08:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-06-21T19:08:01Z"}, "message": "re PR other/53317 (Conversion from __int128 to __float128)\n\n\tPR other/53317\n\ngcc/testsuite:\n\t* gcc.dg/torture/fp-int-convert-float128-timode-2.c: New test.\n\nlibgcc:\n\t* soft-fp/adddf3.c: Update from glibc.\n\t* soft-fp/addsf3.c: Likewise.\n\t* soft-fp/addtf3.c: Likewise.\n\t* soft-fp/divdf3.c: Likewise.\n\t* soft-fp/divsf3.c: Likewise.\n\t* soft-fp/divtf3.c: Likewise.\n\t* soft-fp/double.h: Likewise.\n\t* soft-fp/eqdf2.c: Likewise.\n\t* soft-fp/eqsf2.c: Likewise.\n\t* soft-fp/eqtf2.c: Likewise.\n\t* soft-fp/extenddftf2.c: Likewise.\n\t* soft-fp/extended.h: Likewise.\n\t* soft-fp/extendsfdf2.c: Likewise.\n\t* soft-fp/extendsftf2.c: Likewise.\n\t* soft-fp/fixdfdi.c: Likewise.\n\t* soft-fp/fixdfsi.c: Likewise.\n\t* soft-fp/fixsfdi.c: Likewise.\n\t* soft-fp/fixsfsi.c: Likewise.\n\t* soft-fp/fixtfdi.c: Likewise.\n\t* soft-fp/fixtfsi.c: Likewise.\n\t* soft-fp/fixunsdfdi.c: Likewise.\n\t* soft-fp/fixunsdfsi.c: Likewise.\n\t* soft-fp/fixunssfdi.c: Likewise.\n\t* soft-fp/fixunssfsi.c: Likewise.\n\t* soft-fp/fixunstfdi.c: Likewise.\n\t* soft-fp/fixunstfsi.c: Likewise.\n\t* soft-fp/floatdidf.c: Likewise.\n\t* soft-fp/floatdisf.c: Likewise.\n\t* soft-fp/floatditf.c: Likewise.\n\t* soft-fp/floatsidf.c: Likewise.\n\t* soft-fp/floatsisf.c: Likewise.\n\t* soft-fp/floatsitf.c: Likewise.\n\t* soft-fp/floatundidf.c: Likewise.\n\t* soft-fp/floatundisf.c: Likewise.\n\t* soft-fp/floatunditf.c: Likewise.\n\t* soft-fp/floatunsidf.c: Likewise.\n\t* soft-fp/floatunsisf.c: Likewise.\n\t* soft-fp/floatunsitf.c: Likewise.\n\t* soft-fp/gedf2.c: Likewise.\n\t* soft-fp/gesf2.c: Likewise.\n\t* soft-fp/getf2.c: Likewise.\n\t* soft-fp/ledf2.c: Likewise.\n\t* soft-fp/lesf2.c: Likewise.\n\t* soft-fp/letf2.c: Likewise.\n\t* soft-fp/muldf3.c: Likewise.\n\t* soft-fp/mulsf3.c: Likewise.\n\t* soft-fp/multf3.c: Likewise.\n\t* soft-fp/negdf2.c: Likewise.\n\t* soft-fp/negsf2.c: Likewise.\n\t* soft-fp/negtf2.c: Likewise.\n\t* soft-fp/op-1.h: Likewise.\n\t* soft-fp/op-2.h: Likewise.\n\t* soft-fp/op-4.h: Likewise.\n\t* soft-fp/op-8.h: Likewise.\n\t* soft-fp/op-common.h: Likewise.\n\t* soft-fp/quad.h: Likewise.\n\t* soft-fp/single.h: Likewise.\n\t* soft-fp/soft-fp.h: Likewise.\n\t* soft-fp/subdf3.c: Likewise.\n\t* soft-fp/subsf3.c: Likewise.\n\t* soft-fp/subtf3.c: Likewise.\n\t* soft-fp/truncdfsf2.c: Likewise.\n\t* soft-fp/trunctfdf2.c: Likewise.\n\t* soft-fp/trunctfsf2.c: Likewise.\n\t* soft-fp/unorddf2.c: Likewise.\n\t* soft-fp/unordsf2.c: Likewise.\n\t* soft-fp/unordtf2.c: Likewise.\n\t* config/aarch64/sfp-machine.h (_FP_QNANNEGATEDP): Define to 0.\n\t* config/arm/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/c6x/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/i386/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/ia64/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/lm32/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/moxie/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/rs6000/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/score/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/tilegx/sfp-machine32.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/tilegx/sfp-machine64.h (_FP_QNANNEGATEDP): Likewise.\n\t* config/tilepro/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n\nFrom-SVN: r200318", "tree": {"sha": "17eab9f43bce6053b9ed78bb7b5fc9e4bc9f28cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17eab9f43bce6053b9ed78bb7b5fc9e4bc9f28cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b4171c331d0875e411ea19b63b04a41a263c10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4171c331d0875e411ea19b63b04a41a263c10c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4171c331d0875e411ea19b63b04a41a263c10c"}], "stats": {"total": 405, "additions": 285, "deletions": 120}, "files": [{"sha": "b0632ff7df82f0ef7144131f0631b3bf3e99fc4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,3 +1,8 @@\n+2013-06-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR other/53317\n+\t* gcc.dg/torture/fp-int-convert-float128-timode-2.c: New test.\n+\n 2013-06-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/57655"}, {"sha": "9990e190c60239007f8c6df4030d2454874e797c", "filename": "gcc/testsuite/gcc.dg/torture/fp-int-convert-float128-timode-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-float128-timode-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-float128-timode-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-float128-timode-2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -0,0 +1,21 @@\n+/* Test floating-point conversions.  __float128 type with TImode: bug\n+   53317.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do run { target i?86-*-* x86_64-*-* ia64-*-* } } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  volatile unsigned long long a = 0x1000000000000ULL;\n+  volatile unsigned long long b = 0xffffffffffffffffULL;\n+  unsigned __int128 c = (((unsigned __int128) a) << 64) | b;\n+  __float128 d = c;\n+  if (d != 0x1.000000000000ffffffffffffffffp112q)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "b23ec657d0f158e761b275adea536d159464030c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,3 +1,86 @@\n+2013-06-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR other/53317\n+\t* soft-fp/adddf3.c: Update from glibc.\n+\t* soft-fp/addsf3.c: Likewise.\n+\t* soft-fp/addtf3.c: Likewise.\n+\t* soft-fp/divdf3.c: Likewise.\n+\t* soft-fp/divsf3.c: Likewise.\n+\t* soft-fp/divtf3.c: Likewise.\n+\t* soft-fp/double.h: Likewise.\n+\t* soft-fp/eqdf2.c: Likewise.\n+\t* soft-fp/eqsf2.c: Likewise.\n+\t* soft-fp/eqtf2.c: Likewise.\n+\t* soft-fp/extenddftf2.c: Likewise.\n+\t* soft-fp/extended.h: Likewise.\n+\t* soft-fp/extendsfdf2.c: Likewise.\n+\t* soft-fp/extendsftf2.c: Likewise.\n+\t* soft-fp/fixdfdi.c: Likewise.\n+\t* soft-fp/fixdfsi.c: Likewise.\n+\t* soft-fp/fixsfdi.c: Likewise.\n+\t* soft-fp/fixsfsi.c: Likewise.\n+\t* soft-fp/fixtfdi.c: Likewise.\n+\t* soft-fp/fixtfsi.c: Likewise.\n+\t* soft-fp/fixunsdfdi.c: Likewise.\n+\t* soft-fp/fixunsdfsi.c: Likewise.\n+\t* soft-fp/fixunssfdi.c: Likewise.\n+\t* soft-fp/fixunssfsi.c: Likewise.\n+\t* soft-fp/fixunstfdi.c: Likewise.\n+\t* soft-fp/fixunstfsi.c: Likewise.\n+\t* soft-fp/floatdidf.c: Likewise.\n+\t* soft-fp/floatdisf.c: Likewise.\n+\t* soft-fp/floatditf.c: Likewise.\n+\t* soft-fp/floatsidf.c: Likewise.\n+\t* soft-fp/floatsisf.c: Likewise.\n+\t* soft-fp/floatsitf.c: Likewise.\n+\t* soft-fp/floatundidf.c: Likewise.\n+\t* soft-fp/floatundisf.c: Likewise.\n+\t* soft-fp/floatunditf.c: Likewise.\n+\t* soft-fp/floatunsidf.c: Likewise.\n+\t* soft-fp/floatunsisf.c: Likewise.\n+\t* soft-fp/floatunsitf.c: Likewise.\n+\t* soft-fp/gedf2.c: Likewise.\n+\t* soft-fp/gesf2.c: Likewise.\n+\t* soft-fp/getf2.c: Likewise.\n+\t* soft-fp/ledf2.c: Likewise.\n+\t* soft-fp/lesf2.c: Likewise.\n+\t* soft-fp/letf2.c: Likewise.\n+\t* soft-fp/muldf3.c: Likewise.\n+\t* soft-fp/mulsf3.c: Likewise.\n+\t* soft-fp/multf3.c: Likewise.\n+\t* soft-fp/negdf2.c: Likewise.\n+\t* soft-fp/negsf2.c: Likewise.\n+\t* soft-fp/negtf2.c: Likewise.\n+\t* soft-fp/op-1.h: Likewise.\n+\t* soft-fp/op-2.h: Likewise.\n+\t* soft-fp/op-4.h: Likewise.\n+\t* soft-fp/op-8.h: Likewise.\n+\t* soft-fp/op-common.h: Likewise.\n+\t* soft-fp/quad.h: Likewise.\n+\t* soft-fp/single.h: Likewise.\n+\t* soft-fp/soft-fp.h: Likewise.\n+\t* soft-fp/subdf3.c: Likewise.\n+\t* soft-fp/subsf3.c: Likewise.\n+\t* soft-fp/subtf3.c: Likewise.\n+\t* soft-fp/truncdfsf2.c: Likewise.\n+\t* soft-fp/trunctfdf2.c: Likewise.\n+\t* soft-fp/trunctfsf2.c: Likewise.\n+\t* soft-fp/unorddf2.c: Likewise.\n+\t* soft-fp/unordsf2.c: Likewise.\n+\t* soft-fp/unordtf2.c: Likewise.\n+\t* config/aarch64/sfp-machine.h (_FP_QNANNEGATEDP): Define to 0.\n+\t* config/arm/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/c6x/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/i386/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/ia64/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/lm32/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/moxie/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/rs6000/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/score/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/tilegx/sfp-machine32.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/tilegx/sfp-machine64.h (_FP_QNANNEGATEDP): Likewise.\n+\t* config/tilepro/sfp-machine.h (_FP_QNANNEGATEDP): Likewise.\n+\n 2013-06-16  J\u00fcrgen Urban  <JuergenUrban@gmx.de>\n \n \t* config/mips/lib2funcs.c: New file."}, {"sha": "306da1749b3047bb1963d3f217e0d328e88a8dac", "filename": "libgcc/config/aarch64/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Faarch64%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Faarch64%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -45,6 +45,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* This appears to be in line with the VFP conventions in the v7-a\n    ARM-ARM. Need to check with the v8 version.  */"}, {"sha": "bb34895ebf47f65f9da78d637248ce63dea26106", "filename": "libgcc/config/arm/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Farm%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Farm%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -29,6 +29,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* Someone please check this.  */\n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\"}, {"sha": "277959bc95fa5822811ea6c00cb26debadf35ac2", "filename": "libgcc/config/c6x/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fc6x%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fc6x%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -50,6 +50,7 @@\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* Someone please check this.  */\n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\"}, {"sha": "4587b132d4445d03ad137c1ba3b5afa4d9172b04", "filename": "libgcc/config/i386/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -15,6 +15,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #endif\n \n #define _FP_KEEPNANFRACP\t1\n+#define _FP_QNANNEGATEDP 0\n \n #define _FP_NANSIGN_S\t\t1\n #define _FP_NANSIGN_D\t\t1"}, {"sha": "e06bc9a4b57b491efc24de13068e526bfdf0c217", "filename": "libgcc/config/ia64/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fia64%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fia64%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -24,6 +24,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANFRAC_Q\t\t_FP_QNANBIT_Q, 0\n \n #define _FP_KEEPNANFRACP\t1\n+#define _FP_QNANNEGATEDP 0\n \n #define _FP_NANSIGN_S\t\t1\n #define _FP_NANSIGN_D\t\t1"}, {"sha": "6dc15ba2d0bcaa207c2f463e7bb7ba07ac727e3e", "filename": "libgcc/config/lm32/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Flm32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Flm32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flm32%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -22,6 +22,7 @@\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* Someone please check this.  */\n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\"}, {"sha": "139d3ea48665f627376d5c876ea4d58355711757", "filename": "libgcc/config/moxie/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fmoxie%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fmoxie%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmoxie%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -27,6 +27,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* Someone please check this.  */\n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\"}, {"sha": "58c8721bcfc11d5ebfd981db18c59ac38478faad", "filename": "libgcc/config/rs6000/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Frs6000%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Frs6000%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -27,6 +27,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* Someone please check this.  */\n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\"}, {"sha": "139d3ea48665f627376d5c876ea4d58355711757", "filename": "libgcc/config/score/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fscore%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Fscore%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fscore%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -27,6 +27,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t0\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n /* Someone please check this.  */\n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\"}, {"sha": "31a203252fcb237e032bd163ec23e7d9a22733ab", "filename": "libgcc/config/tilegx/sfp-machine32.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine32.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -32,6 +32,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t1\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\"}, {"sha": "7cf352e63f5fad861d0cf9c9d3ff1aba4c86f4de", "filename": "libgcc/config/tilegx/sfp-machine64.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine64.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -32,6 +32,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t1\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\"}, {"sha": "a921533e144aff11c2306244730c3fe890c83d88", "filename": "libgcc/config/tilepro/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Ftilepro%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fconfig%2Ftilepro%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilepro%2Fsfp-machine.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -27,6 +27,7 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define _FP_NANSIGN_Q\t\t1\n \n #define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n \n #define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\"}, {"sha": "55df554b050d42a84fd1ad065b9db4cb8c858c3c", "filename": "libgcc/soft-fp/adddf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fadddf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fadddf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fadddf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a + b\n-   Copyright (C) 1997,1999, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8a31449e379ad81f515dd1dd58e60129da3b60b9", "filename": "libgcc/soft-fp/addsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Faddsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Faddsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Faddsf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a + b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "7a2732513a9d67d4bc43eb393ddd4dbd00a74da9", "filename": "libgcc/soft-fp/addtf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Faddtf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Faddtf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Faddtf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a + b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "c3dcf8085e41f3bd167f4b9603be606122cf18c2", "filename": "libgcc/soft-fp/divdf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdivdf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdivdf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdivdf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a / b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "063462f8a16dfb95da0067e6af52f20b29502296", "filename": "libgcc/soft-fp/divsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdivsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdivsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdivsf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a / b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "03d017ddb6e3d57f47da5a868d1d5b0b49483b2c", "filename": "libgcc/soft-fp/divtf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdivtf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdivtf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdivtf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a / b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "759c2eb661adcaa7b81b615c469a80c0e32ed3ee", "filename": "libgcc/soft-fp/double.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdouble.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fdouble.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdouble.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,7 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Double Precision\n-   Copyright (C) 1997, 1998, 1999, 2006, 2007, 2008, 2009, 2012\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "c93c118f4e5d3e895da878a5e65cb617da6da46c", "filename": "libgcc/soft-fp/eqdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Feqdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Feqdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqdf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 otherwise\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "e5b2a5f36aac57b0339be6ffaefe39e12924ea51", "filename": "libgcc/soft-fp/eqsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Feqsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Feqsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqsf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 otherwise\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "47b5d5cb61803859481591366a60d071349057c5", "filename": "libgcc/soft-fp/eqtf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Feqtf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Feqtf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqtf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 otherwise\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "ff76a8cc2ff5676f238f1ea6d5d6e684c1f22b5f", "filename": "libgcc/soft-fp/extenddftf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextenddftf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextenddftf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextenddftf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE quad\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "74927550eb21404e8cfb76e7c0201cff06c3955d", "filename": "libgcc/soft-fp/extended.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextended.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextended.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextended.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Extended Precision.\n-   Copyright (C) 1999,2006,2007,2012 Free Software Foundation, Inc.\n+   Copyright (C) 1999-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Jakub Jelinek (jj@ultra.linux.cz).\n \n@@ -203,7 +203,7 @@ union _FP_UNION_E\n  * anyway, we optimize it by doing most of the calculations\n  * in two UWtype registers instead of four.\n  */\n- \n+\n #define _FP_SQRT_MEAT_E(R, S, T, X, q)\t\t\t\\\n   do {\t\t\t\t\t\t\t\\\n     q = (_FP_W_TYPE)1 << (_FP_W_TYPE_SIZE - 1);\t\t\\\n@@ -416,7 +416,7 @@ union _FP_UNION_E\n \tR##_f0 |= _FP_WORK_STICKY;\t\t\t\\\n       }\t\t\t\t\t\t\t\\\n   } while (0)\n- \n+\n #define FP_CMP_E(r,X,Y,un)\t_FP_CMP(E,2,r,X,Y,un)\n #define FP_CMP_EQ_E(r,X,Y)\t_FP_CMP_EQ(E,2,r,X,Y)\n #define FP_CMP_UNORD_E(r,X,Y)\t_FP_CMP_UNORD(E,2,r,X,Y)"}, {"sha": "7fc4046f8ae96737e351697101a8186c97a23fc7", "filename": "libgcc/soft-fp/extendsfdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextendsfdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextendsfdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendsfdf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE double\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8271a88466b926395857141cbc65c2a534c82be6", "filename": "libgcc/soft-fp/extendsftf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextendsftf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fextendsftf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendsftf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE quad\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "71ce1d4d71ce5b81c6d01521b89f3178439ca925", "filename": "libgcc/soft-fp/fixdfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixdfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixdfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixdfdi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit signed integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "f0c9960644be908bbb6f1d08c540614ff90c11c2", "filename": "libgcc/soft-fp/fixdfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixdfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixdfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixdfsi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit signed integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "5f69d6a2885847ed3dbb9d9965c669e432636cee", "filename": "libgcc/soft-fp/fixsfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixsfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixsfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixsfdi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit signed integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "6fffdd737825246b6059b250b896625fd0cdf452", "filename": "libgcc/soft-fp/fixsfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixsfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixsfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixsfsi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit signed integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "ac67bfbd3c0835f81dd9895439ff3c6a7ebc60e0", "filename": "libgcc/soft-fp/fixtfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixtfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixtfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixtfdi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit signed integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8f27ff66f0e916094aa2a760e96e93cbdffd6025", "filename": "libgcc/soft-fp/fixtfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixtfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixtfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixtfsi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit signed integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "82fe1c75380bf3c2f54741b514ff3fb430a825e2", "filename": "libgcc/soft-fp/fixunsdfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunsdfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunsdfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunsdfdi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit unsigned integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "43287b007323a30dd6c3e3122d61f6cf7ce20932", "filename": "libgcc/soft-fp/fixunsdfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunsdfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunsdfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunsdfsi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit unsigned integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "c0691c663cf4d8fb0f8d0ad20c6633ba41066df1", "filename": "libgcc/soft-fp/fixunssfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunssfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunssfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunssfdi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit unsigned integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "3d00ce8d56c22e994d2c5690e727bc79ebe7891d", "filename": "libgcc/soft-fp/fixunssfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunssfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunssfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunssfsi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit unsigned integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "d6038fa8914d280262069006f8fe5591c3fabcef", "filename": "libgcc/soft-fp/fixunstfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunstfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunstfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunstfdi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit unsigned integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "c8481f1caf0ba28a1f97cf7fb9f82a8180d212bc", "filename": "libgcc/soft-fp/fixunstfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunstfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffixunstfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunstfsi.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit unsigned integer\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "f6f594a84f6b4527d048bf53d5d0bb38ba12cb50", "filename": "libgcc/soft-fp/floatdidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatdidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatdidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatdidf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit signed integer to IEEE double\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "72252e4a999184cb4f70db59aac39ec3ff2e79ef", "filename": "libgcc/soft-fp/floatdisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatdisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatdisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatdisf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit signed integer to IEEE single\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "68da6c60b0d160f0009947eb4474d93948fd26cf", "filename": "libgcc/soft-fp/floatditf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatditf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatditf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatditf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit signed integer to IEEE quad\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "ec578fba79106c93545539ba9663e56781c70e66", "filename": "libgcc/soft-fp/floatsidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatsidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatsidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatsidf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit signed integer to IEEE double\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "c9ff205d7fd291420391ac0ba151969b4c1015e5", "filename": "libgcc/soft-fp/floatsisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatsisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatsisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatsisf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit signed integer to IEEE single\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "6e24b9ea634579ab30cefc62550d3eb126dfdf70", "filename": "libgcc/soft-fp/floatsitf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatsitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatsitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatsitf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit signed integer to IEEE quad\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1babcec8e0bbd4456496462aeb84416856aec096", "filename": "libgcc/soft-fp/floatundidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatundidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatundidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatundidf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit unsigned integer to IEEE double\n-   Copyright (C) 1997, 1999, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1c645c023d388bd6a9cea9c825586c656cde8ce8", "filename": "libgcc/soft-fp/floatundisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatundisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatundisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatundisf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit unsigned integer to IEEE single\n-   Copyright (C) 1997, 1999, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "fff73fdb67caa858f730bd8515fe57176a35345b", "filename": "libgcc/soft-fp/floatunditf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunditf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunditf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunditf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit unsigned integer to IEEE quad\n-   Copyright (C) 1997,1999, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "548dc7c0c46ccda29ffda7bee568f75330c92aae", "filename": "libgcc/soft-fp/floatunsidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunsidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunsidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunsidf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit unsigned integer to IEEE double\n-   Copyright (C) 1997, 1999, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "2c0cc897636c8ca5a30b6126fe3f73cfc7e4574c", "filename": "libgcc/soft-fp/floatunsisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunsisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunsisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunsisf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit unsigned integer to IEEE single\n-   Copyright (C) 1997, 1999, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1099c2ee849488e670a4589fa38e721eed45b672", "filename": "libgcc/soft-fp/floatunsitf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunsitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ffloatunsitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunsitf.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit unsigned integer to IEEE quad\n-   Copyright (C) 1997,1999, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "0ef9f5de2c87a1343f757cde09bb9a451fd541c2", "filename": "libgcc/soft-fp/gedf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fgedf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fgedf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fgedf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "f0a83773104126125b48e836e0e604107e5abf93", "filename": "libgcc/soft-fp/gesf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fgesf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fgesf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fgesf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "705d48b905393c6764b37c16ef258fc484897940", "filename": "libgcc/soft-fp/getf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fgetf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fgetf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fgetf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "7b8f403bb80fc3bc5556ffad36f279e84c2fa488", "filename": "libgcc/soft-fp/ledf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fledf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fledf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fledf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "41f823b5fc28b27f43dd2e7427a98394cbea7d3a", "filename": "libgcc/soft-fp/lesf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Flesf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Flesf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Flesf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "59342ca4cb9729c1fc1a2c63b031338eb461dde6", "filename": "libgcc/soft-fp/letf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fletf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fletf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fletf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8c08281b46f62a3a4bb70f73a3d6cf8d66cf9f18", "filename": "libgcc/soft-fp/muldf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fmuldf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fmuldf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fmuldf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a * b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "f0341a56c5fe0a83c20fef8122dded9bf20bdf99", "filename": "libgcc/soft-fp/mulsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fmulsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fmulsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fmulsf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a * b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "35badf2fc8d18b9355912d431e2d8e82a481120e", "filename": "libgcc/soft-fp/multf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fmultf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fmultf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fmultf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a * b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "3cc6f5f400b5d36860c2bb81147d8de72f06757d", "filename": "libgcc/soft-fp/negdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fnegdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fnegdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fnegdf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return -a\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "d8d5910603675fcf945d9ea27e5b3f99bd48d29d", "filename": "libgcc/soft-fp/negsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fnegsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fnegsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fnegsf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return -a\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1c08441487b68399a7e2f487146f12155cca6735", "filename": "libgcc/soft-fp/negtf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fnegtf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fnegtf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fnegtf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return -a\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8e05e2fab7e474ff2ae4180abaf4f3327b5018c5", "filename": "libgcc/soft-fp/op-1.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-1.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic one-word fraction declaration and manipulation.\n-   Copyright (C) 1997,1998,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -233,7 +233,7 @@ do {\t\t\t\t\t\t\t\\\n \t_nl = X##_f << (_FP_W_TYPE_SIZE - 1);\t\t\t\t\\\n \t_nh = X##_f >> 1;\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    \t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n     udiv_qrnnd(_q, _r, _nh, _nl, _y);\t\t\t\t\t\\\n     R##_f = _q | (_r != 0);\t\t\t\t\t\t\\\n   } while (0)\n@@ -255,14 +255,14 @@ do {\t\t\t\t\t\t\t\\\n     udiv_qrnnd(_q, _r, _nh, _nl, Y##_f);\t\t\\\n     R##_f = _q | (_r != 0);\t\t\t\t\\\n   } while (0)\n-  \n-  \n+\n+\n /*\n  * Square root algorithms:\n  * We have just one right now, maybe Newton approximation\n  * should be added for those machines where division is fast.\n  */\n- \n+\n #define _FP_SQRT_MEAT_1(R, S, T, X, q)\t\t\t\\\n   do {\t\t\t\t\t\t\t\\\n     while (q != _FP_WORK_ROUND)\t\t\t\t\\\n@@ -286,7 +286,7 @@ do {\t\t\t\t\t\t\t\\\n   } while (0)\n \n /*\n- * Assembly/disassembly for converting to/from integral types.  \n+ * Assembly/disassembly for converting to/from integral types.\n  * No shifting or overflow handled here.\n  */\n "}, {"sha": "48e01d26dc4dc8c79747ac0da270f1a0920657c3", "filename": "libgcc/soft-fp/op-2.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-2.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic two-word fraction declaration and manipulation.\n-   Copyright (C) 1997,1998,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -145,7 +145,7 @@\n #define _FP_MAXFRAC_2\t\t(~(_FP_WS_TYPE)0), (~(_FP_WS_TYPE)0)\n \n /*\n- * Internals \n+ * Internals\n  */\n \n #define __FP_FRAC_SET_2(X,I1,I0)\t(X##_f0 = I0, X##_f1 = I1)\n@@ -348,7 +348,7 @@\n    point multiplication.  This is useful if floating point\n    multiplication has much bigger throughput than integer multiply.\n    It is supposed to work for _FP_W_TYPE_SIZE 64 and wfracbits\n-   between 106 and 120 only.  \n+   between 106 and 120 only.\n    Caller guarantees that X and Y has (1LLL << (wfracbits - 1)) set.\n    SETFETZ is a macro which will disable all FPU exceptions and set rounding\n    towards zero,  RESETFE should optionally reset it back.  */\n@@ -433,10 +433,10 @@\n     R##_f1 = (_t240 << (128 - (wfracbits - 1)))\t\t\t\t\t\\\n \t     | ((_u240 & 0xffffff) >> ((wfracbits - 1) - 104));\t\t\t\\\n     R##_f0 = ((_u240 & 0xffffff) << (168 - (wfracbits - 1)))\t\t\t\\\n-    \t     | ((_v240 & 0xffffff) << (144 - (wfracbits - 1)))\t\t\t\\\n-    \t     | ((_w240 & 0xffffff) << (120 - (wfracbits - 1)))\t\t\t\\\n-    \t     | ((_x240 & 0xffffff) >> ((wfracbits - 1) - 96))\t\t\t\\\n-    \t     | _y240;\t\t\t\t\t\t\t\t\\\n+\t     | ((_v240 & 0xffffff) << (144 - (wfracbits - 1)))\t\t\t\\\n+\t     | ((_w240 & 0xffffff) << (120 - (wfracbits - 1)))\t\t\t\\\n+\t     | ((_x240 & 0xffffff) >> ((wfracbits - 1) - 96))\t\t\t\\\n+\t     | _y240;\t\t\t\t\t\t\t\t\\\n     resetfe;\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n@@ -544,7 +544,7 @@\n  * We have just one right now, maybe Newton approximation\n  * should be added for those machines where division is fast.\n  */\n- \n+\n #define _FP_SQRT_MEAT_2(R, S, T, X, q)\t\t\t\\\n   do {\t\t\t\t\t\t\t\\\n     while (q)\t\t\t\t\t\t\\\n@@ -586,7 +586,7 @@\n \n \n /*\n- * Assembly/disassembly for converting to/from integral types.  \n+ * Assembly/disassembly for converting to/from integral types.\n  * No shifting or overflow handled here.\n  */\n "}, {"sha": "007b01f36c8b6667c2c0773daf56bcfd2e95d84f", "filename": "libgcc/soft-fp/op-4.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-4.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic four-word fraction declaration and manipulation.\n-   Copyright (C) 1997,1998,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -81,7 +81,7 @@\n   } while (0)\n \n \n-/* Right shift with sticky-lsb. \n+/* Right shift with sticky-lsb.\n  * What this actually means is that we do a standard right-shift,\n  * but that if any of the bits that fall off the right hand side\n  * were one then we always set the LSbit.\n@@ -435,7 +435,7 @@\n  * We have just one right now, maybe Newton approximation\n  * should be added for those machines where division is fast.\n  */\n- \n+\n #define _FP_SQRT_MEAT_4(R, S, T, X, q)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n     while (q)\t\t\t\t\t\t\t\\\n@@ -481,7 +481,7 @@\n \t    S##_f[2] += (T##_f[1] > S##_f[1]);\t\t\t\\\n \t    S##_f[3] += (T##_f[2] > S##_f[2]);\t\t\t\\\n \t    __FP_FRAC_DEC_3(X##_f[3], X##_f[2], X##_f[1],\t\\\n-\t    \t\t    T##_f[3], T##_f[2], T##_f[1]);\t\\\n+\t\t\t    T##_f[3], T##_f[2], T##_f[1]);\t\\\n \t    R##_f[1] += q;\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\\\n \t_FP_FRAC_SLL_4(X, 1);\t\t\t\t\t\\\n@@ -516,7 +516,7 @@\n \n \n /*\n- * Internals \n+ * Internals\n  */\n \n #define __FP_FRAC_SET_4(X,I3,I2,I1,I0)\t\t\t\t\t\\\n@@ -618,9 +618,9 @@\n /* Convert FP values between word sizes. This appears to be more\n  * complicated than I'd have expected it to be, so these might be\n  * wrong... These macros are in any case somewhat bogus because they\n- * use information about what various FRAC_n variables look like \n+ * use information about what various FRAC_n variables look like\n  * internally [eg, that 2 word vars are X_f0 and x_f1]. But so do\n- * the ones in op-2.h and op-1.h. \n+ * the ones in op-2.h and op-1.h.\n  */\n #define _FP_FRAC_COPY_1_4(D, S)\t\t(D##_f = S##_f[0])\n \n@@ -630,7 +630,7 @@ do {\t\t\t\t\t\t\\\n   D##_f1 = S##_f[1];\t\t\t\t\\\n } while (0)\n \n-/* Assembly/disassembly for converting to/from integral types.  \n+/* Assembly/disassembly for converting to/from integral types.\n  * No shifting or overflow handled here.\n  */\n /* Put the FP value X into r, which is an integer of size rsize. */"}, {"sha": "8890d02201cd87568ef659b8facb20af44d23cf1", "filename": "libgcc/soft-fp/op-8.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-8.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-8.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-8.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic eight-word fraction declaration and manipulation.\n-   Copyright (C) 1997,1998,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz) and\n@@ -77,7 +77,7 @@\n   } while (0)\n \n \n-/* Right shift with sticky-lsb. \n+/* Right shift with sticky-lsb.\n  * What this actually means is that we do a standard right-shift,\n  * but that if any of the bits that fall off the right hand side\n  * were one then we always set the LSbit."}, {"sha": "c4acb9916139f393a33ccac8e00ceab1d9f51029", "filename": "libgcc/soft-fp/op-common.h", "status": "modified", "additions": 75, "deletions": 29, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fop-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-common.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,5 +1,5 @@\n /* Software floating-point emulation. Common operations.\n-   Copyright (C) 1997,1998,1999,2006,2007,2012 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -29,10 +29,22 @@\n    License along with the GNU C Library; if not, see\n    <http://www.gnu.org/licenses/>.  */\n \n-#define _FP_DECL(wc, X)\t\t\t\t\t\t\\\n-  _FP_I_TYPE X##_c __attribute__((unused)), X##_s, X##_e;\t\\\n+#define _FP_DECL(wc, X)\t\t\t\t\\\n+  _FP_I_TYPE X##_c __attribute__((unused));\t\\\n+  _FP_I_TYPE X##_s __attribute__((unused));\t\\\n+  _FP_I_TYPE X##_e;\t\t\t\t\\\n   _FP_FRAC_DECL_##wc(X)\n \n+/* Test whether the qNaN bit denotes a signaling NaN.  */\n+#define _FP_FRAC_SNANP(fs, X)\t\t\t\t\t\t\\\n+  ((_FP_QNANNEGATEDP)\t\t\t\t\t\t\t\\\n+   ? (_FP_FRAC_HIGH_RAW_##fs(X) & _FP_QNANBIT_##fs)\t\t\t\\\n+   : !(_FP_FRAC_HIGH_RAW_##fs(X) & _FP_QNANBIT_##fs))\n+#define _FP_FRAC_SNANP_SEMIRAW(fs, X)\t\t\t\t\t\\\n+  ((_FP_QNANNEGATEDP)\t\t\t\t\t\t\t\\\n+   ? (_FP_FRAC_HIGH_##fs(X) & _FP_QNANBIT_SH_##fs)\t\t\t\\\n+   : !(_FP_FRAC_HIGH_##fs(X) & _FP_QNANBIT_SH_##fs))\n+\n /*\n  * Finish truely unpacking a native fp value by classifying the kind\n  * of fp value and normalizing both the exponent and the fraction.\n@@ -72,7 +84,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tX##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n \t/* Check for signaling NaN */\t\t\t\t\t\\\n-\tif (!(_FP_FRAC_HIGH_RAW_##fs(X) & _FP_QNANBIT_##fs))\t\t\\\n+\tif (_FP_FRAC_SNANP(fs, X))\t\t\t\t\t\\\n \t  FP_SET_EXCEPTION(FP_EX_INVALID);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     break;\t\t\t\t\t\t\t\t\\\n@@ -110,7 +122,7 @@ do {\t\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n   if (X##_e == _FP_EXPMAX_##fs\t\t\t\t\t\\\n       && !_FP_FRAC_ZEROP_##wc(X)\t\t\t\t\\\n-      && !(_FP_FRAC_HIGH_##fs(X) & _FP_QNANBIT_SH_##fs))\t\\\n+      && _FP_FRAC_SNANP_SEMIRAW(fs, X))\t\t\t\t\\\n     FP_SET_EXCEPTION(FP_EX_INVALID);\t\t\t\t\\\n } while (0)\n \n@@ -125,6 +137,39 @@ do {\t\t\t\t\t\t\t\t\t\\\n   _FP_FRAC_SLL_##wc(R, _FP_WORKBITS);\t\t\t\t\t\\\n } while (0)\n \n+/* Make the fractional part a quiet NaN, preserving the payload\n+   if possible, otherwise make it the canonical quiet NaN and set\n+   the sign bit accordingly.  */\n+#define _FP_SETQNAN(fs, wc, X)\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (_FP_QNANNEGATEDP)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      _FP_FRAC_HIGH_RAW_##fs(X) &= _FP_QNANBIT_##fs - 1;\t\t\\\n+      if (_FP_FRAC_ZEROP_##wc(X))\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  X##_s = _FP_NANSIGN_##fs;\t\t\t\t\t\\\n+\t  _FP_FRAC_SET_##wc(X, _FP_NANFRAC_##fs);\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    _FP_FRAC_HIGH_RAW_##fs(X) |= _FP_QNANBIT_##fs;\t\t\t\\\n+} while (0)\n+#define _FP_SETQNAN_SEMIRAW(fs, wc, X)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (_FP_QNANNEGATEDP)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      _FP_FRAC_HIGH_##fs(X) &= _FP_QNANBIT_SH_##fs - 1;\t\t\t\\\n+      if (_FP_FRAC_ZEROP_##wc(X))\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  X##_s = _FP_NANSIGN_##fs;\t\t\t\t\t\\\n+\t  _FP_FRAC_SET_##wc(X, _FP_NANFRAC_##fs);\t\t\t\\\n+\t  _FP_FRAC_SLL_##wc(X, _FP_WORKBITS);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    _FP_FRAC_HIGH_##fs(X) |= _FP_QNANBIT_SH_##fs;\t\t\t\\\n+} while (0)\n+\n /* Test whether a biased exponent is normal (not zero or maximum).  */\n #define _FP_EXP_NORMAL(fs, wc, X)\t(((X##_e + 1) & _FP_EXPMAX_##fs) > 1)\n \n@@ -157,7 +202,7 @@ do {\t\t\t\t\t\t\t\t\\\n \t  X##_s = _FP_NANSIGN_##fs;\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n-\t_FP_FRAC_HIGH_RAW_##fs(X) |= _FP_QNANBIT_##fs;\t\t\\\n+\t_FP_SETQNAN(fs, wc, X);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n } while (0)\n \n@@ -271,7 +316,7 @@ do {\t\t\t\t\t\t\t\t\\\n \tX##_s = _FP_NANSIGN_##fs;\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\\\n-      _FP_FRAC_HIGH_RAW_##fs(X) |= _FP_QNANBIT_##fs;\t\t\\\n+      _FP_SETQNAN(fs, wc, X);\t\t\t\t\t\\\n     break;\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n } while (0)\n@@ -285,7 +330,7 @@ do {\t\t\t\t\t\t\t\t\\\n   if (X##_e == _FP_EXPMAX_##fs)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (!_FP_FRAC_ZEROP_##wc(X)\t\t\t\t\\\n-\t  && !(_FP_FRAC_HIGH_RAW_##fs(X) & _FP_QNANBIT_##fs))\t\\\n+\t  && _FP_FRAC_SNANP(fs, X))\t\t\t\t\\\n \t__ret = 1;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   __ret;\t\t\t\t\t\t\t\\\n@@ -746,11 +791,11 @@ do {\t\t\t\t\t\t\t\t\t \\\n #define _FP_MUL(fs, wc, R, X, Y)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   R##_s = X##_s ^ Y##_s;\t\t\t\t\\\n+  R##_e = X##_e + Y##_e + 1;\t\t\t\t\\\n   switch (_FP_CLS_COMBINE(X##_c, Y##_c))\t\t\\\n   {\t\t\t\t\t\t\t\\\n   case _FP_CLS_COMBINE(FP_CLS_NORMAL,FP_CLS_NORMAL):\t\\\n     R##_c = FP_CLS_NORMAL;\t\t\t\t\\\n-    R##_e = X##_e + Y##_e + 1;\t\t\t\t\\\n \t\t\t\t\t\t\t\\\n     _FP_MUL_MEAT_##fs(R,X,Y);\t\t\t\t\\\n \t\t\t\t\t\t\t\\\n@@ -809,11 +854,11 @@ do {\t\t\t\t\t\t\t\\\n #define _FP_DIV(fs, wc, R, X, Y)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   R##_s = X##_s ^ Y##_s;\t\t\t\t\\\n+  R##_e = X##_e - Y##_e;\t\t\t\t\\\n   switch (_FP_CLS_COMBINE(X##_c, Y##_c))\t\t\\\n   {\t\t\t\t\t\t\t\\\n   case _FP_CLS_COMBINE(FP_CLS_NORMAL,FP_CLS_NORMAL):\t\\\n     R##_c = FP_CLS_NORMAL;\t\t\t\t\\\n-    R##_e = X##_e - Y##_e;\t\t\t\t\\\n \t\t\t\t\t\t\t\\\n     _FP_DIV_MEAT_##fs(R,X,Y);\t\t\t\t\\\n     break;\t\t\t\t\t\t\\\n@@ -947,37 +992,37 @@ do {\t\t\t\t\t\t\t\t\t\\\n     case FP_CLS_NAN:\t\t\t\t\t\t\t\\\n \t_FP_FRAC_COPY_##wc(R, X);\t\t\t\t\t\\\n \tR##_s = X##_s;\t\t\t\t\t\t\t\\\n-    \tR##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n-    \tbreak;\t\t\t\t\t\t\t\t\\\n+\tR##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n+\tbreak;\t\t\t\t\t\t\t\t\\\n     case FP_CLS_INF:\t\t\t\t\t\t\t\\\n-    \tif (X##_s)\t\t\t\t\t\t\t\\\n-    \t  {\t\t\t\t\t\t\t\t\\\n-    \t    R##_s = _FP_NANSIGN_##fs;\t\t\t\t\t\\\n+\tif (X##_s)\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    R##_s = _FP_NANSIGN_##fs;\t\t\t\t\t\\\n \t    R##_c = FP_CLS_NAN; /* NAN */\t\t\t\t\\\n \t    _FP_FRAC_SET_##wc(R, _FP_NANFRAC_##fs);\t\t\t\\\n \t    FP_SET_EXCEPTION(FP_EX_INVALID);\t\t\t\t\\\n-    \t  }\t\t\t\t\t\t\t\t\\\n-    \telse\t\t\t\t\t\t\t\t\\\n-    \t  {\t\t\t\t\t\t\t\t\\\n-    \t    R##_s = 0;\t\t\t\t\t\t\t\\\n-    \t    R##_c = FP_CLS_INF; /* sqrt(+inf) = +inf */\t\t\t\\\n-    \t  }\t\t\t\t\t\t\t\t\\\n-    \tbreak;\t\t\t\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    R##_s = 0;\t\t\t\t\t\t\t\\\n+\t    R##_c = FP_CLS_INF; /* sqrt(+inf) = +inf */\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\tbreak;\t\t\t\t\t\t\t\t\\\n     case FP_CLS_ZERO:\t\t\t\t\t\t\t\\\n \tR##_s = X##_s;\t\t\t\t\t\t\t\\\n \tR##_c = FP_CLS_ZERO; /* sqrt(+-0) = +-0 */\t\t\t\\\n \tbreak;\t\t\t\t\t\t\t\t\\\n     case FP_CLS_NORMAL:\t\t\t\t\t\t\t\\\n-    \tR##_s = 0;\t\t\t\t\t\t\t\\\n+\tR##_s = 0;\t\t\t\t\t\t\t\\\n         if (X##_s)\t\t\t\t\t\t\t\\\n           {\t\t\t\t\t\t\t\t\\\n-\t    R##_c = FP_CLS_NAN; /* sNAN */\t\t\t\t\\\n+\t    R##_c = FP_CLS_NAN; /* NAN */\t\t\t\t\\\n \t    R##_s = _FP_NANSIGN_##fs;\t\t\t\t\t\\\n \t    _FP_FRAC_SET_##wc(R, _FP_NANFRAC_##fs);\t\t\t\\\n \t    FP_SET_EXCEPTION(FP_EX_INVALID);\t\t\t\t\\\n \t    break;\t\t\t\t\t\t\t\\\n           }\t\t\t\t\t\t\t\t\\\n-    \tR##_c = FP_CLS_NORMAL;\t\t\t\t\t\t\\\n+\tR##_c = FP_CLS_NORMAL;\t\t\t\t\t\t\\\n         if (X##_e & 1)\t\t\t\t\t\t\t\\\n           _FP_FRAC_SLL_##wc(X, 1);\t\t\t\t\t\\\n         R##_e = X##_e >> 1;\t\t\t\t\t\t\\\n@@ -1118,8 +1163,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t     \\\n \t    /* Exactly representable; shift left.  */\t\t\t     \\\n \t    _FP_FRAC_DISASSEMBLE_##wc(X, ur_, rsize);\t\t\t     \\\n-\t    _FP_FRAC_SLL_##wc(X, (_FP_EXPBIAS_##fs\t\t\t     \\\n-\t\t\t\t  + _FP_FRACBITS_##fs - 1 - X##_e));\t     \\\n+\t    if (_FP_EXPBIAS_##fs + _FP_FRACBITS_##fs - 1 - X##_e > 0)\t     \\\n+\t      _FP_FRAC_SLL_##wc(X, (_FP_EXPBIAS_##fs\t\t\t     \\\n+\t\t\t\t    + _FP_FRACBITS_##fs - 1 - X##_e));\t     \\\n \t  }\t\t\t\t\t\t\t\t     \\\n \telse\t\t\t\t\t\t\t\t     \\\n \t  {\t\t\t\t\t\t\t\t     \\\n@@ -1197,7 +1243,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n \t  D##_e = _FP_EXPMAX_##dfs;\t\t\t\t\t \\\n \t  if (!_FP_FRAC_ZEROP_##swc(S))\t\t\t\t\t \\\n \t    {\t\t\t\t\t\t\t\t \\\n-\t      if (!(_FP_FRAC_HIGH_RAW_##sfs(S) & _FP_QNANBIT_##sfs))\t \\\n+\t      if (_FP_FRAC_SNANP(sfs, S))\t\t\t\t \\\n \t\tFP_SET_EXCEPTION(FP_EX_INVALID);\t\t\t \\\n \t      _FP_FRAC_SLL_##dwc(D, (_FP_FRACBITS_##dfs\t\t\t \\\n \t\t\t\t     - _FP_FRACBITS_##sfs));\t\t \\\n@@ -1284,7 +1330,7 @@ do {\t\t\t\t\t\t\t\t\t     \\\n \t      /* Semi-raw NaN must have all workbits cleared.  */\t     \\\n \t      _FP_FRAC_LOW_##dwc(D)\t\t\t\t\t     \\\n \t\t&= ~(_FP_W_TYPE) ((1 << _FP_WORKBITS) - 1);\t\t     \\\n-\t      _FP_FRAC_HIGH_##dfs(D) |= _FP_QNANBIT_SH_##dfs;\t\t     \\\n+\t      _FP_SETQNAN_SEMIRAW(dfs, dwc, D);\t\t\t\t     \\\n \t    }\t\t\t\t\t\t\t\t     \\\n \t}\t\t\t\t\t\t\t\t     \\\n     }\t\t\t\t\t\t\t\t\t     \\"}, {"sha": "f0aa07e74f1363c0fc420119c81bbee877ae36e2", "filename": "libgcc/soft-fp/quad.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fquad.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fquad.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fquad.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Quad Precision.\n-   Copyright (C) 1997,1998,1999,2006,2007,2012 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "dec0031e9a925485d10dfbda967e5e9c27f70c53", "filename": "libgcc/soft-fp/single.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsingle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsingle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsingle.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Single Precision.\n-   Copyright (C) 1997,1998,1999,2006,2012 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "b1c6e619b5eed8f88355c27d29c64ba29b023313", "filename": "libgcc/soft-fp/soft-fp.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsoft-fp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsoft-fp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsoft-fp.h?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,5 @@\n /* Software floating-point emulation.\n-   Copyright (C) 1997,1998,1999,2000,2002,2003,2005,2006,2007,2012\n-\tFree Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "032ac0f291f181d7cd4c4c6b8fd1f0484a5b0d05", "filename": "libgcc/soft-fp/subdf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsubdf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsubdf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsubdf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a - b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "c9f56c7176eac1fa0b5d24b438497ca8e44d4c1a", "filename": "libgcc/soft-fp/subsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsubsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsubsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsubsf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a - b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "a111d571e1be47348c4f6833a1ec12730542451f", "filename": "libgcc/soft-fp/subtf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsubtf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Fsubtf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsubtf3.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a - b\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "e9a7223674fd6576f20ac1e6bc974ce3d47ddbb7", "filename": "libgcc/soft-fp/truncdfsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ftruncdfsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ftruncdfsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftruncdfsf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE double into IEEE single\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "35c6496362f2423fce7aa40ac8b64aa746cf8eef", "filename": "libgcc/soft-fp/trunctfdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ftrunctfdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ftrunctfdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftrunctfdf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE quad into IEEE double\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "751c7c8d76ea74f7353ea23ca7a42b3d7ff26d45", "filename": "libgcc/soft-fp/trunctfsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ftrunctfsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Ftrunctfsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftrunctfsf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE quad into IEEE single\n-   Copyright (C) 1997,1999,2006 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "2e77f2d8ff74b588ee6be65ac2a6becfb04515ba", "filename": "libgcc/soft-fp/unorddf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Funorddf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Funorddf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Funorddf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 1 iff a or b is a NaN, 0 otherwise.\n-   Copyright (C) 2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Joseph Myers (joseph@codesourcery.com).\n "}, {"sha": "b5b5322c16892bade976ec35113f208c2e505f30", "filename": "libgcc/soft-fp/unordsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Funordsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Funordsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Funordsf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 1 iff a or b is a NaN, 0 otherwise.\n-   Copyright (C) 2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Joseph Myers (joseph@codesourcery.com).\n "}, {"sha": "1a85c252c1ac99587174c26dbbfa84fd7c801789", "filename": "libgcc/soft-fp/unordtf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Funordtf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1e55b0a0c843b58c6e628fb3c29afa36fcf778/libgcc%2Fsoft-fp%2Funordtf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Funordtf2.c?ref=fa1e55b0a0c843b58c6e628fb3c29afa36fcf778", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 1 iff a or b is a NaN, 0 otherwise.\n-   Copyright (C) 2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Joseph Myers (joseph@codesourcery.com).\n "}]}