{"sha": "61396dfb2acfe956d420b279b2becec1c4f81ba2", "node_id": "C_kwDOANBUbNoAKDYxMzk2ZGZiMmFjZmU5NTZkNDIwYjI3OWIyYmVjZWMxYzRmODFiYTI", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-11T13:35:10Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-11T13:35:10Z"}, "message": "Fix noreturn discovery.\n\nFix ipa-pure-const handling of noreturn flags.  It is not safe to set it for\ninterposable symbols and we should also set it for aliases (just like we do for\nother flags).  This patch merely copies other flag handling and implements it\nhere.\n\ngcc/ChangeLog:\n\n2021-11-11  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* cgraph.c (set_noreturn_flag_1): New function.\n\t(cgraph_node::set_noreturn_flag): New member function\n\t* cgraph.h (cgraph_node::set_noreturn_flags): Declare.\n\t* ipa-pure-const.c (pass_local_pure_const::execute): Use it.", "tree": {"sha": "57f81e90ccd47b546d3d5f4715511814beae1cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57f81e90ccd47b546d3d5f4715511814beae1cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61396dfb2acfe956d420b279b2becec1c4f81ba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61396dfb2acfe956d420b279b2becec1c4f81ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61396dfb2acfe956d420b279b2becec1c4f81ba2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61396dfb2acfe956d420b279b2becec1c4f81ba2/comments", "author": null, "committer": null, "parents": [{"sha": "e106221db2eee30641b856db68858f1131c0fcf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e106221db2eee30641b856db68858f1131c0fcf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e106221db2eee30641b856db68858f1131c0fcf5"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "466b66d5ba5e975ef11d3a9b99a6a96dc716aade", "filename": "gcc/cgraph.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61396dfb2acfe956d420b279b2becec1c4f81ba2/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61396dfb2acfe956d420b279b2becec1c4f81ba2/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=61396dfb2acfe956d420b279b2becec1c4f81ba2", "patch": "@@ -2614,6 +2614,53 @@ cgraph_node::set_malloc_flag (bool malloc_p)\n   return changed;\n }\n \n+/* Worker to set noreturng flag.  */\n+static void\n+set_noreturn_flag_1 (cgraph_node *node, bool noreturn_p, bool *changed)\n+{\n+  if (noreturn_p && !TREE_THIS_VOLATILE (node->decl))\n+    {\n+      TREE_THIS_VOLATILE (node->decl) = true;\n+      *changed = true;\n+    }\n+\n+  ipa_ref *ref;\n+  FOR_EACH_ALIAS (node, ref)\n+    {\n+      cgraph_node *alias = dyn_cast<cgraph_node *> (ref->referring);\n+      if (!noreturn_p || alias->get_availability () > AVAIL_INTERPOSABLE)\n+\tset_noreturn_flag_1 (alias, noreturn_p, changed);\n+    }\n+\n+  for (cgraph_edge *e = node->callers; e; e = e->next_caller)\n+    if (e->caller->thunk\n+\t&& (!noreturn_p || e->caller->get_availability () > AVAIL_INTERPOSABLE))\n+      set_noreturn_flag_1 (e->caller, noreturn_p, changed);\n+}\n+\n+/* Set TREE_THIS_VOLATILE on NODE's decl and on NODE's aliases if any.  */\n+\n+bool\n+cgraph_node::set_noreturn_flag (bool noreturn_p)\n+{\n+  bool changed = false;\n+\n+  if (!noreturn_p || get_availability () > AVAIL_INTERPOSABLE)\n+    set_noreturn_flag_1 (this, noreturn_p, &changed);\n+  else\n+    {\n+      ipa_ref *ref;\n+\n+      FOR_EACH_ALIAS (this, ref)\n+\t{\n+\t  cgraph_node *alias = dyn_cast<cgraph_node *> (ref->referring);\n+\t  if (!noreturn_p || alias->get_availability () > AVAIL_INTERPOSABLE)\n+\t    set_noreturn_flag_1 (alias, noreturn_p, &changed);\n+\t}\n+    }\n+  return changed;\n+}\n+\n /* Worker to set_const_flag.  */\n \n static void"}, {"sha": "e42e305cdb62b733b62733cfd3ebb982612b8597", "filename": "gcc/cgraph.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61396dfb2acfe956d420b279b2becec1c4f81ba2/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61396dfb2acfe956d420b279b2becec1c4f81ba2/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=61396dfb2acfe956d420b279b2becec1c4f81ba2", "patch": "@@ -1167,6 +1167,10 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n      if any.  */\n   bool set_malloc_flag (bool malloc_p);\n \n+  /* SET TREE_THIS_VOLATILE on cgraph_node's decl and on aliases of the node\n+     if any.  */\n+  bool set_noreturn_flag (bool noreturn_p);\n+\n   /* If SET_CONST is true, mark function, aliases and thunks to be ECF_CONST.\n     If SET_CONST if false, clear the flag.\n "}, {"sha": "84a028bcf8e8d5217ba44ae0f05dc895c43d0f7e", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61396dfb2acfe956d420b279b2becec1c4f81ba2/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61396dfb2acfe956d420b279b2becec1c4f81ba2/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=61396dfb2acfe956d420b279b2becec1c4f81ba2", "patch": "@@ -2132,11 +2132,10 @@ pass_local_pure_const::execute (function *fun)\n \t\t current_function_name ());\n \n       /* Update declaration and reduce profile to executed once.  */\n-      TREE_THIS_VOLATILE (current_function_decl) = 1;\n+      if (cgraph_node::get (current_function_decl)->set_noreturn_flag (true))\n+\tchanged = true;\n       if (node->frequency > NODE_FREQUENCY_EXECUTED_ONCE)\n \tnode->frequency = NODE_FREQUENCY_EXECUTED_ONCE;\n-\n-      changed = true;\n     }\n \n   switch (l->pure_const_state)"}]}