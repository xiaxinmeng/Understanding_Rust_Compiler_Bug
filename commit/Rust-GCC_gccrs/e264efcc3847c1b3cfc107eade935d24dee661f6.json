{"sha": "e264efcc3847c1b3cfc107eade935d24dee661f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2NGVmY2MzODQ3YzFiM2NmYzEwN2VhZGU5MzVkMjRkZWU2NjFmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:33:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:33:04Z"}, "message": "[multiple changes]\n\n2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_aggr.adb: Fix typo.\n\n2009-05-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): For a controlled object\n\tdeclaration, do not adjust if the declaration is to be rewritten into\n\ta renaming.\n\n2009-05-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Find_Type): Reject the use of a task type in its own\n\tdiscriminant part.\n\n2009-05-06  Bob Duff  <duff@adacore.com>\n\n\t* s-fileio.adb (File_IO_Clean_Up_Type): Make this type limited, since\n\totherwise the compiler would be allowed to optimize away the cleanup\n\tcode.\n\nFrom-SVN: r147163", "tree": {"sha": "a384c06f4c493401d5df423f92cdcf6f98ef5e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a384c06f4c493401d5df423f92cdcf6f98ef5e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e264efcc3847c1b3cfc107eade935d24dee661f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e264efcc3847c1b3cfc107eade935d24dee661f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e264efcc3847c1b3cfc107eade935d24dee661f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e264efcc3847c1b3cfc107eade935d24dee661f6/comments", "author": null, "committer": null, "parents": [{"sha": "69a0c1741e5727e98cb037dffbc98d82e60dc474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a0c1741e5727e98cb037dffbc98d82e60dc474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a0c1741e5727e98cb037dffbc98d82e60dc474"}], "stats": {"total": 97, "additions": 76, "deletions": 21}, "files": [{"sha": "53c2fad10c14cba7cfc6ba2ce6fe3e33e5e01ec7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e264efcc3847c1b3cfc107eade935d24dee661f6", "patch": "@@ -1,3 +1,24 @@\n+2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_aggr.adb: Fix typo.\n+\n+2009-05-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): For a controlled object\n+\tdeclaration, do not adjust if the declaration is to be rewritten into\n+\ta renaming.\n+\n+2009-05-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Type): Reject the use of a task type in its own\n+\tdiscriminant part.\n+\n+2009-05-06  Bob Duff  <duff@adacore.com>\n+\n+\t* s-fileio.adb (File_IO_Clean_Up_Type): Make this type limited, since\n+\totherwise the compiler would be allowed to optimize away the cleanup\n+\tcode.\n+\n 2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n \n \t* gnat_ugn.texi: Fix typo."}, {"sha": "df4c6668cc43d84022a5f2a3f22605b95558e49a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e264efcc3847c1b3cfc107eade935d24dee661f6", "patch": "@@ -1888,8 +1888,8 @@ package body Exp_Ch3 is\n          end if;\n \n          if Needs_Finalization (Typ)\n-         and then not (Kind = N_Aggregate or else Kind = N_Extension_Aggregate)\n-         and then not Is_Inherently_Limited_Type (Typ)\n+           and then not (Nkind_In (Kind, N_Aggregate, N_Extension_Aggregate))\n+           and then not Is_Inherently_Limited_Type (Typ)\n          then\n             Append_List_To (Res,\n               Make_Adjust_Call (\n@@ -4185,9 +4185,28 @@ package body Exp_Ch3 is\n       --  which case the init proc call must be inserted only after the bodies\n       --  of the shared variable procedures have been seen.\n \n+      function Rewrite_As_Renaming return Boolean;\n+      --  Indicate whether to rewrite a declaration with initialization into an\n+      --  object renaming declaration (see below).\n+\n+      -------------------------\n+      -- Rewrite_As_Renaming --\n+      -------------------------\n+\n+      function Rewrite_As_Renaming return Boolean is\n+      begin\n+         return not Aliased_Present (N)\n+           and then Is_Entity_Name (Expr_Q)\n+           and then Ekind (Entity (Expr_Q)) = E_Variable\n+           and then OK_To_Rename (Entity (Expr_Q))\n+           and then Is_Entity_Name (Object_Definition (N));\n+      end Rewrite_As_Renaming;\n+\n+   --  Start of processing for Expand_N_Object_Declaration\n+\n    begin\n-      --  Don't do anything for deferred constants. All proper actions will\n-      --  be expanded during the full declaration.\n+      --  Don't do anything for deferred constants. All proper actions will be\n+      --  expanded during the full declaration.\n \n       if No (Expr) and Constant_Present (N) then\n          return;\n@@ -4603,10 +4622,13 @@ package body Exp_Ch3 is\n             --  where the object was initialized by a call to a function whose\n             --  result is built in place, since no copy occurred. (Eventually\n             --  we plan to support in-place function results for some cases\n-            --  of nonlimited types. ???)\n+            --  of nonlimited types. ???) Similarly, no adjustment is required\n+            --  if we are going to rewrite the object declaration into a\n+            --  renaming declaration.\n \n             if Needs_Finalization (Typ)\n               and then not Is_Inherently_Limited_Type (Typ)\n+              and then not Rewrite_As_Renaming\n             then\n                Insert_Actions_After (Init_After,\n                  Make_Adjust_Call (\n@@ -4750,14 +4772,11 @@ package body Exp_Ch3 is\n          --     X : typ renames expr\n \n          --  provided that X is not aliased. The aliased case has to be\n-         --  excluded in general because expr will not be aliased in general.\n+         --  excluded in general because Expr will not be aliased in general.\n+         --  We also exclude controlled types because X and Expr may need to\n+         --  be attached to distinct finalization lists.\n \n-         if not Aliased_Present (N)\n-           and then Is_Entity_Name (Expr_Q)\n-           and then Ekind (Entity (Expr_Q)) = E_Variable\n-           and then OK_To_Rename (Entity (Expr_Q))\n-           and then Is_Entity_Name (Object_Definition (N))\n-         then\n+         if Rewrite_As_Renaming then\n             Rewrite (N,\n               Make_Object_Renaming_Declaration (Loc,\n                 Defining_Identifier => Defining_Identifier (N),"}, {"sha": "fd7adfd7044ef9f7263af1bc23297c62082e4035", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=e264efcc3847c1b3cfc107eade935d24dee661f6", "patch": "@@ -73,12 +73,12 @@ package body System.File_IO is\n    --  Points to list of names of temporary files. Note that this global\n    --  variable must be properly protected to provide thread safety.\n \n-   type File_IO_Clean_Up_Type is new Controlled with null record;\n+   type File_IO_Clean_Up_Type is new Limited_Controlled with null record;\n    --  The closing of all open files and deletion of temporary files is an\n-   --  action which takes place at the end of execution of the main program.\n-   --  This action can be implemented using a library level object which\n-   --  gets finalized at the end of the main program execution. The above is\n-   --  a controlled type introduced for this purpose.\n+   --  action that takes place at the end of execution of the main program.\n+   --  This action is implemented using a library level object which gets\n+   --  finalized at the end of program execution. Note that the type should be\n+   --  limited, in order to avoid unwanted optimizations.\n \n    procedure Finalize (V : in out File_IO_Clean_Up_Type);\n    --  This is the finalize operation that is used to do the cleanup"}, {"sha": "3673002c5effb547b1fec2b33ddc70fc8ee00f79", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=e264efcc3847c1b3cfc107eade935d24dee661f6", "patch": "@@ -3076,10 +3076,14 @@ package body Sem_Aggr is\n             --  of all ancestors, starting with the root.\n \n             if Nkind (N) = N_Extension_Aggregate then\n+\n+               --  If the ancestor part is a C++ constructor we must handle\n+               --  here that it is a function returning a class-wide type\n+\n                if Is_CPP_Constructor_Call (Ancestor_Part (N)) then\n                   pragma Assert\n                     (Is_Class_Wide_Type (Etype (Ancestor_Part (N))));\n-                  Root_Typ := Base_Type (Etype (Etype (Ancestor_Part (N))));\n+                  Root_Typ := Root_Type (Etype (Ancestor_Part (N)));\n                else\n                   Root_Typ := Base_Type (Etype (Ancestor_Part (N)));\n                end if;\n@@ -3462,7 +3466,7 @@ package body Sem_Aggr is\n                                    (Inner_Comp, New_Aggr,\n                                      Component_Associations (Aggr));\n \n-                                 --  Collect disciminant values and recurse\n+                                 --  Collect discriminant values and recurse\n \n                                  Add_Discriminant_Values\n                                    (New_Aggr, Assoc_List);"}, {"sha": "1d8e797f1b4c1ee261470d70de508f724839c0b7", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e264efcc3847c1b3cfc107eade935d24dee661f6/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=e264efcc3847c1b3cfc107eade935d24dee661f6", "patch": "@@ -5722,14 +5722,25 @@ package body Sem_Ch8 is\n                if Ekind (Base_Type (T_Name)) = E_Task_Type then\n \n                   --  In Ada 2005, a task name can be used in an access\n-                  --  definition within its own body.\n+                  --  definition within its own body. It cannot be used\n+                  --  in the discriminant part of the task declaration,\n+                  --  nor anywhere else in the declaration because entries\n+                  --  cannot have access parameters.\n \n                   if Ada_Version >= Ada_05\n                     and then Nkind (Parent (N)) = N_Access_Definition\n                   then\n                      Set_Entity (N, T_Name);\n                      Set_Etype  (N, T_Name);\n-                     return;\n+\n+                     if Has_Completion (T_Name) then\n+                        return;\n+\n+                     else\n+                        Error_Msg_N\n+                          (\"task type cannot be used as type mark \" &\n+                           \"within its own declaration\", N);\n+                     end if;\n \n                   else\n                      Error_Msg_N"}]}