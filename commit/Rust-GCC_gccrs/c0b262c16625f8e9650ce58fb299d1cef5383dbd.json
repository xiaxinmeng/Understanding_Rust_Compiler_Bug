{"sha": "c0b262c16625f8e9650ce58fb299d1cef5383dbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiMjYyYzE2NjI1ZjhlOTY1MGNlNThmYjI5OWQxY2VmNTM4M2RiZA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-11-01T11:18:32Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-11-01T11:18:32Z"}, "message": "(synth_mult): When factoring T, break from loop after first factor.\n\n(expand_mult): Increase max cost to 12 again.\n\nFrom-SVN: r5961", "tree": {"sha": "3870eeba4a27d83f8e0c0634e47cf6adcfd74cd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3870eeba4a27d83f8e0c0634e47cf6adcfd74cd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b262c16625f8e9650ce58fb299d1cef5383dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b262c16625f8e9650ce58fb299d1cef5383dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b262c16625f8e9650ce58fb299d1cef5383dbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b262c16625f8e9650ce58fb299d1cef5383dbd/comments", "author": null, "committer": null, "parents": [{"sha": "9022605c7e857267d092cfc3fc552fd1b08d94fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9022605c7e857267d092cfc3fc552fd1b08d94fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9022605c7e857267d092cfc3fc552fd1b08d94fb"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fe8eb27c114a2740c53258bcf8896ae1b088975b", "filename": "gcc/expmed.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b262c16625f8e9650ce58fb299d1cef5383dbd/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b262c16625f8e9650ce58fb299d1cef5383dbd/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=c0b262c16625f8e9650ce58fb299d1cef5383dbd", "patch": "@@ -1971,6 +1971,8 @@ synth_mult (alg_out, t, cost_limit)\n \t      best_alg->op[best_alg->ops] = alg_add_factor;\n \t      cost_limit = cost;\n \t    }\n+\t  /* Other factors will have been taken care of in the recursion.  */\n+\t  break;\n \t}\n \n       d = ((unsigned HOST_WIDE_INT) 1 << m) - 1;\n@@ -1988,6 +1990,7 @@ synth_mult (alg_out, t, cost_limit)\n \t      best_alg->op[best_alg->ops] = alg_sub_factor;\n \t      cost_limit = cost;\n \t    }\n+\t  break;\n \t}\n     }\n \n@@ -2103,7 +2106,7 @@ expand_mult (mode, op0, op1, target, unsignedp)\n \t vice versa.  */\n \n       mult_cost = rtx_cost (gen_rtx (MULT, mode, op0, op1), SET);\n-      mult_cost = MIN (8 * add_cost, mult_cost);\n+      mult_cost = MIN (12 * add_cost, mult_cost);\n \n       synth_mult (&alg, val, mult_cost);\n       synth_mult (&neg_alg, - val,"}]}