{"sha": "14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjZDRkMjNjODllMmQ4ODQyMGQ3ZThjNzBkN2NlNjZhYTIyZGIzMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-08T01:42:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-08T01:42:52Z"}, "message": "Updates from gcc-2.8 test tarball to current gcc-2.8 tarball.\n\nFrom-SVN: r17002", "tree": {"sha": "dd22e385b3dae9a0e496ba4cc1c0886e5b4296f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd22e385b3dae9a0e496ba4cc1c0886e5b4296f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/comments", "author": null, "committer": null, "parents": [{"sha": "0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5"}], "stats": {"total": 310, "additions": 209, "deletions": 101}, "files": [{"sha": "571a63c35c8b13856f5a2b952d8a2b7f4e34d481", "filename": "gcc/ChangeLog.11", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FChangeLog.11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FChangeLog.11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.11?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -1,7 +1,32 @@\n-Fri Dec  5 07:29:26 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+Sun Dec  7 18:24:30 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Version 2.8.0 released.\n \n+Sun Dec  7 09:42:05 1997  Pat Rankin  <rankin@eql.caltech.edu>\n+\n+\t* make-gcc.com (@make-l2): Pass along any command line arguments.\n+\t* make-l2.com: Add latent support to compile cp/inc/* if `cc1plus'\n+\tis specified [currently disabled].\n+\t* make-cc1.com: When building with GNU C, use -O2.\n+\t* make-cccp.com: Likewise.\n+\n+Sun Dec  7 06:56:48 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* crtstuff.c (__do_global_ctors): Add missing arg to __register_frame.\n+\n+\t* collect2.c (write_c_file_stat): Fix error in last change;\n+\tuse __SIZE_TYPE__, not size_t.\n+\n+Sun Dec  7 05:50:43 1997  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* cccp.c (strings.h): Fix misspelling of `include' introduced\n+\tin last change to this file.\n+\n+Sat Dec  6 18:54:11 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* alpha/vms.h (CPP_PREDEFINES): Remove redundant setting\n+\tof GCC version and unneeded setting of __VMS_VER.\n+\n Fri Dec  5 07:24:36 1997  Richard Stallman  <rms@gnu.org>\n \n \t* sparc/linux64.h (TARGET_VERSION): Write \"GNU/Linux\"."}, {"sha": "595bc1df33b39364c3ed6d26aca3bfc2298905eb", "filename": "gcc/INSTALL", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FINSTALL?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -687,7 +687,11 @@ special things you must know:\n      you must specify the version number during configuration.  Note\n      that the assembler shipped with RISC iX does not support stabs\n      debugging information; a new version of the assembler, with stabs\n-     support included, is now available from Acorn.\n+     support included, is now available from Acorn and via ftp\n+     `ftp.acorn.com:/pub/riscix/as+xterm.tar.Z'.  To enable stabs\n+     debugging, pass `--with-gnu-as' to configure.\n+\n+     You will need to install GNU `sed' before you can run configure.\n \n `a29k'\n      AMD Am29k-family processors.  These are normally used in embedded"}, {"sha": "203b9ab3e44a2de47cc0dba93b080f241ef0b22e", "filename": "gcc/NEWS", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FNEWS?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -212,28 +212,6 @@ New feature for Solaris systems:\n     GCC installation no longer makes a copy of system include files,\n     thus insulating GCC better from updates to the operating system.\n \n-Changes in Objective-C:\n-\n-    The Objective-C Runtime Library has been made thread-safe.\n-\n-    The Objective-C Runtime Library contains an interface for creating\n-    mutexes, condition mutexes, and threads; it requires a back-end\n-    implementation for the specific platform and/or thread package.\n-    Currently supported are DEC/OSF1, IRIX, Mach, OS/2, POSIX, PCThreads,\n-    Solaris, and Windows32.  The --enable-threads parameter can be used\n-    when configuring GCC to enable and select a thread back-end.\n-\n-    Objective-C is now configured as separate front-end language to GCC,\n-    making it more convenient to conditionally build it.\n-\n-    The internal structures of the Objective-C Runtime Library have\n-    changed sufficiently to warrant a new version number; now version 8.\n-    Programs compiled with an older version must be recompiled.\n-\n-    The Objective-C Runtime Library can be built as a DLL on Windows 95\n-    and Windows NT systems.\n-    \n-    The Objective-C Runtime Library implements +load.\n \f\n Noteworthy changes in GCC version 2.7.2\n ---------------------------------------"}, {"sha": "c146eb2226a93b273efee0f050e42e2e21b296ae", "filename": "gcc/SERVICE", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FSERVICE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2FSERVICE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FSERVICE?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -672,24 +672,32 @@ Bradley M. Kuhn\n <bkuhn@acm.org>\n http://www.ebb.org/bkuhn\n \n-I am available for primarily Unix system administration consulting, including\n-but not limited to installation, configuration and integration of GNU tools\n-and other copy-lefted software such as GNU/Linux.\n+I am available for Unix system administration consulting, including but not\n+limited to installation, configuration and integration of GNU tools and other\n+copy-lefted software such as GNU/Linux and the various distributions of\n+GNU/Linux.\n \n I am particularly skilled at integration of GNU and other copy-lefted software\n into new environments that have not used such tools in the past, and porting\n the GNU software to new Unix-based platforms.\n \n-Please visit my homepage for more information on my background and skills.\n+Please visit my homepage for more information on my background and skills.  My\n+resume is also available there.\n \n I am available for both 1099 (preferred) and W2 on-site contracting in the\n-Cincinnati, OH metropolitan area, as well as remote consulting via dialup or\n-Internet connection anywhere in the US.\n+Cincinnati, OH, USA metropolitan area, as well as remote consulting via dialup\n+or Internet connection anywhere in the USA.  I have no interest in permanent\n+relocation at this time.\n  \n-My rate is in the $40/hour range, depending on the circumstances.  Rates for\n-non-profit organizations are substantially lower, and possibly free.\n+My rate varies greatly between $25-$40/hour, depending on the circumstances.\n+Rates for non-profit organizations are substantially lower, and possibly free.\n \n-Updated: 1997-08-03\n+Please note that I have no interest in working with any Micro$oft related\n+products.  I will accept work that involves other non-free, non-Micro$oft\n+software, but I would want the primary focus of the work to be contributing\n+to the free software community.\n+\n+Updated: 1997-12-04\n \u001f\n Fen Labalme                       <fen@comedia.com>\n CoMedia Consulting           http//www.comedia.com/comedia/"}, {"sha": "a9baf8475d0e4598e636ec3aed10692be6945391", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -1786,7 +1786,7 @@ write_c_file_stat (stream, name)\n       fprintf (stream, \"  void *pc_end;\\n\");\n       fprintf (stream, \"  void *fde_begin;\\n\");\n       fprintf (stream, \"  void *fde_array;\\n\");\n-      fprintf (stream, \"  size_t count;\\n\");\n+      fprintf (stream, \"  __SIZE_TYPE__ count;\\n\");\n       fprintf (stream, \"  struct object *next;\\n\");\n       fprintf (stream, \"};\\n\");\n "}, {"sha": "0c7fca7a4285aad1c141a382381cb72bde876ed3", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -29,13 +29,10 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"alpha/alpha.h\"\n \n-/* Predefine this in CPP because VMS limits the size of command options\n-   and GNU CPP is not used on VMS except with GNU C.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \\\n \"-Dalpha -D__ALPHA -Dvms -DVMS -D__alpha__ -D__alpha -D__vms__ -D__VMS__\\\n- -D__VMS_VER=70000022 \\\n- -D__GNUC__=2 -D__GNUC_MINOR__=7 -Asystem(vms) -Acpu(alpha) -Amachine(alpha)\"\n+ -Asystem(vms) -Acpu(alpha) -Amachine(alpha)\"\n \n #undef CPP_SPEC\n #define CPP_SPEC \"\\"}, {"sha": "c0d06494e4ff07ae3372ddb6df30448f2b31b552", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -394,7 +394,8 @@ __do_global_ctors ()\n {\n   func_ptr *p;\n #ifdef EH_FRAME_SECTION_ASM_OP\n-  __register_frame (__EH_FRAME_BEGIN__);\n+  static struct oobject object;\n+  __register_frame (__EH_FRAME_BEGIN__, &object);\n #endif\n   for (p = __CTOR_END__ - 1; *p != (func_ptr) -1; p--)\n     (*p) ();"}, {"sha": "bb60f0aa70fa9b0f16a9b0ae2bf8c8c23cc2fba7", "filename": "gcc/install.texi", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -792,12 +792,16 @@ from @file{sunsite.unc.edu:/pub/Linux/GCC} and other mirror sites for\n Linux-based GNU systems.\n \n @item arm-*-riscix\n-The ARM2 or ARM3 processor running RISC iX, Acorn's port of BSD Unix.  If\n-you are running a version of RISC iX prior to 1.2 then you must specify\n-the version number during configuration.  Note that the assembler\n-shipped with RISC iX does not support stabs debugging information; a\n-new version of the assembler, with stabs support included, is now\n-available from Acorn.\n+The ARM2 or ARM3 processor running RISC iX, Acorn's port of BSD Unix.\n+If you are running a version of RISC iX prior to 1.2 then you must\n+specify the version number during configuration.  Note that the\n+assembler shipped with RISC iX does not support stabs debugging\n+information; a new version of the assembler, with stabs support\n+included, is now available from Acorn and via ftp\n+@file{ftp.acorn.com:/pub/riscix/as+xterm.tar.Z}.  To enable stabs\n+debugging, pass @samp{--with-gnu-as} to configure.\n+\n+You will need to install GNU @file{sed} before you can run configure.\n \n @item a29k\n AMD Am29k-family processors.  These are normally used in embedded"}, {"sha": "618fc2a8d3300945fd2016f34e8d2c3c889aa855", "filename": "gcc/make-cc1.com", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-cc1.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-cc1.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-cc1.com?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -24,7 +24,7 @@ $!\n $!\tCompiler-specific setup (assume GNU C, then override as necessary):\n $!\n $ CC\t = \"gcc\"\n-$ CFLAGS = \"/Debug/noVerbos/CC1=\"\"-mpcc-alignment\"\"\"\n+$ CFLAGS = \"/Opt=2/Debug/noVerbos/CC1=\"\"-mpcc-alignment\"\"\"\n $ LIBS\t = \"gnu_cc:[000000]gcclib.olb/Libr,sys$library:vaxcrtl.olb/Libr\"\n $ if p1.eqs.\"GNUC\"\n $ then\n@@ -295,16 +295,17 @@ $if (f$search(\"C-PARSE.Y\") .eqs. \"\") then goto yes_yfiles\n $if (f$cvtime(f$file_attributes(\"C-PARSE.IN\",\"RDT\")).gts. -\n  \t    f$cvtime(f$file_attributes(\"C-PARSE.Y\",\"RDT\")))  -\n \t\tthen goto yes_yfiles\n-$if (f$search(\"OBJC-PARSE.Y\") .eqs. \"\") then goto yes_yfiles\n+$if f$parse(\"[.OBJC]\").eqs.\"\" then create/Directory [.objc]\n+$if (f$search(\"[.OBJC]OBJC-PARSE.Y\") .eqs. \"\") then goto yes_yfiles\n $if (f$cvtime(f$file_attributes(\"C-PARSE.IN\",\"RDT\")).gts. -\n- \t    f$cvtime(f$file_attributes(\"OBJC-PARSE.Y\",\"RDT\")))  -\n+ \t    f$cvtime(f$file_attributes(\"[.OBJC]OBJC-PARSE.Y\",\"RDT\")))  -\n \t\tthen goto yes_yfiles\n $GOTO no_yfiles\n $yes_yfiles:\n-$echo \"Now processing c-parse.in to generate c-parse.y and objc-parse.y.\"\n-$ edit/tpu/nojournal/nosection/nodisplay/command=sys$input\n+$echo \"Now processing c-parse.in to generate c-parse.y and [.objc]objc-parse.y.\"\n+$ EDIT/Tpu/noJournal/noSection/noDisplay/Command=sys$input:\n !\n-!     Read c-parse.in, write c-parse.y and objc-parse.y, depending on\n+!     Read c-parse.in, write c-parse.y and objc/objc-parse.y, depending on\n !     paired lines of \"ifc\" & \"end ifc\" and \"ifobjc\" & \"end ifobjc\" to\n !     control what goes into each file.  Most lines will be common to\n !     both (hence not bracketed by either control pair).  Mismatched\n@@ -344,7 +345,7 @@ $ edit/tpu/nojournal/nosection/nodisplay/command=sys$input\n    ENDLOOP;\n \n    WRITE_FILE(c, \"c-parse.y\");\n-   WRITE_FILE(objc, \"objc-parse.y\");\n+   WRITE_FILE(objc, \"[.objc]objc-parse.y\");\n    QUIT\n $\tendif\t\n $no_yfiles:"}, {"sha": "6e7f976d519af2e14b1104adffffcdc0f5075cfd", "filename": "gcc/make-cccp.com", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-cccp.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-cccp.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-cccp.com?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -18,7 +18,7 @@ $!\n $!\tCompiler-specific setup (assume GNU C, then override as necessary):\n $!\n $ CC\t = \"gcc\"\n-$ CFLAGS = \"/Debug/noVerbos\"\n+$ CFLAGS = \"/Opt=2/Debug/noVerbos\"\n $ LIBS\t = \"gnu_cc:[000000]gcclib.olb/Libr,sys$library:vaxcrtl.olb/Libr\"\n $ if p1.nes.\"GNUC\"\n $ then\n@@ -93,8 +93,9 @@ $skip_yacc:\n $ echo \" (Ignore any warning about not finding file \"\"bison.simple\"\".)\"\n $ set verify\n $ 'CC''CFLAGS' cexp.c\n+$ 'CC''CFLAGS'/Define=\"PREFIX=\"\"_dummy_\"\"\" prefix.c\n $!'f$verify(0)\n-$ \n+$\n $! In case there's no builtin alloca support, use the C simulation.\n $ if f$locate(\"alloca.obj\",f$edit(LIBS,\"lowercase\")).lt.f$length(LIBS)\n $ then\n@@ -108,7 +109,7 @@ $Link:\n $ echo \" Linking the preprocessor.\"\n $ set verify\n $ 'LINK''LDFLAGS'/Exe=gcc-cpp.exe -\n-\t  cccp.obj,cexp.obj,version.obj,version.opt/Opt,-\n+\t  cccp.obj,cexp.obj,prefix.obj,version.obj,version.opt/Opt,-\n \t  'LIBS'\n $!'f$verify(0)\n $!"}, {"sha": "58632eb10c62de49f41e8f53fbc5955c3c273edd", "filename": "gcc/make-gcc.com", "status": "modified", "additions": 57, "deletions": 18, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-gcc.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-gcc.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-gcc.com?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -1,32 +1,71 @@\n+$! make-gcc.com -- VMS build procedure for GNU CC.\n $!\n-$!\tBuild GCC\n+$!\tUsage:\n+$!\t  $ @make-gcc.com [host-compiler] [component list]\n $!\n-$! Set the def dir to proper place for use in batch. Works for interactive too.\n-$flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n-$set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n+$!\twhere [host-compiler] is one of \"GNUC\", \"VAXC\", \"DECC\";\n+$!\tdefault when none specified is \"GNUC\",\n+$!\tand where [component list] is space separated list beginning\n+$!\twith \"CC1\" and optionally followed by \"CC1PLUS\"; default if\n+$!\tnothing is specified is \"CC1\" (the C compiler); choosing\n+$!\t\"CC1PLUS\" (the C++ compiler) without also specifying \"CC1\"\n+$!\twill not work.\t(See make-cc1.com for other potential component\n+$!\tvalues; but unless you're developing or debugging the compiler\n+$!\tsuite itself, the two above are the only ones of interest.)\n $!\n+$!\t  For a \"stage 2\" or subsequent build, always specify GNUC as\n+$!\tthe host compiler.\n $!\n-$! First, build the preprocessor.\n+$!\tNote:\n+$!\t  Even though it is possible to build with VAX C or DEC C,\n+$!\ta prior version of the gcc-vms binary distribution is still\n+$!\trequired to be able to use the newly built GNU CC compiler(s),\n+$!\tbecause the gcc source distribution does not supply the driver\n+$!\tprogram which the DCL command \"GCC\" implements or the C header\n+$!\tfiles and gcclib support library.\n+$!\n+$\n+$!\n+$! Change working directory to the location of this procedure.\n+$!\n+$ flnm = f$enviroment(\"PROCEDURE\")\t!get current procedure name\n+$ set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n+$\n+$!\n+$! First, we build the preprocessor.\n $!\n $ @make-cccp.com 'p1' 'p2'\n $!\n-$! To build the GNU C++ compiler in addition to the GNU CC compiler, comment\n-$! out the `@make-cc1' line, and uncomment the `@make-cc1 cc1 cc1plus' line.\n-$! To also build Objective-C, add \"cc1obj\" to the list.\n+$! To install it, copy the resulting GCC-CPP.EXE to the GNU_CC:[000000]\n+$! directory.\n+$!\n+$\n+$!\n+$! Now we build the C compiler.  To build the C++ compiler too, use\n+$! $ @make-gcc GNUC cc1 cc1plus\n+$! when invoking this command procedure.  Note that you should not\n+$! do this for a \"stage 1\" build.\n+$!\n+$ @make-cc1.com 'p1' 'p2' 'p3' 'p4' 'p5' 'p6' 'p7' 'p8'\n $!\n-$! See the file make-cc1.com for a complete list of options.\n+$! To install it (them), copy the resulting GCC-CC1.EXE (and GCC-CC1PLUS.EXE)\n+$! to the GNU_CC:[000000] directory.\n $!\n-$ @make-cc1.com  'p1' 'p2' 'p3' 'p4' 'p5' 'p6' 'p7' 'p8'\n-$! @make-cc1 cc1 cc1plus\n+$\n $!\n+$! Now we build the `libgcc2' support library.\tIt will need to be merged\n+$! with the existing gcclib.olb library.\n $!\n-$! Now build the library routines that are required.  These will be placed in\n-$! libgcc2.olb.  To install, extract all of the modules from libgcc2.olb and\n-$! add them to gnu_cc:[000000]gcclib.olb.  You may have to delete the eprintf\n-$! and new modules from the gnu_cc:[000000]gcclib.olb, since libgcc2 supplies\n-$! these same routines with different module names.\n+$ @make-l2.com 'p1' 'p2' 'p3' 'p4' 'p5' 'p6' 'p7' 'p8'\n $!\n-$! Now build gcclib2.olb\n+$! To install, save a backup copy of GNU_CC:[000000]GCCLIB.OLB somewhere,\n+$! then update the original using the newly created LIBGCC2.OLB via\n+$! $ library/Obj libgcc2.olb /Extract=*/Output=libgcc2.obj\n+$! $ library/Obj gnu_cc:[000000]gcclib.olb libgcc2.obj /Replace\n $!\n-$ @make-l2.com\n+$! Depending upon how old your present gcclib library is, you might have\n+$! to delete some modules, such as `eprintf' and `new', to avoid conflicting\n+$! symbols from obsolete routines.  After deleting any such modules, just\n+$! repeat the `library/replace' step.\n $!\n+$ exit"}, {"sha": "93694c8c4e8e421c6bcd9c050e546d9b752bdbef", "filename": "gcc/make-l2.com", "status": "modified", "additions": 78, "deletions": 28, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-l2.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd4d23c89e2d88420d7e8c70d7ce66aa22db30/gcc%2Fmake-l2.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-l2.com?ref=14cd4d23c89e2d88420d7e8c70d7ce66aa22db30", "patch": "@@ -1,48 +1,60 @@\n-$! Set the def dir to proper place for use in batch. Works for interactive too.\n-$flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n-$set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n+$! make-l2.com -- VMS build procedure for libgcc2.\n+$\n+$! Change working directory to the location of this command procedure.\n+$ flnm = f$enviroment(\"PROCEDURE\")\t!get current procedure name\n+$ set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n $!\n-$ arch_indx = 1 + ((f$getsyi(\"CPU\").ge.128).and.1)      ! vax==1, alpha==2\n-$ arch = f$element(arch_indx,\"|\",\"|vax|alpha|\")\n-$!\n-$! Command file to build libgcc2.olb.  You should only run this once you \n+$! Command file to build libgcc2.olb.  You should only run this once you\n $! have the current compiler installed, otherwise some of the builtins will\n $! not be recognized.  Once you have built libgcc2.olb, you can merge this\n-$! with gnu:[000000]gcclib.olb\n+$! with gnu_cc:[000000]gcclib.olb\n $!\n-$! All of the source code is assumed to be in libgcc2.c, and a list of the\n+$! All of the C source code is assumed to be in libgcc2.c, and a list of the\n $! modules that we need from there is in libgcc2.list (which is generated\n-$! when config-gcc.com is run).\n+$! when vmsconfig.com is run).  The C++ source is found in the [.cp.inc]\n+$! directory and managed via libgcc2-cxx.list.\n $!\n-$if f$search(\"gcc-cc1.exe\").eqs.\"\"\n-$  then\n-$    gcc-cc1:=$gnu_cc_library:gcc-cc1\n-$  else\n+$ if f$search(\"gcc-cc1.exe\").eqs.\"\"\n+$ then\n+$    gcc_cc1:=$gnu_cc:[000000]gcc-cc1\n+$    if f$extract(0,1,f$trnlnm(\"GNU_CC_VERSION\")).eqs.\"1\" then goto nocompile\n+$ else\n $    gcc_cc1:=$sys$disk:[]gcc-cc1\n-$  endif\n+$ endif\n $!\n-$if f$search(\"gcc-cpp.exe\").eqs.\"\"\n-$  then\n-$    gcc_cpp:=$gnu_cc_library:gcc-cpp\n-$  else\n+$ if f$search(\"gcc-cpp.exe\").eqs.\"\"\n+$ then\n+$    gcc_cpp:=$gnu_cc:[000000]gcc-cpp\n+$    if f$extract(0,1,f$trnlnm(\"GNU_CC_VERSION\")).eqs.\"1\" then goto nocompile\n+$    Version:='f$trnlnm(\"GNU_CC_VERSION\")'\n+$ else\n $    gcc_cpp:=$sys$disk:[]gcc-cpp\n $    open ifile$ version.opt\n $    read ifile$ line\n $    close ifile$\n-$  endif\n+$    Version=line - \"ident=\"\"\" - \"\"\"\n+$ endif\n $!\n-$ gcc_as:=$gnu_root:[bin]as       \n-$ cpp_file:=sys$scratch:gcc_'f$getjpi(0,\"pid\")'.cpp\n+$ if f$search(\"gcc-cc1plus.exe\").eqs.\"\"\n+$ then\tgcc_cxx = \"$gnu_cc:[000000]gcc-cc1plus\"\n+$ else\tgcc_cxx = \"$sys$disk:[]gcc-cc1plus\"\n+$ endif\n+$!\n+$gcc_as:=$gnu_cc:[000000]gcc-as\n+$cpp_file:=sys$scratch:gcc_'f$getjpi(0,\"pid\")'.cpp\n $ s_file:=sys$scratch:gcc_'f$getjpi(0,\"pid\")'.s\n $!\n $set symbol/scope=(nolocal,noglobal)\n $!\n $lib/create libgcc2.olb\n $on error then goto c_err\n $on control_y then goto c_err\n+$\n+$if f$trnlnm(\"IFILE$\").nes.\"\" then  close/noLog ifile$\n $open ifile$ libgcc2.list\n-$loop: read ifile$ line/end=c_done\n+$loop:\n $!\n+$read ifile$ line/end=c_done\n $i=0\n $loop1:\n $flnm=f$element(i,\" \",line)\n@@ -64,11 +76,11 @@ $ if arch .eqs. \"alpha\"\n $ then\n $   gcc_cpp \"-D__IEEE_FLOAT\" \"-I[]\" \"-I[.config]\" \"-I[.ginclude]\" \"-D''flnm'\"  libgcc2.c 'cpp_file'\n $   gcc_cc1 'cpp_file' -dumpbase 'objname' -\n-        -quiet -mgas \"-O1\" -mfloat-ieee -o 's_file'\n+\t-quiet -mgas \"-O1\" -mfloat-ieee -o 's_file'\n $ else\n $   gcc_cpp \"-I[]\" \"-I[.config]\" \"-I[.ginclude]\" \"-D''flnm'\"  libgcc2.c 'cpp_file'\n $   gcc_cc1 'cpp_file' -dumpbase 'objname' -\n-        -quiet -mgnu -g \"-O1\" -mvaxc-alignment   -o 's_file'\n+\t-quiet -mgnu -g \"-O1\" -mvaxc-alignment   -o 's_file'\n $ endif\n $ delete/nolog 'cpp_file';\n $   gcc_as 's_file'  -o 'objname'.OBJ\n@@ -87,13 +99,51 @@ $!\n $!\n $goto loop1\n $!\n-$goto loop\n-$!\n $! In case of error or abort, go here (In order to close file).\n $!\n-$c_err: !'f$verify(0)\n+$c_err:\t!'f$verify(0)\n $close ifile$\n $ exit %x2c\n $!\n $c_done:\n $close ifile$\n+$\n+$\n+$ EXIT\n+$\t!gcc-2.8.0: C++ libgcc2 code disabled since it's not adequately tested\n+$\n+$!\n+$ p1 = p1+\" \"+p2+\" \"+p3+\" \"+p4+\" \"+p5+\" \"+p6+\" \"+p7+\" \"+p8\n+$ p1 = \" \" + f$edit(p1,\"COMPRESS,TRIM,UPCASE\") + \" \"\n+$! (note: substring locations can only be equal when neither string is present)\n+$ if f$locate(\" CC1PLUS \",p1).eq.f$locate(\" CXX \",p1) then  goto cxx_done\n+$ if f$search(\"libgcc2-cxx.list\").eqs.\"\" then  goto cxx_done\n+$!\n+$ open/read ifile$ libgcc2-cxx.list\n+$cxx_line_loop:\n+$ read ifile$ line/end=cxx_done\n+$ i = 0\n+$cxx_file_loop:\n+$ flnm = f$element(i,\",\",line)\n+$ i = i + 1\n+$ if flnm.eqs.\"\" .or. flnm.eqs.\",\" then goto cxx_line_loop\n+$ write sys$output \"$ gcc/plus/debug ''flnm'.cc\"\n+$ objname = flnm\n+$!\n+$ gcc_cpp -+ \"-I[]\" \"-I[.ginclude]\" \"-I[.cp.inc]\" [.cp]'flnm'.cc 'cpp_file'\n+$ gcc_cxx 'cpp_file' -dumpbase 'objname' -fexceptions -\n+\t-quiet -mgnu -g \"-O1\" -mvaxc-alignment\t -o 's_file'\n+$ delete/nolog 'cpp_file';\n+$ gcc_as \"-vGNU CC  V''Version'\" 's_file'  -o 'objname'.OBJ\n+$! Assemble again, preserving lowercase symbol names this time.\n+$ gcc_as \"-vGNU CC  V''Version'\" -h3 's_file'  -o 'objname'-c.OBJ\n+$ delete/nolog 's_file';\n+$\n+$ library libgcc2.olb 'objname'.obj,'objname'-c.obj\n+$ delete/nolog 'objname'.obj;,'objname'-c.obj;\n+$!\n+$ goto cxx_file_loop\n+$!\n+$cxx_done:\n+$ close ifile$\n+$ exit"}]}