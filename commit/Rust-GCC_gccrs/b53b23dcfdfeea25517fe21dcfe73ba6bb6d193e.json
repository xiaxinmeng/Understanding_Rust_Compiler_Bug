{"sha": "b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUzYjIzZGNmZGZlZWEyNTUxN2ZlMjFkY2ZlNzNiYTZiYjZkMTkzZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-07T13:16:23Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-07T13:16:23Z"}, "message": "re PR target/36992 (Very stange code for _mm_move_epi64)\n\ngcc/\n\n2008-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/36992\n\t* config/i386/emmintrin.h (_mm_move_epi64): Use\n\t__builtin_ia32_movq128.\n\n\t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_MOVQ128.\n\t(bdesc_args): Add IX86_BUILTIN_MOVQ128.\n\n\t* config/i386/sse.md (sse2_movq128): New.\n\n\t* doc/extend.texi: Document __builtin_ia32_movq128.\n\ngcc/testsuite/\n\n2008-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/36992\n\t* gcc.target/i386/pr36992-1.c: Scan movq.\n\t* gcc.target/i386/pr36992-2.c: Use \"-O2 -msse4\" instead of\n\t\"-O0 -msse2\".  Scan movq.\n\nFrom-SVN: r138839", "tree": {"sha": "593f35c2ee411aecad75ed1447bd13bc257b1d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/593f35c2ee411aecad75ed1447bd13bc257b1d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/comments", "author": null, "committer": null, "parents": [{"sha": "9aa4d3c1cbd78511c868b2361eb033d685e1dc25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa4d3c1cbd78511c868b2361eb033d685e1dc25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa4d3c1cbd78511c868b2361eb033d685e1dc25"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "de3eecdba17ee161e2c3e0dbe9b56c63c09fb7e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -1,3 +1,16 @@\n+2008-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/36992\n+\t* config/i386/emmintrin.h (_mm_move_epi64): Use\n+\t__builtin_ia32_movq128.\n+\n+\t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_MOVQ128.\n+\t(bdesc_args): Add IX86_BUILTIN_MOVQ128.\n+\n+\t* config/i386/sse.md (sse2_movq128): New.\n+\n+\t* doc/extend.texi: Document __builtin_ia32_movq128.\n+\n 2008-08-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/37042"}, {"sha": "c6590dce4d4225fd05d20a578f939a400a1dde29", "filename": "gcc/config/i386/emmintrin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fconfig%2Fi386%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fconfig%2Fi386%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Femmintrin.h?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -726,7 +726,7 @@ _mm_movpi64_epi64 (__m64 __A)\n extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_move_epi64 (__m128i __A)\n {\n-  return _mm_set_epi64 ((__m64)0LL, _mm_movepi64_pi64 (__A));\n+  return (__m128i)__builtin_ia32_movq128 ((__v2di) __A);\n }\n \n /* Create a vector of zeros.  */"}, {"sha": "e6499fa34c07c3f8fb3407feb024876c0d9c1cc8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -18729,6 +18729,8 @@ enum ix86_builtins\n   IX86_BUILTIN_MOVNTPD,\n   IX86_BUILTIN_MOVNTDQ,\n \n+  IX86_BUILTIN_MOVQ128,\n+\n   /* SSE2 MMX */\n   IX86_BUILTIN_MASKMOVDQU,\n   IX86_BUILTIN_MOVMSKPD,\n@@ -19858,6 +19860,8 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_abstf2, 0, IX86_BUILTIN_FABSQ, UNKNOWN, (int) FLOAT128_FTYPE_FLOAT128 },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_copysigntf3, 0, IX86_BUILTIN_COPYSIGNQ, UNKNOWN, (int) FLOAT128_FTYPE_FLOAT128_FLOAT128 },\n \n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse2_movq128, \"__builtin_ia32_movq128\", IX86_BUILTIN_MOVQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI },\n+\n   /* SSE2 MMX */\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_addv1di3, \"__builtin_ia32_paddq\", IX86_BUILTIN_PADDQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_subv1di3, \"__builtin_ia32_psubq\", IX86_BUILTIN_PSUBQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI },"}, {"sha": "1d0ae86b51ca8c5a3e9dc31f48dc7b155a2eb203", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -210,6 +210,18 @@\n   DONE;\n })\n \n+(define_insn \"sse2_movq128\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+\t(vec_concat:V2DI\n+\t  (vec_select:DI\n+\t    (match_operand:V2DI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (parallel [(const_int 0)]))\n+\t  (const_int 0)))]\n+  \"TARGET_SSE2\"\n+  \"movq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"<sse>_movup<ssemodesuffixf2c>\"\n   [(set (match_operand:SSEMODEF2P 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:SSEMODEF2P"}, {"sha": "66fb8401c78dcf102d788089682f16f3eea6de7e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -8071,6 +8071,7 @@ v2di __builtin_ia32_psrlqi128 (v2di, int)\n v8hi __builtin_ia32_psrawi128 (v8hi, int)\n v4si __builtin_ia32_psradi128 (v4si, int)\n v4si __builtin_ia32_pmaddwd128 (v8hi, v8hi)\n+v2di __builtin_ia32_movq128 (v2di)\n @end smallexample\n \n The following built-in functions are available when @option{-msse3} is used."}, {"sha": "417b6b79822531c751e114ee205382f68c0a7350", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -1,19 +1,26 @@\n+2008-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/36992\n+\t* gcc.target/i386/pr36992-1.c: Scan movq.\n+\t* gcc.target/i386/pr36992-2.c: Use \"-O2 -msse4\" instead of\n+\t\"-O0 -msse2\".  Scan movq.\n+\n 2008-08-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/37042\n \t* gcc.dg/Wstrict-aliasing-bogus-ref-all-2.c: New testcase.\n \n 2008-08-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n- \t* gcc.c-torture/compile/20080806-1.c: Move testcase ...\n+\t* gcc.c-torture/compile/20080806-1.c: Move testcase ...\n \t* gcc.target/s390/20080806-1.c: ... to here.\n \n 2008-08-06  Douglas Gregor  <doug.gregor@gmail.com>\n \n-       PR c++/36460\n-       * g++.dg/cpp0x/bracket3.C: Add another test case for the >>\n-       warning under -Wc++0x-compat.\n-       * g++.dg/cpp0x/bracket4.C: Add testcase for PR c++/36460.\n+\tPR c++/36460\n+\t* g++.dg/cpp0x/bracket3.C: Add another test case for the >>\n+\twarning under -Wc++0x-compat.\n+\t* g++.dg/cpp0x/bracket4.C: Add testcase for PR c++/36460.\n \n 2008-08-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "7cd24cccf3ed2cedca08a15df1236415396d975d", "filename": "gcc/testsuite/gcc.target/i386/pr36992-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-1.c?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -9,4 +9,4 @@ test (__m128i b)\n   return _mm_move_epi64 (b);\n }\n \n-/* { dg-final { scan-assembler-times \"mov\\[qd\\]\\[ \\\\t\\]+.*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+.*%xmm\" 1 } } */"}, {"sha": "17696a5b2767270e924803e5c442e75eea150a9c", "filename": "gcc/testsuite/gcc.target/i386/pr36992-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36992-2.c?ref=b53b23dcfdfeea25517fe21dcfe73ba6bb6d193e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile }\n-/* { dg-options \"-O0 -msse2\" } */\n+/* { dg-options \"-O2 -msse4\" } */\n \n #include <emmintrin.h>\n \n@@ -9,4 +9,4 @@ test (__m128i b)\n   return _mm_move_epi64 (b);\n }\n \n-/* { dg-final { scan-assembler-not \"%mm\" } } */\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+.*%xmm\" 1 } } */"}]}