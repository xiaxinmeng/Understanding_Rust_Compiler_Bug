{"sha": "b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkYWJjZTVmM2E0ZjNiMzQ2ODE4MWExY2JhMGVmNjkwZjg4NTViZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-03T18:11:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-03T18:11:18Z"}, "message": "Define std::owner_less<void> specialization (P0074R0)\n\n\t* include/bits/shared_ptr.h (owner_less): Add default template\n\targument.\n\t* include/bits/shared_ptr_base.h (_Sp_owner_less<void, void>): Define\n\tspecialization.\n\t(owner_less<void>): Define specialization.\n\t* include/bits/stl_function.h (__cpp_lib_transparent_operators):\n\tUpdate value.\n\t* testsuite/20_util/owner_less/void.cc: New test.\n\t* testsuite/experimental/feat-cxx14.cc: Update macro value tested.\n\nFrom-SVN: r239089", "tree": {"sha": "e3a88492718a05a97cc8098f6d4ab4ae303bcf83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3a88492718a05a97cc8098f6d4ab4ae303bcf83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "068c8ac17cbece8f2bf12cb75f624d89423534da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068c8ac17cbece8f2bf12cb75f624d89423534da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068c8ac17cbece8f2bf12cb75f624d89423534da"}], "stats": {"total": 83, "additions": 79, "deletions": 4}, "files": [{"sha": "8bc5b2e7176bc0ea249161f3924cf3ef2e3c557e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "patch": "@@ -1,5 +1,15 @@\n 2016-08-03  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/shared_ptr.h (owner_less): Add default template\n+\targument.\n+\t* include/bits/shared_ptr_base.h (_Sp_owner_less<void, void>): Define\n+\tspecialization.\n+\t(owner_less<void>): Define specialization.\n+\t* include/bits/stl_function.h (__cpp_lib_transparent_operators):\n+\tUpdate value.\n+\t* testsuite/20_util/owner_less/void.cc: New test.\n+\t* testsuite/experimental/feat-cxx14.cc: Update macro value tested.\n+\n \t* include/bits/allocator.h (__cpp_lib_incomplete_container_elements):\n \tDefine feature-test macro.\n \t* include/bits/range_access.h (__cpp_lib_array_constexpr): Likewise."}, {"sha": "16f78f7968a8e8e5a668c5829982b13fd767e51a", "filename": "libstdc++-v3/include/bits/shared_ptr.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h?ref=b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "patch": "@@ -535,9 +535,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \n   /// Primary template owner_less\n-  template<typename _Tp>\n+  template<typename _Tp = void>\n     struct owner_less;\n \n+  /// Void specialization of owner_less\n+  template<>\n+    struct owner_less<void> : _Sp_owner_less<void, void>\n+    { };\n+\n   /// Partial specialization of owner_less for shared_ptr.\n   template<typename _Tp>\n     struct owner_less<shared_ptr<_Tp>>"}, {"sha": "1474df603b7f96dbd9fc5cceb3385524ca9fc928", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "patch": "@@ -1506,6 +1506,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return __lhs.owner_before(__rhs); }\n     };\n \n+  template<>\n+    struct _Sp_owner_less<void, void>\n+    {\n+      template<typename _Tp, typename _Up>\n+\tauto\n+\toperator()(const _Tp& __lhs, const _Up& __rhs) const\n+\t-> decltype(__lhs.owner_before(__rhs))\n+\t{ return __lhs.owner_before(__rhs); }\n+\n+      using is_transparent = void;\n+    };\n+\n   template<typename _Tp, _Lock_policy _Lp>\n     struct owner_less<__shared_ptr<_Tp, _Lp>>\n     : public _Sp_owner_less<__shared_ptr<_Tp, _Lp>, __weak_ptr<_Tp, _Lp>>"}, {"sha": "1408da6e37e16af60edd24a90ce9cfd69ea52383", "filename": "libstdc++-v3/include/bits/stl_function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h?ref=b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "patch": "@@ -224,7 +224,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cplusplus > 201103L\n \n-#define __cpp_lib_transparent_operators 201210\n+#define __cpp_lib_transparent_operators 201510\n \n   template<>\n     struct plus<void>"}, {"sha": "4facbf57001a8c1c2c4ee454a6dc7ba6201b1671", "filename": "libstdc++-v3/testsuite/20_util/owner_less/void.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fvoid.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fvoid.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fvoid.cc?ref=b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <memory>\n+\n+#if __cplusplus >= 201402L\n+// The feature-test macro is only defined for C++14 and later.\n+# if __cpp_lib_transparent_operators < 201510\n+#  error \"__cpp_lib_transparent_operators < 201510\"\n+# endif\n+#endif\n+\n+void\n+test01()\n+{\n+  using namespace std;\n+\n+  static_assert(is_same<owner_less<>, owner_less<void>>::value,\n+                \"owner_less<> uses void specialization\");\n+\n+  shared_ptr<int> sp1;\n+  shared_ptr<void> sp2;\n+  shared_ptr<long> sp3;\n+  weak_ptr<int> wp1;\n+\n+  owner_less<> cmp;\n+  cmp(sp1, sp2);\n+  cmp(sp1, wp1);\n+  cmp(sp1, sp3);\n+  cmp(wp1, sp1);\n+  cmp(wp1, wp1);\n+}"}, {"sha": "c61f7b00f68757775be14923ce234775b7ec6fb6", "filename": "libstdc++-v3/testsuite/experimental/feat-cxx14.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-cxx14.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7dabce5f3a4f3b3468181a1cba0ef690f8855bd/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-cxx14.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-cxx14.cc?ref=b7dabce5f3a4f3b3468181a1cba0ef690f8855bd", "patch": "@@ -40,8 +40,8 @@\n \n #ifndef  __cpp_lib_transparent_operators\n #  error \"__cpp_lib_transparent_operators\"\n-#elif  __cpp_lib_transparent_operators != 201210\n-#  error \"__cpp_lib_transparent_operators != 201210\"\n+#elif  __cpp_lib_transparent_operators < 201210\n+#  error \"__cpp_lib_transparent_operators < 201210\"\n #endif\n \n #ifndef  __cpp_lib_result_of_sfinae"}]}