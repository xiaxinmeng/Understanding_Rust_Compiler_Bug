{"sha": "a95d27c83b595db1e4e428fb3b0eba12cd6e7107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1ZDI3YzgzYjU5NWRiMWU0ZTQyOGZiM2IwZWJhMTJjZDZlNzEwNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-07-06T07:16:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-07-06T07:16:32Z"}, "message": "revert: re PR tree-optimization/16115 (double-destruction problem with argument passing via temporary (breaks auto_ptr))\n\n\tRevert:\n\t2004-06-24  Jason Merrill  <jason@redhat.com>\n\tPR c++/16115\n\t* decl.c (grokparms): Give the PARM_DECL reference type if the\n\tparameter is passed by invisible reference.\n\nFrom-SVN: r84147", "tree": {"sha": "ae671f4b20eac793db0415a318c297e30a0605d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae671f4b20eac793db0415a318c297e30a0605d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a95d27c83b595db1e4e428fb3b0eba12cd6e7107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95d27c83b595db1e4e428fb3b0eba12cd6e7107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a95d27c83b595db1e4e428fb3b0eba12cd6e7107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95d27c83b595db1e4e428fb3b0eba12cd6e7107/comments", "author": null, "committer": null, "parents": [{"sha": "4404cf7dd98a5e662eb408a5fd6ad125f8814df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4404cf7dd98a5e662eb408a5fd6ad125f8814df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4404cf7dd98a5e662eb408a5fd6ad125f8814df0"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "a9dc85783330b53036e3dd9527ef6634e0a17087", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95d27c83b595db1e4e428fb3b0eba12cd6e7107/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95d27c83b595db1e4e428fb3b0eba12cd6e7107/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a95d27c83b595db1e4e428fb3b0eba12cd6e7107", "patch": "@@ -1,3 +1,11 @@\n+2004-07-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tRevert:\n+\t2004-06-24  Jason Merrill  <jason@redhat.com>\n+\tPR c++/16115\n+\t* decl.c (grokparms): Give the PARM_DECL reference type if the\n+\tparameter is passed by invisible reference.\n+\n 2004-07-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* cp-lang.c (cp_var_mod_type_p): Add extra arg."}, {"sha": "fbc7dd72890b8198d453b40356005ac8e84c0d5d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95d27c83b595db1e4e428fb3b0eba12cd6e7107/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95d27c83b595db1e4e428fb3b0eba12cd6e7107/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a95d27c83b595db1e4e428fb3b0eba12cd6e7107", "patch": "@@ -8220,13 +8220,6 @@ grokparms (cp_parameter_declarator *first_parm, tree *parms)\n \n       if (type != error_mark_node)\n \t{\n-\t  /* If this type is passed by invisible reference, make the PARM_DECL\n-\t     reflect that so that alias analysis knows that the actual object\n-\t     is external to the function.  */\n-\t  if (TREE_ADDRESSABLE (type))\n-\t    decl = build_decl (PARM_DECL, DECL_NAME (decl),\n-\t\t\t       build_reference_type (type));\n-\n \t  /* Top-level qualifiers on the parameters are\n \t     ignored for function types.  */\n \t  type = cp_build_qualified_type (type, 0);\n@@ -8261,7 +8254,7 @@ grokparms (cp_parameter_declarator *first_parm, tree *parms)\n \t    }\n \n \t  if (!any_error && init)\n-\t    init = check_default_argument (type, init);\n+\t    init = check_default_argument (decl, init);\n \t  else\n \t    init = NULL_TREE;\n \t}"}]}