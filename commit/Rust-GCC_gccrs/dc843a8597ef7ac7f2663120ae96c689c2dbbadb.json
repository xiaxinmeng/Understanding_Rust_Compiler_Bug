{"sha": "dc843a8597ef7ac7f2663120ae96c689c2dbbadb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM4NDNhODU5N2VmN2FjN2YyNjYzMTIwYWU5NmM2ODljMmRiYmFkYg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-07-30T08:30:06Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-07-30T08:30:06Z"}, "message": "lra: consider clobbers when selecting hard_regno to spill\n\nThe idea behind the rclass loop in spill_hard_reg_in_range() seems to\nbe: find a hard_regno, which in general conflicts with reload regno,\nbut does not do so between `from` and `to`, and then do the live range\nsplitting based on this information. To check the absence of conflicts,\nwe make use of insn_bitmap, which does not contain insns which clobber\nthe hard_regno.\n\ngcc/ChangeLog:\n\n2018-07-30  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n        PR target/86547\n\t* lra-constraints.c (spill_hard_reg_in_range): When selecting the\n\thard_regno, make sure no insn between `from` and `to` clobbers it.\n\nFrom-SVN: r263063", "tree": {"sha": "0646832414012bff09de8e4d469a4df0fe91611e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0646832414012bff09de8e4d469a4df0fe91611e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc843a8597ef7ac7f2663120ae96c689c2dbbadb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc843a8597ef7ac7f2663120ae96c689c2dbbadb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc843a8597ef7ac7f2663120ae96c689c2dbbadb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc843a8597ef7ac7f2663120ae96c689c2dbbadb/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4cdfee3f206d784f8a502af4f34180a0762df4fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdfee3f206d784f8a502af4f34180a0762df4fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdfee3f206d784f8a502af4f34180a0762df4fe"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "c635f776e34e0753c8ca5f39c541c87a3bcb83d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc843a8597ef7ac7f2663120ae96c689c2dbbadb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc843a8597ef7ac7f2663120ae96c689c2dbbadb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc843a8597ef7ac7f2663120ae96c689c2dbbadb", "patch": "@@ -1,3 +1,9 @@\n+2018-07-30  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+        PR target/86547\n+\t* lra-constraints.c (spill_hard_reg_in_range): When selecting the\n+\thard_regno, make sure no insn between `from` and `to` clobbers it.\n+\n 2018-07-30  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Tom de Vries  <tdevries@suse.de>\n "}, {"sha": "6d4042ebdc228d93136214687cad4da0e5a1e169", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc843a8597ef7ac7f2663120ae96c689c2dbbadb/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc843a8597ef7ac7f2663120ae96c689c2dbbadb/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=dc843a8597ef7ac7f2663120ae96c689c2dbbadb", "patch": "@@ -5722,9 +5722,19 @@ spill_hard_reg_in_range (int regno, enum reg_class rclass, rtx_insn *from, rtx_i\n \t  || TEST_HARD_REG_BIT (ignore, hard_regno))\n \tcontinue;\n       for (insn = from; insn != NEXT_INSN (to); insn = NEXT_INSN (insn))\n-\tif (bitmap_bit_p (&lra_reg_info[hard_regno].insn_bitmap,\n-\t\t\t  INSN_UID (insn)))\n-\t  break;\n+\t{\n+\t  lra_insn_recog_data_t id = lra_insn_recog_data[uid = INSN_UID (insn)];\n+\t  struct lra_static_insn_data *static_id = id->insn_static_data;\n+\t  struct lra_insn_reg *reg;\n+\n+\t  if (bitmap_bit_p (&lra_reg_info[hard_regno].insn_bitmap, uid))\n+\t    break;\n+\t  for (reg = static_id->hard_regs; reg != NULL; reg = reg->next)\n+\t    if (reg->regno == hard_regno)\n+\t      break;\n+\t  if (reg != NULL)\n+\t    break;\n+\t}\n       if (insn != NEXT_INSN (to))\n \tcontinue;\n       if (split_reg (TRUE, hard_regno, from, NULL, to))"}]}