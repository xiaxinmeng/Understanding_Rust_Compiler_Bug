{"sha": "390875e69414e413076e9dad99dfab945f986eab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkwODc1ZTY5NDE0ZTQxMzA3NmU5ZGFkOTlkZmFiOTQ1Zjk4NmVhYg==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2015-07-24T01:43:22Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2015-07-24T01:43:22Z"}, "message": "reg_equal_test.c: New test.\n\ngcc/testsuite/ChangeLog:\n\n2015-07-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* gcc.target/arm/reg_equal_test.c: New test.\n\ngcc/ChangeLog:\n\n2015-07-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* config/arm/arm.c (arm_emit_movpair): Add REG_EQUAL notes to\n\tinstruction.\n\nFrom-SVN: r226135", "tree": {"sha": "27e9b050104ff8c47d9677dee1e5d5c4be94ee75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e9b050104ff8c47d9677dee1e5d5c4be94ee75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/390875e69414e413076e9dad99dfab945f986eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390875e69414e413076e9dad99dfab945f986eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/390875e69414e413076e9dad99dfab945f986eab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390875e69414e413076e9dad99dfab945f986eab/comments", "author": null, "committer": null, "parents": [{"sha": "fa24123b0fbb8baeca2deb7c79b62c58f5c1fe23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa24123b0fbb8baeca2deb7c79b62c58f5c1fe23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa24123b0fbb8baeca2deb7c79b62c58f5c1fe23"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "211f82ba6f73807422b442933ca471e1bf246a43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390875e69414e413076e9dad99dfab945f986eab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390875e69414e413076e9dad99dfab945f986eab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=390875e69414e413076e9dad99dfab945f986eab", "patch": "@@ -1,3 +1,8 @@\n+2015-07-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* config/arm/arm.c (arm_emit_movpair): Add REG_EQUAL notes to\n+\tinstruction.\n+\n 2015-07-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* cse.c (cse_insn): Fix missing check for STRICT_LOW_PART and minor"}, {"sha": "eeab8a8b5ae318e29845ec0f13f394e48a9464bb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390875e69414e413076e9dad99dfab945f986eab/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390875e69414e413076e9dad99dfab945f986eab/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=390875e69414e413076e9dad99dfab945f986eab", "patch": "@@ -17871,19 +17871,27 @@ output_mov_long_double_arm_from_arm (rtx *operands)\n void\n arm_emit_movpair (rtx dest, rtx src)\n  {\n+  rtx insn;\n+\n   /* If the src is an immediate, simplify it.  */\n   if (CONST_INT_P (src))\n     {\n       HOST_WIDE_INT val = INTVAL (src);\n       emit_set_insn (dest, GEN_INT (val & 0x0000ffff));\n       if ((val >> 16) & 0x0000ffff)\n-        emit_set_insn (gen_rtx_ZERO_EXTRACT (SImode, dest, GEN_INT (16),\n-                                             GEN_INT (16)),\n-                       GEN_INT ((val >> 16) & 0x0000ffff));\n+\t{\n+\t  emit_set_insn (gen_rtx_ZERO_EXTRACT (SImode, dest, GEN_INT (16),\n+\t\t\t\t\t       GEN_INT (16)),\n+\t\t\t GEN_INT ((val >> 16) & 0x0000ffff));\n+\t  insn = get_last_insn ();\n+\t  set_unique_reg_note (insn, REG_EQUAL, copy_rtx (src));\n+\t}\n       return;\n     }\n    emit_set_insn (dest, gen_rtx_HIGH (SImode, src));\n    emit_set_insn (dest, gen_rtx_LO_SUM (SImode, dest, src));\n+   insn = get_last_insn ();\n+   set_unique_reg_note (insn, REG_EQUAL, copy_rtx (src));\n  }\n \n /* Output a move between double words.  It must be REG<-MEM"}, {"sha": "81d09f6fffc25dd6176fadd08cd3b56dac8340c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390875e69414e413076e9dad99dfab945f986eab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390875e69414e413076e9dad99dfab945f986eab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=390875e69414e413076e9dad99dfab945f986eab", "patch": "@@ -1,3 +1,7 @@\n+2015-07-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* gcc.target/arm/reg_equal_test.c: New test.\n+\n 2015-07-23  Jeff Law  <law@redhat.com>\n \n \tPR lto/66752"}, {"sha": "58fa9dd9b94130668a27637e5b364b68e37a52c6", "filename": "gcc/testsuite/gcc.target/arm/reg_equal_test.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390875e69414e413076e9dad99dfab945f986eab/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Freg_equal_test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390875e69414e413076e9dad99dfab945f986eab/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Freg_equal_test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Freg_equal_test.c?ref=390875e69414e413076e9dad99dfab945f986eab", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-rtl-expand\" } */\n+\n+extern void abort (void);\n+unsigned int a = 1;\n+\n+int\n+main (void)\n+{\n+  unsigned int b, c, d;\n+\n+  if (sizeof (int) != 4 || (int) 0xc7d24b5e > 0)\n+    return 0;\n+\n+  c = 0xc7d24b5e;\n+  d = a | -2;\n+  b = (d == 0) ? c : (c % d);\n+  if (b != c)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-rtl-dump \"expr_list:REG_EQUAL \\\\(const_int -942519458\" \"expand\" } } */"}]}