{"sha": "d067bd72936aaaa7e947e919fc869143539ae023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA2N2JkNzI5MzZhYWFhN2U5NDdlOTE5ZmM4NjkxNDM1MzlhZTAyMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-29T14:47:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-29T14:47:17Z"}, "message": "libstdc++: Do not use volatile for __gnu_cxx::rope reference counting\n\nThe rope extension uses a volatile variable for its reference count.\nThis is not only unnecessary for correctness (volatile provides neither\natomicity nor memory visibility, and the variable is only modified while\na lock is held) but it now causes deprecated warnings with\n-Wsystem-headers due to the use of ++ and -- operators.\n\nIt would be possible to use __gnu_cxx::__exchange_and_add in _M_incr and\n_M_decr when __atomic_is_lock_free(sizeof(_RC_t), &_M_ref_count) is\ntrue, rather than locking a mutex. That would probably be a significant\nimprovement for multi-threaded and single-threaded code (because\n__exchange_and_add will use non-atomic ops when possible, and even in MT\ncode it should be faster than the mutex lock/unlock pair). However,\nmixing objects compiled with the old and new code would result in\ninconsistent synchronization being used for the reference count.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/ext/rope (_Refcount_Base::_M_ref_count): Remove\n\tvolatile qualifier.\n\t(_Refcount_Base::_M_decr()): Likewise.", "tree": {"sha": "63114e16fe3b0e3212a681b6d941ff3c39f7db2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63114e16fe3b0e3212a681b6d941ff3c39f7db2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d067bd72936aaaa7e947e919fc869143539ae023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d067bd72936aaaa7e947e919fc869143539ae023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d067bd72936aaaa7e947e919fc869143539ae023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d067bd72936aaaa7e947e919fc869143539ae023/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c9b99ef7115fa88ef4d744cc2afc424bd5c3ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9b99ef7115fa88ef4d744cc2afc424bd5c3ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9b99ef7115fa88ef4d744cc2afc424bd5c3ef2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "08e510bb0dc00132481a983c274fe31be83e5a10", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d067bd72936aaaa7e947e919fc869143539ae023/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d067bd72936aaaa7e947e919fc869143539ae023/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=d067bd72936aaaa7e947e919fc869143539ae023", "patch": "@@ -452,7 +452,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     typedef std::size_t _RC_t;\n     \n     // The data member _M_ref_count\n-    volatile _RC_t _M_ref_count;\n+    _RC_t _M_ref_count;\n \n     // Constructor\n #ifdef __GTHREAD_MUTEX_INIT\n@@ -489,7 +489,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _M_decr()\n     {\n       __gthread_mutex_lock(&_M_ref_count_lock);\n-      volatile _RC_t __tmp = --_M_ref_count;\n+      _RC_t __tmp = --_M_ref_count;\n       __gthread_mutex_unlock(&_M_ref_count_lock);\n       return __tmp;\n     }"}]}