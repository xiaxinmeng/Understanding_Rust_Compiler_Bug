{"sha": "d39fbed75810fc7478842503ecb0268b85dc9c2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5ZmJlZDc1ODEwZmM3NDc4ODQyNTAzZWNiMDI2OGI4NWRjOWMyZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-05-18T13:45:54Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-05-18T13:46:32Z"}, "message": "i386: Fix split_double_mode with paradoxical subreg [PR100626]\n\nsplit_double_mode calls simplify_gen_subreg, which fails for the\nhigh half of the paradoxical subreg.  Return temporary register\ninstead of NULL RTX in this case.\n\n2021-05-18  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/100626\n\t* config/i386/i386-expand.c (split_double_mode): Return\n\ttemporary register when simplify_gen_subreg fails with\n\tthe high half od the paradoxical subreg.", "tree": {"sha": "cab63b7dda8c3365ef476bd78120dd8ab8a43d62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cab63b7dda8c3365ef476bd78120dd8ab8a43d62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d39fbed75810fc7478842503ecb0268b85dc9c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39fbed75810fc7478842503ecb0268b85dc9c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39fbed75810fc7478842503ecb0268b85dc9c2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39fbed75810fc7478842503ecb0268b85dc9c2e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a0208e433dc5aed7ef8deab8d74b6da55e1985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a0208e433dc5aed7ef8deab8d74b6da55e1985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a0208e433dc5aed7ef8deab8d74b6da55e1985"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "9f3d41955a2f229d4a96629068e13647b3c8cb85", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39fbed75810fc7478842503ecb0268b85dc9c2e/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39fbed75810fc7478842503ecb0268b85dc9c2e/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=d39fbed75810fc7478842503ecb0268b85dc9c2e", "patch": "@@ -154,9 +154,13 @@ split_double_mode (machine_mode mode, rtx operands[],\n \t  lo_half[num] = simplify_gen_subreg (half_mode, op,\n \t\t\t\t\t      GET_MODE (op) == VOIDmode\n \t\t\t\t\t      ? mode : GET_MODE (op), 0);\n-\t  hi_half[num] = simplify_gen_subreg (half_mode, op,\n-\t\t\t\t\t      GET_MODE (op) == VOIDmode\n-\t\t\t\t\t      ? mode : GET_MODE (op), byte);\n+\n+\t  rtx tmp = simplify_gen_subreg (half_mode, op,\n+\t\t\t\t\t GET_MODE (op) == VOIDmode\n+\t\t\t\t\t ? mode : GET_MODE (op), byte);\n+\t  /* simplify_gen_subreg will return NULL RTX for the\n+\t     high half of the paradoxical subreg. */\n+\t  hi_half[num] = tmp ? tmp : gen_reg_rtx (half_mode);\n \t}\n     }\n }"}]}