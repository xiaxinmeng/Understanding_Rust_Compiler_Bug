{"sha": "e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFjYWJhMThjOGJiZDkzYmQ1M2U3NDhjMmYxMzBlZjBkNzViYmFhMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-23T15:36:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-23T15:36:32Z"}, "message": "gimple.c (gimple_types_compatible_p_1): Always compare type names.\n\n2011-05-23  Richard Guenther  <rguenther@suse.de>\n\n\t* gimple.c (gimple_types_compatible_p_1): Always compare type names.\n\t(iterative_hash_gimple_type): Always hash type names.\n\nFrom-SVN: r174074", "tree": {"sha": "0706f7250689b401c6de0bf14243e448b01e7741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0706f7250689b401c6de0bf14243e448b01e7741"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d7f99c7453e2caf75533c1b18afdf3d7b931ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7f99c7453e2caf75533c1b18afdf3d7b931ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7f99c7453e2caf75533c1b18afdf3d7b931ebe"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "b583601845ab610c2b3e5b464d3edb537d8ef13c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2", "patch": "@@ -1,3 +1,8 @@\n+2011-05-23  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gimple.c (gimple_types_compatible_p_1): Always compare type names.\n+\t(iterative_hash_gimple_type): Always hash type names.\n+\n 2011-05-23  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* c-typeck.c (build_function_call_vec): Tweak call to"}, {"sha": "d6c79aa1f5c9971246e1b75aed49cb72a2011337", "filename": "gcc/gimple.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=e1caba18c8bbd93bd53e748c2f130ef0d75bbaa2", "patch": "@@ -3587,6 +3587,10 @@ gimple_types_compatible_p_1 (tree t1, tree t2, type_pair_t p,\n      SCCs this assumption may get revisited.  */\n   state->u.same_p = 1;\n \n+  /* The struct tags shall compare equal.  */\n+  if (!compare_type_names_p (t1, t2, false))\n+    goto different_types;\n+\n   /* If their attributes are not the same they can't be the same type.  */\n   if (!attribute_list_equal (TYPE_ATTRIBUTES (t1), TYPE_ATTRIBUTES (t2)))\n     goto different_types;\n@@ -3797,10 +3801,6 @@ gimple_types_compatible_p_1 (tree t1, tree t2, type_pair_t p,\n       {\n \ttree f1, f2;\n \n-\t/* The struct tags shall compare equal.  */\n-\tif (!compare_type_names_p (t1, t2, false))\n-\t  goto different_types;\n-\n \t/* For aggregate types, all the fields must be the same.  */\n \tfor (f1 = TYPE_FIELDS (t1), f2 = TYPE_FIELDS (t2);\n \t     f1 && f2;\n@@ -4093,7 +4093,8 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n      smaller sets; when searching for existing matching types to merge,\n      only existing types having the same features as the new type will be\n      checked.  */\n-  v = iterative_hash_hashval_t (TREE_CODE (type), 0);\n+  v = iterative_hash_name (TYPE_NAME (type), 0);\n+  v = iterative_hash_hashval_t (TREE_CODE (type), v);\n   v = iterative_hash_hashval_t (TYPE_QUALS (type), v);\n   v = iterative_hash_hashval_t (TREE_ADDRESSABLE (type), v);\n \n@@ -4175,8 +4176,6 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n       unsigned nf;\n       tree f;\n \n-      v = iterative_hash_name (TYPE_NAME (type), v);\n-\n       for (f = TYPE_FIELDS (type), nf = 0; f; f = TREE_CHAIN (f))\n \t{\n \t  v = iterative_hash_name (DECL_NAME (f), v);"}]}