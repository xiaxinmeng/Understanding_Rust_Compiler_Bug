{"sha": "dd0a905f24c159bc583a40aadedaf40a01c747bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQwYTkwNWYyNGMxNTliYzU4M2E0MGFhZGVkYWY0MGEwMWM3NDdiZA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-03-03T23:50:03Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-03-03T23:50:03Z"}, "message": "Channels.java (newInputStream, [...]): Optimize when argument is a FileChannelImpl.\n\n\n\t* java/nio/channels/Channels.java (newInputStream, newOutputStream):\n\tOptimize when argument is a FileChannelImpl.\n\t(newInputStream(FileChannelImpl), newOutputStream(FileChannelImpl)):\n\tNew native methods.\n\t* java/nio/channels/natChannels.cc:  New file for new native methods.\n\t* Makefile.am:  Update accordingly.\n\nFrom-SVN: r78867", "tree": {"sha": "8da6fb814250474a55396eab60ccc38d2dedbe09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8da6fb814250474a55396eab60ccc38d2dedbe09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd0a905f24c159bc583a40aadedaf40a01c747bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd0a905f24c159bc583a40aadedaf40a01c747bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd0a905f24c159bc583a40aadedaf40a01c747bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd0a905f24c159bc583a40aadedaf40a01c747bd/comments", "author": null, "committer": null, "parents": [{"sha": "d79944f48459240e0db73da18de5c6002f0238b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79944f48459240e0db73da18de5c6002f0238b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79944f48459240e0db73da18de5c6002f0238b6"}], "stats": {"total": 233, "additions": 141, "deletions": 92}, "files": [{"sha": "8e3603bd53eb8e3387c6d898637cc8efb4729061", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=dd0a905f24c159bc583a40aadedaf40a01c747bd", "patch": "@@ -1,3 +1,12 @@\n+2004-03-03  Per Bothner  <per@bothner.com>\n+\n+\t* java/nio/channels/Channels.java (newInputStream, newOutputStream):\n+\tOptimize when argument is a FileChannelImpl.\n+\t(newInputStream(FileChannelImpl), newOutputStream(FileChannelImpl)):\n+\tNew native methods.\n+\t* java/nio/channels/natChannels.cc:  New file for new native methods.\n+\t* Makefile.am:  Update accordingly.\n+\n 2004-03-02  Jan Hubicka  <jh@suse.cz>\n \n \t* configure.host: Pass -fno-omit-frame-pointer for i386.\n@@ -8,15 +17,6 @@\n \n \t* java/lang/natPosixProcess.cc (startProcess):  Fix thinko.\n \n-2004-03-01  Per Bothner  <per@bothner.com>\n-\n-\t* java/nio/channels/Channels.java (newInputStream, newOutputStream):\n-\tOptimize when argument is a FileChannelImpl.\n-\t(newInputStream(FileChannelImpl), newOutputStream(FileChannelImpl)):\n-\tNew native methods.\n-\t* java/nio/channels/natChannels.cc:  New file for new native methods.\n-\t* Makefile.am:  Update accordingly.\n-\n 2004-02-29  Per Bothner  <per@bothner.com>\n \n \t* java/nio/channels/FileChannelImpl.java:  Moved to package"}, {"sha": "54a4d5b586307578d70c702316755c84da49d4ce", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=dd0a905f24c159bc583a40aadedaf40a01c747bd", "patch": "@@ -2852,6 +2852,7 @@ java/lang/reflect/natMethod.cc \\\n java/lang/reflect/natProxy.cc \\\n java/net/natNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n+java/nio/channels/natChannels.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/text/natCollator.cc \\\n java/util/natResourceBundle.cc \\"}, {"sha": "2f0b5a68b06f0e3b7efd8f3e4f03c8da556b39e0", "filename": "libjava/Makefile.in", "status": "modified", "additions": 83, "deletions": 81, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=dd0a905f24c159bc583a40aadedaf40a01c747bd", "patch": "@@ -2529,6 +2529,7 @@ java/lang/reflect/natMethod.cc \\\n java/lang/reflect/natProxy.cc \\\n java/net/natNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n+java/nio/channels/natChannels.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/text/natCollator.cc \\\n java/util/natResourceBundle.cc \\\n@@ -2693,10 +2694,10 @@ java/lang/natVMSecurityManager.lo java/lang/ref/natReference.lo \\\n java/lang/reflect/natArray.lo java/lang/reflect/natConstructor.lo \\\n java/lang/reflect/natField.lo java/lang/reflect/natMethod.lo \\\n java/lang/reflect/natProxy.lo java/net/natNetworkInterface.lo \\\n-java/net/natInetAddress.lo java/nio/natDirectByteBufferImpl.lo \\\n-java/text/natCollator.lo java/util/natResourceBundle.lo \\\n-java/util/natTimeZone.lo java/util/zip/natDeflater.lo \\\n-java/util/zip/natInflater.lo\n+java/net/natInetAddress.lo java/nio/channels/natChannels.lo \\\n+java/nio/natDirectByteBufferImpl.lo java/text/natCollator.lo \\\n+java/util/natResourceBundle.lo java/util/natTimeZone.lo \\\n+java/util/zip/natDeflater.lo java/util/zip/natInflater.lo\n lib_org_xml_sax_la_DEPENDENCIES =  libgcj.la\n lib_org_xml_sax_la_OBJECTS =  org/xml/sax/ext/DeclHandler.lo \\\n org/xml/sax/ext/LexicalHandler.lo \\\n@@ -2736,83 +2737,6 @@ org/w3c/dom/traversal/NodeFilter.lo \\\n org/w3c/dom/traversal/NodeIterator.lo \\\n org/w3c/dom/traversal/TreeWalker.lo\n lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES = \n-@GTK_CAIRO_FALSE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGlyphVector.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics2D.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArg.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArgList.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImage.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n-@GTK_CAIRO_FALSE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n-@GTK_CAIRO_FALSE@jni/classpath/primlib.lo\n @GTK_CAIRO_TRUE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n @GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n @GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n@@ -2894,6 +2818,83 @@ lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES =\n @GTK_CAIRO_TRUE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n @GTK_CAIRO_TRUE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n @GTK_CAIRO_TRUE@jni/classpath/primlib.lo\n+@GTK_CAIRO_FALSE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGlyphVector.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics2D.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArg.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArgList.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImage.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n+@GTK_CAIRO_FALSE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n+@GTK_CAIRO_FALSE@jni/classpath/primlib.lo\n lib_gnu_awt_xlib_la_OBJECTS =  gnu/gcj/xlib/natClip.lo \\\n gnu/gcj/xlib/natColormap.lo gnu/gcj/xlib/natDisplay.lo \\\n gnu/gcj/xlib/natDrawable.lo gnu/gcj/xlib/natFont.lo \\\n@@ -3832,6 +3833,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/nio/channels/UnresolvedAddressException.P \\\n .deps/java/nio/channels/UnsupportedAddressTypeException.P \\\n .deps/java/nio/channels/WritableByteChannel.P \\\n+.deps/java/nio/channels/natChannels.P \\\n .deps/java/nio/channels/spi/AbstractInterruptibleChannel.P \\\n .deps/java/nio/channels/spi/AbstractSelectableChannel.P \\\n .deps/java/nio/channels/spi/AbstractSelectionKey.P \\"}, {"sha": "896e1734d8051431083046805469ab3027172e83", "filename": "libjava/java/nio/channels/Channels.java", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java?ref=dd0a905f24c159bc583a40aadedaf40a01c747bd", "patch": "@@ -41,8 +41,11 @@\n import gnu.java.nio.ChannelOutputStream;\n import gnu.java.nio.InputStreamChannel;\n import gnu.java.nio.OutputStreamChannel;\n+import gnu.java.nio.channels.FileChannelImpl;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n import java.io.Reader;\n import java.io.Writer;\n import java.nio.charset.Charset;\n@@ -59,16 +62,23 @@ public final class Channels\n    */\n   public static InputStream newInputStream(ReadableByteChannel ch)\n   {\n+    if (ch instanceof FileChannelImpl)\n+      return newInputStream((FileChannelImpl) ch);\n     return new ChannelInputStream(ch);\n   }\n-  \n+\n   /**\n    * Constructs a stream that writes bytes to the given channel.\n    */\n   public static OutputStream newOutputStream(WritableByteChannel ch) \n   {\n+    if (ch instanceof FileChannelImpl)\n+      return newOutputStream((FileChannelImpl) ch);\n     return new ChannelOutputStream(ch);\n   }\n+\n+  static native FileInputStream newInputStream(FileChannelImpl ch);\n+  static native FileOutputStream newOutputStream(FileChannelImpl ch);\n   \n   /**\n    * Constructs a channel that reads bytes from the given stream.\n@@ -77,7 +87,7 @@ public static ReadableByteChannel newChannel(InputStream in)\n   {\n     return new InputStreamChannel(in);\n   }\n-  \n+\n   /**\n    * Constructs a channel that writes bytes to the given stream.\n    */"}, {"sha": "5e363ee15fae60ca6846f107f34282772180cdf2", "filename": "libjava/java/nio/channels/natChannels.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2Fjava%2Fnio%2Fchannels%2FnatChannels.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a905f24c159bc583a40aadedaf40a01c747bd/libjava%2Fjava%2Fnio%2Fchannels%2FnatChannels.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FnatChannels.cc?ref=dd0a905f24c159bc583a40aadedaf40a01c747bd", "patch": "@@ -0,0 +1,36 @@\n+// natChannels.cc - Native part of Channels class.\n+\n+/* Copyright (C) 2004  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+#include <gcj/cni.h>\n+\n+#include <java/nio/channels/Channels.h>\n+#include <java/io/FileInputStream.h>\n+#include <java/io/FileOutputStream.h>\n+#include <gnu/java/nio/channels/FileChannelImpl.h>\n+\n+using java::nio::channels::Channels;\n+using java::io::FileInputStream;\n+using java::io::FileOutputStream;\n+using gnu::java::nio::channels::FileChannelImpl;\n+\n+FileInputStream*\n+Channels::newInputStream(FileChannelImpl* ch)\n+{\n+  // Needs to be native to bypass Java access protection.\n+  return new FileInputStream (ch);\n+}\n+\n+FileOutputStream*\n+Channels::newOutputStream(FileChannelImpl* ch)\n+{\n+  // Needs to be native to bypass Java access protection.\n+  return new FileOutputStream (ch);\n+}"}]}