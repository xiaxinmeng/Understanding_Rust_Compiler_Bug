{"sha": "723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIzYWNiZDVmYTQxNmNjYjkyNWUxOWFlNTVlNTE1Y2IxYjliN2E3NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-08-03T06:45:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-08-03T06:45:54Z"}, "message": "cxxabi.h: Make all declarations have default visibility.\n\n\t* libsupc++/cxxabi.h: Make all declarations have default\n\tvisibility.\n\t* libsupc++/exception: Likewise.\n\t* libsupc++/new: Likewise.\n\t* libsupc++/typeinfo: Likewise.\n\t* libsupc++/unwind-cxx.h: Likewise.\n\t* libsupc++/eh_alloc.cc (__cxa_allocate_exception): Put it into\n\tthe __cxxabiv1 namespace.\n\t(__cxa_free_exception): Likewise.\n\t* libsupc++/eh_aux_runtime.cc (__cxa_bad_cast): Likewise.\n\t(__cxa_bad_typeid): Likewise.\n\t* libsupc++/eh_catch.cc (__cxa_begin_catch): Likewise.\n\t(__cxa_end_catch): Likewise.\n\t* libsupc++/eh_globals.cc (__cxa_get_globals_fast): Likewise.\n\t(__cxa_get_globals): Likewise.\n\t* libsupc++/eh_throw.cc (__cxa_throw): Likewise.\n\t(__cxa_rethrow): Likewise.\n\t* libsupc++/pure.cc (__cxa_pure_virtual): Likewise.\n\t* libsupc++/eh_type.cc: Include <cxxabi.h>.\n\nFrom-SVN: r85463", "tree": {"sha": "503b9c84a2f296a39097d2b65fb1534671499dd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/503b9c84a2f296a39097d2b65fb1534671499dd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/comments", "author": null, "committer": null, "parents": [{"sha": "aeb732c12e1b2ff6457690092798901e5d98ff86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb732c12e1b2ff6457690092798901e5d98ff86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb732c12e1b2ff6457690092798901e5d98ff86"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "68a7ad3535ecc144ef8f7638281ee556e14b82de", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -1,5 +1,25 @@\n 2004-08-02  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* libsupc++/cxxabi.h: Make all declarations have default\n+\tvisibility.\n+\t* libsupc++/exception: Likewise.\n+\t* libsupc++/new: Likewise.\n+\t* libsupc++/typeinfo: Likewise.\n+\t* libsupc++/unwind-cxx.h: Likewise.\n+\t* libsupc++/eh_alloc.cc (__cxa_allocate_exception): Put it into\n+\tthe __cxxabiv1 namespace.\n+\t(__cxa_free_exception): Likewise.\n+\t* libsupc++/eh_aux_runtime.cc (__cxa_bad_cast): Likewise.\n+\t(__cxa_bad_typeid): Likewise.\n+\t* libsupc++/eh_catch.cc (__cxa_begin_catch): Likewise.\n+\t(__cxa_end_catch): Likewise.\n+\t* libsupc++/eh_globals.cc (__cxa_get_globals_fast): Likewise.\n+\t(__cxa_get_globals): Likewise.\n+\t* libsupc++/eh_throw.cc (__cxa_throw): Likewise.\n+\t(__cxa_rethrow): Likewise.\n+\t* libsupc++/pure.cc (__cxa_pure_virtual): Likewise.\n+\t* libsupc++/eh_type.cc: Include <cxxabi.h>.\n+\n \t* Makefile.am (hosted_source): Add libmath and testsuite.\n \t(SUBDIRS): Remove them.\n \t* acinclude.m4: (GLIBCXX_ENABLED_HOSTED): Default to freestanding"}, {"sha": "b85019588df7bbd8c60b592cd2ee3e5e2d43a157", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -42,6 +42,8 @@\n #ifndef _CXXABI_H\n #define _CXXABI_H 1\n \n+#pragma GCC visibility push(default)\n+\n #include <stddef.h>\n #include <bits/cxxabi_tweaks.h>\n  \n@@ -523,4 +525,6 @@ namespace abi = __cxxabiv1;\n \n #endif // __cplusplus\n \n+#pragma GCC visibility pop\n+\n #endif // __CXXABI_H "}, {"sha": "4728bcbf380ff31063f2f830a432a1e0cae76158", "filename": "libstdc++-v3/libsupc++/eh_alloc.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -107,7 +107,7 @@ emergency_mutex_init ()\n \n \n extern \"C\" void *\n-__cxa_allocate_exception(std::size_t thrown_size) throw()\n+__cxxabiv1::__cxa_allocate_exception(std::size_t thrown_size) throw()\n {\n   void *ret;\n \n@@ -154,7 +154,7 @@ __cxa_allocate_exception(std::size_t thrown_size) throw()\n \n \n extern \"C\" void\n-__cxa_free_exception(void *vptr) throw()\n+__cxxabiv1::__cxa_free_exception(void *vptr) throw()\n {\n   char *ptr = (char *) vptr;\n   if (ptr >= &emergency_buffer[0][0]"}, {"sha": "eb30fbdab057690a71a30e8d63d70a06f3962cf2", "filename": "libstdc++-v3/libsupc++/eh_aux_runtime.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_aux_runtime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_aux_runtime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_aux_runtime.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -35,7 +35,7 @@\n #include \"exception_defines.h\"\n \n extern \"C\" void\n-__cxa_bad_cast ()\n+__cxxabiv1::__cxa_bad_cast ()\n {\n #ifdef __EXCEPTIONS  \n   throw std::bad_cast();\n@@ -45,7 +45,7 @@ __cxa_bad_cast ()\n }\n \n extern \"C\" void\n-__cxa_bad_typeid ()\n+__cxxabiv1::__cxa_bad_typeid ()\n {\n #ifdef __EXCEPTIONS  \n   throw std::bad_typeid();"}, {"sha": "bdcbd7e085cbdad7cc869023aedf4284acc95292", "filename": "libstdc++-v3/libsupc++/eh_catch.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_catch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_catch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_catch.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -35,7 +35,7 @@ using namespace __cxxabiv1;\n \n \n extern \"C\" void *\n-__cxa_begin_catch (void *exc_obj_in) throw()\n+__cxxabiv1::__cxa_begin_catch (void *exc_obj_in) throw()\n {\n   _Unwind_Exception *exceptionObject\n     = reinterpret_cast <_Unwind_Exception *>(exc_obj_in);\n@@ -82,7 +82,7 @@ __cxa_begin_catch (void *exc_obj_in) throw()\n \n \n extern \"C\" void\n-__cxa_end_catch ()\n+__cxxabiv1::__cxa_end_catch ()\n {\n   __cxa_eh_globals *globals = __cxa_get_globals_fast ();\n   __cxa_exception *header = globals->caughtExceptions;"}, {"sha": "b63fc1e89858b3d5430b7b6acb2d0fd6ea99ae76", "filename": "libstdc++-v3/libsupc++/eh_globals.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_globals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_globals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_globals.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -69,7 +69,7 @@ get_globals_init_once ()\n #endif\n \n extern \"C\" __cxa_eh_globals *\n-__cxa_get_globals_fast () throw()\n+__cxxabiv1::__cxa_get_globals_fast () throw()\n {\n #if __GTHREADS\n   if (use_thread_key)\n@@ -82,7 +82,7 @@ __cxa_get_globals_fast () throw()\n }\n \n extern \"C\" __cxa_eh_globals *\n-__cxa_get_globals () throw()\n+__cxxabiv1::__cxa_get_globals () throw()\n {\n #if __GTHREADS\n   __cxa_eh_globals *g;"}, {"sha": "b02efdad6dcc52bd08c7a9ebb35080d2fd1974b0", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -31,7 +31,6 @@\n #include <bits/c++config.h>\n #include \"unwind-cxx.h\"\n \n-\n using namespace __cxxabiv1;\n \n \n@@ -56,7 +55,8 @@ __gxx_exception_cleanup (_Unwind_Reason_Code code, _Unwind_Exception *exc)\n \n \n extern \"C\" void\n-__cxa_throw (void *obj, std::type_info *tinfo, void (*dest) (void *))\n+__cxxabiv1::__cxa_throw (void *obj, std::type_info *tinfo, \n+\t\t\t void (*dest) (void *))\n {\n   __cxa_exception *header = __get_exception_header_from_obj (obj);\n   header->exceptionType = tinfo;\n@@ -81,7 +81,7 @@ __cxa_throw (void *obj, std::type_info *tinfo, void (*dest) (void *))\n }\n \n extern \"C\" void\n-__cxa_rethrow ()\n+__cxxabiv1::__cxa_rethrow ()\n {\n   __cxa_eh_globals *globals = __cxa_get_globals ();\n   __cxa_exception *header = globals->caughtExceptions;"}, {"sha": "6dd4eedb9c64379716164e585a72d40c1045b0a3", "filename": "libstdc++-v3/libsupc++/eh_type.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_type.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -29,6 +29,7 @@\n \n \n #include <typeinfo>\n+#include <cxxabi.h>\n #include \"unwind-cxx.h\"\n \n namespace __cxxabiv1"}, {"sha": "c2c8a15dc036e271bb902a2e6bb9a33fe97079fe", "filename": "libstdc++-v3/libsupc++/exception", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -37,6 +37,8 @@\n #ifndef __EXCEPTION__\n #define __EXCEPTION__\n \n+#pragma GCC visibility push(default)\n+\n extern \"C++\" {\n \n namespace std \n@@ -117,4 +119,6 @@ namespace __gnu_cxx\n   \n } // extern \"C++\"\n \n+#pragma GCC visibility pop\n+\n #endif"}, {"sha": "434720dcd371a8f0803a04be656bb6faa1b91511", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -41,6 +41,8 @@\n #include <cstddef>\n #include <exception>\n \n+#pragma GCC visibility push(default)\n+\n extern \"C++\" {\n \n namespace std \n@@ -98,4 +100,6 @@ inline void  operator delete[](void*, void*) throw() { }\n //@}\n } // extern \"C++\"\n \n+#pragma GCC visibility pop\n+\n #endif"}, {"sha": "2e75492e705013392b992fc8ef41d38769a35c76", "filename": "libstdc++-v3/libsupc++/pure.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fpure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fpure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fpure.cc?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -28,6 +28,7 @@\n // the GNU General Public License.\n \n #include <bits/c++config.h>\n+#include <cxxabi.h>\n #include \"unwind-cxx.h\"\n \n #if _GLIBCXX_HOSTED\n@@ -48,7 +49,7 @@\n #endif\n \n extern \"C\" void\n-__cxa_pure_virtual (void)\n+__cxxabiv1::__cxa_pure_virtual (void)\n {\n   writestr (\"pure virtual method called\\n\");\n   std::terminate ();"}, {"sha": "46803ad4d147b0608fcabb6fd571410b533f9a25", "filename": "libstdc++-v3/libsupc++/typeinfo", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -37,6 +37,8 @@\n \n #include <exception>\n \n+#pragma GCC visibility push(default)\n+\n extern \"C++\" {\n \n namespace __cxxabiv1\n@@ -152,5 +154,7 @@ namespace std\n   };\n } // namespace std\n \n+#pragma GCC visibility pop\n+\n } // extern \"C++\"\n #endif"}, {"sha": "67ea5cc21100714e3423ce528bb6dcdab9729f77", "filename": "libstdc++-v3/libsupc++/unwind-cxx.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/723acbd5fa416ccb925e19ae55e515cb1b9b7a74/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h?ref=723acbd5fa416ccb925e19ae55e515cb1b9b7a74", "patch": "@@ -40,6 +40,8 @@\n #include <cstddef>\n #include \"unwind.h\"\n \n+#pragma GCC visibility push(default)\n+\n namespace __cxxabiv1\n {\n \n@@ -168,4 +170,6 @@ __get_exception_header_from_ue (_Unwind_Exception *exc)\n \n } /* namespace __cxxabiv1 */\n \n+#pragma GCC visibility pop\n+\n #endif // _UNWIND_CXX_H"}]}