{"sha": "7cb4ff28b161c364b176b7901f165a7210b5c9db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NiNGZmMjhiMTYxYzM2NGIxNzZiNzkwMWYxNjVhNzIxMGI1YzlkYg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2001-10-12T03:34:39Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-10-12T03:34:39Z"}, "message": "toplev.c (compile_file): Ignore return value from yyparse.\n\n\t* toplev.c (compile_file): Ignore return value from yyparse.\n\tAlways pop any nested binding levels after yyparse returns.\n\nFrom-SVN: r46223", "tree": {"sha": "97e0e4f326a542e619daf88eca0ae3ed73c7dca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97e0e4f326a542e619daf88eca0ae3ed73c7dca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cb4ff28b161c364b176b7901f165a7210b5c9db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cb4ff28b161c364b176b7901f165a7210b5c9db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cb4ff28b161c364b176b7901f165a7210b5c9db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cb4ff28b161c364b176b7901f165a7210b5c9db/comments", "author": null, "committer": null, "parents": [{"sha": "b14127e69159d5138b9f345d5275cfbd3a762c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b14127e69159d5138b9f345d5275cfbd3a762c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b14127e69159d5138b9f345d5275cfbd3a762c4f"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "7d0706022f8cad8018e0e87e93d220dcc08f67af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb4ff28b161c364b176b7901f165a7210b5c9db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb4ff28b161c364b176b7901f165a7210b5c9db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cb4ff28b161c364b176b7901f165a7210b5c9db", "patch": "@@ -1,3 +1,8 @@\n+2001-10-11  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* toplev.c (compile_file): Ignore return value from yyparse.\n+\tAlways pop any nested binding levels after yyparse returns.\n+\n 2001-10-11  Richard Henderson  <rth@redhat.com>\n \n \t* doc/c-tree.texi (Expression trees): Add VTABLE_REF."}, {"sha": "ab83065e806fb771544884041baff19144bc36bf", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb4ff28b161c364b176b7901f165a7210b5c9db/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb4ff28b161c364b176b7901f165a7210b5c9db/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=7cb4ff28b161c364b176b7901f165a7210b5c9db", "patch": "@@ -2118,8 +2118,9 @@ pop_srcloc ()\n   lineno = input_file_stack->line;\n }\n \n-/* Compile an entire file of output from cpp, named NAME.\n-   Write a file of assembly output and various debugging dumps.  */\n+/* Compile an entire translation unit, whose primary source file is\n+   named NAME.  Write a file of assembly output and various debugging\n+   dumps.  */\n \n static void\n compile_file (name)\n@@ -2140,7 +2141,7 @@ compile_file (name)\n   init_timevar ();\n   timevar_start (TV_TOTAL);\n \n-  /* Open assembler code output file.  Do this even if -fsyntax-only is on,\n+  /* Open assembly code output file.  Do this even if -fsyntax-only is on,\n      because then the driver will have provided the name of a temporary\n      file or bit bucket for us.  */\n \n@@ -2324,17 +2325,12 @@ compile_file (name)\n \n   /* Call the parser, which parses the entire file\n      (calling rest_of_compilation for each function).  */\n+  yyparse ();\n \n-  if (yyparse () != 0)\n-    {\n-      if (errorcount == 0)\n-\tfnotice (stderr, \"Errors detected in input file (your bison.simple is out of date)\\n\");\n-\n-      /* In case there were missing closebraces,\n-\t get us back to the global binding level.  */\n-      while (! global_bindings_p ())\n-\tpoplevel (0, 0, 0);\n-    }\n+  /* In case there were missing block closers,\n+     get us back to the global binding level.  */\n+  while (! global_bindings_p ())\n+    poplevel (0, 0, 0);\n \n   /* Compilation is now finished except for writing\n      what's left of the symbol table output.  */"}]}