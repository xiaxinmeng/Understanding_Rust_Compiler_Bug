{"sha": "abaa8559b302f441f0cecaf6e2aa74d133d839d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJhYTg1NTliMzAyZjQ0MWYwY2VjYWY2ZTJhYTc0ZDEzM2Q4MzlkNg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2002-05-02T05:18:08Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-05-02T05:18:08Z"}, "message": "sync mainline to 3.1\n\nFrom-SVN: r53034", "tree": {"sha": "1c00aac1aa5084d22218550c3892a0be328e3570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c00aac1aa5084d22218550c3892a0be328e3570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abaa8559b302f441f0cecaf6e2aa74d133d839d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abaa8559b302f441f0cecaf6e2aa74d133d839d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abaa8559b302f441f0cecaf6e2aa74d133d839d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abaa8559b302f441f0cecaf6e2aa74d133d839d6/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76ccdb3c4a529e14d082a270366294ff29d1625b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ccdb3c4a529e14d082a270366294ff29d1625b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ccdb3c4a529e14d082a270366294ff29d1625b"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "04e6b17b44612a5e8e6a15bd70f60b5ecc90a4d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abaa8559b302f441f0cecaf6e2aa74d133d839d6", "patch": "@@ -5,6 +5,12 @@\n         * config/rs6000/rs6000.c (rs6000_legitimate_address): Disallow\n         PRE_INC and PRE_DEC for altivec modes.\n \n+2002-05-01  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/check.tpl(set-writable): make sure the function exists first\n+\t* fixinc/inclhack.def(alpha_assert): fix test_text\n+\t* fixinc/tests/base/assert.h: add in missing result\n+\n 2002-05-01  Jeff Law  <law@redhat.com>\n \n \t* pa.h (EXTRA_CONSTRAINT): Don't accept PIC addresses for the"}, {"sha": "a241d18d0e891b70cd1c1d1d715fd8b61b863fd1", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=abaa8559b302f441f0cecaf6e2aa74d133d839d6", "patch": "@@ -171,6 +171,6 @@ else\n fi\n $exitok[=\n \n-(set-writable)\n+(if (defined? 'set-writable) (set-writable))\n \n =]"}, {"sha": "764f621f88580797b48854916266363d662f8b00", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=abaa8559b302f441f0cecaf6e2aa74d133d839d6", "patch": "@@ -2089,7 +2089,7 @@ fix = {\n     select   = '__cplusplus < 54321L';\n     sed      = 's/defined(__cplusplus) && (__cplusplus < 54321L)/0/';\n \n-    test_text = '#if\\tdefined(__cplusplus) && (__cplusplus < 54321L)';\n+    test_text = \"#if\\tdefined(__cplusplus) && (__cplusplus < 54321L)\";\n };\n \n /*"}, {"sha": "5140e892e3c779fbc62c63cbf7a22684ae493cd7", "filename": "gcc/fixinc/tests/base/assert.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2Ffixinc%2Ftests%2Fbase%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abaa8559b302f441f0cecaf6e2aa74d133d839d6/gcc%2Ffixinc%2Ftests%2Fbase%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fassert.h?ref=abaa8559b302f441f0cecaf6e2aa74d133d839d6", "patch": "@@ -24,6 +24,11 @@ extern void __assert(const char *, const char *, int);\n #endif  /* ALPHA___ASSERT_CHECK */\n \n \n+#if defined( ALPHA_ASSERT_CHECK )\n+#define assert(EX) ((EX) ? (void)0 : __assert(#EX, __FILE__, __LINE__))\n+#endif  /* ALPHA_ASSERT_CHECK */\n+\n+\n #if defined( BROKEN_ASSERT_STDIO_CHECK )\n extern FILE* stderr;\n #endif  /* BROKEN_ASSERT_STDIO_CHECK */"}]}