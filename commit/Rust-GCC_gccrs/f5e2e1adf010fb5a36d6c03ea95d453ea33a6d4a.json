{"sha": "f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVlMmUxYWRmMDEwZmI1YTM2ZDZjMDNlYTk1ZDQ1M2VhMzNhNmQ0YQ==", "commit": {"author": {"name": "David P Grove", "email": "groved@us.ibm.com", "date": "2003-09-18T06:07:09Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-18T06:07:09Z"}, "message": "LineNumberReader (read): Don't reset pos & limit when markPos is 0.\n\n2003-09-18  David P Grove  <groved@us.ibm.com>\n\n\t* java/io/LineNumberReader (read): Don't reset pos & limit when\n\tmarkPos is 0.\n\nFrom-SVN: r71507", "tree": {"sha": "6ca5749a01219b36639ae16bb657c3a7bd1c499d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ca5749a01219b36639ae16bb657c3a7bd1c499d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a/comments", "author": {"login": "dgrove-oss", "id": 5099100, "node_id": "MDQ6VXNlcjUwOTkxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5099100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgrove-oss", "html_url": "https://github.com/dgrove-oss", "followers_url": "https://api.github.com/users/dgrove-oss/followers", "following_url": "https://api.github.com/users/dgrove-oss/following{/other_user}", "gists_url": "https://api.github.com/users/dgrove-oss/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgrove-oss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgrove-oss/subscriptions", "organizations_url": "https://api.github.com/users/dgrove-oss/orgs", "repos_url": "https://api.github.com/users/dgrove-oss/repos", "events_url": "https://api.github.com/users/dgrove-oss/events{/privacy}", "received_events_url": "https://api.github.com/users/dgrove-oss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1216e03b302ecee57ff9dfd7ba89d6f31c79f666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1216e03b302ecee57ff9dfd7ba89d6f31c79f666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1216e03b302ecee57ff9dfd7ba89d6f31c79f666"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "35403cfab1b717c86f9749a37eff51b2e1008537", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a", "patch": "@@ -1,3 +1,8 @@\n+2003-09-18  David P Grove  <groved@us.ibm.com>\n+\n+\t* java/io/LineNumberReader (read): Don't reset pos & limit when\n+\tmarkPos is 0.\n+\n 2003-09-18  Dalibor Topic  <robilad@kaffe.org>\n \n \t* gnu/java/rmi/rmic/Compile_gcj.java (COMPILER_ARGS): New private"}, {"sha": "9c4796d402fba96361ef7862381f3206041eea3b", "filename": "libjava/java/io/LineNumberReader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a/libjava%2Fjava%2Fio%2FLineNumberReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a/libjava%2Fjava%2Fio%2FLineNumberReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FLineNumberReader.java?ref=f5e2e1adf010fb5a36d6c03ea95d453ea33a6d4a", "patch": "@@ -227,7 +227,7 @@ public int read() throws IOException\n \t  {\n \t    if (markPos >= 0 && limit == buffer.length)\n \t      markPos = -1;\n-\t    if (markPos <= 0)\n+\t    if (markPos < 0)\n \t      pos = limit = 0;\n \t    int count = in.read(buffer, limit, buffer.length - limit);\n \t    if (count <= 0)"}]}