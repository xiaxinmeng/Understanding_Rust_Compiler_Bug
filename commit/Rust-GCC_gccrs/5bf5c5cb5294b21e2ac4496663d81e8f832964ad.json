{"sha": "5bf5c5cb5294b21e2ac4496663d81e8f832964ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmNWM1Y2I1Mjk0YjIxZTJhYzQ0OTY2NjNkODFlOGY4MzI5NjRhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-05-14T17:21:21Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2002-05-14T17:21:21Z"}, "message": "* g++.dg/init/pm1.C: New test.\n\nFrom-SVN: r53462", "tree": {"sha": "cded877a4f0f5bf2715f5ddb50c45eee9da95532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cded877a4f0f5bf2715f5ddb50c45eee9da95532"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bf5c5cb5294b21e2ac4496663d81e8f832964ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf5c5cb5294b21e2ac4496663d81e8f832964ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf5c5cb5294b21e2ac4496663d81e8f832964ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf5c5cb5294b21e2ac4496663d81e8f832964ad/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94e6e4c4f3d7533ab1de7b709e3b3305d3d8e52d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e6e4c4f3d7533ab1de7b709e3b3305d3d8e52d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e6e4c4f3d7533ab1de7b709e3b3305d3d8e52d"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "9602bf0742d06078df16f358c1d46a69994ac2e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf5c5cb5294b21e2ac4496663d81e8f832964ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf5c5cb5294b21e2ac4496663d81e8f832964ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bf5c5cb5294b21e2ac4496663d81e8f832964ad", "patch": "@@ -1,3 +1,7 @@\n+2002-05-14  Jason Merrill  <jason@redhat.com>, Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* g++.dg/init/pm1.C: New test.\n+\n 2002-05-12  David S. Miller  <davem@redhat.com>\n \n \t* gcc.c-torture/execute/conversion.c (ldnear): Use long double"}, {"sha": "c0aed241086bdeeb1c17d0da519baa270780271a", "filename": "gcc/testsuite/g++.dg/init/pm1.C", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf5c5cb5294b21e2ac4496663d81e8f832964ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf5c5cb5294b21e2ac4496663d81e8f832964ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpm1.C?ref=5bf5c5cb5294b21e2ac4496663d81e8f832964ad", "patch": "@@ -0,0 +1,88 @@\n+// { dg-do run }\n+\n+// Copyright 2002  Free Software Foundation\n+// Contributed by Jason Merrill and Alexandre Oliva\n+\n+// Test zero-initialization of pointers to data members.  Their NULL\n+// value is represented with -1, not 0.\n+\n+#include <stdlib.h>\n+\n+struct A\n+{\n+  int i;\n+};\n+\n+int A::* gp;\n+\n+typedef int A::* iApm;\n+\n+iApm gp_zero = 0;\n+iApm gp_dflt = iApm();\n+iApm gp_cast = (iApm)0;\n+iApm gp_func = iApm(0);\n+iApm gp_stat = static_cast<iApm>(0);\n+\n+struct AD : A {};\n+\n+int AD::* gp_impl = gp_dflt;\n+int AD::* gp_down = static_cast<int AD::*>(gp_stat);\n+\n+int A::* ga[2];\n+\n+// Test use in a simple struct.\n+struct B\n+{\n+  int A::* mp;\n+};\n+\n+B gb;\n+\n+struct D;\n+struct C;\n+extern D gd;\n+extern C gc;\n+\n+// Test that in a class with a constructor, the pointer to member is\n+// zero-initialized until the constructor is run.\n+struct C\n+{\n+  int A::* mp;\n+  inline C ();\n+};\n+\n+int fail;\n+struct D\n+{\n+  int count;\n+  inline D ();\n+};\n+\n+C::C() : mp (&A::i) { gd.count++; }\n+\n+D::D() : count (0)\n+{\n+  if (gc.mp != 0)\n+    abort ();\n+}\n+\n+// The D must come first for this to work.\n+D gd;\n+C gc;\n+\n+int main()\n+{\n+  static int A::* slp;\n+  static int A::* sla[2];\n+  static B slb;\n+\n+  if (gp != 0 || slp != 0\n+      || gp_zero != 0 || gp_dflt != 0 || gp_cast != 0\n+      || gp_func != 0 || gp_stat != 0\n+      || gp_impl != 0 || gp_down != 0)\n+    abort ();\n+  if (ga[1] != 0 || sla[1] != 0)\n+    abort ();\n+  if (gb.mp != 0 || slb.mp != 0)\n+    abort ();\n+}"}]}