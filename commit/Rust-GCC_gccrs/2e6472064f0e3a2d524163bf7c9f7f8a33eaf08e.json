{"sha": "2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2NDcyMDY0ZjBlM2EyZDUyNDE2M2JmN2M5ZjdmOGEzM2VhZjA4ZQ==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-04-19T21:29:25Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-04-19T21:29:25Z"}, "message": "new tests, derived from bug-reports from Toon and Tim\n\nFrom-SVN: r26552", "tree": {"sha": "506985485c86f4737323b40b6a12370924700d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/506985485c86f4737323b40b6a12370924700d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/comments", "author": null, "committer": null, "parents": [{"sha": "5b916f262a827a5b81cc489b931b538bf972e918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b916f262a827a5b81cc489b931b538bf972e918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b916f262a827a5b81cc489b931b538bf972e918"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "834cebf342b839c07c6fd432e3037d3217976bf4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "patch": "@@ -1,3 +1,8 @@\n+1999-04-20  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* g77.f-torture/compile/19990419-0.f: New test.\n+\t* g77.f-torture/execute/19990419-1.f: New test.\n+\n Sat Apr 17 16:56:48 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* gcc.dg/uninit-9.c (func): Use __builtin_alloca instead of alloca"}, {"sha": "084e7a254bf338ae933c1201b119a56344cc29c3", "filename": "gcc/testsuite/g77.f-torture/compile/19990419-0.f", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990419-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990419-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990419-0.f?ref=2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "patch": "@@ -0,0 +1,7 @@\n+* Test case Toon submitted, cut down to expose the one bug.\n+* Belongs in compile/.\n+      SUBROUTINE INIERS1\n+      IMPLICIT   LOGICAL(L)\n+      COMMON/COMIOD/ NHIERS1, LERS1\n+      inquire(nhiers1, exist=lers1)\n+      END"}, {"sha": "7449bac2b9547ac5e4b73c5b6282b628f1ce47f9", "filename": "gcc/testsuite/g77.f-torture/execute/19990419-1.f", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990419-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990419-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990419-1.f?ref=2e6472064f0e3a2d524163bf7c9f7f8a33eaf08e", "patch": "@@ -0,0 +1,21 @@\n+* Test DO WHILE, to make sure it fully reevaluates its expression.\n+* Belongs in execute/.\n+      common /x/ ival\n+      j = 0\n+      do while (i() .eq. 1)\n+         j = j + 1\n+         if (j .gt. 5) call abort\n+      end do\n+      if (j .ne. 4) call abort\n+      if (ival .ne. 5) call abort\n+      end\n+      function i()\n+      common /x/ ival\n+      ival = ival + 1\n+      i = 10\n+      if (ival .lt. 5) i = 1\n+      end\n+      block data\n+      common /x/ ival\n+      data ival/0/\n+      end"}]}