{"sha": "f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjMjMzNDJkYTNlNjQwZTBkNGZiMzZjMmU3NGViOWMyZjQxODg5NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-01-21T15:49:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-01-21T15:49:21Z"}, "message": "* lib/target-supports.exp (check_effective_target_alias): New.\n\nFrom-SVN: r195338", "tree": {"sha": "8f3516f91887bee7e89769473c9a7208a6a17d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f3516f91887bee7e89769473c9a7208a6a17d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c23342da3e640e0d4fb36c2e74eb9c2f418894/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8bb7d68e0f03f483133fd63f4ccc1fd95180d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8bb7d68e0f03f483133fd63f4ccc1fd95180d9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8bb7d68e0f03f483133fd63f4ccc1fd95180d9e"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "add76c91cfa396341a67e7dd3924983e0d4bdcf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c23342da3e640e0d4fb36c2e74eb9c2f418894/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c23342da3e640e0d4fb36c2e74eb9c2f418894/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "patch": "@@ -1,3 +1,7 @@\n+2013-01-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_alias): New.\n+\n 2013-01-20  Jack Howarth <howarth@bromo.med.uc.edu>\n \n \tPR debug/53235"}, {"sha": "8b2fa29d7d14ea2a9b046cf38fa5fcdfa19ba935", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c23342da3e640e0d4fb36c2e74eb9c2f418894/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c23342da3e640e0d4fb36c2e74eb9c2f418894/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "patch": "@@ -354,6 +354,16 @@ proc check_alias_available { } {\n     return $alias_available_saved\n }\n \n+# Returns 1 if the target toolchain supports strong aliases, 0 otherwise.\n+\n+proc check_effective_target_alias { } {\n+    if { [check_alias_available] < 2 } {\n+\treturn 0\n+    } else {\n+\treturn 1\n+    }\n+}\n+\n # Returns 1 if the target toolchain supports ifunc, 0 otherwise.\n \n proc check_ifunc_available { } {"}]}