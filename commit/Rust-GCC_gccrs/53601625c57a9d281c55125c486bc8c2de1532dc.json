{"sha": "53601625c57a9d281c55125c486bc8c2de1532dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2MDE2MjVjNTdhOWQyODFjNTUxMjVjNDg2YmM4YzJkZTE1MzJkYw==", "commit": {"author": {"name": "Nathan C. Myers", "email": "ncm@cantrip.org", "date": "2000-05-25T10:04:12Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-05-25T10:04:12Z"}, "message": "i486: New directory.\n\n\n2000-05-19   Nathan \"I don't write ChangeLog Entries\" Myers  <ncm@cantrip.org>\n\n\t* config/cpu/i486: New directory.\n\t* config/cpu/i486/bits: New directory.\n\t* config/cpu/i486/bits/atomicity.h: New file.\n\t* config/cpu/i386/bits/atomicity.h (__compare_and_swap): Delete\n\t'cmpxchgl' asm.\n\t* acinclude.m4 (GLIBCPP_CHECK_CPU): Enable i386.\n\nFrom-SVN: r34160", "tree": {"sha": "da543f454bb3f11f1f161711a3c09d2927072f0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da543f454bb3f11f1f161711a3c09d2927072f0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53601625c57a9d281c55125c486bc8c2de1532dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53601625c57a9d281c55125c486bc8c2de1532dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53601625c57a9d281c55125c486bc8c2de1532dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53601625c57a9d281c55125c486bc8c2de1532dc/comments", "author": {"login": "ncm", "id": 215047, "node_id": "MDQ6VXNlcjIxNTA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/215047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncm", "html_url": "https://github.com/ncm", "followers_url": "https://api.github.com/users/ncm/followers", "following_url": "https://api.github.com/users/ncm/following{/other_user}", "gists_url": "https://api.github.com/users/ncm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncm/subscriptions", "organizations_url": "https://api.github.com/users/ncm/orgs", "repos_url": "https://api.github.com/users/ncm/repos", "events_url": "https://api.github.com/users/ncm/events{/privacy}", "received_events_url": "https://api.github.com/users/ncm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3edd645e627962e26577f4644f6678210312031a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edd645e627962e26577f4644f6678210312031a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3edd645e627962e26577f4644f6678210312031a"}], "stats": {"total": 71, "additions": 58, "deletions": 13}, "files": [{"sha": "6ef55b25e8fd0d9c49f4615670dd4bc6d28dbec3", "filename": "libstdc++-v3/config/cpu/i386/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53601625c57a9d281c55125c486bc8c2de1532dc/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53601625c57a9d281c55125c486bc8c2de1532dc/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fbits%2Fatomicity.h?ref=53601625c57a9d281c55125c486bc8c2de1532dc", "patch": "@@ -42,17 +42,4 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n \t\t\t: : \"ir\" (__val), \"m\" (*__mem) : \"memory\");\n }\n \n-static inline char\n-__attribute__ ((unused))\n-__compare_and_swap (volatile long* __p, long __oldval, long __newval)\n-{\n-  char __ret;\n-  long __readval;\n-\n-  __asm__ __volatile__ (\"lock; cmpxchgl %3, %1; sete %0\"\n-                        : \"=q\" (__ret), \"=m\" (*__p), \"=a\" (__readval)\n-                        : \"r\" (__newval), \"m\" (*__p), \"a\" (__oldval));\n-  return __ret;\n-}\n-\n #endif /* atomicity.h */"}, {"sha": "f7d0381bb4469a2a3dd4378b2f9a63258d209ef6", "filename": "libstdc++-v3/config/cpu/i486/bits/atomicity.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53601625c57a9d281c55125c486bc8c2de1532dc/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53601625c57a9d281c55125c486bc8c2de1532dc/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fbits%2Fatomicity.h?ref=53601625c57a9d281c55125c486bc8c2de1532dc", "patch": "@@ -0,0 +1,58 @@\n+/* Low-level functions for atomic operations.  ix86 version, x >= 4.\n+   Copyright (C) 1997 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Library General Public License as\n+   published by the Free Software Foundation; either version 2 of the\n+   License, or (at your option) any later version.\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Library General Public License for more details.\n+\n+   You should have received a copy of the GNU Library General Public\n+   License along with the GNU C Library; see the file COPYING.LIB.  If not,\n+   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n+\n+#ifndef _BITS_ATOMICITY_H\n+#define _BITS_ATOMICITY_H\t1\n+\n+typedef int _Atomic_word;\n+\n+static inline _Atomic_word \n+__attribute__ ((unused))\n+__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+{\n+  register _Atomic_word __result;\n+  __asm__ __volatile__ (\"lock; xaddl %0,%2\"\n+\t\t\t: \"=r\" (__result) \n+                        : \"0\" (__val), \"m\" (*__mem) \n+                        : \"memory\");\n+  return __result;\n+}\n+\n+static inline void\n+__attribute__ ((unused))\n+__atomic_add (volatile _Atomic_word* __mem, int __val)\n+{\n+  __asm__ __volatile__ (\"lock; addl %0,%1\"\n+\t\t\t: : \"ir\" (__val), \"m\" (*__mem) : \"memory\");\n+}\n+\n+static inline char\n+__attribute__ ((unused))\n+__compare_and_swap (volatile long* __p, long __oldval, long __newval)\n+{\n+  char __ret;\n+  long __readval;\n+\n+  __asm__ __volatile__ (\"lock; cmpxchgl %3, %1; sete %0\"\n+                        : \"=q\" (__ret), \"=m\" (*__p), \"=a\" (__readval)\n+                        : \"r\" (__newval), \"m\" (*__p), \"a\" (__oldval));\n+  return __ret;\n+}\n+\n+#endif /* atomicity.h */"}]}