{"sha": "dac920e8c8c4720237b2c63c50e57e6738d3f688", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFjOTIwZThjOGM0NzIwMjM3YjJjNjNjNTBlNTdlNjczOGQzZjY4OA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2018-05-01T21:41:05Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2018-05-01T21:41:05Z"}, "message": "Generalize a<b&a<c -> a<min(b,c)\n\n2018-05-01  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/85143\ngcc/\n\t* match.pd (A<B&A<C): Extend to BIT_IOR_EXPR.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/minmax-loopend.c: Extend and split...\n\t* gcc.dg/tree-ssa/minmax-loopend-2.c: ... here.\n\nFrom-SVN: r259812", "tree": {"sha": "d561270abf6d2a858e411489e11c747839dd0236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d561270abf6d2a858e411489e11c747839dd0236"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dac920e8c8c4720237b2c63c50e57e6738d3f688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac920e8c8c4720237b2c63c50e57e6738d3f688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dac920e8c8c4720237b2c63c50e57e6738d3f688", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac920e8c8c4720237b2c63c50e57e6738d3f688/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5052a74c45ff7b7d165c51afa1c689e9a7e2e73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5052a74c45ff7b7d165c51afa1c689e9a7e2e73c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5052a74c45ff7b7d165c51afa1c689e9a7e2e73c"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "99b97caff653d23bd9f79499e85879a46567ac3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dac920e8c8c4720237b2c63c50e57e6738d3f688", "patch": "@@ -1,3 +1,8 @@\n+2018-05-01  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/85143\n+\t* match.pd (A<B&A<C): Extend to BIT_IOR_EXPR.\n+\n 2018-05-01  Tom de Vries  <tom@codesourcery.com>\n \n \tPR lto/85451"}, {"sha": "703373090a5ebae80af23f1bb44389936f52ca27", "filename": "gcc/match.pd", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=dac920e8c8c4720237b2c63c50e57e6738d3f688", "patch": "@@ -4514,10 +4514,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \n /* Transform (@0 < @1 and @0 < @2) to use min, \n    (@0 > @1 and @0 > @2) to use max */\n-(for op (lt le gt ge)\n-     ext (min min max max)\n+(for logic (bit_and bit_and bit_and bit_and bit_ior bit_ior bit_ior bit_ior)\n+     op    (lt      le      gt      ge      lt      le      gt      ge     )\n+     ext   (min     min     max     max     max     max     min     min    )\n  (simplify\n-  (bit_and (op:cs @0 @1) (op:cs @0 @2))\n+  (logic (op:cs @0 @1) (op:cs @0 @2))\n   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n        && TREE_CODE (@0) != INTEGER_CST)\n    (op @0 (ext @1 @2)))))"}, {"sha": "465b079a366dd5ebe82efa10530b1c6a71c20579", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dac920e8c8c4720237b2c63c50e57e6738d3f688", "patch": "@@ -1,3 +1,9 @@\n+2018-05-01  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/85143\n+\t* gcc.dg/tree-ssa/minmax-loopend.c: Extend and split...\n+\t* gcc.dg/tree-ssa/minmax-loopend-2.c: ... here.\n+\n 2018-05-01  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/84258"}, {"sha": "a49a3d5b509aeec800d7e72a7a57d48c7adfa5d0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-loopend-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-loopend-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-loopend-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-loopend-2.c?ref=dac920e8c8c4720237b2c63c50e57e6738d3f688", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int and_test(long a, long b, long c) {\n+  int cmp1 = a > b;\n+  int cmp2 = a > c;\n+  return cmp1 & cmp2;\n+}\n+\n+int ior_test (long a, long b, long c) {\n+  int cmp1 = a < b;\n+  int cmp2 = a < c;\n+  return cmp1 | cmp2;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 2 \"optimized\" } } */"}, {"sha": "3a3b280c8042a3a501a28bc08bf4a73f3ecc10ce", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-loopend.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-loopend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac920e8c8c4720237b2c63c50e57e6738d3f688/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-loopend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-loopend.c?ref=dac920e8c8c4720237b2c63c50e57e6738d3f688", "patch": "@@ -1,17 +1,16 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n-int min_test(long a, long b, long c) {\n+int and_test(long a, long b, long c) {\n   int cmp1 = a < b;\n   int cmp2 = a < c;\n   return cmp1 & cmp2;\n }\n \n-int max_test (long a, long b, long c) {\n+int ior_test (long a, long b, long c) {\n   int cmp1 = a > b;\n   int cmp2 = a > c;\n-  return cmp1 & cmp2;\n+  return cmp1 | cmp2;\n }\n \n-/* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"optimized\" } } */\n-/* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 2 \"optimized\" } } */"}]}