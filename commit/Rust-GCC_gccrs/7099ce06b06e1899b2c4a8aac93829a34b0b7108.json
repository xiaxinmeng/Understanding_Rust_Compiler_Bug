{"sha": "7099ce06b06e1899b2c4a8aac93829a34b0b7108", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5OWNlMDZiMDZlMTg5OWIyYzRhOGFhYzkzODI5YTM0YjBiNzEwOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-07-31T22:14:44Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-07-31T22:14:44Z"}, "message": "re PR target/54131 (ICE building 416.gamess, reload_cse_simplify_operands)\n\n\tPR target/54131\n\t* config/rs6000/rs6000.c (mem_operand_gpr): Don't limit range\n\tof lo_sum offsets.  Comment.  Assert mode at least word size\n\trather than bypassing powerpc64 word offset check.\n\nFrom-SVN: r190022", "tree": {"sha": "780cb30ed2133a9b4ca64aed7bd56e5bf9e83e5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/780cb30ed2133a9b4ca64aed7bd56e5bf9e83e5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7099ce06b06e1899b2c4a8aac93829a34b0b7108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7099ce06b06e1899b2c4a8aac93829a34b0b7108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7099ce06b06e1899b2c4a8aac93829a34b0b7108", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7099ce06b06e1899b2c4a8aac93829a34b0b7108/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdc43210e38125c34a8578e1fb8f7b09c396c14c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc43210e38125c34a8578e1fb8f7b09c396c14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc43210e38125c34a8578e1fb8f7b09c396c14c"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "1947fdff5cd25e5bb17aa33c4caa078faaf46fc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7099ce06b06e1899b2c4a8aac93829a34b0b7108/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7099ce06b06e1899b2c4a8aac93829a34b0b7108/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7099ce06b06e1899b2c4a8aac93829a34b0b7108", "patch": "@@ -1,3 +1,10 @@\n+2012-08-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/54131\n+\t* config/rs6000/rs6000.c (mem_operand_gpr): Don't limit range\n+\tof lo_sum offsets.  Comment.  Assert mode at least word size\n+\trather than bypassing powerpc64 word offset check.\n+\n 2012-07-31  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Revise"}, {"sha": "34948fb21c72c4cb5f87764944a7eb4c96d35dd4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7099ce06b06e1899b2c4a8aac93829a34b0b7108/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7099ce06b06e1899b2c4a8aac93829a34b0b7108/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7099ce06b06e1899b2c4a8aac93829a34b0b7108", "patch": "@@ -5070,24 +5070,38 @@ address_offset (rtx op)\n \n    Offsetting a lo_sum should not be allowed, except where we know by\n    alignment that a 32k boundary is not crossed, but see the ???\n-   comment in rs6000_legitimize_reload_address.  */\n+   comment in rs6000_legitimize_reload_address.  Note that by\n+   \"offsetting\" here we mean a further offset to access parts of the\n+   MEM.  It's fine to have a lo_sum where the inner address is offset\n+   from a sym, since the same sym+offset will appear in the high part\n+   of the address calculation.  */\n \n bool\n mem_operand_gpr (rtx op, enum machine_mode mode)\n {\n   unsigned HOST_WIDE_INT offset;\n   int extra;\n+  rtx addr = XEXP (op, 0);\n \n-  op = address_offset (XEXP (op, 0));\n+  op = address_offset (addr);\n   if (op == NULL_RTX)\n     return true;\n \n   offset = INTVAL (op);\n-  extra = GET_MODE_SIZE (mode) - UNITS_PER_WORD;\n-  if (extra < 0)\n-    extra = 0;\n-  else if (TARGET_POWERPC64 && (offset & 3) != 0)\n+  if (TARGET_POWERPC64 && (offset & 3) != 0)\n     return false;\n+\n+  if (GET_CODE (addr) == LO_SUM)\n+    /* We know by alignment that ABI_AIX medium/large model toc refs\n+       will not cross a 32k boundary, since all entries in the\n+       constant pool are naturally aligned and we check alignment for\n+       other medium model toc-relative addresses.  For ABI_V4 and\n+       ABI_DARWIN lo_sum addresses, we just check that 64-bit\n+       offsets are 4-byte aligned.  */\n+    return true;\n+\n+  extra = GET_MODE_SIZE (mode) - UNITS_PER_WORD;\n+  gcc_assert (extra >= 0);\n   return offset + 0x8000 < 0x10000u - extra;\n }\n \f"}]}