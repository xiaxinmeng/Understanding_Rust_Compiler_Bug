{"sha": "af246415aa48006c215cb6c3d84943d5124260eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYyNDY0MTVhYTQ4MDA2YzIxNWNiNmMzZDg0OTQzZDUxMjQyNjBlYg==", "commit": {"author": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2007-11-18T05:23:59Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2007-11-18T05:23:59Z"}, "message": "constants.c (build_constants_constructor): Use POINTER_SIZE insead of BITS_PER_WORD in big-endian work around.\n\n2007-11-16  David Daney  <ddaney@avtrex.com>\n\t    Andrew Haley  <aph@redhat.com>\n\n\t* constants.c (build_constants_constructor):  Use POINTER_SIZE\n\tinsead of BITS_PER_WORD in big-endian work around.\n\nFrom-SVN: r130267", "tree": {"sha": "fe9aed1c0382c9311da362f50eb25e347dd27b7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe9aed1c0382c9311da362f50eb25e347dd27b7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af246415aa48006c215cb6c3d84943d5124260eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af246415aa48006c215cb6c3d84943d5124260eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af246415aa48006c215cb6c3d84943d5124260eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af246415aa48006c215cb6c3d84943d5124260eb/comments", "author": null, "committer": null, "parents": [{"sha": "19c2da45943e3f5d8d6255609f004b743a73a64d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c2da45943e3f5d8d6255609f004b743a73a64d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c2da45943e3f5d8d6255609f004b743a73a64d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "852028afc14d3e56775886109117269e12a21a31", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af246415aa48006c215cb6c3d84943d5124260eb/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af246415aa48006c215cb6c3d84943d5124260eb/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=af246415aa48006c215cb6c3d84943d5124260eb", "patch": "@@ -1,3 +1,9 @@\n+2007-11-17  David Daney  <ddaney@avtrex.com>\n+\t    Andrew Haley  <aph@redhat.com>\n+\n+\t* constants.c (build_constants_constructor):  Use POINTER_SIZE\n+\tinsead of BITS_PER_WORD in big-endian work around.\n+\n 2007-11-07  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/34019:\n@@ -51,7 +57,7 @@\n \n 2007-09-07  Roman Zippel  <zippel@linux-m68k.org>\n \n-\tboehm.c (mark_reference_fields): Move misaligned pointer check\n+\t* boehm.c (mark_reference_fields): Move misaligned pointer check\n \tafter JREFERENCE_TYPE_P test\n \n 2007-09-06  Roman Zippel  <zippel@linux-m68k.org>"}, {"sha": "8a3c532c87033a14b990343e3f81ec1b0970bc11", "filename": "gcc/java/constants.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af246415aa48006c215cb6c3d84943d5124260eb/gcc%2Fjava%2Fconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af246415aa48006c215cb6c3d84943d5124260eb/gcc%2Fjava%2Fconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconstants.c?ref=af246415aa48006c215cb6c3d84943d5124260eb", "patch": "@@ -518,13 +518,13 @@ build_constants_constructor (void)\n \t{\n \t  unsigned HOST_WIDE_INT temp = outgoing_cpool->data[i].w;\n \n-\t  /* Make sure that on a 64-bit big-endian machine this\n-\t     32-bit jint appears in the first word.  \n+\t  /* Make sure that on a big-endian machine with 64-bit\n+\t     pointers this 32-bit jint appears in the first word.\n \t     FIXME: This is a kludge.  The field we're initializing is\n \t     not a scalar but a union, and that's how we should\n \t     represent it in the compiler.  We should fix this.  */\n-\t  if (BYTES_BIG_ENDIAN && BITS_PER_WORD > 32)\n-\t    temp <<= BITS_PER_WORD - 32;\n+\t  if (BYTES_BIG_ENDIAN && POINTER_SIZE > 32)\n+\t    temp <<= POINTER_SIZE - 32;\n \n \t  tags_list\n \t    = tree_cons (NULL_TREE, get_tag_node (outgoing_cpool->tags[i]),"}]}