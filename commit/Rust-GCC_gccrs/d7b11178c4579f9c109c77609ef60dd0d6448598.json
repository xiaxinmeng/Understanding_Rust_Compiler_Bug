{"sha": "d7b11178c4579f9c109c77609ef60dd0d6448598", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiMTExNzhjNDU3OWY5YzEwOWM3NzYwOWVmNjBkZDBkNjQ0ODU5OA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-06-16T14:54:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-06-16T14:54:39Z"}, "message": "Symbol tables are insert only.\n\n\t* cp-tree.h (default_hash_traits <lang_identifier *>): Don't\n\tderive from pointer_hash.  Make undeletable.\n\nFrom-SVN: r249266", "tree": {"sha": "325f67f3de1acf3c96827888275b367428efc805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/325f67f3de1acf3c96827888275b367428efc805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7b11178c4579f9c109c77609ef60dd0d6448598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b11178c4579f9c109c77609ef60dd0d6448598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b11178c4579f9c109c77609ef60dd0d6448598", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b11178c4579f9c109c77609ef60dd0d6448598/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba27a39d379b3ac69bd81944b65a99a0f02f240d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba27a39d379b3ac69bd81944b65a99a0f02f240d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba27a39d379b3ac69bd81944b65a99a0f02f240d"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "7f9ddb03df971d0e6c367eebde856531532f5bcd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b11178c4579f9c109c77609ef60dd0d6448598/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b11178c4579f9c109c77609ef60dd0d6448598/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d7b11178c4579f9c109c77609ef60dd0d6448598", "patch": "@@ -1,5 +1,9 @@\n 2017-06-16  Nathan Sidwell  <nathan@acm.org>\n \n+\tSymbol tables are insert only.\n+\t* cp-tree.h (default_hash_traits <lang_identifier *>): Don't\n+\tderive from pointer_hash.  Make undeletable.\n+\n \t* class.c (resort_type_method_vec): Avoid potential unsigned\n \toverflow.\n "}, {"sha": "6c236aee4c788677c91f11ce1560a2bdbe1f4efa", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b11178c4579f9c109c77609ef60dd0d6448598/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b11178c4579f9c109c77609ef60dd0d6448598/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d7b11178c4579f9c109c77609ef60dd0d6448598", "patch": "@@ -550,18 +550,22 @@ identifier_p (tree t)\n \n template <>\n struct default_hash_traits <lang_identifier *>\n-  : pointer_hash <tree_node>, ggc_remove <tree>\n+  : pointer_hash <tree_node>\n {\n   /* Use a regular tree as the type, to make using the hash table\n      simpler.  We'll get dynamic type checking with the hash function\n      itself.  */\n   GTY((skip)) typedef tree value_type;\n   GTY((skip)) typedef tree compare_type;\n \n-  static hashval_t hash (const value_type &id)\n+  static hashval_t hash (const value_type id)\n   {\n     return IDENTIFIER_HASH_VALUE (id);\n   }\n+\n+  /* Nothing is deletable.  Everything is insertable.  */\n+  static bool is_deleted (value_type) { return false; }\n+  static void remove (value_type) { gcc_unreachable (); }\n };\n \n /* In an IDENTIFIER_NODE, nonzero if this identifier is actually a"}]}