{"sha": "e4598783b440d7623b27dd05994ec131d697ced0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ1OTg3ODNiNDQwZDc2MjNiMjdkZDA1OTk0ZWMxMzFkNjk3Y2VkMA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2005-07-27T21:02:55Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-07-27T21:02:55Z"}, "message": "re PR c++/22003 (-freorder-blocks-and-partition and thunks)\n\n\tPR c++/22003\n\t* varasm.c (assemble_start_function): Don't do anything that may\n\trequire a CFG if the current function is a thunk.\n\nFrom-SVN: r102444", "tree": {"sha": "ebc825fdd7e02c2724f1fcafb2040f14c3830571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebc825fdd7e02c2724f1fcafb2040f14c3830571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4598783b440d7623b27dd05994ec131d697ced0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4598783b440d7623b27dd05994ec131d697ced0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4598783b440d7623b27dd05994ec131d697ced0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4598783b440d7623b27dd05994ec131d697ced0/comments", "author": null, "committer": null, "parents": [{"sha": "e37912437faec1dfed41ccd139cbec09879bac11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e37912437faec1dfed41ccd139cbec09879bac11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e37912437faec1dfed41ccd139cbec09879bac11"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "a7ac9a46295cc47f8ebf1bdfe47625cc5d35aea7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4598783b440d7623b27dd05994ec131d697ced0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4598783b440d7623b27dd05994ec131d697ced0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4598783b440d7623b27dd05994ec131d697ced0", "patch": "@@ -1,3 +1,9 @@\n+2005-07-27  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR c++/22003\n+\t* varasm.c (assemble_start_function): Don't do anything that may\n+\trequire a CFG if the current function is a thunk.\n+\n 2005-07-25  Geoffrey Keating  <geoffk@apple.com>\n \n \t* doc/install.texi (Prerequisites): Mention that perl is needed"}, {"sha": "88068b5205c21ab2839042aa04566da1ecce7551", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4598783b440d7623b27dd05994ec131d697ced0/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4598783b440d7623b27dd05994ec131d697ced0/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e4598783b440d7623b27dd05994ec131d697ced0", "patch": "@@ -1274,11 +1274,13 @@ assemble_start_function (tree decl, const char *fnname)\n       unlikely_text_section ();\n       assemble_align (FUNCTION_BOUNDARY);\n       ASM_OUTPUT_LABEL (asm_out_file, cfun->cold_section_label);\n-      if (BB_PARTITION (ENTRY_BLOCK_PTR->next_bb) == BB_COLD_PARTITION)\n+\n+      /* When the function starts with a cold section, we need to explicitly\n+\t align the hot section and write out the hot section label.\n+\t But if the current function is a thunk, we do not have a CFG.  */\n+      if (!current_function_is_thunk\n+\t  && BB_PARTITION (ENTRY_BLOCK_PTR->next_bb) == BB_COLD_PARTITION)\n \t{\n-\t  /* Since the function starts with a cold section, we need to\n-\t     explicitly align the hot section and write out the hot\n-\t     section label.  */\n \t  text_section ();\n \t  assemble_align (FUNCTION_BOUNDARY);\n \t  ASM_OUTPUT_LABEL (asm_out_file, cfun->hot_section_label);\n@@ -1361,7 +1363,10 @@ assemble_start_function (tree decl, const char *fnname)\n   ASM_OUTPUT_LABEL (asm_out_file, fnname);\n #endif /* ASM_DECLARE_FUNCTION_NAME */\n \n-  insert_section_boundary_note ();\n+  /* Add NOTE_INSN_SWITCH_TEXT_SECTIONS notes.  Don't do this if the current\n+     function is a thunk, because we don't have a CFG in that case.  */\n+  if (!current_function_is_thunk)\n+    insert_section_boundary_note ();\n }\n \n /* Output assembler code associated with defining the size of the"}]}