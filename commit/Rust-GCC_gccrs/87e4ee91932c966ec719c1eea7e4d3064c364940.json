{"sha": "87e4ee91932c966ec719c1eea7e4d3064c364940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlNGVlOTE5MzJjOTY2ZWM3MTljMWVlYTdlNGQzMDY0YzM2NDk0MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-02-11T04:26:58Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-02-11T04:26:58Z"}, "message": "* config/h8300/h8300.c (print_operand): Remove redundant code.\n\nFrom-SVN: r49666", "tree": {"sha": "b0e5b98a7584e1f39446947bdb221a410aaa2ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0e5b98a7584e1f39446947bdb221a410aaa2ccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87e4ee91932c966ec719c1eea7e4d3064c364940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e4ee91932c966ec719c1eea7e4d3064c364940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e4ee91932c966ec719c1eea7e4d3064c364940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e4ee91932c966ec719c1eea7e4d3064c364940/comments", "author": null, "committer": null, "parents": [{"sha": "9c188705dc9762a8c091f60a03a76bed014f99e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c188705dc9762a8c091f60a03a76bed014f99e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c188705dc9762a8c091f60a03a76bed014f99e0"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "c70f1dfbc9f27040ac4a8359ac185ec95e5dc44d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e4ee91932c966ec719c1eea7e4d3064c364940/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e4ee91932c966ec719c1eea7e4d3064c364940/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87e4ee91932c966ec719c1eea7e4d3064c364940", "patch": "@@ -1,3 +1,7 @@\n+2002-02-10  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (print_operand): Remove redundant code.\n+\n 2002-02-10  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300-protos.h: Remove the prototype for byte_reg."}, {"sha": "6a47d0a5a0592bedb94c6cec270f69c17e2f6dc9", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e4ee91932c966ec719c1eea7e4d3064c364940/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e4ee91932c966ec719c1eea7e4d3064c364940/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=87e4ee91932c966ec719c1eea7e4d3064c364940", "patch": "@@ -1213,22 +1213,26 @@ print_operand (file, x, code)\n \t  break;\n \n \tcase MEM:\n-\t  fprintf (file, \"@\");\n-\t  output_address (XEXP (x, 0));\n-\n-\t  /* If this is an 'R' operand (reference into the 8-bit\n-\t     area), then specify a symbolic address as \"foo:8\",\n-\t     otherwise if operand is still in eight bit section, use\n-\t     \"foo:16\".  */\n-\t  if (GET_CODE (XEXP (x, 0)) == SYMBOL_REF\n-\t      && SYMBOL_REF_FLAG (XEXP (x, 0)))\n-\t    fprintf (file, (code == 'R' ? \":8\" : \":16\"));\n-\t  else if (GET_CODE (XEXP (x, 0)) == SYMBOL_REF\n-\t\t   && TINY_DATA_NAME_P (XSTR (XEXP (x, 0), 0)))\n-\t    fprintf (file, \":16\");\n-\t  else if ((code == 'R')\n-\t\t   && EIGHTBIT_CONSTANT_ADDRESS_P (XEXP (x, 0)))\n-\t    fprintf (file, \":8\");\n+\t  {\n+\t    rtx addr = XEXP (x, 0);\n+\n+\t    fprintf (file, \"@\");\n+\t    output_address (addr);\n+\n+\t    /* If this is an 'R' operand (reference into the 8-bit\n+\t       area), then specify a symbolic address as \"foo:8\",\n+\t       otherwise if operand is still in eight bit section, use\n+\t       \"foo:16\".  */\n+\t    if (GET_CODE (addr) == SYMBOL_REF\n+\t\t&& SYMBOL_REF_FLAG (addr))\n+\t      fprintf (file, (code == 'R' ? \":8\" : \":16\"));\n+\t    else if (GET_CODE (addr) == SYMBOL_REF\n+\t\t     && TINY_DATA_NAME_P (XSTR (addr, 0)))\n+\t      fprintf (file, \":16\");\n+\t    else if ((code == 'R')\n+\t\t     && EIGHTBIT_CONSTANT_ADDRESS_P (addr))\n+\t      fprintf (file, \":8\");\n+\t  }\n \t  break;\n \n \tcase CONST_INT:"}]}