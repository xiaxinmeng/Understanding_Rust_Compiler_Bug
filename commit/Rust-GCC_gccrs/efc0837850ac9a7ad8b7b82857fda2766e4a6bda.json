{"sha": "efc0837850ac9a7ad8b7b82857fda2766e4a6bda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjMDgzNzg1MGFjOWE3YWQ4YjdiODI4NTdmZGEyNzY2ZTRhNmJkYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-19T22:45:01Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-19T22:45:01Z"}, "message": "update movdf and movsf splits for 64-bits\n\nFrom-SVN: r11310", "tree": {"sha": "d9c7f3d2ffbd6b6419730aa6a30a18eeafccacf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9c7f3d2ffbd6b6419730aa6a30a18eeafccacf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc0837850ac9a7ad8b7b82857fda2766e4a6bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc0837850ac9a7ad8b7b82857fda2766e4a6bda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc0837850ac9a7ad8b7b82857fda2766e4a6bda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc0837850ac9a7ad8b7b82857fda2766e4a6bda/comments", "author": null, "committer": null, "parents": [{"sha": "042259f23ad6239cd33fc4989f4d0d1dc9d45e76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042259f23ad6239cd33fc4989f4d0d1dc9d45e76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042259f23ad6239cd33fc4989f4d0d1dc9d45e76"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "76891ae6f45894120e78c7a9322d5e776eb8cba5", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc0837850ac9a7ad8b7b82857fda2766e4a6bda/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc0837850ac9a7ad8b7b82857fda2766e4a6bda/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=efc0837850ac9a7ad8b7b82857fda2766e4a6bda", "patch": "@@ -5102,10 +5102,8 @@\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n \t(match_operand:SF 1 \"easy_fp_constant\" \"\"))]\n   \"reload_completed && REGNO (operands[0]) <= 31\"\n-  [(set (match_dup 2) (match_dup 3))]\n-  \"\n-{ operands[2] = operand_subword (operands[0], 0, 0, SFmode);\n-  operands[3] = operand_subword (operands[1], 0, 0, SFmode); }\")\n+  [(set (subreg:SI (match_dup 0) 0) (subreg:SI (match_dup 1) 0))]\n+  \"\"\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"fp_reg_or_mem_operand\" \"=f,f,m\")\n@@ -5172,7 +5170,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(match_operand:DF 1 \"easy_fp_constant\" \"\"))]\n-  \"reload_completed && REGNO (operands[0]) <= 31\"\n+  \"TARGET_32BIT && reload_completed && REGNO (operands[0]) <= 31\"\n   [(set (match_dup 2) (match_dup 3))\n    (set (match_dup 4) (match_dup 5))]\n   \"\n@@ -5181,6 +5179,13 @@\n   operands[4] = operand_subword (operands[0], 1, 0, DFmode);\n   operands[5] = operand_subword (operands[1], 1, 0, DFmode); }\")\n \n+(define_split\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n+        (match_operand:DF 1 \"easy_fp_constant\" \"\"))]\n+  \"TARGET_64BIT && reload_completed && REGNO (operands[0]) <= 31\"\n+  [(set (subreg:DI (match_dup 0) 0) (subreg:DI (match_dup 1) 0))]\n+  \"\")\n+\n ;; Don't have reload use general registers to load a constant.  First,\n ;; it might not work if the output operand has is the equivalent of\n ;; a non-offsettable memref, but also it is less efficient than loading"}]}