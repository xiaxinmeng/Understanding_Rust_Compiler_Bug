{"sha": "cfe2053d0edc7424353ef98c11c571b0475cf902", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlMjA1M2QwZWRjNzQyNDM1M2VmOThjMTFjNTcxYjA0NzVjZjkwMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-07-28T08:25:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-07-28T08:25:34Z"}, "message": "re PR ipa/61921 (ICE: SIGSEGV in varpool_node::get_constructor(), at varpool.c:275 with -O2 -fipa-pta)\n\n2014-07-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/61921\n\t* tree-ssa-structalias.c (create_variable_info_for_1): Check\n\tif there is a varpool node before dereferencing it.\n\n\t* gfortran.dg/pr61921.f90: New testcase.\n\nFrom-SVN: r213114", "tree": {"sha": "0771311416d969e037a6cfb97f85e10f3fe6cd6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0771311416d969e037a6cfb97f85e10f3fe6cd6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfe2053d0edc7424353ef98c11c571b0475cf902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe2053d0edc7424353ef98c11c571b0475cf902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe2053d0edc7424353ef98c11c571b0475cf902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe2053d0edc7424353ef98c11c571b0475cf902/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9a7442316d8a025c6adf1d14a8b491f3b044337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9a7442316d8a025c6adf1d14a8b491f3b044337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9a7442316d8a025c6adf1d14a8b491f3b044337"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "740971a5eeec3d890929ad1184806fad1a1643ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfe2053d0edc7424353ef98c11c571b0475cf902", "patch": "@@ -1,3 +1,9 @@\n+2014-07-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61921\n+\t* tree-ssa-structalias.c (create_variable_info_for_1): Check\n+\tif there is a varpool node before dereferencing it.\n+\n 2014-07-28  Roman Gareev  <gareevroman@gmail.com>\n \n \t* graphite-sese-to-poly.c:"}, {"sha": "68499d9eed0f14302b6ce72d2e48899686f4a7e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfe2053d0edc7424353ef98c11c571b0475cf902", "patch": "@@ -1,3 +1,8 @@\n+2014-07-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61921\n+\t* gfortran.dg/pr61921.f90: New testcase.\n+\n 2014-07-28  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/61801"}, {"sha": "52b61762a0116fd74959dba91824bf618f406076", "filename": "gcc/testsuite/gfortran.dg/pr61921.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61921.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61921.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61921.f90?ref=cfe2053d0edc7424353ef98c11c571b0475cf902", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fipa-pta\" }\n+MODULE min_heap\n+  TYPE heap_t\n+  END TYPE heap_t\n+CONTAINS\n+  ELEMENTAL FUNCTION get_left_child(n) RESULT (child)\n+    INTEGER, INTENT(IN)                      :: n\n+  END FUNCTION get_left_child\n+  ELEMENTAL FUNCTION get_value(heap, n) RESULT (value)\n+    TYPE(heap_t), INTENT(IN)                 :: heap\n+    INTEGER, INTENT(IN)                      :: n\n+  END FUNCTION get_value\n+END MODULE min_heap\n+"}, {"sha": "0aa0c4bfd5bef97317abe8b1d0f3e050232e9f15", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe2053d0edc7424353ef98c11c571b0475cf902/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=cfe2053d0edc7424353ef98c11c571b0475cf902", "patch": "@@ -5650,6 +5650,7 @@ create_variable_info_for_1 (tree decl, const char *name)\n   auto_vec<fieldoff_s> fieldstack;\n   fieldoff_s *fo;\n   unsigned int i;\n+  varpool_node *vnode;\n \n   if (!declsize\n       || !tree_fits_uhwi_p (declsize))\n@@ -5671,7 +5672,8 @@ create_variable_info_for_1 (tree decl, const char *name)\n \t in IPA mode.  Else we'd have to parse arbitrary initializers.  */\n       && !(in_ipa_mode\n \t   && is_global_var (decl)\n-\t   && varpool_node::get (decl)->get_constructor ()))\n+\t   && (vnode = varpool_node::get (decl))\n+\t   && vnode->get_constructor ()))\n     {\n       fieldoff_s *fo = NULL;\n       bool notokay = false;"}]}