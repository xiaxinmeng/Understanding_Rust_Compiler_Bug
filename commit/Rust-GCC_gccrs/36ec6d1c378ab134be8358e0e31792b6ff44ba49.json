{"sha": "36ec6d1c378ab134be8358e0e31792b6ff44ba49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZlYzZkMWMzNzhhYjEzNGJlODM1OGUwZTMxNzkyYjZmZjQ0YmE0OQ==", "commit": {"author": {"name": "Sriraman Tallam", "email": "tmsriram@google.com", "date": "2012-08-24T19:07:28Z"}, "committer": {"name": "Sriraman Tallam", "email": "tmsriram@gcc.gnu.org", "date": "2012-08-24T19:07:28Z"}, "message": "Sync plugin-api.h with gold patch : http://sourceware.org/ml/binutils/2012-08/msg00447.html\n\n\n\t* plugin-api.h (ld_plugin_allow_unique_segment_for_sections):\n\tNew interface.\n\t(ld_plugin_unique_segment_for_sections): New interface.\n\t(LDPT_ALLOW_UNIQUE_SEGMENT_FOR_SECTIONS): New enum val.\n\t(LDPT_UNIQUE_SEGMENT_FOR_SECTIONS): New enum val.\n\t(tv_allow_unique_segment_for_sections): New member.\n\t(tv_unique_segment_for_sections): New member.\n\nFrom-SVN: r190654", "tree": {"sha": "8598c3bb24fb928c62c9c3f23058dfa47728fd24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8598c3bb24fb928c62c9c3f23058dfa47728fd24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36ec6d1c378ab134be8358e0e31792b6ff44ba49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ec6d1c378ab134be8358e0e31792b6ff44ba49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36ec6d1c378ab134be8358e0e31792b6ff44ba49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ec6d1c378ab134be8358e0e31792b6ff44ba49/comments", "author": {"login": "tmsri", "id": 38991943, "node_id": "MDQ6VXNlcjM4OTkxOTQz", "avatar_url": "https://avatars.githubusercontent.com/u/38991943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmsri", "html_url": "https://github.com/tmsri", "followers_url": "https://api.github.com/users/tmsri/followers", "following_url": "https://api.github.com/users/tmsri/following{/other_user}", "gists_url": "https://api.github.com/users/tmsri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmsri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmsri/subscriptions", "organizations_url": "https://api.github.com/users/tmsri/orgs", "repos_url": "https://api.github.com/users/tmsri/repos", "events_url": "https://api.github.com/users/tmsri/events{/privacy}", "received_events_url": "https://api.github.com/users/tmsri/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92849267248d0be496bfa682e72d93776e6a3d7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92849267248d0be496bfa682e72d93776e6a3d7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92849267248d0be496bfa682e72d93776e6a3d7c"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "1de3dca84023030909c3a9900ef4fddce0aa7d4b", "filename": "include/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ec6d1c378ab134be8358e0e31792b6ff44ba49/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ec6d1c378ab134be8358e0e31792b6ff44ba49/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=36ec6d1c378ab134be8358e0e31792b6ff44ba49", "patch": "@@ -1,3 +1,13 @@\n+2012-08-24  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* plugin-api.h (ld_plugin_allow_unique_segment_for_sections):\n+\tNew interface.\n+\t(ld_plugin_unique_segment_for_sections): New interface.\n+\t(LDPT_ALLOW_UNIQUE_SEGMENT_FOR_SECTIONS): New enum val.\n+\t(LDPT_UNIQUE_SEGMENT_FOR_SECTIONS): New enum val.\n+\t(tv_allow_unique_segment_for_sections): New member.\n+\t(tv_unique_segment_for_sections): New member.\n+\n 2012-07-13  Doug Evans  <dje@google.com>\n \n \t* filenames.h: #include \"hashtab.h\"."}, {"sha": "af60419a96af0707a8ebb324b45597e52a2e0016", "filename": "include/plugin-api.h", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ec6d1c378ab134be8358e0e31792b6ff44ba49/include%2Fplugin-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ec6d1c378ab134be8358e0e31792b6ff44ba49/include%2Fplugin-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fplugin-api.h?ref=36ec6d1c378ab134be8358e0e31792b6ff44ba49", "patch": "@@ -318,6 +318,33 @@ typedef\n enum ld_plugin_status\n (*ld_plugin_allow_section_ordering) (void);\n \n+/* The linker's interface for specifying that a subset of sections is\n+   to be mapped to a unique segment.  If the plugin wants to call\n+   unique_segment_for_sections, it must call this function from a\n+   claim_file_handler or when it is first loaded.  */\n+\n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_allow_unique_segment_for_sections) (void);\n+\n+/* The linker's interface for specifying that a specific set of sections\n+   must be mapped to a unique segment.  ELF segments do not have names\n+   and the NAME is used as the name of the newly created output section\n+   that is then placed in the unique PT_LOAD segment.  FLAGS is used to\n+   specify if any additional segment flags need to be set.  For instance,\n+   a specific segment flag can be set to identify this segment.  Unsetting\n+   segment flags that would be set by default is not possible.  The\n+   parameter SEGMENT_ALIGNMENT when non-zero will override the default.  */\n+\n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_unique_segment_for_sections) (\n+    const char* segment_name,\n+    uint64_t segment_flags,\n+    uint64_t segment_alignment,\n+    const struct ld_plugin_section * section_list,\n+    unsigned int num_sections);\n+\n enum ld_plugin_level\n {\n   LDPL_INFO,\n@@ -355,7 +382,9 @@ enum ld_plugin_tag\n   LDPT_GET_INPUT_SECTION_CONTENTS,\n   LDPT_UPDATE_SECTION_ORDER,\n   LDPT_ALLOW_SECTION_ORDERING,\n-  LDPT_GET_SYMBOLS_V2\n+  LDPT_GET_SYMBOLS_V2,\n+  LDPT_ALLOW_UNIQUE_SEGMENT_FOR_SECTIONS,\n+  LDPT_UNIQUE_SEGMENT_FOR_SECTIONS\n };\n \n /* The plugin transfer vector.  */\n@@ -385,6 +414,8 @@ struct ld_plugin_tv\n     ld_plugin_get_input_section_contents tv_get_input_section_contents;\n     ld_plugin_update_section_order tv_update_section_order;\n     ld_plugin_allow_section_ordering tv_allow_section_ordering;\n+    ld_plugin_allow_unique_segment_for_sections tv_allow_unique_segment_for_sections; \n+    ld_plugin_unique_segment_for_sections tv_unique_segment_for_sections;\n   } tv_u;\n };\n "}]}