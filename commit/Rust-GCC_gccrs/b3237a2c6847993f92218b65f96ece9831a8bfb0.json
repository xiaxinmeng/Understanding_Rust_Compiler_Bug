{"sha": "b3237a2c6847993f92218b65f96ece9831a8bfb0", "node_id": "C_kwDOANBUbNoAKGIzMjM3YTJjNjg0Nzk5M2Y5MjIxOGI2NWY5NmVjZTk4MzFhOGJmYjA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-02T10:08:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-02T10:08:45Z"}, "message": "i386: Save/restore recog_data in ix86_vector_duplicate_value [PR106577]\n\nOn Tue, Aug 16, 2022 at 09:14:06AM +0100, Richard Sandiford via Gcc-patches wrote:\n> IMO the correct low-effort fix is to save and restore recog_data\n> in ix86_vector_duplicate_value.  It's a relatively big copy,\n> but the current code is pretty wasteful anyway (allocating at\n> least a new SET and INSN for every query).  Compared to the\n> overhead of doing that, a copy to and from the stack shouldn't\n> be too bad.\n\nThe following patch does that.\nIt isn't the first spot in the compiler that does that, not even the first\nspot in the i386 backend.\nIn i386-expand.cc beyond these 2 recog_memoized calls there is one in\nexpand_vselect, but I think it is unlikely we'd run into these issues trying\nto expand new permutations from splitters.\n\n2022-12-02  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/106577\n\t* config/i386/i386-expand.cc (ix86_vector_duplicate_value): Save/restore\n\trecog_data around recog_memoized calls.\n\n\t* gcc.target/i386/pr106577.c: New test.", "tree": {"sha": "6b3c507594612a44e0d1d7cbc1142393194c5ece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b3c507594612a44e0d1d7cbc1142393194c5ece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3237a2c6847993f92218b65f96ece9831a8bfb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3237a2c6847993f92218b65f96ece9831a8bfb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3237a2c6847993f92218b65f96ece9831a8bfb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3237a2c6847993f92218b65f96ece9831a8bfb0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f13305518558f20ef2d460a74eb29dad5fce1350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13305518558f20ef2d460a74eb29dad5fce1350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f13305518558f20ef2d460a74eb29dad5fce1350"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "04aadda6b07b30dfdc8c7254148d66039e51586d", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3237a2c6847993f92218b65f96ece9831a8bfb0/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3237a2c6847993f92218b65f96ece9831a8bfb0/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=b3237a2c6847993f92218b65f96ece9831a8bfb0", "patch": "@@ -15187,6 +15187,10 @@ ix86_vector_duplicate_value (machine_mode mode, rtx target, rtx val)\n   bool ok;\n   rtx_insn *insn;\n   rtx dup;\n+  /* Save/restore recog_data in case this is called from splitters\n+     or other routines where recog_data needs to stay valid across\n+     force_reg.  See PR106577.  */\n+  recog_data_d recog_data_save = recog_data;\n \n   /* First attempt to recognize VAL as-is.  */\n   dup = gen_vec_duplicate (mode, val);\n@@ -15212,6 +15216,7 @@ ix86_vector_duplicate_value (machine_mode mode, rtx target, rtx val)\n       ok = recog_memoized (insn) >= 0;\n       gcc_assert (ok);\n     }\n+  recog_data = recog_data_save;\n   return true;\n }\n "}, {"sha": "1182d4f12df9ccec4860eebed36e49b2e26337b4", "filename": "gcc/testsuite/gcc.target/i386/pr106577.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3237a2c6847993f92218b65f96ece9831a8bfb0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106577.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3237a2c6847993f92218b65f96ece9831a8bfb0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106577.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106577.c?ref=b3237a2c6847993f92218b65f96ece9831a8bfb0", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/106577 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+int i;\n+void\n+foo (void)\n+{\n+  i ^= !(((unsigned __int128)0xf0f0f0f0f0f0f0f0 << 64 | 0xf0f0f0f0f0f0f0f0) & i);\n+}"}]}