{"sha": "47b8392308f4122cb327d351e0f2f34e1b4960bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiODM5MjMwOGY0MTIyY2IzMjdkMzUxZTBmMmYzNGUxYjQ5NjBiYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-06-03T05:20:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-06-03T05:20:16Z"}, "message": "re PR tree-optimization/71328 (ice in verify_jump_thread)\n\n\tPR tree-optimization/71328\n\t* tree-ssa-threadupdate.c (duplicate_thread_path): Fix off-by-one\n\terror when checking for a jump back onto the copied path.  */\n\n\tPR tree-optimization/71328\n\t* gcc.c-torture/compile/pr71328.c: New test.\n\nFrom-SVN: r237052", "tree": {"sha": "552b67807d742a98724357b02a30d29d4fd9703d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552b67807d742a98724357b02a30d29d4fd9703d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b8392308f4122cb327d351e0f2f34e1b4960bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b8392308f4122cb327d351e0f2f34e1b4960bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b8392308f4122cb327d351e0f2f34e1b4960bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b8392308f4122cb327d351e0f2f34e1b4960bc/comments", "author": null, "committer": null, "parents": [{"sha": "e96e5f4611803e2c67410f0ad99a9b1261704720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e96e5f4611803e2c67410f0ad99a9b1261704720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e96e5f4611803e2c67410f0ad99a9b1261704720"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "2c6f6b12cc5d93a8da64bd4fb037bcfede322480", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47b8392308f4122cb327d351e0f2f34e1b4960bc", "patch": "@@ -1,3 +1,9 @@\n+2016-06-02  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/71328\n+\t* tree-ssa-threadupdate.c (duplicate_thread_path): Fix off-by-one\n+\terror when checking for a jump back onto the copied path.  */\n+\n 2016-06-02  David Malcolm  <dmalcolm@redhat.com>\n \n \t* config/microblaze/microblaze.c (get_branch_target): Add return"}, {"sha": "263d91b585ba0a309ff452c7c65184ee4669d4e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47b8392308f4122cb327d351e0f2f34e1b4960bc", "patch": "@@ -1,3 +1,8 @@\n+2016-06-02  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/71328\n+\t* gcc.c-torture/compile/pr71328.c: New test.\n+\n 2016-06-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/52393"}, {"sha": "aa384e829659fce8ec0f2eecdb7cf25c96ab8851", "filename": "gcc/testsuite/gcc.c-torture/compile/pr71328.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71328.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71328.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71328.c?ref=47b8392308f4122cb327d351e0f2f34e1b4960bc", "patch": "@@ -0,0 +1,16 @@\n+\n+\n+int a, b, c;\n+void fn1() {\n+  unsigned char d = 3;\n+  if (d > 11)\n+  lbl_596:\n+  c = 0;\n+  while (!d)\n+    b = b;\n+  unsigned char e = e || d;\n+  d = e;\n+  if (a)\n+    d = d || a;\n+  goto lbl_596;\n+}"}, {"sha": "1ff007a495a1c3c9e504ac11b12bcc81013089a6", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b8392308f4122cb327d351e0f2f34e1b4960bc/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=47b8392308f4122cb327d351e0f2f34e1b4960bc", "patch": "@@ -2298,11 +2298,11 @@ duplicate_thread_path (edge entry, edge exit,\n \t}\n \n       /* Special case the last block on the path: make sure that it does not\n-\t jump back on the copied path.  */\n+\t jump back on the copied path, including back to itself.  */\n       if (i + 1 == n_region)\n \t{\n \t  FOR_EACH_EDGE (e, ei, bb->succs)\n-\t    if (bb_in_bbs (e->dest, region_copy, n_region - 1))\n+\t    if (bb_in_bbs (e->dest, region_copy, n_region))\n \t      {\n \t\tbasic_block orig = get_bb_original (e->dest);\n \t\tif (orig)"}]}