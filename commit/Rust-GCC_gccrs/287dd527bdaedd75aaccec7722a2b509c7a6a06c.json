{"sha": "287dd527bdaedd75aaccec7722a2b509c7a6a06c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3ZGQ1MjdiZGFlZGQ3NWFhY2NlYzc3MjJhMmI1MDljN2E2YTA2Yw==", "commit": {"author": {"name": "Andreas Tobler", "email": "toa@pop.agri.ch", "date": "2002-02-21T19:14:28Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-02-21T19:14:28Z"}, "message": "ffi_darwin.c (ffi_prep_args): Skip appropriate number of GPRs for floating-point arguments.\n\n2002-02-21  Andreas Tobler  <toa@pop.agri.ch>\n\n        * src/powerpc/ffi_darwin.c (ffi_prep_args): Skip appropriate\n        number of GPRs for floating-point arguments.\n\nFrom-SVN: r49934", "tree": {"sha": "3f27bf1a39a610820cbf8a4e771fe08062ffeb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f27bf1a39a610820cbf8a4e771fe08062ffeb44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/287dd527bdaedd75aaccec7722a2b509c7a6a06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287dd527bdaedd75aaccec7722a2b509c7a6a06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/287dd527bdaedd75aaccec7722a2b509c7a6a06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287dd527bdaedd75aaccec7722a2b509c7a6a06c/comments", "author": null, "committer": null, "parents": [{"sha": "7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "f98ef9f9924e8178a9feb70aafc6006f8fbc5898", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287dd527bdaedd75aaccec7722a2b509c7a6a06c/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287dd527bdaedd75aaccec7722a2b509c7a6a06c/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=287dd527bdaedd75aaccec7722a2b509c7a6a06c", "patch": "@@ -1,3 +1,8 @@\n+2002-02-21  Andreas Tobler  <toa@pop.agri.ch>\n+\n+\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Skip appropriate\n+\tnumber of GPRs for floating-point arguments.\n+\n 2002-01-31  Anthony Green  <green@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "3cf504cf150ff7903660a9dbcce49e78adc2513e", "filename": "libffi/src/powerpc/ffi_darwin.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287dd527bdaedd75aaccec7722a2b509c7a6a06c/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287dd527bdaedd75aaccec7722a2b509c7a6a06c/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c?ref=287dd527bdaedd75aaccec7722a2b509c7a6a06c", "patch": "@@ -6,7 +6,7 @@\n    Darwin ABI support (c) 2001 John Hornkvist\n    AIX ABI support (c) 2002 Free Software Foundation, Inc.\n \n-   $Id: ffi_darwin.c,v 1.1 2002/01/16 05:32:15 bryce Exp $\n+   $Id: ffi_darwin.c,v 1.2 2002/01/17 16:04:21 dje Exp $\n \n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n@@ -121,13 +121,21 @@ void ffi_prep_args(extended_cif *ecif, unsigned *const stack)\n     {\n       switch ((*ptr)->type)\n \t{\n+\t/* If a floating-point parameter appears before all of the general-\n+\t   purpose registers are filled, the corresponding GPRs that match\n+\t   the size of the floating-point parameter are skipped.  */\n \tcase FFI_TYPE_FLOAT:\n-\tcase FFI_TYPE_DOUBLE:\n- \t  if ((*ptr)->type == FFI_TYPE_FLOAT)\n-\t    double_tmp = *(float *)*p_argv;\n+\t  double_tmp = *(float *)*p_argv;\n+\t  if (fparg_count >= NUM_FPR_ARG_REGISTERS)\n+            *(double *)next_arg = double_tmp;\n \t  else\n-\t    double_tmp = *(double *)*p_argv;\n-\n+            *fpr_base++ = double_tmp;\n+          next_arg++;\n+\t  fparg_count++;\n+\t  FFI_ASSERT(flags & FLAG_FP_ARGUMENTS);\n+\t  break;\n+\tcase FFI_TYPE_DOUBLE:\n+\t  double_tmp = *(double *)*p_argv;\n \t  if (fparg_count >= NUM_FPR_ARG_REGISTERS)\n             *(double *)next_arg = double_tmp;\n \t  else"}]}