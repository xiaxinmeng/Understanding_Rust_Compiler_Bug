{"sha": "7d7d00bac5926ef5a554d247de8a860a4464a6a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q3ZDAwYmFjNTkyNmVmNWE1NTRkMjQ3ZGU4YTg2MGE0NDY0YTZhMA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2014-09-21T23:38:05Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2014-09-21T23:38:05Z"}, "message": "configure.ac (target_header_dir): Move block defining this to before the block setting inhibit_libc.\n\n\t* configure.ac (target_header_dir): Move block defining\n\tthis to before the block setting inhibit_libc.\n\t(inhibit_libc): When considering $with_headers, just\n\tcheck it it's explicitly \"no\".  If not, also check if\n\t$target_header_dir/stdio.h is present.  If not, set\n\tinhibit_libc=true.\n\t* configure: Regenerate.\n\nFrom-SVN: r215439", "tree": {"sha": "4312137aba14e94b6c0c546312f6815c979a5bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4312137aba14e94b6c0c546312f6815c979a5bc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d7d00bac5926ef5a554d247de8a860a4464a6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7d00bac5926ef5a554d247de8a860a4464a6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d7d00bac5926ef5a554d247de8a860a4464a6a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7d00bac5926ef5a554d247de8a860a4464a6a0/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1561b096c3ee31c9e282e51a9db638846d85187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1561b096c3ee31c9e282e51a9db638846d85187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1561b096c3ee31c9e282e51a9db638846d85187"}], "stats": {"total": 110, "additions": 74, "deletions": 36}, "files": [{"sha": "649b7e440884116ea56f17d77217aa72fec4bb20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7d00bac5926ef5a554d247de8a860a4464a6a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7d00bac5926ef5a554d247de8a860a4464a6a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d7d00bac5926ef5a554d247de8a860a4464a6a0", "patch": "@@ -1,3 +1,13 @@\n+2014-09-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* configure.ac (target_header_dir): Move block defining\n+\tthis to before the block setting inhibit_libc.\n+\t(inhibit_libc): When considering $with_headers, just\n+\tcheck it it's explicitly \"no\".  If not, also check if\n+\t$target_header_dir/stdio.h is present.  If not, set\n+\tinhibit_libc=true.\n+\t* configure: Regenerate.\n+\n 2014-09-21  Patrick Oppenlander  <pattyo.lists@gmail.com>\n \n \t* config/rs6000/t-spe (MULTILIB_EXCEPTIONS): Allow isel without SPE."}, {"sha": "32e8094e3663ce8367a41aabca1c109ca4f40261", "filename": "gcc/configure", "status": "modified", "additions": 47, "deletions": 19, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7d00bac5926ef5a554d247de8a860a4464a6a0/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7d00bac5926ef5a554d247de8a860a4464a6a0/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7d7d00bac5926ef5a554d247de8a860a4464a6a0", "patch": "@@ -6607,7 +6607,35 @@ fi\n if test $enable_werror_always = yes; then :\n   strict_warn=\"$strict_warn${strict_warn:+ }-Werror\"\n fi\n+ if test \"xmanual\" != xmanual; then :\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC is GCC >=manual\" >&5\n+$as_echo_n \"checking whether $CC is GCC >=manual... \" >&6; }\n+if test \"${acx_cv_prog_cc_gcc_manual_or_newer+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  set fnord `echo manual | tr '.' ' '`\n+     shift\n+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#if __GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__ \\\n+  < $1 * 10000 + $2 * 100 + $3\n+#error insufficient\n+#endif\n+_ACEOF\n+if ac_fn_c_try_cpp \"$LINENO\"; then :\n+  acx_cv_prog_cc_gcc_manual_or_newer=yes\n+else\n+  acx_cv_prog_cc_gcc_manual_or_newer=no\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_gcc_manual_or_newer\" >&5\n+$as_echo \"$acx_cv_prog_cc_gcc_manual_or_newer\" >&6; }\n+ if test $acx_cv_prog_cc_gcc_manual_or_newer = yes; then :\n+  strict_warn=\"$strict_warn${strict_warn:+ }-Werror\"\n+fi\n \n+fi\n \n \n # The above macros do nothing if the compiler is not GCC.  However, the\n@@ -11869,6 +11897,22 @@ elif test \"x$TARGET_SYSTEM_ROOT\" != x; then\n         SYSTEM_HEADER_DIR=$build_system_header_dir\n fi\n \n+if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n+  if test \"x$with_headers\" != x; then\n+    target_header_dir=$with_headers\n+  elif test \"x$with_sysroot\" = x; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n+  elif test \"x$with_build_sysroot\" != \"x\"; then\n+    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n+  elif test \"x$with_sysroot\" = xyes; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n+  else\n+    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n+  fi\n+else\n+  target_header_dir=${native_system_header_dir}\n+fi\n+\n # If this is a cross-compiler that does not\n # have its own set of headers then define\n # inhibit_libc\n@@ -11880,7 +11924,7 @@ fi\n : ${inhibit_libc=false}\n if { { test x$host != x$target && test \"x$with_sysroot\" = x ; } ||\n        test x$with_newlib = xyes ; } &&\n-     { test \"x$with_headers\" = x || test \"x$with_headers\" = xno ; } ; then\n+     { test \"x$with_headers\" = xno || test ! -f \"$target_header_dir/stdio.h\"; } ; then\n        inhibit_libc=true\n fi\n \n@@ -18033,7 +18077,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18036 \"configure\"\n+#line 18080 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18139,7 +18183,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18142 \"configure\"\n+#line 18186 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -26627,22 +26671,6 @@ _ACEOF\n \n fi\n \n-if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n-  if test \"x$with_headers\" != x; then\n-    target_header_dir=$with_headers\n-  elif test \"x$with_sysroot\" = x; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n-  elif test \"x$with_build_sysroot\" != \"x\"; then\n-    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n-  elif test \"x$with_sysroot\" = xyes; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n-  else\n-    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n-  fi\n-else\n-  target_header_dir=${native_system_header_dir}\n-fi\n-\n # Determine the version of glibc, if any, used on the target.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for target glibc version\" >&5\n $as_echo_n \"checking for target glibc version... \" >&6; }"}, {"sha": "eb480de6bd11f46116472ab58c0f3ecd37eed99c", "filename": "gcc/configure.ac", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7d00bac5926ef5a554d247de8a860a4464a6a0/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7d00bac5926ef5a554d247de8a860a4464a6a0/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7d7d00bac5926ef5a554d247de8a860a4464a6a0", "patch": "@@ -1924,6 +1924,22 @@ elif test \"x$TARGET_SYSTEM_ROOT\" != x; then\n         SYSTEM_HEADER_DIR=$build_system_header_dir \n fi\n \n+if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n+  if test \"x$with_headers\" != x; then\n+    target_header_dir=$with_headers\n+  elif test \"x$with_sysroot\" = x; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n+  elif test \"x$with_build_sysroot\" != \"x\"; then\n+    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n+  elif test \"x$with_sysroot\" = xyes; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n+  else\n+    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n+  fi\n+else\n+  target_header_dir=${native_system_header_dir}\n+fi\n+\n # If this is a cross-compiler that does not\n # have its own set of headers then define\n # inhibit_libc\n@@ -1935,7 +1951,7 @@ fi\n : ${inhibit_libc=false}\n if { { test x$host != x$target && test \"x$with_sysroot\" = x ; } ||\n        test x$with_newlib = xyes ; } &&\n-     { test \"x$with_headers\" = x || test \"x$with_headers\" = xno ; } ; then\n+     { test \"x$with_headers\" = xno || test ! -f \"$target_header_dir/stdio.h\"; } ; then\n        inhibit_libc=true\n fi\n AC_SUBST(inhibit_libc)\n@@ -4443,22 +4459,6 @@ if test x$with_sysroot = x && test x$host = x$target \\\n [Define to PREFIX/include if cpp should also search that directory.])\n fi\n \n-if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n-  if test \"x$with_headers\" != x; then\n-    target_header_dir=$with_headers\n-  elif test \"x$with_sysroot\" = x; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n-  elif test \"x$with_build_sysroot\" != \"x\"; then\n-    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n-  elif test \"x$with_sysroot\" = xyes; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n-  else\n-    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n-  fi\n-else\n-  target_header_dir=${native_system_header_dir}\n-fi\n-\n # Determine the version of glibc, if any, used on the target.\n AC_MSG_CHECKING([for target glibc version])\n AC_ARG_WITH([glibc-version],"}]}