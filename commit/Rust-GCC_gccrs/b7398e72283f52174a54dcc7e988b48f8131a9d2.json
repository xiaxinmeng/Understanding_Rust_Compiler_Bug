{"sha": "b7398e72283f52174a54dcc7e988b48f8131a9d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjczOThlNzIyODNmNTIxNzRhNTRkY2M3ZTk4OGI0OGY4MTMxYTlkMg==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-10-30T14:42:22Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-10-30T14:42:22Z"}, "message": "simplify.c (twos_complement): Calculate mask in GMP arithmetic.\n\n2004-10-30  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n\n\t* simplify.c (twos_complement): Calculate mask in GMP arithmetic.\n\nFrom-SVN: r89888", "tree": {"sha": "9fdf66a2787567031f0f0ee0ba547ba40751b7a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fdf66a2787567031f0f0ee0ba547ba40751b7a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7398e72283f52174a54dcc7e988b48f8131a9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7398e72283f52174a54dcc7e988b48f8131a9d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7398e72283f52174a54dcc7e988b48f8131a9d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7398e72283f52174a54dcc7e988b48f8131a9d2/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf737879fa82bd9797ad559518dfab1ce9e1f4d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf737879fa82bd9797ad559518dfab1ce9e1f4d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf737879fa82bd9797ad559518dfab1ce9e1f4d6"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "8c81b0bbe14657eace14a08e29837819bce56db1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7398e72283f52174a54dcc7e988b48f8131a9d2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7398e72283f52174a54dcc7e988b48f8131a9d2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b7398e72283f52174a54dcc7e988b48f8131a9d2", "patch": "@@ -1,3 +1,7 @@\n+2004-10-30  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* simplify.c (twos_complement): Calculate mask in GMP arithmetic.\n+\n 2004-10-30  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* trans.c (gfc_trans_code): Set global locus after recursing. Fix"}, {"sha": "5004b83acc9485a3ee10b21f2cb814177d937a77", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7398e72283f52174a54dcc7e988b48f8131a9d2/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7398e72283f52174a54dcc7e988b48f8131a9d2/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=b7398e72283f52174a54dcc7e988b48f8131a9d2", "patch": "@@ -146,19 +146,17 @@ static void\n twos_complement (mpz_t x, int bitsize)\n {\n   mpz_t mask;\n-  char mask_s[bitsize + 1];\n \n   if (mpz_tstbit (x, bitsize - 1) == 1)\n     {\n-      /* The mpz_init_set_{u|s}i functions take a long argument, but\n-\t the widest integer the target supports might be wider, so we\n-\t have to go via an intermediate string.  */\n-      memset (mask_s, '1', bitsize);\n-      mask_s[bitsize] = '\\0';\n-      mpz_init_set_str (mask, mask_s, 2);\n+      mpz_init_set_ui(mask, 1);\n+      mpz_mul_2exp(mask, mask, bitsize);\n+      mpz_sub_ui(mask, mask, 1);\n \n-      /* We negate the number by hand, zeroing the high bits, and then\n-\t have it negated by GMP.  */\n+      /* We negate the number by hand, zeroing the high bits, that is\n+        make it the corresponding positive number, and then have it\n+        negated by GMP, giving the correct representation of the\n+        negative number.  */\n       mpz_com (x, x);\n       mpz_add_ui (x, x, 1);\n       mpz_and (x, x, mask);"}]}