{"sha": "99086d596fb56b6856a9ef28b18b1d2776cc0fba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwODZkNTk2ZmI1NmI2ODU2YTllZjI4YjE4YjFkMjc3NmNjMGZiYQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-07-28T18:44:34Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-07-28T18:44:34Z"}, "message": "defaults.h (ASM_OUTPUT_MEASURED_SIZE): Take only two arguments.\n\n\t* defaults.h (ASM_OUTPUT_MEASURED_SIZE): Take only two\n\targuments.  Always use \".-symbol\" as expression argument.\n\t* doc/tm.texi: Update to match.  Document requirement for\n\t\".size symbol, .-symbol\" to be acceptable to assembler.\n\n\t* config/elfos.h, config/netbsd-aout.h, config/openbsd.h,\n\tconfig/arm/elf.h, config/avr/avr.h, config/cris/aout.h,\n\tconfig/i386/freebsd-aout.h, config/i386/sco5.h,\n\tconfig/ip2k/ip2k.h, config/m88k/m88k.h, config/xtensa/elf.h,\n\tconfig/xtensa/linux.h:  Update uses of ASM_OUTPUT_MEASURED_SIZE.\n\nFrom-SVN: r55820", "tree": {"sha": "4ba6979618bd68bd4f566738d9935f4ff69e6ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ba6979618bd68bd4f566738d9935f4ff69e6ccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99086d596fb56b6856a9ef28b18b1d2776cc0fba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99086d596fb56b6856a9ef28b18b1d2776cc0fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99086d596fb56b6856a9ef28b18b1d2776cc0fba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99086d596fb56b6856a9ef28b18b1d2776cc0fba/comments", "author": null, "committer": null, "parents": [{"sha": "5922c46ce94c43b5ccedf256e27040cfa565054f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5922c46ce94c43b5ccedf256e27040cfa565054f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5922c46ce94c43b5ccedf256e27040cfa565054f"}], "stats": {"total": 170, "additions": 53, "deletions": 117}, "files": [{"sha": "5684fa4542c6bca620a93e6095e87a5315fc438a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -1,3 +1,16 @@\n+2002-07-28  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* defaults.h (ASM_OUTPUT_MEASURED_SIZE): Take only two\n+\targuments.  Always use \".-symbol\" as expression argument.\n+\t* doc/tm.texi: Update to match.  Document requirement for\n+\t\".size symbol, .-symbol\" to be acceptable to assembler.\n+\n+\t* config/elfos.h, config/netbsd-aout.h, config/openbsd.h,\n+\tconfig/arm/elf.h, config/avr/avr.h, config/cris/aout.h,\n+\tconfig/i386/freebsd-aout.h, config/i386/sco5.h,\n+\tconfig/ip2k/ip2k.h, config/m88k/m88k.h, config/xtensa/elf.h,\n+\tconfig/xtensa/linux.h:  Update uses of ASM_OUTPUT_MEASURED_SIZE.\n+\n 2002-07-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (gengtype-lex.c): Fix error in last change.\n@@ -34,7 +47,7 @@\n \t[HONOR_SNANS]: New macro.\n \n \t* toplev.c [flag_signaling_nans]: Initialize to false.\n-        (f_options): Add processing for \"-fsignaling-nans\".\n+\t(f_options): Add processing for \"-fsignaling-nans\".\n \t(set_fast_math_flags): Clear flag_signaling_nans with -ffast-math.\n \t(process_options): flag_signaling_nans implies flag_trapping_math.\n \n@@ -50,8 +63,8 @@\n \n \t* rtlanal.c: #include real.c for TARGET_FLOAT_FORMAT definitions\n \trequired by HONOR_SNANS.  (may_trap_p): Floating point DIV, MOD,\n-\tUDIV, UMOD, GE, GT, LE, LT and COMPARE may always trap with \n-\t-fsignaling_nans.  EQ and NE only trap for flag_signaling_nans \n+\tUDIV, UMOD, GE, GT, LE, LT and COMPARE may always trap with\n+\t-fsignaling_nans.  EQ and NE only trap for flag_signaling_nans\n \tnot flag_trapping_math (i.e. HONOR_SNANS but not HONOR_NANS).\n \n \t* doc/invoke.texi: Document new -fsignaling-nans compiler option.\n@@ -239,7 +252,7 @@ Thu Jul 25 10:23:41 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n 2002-07-25  Gabriel Dos Reis  <gdr@nerim.net>\n \n \t* c-common.c (c_sizeof_or_alignof_type): Take a third argument for\n-\tcomplaining. \n+\tcomplaining.\n \t* c-common.h (c_sizeof): Adjust definition.\n \t(c_alignof): Likewise.\n \t* c-tree.h (c_sizeof_nowarn): Now macro.\n@@ -274,7 +287,7 @@ Thu Jul 25 10:23:41 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* config/rs6000/eabi.h: Define TARGET_SPE_ABI, TARGET_SPE,\n \tTARGET_ISEL, and TARGET_FPRS.\n-\t\n+\n \t* doc/invoke.texi (RS/6000 and PowerPC Options): Document\n \t-mabi=spe, -mabi=no-spe, and -misel=.\n \n@@ -289,7 +302,7 @@ Thu Jul 25 10:23:41 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(*ne0): Same.\n \t(negsf2): Change to expand and rename old pattern to *negsf2.\n \t(abssf2): Change to expand and rename old pattern to *abssf2.\n-\t\n+\n \tNew expanders: fix_truncsfsi2, floatunssisf2, floatsisf2,\n \tfixunssfsi2.\n \n@@ -406,7 +419,7 @@ Thu Jul 25 10:23:41 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(rs6000_builtins): Add SPE builtins.\n \n \t* testsuite/gcc.dg/ppc-spe.c: New.\n-\t\n+\n \t* config/rs6000/eabispe.h: New.\n \n \t* config/rs6000/spe.h: New.\n@@ -587,7 +600,7 @@ Tue Jul 23 21:49:24 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(LARGEST_EXPONENT_IS_NORMAL): Ditto.\n \t(VAX_HALFWORD_ORDER): Define (1 for DEC VAX, 0 otherwise).\n \t(TARGET_G_FLOAT): Default to 0 if not defined.\n-\t(ieeetoe): New, common routine to convert target format floats \n+\t(ieeetoe): New, common routine to convert target format floats\n \tto internal form.\n \t(e24toe, e53toe): Change to use ieeetoe, distinguish DEC\n \tvs. others.\n@@ -787,7 +800,7 @@ Mon Jul 22 15:27:25 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* gengenrtl.c (gencode): Don't define obstack_alloc_rtx.\n \t* function.c (SYMBOL__MAIN): Remove definition.\n \t* global.c (SET_CONFLICT, REGBITP, ALLOCNO_LIVE_P): Remove.\n-\t* predict.c (PROB_NEVER, PROB_LIKELY, PROB_UNLIKELY): Remove.\t\n+\t* predict.c (PROB_NEVER, PROB_LIKELY, PROB_UNLIKELY): Remove.\n \t* profile.c (GCOV_INDEX_TO_BB): Remove.\n \t* sched-rgn.c (ABS_VALUE, MIN_DIFF_PRIORITY, MIN_PROB_DIFF): Remove.\n \t* simplify-rtx.c (FIXED_BASE_PLUS_P): Remove.\n@@ -830,7 +843,7 @@ Sun Jul 21 21:36:41 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-07-21  Andreas Jaeger  <aj@suse.de>\n \n-        * reload1.c (fixup_abnormal_edges): Remove unused variable.\n+\t* reload1.c (fixup_abnormal_edges): Remove unused variable.\n \n 2002-07-21  Bernd Schmidt  <bernds@redhat.com>\n "}, {"sha": "df58eed4255eb4f1d3b0511496d9b81c76e1fe03", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -79,14 +79,7 @@ Boston, MA 02111-1307, USA.  */\n     {\t\t\t\t\t\t\t\t\\\n       ARM_DECLARE_FUNCTION_SIZE (FILE, FNAME, DECL);\t\t\\\n       if (!flag_inhibit_size_directive)\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\\\n-          char label[256];\t\t\t\t\t\\\n-\t  static int labelno;\t\t\t\t\t\\\n-\t  labelno ++;\t\t\t\t\t\t\\\n-\t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\\\n-        }\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "fca5c3fdd2b07a0e4f8f3a62ecc85cc410f9b5b8", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -1969,14 +1969,7 @@ do {\t\t\t\t\t\t\t\t\\\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (!flag_inhibit_size_directive)\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        char label[256];\t\t\t\t\t\t\\\n-\tstatic int labelno;\t\t\t\t\t\t\\\n-\tlabelno++;\t\t\t\t\t\t\t\\\n-\tASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\t\\\n-\tASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\tASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n   } while (0)\n /* A C statement (sans semicolon) to output to the stdio stream\n    STREAM any text necessary for declaring the size of a function"}, {"sha": "9d92dbbebdbc2aba3e17e5611bee3d4dac5e1b17", "filename": "gcc/config/cris/aout.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fcris%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fcris%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Faout.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -339,16 +339,7 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (!flag_inhibit_size_directive)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  char label[256];\t\t\t\t\t\\\n-\t  static int labelno;\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  labelno++;\t\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\\\n-\t}\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "11b1e65fe79e09f2aa33a42eeea56556779fb2d0", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -354,16 +354,7 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (!flag_inhibit_size_directive)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  char label[256];\t\t\t\t\t\\\n-\t  static int labelno;\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  labelno++;\t\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\\\n-\t}\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n #endif"}, {"sha": "d5fab7c8f76c42d482626bd88f1f957618342047", "filename": "gcc/config/i386/freebsd-aout.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -207,14 +207,7 @@ do {                                                                    \\\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (!flag_inhibit_size_directive)\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        char label[256];\t\t\t\t\t\t\\\n-\tstatic int labelno;\t\t\t\t\t\t\\\n-\tlabelno++;\t\t\t\t\t\t\t\\\n-\tASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\t\\\n-\tASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\tASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n   } while (0)\n \n #define ASM_SPEC   \" %| %{fpic:-k} %{fPIC:-k}\""}, {"sha": "27db4026ecff89bcd0153919da8033e49cbc8e14", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -150,7 +150,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (TARGET_ELF && !flag_inhibit_size_directive)\t\t\t\\\n-      ASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), \".\");\t\t\t\\\n+      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n   } while (0)\n \n #undef ASM_DECLARE_OBJECT_NAME"}, {"sha": "70444456efa9d5c73e358738dfd9b7381c1f8d32", "filename": "gcc/config/ip2k/ip2k.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fip2k%2Fip2k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fip2k%2Fip2k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -2139,14 +2139,7 @@ do {\t\t\t\t\t\t\\\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n     if (!flag_inhibit_size_directive)\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-        char label[256];\t\t\t\t\t\\\n-\tstatic int labelno;\t\t\t\t\t\\\n-\tlabelno++;\t\t\t\t\t\t\\\n-\tASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\tASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\tASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\\\n-      }\t\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n   } while (0)\n /* A C statement (sans semicolon) to output to the stdio stream\n    STREAM any text necessary for declaring the size of a function"}, {"sha": "8db17b6044f264dda1097cfb1c6a9d94f1f69924", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -1866,18 +1866,8 @@ do {\t\t\t\t\t\t\t\t\t \\\n #undef\tASM_DECLARE_FUNCTION_SIZE\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    if (DECLARE_ASM_NAME)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tif (!flag_inhibit_size_directive)\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    char label[256];\t\t\t\t\t\t\\\n-\t    static int labelno = 0;\t\t\t\t\t\\\n-\t    labelno++;\t\t\t\t\t\t\t\\\n-\t    ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\t    ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\t    ASM_OUTPUT_MEASURED_SIZE (FILE, (FNAME), label);\t\t\\\n-\t  }\t\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+    if (DECLARE_ASM_NAME && !flag_inhibit_size_directive)\t\t\\\n+      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n   } while (0)\n \n /* This is how to output the definition of a user-level label named NAME,"}, {"sha": "d8ab4a46f5bb2fba14f7898e0d37f6d7169d28b5", "filename": "gcc/config/netbsd-aout.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fnetbsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fnetbsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-aout.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -196,13 +196,6 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       if (!flag_inhibit_size_directive)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  char label[256];\t\t\t\t\t\t\\\n-\t  static int labelno;\t\t\t\t\t\t\\\n-\t  labelno++;\t\t\t\t\t\t\t\\\n-\t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\t\\\n-\t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\t  ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME, label);\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "efe8d420d9e75a3eb445bb72551de67e1eab6619", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -212,10 +212,10 @@ Boston, MA 02111-1307, USA.  */\n #ifndef OBSD_HAS_DECLARE_FUNCTION_SIZE\n /* Declare the size of a function.  */\n #undef ASM_DECLARE_FUNCTION_SIZE\n-#define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (!flag_inhibit_size_directive)\t\t\t\t\t\\\n-      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME, \".\");\t\t\t\\\n+#define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    if (!flag_inhibit_size_directive)\t\t\t\t\\\n+      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n   } while (0)\n #endif\n "}, {"sha": "963bbe64428228f7c63249d6d9f8d456d0f8172d", "filename": "gcc/config/xtensa/elf.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fxtensa%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fxtensa%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Felf.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -112,16 +112,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (!flag_inhibit_size_directive)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  char label[256];\t\t\t\t\t\\\n-\t  static int labelno;\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  labelno++;\t\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME, label);\t\\\n-\t}\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n       XTENSA_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL);\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "c49bd131ad5d5fe221498b238af53287da40c311", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -68,16 +68,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (!flag_inhibit_size_directive)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  char label[256];\t\t\t\t\t\\\n-\t  static int labelno;\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  labelno++;\t\t\t\t\t\t\\\n-\t  \t\t\t\t\t\t\t\\\n-\t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\t  ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME, label);\t\\\n-\t}\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\\\n       XTENSA_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL);\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "0bbcc21eeb212b6a3ae7e08be49f77a6becfb5e1", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -200,15 +200,13 @@ do { fputs (integer_asm_op (POINTER_SIZE / UNITS_PER_WORD, TRUE), FILE); \\\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-#define ASM_OUTPUT_MEASURED_SIZE(STREAM, BEG, END)\t\\\n+#define ASM_OUTPUT_MEASURED_SIZE(STREAM, NAME)\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       fputs (SIZE_ASM_OP, STREAM);\t\t\t\\\n-      assemble_name (STREAM, BEG);\t\t\t\\\n-      fputs (\", \", STREAM);\t\t\t\t\\\n-      assemble_name (STREAM, END);\t\t\t\\\n-      putc ('-', STREAM);\t\t\t\t\\\n-      assemble_name (STREAM, BEG);\t\t\t\\\n+      assemble_name (STREAM, NAME);\t\t\t\\\n+      fputs (\", .-\", STREAM);\t\t\t\t\\\n+      assemble_name (STREAM, NAME);\t\t\t\\\n       putc ('\\n', STREAM);\t\t\t\t\\\n     }\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "100def9e85b83c8e3cac5f7a7cce4d48f5aef196", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99086d596fb56b6856a9ef28b18b1d2776cc0fba/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=99086d596fb56b6856a9ef28b18b1d2776cc0fba", "patch": "@@ -6421,12 +6421,18 @@ If you define @code{SIZE_ASM_OP}, a default definition of this macro is\n provided.\n \n @findex ASM_OUTPUT_MEASURED_SIZE\n-@item ASM_OUTPUT_MEASURED_SIZE (@var{stream}, @var{beg}, @var{end})\n+@item ASM_OUTPUT_MEASURED_SIZE (@var{stream}, @var{name})\n A C statement (sans semicolon) to output to the stdio stream\n @var{stream} a directive telling the assembler to calculate the size of\n-the symbol @var{beg} by subtracting its address from that of the symbol\n-@var{end}.  If you define @code{SIZE_ASM_OP}, a default definition of\n-this macro is provided.\n+the symbol @var{name} by subtracting its address from the current\n+address.  \n+\n+If you define @code{SIZE_ASM_OP}, a default definition of this macro is\n+provided.  The default assumes that the assembler recognizes a special\n+@samp{.} symbol as referring to the current address, and can calculate\n+the difference between this and another symbol.  If your assembler does\n+not recognize @samp{.} or cannot do calculations with it, you will need\n+to redefine @code{ASM_OUTPUT_MEASURED_SIZE} to use some other technique.\n \n @findex TYPE_ASM_OP\n @item TYPE_ASM_OP"}]}