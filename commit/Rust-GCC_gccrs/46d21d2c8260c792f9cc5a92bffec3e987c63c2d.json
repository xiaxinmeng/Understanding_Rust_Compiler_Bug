{"sha": "46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZkMjFkMmM4MjYwYzc5MmY5Y2M1YTkyYmZmZWMzZTk4N2M2M2MyZA==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2000-04-09T19:26:31Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2000-04-09T19:26:31Z"}, "message": "i386.md (fix_truncsfhi2, [...]): New patterns.\n\n\t* i386.md (fix_truncsfhi2, fix_truncdfhi2,\n\tfix_truncxfhi2): New patterns.\n\t* i386.c (output_fix_trunc): Handle converting to HImode.\n\nFrom-SVN: r33044", "tree": {"sha": "5b3f77674ed2d54fd1e8b4082c7c3cc0e3c3e07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b3f77674ed2d54fd1e8b4082c7c3cc0e3c3e07b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e33c685bd65a677c9b4dfde232cb43d6cb55c15a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33c685bd65a677c9b4dfde232cb43d6cb55c15a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33c685bd65a677c9b4dfde232cb43d6cb55c15a"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "6c8074de6127b56008229ed37644e7ac50fbef1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "patch": "@@ -1,3 +1,9 @@\n+Sun Apr  9 15:16:14 EDT 2000  John Wehle  (john@feith.com)\n+\n+\t* i386.md (fix_truncsfhi2, fix_truncdfhi2,\n+\tfix_truncxfhi2): New patterns.\n+\t* i386.c (output_fix_trunc): Handle converting to HImode.\n+\n 2000-04-08  Alex Samuel  <samuel@codesourcery.com>\n \n \t* ssa.c (convert_to_ssa): Eliminate dead code when calling"}, {"sha": "dcab2be1c29149519b707deaecc59f21f0004515", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "patch": "@@ -3643,7 +3643,7 @@ output_387_binary_op (insn, operands)\n }\n \n /* Output code for INSN to convert a float to a signed int.  OPERANDS\n-   are the insn operands.  The output may be [SD]Imode and the input\n+   are the insn operands.  The output may be [HSD]Imode and the input\n    operand may be [SDX]Fmode.  */\n \n const char *\n@@ -3694,8 +3694,10 @@ output_fix_trunc (insn, operands)\n \t  output_asm_insn (\"mov{l}\\t{%2, %0|%0, %2}\", xops);\n \t  output_asm_insn (\"mov{l}\\t{%3, %1|%1, %3}\", xops);\n \t}\n-      else\n+      else if (GET_MODE (operands[0]) == SImode)\n \toutput_asm_insn (\"mov{l}\\t{%3, %0|%0, %3}\", operands);\n+      else\n+\toutput_asm_insn (\"mov{w}\\t{%3, %0|%0, %3}\", operands);\n     }\n \n   return \"\";"}, {"sha": "294493cbfef8b4ab804e72c4e009fb3cef8f7dd3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46d21d2c8260c792f9cc5a92bffec3e987c63c2d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=46d21d2c8260c792f9cc5a92bffec3e987c63c2d", "patch": "@@ -3113,6 +3113,62 @@\n    (set (match_dup 0) (match_dup 3))]\n   \"\")\n \n+;; Signed conversion to HImode.\n+\n+(define_expand \"fix_truncxfhi2\"\n+  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (fix:HI (match_operand:XF 1 \"register_operand\" \"\")))\n+\t      (clobber (match_dup 2))\n+\t      (clobber (match_dup 3))\n+\t      (clobber (match_scratch:SI 4 \"\"))])]\n+  \"TARGET_80387\"\n+  \"operands[2] = assign_386_stack_local (SImode, 0);\n+   operands[3] = assign_386_stack_local (HImode, 1);\")\n+\n+(define_expand \"fix_truncdfhi2\"\n+  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (fix:HI (match_operand:DF 1 \"register_operand\" \"\")))\n+\t      (clobber (match_dup 2))\n+\t      (clobber (match_dup 3))\n+\t      (clobber (match_scratch:SI 4 \"\"))])]\n+  \"TARGET_80387\"\n+  \"operands[2] = assign_386_stack_local (SImode, 0);\n+   operands[3] = assign_386_stack_local (HImode, 1);\")\n+\n+(define_expand \"fix_truncsfhi2\"\n+  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (fix:HI (match_operand:SF 1 \"register_operand\" \"\")))\n+\t      (clobber (match_dup 2))\n+\t      (clobber (match_dup 3))\n+\t      (clobber (match_scratch:SI 4 \"\"))])]\n+  \"TARGET_80387\"\n+  \"operands[2] = assign_386_stack_local (SImode, 0);\n+   operands[3] = assign_386_stack_local (HImode, 1);\")\n+\n+(define_insn \"*fix_trunchi_1\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(fix:HI (match_operand 1 \"register_operand\" \"f,f\")))\n+   (clobber (match_operand:SI 2 \"memory_operand\" \"=o,o\"))\n+   (clobber (match_operand:HI 3 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_scratch:SI 4 \"=&r,r\"))]\n+  \"TARGET_80387 && FLOAT_MODE_P (GET_MODE (operands[1]))\"\n+  \"* return output_fix_trunc (insn, operands);\"\n+  [(set_attr \"type\" \"multi\")])\n+\n+(define_split \n+  [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t(fix:HI (match_operand 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SI 2 \"memory_operand\" \"\"))\n+   (clobber (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_scratch:SI 4 \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 3) (fix:HI (match_dup 1)))\n+\t      (clobber (match_dup 2))\n+\t      (clobber (match_dup 3))\n+\t      (clobber (match_dup 4))])\n+   (set (match_dup 0) (match_dup 3))]\n+  \"\")\n+\n ;; %% Not used yet.\n (define_insn \"x86_fnstcw_1\"\n   [(set (match_operand:HI 0 \"memory_operand\" \"=m\")"}]}