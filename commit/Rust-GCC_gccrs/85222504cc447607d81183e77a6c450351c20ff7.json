{"sha": "85222504cc447607d81183e77a6c450351c20ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUyMjI1MDRjYzQ0NzYwN2Q4MTE4M2U3N2E2YzQ1MDM1MWMyMGZmNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-02-28T23:03:01Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-02-28T23:03:01Z"}, "message": "re PR tree-optimization/89536 (wrong code at -Os and above on x86_64-linux-gnu)\n\n\tPR tree-optimization/89536\n\t* tree-ssa-dom.c (edge_info::derive_equivalences) <BIT_NOT_EXPR>: Test\n\tonly whether bit #0 of the value is 0 instead of the entire value.\n\nFrom-SVN: r269289", "tree": {"sha": "a47b6dff799264fcfcaf4a9c9332dee53fd5023c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a47b6dff799264fcfcaf4a9c9332dee53fd5023c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85222504cc447607d81183e77a6c450351c20ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85222504cc447607d81183e77a6c450351c20ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85222504cc447607d81183e77a6c450351c20ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85222504cc447607d81183e77a6c450351c20ff7/comments", "author": null, "committer": null, "parents": [{"sha": "cc284d9cf738f0efd4dedd42476da8372d6a38d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc284d9cf738f0efd4dedd42476da8372d6a38d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc284d9cf738f0efd4dedd42476da8372d6a38d6"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "4c57ead4d614ae65457f968190350a27586818db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85222504cc447607d81183e77a6c450351c20ff7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85222504cc447607d81183e77a6c450351c20ff7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85222504cc447607d81183e77a6c450351c20ff7", "patch": "@@ -1,3 +1,9 @@\n+2019-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/89536\n+\t* tree-ssa-dom.c (edge_info::derive_equivalences) <BIT_NOT_EXPR>: Test\n+\tonly whether bit #0 of the value is 0 instead of the entire value.\n+\n 2019-02-28  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87068 - missing diagnostic with fallthrough statement."}, {"sha": "cf4f06eb88d62fd722aff5947bc465b2b7dc2899", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85222504cc447607d81183e77a6c450351c20ff7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85222504cc447607d81183e77a6c450351c20ff7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85222504cc447607d81183e77a6c450351c20ff7", "patch": "@@ -1,3 +1,7 @@\n+2019-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c-torture/execute/20190228-1.c: New test.\n+\n 2019-02-28  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87068 - missing diagnostic with fallthrough statement."}, {"sha": "e71f33a279bdd470b5c02ba3428877333e51cd75", "filename": "gcc/testsuite/gcc.c-torture/execute/20190228-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85222504cc447607d81183e77a6c450351c20ff7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190228-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85222504cc447607d81183e77a6c450351c20ff7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190228-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190228-1.c?ref=85222504cc447607d81183e77a6c450351c20ff7", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/89536 */\n+/* Testcase by Zhendong Su <su@cs.ucdavis.edu> */\n+\n+int a = 1;\n+\n+int main (void)\n+{\n+  a = ~(a && 1); \n+  if (a < -1)\n+    a = ~a;\n+  \n+  if (!a)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "aa4e24bc358cc6905ddae2688cd3a7733991916a", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85222504cc447607d81183e77a6c450351c20ff7/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85222504cc447607d81183e77a6c450351c20ff7/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=85222504cc447607d81183e77a6c450351c20ff7", "patch": "@@ -348,7 +348,7 @@ edge_info::derive_equivalences (tree name, tree value, int recursion_limit)\n \t\t&& TREE_CODE (rhs) == SSA_NAME\n \t\t&& ssa_name_has_boolean_range (rhs))\n \t      {\n-\t\tif (integer_zerop (value))\n+\t\tif ((TREE_INT_CST_LOW (value) & 1) == 0)\n \t\t  res = build_one_cst (TREE_TYPE (rhs));\n \t\telse\n \t\t  res = build_zero_cst (TREE_TYPE (rhs));"}]}