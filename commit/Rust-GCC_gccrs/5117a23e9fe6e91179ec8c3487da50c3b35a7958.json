{"sha": "5117a23e9fe6e91179ec8c3487da50c3b35a7958", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExN2EyM2U5ZmU2ZTkxMTc5ZWM4YzM0ODdkYTUwYzNiMzVhNzk1OA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-13T15:50:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-13T15:50:35Z"}, "message": "Use normal mode containers in searchers\n\n\t* include/experiumental/functional (boyer_moore_searcher)\n\t(__boyer_moore_map_base, __boyer_moore_array_base): Qualify containers\n\twith _GLIBCXX_STD_C.\n\t* include/std/functional: Likewise.\n\nFrom-SVN: r241126", "tree": {"sha": "97cb0e8013fe374afafcdfd113e5cf93e0d522ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97cb0e8013fe374afafcdfd113e5cf93e0d522ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5117a23e9fe6e91179ec8c3487da50c3b35a7958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5117a23e9fe6e91179ec8c3487da50c3b35a7958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5117a23e9fe6e91179ec8c3487da50c3b35a7958", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5117a23e9fe6e91179ec8c3487da50c3b35a7958/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4035dcd7b0be8a9edefb9af8121ae0eaabaa7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4035dcd7b0be8a9edefb9af8121ae0eaabaa7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4035dcd7b0be8a9edefb9af8121ae0eaabaa7c"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "f65514c3d720b3a1ae16e23a73acc45328f33e51", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5117a23e9fe6e91179ec8c3487da50c3b35a7958/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5117a23e9fe6e91179ec8c3487da50c3b35a7958/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5117a23e9fe6e91179ec8c3487da50c3b35a7958", "patch": "@@ -1,5 +1,10 @@\n 2016-10-13  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experiumental/functional (boyer_moore_searcher)\n+\t(__boyer_moore_map_base, __boyer_moore_array_base): Qualify containers\n+\twith _GLIBCXX_STD_C.\n+\t* include/std/functional: Likewise.\n+\n \t* include/std/chrono (floor): Replace non-constexpr operation.\n \t* testsuite/20_util/duration_cast/rounding.cc: Test conversion to\n \tdurations with floating pointer representations."}, {"sha": "77e6e666e2032672638874235cdef1c3944a6e33", "filename": "libstdc++-v3/include/experimental/functional", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5117a23e9fe6e91179ec8c3487da50c3b35a7958/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5117a23e9fe6e91179ec8c3487da50c3b35a7958/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional?ref=5117a23e9fe6e91179ec8c3487da50c3b35a7958", "patch": "@@ -119,7 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _Pred\n       _M_pred() const { return _M_bad_char.key_eq(); }\n \n-      std::unordered_map<_Key, _Tp, _Hash, _Pred> _M_bad_char;\n+      _GLIBCXX_STD_C::unordered_map<_Key, _Tp, _Hash, _Pred> _M_bad_char;\n     };\n \n   template<typename _Tp, size_t _Len, typename _Pred>\n@@ -128,7 +128,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _RAIter, typename _Unused>\n \t__boyer_moore_array_base(_RAIter __pat, size_t __patlen,\n \t\t\t\t _Unused&&, _Pred&& __pred)\n-\t: _M_bad_char{ std::array<_Tp, _Len>{}, std::move(__pred) }\n+\t: _M_bad_char{ _GLIBCXX_STD_C::array<_Tp, _Len>{}, std::move(__pred) }\n \t{\n \t  std::get<0>(_M_bad_char).fill(__patlen);\n \t  if (__patlen > 0)\n@@ -156,7 +156,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const _Pred&\n       _M_pred() const { return std::get<1>(_M_bad_char); }\n \n-      std::tuple<std::array<_Tp, _Len>, _Pred> _M_bad_char;\n+      std::tuple<_GLIBCXX_STD_C::array<_Tp, _Len>, _Pred> _M_bad_char;\n     };\n \n   template<typename _Pred>\n@@ -229,7 +229,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       _RAIter _M_pat;\n       _RAIter _M_pat_end;\n-      std::vector<__diff_type> _M_good_suffix;\n+      _GLIBCXX_STD_C::vector<__diff_type> _M_good_suffix;\n     };\n \n   template<typename _RAIter, typename _Hash"}, {"sha": "8fc60dc515e454ff119d12c374c8b21a0d3b102e", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5117a23e9fe6e91179ec8c3487da50c3b35a7958/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5117a23e9fe6e91179ec8c3487da50c3b35a7958/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=5117a23e9fe6e91179ec8c3487da50c3b35a7958", "patch": "@@ -2206,7 +2206,7 @@ _GLIBCXX_MEM_FN_TRAITS(&&, false_type, true_type)\n       _Pred\n       _M_pred() const { return _M_bad_char.key_eq(); }\n \n-      std::unordered_map<_Key, _Tp, _Hash, _Pred> _M_bad_char;\n+      _GLIBCXX_STD_C::unordered_map<_Key, _Tp, _Hash, _Pred> _M_bad_char;\n     };\n \n   template<typename _Tp, size_t _Len, typename _Pred>\n@@ -2215,7 +2215,7 @@ _GLIBCXX_MEM_FN_TRAITS(&&, false_type, true_type)\n       template<typename _RAIter, typename _Unused>\n \t__boyer_moore_array_base(_RAIter __pat, size_t __patlen,\n \t\t\t\t _Unused&&, _Pred&& __pred)\n-\t: _M_bad_char{ std::array<_Tp, _Len>{}, std::move(__pred) }\n+\t: _M_bad_char{ _GLIBCXX_STD_C::array<_Tp, _Len>{}, std::move(__pred) }\n \t{\n \t  std::get<0>(_M_bad_char).fill(__patlen);\n \t  if (__patlen > 0)\n@@ -2243,7 +2243,7 @@ _GLIBCXX_MEM_FN_TRAITS(&&, false_type, true_type)\n       const _Pred&\n       _M_pred() const { return std::get<1>(_M_bad_char); }\n \n-      std::tuple<std::array<_Tp, _Len>, _Pred> _M_bad_char;\n+      std::tuple<_GLIBCXX_STD_C::array<_Tp, _Len>, _Pred> _M_bad_char;\n     };\n \n   template<typename _Pred>\n@@ -2316,7 +2316,7 @@ _GLIBCXX_MEM_FN_TRAITS(&&, false_type, true_type)\n \n       _RAIter _M_pat;\n       _RAIter _M_pat_end;\n-      std::vector<__diff_type> _M_good_suffix;\n+      _GLIBCXX_STD_C::vector<__diff_type> _M_good_suffix;\n     };\n \n   template<typename _RAIter, typename _Hash"}]}