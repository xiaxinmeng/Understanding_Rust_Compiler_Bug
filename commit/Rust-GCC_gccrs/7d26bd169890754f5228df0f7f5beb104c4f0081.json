{"sha": "7d26bd169890754f5228df0f7f5beb104c4f0081", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyNmJkMTY5ODkwNzU0ZjUyMjhkZjBmN2Y1YmViMTA0YzRmMDA4MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-03-07T08:34:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-07T08:34:34Z"}, "message": "cpphash.c (collect_expansion): Also catch ## at start of macro.\n\n        * cpphash.c (collect_expansion): Also catch ## at start of macro.\n\n        * varasm.c (make_decl_rtl): Don't add a number to members of\n        local classes.\n        (make_function_rtl): Likewise.\n\nFrom-SVN: r32378", "tree": {"sha": "bef4420b975640f563780401dc3cc768ec639a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bef4420b975640f563780401dc3cc768ec639a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d26bd169890754f5228df0f7f5beb104c4f0081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d26bd169890754f5228df0f7f5beb104c4f0081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d26bd169890754f5228df0f7f5beb104c4f0081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d26bd169890754f5228df0f7f5beb104c4f0081/comments", "author": null, "committer": null, "parents": [{"sha": "5816f88b4b4cc536bb23d981d55ca32e16eb3400", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5816f88b4b4cc536bb23d981d55ca32e16eb3400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5816f88b4b4cc536bb23d981d55ca32e16eb3400"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "cce837fb81ef281cc741d8f16bc2cd9c2061b291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d26bd169890754f5228df0f7f5beb104c4f0081/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d26bd169890754f5228df0f7f5beb104c4f0081/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d26bd169890754f5228df0f7f5beb104c4f0081", "patch": "@@ -1,3 +1,11 @@\n+2000-03-06  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* cpphash.c (collect_expansion): Also catch ## at start of macro.\n+\n+\t* varasm.c (make_decl_rtl): Don't add a number to members of\n+\tlocal classes.\n+\t(make_function_rtl): Likewise.\n+\n 2000-03-06  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* gcse.c (compute_can_copy): Adjust if/else blocks from rth's"}, {"sha": "bcb55389e3e610bffee3595be5c4183814028309", "filename": "gcc/cpphash.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d26bd169890754f5228df0f7f5beb104c4f0081/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d26bd169890754f5228df0f7f5beb104c4f0081/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=7d26bd169890754f5228df0f7f5beb104c4f0081", "patch": "@@ -346,6 +346,8 @@ collect_expansion (pfile, arglist)\n \t  else if (last_token == PASTE)\n \t    /* ## ## - the second ## is ordinary.  */\n \t    goto norm;\n+\t  else if (last_token == START)\n+\t    cpp_error (pfile, \"`##' at start of macro definition\");\n \t  \n \t  /* Discard the token and any hspace before it.  */\n \t  while (is_hspace (pfile->token_buffer[here-1]))"}, {"sha": "baf06e0548e431c0cb796bddb59ac20e827c9322", "filename": "gcc/varasm.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d26bd169890754f5228df0f7f5beb104c4f0081/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d26bd169890754f5228df0f7f5beb104c4f0081/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=7d26bd169890754f5228df0f7f5beb104c4f0081", "patch": "@@ -522,8 +522,10 @@ make_function_rtl (decl)\n   char *name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n   char *new_name = name;\n \n-  /* Rename a nested function to avoid conflicts.  */\n+  /* Rename a nested function to avoid conflicts, unless it's a member of\n+     a local class, in which case the class name is already unique.  */\n   if (decl_function_context (decl) != 0\n+      && ! TYPE_P (DECL_CONTEXT (decl))\n       && DECL_INITIAL (decl) != 0\n       && DECL_RTL (decl) == 0)\n     {\n@@ -765,9 +767,12 @@ make_decl_rtl (decl, asmspec, top_level)\n       if (DECL_RTL (decl) == 0)\n \t{\n \t  /* Can't use just the variable's own name for a variable\n-\t     whose scope is less than the whole file.\n+\t     whose scope is less than the whole file, unless it's a member\n+\t     of a local class (which will already be unambiguous).\n \t     Concatenate a distinguishing number.  */\n-\t  if (!top_level && !TREE_PUBLIC (decl) && asmspec == 0)\n+\t  if (!top_level && !TREE_PUBLIC (decl)\n+\t      && ! TYPE_P (DECL_CONTEXT (decl))\n+\t      && asmspec == 0)\n \t    {\n \t      char *label;\n "}]}