{"sha": "0691440320ef57149c7a4ac056696e558d215af4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY5MTQ0MDMyMGVmNTcxNDljN2E0YWMwNTY2OTZlNTU4ZDIxNWFmNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-01-12T13:54:43Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-01-12T13:54:43Z"}, "message": "combine.c (try_combine): Don't ignore result of overlap checking loop.\n\n\t* combine.c (try_combine): Don't ignore result of overlap checking\n\tloop.  Combine overlap & asm check into single loop.\n\nCo-Authored-By: Nicolai Stange <nicstange@gmail.com>\n\nFrom-SVN: r244361", "tree": {"sha": "db9a2bdbdbcdfc1c32a29da0b9ba5d9edbec0eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db9a2bdbdbcdfc1c32a29da0b9ba5d9edbec0eb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0691440320ef57149c7a4ac056696e558d215af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0691440320ef57149c7a4ac056696e558d215af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0691440320ef57149c7a4ac056696e558d215af4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0691440320ef57149c7a4ac056696e558d215af4/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bfe4a99e083e595ea1abca076b5a960803deaf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfe4a99e083e595ea1abca076b5a960803deaf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfe4a99e083e595ea1abca076b5a960803deaf8"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "da9d21313b610b296efaf9a40e93cc5643c8c64a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0691440320ef57149c7a4ac056696e558d215af4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0691440320ef57149c7a4ac056696e558d215af4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0691440320ef57149c7a4ac056696e558d215af4", "patch": "@@ -1,3 +1,9 @@\n+2017-01-12  Nathan Sidwell  <nathan@acm.org>\n+\t    Nicolai Stange  <nicstange@gmail.com>\n+\n+\t* combine.c (try_combine): Don't ignore result of overlap checking\n+\tloop.  Combine overlap & asm check into single loop.\n+\n 2017-01-12  Richard Biener  <rguenther@suse.de>\n \n \t* tree-pretty-print.c (dump_generic_node): Provide -gimple"}, {"sha": "3598045afdbba9afc33f7c90147d9e532568b910", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0691440320ef57149c7a4ac056696e558d215af4/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0691440320ef57149c7a4ac056696e558d215af4/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=0691440320ef57149c7a4ac056696e558d215af4", "patch": "@@ -2785,22 +2785,24 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n \t (Besides, reload can't handle output reloads for this.)\n \n \t The problem can also happen if the dest of I3 is a memory ref,\n-\t if another dest in I2 is an indirect memory ref.  */\n-      for (i = 0; i < XVECLEN (p2, 0); i++)\n-\tif ((GET_CODE (XVECEXP (p2, 0, i)) == SET\n-\t     || GET_CODE (XVECEXP (p2, 0, i)) == CLOBBER)\n-\t    && reg_overlap_mentioned_p (SET_DEST (PATTERN (i3)),\n-\t\t\t\t\tSET_DEST (XVECEXP (p2, 0, i))))\n-\t  break;\n+\t if another dest in I2 is an indirect memory ref.\n \n-      /* Make sure this PARALLEL is not an asm.  We do not allow combining\n+\t Neither can this PARALLEL be an asm.  We do not allow combining\n \t that usually (see can_combine_p), so do not here either.  */\n-      for (i = 0; i < XVECLEN (p2, 0); i++)\n-\tif (GET_CODE (XVECEXP (p2, 0, i)) == SET\n-\t    && GET_CODE (SET_SRC (XVECEXP (p2, 0, i))) == ASM_OPERANDS)\n-\t  break;\n+      bool ok = true;\n+      for (i = 0; ok && i < XVECLEN (p2, 0); i++)\n+\t{\n+\t  if ((GET_CODE (XVECEXP (p2, 0, i)) == SET\n+\t       || GET_CODE (XVECEXP (p2, 0, i)) == CLOBBER)\n+\t      && reg_overlap_mentioned_p (SET_DEST (PATTERN (i3)),\n+\t\t\t\t\t  SET_DEST (XVECEXP (p2, 0, i))))\n+\t    ok = false;\n+\t  else if (GET_CODE (XVECEXP (p2, 0, i)) == SET\n+\t\t   && GET_CODE (SET_SRC (XVECEXP (p2, 0, i))) == ASM_OPERANDS)\n+\t    ok = false;\n+\t}\n \n-      if (i == XVECLEN (p2, 0))\n+      if (ok)\n \tfor (i = 0; i < XVECLEN (p2, 0); i++)\n \t  if (GET_CODE (XVECEXP (p2, 0, i)) == SET\n \t      && SET_DEST (XVECEXP (p2, 0, i)) == SET_SRC (PATTERN (i3)))"}]}