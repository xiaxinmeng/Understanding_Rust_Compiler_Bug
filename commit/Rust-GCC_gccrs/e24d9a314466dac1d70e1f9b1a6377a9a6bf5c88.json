{"sha": "e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI0ZDlhMzE0NDY2ZGFjMWQ3MGUxZjliMWE2Mzc3YTlhNmJmNWM4OA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-06-21T18:35:15Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-06-21T18:35:15Z"}, "message": "(skip_to_end_of_comment): Catch unterminated comments.\n\nFrom-SVN: r7525", "tree": {"sha": "db8541855002dd047eccaf6fe4915d05ab034367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db8541855002dd047eccaf6fe4915d05ab034367"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88/comments", "author": null, "committer": null, "parents": [{"sha": "e5b3d86a4392f165037dee50f82979db3652c0d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b3d86a4392f165037dee50f82979db3652c0d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b3d86a4392f165037dee50f82979db3652c0d7"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "60e5f15995a29bf07097ffd80bb37d8a53bc21fe", "filename": "gcc/cccp.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=e24d9a314466dac1d70e1f9b1a6377a9a6bf5c88", "patch": "@@ -7234,7 +7234,8 @@ validate_else (p)\n    If NOWARN is nonzero, don't warn about slash-star inside a comment.\n    This feature is useful when processing a comment that is going to be\n    processed or was processed at another point in the preprocessor,\n-   to avoid a duplicate warning.  */\n+   to avoid a duplicate warning.  Likewise for unterminated comment errors.  */\n+\n static U_CHAR *\n skip_to_end_of_comment (ip, line_counter, nowarn)\n      register FILE_BUF *ip;\n@@ -7245,6 +7246,7 @@ skip_to_end_of_comment (ip, line_counter, nowarn)\n   register U_CHAR *bp = ip->bufp;\n   FILE_BUF *op = &outbuf;\t/* JF */\n   int output = put_out_comments && !line_counter;\n+  int start_line = line_counter ? *line_counter : 0;\n \n \t/* JF this line_counter stuff is a crock to make sure the\n \t   comment is only put out once, no matter how many times\n@@ -7291,6 +7293,15 @@ skip_to_end_of_comment (ip, line_counter, nowarn)\n \twarning (\"`/*' within comment\");\n       break;\n     case '\\n':\n+      /* If this is the end of the file, we have an unterminated comment.\n+\t Don't swallow the newline.  We are guaranteed that there will be a\n+\t trailing newline and various pieces assume it's there.  */\n+      if (bp == limit)\n+\t{\n+\t  --bp;\n+\t  --limit;\n+\t  break;\n+\t}\n       if (line_counter != NULL)\n \t++*line_counter;\n       if (output)\n@@ -7308,6 +7319,9 @@ skip_to_end_of_comment (ip, line_counter, nowarn)\n       break;\n     }\n   }\n+\n+  if (!nowarn)\n+    error_with_line (line_for_error (start_line), \"unterminated comment\");\n   ip->bufp = bp;\n   return bp;\n }"}]}