{"sha": "2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEyZTNmMDViNjNlMjIzZGE3NmFkNjNhN2VlMDgyNjdhYTE4YzhlMQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-10-05T20:11:17Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-10-05T20:11:17Z"}, "message": "frv.h (LEGITIMIZE_ADDRESS): New.\n\n\t* config/frv/frv.h (LEGITIMIZE_ADDRESS): New.\n\n\t* config/frv/frv-protos.h (frv_legitimize_address): Protoize.\n\t(frv_emit_move): Same.\n\n\t* config/frv/frv.c (frv_emit_move): New.\n\t(frv_legitimize_address): New.\n\n\t* config/frv/frv.md (\"movsi\"): Call frv_emit_move.\n\t(\"movqi\"): Same.\n\t(\"movhi\"): Same.\n\t(\"movdi\"): Same.\n\t(\"movsf\"): Same.\n\t(\"movdf\"): Same.\n\nFrom-SVN: r88574", "tree": {"sha": "c705c5b28aa519bc64718ce0c24dea4a352a5ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c705c5b28aa519bc64718ce0c24dea4a352a5ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f51ccfcd8de8513d98890ae4e9d9198db1a35b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f51ccfcd8de8513d98890ae4e9d9198db1a35b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f51ccfcd8de8513d98890ae4e9d9198db1a35b3"}], "stats": {"total": 120, "additions": 74, "deletions": 46}, "files": [{"sha": "9c98af6618486e3e57ece09fc75f29a4130f48b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "patch": "@@ -1,3 +1,20 @@\n+2004-10-05  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/frv/frv.h (LEGITIMIZE_ADDRESS): New.\n+\n+\t* config/frv/frv-protos.h (frv_legitimize_address): Protoize.\n+\t(frv_emit_move): Same.\n+\n+\t* config/frv/frv.c (frv_emit_move): New.\n+\t(frv_legitimize_address): New.\n+\n+\t* config/frv/frv.md (\"movsi\"): Call frv_emit_move.\n+\t(\"movqi\"): Same.\n+\t(\"movhi\"): Same.\n+\t(\"movdi\"): Same.\n+\t(\"movsf\"): Same.\n+\t(\"movdf\"): Same.\n+\n 2004-10-05  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-decl.c (declspecs_add_type): Don't pedwarn for _Complex in"}, {"sha": "d775260fbd09c9b1a4acbf45d9e7d2c0ed39c830", "filename": "gcc/config/frv/frv-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h?ref=2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "patch": "@@ -68,6 +68,7 @@ extern int frv_initial_elimination_offset\t(int, int);\n #ifdef RTX_CODE\n extern int frv_legitimate_address_p\t\t(enum machine_mode, rtx,\n \t\t\t\t\t\t int, int, int);\n+extern rtx frv_legitimize_address\t\t(rtx, rtx, enum machine_mode);\n extern rtx frv_find_base_term\t\t\t(rtx);\n \n #ifdef TREE_CODE\n@@ -100,6 +101,7 @@ extern const char *frv_asm_output_opcode\n extern void frv_final_prescan_insn\t(rtx, rtx *, int);\n extern void frv_print_operand\t\t(FILE *, rtx, int);\n extern void frv_print_operand_address\t(FILE *, rtx);\n+extern void frv_emit_move\t\t(enum machine_mode, rtx, rtx);\n extern int frv_emit_movsi\t\t(rtx, rtx);\n extern const char *output_move_single\t(rtx *, rtx);\n extern const char *output_move_double\t(rtx *, rtx);"}, {"sha": "b8d69615d8857a300edf78d7a32b8a603fdd00be", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "patch": "@@ -3427,6 +3427,13 @@ frv_legitimate_address_p (enum machine_mode mode,\n   return ret;\n }\n \n+rtx\n+frv_legitimize_address (rtx x ATTRIBUTE_UNUSED,\n+\t\t\trtx oldx ATTRIBUTE_UNUSED,\n+\t\t\tenum machine_mode mode ATTRIBUTE_UNUSED)\n+{\n+  return NULL_RTX;\n+}\n \f\n /* Test whether a local function descriptor is canonical, i.e.,\n    whether we can use FUNCDESC_GOTOFF to compute the address of the\n@@ -5342,6 +5349,35 @@ direct_return_p (void)\n }\n \n \f\n+void\n+frv_emit_move (enum machine_mode mode, rtx dest, rtx src)\n+{\n+  switch (mode)\n+    {\n+    case SImode:\n+      if (frv_emit_movsi (dest, src))\n+\treturn;\n+      break;\n+\n+    case QImode:\n+    case HImode:\n+    case DImode:\n+    case SFmode:\n+    case DFmode:\n+      if (!reload_in_progress\n+\t  && !reload_completed\n+\t  && !register_operand (dest, mode)\n+\t  && !reg_or_0_operand (src, mode))\n+\tsrc = copy_to_mode_reg (mode, src);\n+      break;\n+\n+    default:\n+      abort ();\n+    }\n+\n+  emit_insn (gen_rtx_SET (VOIDmode, dest, src));\n+}\n+\n /* Emit code to handle a MOVSI, adding in the small data register or pic\n    register if needed to load up addresses.  Return TRUE if the appropriate\n    instructions are emitted.  */"}, {"sha": "55fd007bae023bbd80f3f37930f3d547f4fe1d44", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "patch": "@@ -2335,6 +2335,16 @@ __asm__(\"\\n\"\t\t\t\t\t\t\t\t\\\n    will reload one or both registers only if neither labeling works.  */\n #define REG_OK_FOR_INDEX_P(X) REG_OK_FOR_BASE_P (X)\n \n+#define LEGITIMIZE_ADDRESS(X, OLDX, MODE, WIN)\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  rtx new_x = frv_legitimize_address (X, OLDX, MODE);\t\\\n+  if (new_x)\t\t\t\t\t\t\\\n+    { \t\t\t\t\t\t\t\\\n+      (X) = new_x; \t\t\t\t\t\\\n+      goto WIN; \t\t\t\t\t\\\n+    } \t\t\t\t\t\t\t\\\n+} while (0)\n+\n #define FIND_BASE_TERM frv_find_base_term\n \n /* A C statement or compound statement with a conditional `goto LABEL;'"}, {"sha": "0cf88871455feab67df0069ddce9a3d274c8aad5", "filename": "gcc/config/frv/frv.md", "status": "modified", "additions": 9, "deletions": 46, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2e3f05b63e223da76ad63a7ee08267aa18c8e1/gcc%2Fconfig%2Ffrv%2Ffrv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.md?ref=2a2e3f05b63e223da76ad63a7ee08267aa18c8e1", "patch": "@@ -1558,14 +1558,7 @@\n   [(set (match_operand:QI 0 \"general_operand\" \"\")\n \t(match_operand:QI 1 \"general_operand\" \"\"))]\n   \"\"\n-  \"\n-{\n-  if (!reload_in_progress\n-      && !reload_completed\n-      && !register_operand (operands[0], QImode)\n-      && !reg_or_0_operand (operands[1], QImode))\n-    operands[1] = copy_to_mode_reg (QImode, operands[1]);\n-}\")\n+  \"{ frv_emit_move (QImode, operands[0], operands[1]); DONE; }\")\n \n (define_insn \"*movqi_load\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d,f\")\n@@ -1587,14 +1580,7 @@\n   [(set (match_operand:HI 0 \"general_operand\" \"\")\n \t(match_operand:HI 1 \"general_operand\" \"\"))]\n   \"\"\n-  \"\n-{\n-  if (!reload_in_progress\n-      && !reload_completed\n-      && !register_operand (operands[0], HImode)\n-      && !reg_or_0_operand (operands[1], HImode))\n-    operands[1] = copy_to_mode_reg (HImode, operands[1]);\n-}\")\n+  \"{ frv_emit_move (HImode, operands[0], operands[1]); DONE; }\")\n \n (define_insn \"*movhi_load\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d,f\")\n@@ -1645,11 +1631,7 @@\n   [(set (match_operand:SI 0 \"move_destination_operand\" \"\")\n \t(match_operand:SI 1 \"move_source_operand\" \"\"))]\n   \"\"\n-  \"\n-{\n-  if (frv_emit_movsi (operands[0], operands[1]))\n-    DONE;\n-}\")\n+  \"{ frv_emit_move (SImode, operands[0], operands[1]); DONE; }\")\n \n ;; Note - it is best to only have one movsi pattern and to handle\n ;; all the various contingencies by the use of alternatives.  This\n@@ -1673,7 +1655,9 @@\n ;; re-recognize them again after the substitution for memory.  So keep\n ;; a memory constraint available, just make sure reload won't be\n ;; tempted to use it.\n-\n+;;\n+\t\t   \n+\t\t   \n (define_insn \"*movsi_load\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,f\")\n \t(match_operand:SI 1 \"frv_load_operand\" \"m,m\"))]\n@@ -1752,14 +1736,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:DI 1 \"general_operand\" \"\"))]\n   \"\"\n-  \"\n-{\n-  if (!reload_in_progress\n-      && !reload_completed\n-      && !register_operand (operands[0], DImode)\n-      && !reg_or_0_operand (operands[1], DImode))\n-    operands[1] = copy_to_mode_reg (DImode, operands[1]);\n-}\")\n+  \"{ frv_emit_move (DImode, operands[0], operands[1]); DONE; }\")\n \n (define_insn \"*movdi_double\"\n   [(set (match_operand:DI 0 \"move_destination_operand\" \"=e,?h,??d,??f,R,?R,??m,??m,e,?h,??d,??f,?e,??d,?h,??f,R,m,e,??d,e,??d,?h,??f\")\n@@ -1893,14 +1870,7 @@\n   [(set (match_operand:SF 0 \"general_operand\" \"\")\n \t(match_operand:SF 1 \"general_operand\" \"\"))]\n   \"\"\n-  \"\n-{\n-  if (!reload_in_progress\n-      && !reload_completed\n-      && !register_operand (operands[0], SFmode)\n-      && !reg_or_0_operand (operands[1], SFmode))\n-    operands[1] = copy_to_mode_reg (SFmode, operands[1]);\n-}\")\n+  \"{ frv_emit_move (SFmode, operands[0], operands[1]); DONE; }\")\n \n (define_split\n   [(set (match_operand:SF 0 \"integer_register_operand\" \"\")\n@@ -1962,14 +1932,7 @@\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:DF 1 \"general_operand\" \"\"))]\n   \"\"\n-  \"\n-{\n-  if (!reload_in_progress\n-      && !reload_completed\n-      && !register_operand (operands[0], DFmode)\n-      && !reg_or_0_operand (operands[1], DFmode))\n-    operands[1] = copy_to_mode_reg (DFmode, operands[1]);\n-}\")\n+  \"{ frv_emit_move (DFmode, operands[0], operands[1]); DONE; }\")\n \n (define_insn \"*movdf_double\"\n   [(set (match_operand:DF 0 \"move_destination_operand\" \"=h,?e,??f,??d,R,?R,??m,??m,h,?e,??f,??d,?h,??f,?e,??d,R,m,h,??f,e,??d,e,??d\")"}]}