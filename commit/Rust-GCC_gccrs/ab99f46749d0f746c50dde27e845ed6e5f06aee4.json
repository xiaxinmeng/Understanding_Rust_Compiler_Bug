{"sha": "ab99f46749d0f746c50dde27e845ed6e5f06aee4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5OWY0Njc0OWQwZjc0NmM1MGRkZTI3ZTg0NWVkNmU1ZjA2YWVlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-25T10:49:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-25T10:49:55Z"}, "message": "re PR tree-optimization/70780 (wrong code at -O2 and -O3 on x86_64-linux-gnu)\n\n2016-04-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70780\n\t* tree-ssa-pre.c (compute_antic_aux): Also return true if the block\n\twasn't visited yet.\n\t(compute_antic): Mark blocks with abnormal preds as visited as\n\tthey have a final empty antic-in solution already.\n\n\t* gcc.dg/torture/pr70780.c: New testcase.\n\nFrom-SVN: r235407", "tree": {"sha": "7849aae88789ca5496d8e3c5ad4a134e378b42a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7849aae88789ca5496d8e3c5ad4a134e378b42a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab99f46749d0f746c50dde27e845ed6e5f06aee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab99f46749d0f746c50dde27e845ed6e5f06aee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab99f46749d0f746c50dde27e845ed6e5f06aee4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab99f46749d0f746c50dde27e845ed6e5f06aee4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e52477c7e2525d9ebffcc47de2d226452e6fbafc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e52477c7e2525d9ebffcc47de2d226452e6fbafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e52477c7e2525d9ebffcc47de2d226452e6fbafc"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "2dac38eff7becd79f2c5c9d4deab2ee5ab254b47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab99f46749d0f746c50dde27e845ed6e5f06aee4", "patch": "@@ -1,4 +1,13 @@\n+2016-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70780\n+\t* tree-ssa-pre.c (compute_antic_aux): Also return true if the block\n+\twasn't visited yet.\n+\t(compute_antic): Mark blocks with abnormal preds as visited as\n+\tthey have a final empty antic-in solution already.\n+\n 2016-04-25  Michael Collison  <michael.collison@linaro.org>\n+\n \t* ChangeLog(2016-04-25): Fix ChangeLog formatting.\n \n 2016-04-25  Michael Collison  <michael.collison@linaro.org>"}, {"sha": "bbaa3a2f1a28d5a07450245b776fb67c1d5aefe0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab99f46749d0f746c50dde27e845ed6e5f06aee4", "patch": "@@ -1,3 +1,8 @@\n+2016-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70780\n+\t* gcc.dg/torture/pr70780.c: New testcase.\n+\n 2016-04-25  Michael Collison <michael.collison@arm.com>\n \n \t* testsuite/gcc.target/arm/neon-vaddws16.c: New test."}, {"sha": "2f7a5cbea0660607ec2fadf421511d54a7848644", "filename": "gcc/testsuite/gcc.dg/torture/pr70780.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70780.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70780.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70780.c?ref=ab99f46749d0f746c50dde27e845ed6e5f06aee4", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+\n+int a, b, c, *d, e;\n+\n+static int\n+fn1 () \n+{\n+  if (a)\n+    goto l1;\n+l2: while (b)\n+      if (*d)\n+\treturn c;\n+    for (e = 0; e; e++)\n+      {\n+\tgoto l2;\n+l1:;\n+      }\n+    return 0; \n+}\n+\n+int\n+main ()\n+{\n+  fn1 ();\n+  return 0; \n+}"}, {"sha": "7b9eb2e5b9cd65e2f8c09a545c541c3a844e2c3b", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab99f46749d0f746c50dde27e845ed6e5f06aee4/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=ab99f46749d0f746c50dde27e845ed6e5f06aee4", "patch": "@@ -2077,6 +2077,7 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n   unsigned int bii;\n   edge e;\n   edge_iterator ei;\n+  bool was_visited = BB_VISITED (block);\n \n   old = ANTIC_OUT = S = NULL;\n   BB_VISITED (block) = 1;\n@@ -2167,7 +2168,7 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n \n   clean (ANTIC_IN (block));\n \n-  if (!bitmap_set_equal (old, ANTIC_IN (block)))\n+  if (!was_visited || !bitmap_set_equal (old, ANTIC_IN (block)))\n     changed = true;\n \n  maybe_dump_sets:"}]}