{"sha": "a93d1ba239647d6a1384e0a1f98005aff36465d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkzZDFiYTIzOTY0N2Q2YTEzODRlMGExZjk4MDA1YWZmMzY0NjVkOA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-02-21T20:51:33Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-02-21T20:51:33Z"}, "message": "sh.h (OVERRIDE_OPTIONS): Fix code that clears 'e' register class.\n\n\t* sh.h (OVERRIDE_OPTIONS): Fix code that clears 'e' register class.\n\n\t* sh.md (binary_sf_op): Use extra constant operand instead of\n\tnegating constant operand 4.\n\t* sh.c (sh_expand_binop_v2sf): Supply it.\n\nFrom-SVN: r63243", "tree": {"sha": "82169f6f30253a6384436ad934f95fb6e5b74654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82169f6f30253a6384436ad934f95fb6e5b74654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a93d1ba239647d6a1384e0a1f98005aff36465d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93d1ba239647d6a1384e0a1f98005aff36465d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a93d1ba239647d6a1384e0a1f98005aff36465d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93d1ba239647d6a1384e0a1f98005aff36465d8/comments", "author": null, "committer": null, "parents": [{"sha": "4a06f7f2ec8474a1cc98952ca270adc81c422fc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a06f7f2ec8474a1cc98952ca270adc81c422fc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a06f7f2ec8474a1cc98952ca270adc81c422fc1"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "a0cc8be3d855467af1ae34cd4ac91b62eb68c1c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a93d1ba239647d6a1384e0a1f98005aff36465d8", "patch": "@@ -1,3 +1,11 @@\n+Fri Feb 21 20:41:29 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (OVERRIDE_OPTIONS): Fix code that clears 'e' register class.\n+\n+\t* sh.md (binary_sf_op): Use extra constant operand instead of\n+\tnegating constant operand 4.\n+\t* sh.c (sh_expand_binop_v2sf): Supply it.\n+\n 2003-02-21  Zack Weinberg  <zack@codesourcery.com>\n \n \t* cpphash.h (struct lexer_state): Add directive_wants_padding."}, {"sha": "a0b7a92765e4f8ba2c5b79c106532ea4f39531cc", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=a93d1ba239647d6a1384e0a1f98005aff36465d8", "patch": "@@ -157,7 +157,7 @@ char sh_additional_register_names[ADDREGNAMES_SIZE] \\\n \n /* Provide reg_class from a letter such as appears in the machine\n    description.  *: target independently reserved letter.\n-   reg_class_from_letter['e'] is set to NO_REGS for TARGET_FMOVD.  */\n+   reg_class_from_letter['e' - 'a'] is set to NO_REGS for TARGET_FMOVD.  */\n \n enum reg_class reg_class_from_letter[] =\n {\n@@ -4694,7 +4694,7 @@ calc_live_regs (count_ptr, live_regs_mask)\n \n /* Code to generate prologue and epilogue sequences */\n \n-/* PUSHED is the number of bytes that are bing pushed on the\n+/* PUSHED is the number of bytes that are being pushed on the\n    stack for register saves.  Return the frame size, padded\n    appropriately so that the stack stays properly aligned.  */\n static HOST_WIDE_INT\n@@ -8080,11 +8080,12 @@ sh_expand_binop_v2sf (code, op0, op1, op2)\n {\n   rtx sel0 = const0_rtx;\n   rtx sel1 = const1_rtx;\n-  rtx (*fn) PARAMS ((rtx, rtx, rtx, rtx, rtx, rtx, rtx)) = gen_binary_sf_op;\n+  rtx (*fn) PARAMS ((rtx, rtx, rtx, rtx, rtx, rtx, rtx, rtx))\n+    = gen_binary_sf_op;\n   rtx op = gen_rtx_fmt_ee (code, SFmode, op1, op2);\n \n-  emit_insn ((*fn) (op0, op1, op2, op, sel0, sel0, sel0));\n-  emit_insn ((*fn) (op0, op1, op2, op, sel1, sel1, sel1));\n+  emit_insn ((*fn) (op0, op1, op2, op, sel0, sel0, sel0, sel1));\n+  emit_insn ((*fn) (op0, op1, op2, op, sel1, sel1, sel1, sel0));\n }\n \n /* Return the class of registers for which a mode change from FROM to TO"}, {"sha": "f99ed78d1ed7bd06eb73da99bab59a2cb9156ebd", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=a93d1ba239647d6a1384e0a1f98005aff36465d8", "patch": "@@ -456,7 +456,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n        targetm.asm_out.unaligned_op.di = NULL;\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_FMOVD)\t\t\t\t\t\t\t\\\n-    reg_class_from_letter['e'] = NO_REGS;\t\t\t\t\\\n+    reg_class_from_letter['e' - 'a'] = NO_REGS;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\t\t\\\n     if (! VALID_REGISTER_P (regno))\t\t\t\t\t\\"}, {"sha": "e32d30a49a4d70ec076d8d93b9a4639659830381", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93d1ba239647d6a1384e0a1f98005aff36465d8/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=a93d1ba239647d6a1384e0a1f98005aff36465d8", "patch": "@@ -8048,19 +8048,19 @@\n \t (vec_concat:V2SF\n \t  (vec_select:SF\n \t   (match_dup 0)\n-\t   (parallel [(not:BI (match_operand 4 \"const_int_operand\" \"n\"))]))\n+\t   (parallel [(match_operand 7 \"const_int_operand\" \"n\")]))\n \t  (match_operator:SF 3 \"binary_float_operator\"\n \t    [(vec_select:SF (match_operand:V2SF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t\t    (parallel [(match_operand 5\n \t\t\t\t\t\"const_int_operand\" \"n\")]))\n \t     (vec_select:SF (match_operand:V2SF 2 \"fp_arith_reg_operand\" \"f\")\n \t\t\t    (parallel [(match_operand 6\n \t\t\t\t\t\"const_int_operand\" \"n\")]))]))\n-\t (parallel [(not:BI (match_dup 4)) (match_dup 4)])))]\n-  \"TARGET_SHMEDIA_FPU\"\n+\t (parallel [(match_dup 7) (match_operand 4 \"const_int_operand\" \"n\")])))]\n+  \"TARGET_SHMEDIA_FPU && INTVAL (operands[4]) != INTVAL (operands[7])\"\n   \"#\"\n-  \"TARGET_SHMEDIA_FPU && reload_completed\"\n-  [(set (match_dup 7) (match_dup 8))]\n+  \"&& reload_completed\"\n+  [(set (match_dup 8) (match_dup 9))]\n   \"\n {\n   int endian = TARGET_LITTLE_ENDIAN ? 0 : 1;\n@@ -8071,10 +8071,10 @@\n \t\t\t (true_regnum (operands[2])\n \t\t\t  + (INTVAL (operands[6]) ^ endian)));\n \n-  operands[7] = gen_rtx_REG (SFmode,\n+  operands[8] = gen_rtx_REG (SFmode,\n \t\t\t     (true_regnum (operands[0])\n \t\t\t      + (INTVAL (operands[4]) ^ endian)));\n-  operands[8] = gen_rtx (GET_CODE (operands[3]), SFmode, op1, op2);\n+  operands[9] = gen_rtx (GET_CODE (operands[3]), SFmode, op1, op2);\n }\"\n   [(set_attr \"type\" \"fparith_media\")])\n "}]}