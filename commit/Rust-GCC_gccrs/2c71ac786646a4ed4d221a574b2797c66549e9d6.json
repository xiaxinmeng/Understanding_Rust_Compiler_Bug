{"sha": "2c71ac786646a4ed4d221a574b2797c66549e9d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM3MWFjNzg2NjQ2YTRlZDRkMjIxYTU3NGIyNzk3YzY2NTQ5ZTlkNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-03-03T19:01:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-03-03T19:01:58Z"}, "message": "re PR c++/12909 (ambiguity in mangling vector types)\n\n\tPR c++/12909\n\t* cgraph.h (varpool_node): Add extra_name field.\n\t* varpool.c (varpool_extra_name_alias): New.\n\t(varpool_assemble_decl): Emit extra name aliases.\n\t(varpool_mark_needed_node): Look past an extra name alias.\ncp/\n\t* mangle.c (mangle_decl): Handle VAR_DECL, too.\n\nFrom-SVN: r157203", "tree": {"sha": "b5f41f7d05cddfdd91243f5dd7ab8fd79204aada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5f41f7d05cddfdd91243f5dd7ab8fd79204aada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c71ac786646a4ed4d221a574b2797c66549e9d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c71ac786646a4ed4d221a574b2797c66549e9d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c71ac786646a4ed4d221a574b2797c66549e9d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c71ac786646a4ed4d221a574b2797c66549e9d6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6dcdbd5f673e4005a11419d83c0b99af6a512bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6dcdbd5f673e4005a11419d83c0b99af6a512bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6dcdbd5f673e4005a11419d83c0b99af6a512bb"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "1ae9f6710513eda97a1d08ed468614dbc37d453d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c71ac786646a4ed4d221a574b2797c66549e9d6", "patch": "@@ -1,3 +1,11 @@\n+2010-03-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/12909\n+\t* cgraph.h (varpool_node): Add extra_name field.\n+\t* varpool.c (varpool_extra_name_alias): New.\n+\t(varpool_assemble_decl): Emit extra name aliases.\n+\t(varpool_mark_needed_node): Look past an extra name alias.\n+\n 2010-03-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config.gcc (sparc64-*-solaris2*, sparc-*-solaris2*): Merge into..."}, {"sha": "f8d52ebc5601a951f5e0c205aa192c3a48319f8c", "filename": "gcc/cgraph.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=2c71ac786646a4ed4d221a574b2797c66549e9d6", "patch": "@@ -361,6 +361,9 @@ struct GTY((chain_next (\"%h.next\"))) varpool_node {\n   struct varpool_node *next;\n   /* Pointer to the next function in varpool_nodes_queue.  */\n   struct varpool_node *next_needed;\n+  /* For normal nodes a pointer to the first extra name alias.  For alias\n+     nodes a pointer to the normal node.  */\n+  struct varpool_node *extra_name;\n   /* Ordering of all cgraph nodes.  */\n   int order;\n \n@@ -379,7 +382,8 @@ struct GTY((chain_next (\"%h.next\"))) varpool_node {\n   unsigned output : 1;\n   /* Set when function is visible by other units.  */\n   unsigned externally_visible : 1;\n-  /* Set for aliases once they got through assemble_alias.  */\n+  /* Set for aliases once they got through assemble_alias.  Also set for\n+     extra name aliases in varpool_extra_name_alias.  */\n   unsigned alias : 1;\n };\n \n@@ -574,6 +578,7 @@ bool varpool_assemble_decl (struct varpool_node *node);\n bool varpool_analyze_pending_decls (void);\n void varpool_remove_unreferenced_decls (void);\n void varpool_empty_needed_queue (void);\n+bool varpool_extra_name_alias (tree, tree);\n const char * varpool_node_name (struct varpool_node *node);\n \n /* Walk all reachable static variables.  */"}, {"sha": "3bcefbbdb95a3c995352f47608f29b85739ad517", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=2c71ac786646a4ed4d221a574b2797c66549e9d6", "patch": "@@ -3070,9 +3070,6 @@ mangle_decl (const tree decl)\n \tinform (DECL_SOURCE_LOCATION (decl), \"-fabi-version=4 (or =0) \"\n \t\t\"avoids this error with a change in vector mangling\");\n \n-      if (TREE_CODE (decl) != FUNCTION_DECL)\n-\treturn;\n-\n       save_ver = flag_abi_version;\n       flag_abi_version = 0;\n       id2 = mangle_decl_string (decl);\n@@ -3085,7 +3082,10 @@ mangle_decl (const tree decl)\n       DECL_VISIBILITY (alias) = DECL_VISIBILITY (decl);\n       if (vague_linkage_p (decl))\n \tDECL_WEAK (alias) = 1;\n-      cgraph_same_body_alias (alias, decl);\n+      if (TREE_CODE (decl) == FUNCTION_DECL)\n+\tcgraph_same_body_alias (alias, decl);\n+      else\n+\tvarpool_extra_name_alias (alias, decl);\n     }\n #endif\n }"}, {"sha": "d73d94383b8ee36d0136dbbf0f107c43dd539b61", "filename": "gcc/testsuite/g++.dg/abi/mangle40.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle40.C?ref=2c71ac786646a4ed4d221a574b2797c66549e9d6", "patch": "@@ -3,6 +3,7 @@\n // { dg-options \"-mavx -Wabi -fabi-version=2\" }\n // { dg-final { scan-assembler \"weak\\[^\\n\\]*_Z1fIDv4_fEvT_\" } }\n // { dg-final { scan-assembler \"weak\\[^\\n\\]*_Z1fIU8__vectorfEvT_\" } }\n+// { dg-final { scan-assembler \"weak\\[^\\n\\]*_ZN1AIDv4_fE1tE\" } }\n // { dg-final { scan-assembler \"weak\\[^\\n\\]*_ZN1AIU8__vectorfE1tE\" } }\n \n #include <x86intrin.h>"}, {"sha": "121086e9c97bc7e1ca7a7e85edd77041915ce911", "filename": "gcc/varpool.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c71ac786646a4ed4d221a574b2797c66549e9d6/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=2c71ac786646a4ed4d221a574b2797c66549e9d6", "patch": "@@ -207,6 +207,8 @@ varpool_enqueue_needed_node (struct varpool_node *node)\n void\n varpool_mark_needed_node (struct varpool_node *node)\n {\n+  if (node->alias && node->extra_name)\n+    node = node->extra_name;\n   if (!node->needed && node->finalized\n       && !TREE_ASM_WRITTEN (node->decl))\n     varpool_enqueue_needed_node (node);\n@@ -383,9 +385,22 @@ varpool_assemble_decl (struct varpool_node *node)\n       assemble_variable (decl, 0, 1, 0);\n       if (TREE_ASM_WRITTEN (decl))\n \t{\n+\t  struct varpool_node *alias;\n+\n \t  node->next_needed = varpool_assembled_nodes_queue;\n \t  varpool_assembled_nodes_queue = node;\n \t  node->finalized = 1;\n+\n+\t  /* Also emit any extra name aliases.  */\n+\t  for (alias = node->extra_name; alias; alias = alias->next)\n+\t    {\n+\t      /* Update linkage fields in case they've changed.  */\n+\t      DECL_WEAK (alias->decl) = DECL_WEAK (decl);\n+\t      TREE_PUBLIC (alias->decl) = TREE_PUBLIC (decl);\n+\t      DECL_VISIBILITY (alias->decl) = DECL_VISIBILITY (decl);\n+\t      assemble_alias (alias->decl, DECL_ASSEMBLER_NAME (decl));\n+\t    }\n+\n \t  return true;\n \t}\n     }\n@@ -507,4 +522,40 @@ add_new_static_var (tree type)\n   return new_node->decl;\n }\n \n+/* Attempt to mark ALIAS as an alias to DECL.  Return TRUE if successful.\n+   Extra name aliases are output whenever DECL is output.  */\n+\n+bool\n+varpool_extra_name_alias (tree alias, tree decl)\n+{\n+  struct varpool_node key, *alias_node, *decl_node, **slot;\n+\n+#ifndef ASM_OUTPUT_DEF\n+  /* If aliases aren't supported by the assembler, fail.  */\n+  return false;\n+#endif\n+\n+  gcc_assert (TREE_CODE (decl) == VAR_DECL);\n+  gcc_assert (TREE_CODE (alias) == VAR_DECL);\n+  /* Make sure the hash table has been created.  */\n+  decl_node = varpool_node (decl);\n+\n+  key.decl = alias;\n+\n+  slot = (struct varpool_node **) htab_find_slot (varpool_hash, &key, INSERT);\n+\n+  /* If the varpool_node has been already created, fail.  */\n+  if (*slot)\n+    return false;\n+\n+  alias_node = GGC_CNEW (struct varpool_node);\n+  alias_node->decl = alias;\n+  alias_node->alias = 1;\n+  alias_node->extra_name = decl_node;\n+  alias_node->next = decl_node->extra_name;\n+  decl_node->extra_name = alias_node;\n+  *slot = alias_node;\n+  return true;\n+}\n+\n #include \"gt-varpool.h\""}]}