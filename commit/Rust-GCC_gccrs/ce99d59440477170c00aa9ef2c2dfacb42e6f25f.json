{"sha": "ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5OWQ1OTQ0MDQ3NzE3MGMwMGFhOWVmMmMyZGZhY2I0MmU2ZjI1Zg==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2006-02-14T19:25:36Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2006-02-14T19:25:36Z"}, "message": "re PR fortran/25045 ([4.1 only] DIM argument of PRODUCT is not optional)\n\n2006-02-14  Thomas Koenig  <Thomas.Koenig@online.de>\n\n        PR fortran/25045\n        * check.c (dim_check):  Perform all checks if dim is optional.\n        (gfc_check_minloc_maxloc):  Use dim_check and dim_rank_check\n        to check dim argument.\n        (check_reduction):  Likewise.\n\n2006-02-14  Thomas Koenig  <Thomas.Koenig@online.de>\n\n        PR fortran/25045\n        * optional_dim.f90:  New test.\n\nFrom-SVN: r110994", "tree": {"sha": "3d3ad82e9ba7346317222ce9dd164bc1c566f55b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d3ad82e9ba7346317222ce9dd164bc1c566f55b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/comments", "author": null, "committer": null, "parents": [{"sha": "89031799f4009b0416164a7e77a7b008e63d94ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89031799f4009b0416164a7e77a7b008e63d94ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89031799f4009b0416164a7e77a7b008e63d94ad"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "4cff233a4e937d49662e49fde890819940d7e9c4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "patch": "@@ -1,3 +1,11 @@\n+2006-02-14  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+        PR fortran/25045\n+        * check.c (dim_check):  Perform all checks if dim is optional.\n+        (gfc_check_minloc_maxloc):  Use dim_check and dim_rank_check\n+        to check dim argument.\n+        (check_reduction):  Likewise.\n+\n 2006-02-14  Tobias Schl\ufffd\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/26277"}, {"sha": "6d3fd3d825e52de4e499b9d4a45cf0a57d90bb05", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "patch": "@@ -295,16 +295,8 @@ variable_check (gfc_expr * e, int n)\n static try\n dim_check (gfc_expr * dim, int n, int optional)\n {\n-  if (optional)\n-    {\n-      if (dim == NULL)\n-\treturn SUCCESS;\n-\n-      if (nonoptional_check (dim, n) == FAILURE)\n-\treturn FAILURE;\n-\n-      return SUCCESS;\n-    }\n+  if (optional && dim == NULL)\n+    return SUCCESS;\n \n   if (dim == NULL)\n     {\n@@ -319,6 +311,9 @@ dim_check (gfc_expr * dim, int n, int optional)\n   if (scalar_check (dim, n) == FAILURE)\n     return FAILURE;\n \n+  if (nonoptional_check (dim, n) == FAILURE)\n+    return FAILURE;\n+\n   return SUCCESS;\n }\n \n@@ -1578,9 +1573,10 @@ gfc_check_minloc_maxloc (gfc_actual_arglist * ap)\n       ap->next->next->expr = m;\n     }\n \n-  if (d != NULL\n-      && (scalar_check (d, 1) == FAILURE\n-      || type_check (d, 1, BT_INTEGER) == FAILURE))\n+  if (dim_check (d, 1, 1) == FAILURE)\n+    return FAILURE;\n+\n+  if (dim_rank_check (d, a, 0) == FAILURE)\n     return FAILURE;\n \n   if (m != NULL && type_check (m, 2, BT_LOGICAL) == FAILURE)\n@@ -1634,9 +1630,10 @@ check_reduction (gfc_actual_arglist * ap)\n       ap->next->next->expr = m;\n     }\n \n-  if (d != NULL\n-      && (scalar_check (d, 1) == FAILURE\n-      || type_check (d, 1, BT_INTEGER) == FAILURE))\n+  if (dim_check (d, 1, 1) == FAILURE)\n+    return FAILURE;\n+\n+  if (dim_rank_check (d, a, 0) == FAILURE)\n     return FAILURE;\n \n   if (m != NULL && type_check (m, 2, BT_LOGICAL) == FAILURE)"}, {"sha": "5d4bfafd87f9ddda0c0fb10084e1996d842fcbc0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "patch": "@@ -1,3 +1,8 @@\n+2006-02-14  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+        PR fortran/25045\n+        * optional_dim.f90:  New test.\n+\n 2006-02-14  Tobias Schl\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/26277"}, {"sha": "dd201fbf48a7c56fa13f9f290a8578ff77712dbb", "filename": "gcc/testsuite/gfortran.dg/optional_dim.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ftestsuite%2Fgfortran.dg%2Foptional_dim.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce99d59440477170c00aa9ef2c2dfacb42e6f25f/gcc%2Ftestsuite%2Fgfortran.dg%2Foptional_dim.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foptional_dim.f90?ref=ce99d59440477170c00aa9ef2c2dfacb42e6f25f", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+subroutine foo(a,n)\n+  real, dimension(2) :: a\n+  integer, optional :: n\n+  print *,maxloc(a,dim=n) ! { dg-error \"must not be OPTIONAL\" }\n+  print *,maxloc(a,dim=4) ! { dg-error \"is not a valid dimension index\" }\n+  print *,maxval(a,dim=n) ! { dg-error \"must not be OPTIONAL\" }\n+  print *,maxval(a,dim=4) ! { dg-error \"is not a valid dimension index\" }\n+end subroutine foo\n+  "}]}