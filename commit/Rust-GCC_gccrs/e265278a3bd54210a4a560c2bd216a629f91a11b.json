{"sha": "e265278a3bd54210a4a560c2bd216a629f91a11b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2NTI3OGEzYmQ1NDIxMGE0YTU2MGMyYmQyMTZhNjI5ZjkxYTExYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-20T10:10:20Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-20T10:10:20Z"}, "message": "Fix typo in param description.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi: Fix typo.\n\t* params.opt: Likewise.", "tree": {"sha": "74670508380a5736be93382507370fd2bbc87dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74670508380a5736be93382507370fd2bbc87dc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e265278a3bd54210a4a560c2bd216a629f91a11b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e265278a3bd54210a4a560c2bd216a629f91a11b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e265278a3bd54210a4a560c2bd216a629f91a11b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e265278a3bd54210a4a560c2bd216a629f91a11b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50bc1a879536de42d44c110663d8e132609435c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bc1a879536de42d44c110663d8e132609435c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bc1a879536de42d44c110663d8e132609435c0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4a87b9ef8e8c5c615b84c7f12306816f3cb771cc", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e265278a3bd54210a4a560c2bd216a629f91a11b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e265278a3bd54210a4a560c2bd216a629f91a11b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e265278a3bd54210a4a560c2bd216a629f91a11b", "patch": "@@ -14366,7 +14366,7 @@ per supernode, before terminating analysis.\n \n @item ranger-logical-depth\n Maximum depth of logical expression evaluation ranger will look through\n-when evaluting outgoing edge ranges.\n+when evaluating outgoing edge ranges.\n \n @item openacc-kernels\n Specify mode of OpenACC `kernels' constructs handling."}, {"sha": "2e4cbdd7a713c8fd44f68145068cca94f676a38e", "filename": "gcc/params.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e265278a3bd54210a4a560c2bd216a629f91a11b/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e265278a3bd54210a4a560c2bd216a629f91a11b/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=e265278a3bd54210a4a560c2bd216a629f91a11b", "patch": "@@ -160,7 +160,7 @@ Enum(evrp_mode) String(debug) Value(EVRP_MODE_DEBUG)\n -param=ranger-logical-depth=\n Common Joined UInteger Var(param_ranger_logical_depth) Init(6) IntegerRange(1, 999) Param Optimization\n Maximum depth of logical expression evaluation ranger will look through when\n-evaluting outgoing edge ranges.\n+evaluating outgoing edge ranges.\n \n -param=fsm-maximum-phi-arguments=\n Common Joined UInteger Var(param_fsm_maximum_phi_arguments) Init(100) IntegerRange(1, 999999) Param Optimization"}]}