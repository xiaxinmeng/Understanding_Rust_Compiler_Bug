{"sha": "962eea0a03f8d2f73937f82b7329e97824677920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYyZWVhMGEwM2Y4ZDJmNzM5MzdmODJiNzMyOWU5NzgyNDY3NzkyMA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-02-23T14:05:13Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2005-02-23T14:05:13Z"}, "message": "re PR libffi/20104 (gij fails on ppc and not on x86)\n\n2005-02-22  Andrew Haley  <aph@redhat.com>\n\n\tPR libffi/20104\n        * src/powerpc/ffi.c (ffi_prep_cif_machdep): Bump alignment to\n        odd-numbered register pairs for 64-bit integer types.\n\nFrom-SVN: r95455", "tree": {"sha": "1e5002f9408d7d36ac5f7e50d98d9935198b19c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e5002f9408d7d36ac5f7e50d98d9935198b19c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/962eea0a03f8d2f73937f82b7329e97824677920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962eea0a03f8d2f73937f82b7329e97824677920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/962eea0a03f8d2f73937f82b7329e97824677920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962eea0a03f8d2f73937f82b7329e97824677920/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b05e8bf3c1c63c7d9b069e876aadcba0ced9a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b05e8bf3c1c63c7d9b069e876aadcba0ced9a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b05e8bf3c1c63c7d9b069e876aadcba0ced9a5f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "83a1c2b5d9e115f9a2ebbfcc070353e267147ed4", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962eea0a03f8d2f73937f82b7329e97824677920/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962eea0a03f8d2f73937f82b7329e97824677920/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=962eea0a03f8d2f73937f82b7329e97824677920", "patch": "@@ -1,3 +1,8 @@\n+2005-02-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* src/powerpc/ffi.c (ffi_prep_cif_machdep): Bump alignment to\n+\todd-numbered register pairs for 64-bit integer types.\n+\n 2005-02-23  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \tPR libffi/20104"}, {"sha": "67d945bd8261d852e90b12c0eb27e88e5d4f2b52", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962eea0a03f8d2f73937f82b7329e97824677920/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962eea0a03f8d2f73937f82b7329e97824677920/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=962eea0a03f8d2f73937f82b7329e97824677920", "patch": "@@ -573,10 +573,14 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n \t    /* 'long long' arguments are passed as two words, but\n \t       either both words must fit in registers or both go\n \t       on the stack.  If they go on the stack, they must\n-\t       be 8-byte-aligned.  */\n+\t       be 8-byte-aligned.  \n+\n+\t       Also, only certain register pairs can be used for\n+\t       passing long long int -- specifically (r3,r4), (r5,r6),\n+\t       (r7,r8), (r9,r10).\n+\t    */\n \t    if (intarg_count == NUM_GPR_ARG_REGISTERS-1\n-\t\t|| (intarg_count >= NUM_GPR_ARG_REGISTERS\n-\t\t    && intarg_count%2 != 0))\n+\t\t|| intarg_count%2 != 0)\n \t      intarg_count++;\n \t    intarg_count += 2;\n \t    break;"}]}