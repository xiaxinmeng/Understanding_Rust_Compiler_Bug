{"sha": "3fd64b5a09de7b7128482bb764c9250b474ac78f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkNjRiNWEwOWRlN2I3MTI4NDgyYmI3NjRjOTI1MGI0NzRhYzc4Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-02-08T00:26:58Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-08T00:26:58Z"}, "message": "Runtime.java (_load): Declare.\n\n\t* java/lang/Runtime.java (_load): Declare.\n\t(load, loadLibrary): Wrote in terms of _load.\n\t* java/lang/natRuntime.cc (load): Call JNI_OnLoad if it appears in\n\tlibrary.\n\t(loadLibrary): Likewise.\n\tInclude <jni.h>.\n\t(_load): New method.\n\t(loadLibrary, load): Removed.\n\nFrom-SVN: r31846", "tree": {"sha": "8f96de6d10a1be2f4df62afb63420832f7de519b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f96de6d10a1be2f4df62afb63420832f7de519b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fd64b5a09de7b7128482bb764c9250b474ac78f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd64b5a09de7b7128482bb764c9250b474ac78f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd64b5a09de7b7128482bb764c9250b474ac78f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd64b5a09de7b7128482bb764c9250b474ac78f/comments", "author": null, "committer": null, "parents": [{"sha": "278abd2849d9546d8591ba88541a50b11d8337ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/278abd2849d9546d8591ba88541a50b11d8337ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/278abd2849d9546d8591ba88541a50b11d8337ec"}], "stats": {"total": 65, "additions": 37, "deletions": 28}, "files": [{"sha": "7f4d8bfca75b7f3ad99167989297d7c2b50ef185", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd64b5a09de7b7128482bb764c9250b474ac78f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd64b5a09de7b7128482bb764c9250b474ac78f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3fd64b5a09de7b7128482bb764c9250b474ac78f", "patch": "@@ -1,5 +1,14 @@\n 2000-02-07  Tom Tromey  <tromey@cygnus.com>\n \n+\t* java/lang/Runtime.java (_load): Declare.\n+\t(load, loadLibrary): Wrote in terms of _load.\n+\t* java/lang/natRuntime.cc (load): Call JNI_OnLoad if it appears in\n+\tlibrary.\n+\t(loadLibrary): Likewise.\n+\tInclude <jni.h>.\n+\t(_load): New method.\n+\t(loadLibrary, load): Removed.\n+\n \t* jni.cc (ThrowableClass): New define.\n \t(_Jv_JNI_Throw): Check argument.\n \t(_Jv_JNI_ThrowNew): Likewise."}, {"sha": "752733e2724673154b18b8c992969e2346204824", "filename": "libjava/java/lang/Runtime.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd64b5a09de7b7128482bb764c9250b474ac78f/libjava%2Fjava%2Flang%2FRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd64b5a09de7b7128482bb764c9250b474ac78f/libjava%2Fjava%2Flang%2FRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FRuntime.java?ref=3fd64b5a09de7b7128482bb764c9250b474ac78f", "patch": "@@ -23,8 +23,7 @@\n /* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3\n  * \"The Java Language Specification\", ISBN 0-201-63451-1\n  * plus online API docs for JDK 1.2 beta from http://www.javasoft.com.\n- * Status:  All 1.1 methods exist.  exec(), load(), and loadLibrary()\n- * are not fully implemented.\n+ * Status:  All 1.1 methods exist.  exec() is not fully implemented.\n  */\n \n public class Runtime\n@@ -94,8 +93,17 @@ private final void checkLink (String lib)\n       s.checkLink(lib);\n   }\n \n-  public native void load (String pathname);\n-  public native void loadLibrary (String libname);\n+  private native void _load (String pathname, boolean do_search);\n+\n+  public void load (String pathname)\n+  {\n+    _load (pathname, false);\n+  }\n+\n+  public void loadLibrary (String libname)\n+  {\n+    _load (libname, true);\n+  }\n \n   // This is a helper function for the ClassLoader which can load\n   // compiled libraries.  Returns true if library (which is just the"}, {"sha": "d391ff42d6ba2b37794fc7c01dfa454a180a68f9", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd64b5a09de7b7128482bb764c9250b474ac78f/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd64b5a09de7b7128482bb764c9250b474ac78f/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=3fd64b5a09de7b7128482bb764c9250b474ac78f", "patch": "@@ -18,6 +18,8 @@ details.  */\n #include <java/lang/UnknownError.h>\n #include <java/lang/UnsatisfiedLinkError.h>\n \n+#include <jni.h>\n+\n #ifdef USE_LTDL\n #include <ltdl.h>\n \n@@ -99,7 +101,7 @@ java::lang::Runtime::gc (void)\n }\n \n void\n-java::lang::Runtime::load (jstring path)\n+java::lang::Runtime::_load (jstring path, jboolean do_search)\n {\n   JvSynchronize sync (this);\n   checkLink (path);\n@@ -110,39 +112,29 @@ java::lang::Runtime::load (jstring path)\n   jsize total = JvGetStringUTFRegion (path, 0, path->length(), buf);\n   buf[total] = '\\0';\n   // FIXME: make sure path is absolute.\n-  lt_dlhandle h = lt_dlopen (buf);\n+  lt_dlhandle h = do_search ? lt_dlopenext (buf) : lt_dlopen (buf);\n   if (h == NULL)\n     {\n       const char *msg = lt_dlerror ();\n       _Jv_Throw (new UnsatisfiedLinkError (JvNewStringLatin1 (msg)));\n     }\n-#else\n-  _Jv_Throw (new UnknownError\n-\t     (JvNewStringLatin1 (\"Runtime.load not implemented\")));\n-#endif /* USE_LTDL */\n-}\n \n-void\n-java::lang::Runtime::loadLibrary (jstring lib)\n-{\n-  JvSynchronize sync (this);\n-  checkLink (lib);\n-  using namespace java::lang;\n-#ifdef USE_LTDL\n-  jint len = _Jv_GetStringUTFLength (lib);\n-  char buf[len + 1];\n-  jsize total = JvGetStringUTFRegion (lib, 0, lib->length(), buf);\n-  buf[total] = '\\0';\n-  // FIXME: make sure path is absolute.\n-  lt_dlhandle h = lt_dlopenext (buf);\n-  if (h == NULL)\n+  void *onload = lt_dlsym (h, \"JNI_OnLoad\");\n+  if (onload != NULL)\n     {\n-      const char *msg = lt_dlerror ();\n-      _Jv_Throw (new UnsatisfiedLinkError (JvNewStringLatin1 (msg)));\n+      // FIXME: need invocation API to get JavaVM.\n+      jint vers = ((jint (*) (...)) onload) (NULL, NULL);\n+      if (vers != JNI_VERSION_1_1 && vers != JNI_VERSION_1_2)\n+\t{\n+\t  // FIXME: unload the library.\n+\t  _Jv_Throw (new UnsatisfiedLinkError (JvNewStringLatin1 (\"unrecognized version from JNI_OnLoad\")));\n+\t}\n     }\n #else\n   _Jv_Throw (new UnknownError\n-\t     (JvNewStringLatin1 (\"Runtime.loadLibrary not implemented\")));\n+\t     (JvNewStringLatin1 (do_search\n+\t\t\t\t ? \"Runtime.loadLibrary not implemented\"\n+\t\t\t\t : \"Runtime.load not implemented\")));\n #endif /* USE_LTDL */\n }\n "}]}