{"sha": "94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiYjVkMGMxZWVmY2QzOWNmOWY0MTQ2ZWI3MTZjNjVkMmViMGI4Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-03-27T19:19:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-03-27T19:19:14Z"}, "message": "i386.md (call_pop_0, [...]): New.\n\n        * i386.md (call_pop_0, call_value_pop_0): New.\n        (call_pop_1): Remove constraint from unused arg.  Support sibcalls.\n        (call_value_pop_1): Likewise.\n        (call_0, call_value_0): New.\n        (call_1, call_value_1): Remove constraint from unused arg.\n\nFrom-SVN: r32768", "tree": {"sha": "68141be2f5004d2ae9c265860641a9c3fa03f3d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68141be2f5004d2ae9c265860641a9c3fa03f3d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86/comments", "author": null, "committer": null, "parents": [{"sha": "d630442f9d80a2e08f067773954db55a8cd39744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d630442f9d80a2e08f067773954db55a8cd39744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d630442f9d80a2e08f067773954db55a8cd39744"}], "stats": {"total": 112, "additions": 94, "deletions": 18}, "files": [{"sha": "9bbae4be37d42f56b588ec98d785bbbc5d47d8ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86", "patch": "@@ -1,3 +1,11 @@\n+2000-03-27  Richard Henderson  <rth@cygnus.com>\n+\n+\t* i386.md (call_pop_0, call_value_pop_0): New.\n+\t(call_pop_1): Remove constraint from unused arg.  Support sibcalls.\n+\t(call_value_pop_1): Likewise.\n+\t(call_0, call_value_0): New.\n+\t(call_1, call_value_1): Remove constraint from unused arg.\n+\n 2000-03-27  Nick Clifton  <nickc@cygnus.com>\n \n \t* invoke.texi (Spec Files): Document new spec % command created by"}, {"sha": "2b48b0a12db30ff7fbc15111b6764a84d27a446e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 86, "deletions": 18, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=94bb5d0c1eefcd39cf9f4146eb716c65d2eb0b86", "patch": "@@ -7039,19 +7039,41 @@\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n }\")\n \n+(define_insn \"*call_pop_0\"\n+  [(call (match_operand:QI 0 \"constant_call_address_operand\" \"\")\n+\t (match_operand:SI 1 \"\" \"\"))\n+   (set (reg:SI 7) (plus:SI (reg:SI 7)\n+\t\t\t    (match_operand:SI 3 \"immediate_operand\" \"\")))]\n+  \"\"\n+  \"*\n+{\n+  if (SIBLING_CALL_P (insn))\n+    return \\\"jmp\\\\t%P0\\\";\n+  else\n+    return \\\"call\\\\t%P0\\\";\n+}\"\n+  [(set_attr \"type\" \"call\")])\n+  \n (define_insn \"*call_pop_1\"\n   [(call (match_operand:QI 0 \"call_insn_operand\" \"m\")\n-\t (match_operand:SI 1 \"general_operand\" \"g\"))\n+\t (match_operand:SI 1 \"\" \"\"))\n    (set (reg:SI 7) (plus:SI (reg:SI 7)\n \t\t\t    (match_operand:SI 3 \"immediate_operand\" \"i\")))]\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[0], GET_MODE (operands[0])))\n-    return \\\"call\\\\t%P0\\\";\n-  \n+  if (constant_call_address_operand (operands[0], QImode))\n+    {\n+      if (SIBLING_CALL_P (insn))\n+\treturn \\\"jmp\\\\t%P0\\\";\n+      else\n+\treturn \\\"call\\\\t%P0\\\";\n+    }\n   operands[0] = XEXP (operands[0], 0);\n-  return \\\"call\\\\t%*%0\\\";\n+  if (SIBLING_CALL_P (insn))\n+    return \\\"jmp\\\\t%*%0\\\";\n+  else\n+    return \\\"call\\\\t%*%0\\\";\n }\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -7070,21 +7092,32 @@\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n }\")\n \n+(define_insn \"*call_0\"\n+  [(call (match_operand:QI 0 \"constant_call_address_operand\" \"\")\n+\t (match_operand:SI 1 \"\" \"\"))]\n+  \"\"\n+  \"*\n+{\n+  if (SIBLING_CALL_P (insn))\n+    return \\\"jmp\\\\t%P0\\\";\n+  else\n+    return \\\"call\\\\t%P0\\\";\n+}\"\n+  [(set_attr \"type\" \"call\")])\n+\n (define_insn \"*call_1\"\n   [(call (match_operand:QI 0 \"call_insn_operand\" \"m\")\n-\t (match_operand:SI 1 \"general_operand\" \"g\"))]\n-  ;; Operand 1 not used on the i386.\n+\t (match_operand:SI 1 \"\" \"\"))]\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[0], GET_MODE (operands[0])))\n+  if (constant_call_address_operand (operands[0], QImode))\n     {\n       if (SIBLING_CALL_P (insn))\n \treturn \\\"jmp\\\\t%P0\\\";\n       else\n \treturn \\\"call\\\\t%P0\\\";\n     }\n-\n   operands[0] = XEXP (operands[0], 0);\n   if (SIBLING_CALL_P (insn))\n     return \\\"jmp\\\\t%*%0\\\";\n@@ -9363,39 +9396,74 @@\n ;; Call-value patterns last so that the wildcard operand does not\n ;; disrupt insn-recog's switch tables.\n \n+(define_insn \"*call_value_pop_0\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n+\t      (match_operand:SI 2 \"\" \"\")))\n+   (set (reg:SI 7) (plus:SI (reg:SI 7)\n+\t\t\t    (match_operand:SI 4 \"immediate_operand\" \"\")))]\n+  \"\"\n+  \"*\n+{\n+  if (SIBLING_CALL_P (insn))\n+    return \\\"jmp\\\\t%P1\\\";\n+  else\n+    return \\\"call\\\\t%P1\\\";\n+}\"\n+  [(set_attr \"type\" \"callv\")])\n+\n (define_insn \"*call_value_pop_1\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n-\t      (match_operand:SI 2 \"general_operand\" \"g\")))\n+\t      (match_operand:SI 2 \"\" \"\")))\n    (set (reg:SI 7) (plus:SI (reg:SI 7)\n \t\t\t    (match_operand:SI 4 \"immediate_operand\" \"i\")))]\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n-    return \\\"call\\\\t%P1\\\";\n-  \n+  if (constant_call_address_operand (operands[1], QImode))\n+    {\n+      if (SIBLING_CALL_P (insn))\n+\treturn \\\"jmp\\\\t%P1\\\";\n+      else\n+\treturn \\\"call\\\\t%P1\\\";\n+    }\n   operands[1] = XEXP (operands[1], 0);\n-  return \\\"call\\\\t%*%1\\\";\n+  if (SIBLING_CALL_P (insn))\n+    return \\\"jmp\\\\t%*%1\\\";\n+  else\n+    return \\\"call\\\\t%*%1\\\";\n+}\"\n+  [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*call_value_0\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n+\t      (match_operand:SI 2 \"\" \"\")))]\n+  \"\"\n+  \"*\n+{\n+  if (SIBLING_CALL_P (insn))\n+    return \\\"jmp\\\\t%P1\\\";\n+  else\n+    return \\\"call\\\\t%P1\\\";\n }\"\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn \"*call_value_1\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n-\t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n-  ;; Operand 2 not used on the i386.\n+\t      (match_operand:SI 2 \"\" \"\")))]\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n+  if (constant_call_address_operand (operands[1], QImode))\n     {\n       if (SIBLING_CALL_P (insn))\n \treturn \\\"jmp\\\\t%P1\\\";\n       else\n \treturn \\\"call\\\\t%P1\\\";\n     }\n-  \n   operands[1] = XEXP (operands[1], 0);\n   if (SIBLING_CALL_P (insn))\n     return \\\"jmp\\\\t%*%1\\\";"}]}