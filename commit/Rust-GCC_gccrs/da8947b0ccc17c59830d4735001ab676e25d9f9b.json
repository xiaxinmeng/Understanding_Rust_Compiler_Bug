{"sha": "da8947b0ccc17c59830d4735001ab676e25d9f9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4OTQ3YjBjY2MxN2M1OTgzMGQ0NzM1MDAxYWI2NzZlMjVkOWY5Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2004-12-15T06:54:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2004-12-15T06:54:53Z"}, "message": "* config/i386/i386.md (floathisf2, *floathisf2_1, floatsisf2,\n\n\t*floatsisf2_i387, *floatsisf2_sse, floatdisf2,\n\t*floatdisf2_i387_only, *floatdisf2_i387, *floatdisf2_sse,\n\tfloathidf2, *floathidf2_1, *floatsidf2_i387, *floatsidf2_sse,\n\tfloatdidf2, *floatdidf2_i387_only, *floatdidf2_i387,\n\t*floatdidf2_sse, floatunssisf2, floatunsdisf2, floatunsdidf2):\n\tUnify enable constraint with respect to TARGET_80387, TARGET_SSE,\n\tTARGET_SSE2, TARGET_64BIT, TARGET_SSE_MATH and TARGET_MIX_SSE_I387.\n\t(*float?i?f_i387): Rename to *float?i?f2_mixed.\n\t(*float?i?f2_1): Rename to *float?i?f2_i387.\n\t(*float?i?f2_i387_only): Rename to *float?i?f2_i387.\n\t(float?ixf2): Penalize integer register operand.\n\nFrom-SVN: r92178", "tree": {"sha": "9575c0a836552d8ad4b61449df600ff2cd068f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9575c0a836552d8ad4b61449df600ff2cd068f54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da8947b0ccc17c59830d4735001ab676e25d9f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8947b0ccc17c59830d4735001ab676e25d9f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8947b0ccc17c59830d4735001ab676e25d9f9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8947b0ccc17c59830d4735001ab676e25d9f9b/comments", "author": null, "committer": null, "parents": [{"sha": "e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41f3691b90d1ff924c6d31530f60d7180f8f4e8"}], "stats": {"total": 147, "additions": 94, "deletions": 53}, "files": [{"sha": "7a6a3de89d91aa67d10898221bc89258ee780165", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8947b0ccc17c59830d4735001ab676e25d9f9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8947b0ccc17c59830d4735001ab676e25d9f9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da8947b0ccc17c59830d4735001ab676e25d9f9b", "patch": "@@ -1,3 +1,18 @@\n+2004-12-15  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.md (floathisf2, *floathisf2_1, floatsisf2,\n+\t*floatsisf2_i387, *floatsisf2_sse, floatdisf2,\n+\t*floatdisf2_i387_only, *floatdisf2_i387, *floatdisf2_sse,\n+\tfloathidf2, *floathidf2_1, *floatsidf2_i387, *floatsidf2_sse,\n+\tfloatdidf2, *floatdidf2_i387_only, *floatdidf2_i387,\n+\t*floatdidf2_sse, floatunssisf2, floatunsdisf2, floatunsdidf2):\n+\tUnify enable constraint with respect to TARGET_80387, TARGET_SSE,\n+\tTARGET_SSE2, TARGET_64BIT, TARGET_SSE_MATH and TARGET_MIX_SSE_I387.\n+\t(*float?i?f_i387): Rename to *float?i?f2_mixed.\n+\t(*float?i?f2_1): Rename to *float?i?f2_i387.\n+\t(*float?i?f2_i387_only): Rename to *float?i?f2_i387.\n+\t(float?ixf2): Penalize integer register operand.\n+\n 2004-12-14  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR c++/17242"}, {"sha": "bf938be76c6ed006995ced2e45f6dbfadce9bc9e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 79, "deletions": 53, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8947b0ccc17c59830d4735001ab676e25d9f9b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8947b0ccc17c59830d4735001ab676e25d9f9b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=da8947b0ccc17c59830d4735001ab676e25d9f9b", "patch": "@@ -4440,20 +4440,20 @@\n (define_expand \"floathisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE || TARGET_80387\"\n+  \"TARGET_80387 || TARGET_SSE_MATH\"\n {\n-  if (TARGET_SSE && TARGET_SSE_MATH)\n+  if (TARGET_SSE_MATH)\n     {\n       emit_insn (gen_floatsisf2 (operands[0],\n \t\t\t\t convert_to_mode (SImode, operands[1], 0)));\n       DONE;\n     }\n })\n \n-(define_insn \"*floathisf2_1\"\n+(define_insn \"*floathisf2_i387\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387 && (!TARGET_SSE || !TARGET_SSE_MATH)\"\n+\t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387 && !TARGET_SSE_MATH\"\n   \"@\n    fild%z1\\t%1\n    #\"\n@@ -4464,13 +4464,13 @@\n (define_expand \"floatsisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE || TARGET_80387\"\n+  \"TARGET_80387 || TARGET_SSE_MATH\"\n   \"\")\n \n-(define_insn \"*floatsisf2_i387\"\n+(define_insn \"*floatsisf2_mixed\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f#x,?f#x,x#f,x#f\")\n \t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n-  \"TARGET_80387 && (!TARGET_SSE || TARGET_MIX_SSE_I387)\"\n+  \"TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n    #\n@@ -4484,7 +4484,7 @@\n (define_insn \"*floatsisf2_sse\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n \t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"r,mr\")))]\n-  \"TARGET_SSE\"\n+  \"TARGET_SSE_MATH\"\n   \"cvtsi2ss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"mode\" \"SF\")\n@@ -4496,7 +4496,8 @@\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 && reload_completed && TARGET_SSE_PARTIAL_REGS\n+  \"reload_completed\n+   && TARGET_SSE_MATH && TARGET_SSE_PARTIAL_REGS\n    && SSE_REG_P (operands[0])\"\n   [(const_int 0)]\n {\n@@ -4507,27 +4508,27 @@\n   DONE;\n })\n \n-(define_expand \"floatdisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n-  \"(TARGET_64BIT && TARGET_SSE) || TARGET_80387\"\n-  \"\")\n-\n-(define_insn \"*floatdisf2_i387_only\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,?f\")\n-\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387 && (!TARGET_SSE || !TARGET_64BIT || TARGET_MIX_SSE_I387)\"\n+(define_insn \"*floatsisf2_i387\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*floatdisf2_i387\"\n+(define_expand \"floatdisf2\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (TARGET_64BIT && TARGET_SSE_MATH)\"\n+  \"\")\n+\n+(define_insn \"*floatdisf2_mixed\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f#x,?f#x,x#f,x#f\")\n \t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n-  \"TARGET_64BIT && TARGET_80387 && (!TARGET_SSE || TARGET_MIX_SSE_I387)\"\n+  \"TARGET_64BIT && TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n    #\n@@ -4541,7 +4542,7 @@\n (define_insn \"*floatdisf2_sse\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n \t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"r,mr\")))]\n-  \"TARGET_64BIT && TARGET_SSE\"\n+  \"TARGET_64BIT && TARGET_SSE_MATH\"\n   \"cvtsi2ss{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"mode\" \"SF\")\n@@ -4553,7 +4554,8 @@\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 && reload_completed && TARGET_SSE_PARTIAL_REGS\n+  \"reload_completed\n+   && TARGET_64BIT && TARGET_SSE_MATH && TARGET_SSE_PARTIAL_REGS\n    && SSE_REG_P (operands[0])\"\n   [(const_int 0)]\n {\n@@ -4564,23 +4566,34 @@\n   DONE;\n })\n \n+(define_insn \"*floatdisf2_i387\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387\"\n+  \"@\n+   fild%z1\\t%1\n+   #\"\n+  [(set_attr \"type\" \"fmov,multi\")\n+   (set_attr \"mode\" \"SF\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n (define_expand \"floathidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2 || TARGET_80387\"\n+  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n {\n-  if (TARGET_SSE && TARGET_SSE_MATH)\n+  if (TARGET_SSE2 && TARGET_SSE_MATH)\n     {\n       emit_insn (gen_floatsidf2 (operands[0],\n \t\t\t\t convert_to_mode (SImode, operands[1], 0)));\n       DONE;\n     }\n })\n \n-(define_insn \"*floathidf2_1\"\n+(define_insn \"*floathidf2_i387\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387 && (!TARGET_SSE2 || !TARGET_SSE_MATH)\"\n+\t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387 && !(TARGET_SSE2 && TARGET_SSE_MATH)\"\n   \"@\n    fild%z1\\t%1\n    #\"\n@@ -4591,13 +4604,13 @@\n (define_expand \"floatsidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || TARGET_SSE2\"\n+  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n   \"\")\n \n-(define_insn \"*floatsidf2_i387\"\n+(define_insn \"*floatsidf2_mixed\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f#Y,?f#Y,Y#f,Y#f\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n-  \"TARGET_80387 && (!TARGET_SSE2 || TARGET_MIX_SSE_I387)\"\n+  \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n    #\n@@ -4611,34 +4624,34 @@\n (define_insn \"*floatsidf2_sse\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=Y,Y\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"r,mr\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtsi2sd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"athlon_decode\" \"double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_expand \"floatdidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n-  \"(TARGET_64BIT && TARGET_SSE2) || TARGET_80387\"\n-  \"\")\n-\n-(define_insn \"*floatdidf2_i387_only\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f\")\n-\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387 && (!TARGET_SSE2 || !TARGET_64BIT)\"\n+(define_insn \"*floatsidf2_i387\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*floatdidf2_i387\"\n+(define_expand \"floatdidf2\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (TARGET_64BIT && TARGET_SSE2 && TARGET_SSE_MATH)\"\n+  \"\")\n+\n+(define_insn \"*floatdidf2_mixed\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f#Y,?f#Y,Y#f,Y#f\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n-  \"TARGET_64BIT && TARGET_80387 && (!TARGET_SSE2 || TARGET_MIX_SSE_I387)\"\n+  \"TARGET_64BIT && TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n    #\n@@ -4652,16 +4665,27 @@\n (define_insn \"*floatdidf2_sse\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=Y,Y\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"r,mr\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_64BIT && TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtsi2sd{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"athlon_decode\" \"double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n+(define_insn \"*floatdidf2_i387\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387\"\n+  \"@\n+   fild%z1\\t%1\n+   #\"\n+  [(set_attr \"type\" \"fmov,multi\")\n+   (set_attr \"mode\" \"DF\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n (define_insn \"floathixf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(float:XF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n+\t(float:XF (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n@@ -4672,7 +4696,7 @@\n \n (define_insn \"floatsixf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(float:XF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r\")))]\n+\t(float:XF (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n@@ -4683,7 +4707,7 @@\n \n (define_insn \"floatdixf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(float:XF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r\")))]\n+\t(float:XF (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n@@ -4696,7 +4720,9 @@\n (define_split\n   [(set (match_operand 0 \"fp_register_operand\" \"\")\n \t(float (match_operand 1 \"register_operand\" \"\")))]\n-  \"reload_completed && FLOAT_MODE_P (GET_MODE (operands[0]))\"\n+  \"reload_completed\n+   && TARGET_80387\n+   && FLOAT_MODE_P (GET_MODE (operands[0]))\"\n   [(const_int 0)]\n {\n   operands[2] = ix86_force_to_memory (GET_MODE (operands[1]), operands[1]);\n@@ -4709,19 +4735,19 @@\n (define_expand \"floatunssisf2\"\n   [(use (match_operand:SF 0 \"register_operand\" \"\"))\n    (use (match_operand:SI 1 \"register_operand\" \"\"))]\n-  \"TARGET_SSE && TARGET_SSE_MATH && !TARGET_64BIT\"\n+  \"!TARGET_64BIT && TARGET_SSE_MATH\"\n   \"x86_emit_floatuns (operands); DONE;\")\n \n (define_expand \"floatunsdisf2\"\n   [(use (match_operand:SF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"TARGET_SSE && TARGET_SSE_MATH && TARGET_64BIT\"\n+  \"TARGET_64BIT && TARGET_SSE_MATH\"\n   \"x86_emit_floatuns (operands); DONE;\")\n \n (define_expand \"floatunsdidf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"TARGET_SSE2 && TARGET_SSE_MATH && TARGET_64BIT\"\n+  \"TARGET_64BIT && TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"x86_emit_floatuns (operands); DONE;\")\n \f\n ;; SSE extract/set expanders"}]}