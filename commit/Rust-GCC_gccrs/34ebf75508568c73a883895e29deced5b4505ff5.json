{"sha": "34ebf75508568c73a883895e29deced5b4505ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRlYmY3NTUwODU2OGM3M2E4ODM4OTVlMjlkZWNlZDViNDUwNWZmNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-31T06:54:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-31T06:54:42Z"}, "message": "mips.md (fcond): New code macro and attribute.\n\n\t* config/mips/mips.md (fcond): New code macro and attribute.\n\t(sunordered_[sd]f, suneq_[sd]f, sunlt_[sd]f, sunle_[sd]f)\n\t(seq_[sd]f, slt_[sd]f, sle_[sd]f): Redefine using :SCALARF and fcond.\n\t(sgt_[sd]f, sge_[sd]f): Redefine using :SCALARF.\n\nFrom-SVN: r86821", "tree": {"sha": "8dc7a4a8872e604802a0a4efee52addb14495388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dc7a4a8872e604802a0a4efee52addb14495388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34ebf75508568c73a883895e29deced5b4505ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ebf75508568c73a883895e29deced5b4505ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ebf75508568c73a883895e29deced5b4505ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ebf75508568c73a883895e29deced5b4505ff5/comments", "author": null, "committer": null, "parents": [{"sha": "9b76aa3b1b09b823ab4604a8a3abce76d447a5b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b76aa3b1b09b823ab4604a8a3abce76d447a5b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b76aa3b1b09b823ab4604a8a3abce76d447a5b9"}], "stats": {"total": 185, "additions": 35, "deletions": 150}, "files": [{"sha": "99dbaf7fc4279af856764ebc5be3e3bb4afaa743", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ebf75508568c73a883895e29deced5b4505ff5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ebf75508568c73a883895e29deced5b4505ff5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34ebf75508568c73a883895e29deced5b4505ff5", "patch": "@@ -1,3 +1,10 @@\n+2004-08-31  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (fcond): New code macro and attribute.\n+\t(sunordered_[sd]f, suneq_[sd]f, sunlt_[sd]f, sunle_[sd]f)\n+\t(seq_[sd]f, slt_[sd]f, sle_[sd]f): Redefine using :SCALARF and fcond.\n+\t(sgt_[sd]f, sge_[sd]f): Redefine using :SCALARF.\n+\n 2004-08-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tRevert:"}, {"sha": "7fa4b08fa854a56e99c48759cd0bf95ef4ad6a8d", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 28, "deletions": 150, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ebf75508568c73a883895e29deced5b4505ff5/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ebf75508568c73a883895e29deced5b4505ff5/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=34ebf75508568c73a883895e29deced5b4505ff5", "patch": "@@ -381,6 +381,10 @@\n ;; from the same template.\n (define_code_macro any_shift [ashift ashiftrt lshiftrt])\n \n+;; This code macro allows all native floating-point comparisons to be\n+;; generated from the same template.\n+(define_code_macro fcond [unordered uneq unlt unle eq lt le])\n+\n ;; <u> expands to an empty string when doing a signed operation and\n ;; \"u\" when doing an unsigned operation.\n (define_code_attr u [(sign_extend \"\") (zero_extend \"u\")])\n@@ -397,6 +401,15 @@\n (define_code_attr insn [(ashift \"sll\")\n \t\t\t(ashiftrt \"sra\")\n \t\t\t(lshiftrt \"srl\")])\n+\n+;; <fcond> is the c.cond.fmt condition associated with a particular code.\n+(define_code_attr fcond [(unordered \"un\")\n+\t\t\t (uneq \"ueq\")\n+\t\t\t (unlt \"ult\")\n+\t\t\t (unle \"ule\")\n+\t\t\t (eq \"eq\")\n+\t\t\t (lt \"lt\")\n+\t\t\t (le \"le\")])\n \f\n ;; .........................\n ;;\n@@ -4731,165 +4744,30 @@ beq\\t%2,%.,1b\\;\\\n ;;\n ;;  ....................\n \n-(define_insn \"sunordered_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unordered:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.un.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sunlt_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unlt:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.ult.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"suneq_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(uneq:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.ueq.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sunle_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unle:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.ule.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"seq_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(eq:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t       (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.eq.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"slt_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(lt:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t       (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.lt.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sle_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(le:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t       (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.le.d\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sgt_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(gt:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t       (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.lt.d\\t%Z0%2,%1\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sge_df\"\n+(define_insn \"s<code>_<mode>\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(ge:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t       (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"c.le.d\\t%Z0%2,%1\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sunordered_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unordered:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.un.s\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sunlt_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unlt:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.ult.s\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"suneq_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(uneq:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.ueq.s\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sunle_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unle:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.ule.s\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"seq_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(eq:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t       (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.eq.s\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"slt_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(lt:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t       (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.lt.s\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"sle_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(le:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t       (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.le.s\\t%Z0%1,%2\"\n+\t(fcond:CC (match_operand:SCALARF 1 \"register_operand\" \"f\")\n+\t\t  (match_operand:SCALARF 2 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"c.<fcond>.<fmt>\\t%Z0%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"sgt_sf\"\n+(define_insn \"sgt_<mode>\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(gt:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t       (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.lt.s\\t%Z0%2,%1\"\n+\t(gt:CC (match_operand:SCALARF 1 \"register_operand\" \"f\")\n+\t       (match_operand:SCALARF 2 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"c.lt.<fmt>\\t%Z0%2,%1\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"sge_sf\"\n+(define_insn \"sge_<mode>\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(ge:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t       (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"c.le.s\\t%Z0%2,%1\"\n+\t(ge:CC (match_operand:SCALARF 1 \"register_operand\" \"f\")\n+\t       (match_operand:SCALARF 2 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"c.le.<fmt>\\t%Z0%2,%1\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n \f"}]}