{"sha": "0d7924f2e766834e4fec84ff093f4c355fea6be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ3OTI0ZjJlNzY2ODM0ZTRmZWM4NGZmMDkzZjRjMzU1ZmVhNmJlMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-12T08:31:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-12T08:31:01Z"}, "message": "P0595R2 - is_constant_evaluated\n\n\tP0595R2 - is_constant_evaluated\n\t* include/bits/c++config (_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED):\n\tDefine if __builtin_is_constant_evaluated is available.\n\t* include/std/type_traits (std::is_constant_evaluated): New constexpr\n\tinline function.\n\t* testsuite/20_util/is_constant_evaluated/1.cc: New test.\n\t* testsuite/20_util/is_constant_evaluated/noexcept.cc: New test.\n\nFrom-SVN: r267045", "tree": {"sha": "93795a415d66bf514bcedfb5b91ef21766532313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93795a415d66bf514bcedfb5b91ef21766532313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d7924f2e766834e4fec84ff093f4c355fea6be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7924f2e766834e4fec84ff093f4c355fea6be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7924f2e766834e4fec84ff093f4c355fea6be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7924f2e766834e4fec84ff093f4c355fea6be1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cce3ae91f21f185756f604f529501810d8025f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce3ae91f21f185756f604f529501810d8025f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce3ae91f21f185756f604f529501810d8025f37"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "81dc78be2606466e9627251c83347141e8f646e2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0d7924f2e766834e4fec84ff093f4c355fea6be1", "patch": "@@ -1,3 +1,13 @@\n+2018-12-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tP0595R2 - is_constant_evaluated\n+\t* include/bits/c++config (_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED):\n+\tDefine if __builtin_is_constant_evaluated is available.\n+\t* include/std/type_traits (std::is_constant_evaluated): New constexpr\n+\tinline function.\n+\t* testsuite/20_util/is_constant_evaluated/1.cc: New test.\n+\t* testsuite/20_util/is_constant_evaluated/noexcept.cc: New test.\n+\n 2018-12-10  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/documentation_hacking.xml: Update reference"}, {"sha": "bab2bda34ef3eb1eeecbb70fb75d609a5404e6b2", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=0d7924f2e766834e4fec84ff093f4c355fea6be1", "patch": "@@ -627,6 +627,9 @@ namespace std\n # define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1\n # define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1\n # define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n+# if __GNUC__ >= 9\n+#  define _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED 1\n+# endif\n #elif defined(__is_identifier)\n // For non-GNU compilers:\n # if ! __is_identifier(__has_unique_object_representations)\n@@ -638,6 +641,9 @@ namespace std\n # if ! __is_identifier(__builtin_launder)\n #  define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n # endif\n+# if ! __is_identifier(__builtin_is_constant_evaluated)\n+#  define _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED 1\n+# endif\n #endif // GCC\n \n // End of prewritten config; the settings discovered at configure time follow."}, {"sha": "2171d13bf3b9ca6b2a863a503979a6aff4e04f41", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=0d7924f2e766834e4fec84ff093f4c355fea6be1", "patch": "@@ -3029,6 +3029,12 @@ template <typename _From, typename _To>\n   template<typename _Tp>\n     using unwrap_ref_decay_t = typename unwrap_ref_decay<_Tp>::type;\n \n+#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n+  constexpr inline bool\n+  is_constant_evaluated() noexcept\n+  { return __builtin_is_constant_evaluated(); }\n+#endif\n+\n #endif // C++2a\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "c72574ead470f8f7ada7a3c637df0844eeb465f0", "filename": "libstdc++-v3/testsuite/20_util/is_constant_evaluated/1.cc", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constant_evaluated%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constant_evaluated%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constant_evaluated%2F1.cc?ref=0d7924f2e766834e4fec84ff093f4c355fea6be1", "patch": "@@ -0,0 +1,80 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <type_traits>\n+#include <testsuite_hooks.h>\n+\n+template<int N>\n+struct X { int v = N; };\n+X<std::is_constant_evaluated()> x; // type X<true>\n+int y = 4;\n+int a = std::is_constant_evaluated() ? y : 1; // initializes a to 1\n+int b = std::is_constant_evaluated() ? 2 : y; // initializes b to 2\n+int c = y + (std::is_constant_evaluated() ? 2 : y); // initializes c to 2*y\n+int d = std::is_constant_evaluated(); // initializes d to 1\n+int e = d + std::is_constant_evaluated(); // initializes e to 1 + 0\n+\n+constexpr int\n+foo(int x)\n+{\n+  const int n = std::is_constant_evaluated() ? 13 : 17; // n == 13\n+  int m = std::is_constant_evaluated() ? 13 : 17; // m might be 13 or 17 (see below)\n+  char arr[n] = {}; // char[13]\n+  return m + sizeof (arr) + x;\n+}\n+\n+constexpr int\n+bar()\n+{\n+  const int n = std::is_constant_evaluated() ? 13 : 17;\n+  X<n> x1;\n+  X<std::is_constant_evaluated() ? 13 : 17> x2;\n+  static_assert(std::is_same<decltype(x1), decltype(x2)>::value,\n+\t\t\"x1/x2's type\");\n+  return x1.v + x2.v;\n+}\n+\n+int p = foo(0); // m == 13; initialized to 26\n+int q = p + foo(0); // m == 17 for this call; initialized to 56\n+static_assert(bar() == 26, \"bar\");\n+\n+struct S { int a, b; };\n+\n+S s = { std::is_constant_evaluated() ? 2 : 3, y };\n+S t = { std::is_constant_evaluated() ? 2 : 3, 4 };\n+\n+static_assert(std::is_same<decltype(x), X<true> >::value, \"x's type\");\n+\n+void\n+test01()\n+{\n+  VERIFY( a == 1 && b == 2 && c == 8 && d == 1 && e == 1 && p == 26 );\n+  VERIFY( q == 56 && s.a == 3 && s.b == 4 && t.a == 2 && t.b == 4 );\n+  VERIFY( foo (y) == 34 );\n+  if constexpr (foo (0) != 26)\n+    VERIFY( 0 );\n+  constexpr int w = foo (0);\n+  VERIFY( w == 26 );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "273cec91707cabc020581c05c54f55b73812c518", "filename": "libstdc++-v3/testsuite/20_util/is_constant_evaluated/noexcept.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constant_evaluated%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7924f2e766834e4fec84ff093f4c355fea6be1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constant_evaluated%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constant_evaluated%2Fnoexcept.cc?ref=0d7924f2e766834e4fec84ff093f4c355fea6be1", "patch": "@@ -0,0 +1,23 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+\n+static_assert(noexcept(std::is_constant_evaluated()));"}]}