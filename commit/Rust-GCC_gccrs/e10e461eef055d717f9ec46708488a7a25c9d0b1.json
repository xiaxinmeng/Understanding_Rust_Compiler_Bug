{"sha": "e10e461eef055d717f9ec46708488a7a25c9d0b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEwZTQ2MWVlZjA1NWQ3MTdmOWVjNDY3MDg0ODhhN2EyNWM5ZDBiMQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2012-02-23T10:16:39Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2012-02-23T10:16:39Z"}, "message": "acinclude.m4: Use HAVE_INITFINI_ARRAY_SUPPORT instead of HAVE_INITFINI_ARRAY to work around...\n\n\tgcc/\n\t* acinclude.m4: Use HAVE_INITFINI_ARRAY_SUPPORT instead of\n\tHAVE_INITFINI_ARRAY to work around namespace pollution in\n\tcertain versions of newlib system headers.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* config/initfini-array.h: Use HAVE_INITFINI_ARRAY_SUPPORT\n\tinstead of HAVE_INITFINI_ARRAY.\n\n\tlibgcc/\n\t* config/ia64/crtbegin.S: Use HAVE_INITFINI_ARRAY_SUPPORT\n\tinstead of HAVE_INITFINI_ARRAY.\n\t* config/ia64/crtend.S: Likewise.\n\nFrom-SVN: r184503", "tree": {"sha": "6e8b20f8fae47a4ac30a16dbb56169aa34f079da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e8b20f8fae47a4ac30a16dbb56169aa34f079da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e10e461eef055d717f9ec46708488a7a25c9d0b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10e461eef055d717f9ec46708488a7a25c9d0b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e10e461eef055d717f9ec46708488a7a25c9d0b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10e461eef055d717f9ec46708488a7a25c9d0b1/comments", "author": null, "committer": null, "parents": [{"sha": "afe03c233e7fc3e1d7d37ca95f2f72cab40248a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe03c233e7fc3e1d7d37ca95f2f72cab40248a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe03c233e7fc3e1d7d37ca95f2f72cab40248a0"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "11d53e02ddf46acdad502caa2aa1fa7bbb4f0410", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -1,3 +1,13 @@\n+2012-02-23  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* acinclude.m4: Use HAVE_INITFINI_ARRAY_SUPPORT instead of\n+\tHAVE_INITFINI_ARRAY to work around namespace pollution in\n+\tcertain versions of newlib system headers.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* config/initfini-array.h: Use HAVE_INITFINI_ARRAY_SUPPORT\n+\tinstead of HAVE_INITFINI_ARRAY.\n+\n 2012-02-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/52330"}, {"sha": "a39484710486e281b6aebb6cb5166993bef35d56", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -486,7 +486,7 @@ changequote([,])dnl\n   enable_initfini_array=$gcc_cv_initfini_array\n ])\n if test $enable_initfini_array = yes; then\n-  AC_DEFINE(HAVE_INITFINI_ARRAY, 1,\n+  AC_DEFINE(HAVE_INITFINI_ARRAY_SUPPORT, 1,\n     [Define .init_array/.fini_array sections are available and working.])\n fi])\n "}, {"sha": "9b8d206c98d7d96fd35168d4d2c6cc396f9fa517", "filename": "gcc/config.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -1123,7 +1123,7 @@\n \n /* Define .init_array/.fini_array sections are available and working. */\n #ifndef USED_FOR_TARGET\n-#undef HAVE_INITFINI_ARRAY\n+#undef HAVE_INITFINI_ARRAY_SUPPORT\n #endif\n \n "}, {"sha": "ade9fcd634cd792dd18f2f1972f6de7533ddef11", "filename": "gcc/config/initfini-array.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Fconfig%2Finitfini-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Fconfig%2Finitfini-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finitfini-array.h?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -19,7 +19,7 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#ifdef HAVE_INITFINI_ARRAY\n+#ifdef HAVE_INITFINI_ARRAY_SUPPORT\n \n #define USE_INITFINI_ARRAY\n "}, {"sha": "94b33cee6b7ab4b851d417e8c8035bf50b1b5c05", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -22515,7 +22515,7 @@ fi\n \n if test $enable_initfini_array = yes; then\n \n-$as_echo \"#define HAVE_INITFINI_ARRAY 1\" >>confdefs.h\n+$as_echo \"#define HAVE_INITFINI_ARRAY_SUPPORT 1\" >>confdefs.h\n \n fi\n "}, {"sha": "379b858c0df65d339a0d55a70d92757eababd9a4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -1,3 +1,9 @@\n+2012-02-23  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/ia64/crtbegin.S: Use HAVE_INITFINI_ARRAY_SUPPORT\n+\tinstead of HAVE_INITFINI_ARRAY.\n+\t* config/ia64/crtend.S: Likewise.\n+\n 2012-02-20  Kai Tietz  <ktietz@redhat.com>\n \n \tPR libstdc++/52300"}, {"sha": "cfb54d310a873014cb2d38d4dacaf65156a46157", "filename": "libgcc/config/ia64/crtbegin.S", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/libgcc%2Fconfig%2Fia64%2Fcrtbegin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/libgcc%2Fconfig%2Fia64%2Fcrtbegin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Fcrtbegin.S?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -61,7 +61,7 @@ __dso_handle:\n \t.hidden __dso_handle\n \n \n-#ifdef HAVE_INITFINI_ARRAY\n+#ifdef HAVE_INITFINI_ARRAY_SUPPORT\n \n .section .fini_array, \"a\"\n \tdata8 @fptr(__do_global_dtors_aux)\n@@ -70,7 +70,7 @@ __dso_handle:\n \tdata8 @fptr(__do_jv_register_classes)\n \tdata8 @fptr(__do_global_ctors_aux)\n \n-#else /* !HAVE_INITFINI_ARRAY */\n+#else /* !HAVE_INITFINI_ARRAY_SUPPORT */\n /*\n  * Fragment of the ELF _fini routine that invokes our dtor cleanup.\n  *\n@@ -117,7 +117,7 @@ __dso_handle:\n \t  mov b6 = r2\n \t  br.call.sptk.many b0 = b6\n \t}\n-#endif /* !HAVE_INITFINI_ARRAY */\n+#endif /* !HAVE_INITFINI_ARRAY_SUPPORT */\n \n .section .text\n \t.align\t32"}, {"sha": "9ee151711c52954ed90a7877b9d42986b3b2ba74", "filename": "libgcc/config/ia64/crtend.S", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10e461eef055d717f9ec46708488a7a25c9d0b1/libgcc%2Fconfig%2Fia64%2Fcrtend.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10e461eef055d717f9ec46708488a7a25c9d0b1/libgcc%2Fconfig%2Fia64%2Fcrtend.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Fcrtend.S?ref=e10e461eef055d717f9ec46708488a7a25c9d0b1", "patch": "@@ -39,10 +39,10 @@ __DTOR_END__:\n __JCR_END__:\n \tdata8\t0\n \n-#ifdef HAVE_INITFINI_ARRAY\n+#ifdef HAVE_INITFINI_ARRAY_SUPPORT\n \t.global __do_global_ctors_aux\n \t.hidden\t__do_global_ctors_aux\n-#else /* !HAVE_INITFINI_ARRAY */\n+#else /* !HAVE_INITFINI_ARRAY_SUPPORT */\n /*\n  * Fragment of the ELF _init routine that invokes our dtor cleanup.\n  *\n@@ -71,7 +71,7 @@ __JCR_END__:\n \t  br.call.sptk.many b0 = b6\n \t  ;;\n \t}\n-#endif /* !HAVE_INITFINI_ARRAY */\n+#endif /* !HAVE_INITFINI_ARRAY_SUPPORT */\n \n .text\n \t.align 32"}]}