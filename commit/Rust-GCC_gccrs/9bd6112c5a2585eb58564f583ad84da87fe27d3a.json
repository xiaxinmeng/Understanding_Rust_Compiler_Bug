{"sha": "9bd6112c5a2585eb58564f583ad84da87fe27d3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJkNjExMmM1YTI1ODVlYjU4NTY0ZjU4M2FkODRkYTg3ZmUyN2QzYQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2006-11-17T10:31:47Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-11-17T10:31:47Z"}, "message": "re PR ada/29802 (wrong directory in makefile for ada and libada when srcdir=.)\n\n2006-11-16  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* Makefile.tpl (clean-target-libgcc): Test for gcc Makefile presence.\n\t(unstage): Test for stage_last presence.\n\n\tPR bootstrap/29802\n\t* Makefile.tpl (POSTSTAGE1_FLAGS_TO_PASS): Add HOST_SUBDIR in STAGE_PREFIX.\n\t* Makefile.in: Regenerate.\n\nlibada:\n2006-11-16  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR bootstrap/29802\n\t* configure.ac: Call GCC_TOPLEV_SUBDIRS.\n\t* configure: Regenerate.\n\t* Makefile.in: Replace host_subdir.\n\nFrom-SVN: r118927", "tree": {"sha": "cdc066a4f95fcefcdfe94e56a0d3b336362f0df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdc066a4f95fcefcdfe94e56a0d3b336362f0df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bd6112c5a2585eb58564f583ad84da87fe27d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bd6112c5a2585eb58564f583ad84da87fe27d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bd6112c5a2585eb58564f583ad84da87fe27d3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bd6112c5a2585eb58564f583ad84da87fe27d3a/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc9962ee12357d77d9fd46c1795c679ea556f7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc9962ee12357d77d9fd46c1795c679ea556f7ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc9962ee12357d77d9fd46c1795c679ea556f7ae"}], "stats": {"total": 320, "additions": 249, "deletions": 71}, "files": [{"sha": "d8292d680ef176c3d906ebd2fcc4bf9ed0b5dce6", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -1,3 +1,12 @@\n+2006-11-16  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* Makefile.tpl (clean-target-libgcc): Test for gcc Makefile presence.\n+\t(unstage): Test for stage_last presence.\n+\n+\tPR bootstrap/29802\n+\t* Makefile.tpl (POSTSTAGE1_FLAGS_TO_PASS): Add HOST_SUBDIR in STAGE_PREFIX.\n+\t* Makefile.in: Regenerate.\n+\n 2003-11-16  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* MAINTAINERS: Add myself and Daniel Berlin as loop optimizer"}, {"sha": "3e917139fa52179a9f1903f6cb5989ebe528a12c", "filename": "Makefile.in", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -2084,7 +2084,7 @@ realclean: maintainer-clean\n # Extra dependency for clean-target, owing to the mixed nature of gcc.\n clean-target: clean-target-libgcc\n clean-target-libgcc:\n-\ttest ! -d gcc || (cd gcc && $(MAKE) $@)\n+\tif test -f gcc/Makefile; then cd gcc && $(MAKE) $@; else :; fi\n \n # Check target.\n \n@@ -4470,7 +4470,7 @@ configure-stage1-bfd:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif bfd-bootstrap\n \n .PHONY: configure-stage2-bfd maybe-configure-stage2-bfd\n@@ -5225,7 +5225,7 @@ configure-stage1-opcodes:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif opcodes-bootstrap\n \n .PHONY: configure-stage2-opcodes maybe-configure-stage2-opcodes\n@@ -5980,7 +5980,7 @@ configure-stage1-binutils:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif binutils-bootstrap\n \n .PHONY: configure-stage2-binutils maybe-configure-stage2-binutils\n@@ -11792,7 +11792,7 @@ configure-stage1-gas:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif gas-bootstrap\n \n .PHONY: configure-stage2-gas maybe-configure-stage2-gas\n@@ -12547,7 +12547,7 @@ configure-stage1-gcc:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif gcc-bootstrap\n \n .PHONY: configure-stage2-gcc maybe-configure-stage2-gcc\n@@ -16074,7 +16074,7 @@ configure-stage1-intl:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif intl-bootstrap\n \n .PHONY: configure-stage2-intl maybe-configure-stage2-intl\n@@ -17606,7 +17606,7 @@ configure-stage1-ld:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif ld-bootstrap\n \n .PHONY: configure-stage2-ld maybe-configure-stage2-ld\n@@ -18361,7 +18361,7 @@ configure-stage1-libcpp:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif libcpp-bootstrap\n \n .PHONY: configure-stage2-libcpp maybe-configure-stage2-libcpp\n@@ -19116,7 +19116,7 @@ configure-stage1-libdecnumber:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif libdecnumber-bootstrap\n \n .PHONY: configure-stage2-libdecnumber maybe-configure-stage2-libdecnumber\n@@ -20267,7 +20267,7 @@ configure-stage1-libiberty:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif libiberty-bootstrap\n \n .PHONY: configure-stage2-libiberty maybe-configure-stage2-libiberty\n@@ -30109,7 +30109,7 @@ configure-stage1-zlib:\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n \t   \\\n-\t  --disable-intermodule --enable-checking \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n+\t  --disable-intermodule \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \n @endif zlib-bootstrap\n \n .PHONY: configure-stage2-zlib maybe-configure-stage2-zlib\n@@ -41812,7 +41812,7 @@ stage = :\n current_stage = \"\"\n \n @if gcc-bootstrap\n-unstage = [ -f stage_current ] || $(MAKE) `cat stage_last`-start\n+unstage = if [ -f stage_last ]; then [ -f stage_current ] || $(MAKE) `cat stage_last`-start || exit 1; else :; fi\n stage = if [ -f stage_current ]; then $(MAKE) `cat stage_current`-end || exit 1; else :; fi\n current_stage = \"`cat stage_current 2> /dev/null`\"\n @endif gcc-bootstrap\n@@ -41855,7 +41855,7 @@ objext = .o\n # Flags to pass to stage2 and later makes.\n POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n-\tSTAGE_PREFIX=$$r/prev-gcc/ \\\n+\tSTAGE_PREFIX=\"$$r/$(HOST_SUBDIR)/prev-gcc/\" \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLIBCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\"}, {"sha": "7e9cb79d43f86f9873b9936d8abb47af4ad3f5b7", "filename": "Makefile.tpl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -591,7 +591,7 @@ realclean: maintainer-clean\n # Extra dependency for clean-target, owing to the mixed nature of gcc.\n clean-target: clean-target-libgcc\n clean-target-libgcc:\n-\ttest ! -d gcc || (cd gcc && $(MAKE) $@)\n+\tif test -f gcc/Makefile; then cd gcc && $(MAKE) $@; else :; fi\n \n # Check target.\n \n@@ -1215,7 +1215,7 @@ stage = :\n current_stage = \"\"\n \n @if gcc-bootstrap\n-unstage = [ -f stage_current ] || $(MAKE) `cat stage_last`-start\n+unstage = if [ -f stage_last ]; then [ -f stage_current ] || $(MAKE) `cat stage_last`-start || exit 1; else :; fi\n stage = if [ -f stage_current ]; then $(MAKE) `cat stage_current`-end || exit 1; else :; fi\n current_stage = \"`cat stage_current 2> /dev/null`\"\n @endif gcc-bootstrap\n@@ -1258,7 +1258,7 @@ objext = .o\n # Flags to pass to stage2 and later makes.\n POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n-\tSTAGE_PREFIX=$$r/prev-gcc/ \\\n+\tSTAGE_PREFIX=\"$$r/$(HOST_SUBDIR)/prev-gcc/\" \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLIBCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\"}, {"sha": "50626693c9addb9f0a0c2f2e9e70ec574e947bcc", "filename": "libada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FChangeLog?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -1,3 +1,10 @@\n+2006-11-16  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR bootstrap/29802\n+\t* configure.ac: Call GCC_TOPLEV_SUBDIRS.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Replace host_subdir.\n+\n 2006-10-16  Brooks Moses  <bmoses@stanford.edu>\n \n \t* Makefile.in: Add dummy \"pdf\" target."}, {"sha": "07407a4fd2a59cb47029270e43c94e7db47c60fb", "filename": "libada/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FMakefile.in?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -49,7 +49,8 @@ X_ADA_CFLAGS=@x_ada_cflags@\n ALL_ADA_CFLAGS=$(X_ADA_CFLAGS) $(T_ADA_CFLAGS) $(ADA_CFLAGS)\n \n # For finding the GCC build dir, which is used far too much\n-GCC_DIR=../../$(HOST_SUBDIR)/gcc\n+host_subdir = @host_subdir@\n+GCC_DIR=../../$(host_subdir)/gcc\n # Include fragment generated by GCC configure.\n include $(GCC_DIR)/libada-mk\n "}, {"sha": "8267eb3f43c6e129201f28c8ca462d1b37caa85e", "filename": "libada/configure", "status": "modified", "additions": 201, "deletions": 47, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -272,7 +272,7 @@ PACKAGE_STRING=\n PACKAGE_BUGREPORT=\n \n ac_unique_file=\"Makefile.in\"\n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS MAINT enable_shared build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os LN_S x_ada_cflags default_gnatlib_target LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir MAINT enable_shared LN_S x_ada_cflags default_gnatlib_target LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -793,6 +793,11 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --disable-shared        don't provide a shared libgnat\n \n+Optional Packages:\n+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-build-libsubdir=DIR  Directory where to find libraries for build system\n+\n _ACEOF\n fi\n \n@@ -881,7 +886,7 @@ esac\n     else\n       echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n     fi\n-    cd \"$ac_popdir\"\n+    cd $ac_popdir\n   done\n fi\n \n@@ -1232,49 +1237,102 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-# Command-line options.\n-# Very limited version of AC_MAINTAINER_MODE.\n-# Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n-if test \"${enable_maintainer_mode+set}\" = set; then\n-  enableval=\"$enable_maintainer_mode\"\n-  case ${enable_maintainer_mode} in\n-     yes) MAINT='' ;;\n-     no) MAINT='#' ;;\n-     *) { { echo \"$as_me:$LINENO: error: --enable-maintainer-mode must be yes or no\" >&5\n-echo \"$as_me: error: --enable-maintainer-mode must be yes or no\" >&2;}\n-   { (exit 1); exit 1; }; } ;;\n-   esac\n-   maintainer_mode=${enableval}\n-else\n-  MAINT='#'\n-fi;\n+# Autoconf M4 include file defining utility macros for complex Canadian\n+# cross builds.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+####\n+# _NCN_TOOL_PREFIXES:  Some stuff that oughtta be done in AC_CANONICAL_SYSTEM\n+# or AC_INIT.\n+# These demand that AC_CANONICAL_SYSTEM be called beforehand.\n+\n+####\n+# NCN_STRICT_CHECK_TOOLS(variable, progs-to-check-for,[value-if-not-found],[path])\n+# Like plain AC_CHECK_TOOLS, but require prefix if build!=host.\n+\n+\n+####\n+# NCN_STRICT_CHECK_TARGET_TOOLS(variable, progs-to-check-for,[value-if-not-found],[path])\n+# Like CVS Autoconf AC_CHECK_TARGET_TOOLS, but require prefix if build!=target.\n+\n+\n+\n+# Backported from Autoconf 2.5x; can go away when and if\n+# we switch.  Put the OS path separator in $PATH_SEPARATOR.\n+\n+\n+\n+\n+# ACX_HAVE_GCC_FOR_TARGET\n+# Check if the variable GCC_FOR_TARGET really points to a GCC binary.\n+\n+\n+# ACX_CHECK_INSTALLED_TARGET_TOOL(VAR, PROG)\n+# Searching for installed target binutils.  We need to take extra care,\n+# else we may find the wrong assembler, linker, etc., and lose.\n+#\n+# First try --with-build-time-tools, if specified.\n+#\n+# For build != host, we ask the installed GCC for the name of the tool it\n+# uses, and accept it if it is an absolute path.  This is because the\n+# only good choice for a compiler is the same GCC version that is being\n+# installed (or we couldn't make target libraries), and we assume that\n+# on the host system we'll have not only the same GCC version, but also\n+# the same binutils version.\n+#\n+# For build == host, search the same directories that the installed\n+# compiler will search.  We used to do this for the assembler, linker,\n+# and nm only; for simplicity of configuration, however, we extend this\n+# criterion to tools (such as ar and ranlib) that are never invoked by\n+# the compiler, to avoid mismatches.\n+#\n+# Also note we have to check MD_EXEC_PREFIX before checking the user's path\n+# if build == target.  This makes the most sense only when bootstrapping,\n+# but we also do so when build != host.  In this case, we hope that the\n+# build and host systems will have similar contents of MD_EXEC_PREFIX.\n+#\n+# If we do not find a suitable binary, then try the user's path.\n+\n+\n+###\n+# AC_PROG_CPP_WERROR\n+# Used for autoconf 2.5x to force AC_PREPROC_IFELSE to reject code which\n+# triggers warnings from the preprocessor.  Will be in autoconf 2.58.\n+# For now, using this also overrides header checks to use only the\n+# preprocessor (matches 2.13 behavior; matching 2.58's behavior is a\n+# bit harder from here).\n+# Eventually autoconf will default to checking headers with the compiler\n+# instead, and we'll have to do this differently.\n+\n+# AC_PROG_CPP_WERROR\n+\n+# Test for GNAT.\n+# We require the gnatbind program, and a compiler driver that\n+# understands Ada.  We use the user's CC setting, already found.\n+#\n+# Sets the shell variable have_gnat to yes or no as appropriate, and\n+# substitutes GNATBIND.\n+\n+\n+\n+\n+\n+\n+\n \n-# Check whether --enable-shared or --disable-shared was given.\n-if test \"${enable_shared+set}\" = set; then\n-  enableval=\"$enable_shared\"\n \n-case $enable_shared in\n-  yes | no) ;;\n-  *)\n-    enable_shared=no\n-    IFS=\"${IFS=         }\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n-    for pkg in $enableval; do\n-      case $pkg in\n-        ada | libada)\n-          enable_shared=yes ;;\n-      esac\n-    done\n-    IFS=\"$ac_save_ifs\"\n-    ;;\n-esac\n \n-else\n-  enable_shared=yes\n-fi;\n \n \n-# Start of actual configure tests\n \n+# Determine the host, build, and target systems\n ac_aux_dir=\n for ac_dir in $srcdir $srcdir/.. $srcdir/../..; do\n   if test -f $ac_dir/install-sh; then\n@@ -1383,6 +1441,98 @@ test -n \"$target_alias\" &&\n     NONENONEs,x,x, &&\n   program_prefix=${target_alias}-\n \n+# Determine the noncanonical target name, for directory use.\n+ case ${build_alias} in\n+  \"\") build_noncanonical=${build} ;;\n+  *) build_noncanonical=${build_alias} ;;\n+esac\n+\n+ case ${host_alias} in\n+  \"\") host_noncanonical=${build_noncanonical} ;;\n+  *) host_noncanonical=${host_alias} ;;\n+esac\n+\n+ case ${target_alias} in\n+  \"\") target_noncanonical=${host_noncanonical} ;;\n+  *) target_noncanonical=${target_alias} ;;\n+esac\n+\n+\n+\n+\n+# Determine the target- and build-specific subdirectories\n+\n+# post-stage1 host modules use a different CC_FOR_BUILD so, in order to\n+# have matching libraries, they should use host libraries: Makefile.tpl\n+# arranges to pass --with-build-libsubdir=$(HOST_SUBDIR).\n+# However, they still use the build modules, because the corresponding\n+# host modules (e.g. bison) are only built for the host when bootstrap\n+# finishes. So:\n+# - build_subdir is where we find build modules, and never changes.\n+# - build_libsubdir is where we find build libraries, and can be overridden.\n+\n+# Prefix 'build-' so this never conflicts with target_subdir.\n+build_subdir=\"build-${build_noncanonical}\"\n+\n+# Check whether --with-build-libsubdir or --without-build-libsubdir was given.\n+if test \"${with_build_libsubdir+set}\" = set; then\n+  withval=\"$with_build_libsubdir\"\n+  build_libsubdir=\"$withval\"\n+else\n+  build_libsubdir=\"$build_subdir\"\n+fi;\n+# --srcdir=. covers the toplevel, while \"test -d\" covers the subdirectories\n+if ( test $srcdir = . && test -d gcc ) \\\n+   || test -d $srcdir/../host-${host_noncanonical}; then\n+  host_subdir=\"host-${host_noncanonical}\"\n+else\n+  host_subdir=.\n+fi\n+# No prefix.\n+target_subdir=${target_noncanonical}\n+\n+\n+# Command-line options.\n+# Very limited version of AC_MAINTAINER_MODE.\n+# Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n+if test \"${enable_maintainer_mode+set}\" = set; then\n+  enableval=\"$enable_maintainer_mode\"\n+  case ${enable_maintainer_mode} in\n+     yes) MAINT='' ;;\n+     no) MAINT='#' ;;\n+     *) { { echo \"$as_me:$LINENO: error: --enable-maintainer-mode must be yes or no\" >&5\n+echo \"$as_me: error: --enable-maintainer-mode must be yes or no\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+   esac\n+   maintainer_mode=${enableval}\n+else\n+  MAINT='#'\n+fi;\n+\n+# Check whether --enable-shared or --disable-shared was given.\n+if test \"${enable_shared+set}\" = set; then\n+  enableval=\"$enable_shared\"\n+\n+case $enable_shared in\n+  yes | no) ;;\n+  *)\n+    enable_shared=no\n+    IFS=\"${IFS=         }\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n+    for pkg in $enableval; do\n+      case $pkg in\n+        ada | libada)\n+          enable_shared=yes ;;\n+      esac\n+    done\n+    IFS=\"$ac_save_ifs\"\n+    ;;\n+esac\n+\n+else\n+  enable_shared=yes\n+fi;\n+\n+\n # Need to pass this down for now :-P\n echo \"$as_me:$LINENO: checking whether ln -s works\" >&5\n echo $ECHO_N \"checking whether ln -s works... $ECHO_C\" >&6\n@@ -2051,8 +2201,6 @@ s,@ECHO_C@,$ECHO_C,;t t\n s,@ECHO_N@,$ECHO_N,;t t\n s,@ECHO_T@,$ECHO_T,;t t\n s,@LIBS@,$LIBS,;t t\n-s,@MAINT@,$MAINT,;t t\n-s,@enable_shared@,$enable_shared,;t t\n s,@build@,$build,;t t\n s,@build_cpu@,$build_cpu,;t t\n s,@build_vendor@,$build_vendor,;t t\n@@ -2065,6 +2213,13 @@ s,@target@,$target,;t t\n s,@target_cpu@,$target_cpu,;t t\n s,@target_vendor@,$target_vendor,;t t\n s,@target_os@,$target_os,;t t\n+s,@target_noncanonical@,$target_noncanonical,;t t\n+s,@build_libsubdir@,$build_libsubdir,;t t\n+s,@build_subdir@,$build_subdir,;t t\n+s,@host_subdir@,$host_subdir,;t t\n+s,@target_subdir@,$target_subdir,;t t\n+s,@MAINT@,$MAINT,;t t\n+s,@enable_shared@,$enable_shared,;t t\n s,@LN_S@,$LN_S,;t t\n s,@x_ada_cflags@,$x_ada_cflags,;t t\n s,@default_gnatlib_target@,$default_gnatlib_target,;t t\n@@ -2232,6 +2387,11 @@ esac\n \n \n \n+  if test x\"$ac_file\" != x-; then\n+    { echo \"$as_me:$LINENO: creating $ac_file\" >&5\n+echo \"$as_me: creating $ac_file\" >&6;}\n+    rm -f \"$ac_file\"\n+  fi\n   # Let's still pretend it is `configure' which instantiates (i.e., don't\n   # use $as_me), people would be surprised to read:\n   #    /* config.h.  Generated by config.status.  */\n@@ -2270,12 +2430,6 @@ echo \"$as_me: error: cannot find input file: $f\" >&2;}\n \t fi;;\n       esac\n     done` || { (exit 1); exit 1; }\n-\n-  if test x\"$ac_file\" != x-; then\n-    { echo \"$as_me:$LINENO: creating $ac_file\" >&5\n-echo \"$as_me: creating $ac_file\" >&6;}\n-    rm -f \"$ac_file\"\n-  fi\n _ACEOF\n cat >>$CONFIG_STATUS <<_ACEOF\n   sed \"$ac_vpsub"}, {"sha": "837e08370f637b6999750eae9f91aea4f1e2bbf1", "filename": "libada/configure.ac", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd6112c5a2585eb58564f583ad84da87fe27d3a/libada%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure.ac?ref=9bd6112c5a2585eb58564f583ad84da87fe27d3a", "patch": "@@ -20,6 +20,19 @@ AC_PREREQ([2.59])\n \n AC_CONFIG_SRCDIR([Makefile.in])\n \n+sinclude(../config/acx.m4)\n+\n+# Determine the host, build, and target systems\n+AC_CANONICAL_BUILD\n+AC_CANONICAL_HOST\n+AC_CANONICAL_TARGET\n+\n+# Determine the noncanonical target name, for directory use.\n+ACX_NONCANONICAL_TARGET\n+\n+# Determine the target- and build-specific subdirectories\n+GCC_TOPLEV_SUBDIRS\n+\n # Command-line options.\n # Very limited version of AC_MAINTAINER_MODE.\n AC_ARG_ENABLE([maintainer-mode],\n@@ -56,12 +69,6 @@ esac\n ], [enable_shared=yes])\n AC_SUBST([enable_shared])\n \n-# Start of actual configure tests\n-\n-AC_CANONICAL_BUILD\n-AC_CANONICAL_HOST\n-AC_CANONICAL_TARGET\n-\n # Need to pass this down for now :-P\n AC_PROG_LN_S\n "}]}