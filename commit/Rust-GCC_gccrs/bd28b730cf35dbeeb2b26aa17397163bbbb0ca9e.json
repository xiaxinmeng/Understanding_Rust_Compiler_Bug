{"sha": "bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQyOGI3MzBjZjM1ZGJlZWIyYjI2YWExNzM5NzE2M2JiYmIwY2E5ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-12T10:54:31Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-12T13:23:20Z"}, "message": "SLP: fix SVE issues\n\nThe patch fixes the following 2 issues:\n\n  .MASK_STORE_LANES (&a, 4B, max_mask_34, vect_array.12);\n\nhere we miss to return the last argument as stored value.\n\nivtmp_32 = ivtmp_31 + POLY_INT_CST [4, 4];\n\nhere we miss a bail out in vect_recog_over_widening_pattern.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/97079\n\t* internal-fn.c (internal_fn_stored_value_index): Handle also\n\t.MASK_STORE_LANES.\n\t* tree-vect-patterns.c (vect_recog_over_widening_pattern): Bail\n\tout for unsupported TREE_TYPE.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/97079\n\t* gcc.target/aarch64/sve/pr97079.c: New test.", "tree": {"sha": "b97374ae42f110294f8e7a0d426eedc358f48b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b97374ae42f110294f8e7a0d426eedc358f48b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7825bb6556da6fa991b7ea1b72e3851026dc2cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7825bb6556da6fa991b7ea1b72e3851026dc2cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7825bb6556da6fa991b7ea1b72e3851026dc2cd"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "792d2ca568a4a11c3e3ad8abf6443f173b0650a7", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "patch": "@@ -3795,6 +3795,7 @@ internal_fn_stored_value_index (internal_fn fn)\n   switch (fn)\n     {\n     case IFN_MASK_STORE:\n+    case IFN_MASK_STORE_LANES:\n     case IFN_SCATTER_STORE:\n     case IFN_MASK_SCATTER_STORE:\n     case IFN_LEN_STORE:"}, {"sha": "06e6a7cde94f79e2eb09b22376ee2f061080f5db", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr97079.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr97079.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr97079.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr97079.c?ref=bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=armv8.2-a+sve\" } */\n+\n+void g(void);\n+\n+int a[8][3];\n+int b;\n+void c(void)\n+{\n+  int d[] = {7, 3};\n+  int *e = a[0];\n+  int f;\n+  b = 0;\n+  for (; b < 8; b++)\n+    {\n+      f = 0;\n+      for (; f < 3; f++)\n+\ta[b][f] = 0;\n+    }\n+  g();\n+  *e = (long)d;\n+}"}, {"sha": "ac56acebe016058cbbc9599cef348ec4211c19d6", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e", "patch": "@@ -1638,6 +1638,8 @@ vect_recog_over_widening_pattern (vec_info *vinfo,\n \t      single_use_p |= op_single_use_p;\n \t    }\n \t}\n+      else\n+\treturn NULL;\n     }\n \n   /* Although the operation could be done in operation_precision, we have"}]}