{"sha": "e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThhYTlmNTVmNjQ4NmE5NTAzZDRmOWU2Yjg4YjhmODFkMWRhYWIxNQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-12-16T11:02:10Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-12-16T11:02:10Z"}, "message": "MSP430: Add new msp430-elfbare target\n\ncontrib/ChangeLog:\n\n2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config-list.mk: Add msp430-elfbare.\n\ngcc/ChangeLog:\n\n2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config.gcc: s/msp430*-*-*/msp430-*-*.\n\tHandle msp430-*-elfbare.\n\t* config/msp430/msp430-devices.c (TARGET_SUBDIR): Define.\n\t(_MSPMKSTR): Define.\n\t(__MSPMKSTR): Define.\n\t(rest_of_devices_path): Use TARGET_SUBDIR value in string.\n\t* config/msp430/msp430.c (msp430_option_override): Error if\n\t-fuse-cxa-atexit is used when it has been disabled at configure time.\n\t* config/msp430/t-msp430: Define TARGET_SUBDIR when building\n\tmsp430-devices.o.\n\t* doc/install.texi: Document msp430-*-elf and msp430-*-elfbare.\n\t* doc/invoke.texi: Update documentation about which path devices.csv is\n\tsearched for.\n\ngcc/testsuite/ChangeLog:\n\n2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* g++.dg/init/dso_handle1.C: Require cxa_atexit support.\n\t* g++.dg/init/dso_handle2.C: Likewise.\n\t* g++.dg/other/cxa-atexit1.C: Likewise.\n\t* gcc.target/msp430/msp430.exp: Update csv-using-installed.c test to\n\thandle msp430-elfbare configuration.\n\nlibgcc/ChangeLog:\n\n2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config.host: s/msp430*-*-elf/msp430-*-elf*.\n\tOverride default \"extra_parts\" variable.\n\t* configure: Regenerate.\n\t* configure.ac: Disable TM clone registry by default for\n\tmsp430-elfbare.\n\nFrom-SVN: r279442", "tree": {"sha": "7d8a497de23ddd18c6c1a5a753ff27c1d0f9e89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d8a497de23ddd18c6c1a5a753ff27c1d0f9e89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1edfb10a5aa9b8943ea9971dd8261b39327eeae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edfb10a5aa9b8943ea9971dd8261b39327eeae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1edfb10a5aa9b8943ea9971dd8261b39327eeae2"}], "stats": {"total": 133, "additions": 121, "deletions": 12}, "files": [{"sha": "cfac553798709d9b7ea16eb152b5eea018a3fcb0", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,3 +1,7 @@\n+2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config-list.mk: Add msp430-elfbare.\n+\n 2019-12-09  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR preprocessor/49973"}, {"sha": "d154286a497cb0c8492892b8ee52cd489efac3e8", "filename": "contrib/config-list.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -68,7 +68,7 @@ LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n   mipsel-elf mips64-elf mips64vr-elf mips64orion-elf mips-rtems \\\n   mips-wrs-vxworks mipstx39-elf mmix-knuth-mmixware mn10300-elf moxie-elf \\\n   moxie-uclinux moxie-rtems \\\n-  msp430-elf \\\n+  msp430-elf msp430-elfbare \\\n   nds32le-elf nds32be-elf \\\n   nios2-elf nios2-linux-gnu nios2-rtems \\\n   nvptx-none \\"}, {"sha": "08d769a76afb60d63d5a8becbf7a9538e0301900", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,3 +1,19 @@\n+2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config.gcc: s/msp430*-*-*/msp430-*-*.\n+\tHandle msp430-*-elfbare.\n+\t* config/msp430/msp430-devices.c (TARGET_SUBDIR): Define.\n+\t(_MSPMKSTR): Define.\n+\t(__MSPMKSTR): Define.\n+\t(rest_of_devices_path): Use TARGET_SUBDIR value in string.\n+\t* config/msp430/msp430.c (msp430_option_override): Error if\n+\t-fuse-cxa-atexit is used when it has been disabled at configure time.\n+\t* config/msp430/t-msp430: Define TARGET_SUBDIR when building\n+\tmsp430-devices.o.\n+\t* doc/install.texi: Document msp430-*-elf and msp430-*-elfbare.\n+\t* doc/invoke.texi: Update documentation about which path devices.csv is\n+\tsearched for.\n+\n 2019-12-16  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \tPR target/92950"}, {"sha": "9802f436e06f3d768073018ff75849beb762fd07", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -2624,7 +2624,7 @@ mn10300-*-*)\n \tuse_collect2=no\n \tuse_gcc_stdint=wrap\n \t;;\n-msp430*-*-*)\n+msp430-*-*)\n \ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n \tc_target_objs=\"msp430-c.o\"\n \tcxx_target_objs=\"msp430-c.o\"\n@@ -2637,6 +2637,18 @@ msp430*-*-*)\n \tif test x${disable_initfini_array} != xyes; then\n \t\tgcc_cv_initfini_array=yes\n \tfi\n+\tcase ${target} in\n+\t  msp430-*-elfbare)\n+\t    # __cxa_atexit increases code size, and we don't need to support\n+\t    # dynamic shared objects on MSP430, so regular Newlib atexit is a\n+\t    # fine replacement as it also supports registration of more than 32\n+\t    # functions.\n+\t    default_use_cxa_atexit=no\n+\t    # This target does not match the generic *-*-elf case above which\n+\t    # sets use_gcc_stdint=wrap, so explicitly set it here.\n+\t    use_gcc_stdint=wrap\n+\t    ;;\n+\tesac\n \t;;\n nds32*-*-*)\n \ttarget_cpu_default=\"0\""}, {"sha": "b379bb2b1d43ec6e497175614b3e39aa97485086", "filename": "gcc/config/msp430/msp430-devices.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig%2Fmsp430%2Fmsp430-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig%2Fmsp430%2Fmsp430-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430-devices.c?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -71,8 +71,23 @@ msp430_dirname (char *path)\n   return path;\n }\n \n+/* We need to support both the msp430-elf and msp430-elfbare target aliases.\n+   gcc/config/msp430/t-msp430 will define TARGET_SUBDIR to the target_subdir\n+   Makefile variable, which will evaluate to the correct subdirectory that\n+   needs to be searched for devices.csv.  */\n+#ifndef TARGET_SUBDIR\n+#define TARGET_SUBDIR msp430-elf\n+#endif\n+\n+#define _MSPMKSTR(x) __MSPMKSTR(x)\n+#define __MSPMKSTR(x) #x\n+\n /* devices.csv path from the toolchain root.  */\n-static const char rest_of_devices_path[] = \"/msp430-elf/include/devices/\";\n+static const char rest_of_devices_path[] =\n+  \"/\" _MSPMKSTR (TARGET_SUBDIR) \"/include/devices/\";\n+\n+#undef _MSPMKSTR\n+#undef __MSPMKSTR\n \n /* \"The default value of GCC_EXEC_PREFIX is prefix/lib/gcc\". Strip lib/gcc\n    from GCC_EXEC_PREFIX to get the path to the installed toolchain.  */"}, {"sha": "cce41011aef8aa95593507cec7e9efe8f58688b8", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -288,6 +288,16 @@ msp430_option_override (void)\n   if (TARGET_OPT_SPACE && optimize < 3)\n     optimize_size = 1;\n \n+#if !DEFAULT_USE_CXA_ATEXIT\n+  /* For some configurations, we use atexit () instead of __cxa_atexit () by\n+     default to save on code size and remove the declaration of __dso_handle\n+     from the CRT library.\n+     Configuring GCC with --enable-__cxa-atexit re-enables it by defining\n+     DEFAULT_USE_CXA_ATEXIT to 1.  */\n+  if (flag_use_cxa_atexit)\n+    error (\"%<-fuse-cxa-atexit%> is not supported for msp430-elf\");\n+#endif\n+\n #ifndef HAVE_NEWLIB_NANO_FORMATTED_IO\n   if (TARGET_TINY_PRINTF)\n     error (\"GCC must be configured with %<--enable-newlib-nano-formatted-io%> \""}, {"sha": "d481696220a29fee7a5fbb0333d21188a89b9c45", "filename": "gcc/config/msp430/t-msp430", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig%2Fmsp430%2Ft-msp430", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fconfig%2Fmsp430%2Ft-msp430", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Ft-msp430?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -24,7 +24,7 @@ driver-msp430.o: $(srcdir)/config/msp430/driver-msp430.c \\\n \n msp430-devices.o: $(srcdir)/config/msp430/msp430-devices.c \\\n \t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) -DTARGET_SUBDIR=$(target_subdir) $(INCLUDES) $<\n \n # Enable multilibs:\n "}, {"sha": "656410afff4f658794543301efda675b47dcfc0c", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -4330,10 +4330,24 @@ The moxie processor.\n <hr />\n @end html\n @anchor{msp430-x-elf}\n-@heading msp430-*-elf\n+@heading msp430-*-elf*\n TI MSP430 processor.\n This configuration is intended for embedded systems.\n \n+@samp{msp430-*-elf} is the standard configuration with most GCC\n+features enabled by default.\n+\n+@samp{msp430-*-elfbare} is tuned for a bare-metal environment, and disables\n+features related to shared libraries and other functionality not used for\n+this device.  This reduces code and data usage of the GCC libraries, resulting\n+in a minimal run-time environment by default.\n+\n+Features disabled by default include:\n+@itemize\n+@item transactional memory\n+@item __cxa_atexit\n+@end itemize\n+\n @html\n <hr />\n @end html"}, {"sha": "f04e915119622015cbb3fe46ea94b3d9a271d5f0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -23311,8 +23311,8 @@ this directory for devices.csv.  If devices.csv is found, this directory will\n also be registered as an include path, and linker library path.  Header files\n and linker scripts in this directory can therefore be used without manually\n specifying @code{-I} and @code{-L} on the command line.\n-@item The @samp{msp430-elf/include/devices} directory\n-Finally, GCC will examine @samp{msp430-elf/include/devices} from the\n+@item The @samp{msp430-elf@{,bare@}/include/devices} directory\n+Finally, GCC will examine @samp{msp430-elf@{,bare@}/include/devices} from the\n toolchain root directory.  This directory does not exist in a default\n installation, but if the user has created it and copied @samp{devices.csv}\n there, then the MCU data will be read.  As above, this directory will"}, {"sha": "7272aba5dcc2e0fd16e84c8baba4a7c37554def7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,3 +1,11 @@\n+2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* g++.dg/init/dso_handle1.C: Require cxa_atexit support.\n+\t* g++.dg/init/dso_handle2.C: Likewise.\n+\t* g++.dg/other/cxa-atexit1.C: Likewise.\n+\t* gcc.target/msp430/msp430.exp: Update csv-using-installed.c test to\n+\thandle msp430-elfbare configuration.\n+\n 2019-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/clause_on_volatile.ads,"}, {"sha": "0377c4ef7c0887bcb5201dae3a9fe4acf3a685ee", "filename": "gcc/testsuite/g++.dg/init/dso_handle1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdso_handle1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdso_handle1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdso_handle1.C?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,6 +1,7 @@\n // PR c++/17042\n // { dg-do assemble }\n /* { dg-require-weak \"\" } */\n+// { dg-require-effective-target cxa_atexit }\n // { dg-options \"-fuse-cxa-atexit\" }\n \n struct A"}, {"sha": "a4daaf3f7da1cf62cab9a4fdb3936487591cbc56", "filename": "gcc/testsuite/g++.dg/init/dso_handle2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdso_handle2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdso_handle2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdso_handle2.C?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,4 +1,5 @@\n // PR c++/58846\n+// { dg-require-effective-target cxa_atexit }\n // { dg-options \"-fuse-cxa-atexit\" }\n \n extern \"C\" { char* __dso_handle; }"}, {"sha": "b22911db2e02f3b59e77238399ea9e637c024482", "filename": "gcc/testsuite/g++.dg/other/cxa-atexit1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcxa-atexit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcxa-atexit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcxa-atexit1.C?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile }\n+// { dg-require-effective-target cxa_atexit }\n // { dg-options \"-O2 -fuse-cxa-atexit\" }\n \n # 1 \"cxa-atexit1.C\""}, {"sha": "42dc91136c99cd33c5751bed81b4af8980e3aafc", "filename": "gcc/testsuite/gcc.target/msp430/msp430.exp", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fmsp430.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fmsp430.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fmsp430.exp?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -141,18 +141,20 @@ proc msp430_device_permutations_runtest { tests } {\n }\n \n \n-# Return $TOOLCHAIN_ROOT/msp430-elf/include/devices/\n+# Return $TOOLCHAIN_ROOT/$target_alias/include/devices/\n+# target_alias is expected to be either msp430-elf or msp430-elfbare.\n proc get_installed_device_data_path { } {\n+    global target_alias\n     set compiler [lindex [regexp -all -inline {\\S+} \\\n \t[board_info [target_info name] compiler]] 0]\n     # $compiler is actually a file, but normalize will still get us the desired\n     # result.\n     return [file normalize \\\n-\t\"$compiler/../../msp430-elf/include/devices/devices.csv\"]\n+\t\"$compiler/../../$target_alias/include/devices/devices.csv\"]\n }\n \n # If the devices.csv is installed in\n-# $TOOLCHAIN_ROOT/msp430-elf/include/devices/, rename it so it doesn't\n+# $TOOLCHAIN_ROOT/$target_alias/include/devices/, rename it so it doesn't\n # interfere with the hard-coded device data tests.\n proc msp430_hide_installed_devices_data { } {\n     set devices_path [get_installed_device_data_path]"}, {"sha": "6faa4d395fd07d20fc1a170be9ca76f5bc8a2574", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1,3 +1,11 @@\n+2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config.host: s/msp430*-*-elf/msp430-*-elf*.\n+\tOverride default \"extra_parts\" variable.\n+\t* configure: Regenerate.\n+\t* configure.ac: Disable TM clone registry by default for\n+\tmsp430-elfbare.\n+\n 2019-12-11  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config.host (msp430*-*-elf): Add crt{begin,end}_no_eh.o to"}, {"sha": "efcf5f03f50c1c4a6202621257ac765c607ffbae", "filename": "libgcc/config.host", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -1043,9 +1043,9 @@ moxie-*-elf | moxie-*-moxiebox* | moxie-*-uclinux* | moxie-*-rtems*)\n \ttmake_file=\"$tmake_file moxie/t-moxie t-softfp-sfdf t-softfp-excl t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o crtbegin.o crtend.o\"\n \t;;\n-msp430*-*-elf)\n+msp430-*-elf*)\n \ttmake_file=\"$tm_file t-crtstuff t-fdpbit msp430/t-msp430\"\n-\textra_parts=\"$extra_parts crtbegin_no_eh.o crtend_no_eh.o\"\n+\textra_parts=\"crtbegin.o crtend.o crtbegin_no_eh.o crtend_no_eh.o\"\n \textra_parts=\"$extra_parts libmul_none.a libmul_16.a libmul_32.a libmul_f5.a\"\n \t;;\n nds32*-linux*)"}, {"sha": "97cbad3be56a06e691eb76b3d6e179459a27a9a3", "filename": "libgcc/configure", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -4964,6 +4964,15 @@ if test \"$enable_tm_clone_registry\" = no; then\n   use_tm_clone_registry=-DUSE_TM_CLONE_REGISTRY=0\n fi\n \n+else\n+\n+use_tm_clone_registry=\n+case $target in\n+  msp430*elfbare)\n+   use_tm_clone_registry=-DUSE_TM_CLONE_REGISTRY=0\n+   ;;\n+esac\n+\n fi\n \n "}, {"sha": "2d22f05486d8b659c0fa0ccc782e966256cd067a", "filename": "libgcc/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=e8aa9f55f6486a9503d4f9e6b88b8f81d1daab15", "patch": "@@ -268,6 +268,14 @@ use_tm_clone_registry=\n if test \"$enable_tm_clone_registry\" = no; then\n   use_tm_clone_registry=-DUSE_TM_CLONE_REGISTRY=0\n fi\n+],\n+[\n+use_tm_clone_registry=\n+case $target in\n+  msp430*elfbare)\n+   use_tm_clone_registry=-DUSE_TM_CLONE_REGISTRY=0\n+   ;;\n+esac\n ])\n AC_SUBST([use_tm_clone_registry])\n "}]}