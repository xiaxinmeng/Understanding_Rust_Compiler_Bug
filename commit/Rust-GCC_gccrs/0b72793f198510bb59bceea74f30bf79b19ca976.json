{"sha": "0b72793f198510bb59bceea74f30bf79b19ca976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3Mjc5M2YxOTg1MTBiYjU5YmNlZWE3NGYzMGJmNzliMTljYTk3Ng==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-07-25T02:31:04Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-07-25T02:31:04Z"}, "message": "* testsuite/gcc.dg/ppc-spe.c: New.\n\nFrom-SVN: r55733", "tree": {"sha": "1ad6f38bd22177604b3d3a7b22773df9d7fd54f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ad6f38bd22177604b3d3a7b22773df9d7fd54f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b72793f198510bb59bceea74f30bf79b19ca976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b72793f198510bb59bceea74f30bf79b19ca976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b72793f198510bb59bceea74f30bf79b19ca976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b72793f198510bb59bceea74f30bf79b19ca976/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c8875e595d6b48b29291126488915277aeafbbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8875e595d6b48b29291126488915277aeafbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c8875e595d6b48b29291126488915277aeafbbb"}], "stats": {"total": 691, "additions": 691, "deletions": 0}, "files": [{"sha": "531e688028307a4640ec19cd8e715a59354bccd8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b72793f198510bb59bceea74f30bf79b19ca976/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b72793f198510bb59bceea74f30bf79b19ca976/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b72793f198510bb59bceea74f30bf79b19ca976", "patch": "@@ -1,3 +1,7 @@\n+2002-07-24  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gcc.dg/ppc-spe.c: New.\n+\n 2002-07-24  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* g++.dg/other/ptrmem4.C: New testcase."}, {"sha": "ae2cf8a4b6f80902b4f81913fa23c5c3c931ada7", "filename": "gcc/testsuite/gcc.dg/ppc-spe.c", "status": "added", "additions": 687, "deletions": 0, "changes": 687, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b72793f198510bb59bceea74f30bf79b19ca976/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-spe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b72793f198510bb59bceea74f30bf79b19ca976/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-spe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-spe.c?ref=0b72793f198510bb59bceea74f30bf79b19ca976", "patch": "@@ -0,0 +1,687 @@\n+/* { dg-do compile { target powerpc-*-eabispe } } */\n+/* { dg-options \"-mcpu=8540 -mabi=spe -O0\" } */\n+\n+/* (Test with -O0 so we don't optimize any of them away).  */\n+\n+#include <spe.h>\n+\n+/* Test PowerPC SPE extensions.  */\n+\n+#define vector __attribute__((vector_size(8)))\n+\n+vector int a, b, c, *ap;\n+vector float f, g, h;\n+unsigned int *uip;\n+unsigned short *usp;\n+int i, j, *ip;\n+uint64_t ull;\n+int64_t sll;\n+unsigned ui;\n+float fl;\n+uint16_t u16;\n+int16_t s16;\n+\n+/* These are the only documented/supported accesor functions for the\n+   SPE builtins.  */\n+void\n+test_api ()\n+{\n+  c = __ev_addw(a, b);\n+  c = __ev_addiw(a, 8);\n+  c = __ev_subfw(a, b);\n+  c = __ev_subifw(a, 8);\n+  c = __ev_abs(a);\n+  c = __ev_neg(a);\n+  c = __ev_extsb(a);\n+  c = __ev_extsh(a);\n+  c = __ev_and(a, b);\n+  c = __ev_or(a, b);\n+  c = __ev_xor(a, b);\n+  c = __ev_nand(a, b);\n+  c = __ev_nor(a, b);\n+  c = __ev_eqv(a, b);\n+  c = __ev_andc(a, b);\n+  c = __ev_orc(a, b);\n+  c = __ev_rlw(a, b);\n+  c = __ev_rlwi(a, 8);\n+  c = __ev_slw(a, b);\n+  c = __ev_slwi(a, 8);\n+  c = __ev_srws(a, b);\n+  c = __ev_srwu(a, b);\n+  c = __ev_srwis(a, 8);\n+  c = __ev_srwiu(a, 8);\n+  c = __ev_cntlzw(a);\n+  c = __ev_cntlsw(a);\n+  c = __ev_rndw(a);\n+  c = __ev_mergehi(a, b);\n+  c = __ev_mergelo(a, b);\n+  c = __ev_mergelohi(a, b);\n+  c = __ev_mergehilo(a, b);\n+  c = __ev_splati(5);\n+  c = __ev_splatfi(6);\n+  c = __ev_divws(a, b);\n+  c = __ev_divwu(a, b);\n+  c = __ev_mra(a);\n+  i = __brinc(5, 6);\n+\n+  /* Loads.  */\n+  c = __ev_lddx(ap, i);\n+  c = __ev_ldwx(ap, i);\n+  c = __ev_ldhx(ap, i);\n+\n+  c = __ev_lwhex(uip, i);\n+  c = __ev_lwhoux(uip, i);\n+  c = __ev_lwhosx(uip, i);\n+  c = __ev_lwwsplatx(uip, i);\n+  c = __ev_lwhsplatx(uip, i);\n+\n+  c = __ev_lhhesplatx(usp, i);\n+  c = __ev_lhhousplatx(usp, i);\n+  c = __ev_lhhossplatx(usp, i);\n+\n+  c = __ev_ldd(ap, 5);\n+  c = __ev_ldw(ap, 6);\n+  c = __ev_ldh(ap, 7);\n+  c = __ev_lwhe(uip, 6);\n+  c = __ev_lwhou(uip, 6);\n+  c = __ev_lwhos(uip, 7);\n+  c = __ev_lwwsplat(uip, 7);\n+  c = __ev_lwhsplat(uip, 7);\n+  c = __ev_lhhesplat(usp, 7);\n+  c = __ev_lhhousplat(usp, 7);\n+  c = __ev_lhhossplat(usp, 7);\n+\n+  /* Stores.  */\n+  __ev_stddx (a, ap, 9);\n+  __ev_stdwx (a, ap, 9);\n+  __ev_stdhx (a, ap, 9);\n+  __ev_stwwex (a, uip, 9);\n+  __ev_stwwox (a, uip, 9);\n+  __ev_stwhex (a, uip, 9);\n+  __ev_stwhox (a, uip, 9);\n+  __ev_stdd (a, ap, 9);\n+  __ev_stdw (a, ap, 9);\n+  __ev_stdh (a, ap, 9);\n+  __ev_stwwe (a, uip, 9);\n+  __ev_stwwo (a, uip, 9);\n+  __ev_stwhe (a, uip, 9);\n+  __ev_stwho (a, uip, 9);\n+\n+  /* Fixed point complex.  */\n+  c = __ev_mhossf(a, b);\n+  c = __ev_mhosmf(a, b);\n+  c = __ev_mhosmi(a, b);\n+  c = __ev_mhoumi(a, b);\n+  c = __ev_mhessf(a, b);\n+  c = __ev_mhesmf(a, b);\n+  c = __ev_mhesmi(a, b);\n+  c = __ev_mheumi(a, b);\n+  c = __ev_mhossfa(a, b);\n+  c = __ev_mhosmfa(a, b);\n+  c = __ev_mhosmia(a, b);\n+  c = __ev_mhoumia(a, b);\n+  c = __ev_mhessfa(a, b);\n+  c = __ev_mhesmfa(a, b);\n+  c = __ev_mhesmia(a, b);\n+  c = __ev_mheumia(a, b);\n+\n+  c = __ev_mhoumf (a, b);\n+  c = __ev_mheumf (a, b);\n+  c = __ev_mhoumfa (a, b);\n+  c = __ev_mheumfa (a, b);\n+\n+  c = __ev_mhossfaaw(a, b);\n+  c = __ev_mhossiaaw(a, b);\n+  c = __ev_mhosmfaaw(a, b);\n+  c = __ev_mhosmiaaw(a, b);\n+  c = __ev_mhousiaaw(a, b);\n+  c = __ev_mhoumiaaw(a, b);\n+  c = __ev_mhessfaaw(a, b);\n+  c = __ev_mhessiaaw(a, b);\n+  c = __ev_mhesmfaaw(a, b);\n+  c = __ev_mhesmiaaw(a, b);\n+  c = __ev_mheusiaaw(a, b);\n+  c = __ev_mheumiaaw(a, b);\n+\n+  c = __ev_mhousfaaw (a, b);\n+  c = __ev_mhoumfaaw (a, b);\n+  c = __ev_mheusfaaw (a, b);\n+  c = __ev_mheumfaaw (a, b);\n+\n+  c = __ev_mhossfanw(a, b);\n+  c = __ev_mhossianw(a, b);\n+  c = __ev_mhosmfanw(a, b);\n+  c = __ev_mhosmianw(a, b);\n+  c = __ev_mhousianw(a, b);\n+  c = __ev_mhoumianw(a, b);\n+  c = __ev_mhessfanw(a, b);\n+  c = __ev_mhessianw(a, b);\n+  c = __ev_mhesmfanw(a, b);\n+  c = __ev_mhesmianw(a, b);\n+  c = __ev_mheusianw(a, b);\n+  c = __ev_mheumianw(a, b);\n+\n+  c = __ev_mhousfanw (a, b);\n+  c = __ev_mhoumfanw (a, b);\n+  c = __ev_mheusfanw (a, b);\n+  c = __ev_mheumfanw (a, b);\n+\n+  c = __ev_mhogsmfaa(a, b);\n+  c = __ev_mhogsmiaa(a, b);\n+  c = __ev_mhogumiaa(a, b);\n+  c = __ev_mhegsmfaa(a, b);\n+  c = __ev_mhegsmiaa(a, b);\n+  c = __ev_mhegumiaa(a, b);\n+\n+  c = __ev_mhogumfaa (a, b);\n+  c = __ev_mhegumfaa (a, b);\n+\n+  c = __ev_mhogsmfan(a, b);\n+  c = __ev_mhogsmian(a, b);\n+  c = __ev_mhogumian(a, b);\n+  c = __ev_mhegsmfan(a, b);\n+  c = __ev_mhegsmian(a, b);\n+  c = __ev_mhegumian(a, b);\n+\n+  c = __ev_mhogumfan (a, b);\n+  c = __ev_mhegumfan (a, b);\n+\n+  c = __ev_mwhssf(a, b);\n+  c = __ev_mwhsmf(a, b);\n+  c = __ev_mwhsmi(a, b);\n+  c = __ev_mwhumi(a, b);\n+  c = __ev_mwhssfa(a, b);\n+  c = __ev_mwhsmfa(a, b);\n+  c = __ev_mwhsmia(a, b);\n+  c = __ev_mwhumia(a, b);\n+\n+  c = __ev_mwhumf (a, b);\n+  c = __ev_mwhumfa (a, b);\n+\n+  c = __ev_mwlssf(a, b);\n+  c = __ev_mwlsmf(a, b);\n+  c = __ev_mwlumi(a, b);\n+  c = __ev_mwlssfa(a, b);\n+  c = __ev_mwlsmfa(a, b);\n+  c = __ev_mwlumia(a, b);\n+  c = __ev_mwlumiaaw(a, b);\n+\n+  c = __ev_mwlufi (a, b);\n+  c = __ev_mwlufia (a, b);\n+\n+  c = __ev_mwlssfaaw(a, b);\n+  c = __ev_mwlssiaaw(a, b);\n+  c = __ev_mwlsmfaaw(a, b);\n+  c = __ev_mwlsmiaaw(a, b);\n+  c = __ev_mwlusiaaw(a, b);\n+  c = __ev_mwlusiaaw(a, b);\n+\n+  c = __ev_mwlusfaaw (a, b);\n+\n+  c = __ev_mwlssfanw(a, b);\n+  c = __ev_mwlssianw(a, b);\n+  c = __ev_mwlsmfanw(a, b);\n+  c = __ev_mwlsmianw(a, b);\n+  c = __ev_mwlusianw(a, b);\n+  c = __ev_mwlumianw(a, b);\n+\n+  c = __ev_mwlumfanw (a, b);\n+  c = __ev_mwlusfanw (a, b);\n+\n+  c = __ev_mwssf (a, b);\n+  c = __ev_mwsmf (a, b);\n+  c = __ev_mwsmi (a, b);\n+  c = __ev_mwumi (a, b);\n+  c = __ev_mwssfa (a, b);\n+  c = __ev_mwsmfa (a, b);\n+  c = __ev_mwsmia (a, b);\n+  c = __ev_mwumia (a, b);\n+  c = __ev_mwumf (a, b);\n+  c = __ev_mwumfa (a, b);\n+  c = __ev_mwssfaa (a, b);\n+  c = __ev_mwsmfaa (a, b);\n+  c = __ev_mwsmiaa (a, b);\n+  c = __ev_mwumiaa (a, b);\n+  c = __ev_mwumfaa (a, b);\n+  c = __ev_mwssfan (a, b);\n+  c = __ev_mwsmfan (a, b);\n+  c = __ev_mwsmian (a, b);\n+  c = __ev_mwumian (a, b);\n+  c = __ev_mwumfan (a, b);\n+  c = __ev_addssiaaw (a);\n+  c = __ev_addsmiaaw (a);\n+  c = __ev_addusiaaw (a);\n+  c = __ev_addumiaaw (a);\n+  c = __ev_addusfaaw (a);\n+  c = __ev_addumfaaw (a);\n+  c = __ev_addsmfaaw (a);\n+  c = __ev_addssfaaw (a);\n+  c = __ev_subfssiaaw (a);\n+  c = __ev_subfsmiaaw (a);\n+  c = __ev_subfusiaaw (a);\n+  c = __ev_subfumiaaw (a);\n+  c = __ev_subfusfaaw (a);\n+  c = __ev_subfumfaaw (a);\n+  c = __ev_subfsmfaaw (a);\n+  c = __ev_subfssfaaw (a);\n+\n+  /* Floating point SIMD instructions.  */\n+  c = __ev_fsabs (a);\n+  c = __ev_fsnabs (a);\n+  c = __ev_fsneg (a);\n+  c = __ev_fsadd (a, b);\n+  c = __ev_fssub (a, b);\n+  c = __ev_fsmul (a, b);\n+  c = __ev_fsdiv (a, b);\n+  c = __ev_fscfui (a);\n+  c = __ev_fscfsi (a);\n+  c = __ev_fscfuf (a);\n+  c = __ev_fscfsf (a);\n+  c = __ev_fsctui (a);\n+  c = __ev_fsctsi (a);\n+  c = __ev_fsctuf (a);\n+  c = __ev_fsctsf (a);\n+  c = __ev_fsctuiz (a);\n+  c = __ev_fsctsiz (a);\n+\n+  /* Non supported sythetic instructions made from two instructions.  */\n+\n+  c = __ev_mwhssfaaw (a, b);\n+  c = __ev_mwhssiaaw (a, b);\n+  c = __ev_mwhsmfaaw (a, b);\n+  c = __ev_mwhsmiaaw (a, b);\n+  c = __ev_mwhusiaaw (a, b);\n+  c = __ev_mwhumiaaw (a, b);\n+  c = __ev_mwhusfaaw (a, b);\n+  c = __ev_mwhumfaaw (a, b);\n+  c = __ev_mwhssfanw (a, b);\n+  c = __ev_mwhssianw (a, b);\n+  c = __ev_mwhsmfanw (a, b);\n+  c = __ev_mwhsmianw (a, b);\n+  c = __ev_mwhusianw (a, b);\n+  c = __ev_mwhumianw (a, b);\n+  c = __ev_mwhusfanw (a, b);\n+  c = __ev_mwhumfanw (a, b);\n+\n+  c = __ev_mwhgssfaa (a, b);\n+  c = __ev_mwhgsmfaa (a, b);\n+  c = __ev_mwhgsmiaa (a, b);\n+  c = __ev_mwhgumiaa (a, b);\n+  c = __ev_mwhgssfan (a, b);\n+  c = __ev_mwhgsmfan (a, b);\n+  c = __ev_mwhgsmian (a, b);\n+  c = __ev_mwhgumian (a, b);\n+\n+  /* Creating, insertion, and extraction.  */\n+\n+  a = __ev_create_u64 ((uint64_t) 55);\n+  a = __ev_create_s64 ((int64_t) 66);\n+  a = __ev_create_fs (3.14F, 2.18F);\n+  a = __ev_create_u32 ((uint32_t) 5, (uint32_t) i);\n+  a = __ev_create_s32 ((int32_t) 5, (int32_t) 6);\n+  a = __ev_create_u16 ((uint16_t) 6, (uint16_t) 6, (uint16_t) 7, (uint16_t) 1);\n+  a = __ev_create_s16 ((int16_t) 6, (int16_t) 6, (int16_t) 7, (int16_t) 9);\n+  a = __ev_create_sfix32_fs (3.0F, 2.0F);\n+  a = __ev_create_ufix32_fs (3.0F, 2.0F);\n+  a = __ev_create_ufix32_u32 (3U, 5U);\n+  a = __ev_create_sfix32_s32 (6, 9);\n+  ull = __ev_convert_u64 (a);\n+  sll = __ev_convert_s64 (a);\n+  i = __ev_get_upper_u32 (a);\n+  ui = __ev_get_lower_u32 (a);\n+  i = __ev_get_upper_s32 (a);\n+  i = __ev_get_lower_s32 (a);\n+  fl = __ev_get_upper_fs (a);\n+  fl = __ev_get_lower_fs (a);\n+  u16 = __ev_get_u16 (a, 5U);\n+  s16 = __ev_get_s16 (a, 5U);\n+  ui = __ev_get_upper_ufix32_u32 (a);\n+  ui = __ev_get_lower_ufix32_u32 (a);\n+  i = __ev_get_upper_sfix32_s32 (a);\n+  i = __ev_get_lower_sfix32_s32 (a);\n+  fl = __ev_get_upper_sfix32_fs (a);\n+  fl = __ev_get_lower_sfix32_fs (a);\n+  fl = __ev_get_upper_ufix32_fs (a);\n+  fl = __ev_get_lower_ufix32_fs (a);\n+  a = __ev_set_upper_u32 (a, 5U);\n+  a = __ev_set_lower_u32 (a, 5U);\n+  a = __ev_set_upper_s32 (a, 5U);\n+  a = __ev_set_lower_s32 (a, 6U);\n+  a = __ev_set_upper_fs (a, 6U);\n+  a = __ev_set_lower_fs (a, fl);\n+  a = __ev_set_upper_ufix32_u32 (a, 5U);\n+  a = __ev_set_lower_ufix32_u32 (a, 5U);\n+  a = __ev_set_upper_sfix32_s32 (a, 5);\n+  a = __ev_set_lower_sfix32_s32 (a, 5);\n+  a =  __ev_set_upper_sfix32_fs (a, fl);\n+  a = __ev_set_lower_sfix32_fs (a, fl);\n+  a = __ev_set_upper_ufix32_fs (a, fl);\n+  a = __ev_set_lower_ufix32_fs (a, fl);\n+  a = __ev_set_acc_u64 ((uint64_t) 640);\n+  a = __ev_set_acc_s64 ((int64_t) 460);\n+  a = __ev_set_acc_vec64 (b);\n+  a = __ev_set_u32 (a, 5, 6);\n+  a = __ev_set_s32 (a, 5, 6);\n+  a = __ev_set_fs (a, fl, 5);\n+  a = __ev_set_u16 (a, 5U, 3);\n+  a = __ev_set_s16 (a, 5, 6);\n+  a = __ev_set_ufix32_u32 (a, 5U, 6U);\n+  a = __ev_set_sfix32_s32 (a, 3, 6);\n+  a = __ev_set_ufix32_fs (a, fl, 5);\n+  a = __ev_set_sfix32_fs (a, fl, 5);\n+  ui = __ev_get_u32 (a, 1);\n+  i = __ev_get_s32 (a, 0);\n+  fl = __ev_get_fs (a, 1);\n+  u16 = __ev_get_u16 (a, 2);\n+  s16 = __ev_get_s16 (a, 2);\n+  ui = __ev_get_ufix32_u32 (a, 1);\n+  i = __ev_get_sfix32_s32 (a, 0);\n+  fl = __ev_get_ufix32_fs (a, 1);\n+  fl = __ev_get_sfix32_fs (a, 0);\n+\n+  /* Predicates.  */\n+  i = __ev_any_gts (a, b);\n+  i = __ev_all_gts (a, b);\n+  i = __ev_upper_gts (a, b);\n+  i = __ev_lower_gts (a, b);\n+  a = __ev_select_gts (a, b, c, c);\n+\n+  i = __ev_any_gtu (a, b);\n+  i = __ev_all_gtu (a, b);\n+  i = __ev_upper_gtu (a, b);\n+  i = __ev_lower_gtu (a, b);\n+  a = __ev_select_gtu (a, b, c, c);\n+\n+  i = __ev_any_lts (a, b);\n+  i = __ev_all_lts (a, b);\n+  i = __ev_upper_lts (a, b);\n+  i = __ev_lower_lts (a, b);\n+  a = __ev_select_lts (a, b, c, c);\n+\n+  i = __ev_any_ltu (a, b);\n+  i = __ev_all_ltu (a, b);\n+  i = __ev_upper_ltu (a, b);\n+  i = __ev_lower_ltu (a, b);\n+  a = __ev_select_ltu (a, b, c, c);\n+\n+  i = __ev_any_eq (a, b);\n+  i = __ev_all_eq (a, b);\n+  i = __ev_upper_eq (a, b);\n+  i = __ev_lower_eq (a, b);\n+  a = __ev_select_eq (a, b, c, c);\n+\n+  i = __ev_any_fs_gt (a, b);\n+  i = __ev_all_fs_gt (a, b);\n+  i = __ev_upper_fs_gt (a, b);\n+  i = __ev_lower_fs_gt (a, b);\n+  a = __ev_select_fs_gt (a, b, c, c);\n+\n+  i = __ev_any_fs_lt (a, b);\n+  i = __ev_all_fs_lt (a, b);\n+  i = __ev_upper_fs_lt (a, b);\n+  i = __ev_lower_fs_lt (a, b);\n+  a = __ev_select_fs_lt (a, b, c, b);\n+\n+  i = __ev_any_fs_eq (a, b);\n+  i = __ev_all_fs_eq (a, b);\n+  i = __ev_upper_fs_eq (a, b);\n+  i = __ev_lower_fs_eq (a, b);\n+  a = __ev_select_fs_eq (a, b, c, c);\n+\n+  i = __ev_any_fs_tst_gt (a, b);\n+  i = __ev_all_fs_tst_gt (a, b);\n+  i = __ev_upper_fs_tst_gt (a, b);\n+  i = __ev_lower_fs_tst_gt (a, b);\n+  a = __ev_select_fs_tst_gt (a, b, c, c);\n+\n+  i = __ev_any_fs_tst_lt (a, b);\n+  i = __ev_all_fs_tst_lt (a, b);\n+  i = __ev_upper_fs_tst_lt (a, b);\n+  i = __ev_lower_fs_tst_lt (a, b);\n+  a = __ev_select_fs_tst_lt (a, b, c, c);\n+\n+  i = __ev_any_fs_tst_eq (a, b);\n+  i = __ev_all_fs_tst_eq (a, b);\n+  i = __ev_upper_fs_tst_eq (a, b);\n+  i = __ev_lower_fs_tst_eq (a, b);\n+  a = __ev_select_fs_tst_eq (a, b, c, c);\n+}\n+\n+int\n+main (void)\n+{\n+  /* Generic binary operations.  */\n+  c = __builtin_spe_evaddw (a, b);\n+  c = __builtin_spe_evand (a, b);\n+  c = __builtin_spe_evandc (a, b);\n+  c = __builtin_spe_evdivws (a, b);\n+  c = __builtin_spe_evdivwu (a, b);\n+  c = __builtin_spe_eveqv (a, b);\n+  h = __builtin_spe_evfsadd (f, g);\n+  h = __builtin_spe_evfsdiv (f, g);\n+  h = __builtin_spe_evfsmul (f, g);\n+  h = __builtin_spe_evfssub (f, g);\n+  c = __builtin_spe_evlddx (ap, j);\n+  c = __builtin_spe_evldhx (ap, j);\n+  c = __builtin_spe_evldwx (ap, j);\n+  c = __builtin_spe_evlhhesplatx (usp, j);\n+  c = __builtin_spe_evlhhossplatx (usp, j);\n+  c = __builtin_spe_evlhhousplatx (usp, j);\n+  c = __builtin_spe_evlwhex (uip, j);\n+  c = __builtin_spe_evlwhosx (uip, j);\n+  c = __builtin_spe_evlwhoux (uip, j);\n+  c = __builtin_spe_evlwhsplatx (uip, j);\n+  c = __builtin_spe_evlwwsplatx (uip, j);\n+  c = __builtin_spe_evmergehi (a, b);\n+  c = __builtin_spe_evmergehilo (a, b);\n+  c = __builtin_spe_evmergelo (a, b);\n+  c = __builtin_spe_evmergelohi (a, b);\n+  c = __builtin_spe_evmhegsmfaa (a, b);\n+  c = __builtin_spe_evmhegsmfan (a, b);\n+  c = __builtin_spe_evmhegsmiaa (a, b);\n+  c = __builtin_spe_evmhegsmian (a, b);\n+  c = __builtin_spe_evmhegumiaa (a, b);\n+  c = __builtin_spe_evmhegumian (a, b);\n+  c = __builtin_spe_evmhesmf (a, b);\n+  c = __builtin_spe_evmhesmfa (a, b);\n+  c = __builtin_spe_evmhesmfaaw (a, b);\n+  c = __builtin_spe_evmhesmfanw (a, b);\n+  c = __builtin_spe_evmhesmi (a, b);\n+  c = __builtin_spe_evmhesmia (a, b);\n+  c = __builtin_spe_evmhesmiaaw (a, b);\n+  c = __builtin_spe_evmhesmianw (a, b);\n+  c = __builtin_spe_evmhessf (a, b);\n+  c = __builtin_spe_evmhessfa (a, b);\n+  c = __builtin_spe_evmhessfaaw (a, b);\n+  c = __builtin_spe_evmhessfanw (a, b);\n+  c = __builtin_spe_evmhessiaaw (a, b);\n+  c = __builtin_spe_evmhessianw (a, b);\n+  c = __builtin_spe_evmheumi (a, b);\n+  c = __builtin_spe_evmheumia (a, b);\n+  c = __builtin_spe_evmheumiaaw (a, b);\n+  c = __builtin_spe_evmheumianw (a, b);\n+  c = __builtin_spe_evmheusiaaw (a, b);\n+  c = __builtin_spe_evmheusianw (a, b);\n+  c = __builtin_spe_evmhogsmfaa (a, b);\n+  c = __builtin_spe_evmhogsmfan (a, b);\n+  c = __builtin_spe_evmhogsmiaa (a, b);\n+  c = __builtin_spe_evmhogsmian (a, b);\n+  c = __builtin_spe_evmhogumiaa (a, b);\n+  c = __builtin_spe_evmhogumian (a, b);\n+  c = __builtin_spe_evmhosmf (a, b);\n+  c = __builtin_spe_evmhosmfa (a, b);\n+  c = __builtin_spe_evmhosmfaaw (a, b);\n+  c = __builtin_spe_evmhosmfanw (a, b);\n+  c = __builtin_spe_evmhosmi (a, b);\n+  c = __builtin_spe_evmhosmia (a, b);\n+  c = __builtin_spe_evmhosmiaaw (a, b);\n+  c = __builtin_spe_evmhosmianw (a, b);\n+  c = __builtin_spe_evmhossf (a, b);\n+  c = __builtin_spe_evmhossfa (a, b);\n+  c = __builtin_spe_evmhossfaaw (a, b);\n+  c = __builtin_spe_evmhossfanw (a, b);\n+  c = __builtin_spe_evmhossiaaw (a, b);\n+  c = __builtin_spe_evmhossianw (a, b);\n+  c = __builtin_spe_evmhoumi (a, b);\n+  c = __builtin_spe_evmhoumia (a, b);\n+  c = __builtin_spe_evmhoumiaaw (a, b);\n+  c = __builtin_spe_evmhoumianw (a, b);\n+  c = __builtin_spe_evmhousiaaw (a, b);\n+  c = __builtin_spe_evmhousianw (a, b);\n+  c = __builtin_spe_evmwhsmf (a, b);\n+  c = __builtin_spe_evmwhsmfa (a, b);\n+  c = __builtin_spe_evmwhsmi (a, b);\n+  c = __builtin_spe_evmwhsmia (a, b);\n+  c = __builtin_spe_evmwhssf (a, b);\n+  c = __builtin_spe_evmwhssfa (a, b);\n+  c = __builtin_spe_evmwhumi (a, b);\n+  c = __builtin_spe_evmwhumia (a, b);\n+  c = __builtin_spe_evmwlsmf (a, b);\n+  c = __builtin_spe_evmwlsmfa (a, b);\n+  c = __builtin_spe_evmwlsmfaaw (a, b);\n+  c = __builtin_spe_evmwlsmfanw (a, b);\n+  c = __builtin_spe_evmwlsmiaaw (a, b);\n+  c = __builtin_spe_evmwlsmianw (a, b);\n+  c = __builtin_spe_evmwlssf (a, b);\n+  c = __builtin_spe_evmwlssfa (a, b);\n+  c = __builtin_spe_evmwlssfaaw (a, b);\n+  c = __builtin_spe_evmwlssfanw (a, b);\n+  c = __builtin_spe_evmwlssiaaw (a, b);\n+  c = __builtin_spe_evmwlssianw (a, b);\n+  c = __builtin_spe_evmwlumi (a, b);\n+  c = __builtin_spe_evmwlumia (a, b);\n+  c = __builtin_spe_evmwlumiaaw (a, b);\n+  c = __builtin_spe_evmwlumianw (a, b);\n+  c = __builtin_spe_evmwlusiaaw (a, b);\n+  c = __builtin_spe_evmwlusianw (a, b);\n+  c = __builtin_spe_evmwsmf (a, b);\n+  c = __builtin_spe_evmwsmfa (a, b);\n+  c = __builtin_spe_evmwsmfaa (a, b);\n+  c = __builtin_spe_evmwsmfan (a, b);\n+  c = __builtin_spe_evmwsmi (a, b);\n+  c = __builtin_spe_evmwsmia (a, b);\n+  c = __builtin_spe_evmwsmiaa (a, b);\n+  c = __builtin_spe_evmwsmian (a, b);\n+  c = __builtin_spe_evmwssf (a, b);\n+  c = __builtin_spe_evmwssfa (a, b);\n+  c = __builtin_spe_evmwssfaa (a, b);\n+  c = __builtin_spe_evmwssfan (a, b);\n+  c = __builtin_spe_evmwumi (a, b);\n+  c = __builtin_spe_evmwumia (a, b);\n+  c = __builtin_spe_evmwumiaa (a, b);\n+  c = __builtin_spe_evmwumian (a, b);\n+  c = __builtin_spe_evnand (a, b);\n+  c = __builtin_spe_evnor (a, b);\n+  c = __builtin_spe_evor (a, b);\n+  c = __builtin_spe_evorc (a, b);\n+  c = __builtin_spe_evrlw (a, b);\n+  c = __builtin_spe_evslw (a, b);\n+  c = __builtin_spe_evsrws (a, b);\n+  c = __builtin_spe_evsrwu (a, b);\n+  c = __builtin_spe_evsubfw (a, b);\n+  c = __builtin_spe_evxor (a, b);\n+  /* GAS bug not implemented.\n+  c = __builtin_spe_evmwhssfaa (a, b);\n+  c = __builtin_spe_evmwhssmaa (a, b);\n+  c = __builtin_spe_evmwhsmfaa (a, b);\n+  c = __builtin_spe_evmwhsmiaa (a, b);\n+  c = __builtin_spe_evmwhusiaa (a, b);\n+  c = __builtin_spe_evmwhumiaa (a, b);\n+  c = __builtin_spe_evmwhssfan (a, b);\n+  c = __builtin_spe_evmwhssian (a, b);\n+  c = __builtin_spe_evmwhsmfan (a, b);\n+  c = __builtin_spe_evmwhsmian (a, b);\n+  c = __builtin_spe_evmwhusian (a, b);\n+  c = __builtin_spe_evmwhumian (a, b);\n+  c = __builtin_spe_evmwhgssfaa (a, b);\n+  c = __builtin_spe_evmwhgsmfaa (a, b);\n+  c = __builtin_spe_evmwhgsmiaa (a, b);\n+  c = __builtin_spe_evmwhgumiaa (a, b);\n+  c = __builtin_spe_evmwhgssfan (a, b);\n+  c = __builtin_spe_evmwhgsmfan (a, b);\n+  c = __builtin_spe_evmwhgsmian (a, b);\n+  c = __builtin_spe_evmwhgumian (a, b);\n+  */\n+  i = __builtin_spe_brinc (i, j);\n+\n+  /* Generic unary operations.  */\n+  a = __builtin_spe_evabs (b);\n+  a = __builtin_spe_evaddsmiaaw (b);\n+  a = __builtin_spe_evaddssiaaw (b);\n+  a = __builtin_spe_evaddumiaaw (b);\n+  a = __builtin_spe_evaddusiaaw (b);\n+  a = __builtin_spe_evcntlsw (b);\n+  a = __builtin_spe_evcntlzw (b);\n+  a = __builtin_spe_evextsb (b);\n+  a = __builtin_spe_evextsh (b);\n+  f = __builtin_spe_evfsabs (g);\n+  f = __builtin_spe_evfscfsf (g);\n+  a = __builtin_spe_evfscfsi (g);\n+  f = __builtin_spe_evfscfuf (g);\n+  f = __builtin_spe_evfscfui (a);\n+  f = __builtin_spe_evfsctsf (g);\n+  a = __builtin_spe_evfsctsi (g);\n+  a = __builtin_spe_evfsctsiz (g);\n+  f = __builtin_spe_evfsctuf (g);\n+  a = __builtin_spe_evfsctui (g);\n+  a = __builtin_spe_evfsctuiz (g);\n+  f = __builtin_spe_evfsnabs (g);\n+  f = __builtin_spe_evfsneg (g);\n+  a = __builtin_spe_evmra (b);\n+  a = __builtin_spe_evneg (b);\n+  a = __builtin_spe_evrndw (b);\n+  a = __builtin_spe_evsubfsmiaaw (b);\n+  a = __builtin_spe_evsubfssiaaw (b);\n+  a = __builtin_spe_evsubfumiaaw (b);\n+  a = __builtin_spe_evsubfusiaaw (b);\n+\n+  /* Unary operations of the form: X = foo (5_bit_signed_immediate).  */\n+  a = __builtin_spe_evsplatfi (5);\n+  a = __builtin_spe_evsplati (5);\n+\n+  /* Binary operations of the form: X = foo(Y, 5_bit_immediate).  */\n+  a = __builtin_spe_evaddiw (b, 13);\n+  a = __builtin_spe_evldd (ap, 13);\n+  a = __builtin_spe_evldh (ap, 13);\n+  a = __builtin_spe_evldw (ap, 13);\n+  a = __builtin_spe_evlhhesplat (usp, 13);\n+  a = __builtin_spe_evlhhossplat (usp, 13);\n+  a = __builtin_spe_evlhhousplat (usp, 13);\n+  a = __builtin_spe_evlwhe (uip, 13);\n+  a = __builtin_spe_evlwhos (uip, 13);\n+  a = __builtin_spe_evlwhou (uip, 13);\n+  a = __builtin_spe_evlwhsplat (uip, 13);\n+  a = __builtin_spe_evlwwsplat (uip, 13);\n+\n+  a = __builtin_spe_evrlwi (b, 13);\n+  a = __builtin_spe_evslwi (b, 13);\n+  a = __builtin_spe_evsrwis (b, 13);\n+  a = __builtin_spe_evsrwiu (b, 13);\n+  a = __builtin_spe_evsubifw (b, 13);\n+\n+  /* Store indexed builtins.  */\n+  __builtin_spe_evstddx (b, ap, j);\n+  __builtin_spe_evstdhx (b, ap, j);\n+  __builtin_spe_evstdwx (b, ap, j);\n+  __builtin_spe_evstwhex (b, uip, j);\n+  __builtin_spe_evstwhox (b, uip, j);\n+  __builtin_spe_evstwwex (b, uip, j);\n+  __builtin_spe_evstwwox (b, uip, j);\n+\n+  /* Store indexed immediate builtins.  */\n+  __builtin_spe_evstdd (b, ap, 5);\n+  __builtin_spe_evstdh (b, ap, 5);\n+  __builtin_spe_evstdw (b, ap, 5);\n+  __builtin_spe_evstwhe (b, uip, 5);\n+  __builtin_spe_evstwho (b, uip, 5);\n+  __builtin_spe_evstwwe (b, uip, 5);\n+  __builtin_spe_evstwwo (b, uip, 5);\n+\n+  /* SPEFSCR builtins.  */\n+  i = __builtin_spe_mfspefscr ();\n+  __builtin_spe_mtspefscr (j);\n+\n+  test_api ();\n+  \n+  return 0;\n+}"}]}