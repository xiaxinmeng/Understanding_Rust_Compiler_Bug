{"sha": "6760cb478451203ca1213d157b93253f1d5013e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc2MGNiNDc4NDUxMjAzY2ExMjEzZDE1N2I5MzI1M2YxZDUwMTNlNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-07T06:44:38Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-07T06:44:38Z"}, "message": "alpha: Implement the PR94780 fix for alpha.\n\nEssentially the same fix as for x86.\n\n2020-05-07  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\t* config/alpha/alpha.c (alpha_atomic_assign_expand_fenv): Use\n\tTARGET_EXPR instead of MODIFY_EXPR for the first assignments to\n\tfenv_var and new_fenv_var.", "tree": {"sha": "f46699fbab6eac46f5eae85be58204eab0e7c75b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f46699fbab6eac46f5eae85be58204eab0e7c75b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6760cb478451203ca1213d157b93253f1d5013e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6760cb478451203ca1213d157b93253f1d5013e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6760cb478451203ca1213d157b93253f1d5013e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6760cb478451203ca1213d157b93253f1d5013e4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be996072ce81a90e1502d3f03edb0d0ca553e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be996072ce81a90e1502d3f03edb0d0ca553e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be996072ce81a90e1502d3f03edb0d0ca553e78"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "e11bbcedb65f886f74f9a5a0cfb3a6b73c78f5a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6760cb478451203ca1213d157b93253f1d5013e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6760cb478451203ca1213d157b93253f1d5013e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6760cb478451203ca1213d157b93253f1d5013e4", "patch": "@@ -1,3 +1,9 @@\n+2020-05-07  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_atomic_assign_expand_fenv): Use\n+\tTARGET_EXPR instead of MODIFY_EXPR for the first assignments to\n+\tfenv_var and new_fenv_var.\n+\n 2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93069"}, {"sha": "49b5a24d4b006d97e8a18e803d1a5f396149890c", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6760cb478451203ca1213d157b93253f1d5013e4/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6760cb478451203ca1213d157b93253f1d5013e4/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=6760cb478451203ca1213d157b93253f1d5013e4", "patch": "@@ -9775,8 +9775,8 @@ alpha_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n     = build_fn_decl (\"__ieee_set_fp_control\",\n \t\t     build_function_type_list (void_type_node, NULL));\n   mask = build_int_cst (long_unsigned_type_node, ~SWCR_STATUS_MASK);\n-  ld_fenv = build2 (MODIFY_EXPR, long_unsigned_type_node,\n-\t\t    fenv_var, build_call_expr (get_fpscr, 0));\n+  ld_fenv = build4 (TARGET_EXPR, long_unsigned_type_node, fenv_var,\n+\t\t    build_call_expr (get_fpscr, 0), NULL_TREE, NULL_TREE);\n   masked_fenv = build2 (BIT_AND_EXPR, long_unsigned_type_node, fenv_var, mask);\n   hold_fnclex = build_call_expr (set_fpscr, 1, masked_fenv);\n   *hold = build2 (COMPOUND_EXPR, void_type_node,\n@@ -9797,8 +9797,8 @@ alpha_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n        __atomic_feraiseexcept (new_fenv_var);  */\n \n   new_fenv_var = create_tmp_var_raw (long_unsigned_type_node);\n-  reload_fenv = build2 (MODIFY_EXPR, long_unsigned_type_node, new_fenv_var,\n-\t\t\tbuild_call_expr (get_fpscr, 0));\n+  reload_fenv = build4 (TARGET_EXPR, long_unsigned_type_node, new_fenv_var,\n+\t\t\tbuild_call_expr (get_fpscr, 0), NULL_TREE, NULL_TREE);\n   restore_fnenv = build_call_expr (set_fpscr, 1, fenv_var);\n   atomic_feraiseexcept = builtin_decl_implicit (BUILT_IN_ATOMIC_FERAISEEXCEPT);\n   update_call"}]}