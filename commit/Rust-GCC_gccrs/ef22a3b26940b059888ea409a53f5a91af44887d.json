{"sha": "ef22a3b26940b059888ea409a53f5a91af44887d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyMmEzYjI2OTQwYjA1OTg4OGVhNDA5YTUzZjVhOTFhZjQ0ODg3ZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-29T09:42:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-29T09:42:05Z"}, "message": "[Ada] Improper behavior of floating-point attributes\n\nThis patch fixes an error in the handling of attributes Pred qnd Succ when\napplied to the limit values of a floating-point type. The RM mandates that\nsuch operations must raise constraint_error, but GNAT generated in most cases\nan infinite value, regardless of whether overflow checks were enabled.\n\n2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-fatgen.adb (Succ, Pred):  Raise Constraint_Error\n\tunconditionally when applied to the largest positive (resp. largest\n\tnegative) value of a floating-point type.\n\ngcc/testsuite/\n\n\t* gnat.dg/float_attributes_overflows.adb: New testcase.\n\nFrom-SVN: r260882", "tree": {"sha": "05d1f19e7f5eb43fc4f1ec7e06934cd79cc17617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05d1f19e7f5eb43fc4f1ec7e06934cd79cc17617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef22a3b26940b059888ea409a53f5a91af44887d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef22a3b26940b059888ea409a53f5a91af44887d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef22a3b26940b059888ea409a53f5a91af44887d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef22a3b26940b059888ea409a53f5a91af44887d/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54e33e5f6a0f566e6b0e96da3d5f27449d807248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e33e5f6a0f566e6b0e96da3d5f27449d807248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e33e5f6a0f566e6b0e96da3d5f27449d807248"}], "stats": {"total": 63, "additions": 47, "deletions": 16}, "files": [{"sha": "9c529da0d295b9eab9f206da0541220e6d6c0e87", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef22a3b26940b059888ea409a53f5a91af44887d", "patch": "@@ -1,3 +1,9 @@\n+2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* libgnat/s-fatgen.adb (Succ, Pred):  Raise Constraint_Error\n+\tunconditionally when applied to the largest positive (resp. largest\n+\tnegative) value of a floating-point type.\n+\n 2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* einfo.ads, einfo.adb: Clarify use of Activation_Record_Component:"}, {"sha": "d74c3d8027404f5bc57edf2b4186914ba570c6bd", "filename": "gcc/ada/libgnat/s-fatgen.adb", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb?ref=ef22a3b26940b059888ea409a53f5a91af44887d", "patch": "@@ -415,16 +415,7 @@ package body System.Fat_Gen is\n \n       elsif X = T'First then\n \n-         --  If not generating infinities, we raise a constraint error\n-\n-         if T'Machine_Overflows then\n-            raise Constraint_Error with \"Pred of largest negative number\";\n-\n-         --  Otherwise generate a negative infinity\n-\n-         else\n-            return X / (X - X);\n-         end if;\n+         raise Constraint_Error with \"Pred of largest negative number\";\n \n       --  For infinities, return unchanged\n \n@@ -671,15 +662,10 @@ package body System.Fat_Gen is\n \n          --  If not generating infinities, we raise a constraint error\n \n-         if T'Machine_Overflows then\n-            raise Constraint_Error with \"Succ of largest negative number\";\n+         raise Constraint_Error with \"Succ of largest positive number\";\n \n          --  Otherwise generate a positive infinity\n \n-         else\n-            return X / (X - X);\n-         end if;\n-\n       --  For infinities, return unchanged\n \n       elsif X < T'First or else X > T'Last then"}, {"sha": "bce064a523d5b75cba7afb25a4c16c73d05ebac3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef22a3b26940b059888ea409a53f5a91af44887d", "patch": "@@ -1,3 +1,7 @@\n+2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/float_attributes_overflows.adb: New testcase.\n+\n 2018-05-29  Pascal Obry  <obry@adacore.com>\n \n \t* gnat.dg/normalize_pathname.adb: New testcase."}, {"sha": "becee151d2ad88e925b85fe6d3f3f9ff32e92d25", "filename": "gcc/testsuite/gnat.dg/float_attributes_overflows.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Ftestsuite%2Fgnat.dg%2Ffloat_attributes_overflows.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef22a3b26940b059888ea409a53f5a91af44887d/gcc%2Ftestsuite%2Fgnat.dg%2Ffloat_attributes_overflows.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffloat_attributes_overflows.adb?ref=ef22a3b26940b059888ea409a53f5a91af44887d", "patch": "@@ -0,0 +1,35 @@\n+--  { dg-do run }\n+\n+procedure Float_Attributes_Overflows is\n+\n+   generic\n+      type Float_Type is digits <>;\n+   procedure Test_Float_Type;\n+\n+   procedure Test_Float_Type is\n+       Biggest_Positive_float : Float_Type := Float_Type'Last;\n+       Biggest_Negative_Float : Float_Type := Float_Type'First;\n+       Float_Var : Float_Type;\n+\n+    begin\n+       begin\n+             Float_Var := Float_Type'succ (Biggest_Positive_Float);\n+             raise Program_Error;\n+       exception\n+          when Constraint_Error => null;\n+       end;\n+\n+       begin\n+             Float_Var := Float_Type'pred (Biggest_Negative_Float);\n+             raise Program_Error;\n+       exception\n+          when Constraint_Error => null;\n+       end;\n+   end Test_Float_Type;\n+\n+   procedure Test_Float is new Test_Float_Type (Float);\n+   procedure Test_Long_Float is new Test_Float_Type (Long_Float);\n+begin\n+   Test_Float;\n+   Test_Long_Float;\n+end Float_Attributes_Overflows;"}]}