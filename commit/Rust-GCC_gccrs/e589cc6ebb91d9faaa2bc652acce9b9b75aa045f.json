{"sha": "e589cc6ebb91d9faaa2bc652acce9b9b75aa045f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU4OWNjNmViYjkxZDlmYWFhMmJjNjUyYWNjZTliOWI3NWFhMDQ1Zg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-02-12T23:49:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-02-12T23:49:30Z"}, "message": "spe.h: Add casts to the arguments of the following macros...\n\n2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/spe.h: Add casts to the arguments of the following\n        macros: evfsabs, evfsnabs, evfsneg, evfsadd, evfssub, evfsmul,\n        evfsdiv, evfscfui, evfscfsi evfscfuf evfscfsf, evfsctui, evfsctsi,\n        evfsctuf, evfsctsf, evfsctuiz, evfsctsiz, __ev_get_upper*,\n        __ev_get_lower*, __ev_get_u32, __ev_get_s32, __ev_get_fs,\n        __ev_get_u16, __ev_get_s16.\n\nFrom-SVN: r62797", "tree": {"sha": "82f6ba4b1c75f6d1f7aed0afd6d0d724e6191ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82f6ba4b1c75f6d1f7aed0afd6d0d724e6191ac0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c79d7702737c8cf77b7d27bbb6a1e8cfc2a1b9ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79d7702737c8cf77b7d27bbb6a1e8cfc2a1b9ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79d7702737c8cf77b7d27bbb6a1e8cfc2a1b9ee"}], "stats": {"total": 65, "additions": 37, "deletions": 28}, "files": [{"sha": "491b1ef817ac6dfede2d0a570f613e9822074dcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e589cc6ebb91d9faaa2bc652acce9b9b75aa045f", "patch": "@@ -1,3 +1,12 @@\n+2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/spe.h: Add casts to the arguments of the following\n+        macros: evfsabs, evfsnabs, evfsneg, evfsadd, evfssub, evfsmul,\n+        evfsdiv, evfscfui, evfscfsi evfscfuf evfscfsf, evfsctui, evfsctsi,\n+        evfsctuf, evfsctsf, evfsctuiz, evfsctsiz, __ev_get_upper*,\n+        __ev_get_lower*, __ev_get_u32, __ev_get_s32, __ev_get_fs,\n+        __ev_get_u16, __ev_get_s16.\n+\n 2003-02-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (a peephole2): New."}, {"sha": "e9fc48ac93c6a794ae9ab4a8d3fc835b56550598", "filename": "gcc/config/rs6000/spe.h", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f/gcc%2Fconfig%2Frs6000%2Fspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e589cc6ebb91d9faaa2bc652acce9b9b75aa045f/gcc%2Fconfig%2Frs6000%2Fspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.h?ref=e589cc6ebb91d9faaa2bc652acce9b9b75aa045f", "patch": "@@ -292,23 +292,23 @@ typedef int \t\t\t__vector __ev64_opaque__;\n /* These all return V2SF, but we need to cast them to V2SI\n    because the SPE expect all functions to be __ev64_opaque__.  */\n \n-#define __ev_fsabs(a) ((__v2si) __builtin_spe_evfsabs ((__v2sf) a))\n-#define __ev_fsnabs(a) ((__v2si) __builtin_spe_evfsnabs ((__v2sf) a))\n-#define __ev_fsneg(a) ((__v2si) __builtin_spe_evfsneg ((__v2sf) a))\n-#define __ev_fsadd(a, b) ((__v2si) __builtin_spe_evfsadd ((__v2sf) a, (__v2sf) b))\n-#define __ev_fssub(a, b) ((__v2si) __builtin_spe_evfssub ((__v2sf) a, (__v2sf) b))\n-#define __ev_fsmul(a, b) ((__v2si) __builtin_spe_evfsmul ((__v2sf) a, (__v2sf) b))\n-#define __ev_fsdiv(a, b) ((__v2si) __builtin_spe_evfsdiv ((__v2sf) a, (__v2sf) b))\n-#define __ev_fscfui(a) ((__v2si) __builtin_spe_evfscfui ((__v2si) a))\n-#define __ev_fscfsi(a) ((__v2si) __builtin_spe_evfscfsi ((__v2sf) a))\n-#define __ev_fscfuf(a) ((__v2si) __builtin_spe_evfscfuf ((__v2sf) a))\n-#define __ev_fscfsf(a) ((__v2si) __builtin_spe_evfscfsf ((__v2sf) a))\n-#define __ev_fsctui(a) ((__v2si) __builtin_spe_evfsctui ((__v2sf) a))\n-#define __ev_fsctsi(a) ((__v2si) __builtin_spe_evfsctsi ((__v2sf) a))\n-#define __ev_fsctuf(a) ((__v2si) __builtin_spe_evfsctuf ((__v2sf) a))\n-#define __ev_fsctsf(a) ((__v2si) __builtin_spe_evfsctsf ((__v2sf) a))\n-#define __ev_fsctuiz(a) ((__v2si) __builtin_spe_evfsctuiz ((__v2sf) a))\n-#define __ev_fsctsiz(a) ((__v2si) __builtin_spe_evfsctsiz ((__v2sf) a))\n+#define __ev_fsabs(a) ((__v2si) __builtin_spe_evfsabs ((__v2sf) (a)))\n+#define __ev_fsnabs(a) ((__v2si) __builtin_spe_evfsnabs ((__v2sf) (a)))\n+#define __ev_fsneg(a) ((__v2si) __builtin_spe_evfsneg ((__v2sf) (a)))\n+#define __ev_fsadd(a, b) ((__v2si) __builtin_spe_evfsadd ((__v2sf) (a), (__v2sf) (b)))\n+#define __ev_fssub(a, b) ((__v2si) __builtin_spe_evfssub ((__v2sf) (a), (__v2sf) (b)))\n+#define __ev_fsmul(a, b) ((__v2si) __builtin_spe_evfsmul ((__v2sf) (a), (__v2sf) b))\n+#define __ev_fsdiv(a, b) ((__v2si) __builtin_spe_evfsdiv ((__v2sf) (a), (__v2sf) b))\n+#define __ev_fscfui(a) ((__v2si) __builtin_spe_evfscfui ((__v2si) (a)))\n+#define __ev_fscfsi(a) ((__v2si) __builtin_spe_evfscfsi ((__v2sf) (a)))\n+#define __ev_fscfuf(a) ((__v2si) __builtin_spe_evfscfuf ((__v2sf) (a)))\n+#define __ev_fscfsf(a) ((__v2si) __builtin_spe_evfscfsf ((__v2sf) (a)))\n+#define __ev_fsctui(a) ((__v2si) __builtin_spe_evfsctui ((__v2sf) (a)))\n+#define __ev_fsctsi(a) ((__v2si) __builtin_spe_evfsctsi ((__v2sf) (a)))\n+#define __ev_fsctuf(a) ((__v2si) __builtin_spe_evfsctuf ((__v2sf) (a)))\n+#define __ev_fsctsf(a) ((__v2si) __builtin_spe_evfsctsf ((__v2sf) (a)))\n+#define __ev_fsctuiz(a) ((__v2si) __builtin_spe_evfsctuiz ((__v2sf) (a)))\n+#define __ev_fsctsiz(a) ((__v2si) __builtin_spe_evfsctsiz ((__v2sf) (a)))\n \n /* NOT SUPPORTED IN FIRST e500, support via two instructions:  */\n \n@@ -656,12 +656,12 @@ __ev_create_u64 (uint64_t a)\n \n /* __ev_get_* functions.  */\n \n-#define __ev_get_upper_u32(a) __ev_get_u32_internal ((__ev64_opaque__) a, 0)\n-#define __ev_get_lower_u32(a) __ev_get_u32_internal ((__ev64_opaque__) a, 1)\n-#define __ev_get_upper_s32(a) __ev_get_s32_internal ((__ev64_opaque__) a, 0)\n-#define __ev_get_lower_s32(a) __ev_get_s32_internal ((__ev64_opaque__) a, 1)\n-#define __ev_get_upper_fs(a) __ev_get_fs_internal ((__ev64_opaque__) a, 0)\n-#define __ev_get_lower_fs(a) __ev_get_fs_internal ((__ev64_opaque__) a, 1)\n+#define __ev_get_upper_u32(a) __ev_get_u32_internal ((__ev64_opaque__) (a), 0)\n+#define __ev_get_lower_u32(a) __ev_get_u32_internal ((__ev64_opaque__) (a), 1)\n+#define __ev_get_upper_s32(a) __ev_get_s32_internal ((__ev64_opaque__) (a), 0)\n+#define __ev_get_lower_s32(a) __ev_get_s32_internal ((__ev64_opaque__) (a), 1)\n+#define __ev_get_upper_fs(a) __ev_get_fs_internal ((__ev64_opaque__) (a), 0)\n+#define __ev_get_lower_fs(a) __ev_get_fs_internal ((__ev64_opaque__) (a), 1)\n #define __ev_get_upper_ufix32_u32(a) __ev_get_upper_u32(a)\n #define __ev_get_lower_ufix32_u32(a) __ev_get_lower_u32(a)\n #define __ev_get_upper_sfix32_s32(a) __ev_get_upper_s32(a)\n@@ -671,11 +671,11 @@ __ev_create_u64 (uint64_t a)\n #define __ev_get_upper_ufix32_fs(a)  __ev_get_ufix32_fs (a, 0)\n #define __ev_get_lower_ufix32_fs(a)  __ev_get_ufix32_fs (a, 1)\n \n-#define __ev_get_u32(a, b) __ev_get_u32_internal ((__ev64_opaque__) a, b)\n-#define __ev_get_s32(a, b) __ev_get_s32_internal ((__ev64_opaque__) a, b)\n-#define __ev_get_fs(a, b) __ev_get_fs_internal ((__ev64_opaque__) a, b)\n-#define __ev_get_u16(a, b) __ev_get_u16_internal ((__ev64_opaque__) a, b)\n-#define __ev_get_s16(a, b) __ev_get_s16_internal ((__ev64_opaque__) a, b)\n+#define __ev_get_u32(a, b) __ev_get_u32_internal ((__ev64_opaque__) (a), b)\n+#define __ev_get_s32(a, b) __ev_get_s32_internal ((__ev64_opaque__) (a), b)\n+#define __ev_get_fs(a, b) __ev_get_fs_internal ((__ev64_opaque__) (a), b)\n+#define __ev_get_u16(a, b) __ev_get_u16_internal ((__ev64_opaque__) (a), b)\n+#define __ev_get_s16(a, b) __ev_get_s16_internal ((__ev64_opaque__) (a), b)\n \n #define __ev_get_ufix32_u32(a, b) __ev_get_u32 (a, b)\n #define __ev_get_sfix32_s32(a, b) __ev_get_s32 (a, b)"}]}