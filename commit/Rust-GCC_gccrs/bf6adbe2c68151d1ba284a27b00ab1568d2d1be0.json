{"sha": "bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY2YWRiZTJjNjgxNTFkMWJhMjg0YTI3YjAwYWIxNTY4ZDJkMWJlMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-02-06T06:36:18Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-06T06:36:18Z"}, "message": "locale_facets.tcc: Remove `static' keyword on function definitions.\n\n\t* include/bits/locale_facets.tcc: Remove `static' keyword on\n\tfunction definitions.\n\t* include/bits/std_streambuf.h: Likewise.\n\t* src/Makefile.am: Remove use of -fimplicit-templates.\n\t* src/Makefile.in: Regenerated.\n\t* src/locale-inst.cc: Explicitly instantiate more functions.\n\t* src/msic-inst.cc: Likewise.\n\t* src/string-inst.cc: Likewise.\n\nFrom-SVN: r39481", "tree": {"sha": "1832ae41b6bf30d52e05ad77b2e52525c6276203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1832ae41b6bf30d52e05ad77b2e52525c6276203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/comments", "author": null, "committer": null, "parents": [{"sha": "3e897b66f724ecaa3cc9f870b30dd5ff5b3ae49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e897b66f724ecaa3cc9f870b30dd5ff5b3ae49a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e897b66f724ecaa3cc9f870b30dd5ff5b3ae49a"}], "stats": {"total": 147, "additions": 130, "deletions": 17}, "files": [{"sha": "4687d1d416889a7a90e6575e7aae7ef83ce24edb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -1,3 +1,14 @@\n+2001-02-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* include/bits/locale_facets.tcc: Remove `static' keyword on\n+\tfunction definitions.\n+\t* include/bits/std_streambuf.h: Likewise.\n+\t* src/Makefile.am: Remove use of -fimplicit-templates.\n+\t* src/Makefile.in: Regenerated.\n+\t* src/locale-inst.cc: Explicitly instantiate more functions.\n+\t* src/msic-inst.cc: Likewise.\n+\t* src/string-inst.cc: Likewise.\n+\t\n 2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): New"}, {"sha": "1c3860ed2b8ec8b55e9c17df733822f8f2f3aafb", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -970,7 +970,7 @@ namespace std\n \n   // Generic helper function\n   template<typename _CharT, typename _OutIter>\n-    static _OutIter\n+    _OutIter\n     _S_output_float(_OutIter __s, ios_base& __io, _CharT __fill,\n                     const char* __sptr, size_t __slen)\n     {\n@@ -980,7 +980,7 @@ namespace std\n \n   // Partial specialization for ostreambuf_iterator.\n   template<typename _CharT>\n-    static ostreambuf_iterator<_CharT>\n+    ostreambuf_iterator<_CharT>\n     _S_output_float(ostreambuf_iterator<_CharT> __s, ios_base& __io, \n \t\t    _CharT __fill, const char* __sptr, size_t __slen)\n     {"}, {"sha": "e98543af4b97bb4127206e2b4ee11b422130cd9e", "filename": "libstdc++-v3/include/bits/std_streambuf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_streambuf.h?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -43,7 +43,7 @@\n namespace std {\n \n   template<typename _CharT, typename _Traits>\n-    static streamsize\n+    streamsize\n     _S_copy_streambufs(basic_ios<_CharT, _Traits>& _ios,\n \t\t       basic_streambuf<_CharT, _Traits>* __sbin,\n \t\t       basic_streambuf<_CharT, _Traits>* __sbout);"}, {"sha": "4bad5210b853b92ba502f07fb9542a43feb80c94", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.67 2001/02/03 09:01:44 bkoz Exp $\n+## $Id: Makefile.am,v 1.68 2001/02/06 06:32:01 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -298,13 +298,13 @@ myinstallheaders:\n # for things like vptrs, type_info bits, etc. when using\n # -fno-implicit-templates.\n misc-inst.o: misc-inst.cc\n-\t$(CXXCOMPILE) -fimplicit-templates -c $<\n+\t$(CXXCOMPILE) -c $<\n misc-inst.lo: misc-inst.cc\n-\t$(LTCXXCOMPILE) -fimplicit-templates -c $<\n+\t$(LTCXXCOMPILE) -c $<\n locale-inst.o: locale-inst.cc\n-\t$(CXXCOMPILE) -fimplicit-templates -c $<\n+\t$(CXXCOMPILE) -c $<\n locale-inst.lo: locale-inst.cc\n-\t$(LTCXXCOMPILE) -fimplicit-templates -c $<\n+\t$(LTCXXCOMPILE) -c $<\n \n # Use special rules for the deprecated source files so that they find\n # deprecated include files.\n@@ -315,9 +315,9 @@ strstream.o: strstream.cc\n \n # Make wstring-inst.cc from string-inst.cc\n wstring-inst.o: string-inst.cc\n-\t$(CXXCOMPILE) -fimplicit-templates -c -DC=wchar_t $< -o $@\n+\t$(CXXCOMPILE) -c -DC=wchar_t $< -o $@\n wstring-inst.lo: string-inst.cc\n-\t$(LTCXXCOMPILE) -fimplicit-templates -c -DC=wchar_t $< -o $@\n+\t$(LTCXXCOMPILE) -c -DC=wchar_t $< -o $@\n \n \n # Alexandre put this in here for some libtool-related reason."}, {"sha": "a1547862a3c60b67a9367407c6781a401d322faa", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -567,13 +567,13 @@ myinstallheaders:\n # for things like vptrs, type_info bits, etc. when using\n # -fno-implicit-templates.\n misc-inst.o: misc-inst.cc\n-\t$(CXXCOMPILE) -fimplicit-templates -c $<\n+\t$(CXXCOMPILE) -c $<\n misc-inst.lo: misc-inst.cc\n-\t$(LTCXXCOMPILE) -fimplicit-templates -c $<\n+\t$(LTCXXCOMPILE) -c $<\n locale-inst.o: locale-inst.cc\n-\t$(CXXCOMPILE) -fimplicit-templates -c $<\n+\t$(CXXCOMPILE) -c $<\n locale-inst.lo: locale-inst.cc\n-\t$(LTCXXCOMPILE) -fimplicit-templates -c $<\n+\t$(LTCXXCOMPILE) -c $<\n \n # Use special rules for the deprecated source files so that they find\n # deprecated include files.\n@@ -584,9 +584,9 @@ strstream.o: strstream.cc\n \n # Make wstring-inst.cc from string-inst.cc\n wstring-inst.o: string-inst.cc\n-\t$(CXXCOMPILE) -fimplicit-templates -c -DC=wchar_t $< -o $@\n+\t$(CXXCOMPILE) -c -DC=wchar_t $< -o $@\n wstring-inst.lo: string-inst.cc\n-\t$(LTCXXCOMPILE) -fimplicit-templates -c -DC=wchar_t $< -o $@\n+\t$(LTCXXCOMPILE) -c -DC=wchar_t $< -o $@\n \n # Alexandre put this in here for some libtool-related reason.\n all: libstdc++.INC"}, {"sha": "08c6dacf56934fd0bfa50d0d0195d93452b92076", "filename": "libstdc++-v3/src/locale-inst.cc", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -282,5 +282,31 @@ namespace std {\n     locale::facet** \n     fill_n<locale::facet**, unsigned long, locale::facet*>\n     (locale::facet**, unsigned long, locale::facet* const&);\n+\n+  template\n+    const numpunct<char>& \n+    use_facet(const locale&);\n+\n+  template\n+    void __sink_unused_warning<locale::facet*>(locale::facet*);\n+\n+  template\n+    __normal_iterator<locale::facet**, \n+                      vector<locale::facet*> >\n+    fill_n(__normal_iterator<locale::facet**, \n+\t                     vector<locale::facet*> >,\n+\t   unsigned, locale::facet* const&);\n+\n+  template\n+    void\n+    fill (__normal_iterator<locale::facet**, \n+\t                    vector<locale::facet*> >,\n+\t  __normal_iterator<locale::facet**, \n+\t                    vector<locale::facet*> >,\n+\t  locale::facet* const&);\n+\n+  template\n+    const collate<char>&\n+    use_facet<collate<char> >(const locale&);\n } //std\n "}, {"sha": "5556ebf02963a7865320dd8220fd0665b3c34b2e", "filename": "libstdc++-v3/src/misc-inst.cc", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -1,6 +1,6 @@\n // Explicit instantiation file.\n \n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,6 +43,7 @@\n #include <bits/basic_ios.tcc>\n #include <bits/std_istream.h>\n #include <bits/std_ostream.h>\n+#include <bits/std_string.h>\n \n // NB: unnecessary if the .h headers include these\n #ifndef  _GLIBCPP_FULLY_COMPLIANT_HEADERS\n@@ -239,6 +240,69 @@ namespace std {\n     (vector<string>::const_iterator, vector<string>::const_iterator, \n      string*, _Bool<false>);\n \n+  template\n+    void \n+    __sink_unused_warning<char>(char);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    void \n+    __sink_unused_warning<wchar_t>(wchar_t);\n+#endif\n+\n+  template\n+    void\n+    __sink_unused_warning<ostreambuf_iterator<char> > \n+    (ostreambuf_iterator<char>);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    void\n+    __sink_unused_warning<ostreambuf_iterator<wchar_t> > \n+    (ostreambuf_iterator<wchar_t>);\n+#endif\n+\n+  template\n+    void \n+    _S_pad_char (basic_ios<char>&, char*, const char*, int, int);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    void \n+    _S_pad_char (basic_ios<wchar_t>&, wchar_t*, const wchar_t*, int, int);\n+#endif\n+\n+  template\n+    ostreambuf_iterator<char>\n+    _S_pad_numeric (ostreambuf_iterator<char>, _Ios_Fmtflags, char, int,\n+\t\t    const char*, const char*, const char*);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    ostreambuf_iterator<wchar_t>\n+    _S_pad_numeric (ostreambuf_iterator<wchar_t>, _Ios_Fmtflags, wchar_t, int,\n+\t\t    const wchar_t*, const wchar_t*, const wchar_t*);\n+#endif\n+\n+  template\n+    ostreambuf_iterator<char>\n+    _S_output_float (ostreambuf_iterator<char>, ios_base&, char, \n+\t\t     const char*, unsigned);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    ostreambuf_iterator<wchar_t>\n+    _S_output_float (ostreambuf_iterator<wchar_t>, ios_base&, wchar_t, \n+\t\t     const wchar_t*, unsigned);\n+#endif\n+\n+  template\n+    int\n+    _S_copy_streambufs(basic_ios<char>&, \n+\t\t       basic_streambuf<char>*,\n+\t\t       basic_streambuf<char>*); \n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    int\n+    _S_copy_streambufs(basic_ios<wchar_t>&, \n+\t\t       basic_streambuf<wchar_t>*,\n+\t\t       basic_streambuf<wchar_t>*); \n+#endif\n } //std\n \n "}, {"sha": "920311254edebd4e88bc011fdc63b1ca6aaafdc7", "filename": "libstdc++-v3/src/string-inst.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc?ref=bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "patch": "@@ -71,6 +71,9 @@ namespace std\n     S::_S_construct<S::iterator>\n     (S::iterator, S::iterator, const allocator<C>&, forward_iterator_tag);\n \n+  template\n+    S::basic_string(C*, C*, const allocator<C>&);\n+\n   template \n     S::basic_string(S::iterator, S::iterator, const allocator<C>&);\n \n@@ -87,6 +90,15 @@ namespace std\n     C*\n     S::_S_construct(const C*, const C*, const allocator<C>&, \n \t\t    forward_iterator_tag);\n+\n+  template\n+    C*\n+    S::_S_construct (C*, C*, const allocator<C>&, \n+\t\t     forward_iterator_tag);\n+\n+  template\n+    void\n+    __destroy_aux<S*>(S*, S*, _Bool<false>);\n } // namespace std\n \n "}]}