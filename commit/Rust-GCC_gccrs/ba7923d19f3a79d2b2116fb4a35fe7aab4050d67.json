{"sha": "ba7923d19f3a79d2b2116fb4a35fe7aab4050d67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3OTIzZDE5ZjNhNzlkMmIyMTE2ZmI0YTM1ZmU3YWFiNDA1MGQ2Nw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-05-22T14:20:12Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-05-22T14:20:12Z"}, "message": "gcc_release (adjust_dirs, [...]): Remove.\n\n\t* gcc_release (adjust_dirs, maybe_build_tarfile): Remove.\n\t(build_tarfiles): Don't build separate files for languages and\n\tcore.\n\t(build_diffs): Only build one set of diffs.\n\t(announce_snapshot): Only announce one tar file.\n\t(ADA_DIRS, CPLUSPLUS_DIRS, FORTRAN95_DIRS, GO_DIRS, JAVA_DIRS,\n\tOBJECTIVEC_DIRS, TESTSUITE_DIRS): Remove.  Don't adjust names\n\trelative to WORKING_DIRECTORY.\n\nFrom-SVN: r174028", "tree": {"sha": "539856dfd8a4ce8d0c069eeb44934804f712c1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539856dfd8a4ce8d0c069eeb44934804f712c1ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42a2717cb7efd5f685f158304807668b30307cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a2717cb7efd5f685f158304807668b30307cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a2717cb7efd5f685f158304807668b30307cb0"}], "stats": {"total": 86, "additions": 14, "deletions": 72}, "files": [{"sha": "35879c5fcfaf750d2dcfb0a02f323bac1844c78f", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=ba7923d19f3a79d2b2116fb4a35fe7aab4050d67", "patch": "@@ -1,3 +1,14 @@\n+2011-05-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc_release (adjust_dirs, maybe_build_tarfile): Remove.\n+\t(build_tarfiles): Don't build separate files for languages and\n+\tcore.\n+\t(build_diffs): Only build one set of diffs.\n+\t(announce_snapshot): Only announce one tar file.\n+\t(ADA_DIRS, CPLUSPLUS_DIRS, FORTRAN95_DIRS, GO_DIRS, JAVA_DIRS,\n+\tOBJECTIVEC_DIRS, TESTSUITE_DIRS): Remove.  Don't adjust names\n+\trelative to WORKING_DIRECTORY.\n+\n 2011-04-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc_release (maybe_build_tarfile): Don't build a tarfile if"}, {"sha": "ee7822bf39dcb3b4c3e688f13d873f1fd0a028e2", "filename": "maintainer-scripts/gcc_release", "status": "modified", "additions": 3, "deletions": 72, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67/maintainer-scripts%2Fgcc_release", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7923d19f3a79d2b2116fb4a35fe7aab4050d67/maintainer-scripts%2Fgcc_release", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fgcc_release?ref=ba7923d19f3a79d2b2116fb4a35fe7aab4050d67", "patch": "@@ -9,7 +9,7 @@\n # Contents:\n #   Script to create a GCC release.\n #\n-# Copyright (c) 2001, 2002, 2006, 2009, 2010 Free Software Foundation.\n+# Copyright (c) 2001, 2002, 2006, 2009, 2010, 2011 Free Software Foundation.\n #\n # This file is part of GCC.\n #\n@@ -89,16 +89,6 @@ changedir() {\n     error \"Could not change directory to $1\"\n }\n \n-# Each of the arguments is a directory name, relative to the top\n-# of the source tree.  Return another name for that directory, relative\n-# to the working directory.\n-\n-adjust_dirs() {\n-  for x in $@; do\n-    echo `basename ${SOURCE_DIRECTORY}`/$x\n-  done\n-}\n-\n # Build the source tree that will be the basis for the release\n # in ${WORKING_DIRECTORY}/gcc-${RELEASE}.\n \n@@ -247,19 +237,6 @@ build_tarfile() {\n   FILE_LIST=\"${FILE_LIST} ${TARFILE}\"\n }\n \n-# Build a single tarfile if any of the directories listed exist,\n-# but not if none of them do (because that component doesn't exist\n-# on this branch).\n-maybe_build_tarfile() {\n-  dest=$1\n-  shift\n-  if [ $# != 0 -a -d \"$1\" ]; then\n-    build_tarfile \"$dest\" \"$@\"\n-  else\n-    echo \"Not building $dest tarfile\"\n-  fi\n-}\n-\n # Build the various tar files for the release.\n \n build_tarfiles() {\n@@ -275,24 +252,6 @@ build_tarfiles() {\n  \n   # Build one huge tarfile for the entire distribution.\n   build_tarfile gcc-${RELEASE} `basename ${SOURCE_DIRECTORY}`\n-\n-  # Now, build one for each of the languages.\n-  maybe_build_tarfile gcc-ada-${RELEASE} ${ADA_DIRS}\n-  maybe_build_tarfile gcc-g++-${RELEASE} ${CPLUSPLUS_DIRS}\n-  maybe_build_tarfile gcc-fortran-${RELEASE} ${FORTRAN95_DIRS}\n-  maybe_build_tarfile gcc-go-${RELEASE} ${GO_DIRS}\n-  maybe_build_tarfile gcc-java-${RELEASE} ${JAVA_DIRS}\n-  maybe_build_tarfile gcc-objc-${RELEASE} ${OBJECTIVEC_DIRS}\n-  maybe_build_tarfile gcc-testsuite-${RELEASE} ${TESTSUITE_DIRS}\n-   \n-  # The core is everything else.\n-  EXCLUDES=\"\"\n-  for x in ${ADA_DIRS} ${CPLUSPLUS_DIRS} ${FORTRAN95_DIRS}\\\n-\t   ${GO_DIRS} ${JAVA_DIRS} ${OBJECTIVEC_DIRS} ${TESTSUITE_DIRS}; do\n-    EXCLUDES=\"${EXCLUDES} --exclude $x\"\n-  done\n-  build_tarfile gcc-core-${RELEASE} ${EXCLUDES} \\\n-    `basename ${SOURCE_DIRECTORY}`\n }\n \n # Build .gz files.\n@@ -310,7 +269,7 @@ build_diffs() {\n   old_vers=${old_file%.tar.bz2}\n   old_vers=${old_vers#gcc-}\n   inform \"Building diffs against version $old_vers\"\n-  for f in gcc gcc-ada gcc-g++ gcc-fortran gcc-go gcc-java gcc-objc gcc-testsuite gcc-core; do\n+  for f in gcc; do\n     old_tar=${old_dir}/${f}-${old_vers}.tar.bz2\n     new_tar=${WORKING_DIRECTORY}/${f}-${RELEASE}.tar.bz2\n     if [ ! -e $old_tar ]; then\n@@ -435,15 +394,7 @@ with the following options: <code>\"svn://gcc.gnu.org/svn/gcc/${SVNBRANCH} revisi\n \n <table>\" > ${SNAPSHOT_INDEX}\n        \n-  snapshot_print gcc-${RELEASE}.tar.bz2 \"Complete GCC (includes all of below)\"\n-  snapshot_print gcc-core-${RELEASE}.tar.bz2 \"C front end and core compiler\"\n-  snapshot_print gcc-ada-${RELEASE}.tar.bz2 \"Ada front end and runtime\"\n-  snapshot_print gcc-fortran-${RELEASE}.tar.bz2 \"Fortran front end and runtime\"\n-  snapshot_print gcc-g++-${RELEASE}.tar.bz2 \"C++ front end and runtime\"\n-  snapshot_print gcc-go-${RELEASE}.tar.bz2 \"Go front end and runtime\"\n-  snapshot_print gcc-java-${RELEASE}.tar.bz2 \"Java front end and runtime\"\n-  snapshot_print gcc-objc-${RELEASE}.tar.bz2 \"Objective-C front end and runtime\"\n-  snapshot_print gcc-testsuite-${RELEASE}.tar.bz2 \"The GCC testsuite\"\n+  snapshot_print gcc-${RELEASE}.tar.bz2 \"Complete GCC\"\n \n   echo \\\n \"Diffs from \"${BRANCH}\"-\"${LAST_DATE}\" are available in the diffs/ subdirectory.\n@@ -543,16 +494,6 @@ WORKING_DIRECTORY=\"\"\n # The directory that will contain the GCC sources.\n SOURCE_DIRECTORY=\"\"\n \n-# The directories that should be part of the various language-specific\n-# tar files.  These are all relative to the top of the source tree.\n-ADA_DIRS=\"gcc/ada libada gnattools\"\n-CPLUSPLUS_DIRS=\"gcc/cp libstdc++-v3\"\n-FORTRAN95_DIRS=\"gcc/fortran libgfortran\"\n-GO_DIRS=\"gcc/go libgo libffi\"\n-JAVA_DIRS=\"gcc/java libjava libffi boehm-gc\"\n-OBJECTIVEC_DIRS=\"gcc/objc gcc/objcp libobjc\"\n-TESTSUITE_DIRS=\"gcc/testsuite\"\n-\n # Non-zero if this is the final release, rather than a prerelease.\n FINAL=0\n \n@@ -690,16 +631,6 @@ fi\n WORKING_DIRECTORY=\"${DESTINATION}/gcc-${RELEASE}\"\n SOURCE_DIRECTORY=\"${WORKING_DIRECTORY}/gcc-${RELEASE}\"\n \n-# Recompute the names of all the language-specific directories,\n-# relative to the WORKING_DIRECTORY.\n-ADA_DIRS=`adjust_dirs ${ADA_DIRS}`\n-CPLUSPLUS_DIRS=`adjust_dirs ${CPLUSPLUS_DIRS}`\n-FORTRAN95_DIRS=`adjust_dirs ${FORTRAN95_DIRS}`\n-GO_DIRS=`adjust_dirs ${GO_DIRS}`\n-JAVA_DIRS=`adjust_dirs ${JAVA_DIRS}`\n-OBJECTIVEC_DIRS=`adjust_dirs ${OBJECTIVEC_DIRS}`\n-TESTSUITE_DIRS=`adjust_dirs ${TESTSUITE_DIRS}`\n-\n # Set up SVNROOT.\n if [ $LOCAL -eq 0 ]; then\n     SVNROOT=\"svn+ssh://${SVN_USERNAME}@${SVN_SERVER}${SVN_REPOSITORY}\""}]}