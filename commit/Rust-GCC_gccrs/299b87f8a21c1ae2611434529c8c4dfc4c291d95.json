{"sha": "299b87f8a21c1ae2611434529c8c4dfc4c291d95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5Yjg3ZjhhMjFjMWFlMjYxMTQzNDUyOWM4YzRkZmM0YzI5MWQ5NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-01T13:59:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-01T13:59:53Z"}, "message": "fold-const.c (fold_plusminus_mult_expr): Do not fold i * 4 + 2 to (i * 2 + 1) * 2.\n\n2009-04-01  Richard Guenther  <rguenther@suse.de>\n\n\t* fold-const.c (fold_plusminus_mult_expr): Do not fold\n\ti * 4 + 2 to (i * 2 + 1) * 2.\n\n\t* gcc.dg/fold-plusmult-2.c: New testcase.\n\nFrom-SVN: r145403", "tree": {"sha": "68e3daf36617195cce79f5f8595598552dae258e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68e3daf36617195cce79f5f8595598552dae258e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/299b87f8a21c1ae2611434529c8c4dfc4c291d95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299b87f8a21c1ae2611434529c8c4dfc4c291d95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299b87f8a21c1ae2611434529c8c4dfc4c291d95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299b87f8a21c1ae2611434529c8c4dfc4c291d95/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b85eb797e2ffda39def175285b334b721c0b2b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b85eb797e2ffda39def175285b334b721c0b2b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b85eb797e2ffda39def175285b334b721c0b2b4f"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "f4b1e568f5a0105c668e694d8dd11d8b772b9924", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=299b87f8a21c1ae2611434529c8c4dfc4c291d95", "patch": "@@ -1,3 +1,8 @@\n+2009-04-01  Richard Guenther  <rguenther@suse.de>\n+\n+\t* fold-const.c (fold_plusminus_mult_expr): Do not fold\n+\ti * 4 + 2 to (i * 2 + 1) * 2.\n+\n 2009-04-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37772"}, {"sha": "9c1a46322b08a839535e6ca7d2159e39680e7b2e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=299b87f8a21c1ae2611434529c8c4dfc4c291d95", "patch": "@@ -7466,7 +7466,11 @@ fold_plusminus_mult_expr (enum tree_code code, tree type, tree arg0, tree arg1)\n       else\n \tmaybe_same = arg11;\n \n-      if (exact_log2 (abs (int11)) > 0 && int01 % int11 == 0)\n+      if (exact_log2 (abs (int11)) > 0 && int01 % int11 == 0\n+\t  /* The remainder should not be a constant, otherwise we\n+\t     end up folding i * 4 + 2 to (i * 2 + 1) * 2 which has\n+\t     increased the number of multiplications necessary.  */\n+\t  && TREE_CODE (arg10) != INTEGER_CST)\n         {\n \t  alt0 = fold_build2 (MULT_EXPR, TREE_TYPE (arg00), arg00,\n \t\t\t      build_int_cst (TREE_TYPE (arg00),"}, {"sha": "5462bead4bd335ba49d9a4bdcd263708d9a62711", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=299b87f8a21c1ae2611434529c8c4dfc4c291d95", "patch": "@@ -1,3 +1,7 @@\n+2009-04-01  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/fold-plusmult-2.c: New testcase.\n+\n 2009-04-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37772"}, {"sha": "fd5376220a5e26a3de443d719131d3a36ca3c601", "filename": "gcc/testsuite/gcc.dg/fold-plusmult-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plusmult-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299b87f8a21c1ae2611434529c8c4dfc4c291d95/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plusmult-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plusmult-2.c?ref=299b87f8a21c1ae2611434529c8c4dfc4c291d95", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+int foo (int i)\n+{\n+  return 2 + i * 4;\n+}\n+\n+/* We do _not_ want the above to be canonicalized to (i * 2 + 1) * 2.  */\n+\n+int bar (int i)\n+{\n+  return 4 + i * 2;\n+}\n+\n+/* But eventually this to be canonicalized to (i + 2) * 2.  */\n+\n+/* { dg-final { scan-tree-dump \"i \\\\\\* 4 \\\\\\+ 2\" \"original\" } } */\n+/* { dg-final { scan-tree-dump \"\\\\\\(i \\\\\\+ 2\\\\\\) \\\\\\* 2\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}