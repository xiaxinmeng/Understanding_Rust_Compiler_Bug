{"sha": "5536d363074d07d84acb8111f6b1ae2cb1f6d0c3", "node_id": "C_kwDOANBUbNoAKDU1MzZkMzYzMDc0ZDA3ZDg0YWNiODExMWY2YjFhZTJjYjFmNmQwYzM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-25T14:38:25Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-25T14:56:24Z"}, "message": "ast: SimplePath{Segment}: Add NodeId fields", "tree": {"sha": "c8f5002ed7f43f17540aeffabeaf8cb7783909fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8f5002ed7f43f17540aeffabeaf8cb7783909fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5536d363074d07d84acb8111f6b1ae2cb1f6d0c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5536d363074d07d84acb8111f6b1ae2cb1f6d0c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5536d363074d07d84acb8111f6b1ae2cb1f6d0c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5536d363074d07d84acb8111f6b1ae2cb1f6d0c3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a936265bb0e6e042733c501db942615f2a64f705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a936265bb0e6e042733c501db942615f2a64f705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a936265bb0e6e042733c501db942615f2a64f705"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "fa261754bcbd0226a07f6248d356f215e880d76b", "filename": "gcc/rust/ast/rust-ast.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5536d363074d07d84acb8111f6b1ae2cb1f6d0c3/gcc%2Frust%2Fast%2Frust-ast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5536d363074d07d84acb8111f6b1ae2cb1f6d0c3/gcc%2Frust%2Fast%2Frust-ast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.h?ref=5536d363074d07d84acb8111f6b1ae2cb1f6d0c3", "patch": "@@ -325,12 +325,14 @@ class SimplePathSegment : public PathSegment\n {\n   std::string segment_name;\n   Location locus;\n+  NodeId node_id;\n \n   // only allow identifiers, \"super\", \"self\", \"crate\", or \"$crate\"\n public:\n   // TODO: put checks in constructor to enforce this rule?\n   SimplePathSegment (std::string segment_name, Location locus = Location ())\n-    : segment_name (std::move (segment_name)), locus (locus)\n+    : segment_name (std::move (segment_name)), locus (locus),\n+      node_id (Analysis::Mappings::get ()->get_next_node_id ())\n   {}\n \n   /* Returns whether simple path segment is in an invalid state (currently, if\n@@ -346,6 +348,7 @@ class SimplePathSegment : public PathSegment\n   std::string as_string () const override;\n \n   Location get_locus () const { return locus; }\n+  NodeId get_node_id () const { return node_id; }\n \n   // TODO: visitor pattern?\n };\n@@ -356,14 +359,16 @@ class SimplePath\n   bool has_opening_scope_resolution;\n   std::vector<SimplePathSegment> segments;\n   Location locus;\n+  NodeId node_id;\n \n public:\n   // Constructor\n   SimplePath (std::vector<SimplePathSegment> path_segments,\n \t      bool has_opening_scope_resolution = false,\n \t      Location locus = Location ())\n     : has_opening_scope_resolution (has_opening_scope_resolution),\n-      segments (std::move (path_segments)), locus (locus)\n+      segments (std::move (path_segments)), locus (locus),\n+      node_id (Analysis::Mappings::get ()->get_next_node_id ())\n   {}\n \n   // Creates an empty SimplePath.\n@@ -378,6 +383,7 @@ class SimplePath\n   std::string as_string () const;\n \n   Location get_locus () const { return locus; }\n+  NodeId get_node_id () const { return node_id; }\n \n   // does this need visitor if not polymorphic? probably not\n "}]}