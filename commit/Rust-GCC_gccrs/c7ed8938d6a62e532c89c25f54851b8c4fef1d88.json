{"sha": "c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlZDg5MzhkNmE2MmU1MzJjODljMjVmNTQ4NTFiOGM0ZmVmMWQ4OA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-07-13T11:02:15Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-07-13T11:02:15Z"}, "message": "re PR ipa/71633 ([CHKP] internal compiler error: in inline_call)\n\ngcc/\n\n\tPR ipa/71633\n\t* ipa-inline-transform.c (inline_call): Support\n\tinstrumented thunks.\n\ngcc/testsuite/\n\n\tPR ipa/71633\n\t* g++.dg/pr71633.C: New test.\n\nFrom-SVN: r238290", "tree": {"sha": "98e7d146f2b355e33ae56af0b7681f075865f375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98e7d146f2b355e33ae56af0b7681f075865f375"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ce15300a0ef85a37fb9d90299ab73b994b67fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce15300a0ef85a37fb9d90299ab73b994b67fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce15300a0ef85a37fb9d90299ab73b994b67fca"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "03dac3322bdf280f5a255c2f215cb5a82bb8e750", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "patch": "@@ -1,3 +1,9 @@\n+2016-07-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR ipa/71633\n+\t* ipa-inline-transform.c (inline_call): Support\n+\tinstrumented thunks.\n+\n 2016-07-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config/arm/arm.h (TARGET_HAVE_CBZ): Define."}, {"sha": "98c7f96fbb69e4f8d401062493284f20ad1dc43e", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "patch": "@@ -319,10 +319,14 @@ inline_call (struct cgraph_edge *e, bool update_original,\n     to = to->global.inlined_to;\n   if (to->thunk.thunk_p)\n     {\n+      struct cgraph_node *target = to->callees->callee;\n       if (in_lto_p)\n \tto->get_untransformed_body ();\n       to->expand_thunk (false, true);\n-      e = to->callees;\n+      /* When thunk is instrumented we may have multiple callees.  */\n+      for (e = to->callees; e && e->callee != target; e = e->next_callee)\n+\t;\n+      gcc_assert (e);\n     }\n \n "}, {"sha": "c21469b6b94688be0bcd0d3d2998540fa4ad9213", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "patch": "@@ -1,3 +1,8 @@\n+2016-07-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR ipa/71633\n+\t* g++.dg/pr71633.C: New test.\n+\n 2016-07-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* lib/target-supports.exp (check_effective_target_arm_thumb1_cbz_ok):"}, {"sha": "bb69bbb211e1b15f15d16308734489af026bc426", "filename": "gcc/testsuite/g++.dg/pr71633.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71633.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ed8938d6a62e532c89c25f54851b8c4fef1d88/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71633.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71633.C?ref=c7ed8938d6a62e532c89c25f54851b8c4fef1d88", "patch": "@@ -0,0 +1,28 @@\n+/* PR71633 */\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx -O2\" } */\n+\n+class c1\n+{\n+  virtual void fn1 ();\n+};\n+\n+class c2\n+{\n+  virtual int *fn2 () const;\n+};\n+\n+class c3 : c1, c2\n+{\n+  int *fn2 () const;\n+  int *fn3 (int) const;\n+};\n+\n+int *c3::fn2 () const\n+{\n+}\n+\n+int *c3::fn3 (int p) const\n+{\n+  return fn3 (p);\n+}"}]}