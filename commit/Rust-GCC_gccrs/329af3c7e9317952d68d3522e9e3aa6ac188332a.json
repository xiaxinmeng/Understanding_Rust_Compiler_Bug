{"sha": "329af3c7e9317952d68d3522e9e3aa6ac188332a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5YWYzYzdlOTMxNzk1MmQ2OGQzNTIyZTllM2FhNmFjMTg4MzMyYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-08T14:24:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-08T14:24:14Z"}, "message": "re PR c++/49673 ([C++0x] const variables initialised with constexpr constructor placed in .data not .rodata)\n\n\tPR c++/49673\ngcc/c-family/\n\t* c-common.c (c_apply_type_quals_to_decl): Don't check\n\tTYPE_NEEDS_CONSTRUCTING.\ngcc/cp/\n\t* typeck.c (cp_apply_type_quals_to_decl): Don't check\n\tTYPE_NEEDS_CONSTRUCTING.\n\nFrom-SVN: r176045", "tree": {"sha": "75549a817713216b259210ff71bebd09b571d835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75549a817713216b259210ff71bebd09b571d835"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/329af3c7e9317952d68d3522e9e3aa6ac188332a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329af3c7e9317952d68d3522e9e3aa6ac188332a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329af3c7e9317952d68d3522e9e3aa6ac188332a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329af3c7e9317952d68d3522e9e3aa6ac188332a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b862187a34f58510107b5e77917774518ee95b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b862187a34f58510107b5e77917774518ee95b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b862187a34f58510107b5e77917774518ee95b69"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "72a118a942fda2ded8710bd1aedc3b543d38e4dd", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=329af3c7e9317952d68d3522e9e3aa6ac188332a", "patch": "@@ -1,3 +1,9 @@\n+2011-07-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49673\n+\t* c-common.c (c_apply_type_quals_to_decl): Don't check\n+\tTYPE_NEEDS_CONSTRUCTING.\n+\n 2011-07-06  Richard Guenther  <rguenther@suse.de>\n \n \t* c-common.c (c_common_nodes_and_builtins):"}, {"sha": "3ffacd5b444f03b159956817e80a86d12ffe7106", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=329af3c7e9317952d68d3522e9e3aa6ac188332a", "patch": "@@ -4058,14 +4058,11 @@ c_apply_type_quals_to_decl (int type_quals, tree decl)\n   if (type == error_mark_node)\n     return;\n \n-  if (((type_quals & TYPE_QUAL_CONST)\n-       || (type && TREE_CODE (type) == REFERENCE_TYPE))\n-      /* An object declared 'const' is only readonly after it is\n-\t initialized.  We don't have any way of expressing this currently,\n-\t so we need to be conservative and unset TREE_READONLY for types\n-\t with constructors.  Otherwise aliasing code will ignore stores in\n-\t an inline constructor.  */\n-      && !(type && TYPE_NEEDS_CONSTRUCTING (type)))\n+  if ((type_quals & TYPE_QUAL_CONST)\n+      || (type && TREE_CODE (type) == REFERENCE_TYPE))\n+    /* We used to check TYPE_NEEDS_CONSTRUCTING here, but now a constexpr\n+       constructor can produce constant init, so rely on cp_finish_decl to\n+       clear TREE_READONLY if the variable has non-constant init.  */\n     TREE_READONLY (decl) = 1;\n   if (type_quals & TYPE_QUAL_VOLATILE)\n     {"}, {"sha": "469e6cb1a146e541595f5520ad5ec317dc184d62", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=329af3c7e9317952d68d3522e9e3aa6ac188332a", "patch": "@@ -1,3 +1,9 @@\n+2011-07-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49673\n+\t* typeck.c (cp_apply_type_quals_to_decl): Don't check\n+\tTYPE_NEEDS_CONSTRUCTING.\n+\n 2011-07-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49663"}, {"sha": "f0d68c3dca58b7e31b1fc4a36e18f9fb225f4771", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=329af3c7e9317952d68d3522e9e3aa6ac188332a", "patch": "@@ -8127,12 +8127,12 @@ cp_apply_type_quals_to_decl (int type_quals, tree decl)\n \t\t&& type_quals != TYPE_UNQUALIFIED));\n \n   /* Avoid setting TREE_READONLY incorrectly.  */\n-  if (/* If the object has a constructor, the constructor may modify\n-\t the object.  */\n-      TYPE_NEEDS_CONSTRUCTING (type)\n-      /* If the type isn't complete, we don't know yet if it will need\n+  /* We used to check TYPE_NEEDS_CONSTRUCTING here, but now a constexpr\n+     constructor can produce constant init, so rely on cp_finish_decl to\n+     clear TREE_READONLY if the variable has non-constant init.  */\n+  if (/* If the type isn't complete, we don't know yet if it will need\n \t constructing.  */\n-      || !COMPLETE_TYPE_P (type)\n+      !COMPLETE_TYPE_P (type)\n       /* If the type has a mutable component, that component might be\n \t modified.  */\n       || TYPE_HAS_MUTABLE_P (type))"}, {"sha": "9393815eab77d3108d5c1a67cfee08d602e62656", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=329af3c7e9317952d68d3522e9e3aa6ac188332a", "patch": "@@ -1,3 +1,8 @@\n+2011-07-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49673\n+\t* g++.dg/cpp0x/constexpr-rom.C: New.\n+\n 2011-07-08  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR middle-end/49519"}, {"sha": "e2edb2e345d767a5c57d59e1c6568f7cd2ea86ab", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-rom.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329af3c7e9317952d68d3522e9e3aa6ac188332a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C?ref=329af3c7e9317952d68d3522e9e3aa6ac188332a", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/49673: check that test_data goes into .rodata\n+// { dg-options -std=c++0x }\n+// { dg-final { scan-assembler \"rodata\" } }\n+\n+struct Data\n+{\n+  int i;\n+  constexpr Data(int i = 0) : i(i+1) {}\n+};\n+\n+extern const Data test_data = { 1 };"}]}