{"sha": "380d62c14c99d8df13b7a86660e7ee67d01ad827", "node_id": "C_kwDOANBUbNoAKDM4MGQ2MmMxNGM5OWQ4ZGYxM2I3YTg2NjYwZTdlZTY3ZDAxYWQ4Mjc", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-12-05T05:27:08Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-12-05T05:27:08Z"}, "message": "gimple-fold: Refine gimple_fold_partial_load_store_mem_ref [PR107412]\n\nFollowing Richard's review comments, this patch is to use\nuntruncated type for the length used for IFN_LEN_{LOAD,STORE}\ninstead of \"unsigned int\" for better robustness.  It also\navoid to use to_constant and tree arithmetic for subtraction.\n\nCo-authored-by: Richard Sandiford  <richard.sandiford@arm.com>\n\n\tPR tree-optimization/107412\n\ngcc/ChangeLog:\n\n\t* gimple-fold.cc (gimple_fold_partial_load_store_mem_ref): Use\n\tuntruncated type for the length, and avoid to_constant and tree\n\tarithmetic for subtraction.", "tree": {"sha": "306f2a941297b5561bf14eaff06a8f06a9a55285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/306f2a941297b5561bf14eaff06a8f06a9a55285"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/380d62c14c99d8df13b7a86660e7ee67d01ad827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/380d62c14c99d8df13b7a86660e7ee67d01ad827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/380d62c14c99d8df13b7a86660e7ee67d01ad827", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/380d62c14c99d8df13b7a86660e7ee67d01ad827/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "102f3cef568e685d5f65a712f75e0628e3c1733c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102f3cef568e685d5f65a712f75e0628e3c1733c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/102f3cef568e685d5f65a712f75e0628e3c1733c"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "88d14c7adcc764c2ee72f696831bcf0740542acb", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/380d62c14c99d8df13b7a86660e7ee67d01ad827/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/380d62c14c99d8df13b7a86660e7ee67d01ad827/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=380d62c14c99d8df13b7a86660e7ee67d01ad827", "patch": "@@ -5387,18 +5387,17 @@ gimple_fold_partial_load_store_mem_ref (gcall *call, tree vectype, bool mask_p)\n       tree mask = gimple_call_arg (call, 2);\n       if (!integer_all_onesp (mask))\n \treturn NULL_TREE;\n-    } else {\n+    }\n+  else\n+    {\n       tree basic_len = gimple_call_arg (call, 2);\n-      if (!tree_fits_uhwi_p (basic_len))\n+      if (!poly_int_tree_p (basic_len))\n \treturn NULL_TREE;\n       unsigned int nargs = gimple_call_num_args (call);\n       tree bias = gimple_call_arg (call, nargs - 1);\n-      gcc_assert (tree_fits_shwi_p (bias));\n-      tree biased_len = int_const_binop (MINUS_EXPR, basic_len, bias);\n-      unsigned int len = tree_to_uhwi (biased_len);\n-      unsigned int vect_len\n-\t= GET_MODE_SIZE (TYPE_MODE (vectype)).to_constant ();\n-      if (vect_len != len)\n+      gcc_assert (TREE_CODE (bias) == INTEGER_CST);\n+      if (maybe_ne (wi::to_poly_widest (basic_len) - wi::to_widest (bias),\n+\t\t    GET_MODE_SIZE (TYPE_MODE (vectype))))\n \treturn NULL_TREE;\n     }\n "}]}