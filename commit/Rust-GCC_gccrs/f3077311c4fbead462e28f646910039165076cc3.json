{"sha": "f3077311c4fbead462e28f646910039165076cc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMwNzczMTFjNGZiZWFkNDYyZTI4ZjY0NjkxMDAzOTE2NTA3NmNjMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-01-24T07:36:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-01-24T07:36:18Z"}, "message": "fold-const.c (fold): Change UINT_MAX test to check vs precision rather than TYPE_MAX_VALUE.\n\n        * fold-const.c (fold): Change UINT_MAX test to check vs precision\n        rather than TYPE_MAX_VALUE.  Fix indentation and a bogus negation.\n\nFrom-SVN: r49174", "tree": {"sha": "11e6c50d2f8635688147c231a54bb4d34f8163e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11e6c50d2f8635688147c231a54bb4d34f8163e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3077311c4fbead462e28f646910039165076cc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3077311c4fbead462e28f646910039165076cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3077311c4fbead462e28f646910039165076cc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3077311c4fbead462e28f646910039165076cc3/comments", "author": null, "committer": null, "parents": [{"sha": "ddd69607433a8cd05cf50c524746bea197205b6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd69607433a8cd05cf50c524746bea197205b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd69607433a8cd05cf50c524746bea197205b6d"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "de4b9fc0ff27136b51e3ac410c178e2c58360ec5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3077311c4fbead462e28f646910039165076cc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3077311c4fbead462e28f646910039165076cc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3077311c4fbead462e28f646910039165076cc3", "patch": "@@ -1,3 +1,8 @@\n+2002-01-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* fold-const.c (fold): Change UINT_MAX test to check vs precision\n+\trather than TYPE_MAX_VALUE.  Fix indentation and a bogus negation.\n+\n 2002-01-24  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sh/sh.md (symGOT_load, sym2GOT, sym2GOTOFF): New expands."}, {"sha": "2f0d4ace1c1f84d3fd7e65e8a9a84c91bfd632c5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3077311c4fbead462e28f646910039165076cc3/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3077311c4fbead462e28f646910039165076cc3/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f3077311c4fbead462e28f646910039165076cc3", "patch": "@@ -6703,7 +6703,7 @@ fold (expr)\n \t\t}\n \n \t    else if (TREE_INT_CST_HIGH (arg1) == -1\n-\t\t     && (- TREE_INT_CST_LOW (arg1)\n+\t\t     && (TREE_INT_CST_LOW (arg1)\n \t\t\t == ((unsigned HOST_WIDE_INT) 1 << (width - 1)))\n \t\t     && ! TREE_UNSIGNED (TREE_TYPE (arg1)))\n \t      switch (TREE_CODE (t))\n@@ -6729,12 +6729,11 @@ fold (expr)\n \t\t}\n \n \t    else if (TREE_INT_CST_HIGH (arg1) == 0\n-\t\t      && (TREE_INT_CST_LOW (arg1)\n-\t\t\t  == ((unsigned HOST_WIDE_INT) 1 << (width - 1)) - 1)\n-\t\t      && TREE_UNSIGNED (TREE_TYPE (arg1))\n-\t\t\t /* signed_type does not work on pointer types.  */\n-\t\t      && INTEGRAL_TYPE_P (TREE_TYPE (arg1)))\n-\n+\t\t     && (TREE_INT_CST_LOW (arg1)\n+\t\t\t == ((unsigned HOST_WIDE_INT) 1 << (width - 1)) - 1)\n+\t\t     && TREE_UNSIGNED (TREE_TYPE (arg1))\n+\t\t     /* signed_type does not work on pointer types.  */\n+\t\t     && INTEGRAL_TYPE_P (TREE_TYPE (arg1)))\n \t      switch (TREE_CODE (t))\n \t\t{\n \t\tcase LE_EXPR:\n@@ -6754,9 +6753,10 @@ fold (expr)\n \t\t  break;\n \t\t}\n \n-            else if (TREE_UNSIGNED (TREE_TYPE (arg1))\n-                     && tree_int_cst_equal (TYPE_MAX_VALUE (TREE_TYPE (arg1)),\n-                                            arg1))\n+            else if (TREE_INT_CST_HIGH (arg1) == 0\n+\t\t     && (TREE_INT_CST_LOW (arg1)\n+\t\t\t == ((unsigned HOST_WIDE_INT) 2 << (width - 1)) - 1)\n+\t\t     && TREE_UNSIGNED (TREE_TYPE (arg1)))\n               switch (TREE_CODE (t))\n                 {\n                 case GT_EXPR:"}]}