{"sha": "c08de9db47cea407e4399c987d2b8b9b6a6413ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA4ZGU5ZGI0N2NlYTQwN2U0Mzk5Yzk4N2QyYjhiOWI2YTY0MTNlZA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-03-11T14:49:57Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-03-11T14:49:57Z"}, "message": "re PR fortran/78854 ([F03] DTIO namelist output not working on internal unit)\n\n2017-03-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/78854\n\t* io/list_read.c (nml_get_obj_data): Stash internal unit for\n\tlater use by child procedures.\n\t* io/write.c (nml_write_obj): Likewise.\n\t* io/tranfer.c (data_transfer_init): Minor whitespace.\n\t* io/unit.c (set_internal_uit): Look for the stashed internal\n\tunit and use it if found.\n\n\t* gfortran.dg/dtio_25.f90: New test.\n\nFrom-SVN: r246070", "tree": {"sha": "0c0816499c2d1669fe279e6c7c3afde3190d275d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c0816499c2d1669fe279e6c7c3afde3190d275d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c08de9db47cea407e4399c987d2b8b9b6a6413ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c08de9db47cea407e4399c987d2b8b9b6a6413ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c08de9db47cea407e4399c987d2b8b9b6a6413ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c08de9db47cea407e4399c987d2b8b9b6a6413ed/comments", "author": null, "committer": null, "parents": [{"sha": "85059a38cba2e84d0242f5d0b835ab95ad4b4965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85059a38cba2e84d0242f5d0b835ab95ad4b4965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85059a38cba2e84d0242f5d0b835ab95ad4b4965"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "5607171ee5e0962a0f8f09ce2a6f1141469eb1e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -1,3 +1,8 @@\n+2017-03-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/78854\n+\t* gfortran.dg/dtio_25.f90: New test.\n+\n 2017-03-10  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/tree-ssa/builtin-sprintf-warn-3.c: Add a test case."}, {"sha": "fc049cd3e374789030baa4f9b03c62814dcf7fe2", "filename": "gcc/testsuite/gfortran.dg/dtio_25.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_25.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_25.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_25.f90?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do run }\n+! PR78854 namelist write to internal unit.\n+module m\n+  implicit none\n+  type :: t\n+    character :: c\n+    integer :: k\n+  contains\n+    procedure :: write_formatted\n+    generic :: write(formatted) => write_formatted\n+  end type\n+contains\n+  subroutine write_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n+    class(t), intent(in) :: dtv\n+    integer, intent(in) :: unit\n+    character(*), intent(in) :: iotype\n+    integer, intent(in) :: v_list(:)\n+    integer, intent(out) :: iostat\n+    character(*), intent(inout) :: iomsg\n+    if (iotype.eq.\"NAMELIST\") then\n+      write (unit, '(a,a,a,a,i5)') 'x%c=\"',dtv%c,'\",','x%k=', dtv%k\n+    else\n+      write (unit,*) dtv%c, dtv%k\n+    end if\n+  end subroutine\n+end module\n+\n+program p\n+  use m\n+  implicit none\n+  character(len=50) :: buffer\n+  type(t) :: x\n+  namelist /nml/ x\n+  x = t('a', 5)\n+  write (buffer, nml)\n+  if (buffer.ne.'&NML x%c=\"a\",x%k=    5  /') call abort\n+  x = t('x', 0)\n+  read (buffer, nml)\n+  if (x%c.ne.'a'.or. x%k.ne.5) call abort\n+end\n+"}, {"sha": "c16b6788b142d9f8e31569e30f3a2f671a2ac0e1", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -1,3 +1,13 @@\n+2017-03-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/78854\n+\t* io/list_read.c (nml_get_obj_data): Stash internal unit for\n+\tlater use by child procedures.\n+\t* io/write.c (nml_write_obj): Likewise.\n+\t* io/tranfer.c (data_transfer_init): Minor whitespace.\n+\t* io/unit.c (set_internal_uit): Look for the stashed internal\n+\tunit and use it if found.\n+\n 2017-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/79956"}, {"sha": "7f57ff1a91606629e9658d11068bd30892edcab1", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -3301,6 +3301,11 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \t  child_iomsg_len = IOMSG_LEN;\n \t}\n \n+      /* If reading from an internal unit, stash it to allow\n+\t the child procedure to access it.  */\n+      if (is_internal_unit (dtp))\n+\tstash_internal_unit (dtp);\n+\n       /* Call the user defined formatted READ procedure.  */\n       dtp->u.p.current_unit->child_dtio++;\n       dtio_ptr ((void *)&list_obj, &unit, iotype, &vlist,"}, {"sha": "fc22d802196ee94926e7259025f57528d6e56b2a", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -2822,6 +2822,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \t  return;\n \t}\n     }\n+\n   /* Process the ADVANCE option.  */\n \n   dtp->u.p.advance_status"}, {"sha": "b733b939b69edf90274f120971b0bd465fccc4a1", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -461,6 +461,7 @@ set_internal_unit (st_parameter_dt *dtp, gfc_unit *iunit, int kind)\n {\n   gfc_offset start_record = 0;\n \n+  iunit->unit_number = dtp->common.unit;\n   iunit->recl = dtp->internal_unit_len;\n   iunit->internal_unit = dtp->internal_unit;\n   iunit->internal_unit_len = dtp->internal_unit_len;\n@@ -598,15 +599,28 @@ get_unit (st_parameter_dt *dtp, int do_create)\n \t  return unit;\n \t}\n     }\n+\n+  /* If an internal unit number is passed from the parent to the child\n+     it should have been stashed on the newunit_stack ready to be used.\n+     Check for it now and return the internal unit if found.  */\n+  if (newunit_tos && (dtp->common.unit <= NEWUNIT_START)\n+      && (dtp->common.unit == newunit_stack[newunit_tos].unit_number))\n+    {\n+      unit = newunit_stack[newunit_tos--].unit;\n+      return unit;\n+    }\n+\n   /* Has to be an external unit.  */\n   dtp->u.p.unit_is_internal = 0;\n   dtp->internal_unit = NULL;\n   dtp->internal_unit_desc = NULL;\n+\n   /* For an external unit with unit number < 0 creating it on the fly\n      is not allowed, such units must be created with\n      OPEN(NEWUNIT=...).  */\n   if (dtp->common.unit < 0)\n     return get_gfc_unit (dtp->common.unit, 0);\n+\n   return get_gfc_unit (dtp->common.unit, do_create);\n }\n "}, {"sha": "f03929e49f8039003a7f81e3c11d00a3342e8788", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c08de9db47cea407e4399c987d2b8b9b6a6413ed/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=c08de9db47cea407e4399c987d2b8b9b6a6413ed", "patch": "@@ -2253,6 +2253,12 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t\t      child_iomsg_len = IOMSG_LEN;\n \t\t    }\n \t\t  namelist_write_newline (dtp);\n+\n+\t\t  /* If writing to an internal unit, stash it to allow\n+\t\t     the child procedure to access it.  */\n+\t\t  if (is_internal_unit (dtp))\n+\t\t    stash_internal_unit (dtp);\n+\t\t      \n \t\t  /* Call the user defined formatted WRITE procedure.  */\n \t\t  dtp->u.p.current_unit->child_dtio++;\n \t\t  dtio_ptr ((void *)&list_obj, &unit, iotype, &vlist,"}]}