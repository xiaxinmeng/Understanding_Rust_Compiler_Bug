{"sha": "2b8453c401b699ed93c085d0413ab4b5030bcdb8", "node_id": "C_kwDOANBUbNoAKDJiODQ1M2M0MDFiNjk5ZWQ5M2MwODVkMDQxM2FiNGI1MDMwYmNkYjg", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-06T05:48:49Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-08T02:08:50Z"}, "message": "Enable auto-vectorization at O2 with very-cheap cost model.\n\ngcc/ChangeLog:\n\n\t* common.opt (ftree-vectorize): Add Var(flag_tree_vectorize).\n\t* doc/invoke.texi (Options That Control Optimization): Update\n\tdocuments.\n\t* opts.c (default_options_table): Enable auto-vectorization at\n\tO2 with very-cheap cost model.\n\t(finish_options): Use cheap cost model for\n\texplicit -ftree{,-loop}-vectorize.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/Wstringop-overflow-2.c: Adjust testcase.\n\t* g++.dg/tree-ssa/pr81408.C: Ditto.\n\t* g++.dg/warn/Wuninitialized-13.C: Ditto.\n\t* gcc.dg/Warray-bounds-51.c: Ditto.\n\t* gcc.dg/Warray-parameter-3.c: Ditto.\n\t* gcc.dg/Wstringop-overflow-14.c: Ditto.\n\t* gcc.dg/Wstringop-overflow-21.c: Ditto.\n\t* gcc.dg/Wstringop-overflow-68.c: Ditto.\n\t* gcc.dg/Wstringop-overflow-76.c: Ditto.\n\t* gcc.dg/gomp/pr46032-2.c: Ditto.\n\t* gcc.dg/gomp/pr46032-3.c: Ditto.\n\t* gcc.dg/gomp/simd-2.c: Ditto.\n\t* gcc.dg/gomp/simd-3.c: Ditto.\n\t* gcc.dg/graphite/fuse-1.c: Ditto.\n\t* gcc.dg/pr67089-6.c: Ditto.\n\t* gcc.dg/pr82929-2.c: Ditto.\n\t* gcc.dg/pr82929.c: Ditto.\n\t* gcc.dg/store_merging_1.c: Ditto.\n\t* gcc.dg/store_merging_11.c: Ditto.\n\t* gcc.dg/store_merging_13.c: Ditto.\n\t* gcc.dg/store_merging_15.c: Ditto.\n\t* gcc.dg/store_merging_16.c: Ditto.\n\t* gcc.dg/store_merging_19.c: Ditto.\n\t* gcc.dg/store_merging_24.c: Ditto.\n\t* gcc.dg/store_merging_25.c: Ditto.\n\t* gcc.dg/store_merging_28.c: Ditto.\n\t* gcc.dg/store_merging_30.c: Ditto.\n\t* gcc.dg/store_merging_5.c: Ditto.\n\t* gcc.dg/store_merging_7.c: Ditto.\n\t* gcc.dg/store_merging_8.c: Ditto.\n\t* gcc.dg/strlenopt-85.c: Ditto.\n\t* gcc.dg/tree-ssa/dump-6.c: Ditto.\n\t* gcc.dg/tree-ssa/pr19210-1.c: Ditto.\n\t* gcc.dg/tree-ssa/pr47059.c: Ditto.\n\t* gcc.dg/tree-ssa/pr86017.c: Ditto.\n\t* gcc.dg/tree-ssa/pr91482.c: Ditto.\n\t* gcc.dg/tree-ssa/predcom-1.c: Ditto.\n\t* gcc.dg/tree-ssa/predcom-dse-3.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-3.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-6.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-8.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-9.c: Ditto.\n\t* gcc.dg/tree-ssa/ssa-dse-18.c: Ditto.\n\t* gcc.dg/tree-ssa/ssa-dse-19.c: Ditto.\n\t* gcc.dg/uninit-40.c: Ditto.\n\t* gcc.dg/unroll-7.c: Ditto.\n\t* gcc.misc-tests/help.exp: Ditto.\n\t* gcc.target/i386/avx512vpopcntdqvl-vpopcntd-1.c: Ditto.\n\t* gcc.target/i386/pr34012.c: Ditto.\n\t* gcc.target/i386/pr49781-1.c: Ditto.\n\t* gcc.target/i386/pr95798-1.c: Ditto.\n\t* gcc.target/i386/pr95798-2.c: Ditto.\n\t* gfortran.dg/pr77498.f: Ditto.", "tree": {"sha": "f9a9cf8ec427c026f8a9ff7391e740b72a9cc050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9a9cf8ec427c026f8a9ff7391e740b72a9cc050"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b8453c401b699ed93c085d0413ab4b5030bcdb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8453c401b699ed93c085d0413ab4b5030bcdb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8453c401b699ed93c085d0413ab4b5030bcdb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8453c401b699ed93c085d0413ab4b5030bcdb8/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e20ee6e40643c23b53bacda4db4dd9573d7c8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e20ee6e40643c23b53bacda4db4dd9573d7c8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e20ee6e40643c23b53bacda4db4dd9573d7c8a"}], "stats": {"total": 186, "additions": 98, "deletions": 88}, "files": [{"sha": "52693e226d25f9b30dc568631c007539eb29f99b", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -3034,7 +3034,7 @@ Perform variable tracking and also tag variables that are uninitialized.\n \n ; Alias to enable both -ftree-loop-vectorize and -ftree-slp-vectorize.\n ftree-vectorize\n-Common Optimization\n+Common Var(flag_tree_vectorize) Optimization\n Enable vectorization on trees.\n \n ftree-vectorizer-verbose="}, {"sha": "8b3ebcfbc4fc22bf325556c4dfdca708fa9ffa3f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -10453,9 +10453,12 @@ also turns on the following optimization flags:\n -fstrict-aliasing @gol\n -fthread-jumps @gol\n -ftree-builtin-call-dce @gol\n+-ftree-loop-vectorize @gol\n -ftree-pre @gol\n+-ftree-slp-vectorize @gol\n -ftree-switch-conversion  -ftree-tail-merge @gol\n--ftree-vrp}\n+-ftree-vrp @gol\n+-fvect-cost-model=very-cheap}\n \n Please note the warning under @option{-fgcse} about\n invoking @option{-O2} on programs that use computed gotos.\n@@ -10475,11 +10478,8 @@ by @option{-O2} and also turns on the following optimization flags:\n -fsplit-loops @gol\n -fsplit-paths @gol\n -ftree-loop-distribution @gol\n--ftree-loop-vectorize @gol\n -ftree-partial-pre @gol\n--ftree-slp-vectorize @gol\n -funswitch-loops @gol\n--fvect-cost-model @gol\n -fvect-cost-model=dynamic @gol\n -fversion-loops-for-strides}\n "}, {"sha": "2116c2991dd6750c37015d3da3ff16cb0d0f047c", "filename": "gcc/opts.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -634,7 +634,8 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_2_PLUS, OPT_ftree_switch_conversion, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_tail_merge, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_vrp, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fvect_cost_model_, NULL, VECT_COST_MODEL_CHEAP },\n+    { OPT_LEVELS_2_PLUS, OPT_fvect_cost_model_, NULL,\n+      VECT_COST_MODEL_VERY_CHEAP },\n     { OPT_LEVELS_2_PLUS, OPT_finline_functions, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_loop_distribute_patterns, NULL, 1 },\n \n@@ -646,6 +647,8 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_foptimize_strlen, NULL, 1 },\n     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_freorder_blocks_algorithm_, NULL,\n       REORDER_BLOCKS_ALGORITHM_STC },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_ftree_loop_vectorize, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_ftree_slp_vectorize, NULL, 1 },\n #ifdef INSN_SCHEDULING\n   /* Only run the pre-regalloc scheduling pass if optimizing for speed.  */\n     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_fschedule_insns, NULL, 1 },\n@@ -663,9 +666,7 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_3_PLUS, OPT_fsplit_loops, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_fsplit_paths, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribution, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_ftree_loop_vectorize, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_ftree_partial_pre, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_ftree_slp_vectorize, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_funswitch_loops, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_fvect_cost_model_, NULL, VECT_COST_MODEL_DYNAMIC },\n     { OPT_LEVELS_3_PLUS, OPT_fversion_loops_for_strides, NULL, 1 },\n@@ -1343,6 +1344,15 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n     opts->x_flag_complex_method = 1;\n   else if (opts_set->x_flag_cx_fortran_rules)\n     opts->x_flag_complex_method = opts->x_flag_default_complex_method;\n+\n+  /* Use -fvect-cost-model=cheap instead of -fvect-cost-mode=very-cheap\n+     by default with explicit -ftree-{loop,slp}-vectorize.  */\n+  if (opts->x_optimize == 2\n+      && (opts_set->x_flag_tree_loop_vectorize\n+\t  || opts_set->x_flag_tree_vectorize))\n+    SET_OPTION_IF_UNSET (opts, opts_set, flag_vect_cost_model,\n+\t\t\t VECT_COST_MODEL_CHEAP);\n+\n }\n \n #define LEFT_COLUMN\t27"}, {"sha": "7e9da8a02cb85e82db70c4a3080872272c6675ae", "filename": "gcc/testsuite/c-c++-common/Wstringop-overflow-2.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWstringop-overflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWstringop-overflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWstringop-overflow-2.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -190,7 +190,7 @@ void ga1__ (void)\n   struct A1 a = { 1 };\n   a.a[0] = 0;\n   a.a[1] = 1;                    // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n-  a.a[2] = 2;                    // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  a.a[2] = 2;                    // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   sink (&a);\n }\n \n@@ -207,7 +207,7 @@ void ga1_0_ (void)\n   struct A1 a = { 1, { } };\n   a.a[0] = 0;\n   a.a[1] = 1;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n-  a.a[2] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  a.a[2] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   sink (&a);\n }\n \n@@ -221,10 +221,10 @@ void ga1_1 (void)\n   a1_1.a[1] = 1;                // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n   a1_1.a[2] = 2;                // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n \n-  struct A1 a = { 0, { 1 } };\n+  struct A1 a = { 0, { 1 } };   // { dg-warning \"\\\\\\[-Wstringop-overflow\" { target { i?86-*-* x86_64-*-* } } }\n   a.a[0] = 0;\n-  a.a[1] = 1;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n-  a.a[2] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  a.a[1] = 1;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n+  a.a[2] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   sink (&a);\n }\n \n@@ -289,7 +289,7 @@ void ga1i__ (void)\n   struct A1i a = { 0 };\n   a.a[0] = 0;\n   a.a[1] = 1;                    // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n-  a.a[2] = 2;                    // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  a.a[2] = 2;                    // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   sink (&a);\n }\n \n@@ -306,7 +306,7 @@ void ga1i_0_ (void)\n   struct A1 a = { 0, { } };\n   a.a[0] = 0;\n   a.a[1] = 1;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n-  a.a[2] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  a.a[2] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   sink (&a);\n }\n \n@@ -320,10 +320,10 @@ void ga1i_1 (void)\n   a1i_1.a[1] = 1;               // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n   a1i_1.a[2] = 2;               // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n \n-  struct A1 a = { 0, { 1 } };\n+  struct A1 a = { 0, { 1 } };   // { dg-warning \"\\\\\\[-Wstringop-overflow\" { target { i?86-*-* x86_64-*-* } } }\n   a.a[0] = 1;\n-  a.a[1] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n-  a.a[2] = 3;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  a.a[1] = 2;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n+  a.a[2] = 3;                   // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   sink (&a);\n }\n "}, {"sha": "bc14309480c45c45c97eff0a1e6e3ec509ec5e5f", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr81408.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr81408.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr81408.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr81408.C?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -std=gnu++11 -fopt-info-loop-missed\" } */\n+/* { dg-options \"-O2 -std=gnu++11 -fopt-info-loop-missed -fno-tree-vectorize\" } */\n struct p\n {\n   char *ay;"}, {"sha": "210e74c3c3b0acec67f77c4a3dfd79e8c445dc4e", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-13.C?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -5,7 +5,7 @@\n struct shared_count {\n   shared_count () { }\n   shared_count (shared_count &r)\n-    : pi (r.pi) { }     // { dg-warning \"\\\\\\[-Wuninitialized\" }\n+    : pi (r.pi) { }     // { dg-warning \"\\\\\\[-Wuninitialized\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   int pi;\n };\n "}, {"sha": "b0b8bdb7938c96792da09b017dd9d72b4d713f30", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-51.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-51.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -38,7 +38,7 @@ void test_struct_char_vla_location (void)\n   } s;\n \n   s.cvla[0] = __LINE__;\n-  s.cvla[nelts - 1] = 0;\n+  s.cvla[nelts - 1] = 0; // { dg-warning \"\\\\\\[-Wstringop-overflow\" { target { i?86-*-* x86_64-*-* } } }\n   s.cvla[nelts] = 0;  // { dg-warning \"\\\\\\[-Warray-bounds\" }\n \n   sink (&s);"}, {"sha": "e2c47e1ed36138849b4d291c51726c29f753280a", "filename": "gcc/testsuite/gcc.dg/Warray-parameter-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-parameter-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-parameter-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-parameter-3.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -59,7 +59,7 @@ void fas1 (int[static 2]);    // { dg-warning \"\\\\\\[-Warray-parameter=\" }\n \n /* Also verify that -Warray-bounds doesn't trigger for ordinary array\n    parameters...  */\n-#pragma GCC optimize \"2\"\n+#pragma GCC optimize (\"2\")\n \n __attribute__ ((noipa)) void\n gca3 (char a[3])\n@@ -77,7 +77,7 @@ gia3 (int a[3])\n __attribute__ ((noipa)) void\n gcas3 (char a[static 3])\n {\n-  a[0] = 0; a[1] = 1; a[2] = 2;\n+  a[0] = 0; a[1] = 1; a[2] = 2; // { dg-warning \"\\\\\\[-Wstringop-overflow\" { target { i?86-*-* x86_64-*-* } } }\n   a[3] = 3;                   // { dg-warning \"\\\\\\[-Warray-bounds\" }\n }\n "}, {"sha": "b648f5b41b14bf1feeb821daeae00f08eba4f3dd", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-14.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-14.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -35,8 +35,8 @@ void test_memcpy_cond (int i)\n void test_int16 (void)\n {\n   char *p = a4 + 1;\n-  *(int16_t*)p = 0;\n-  *(int16_t*)(p + 2) = 0;   // { dg-warning \"writing 2 bytes into a region of size 1\" }\n+  *(int16_t*)p = 0;    // { dg-warning \"writing 4 bytes into a region of size 3\" { target { i?86-*-* x86_64-*-* } } }\n+  *(int16_t*)(p + 2) = 0;   // { dg-warning \"writing 2 bytes into a region of size 1\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n }\n \n "}, {"sha": "e88f7b47894a4ea5bf0e3833cc6417c44a28adc0", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-21.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-21.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -23,10 +23,10 @@ void test_store_zero_length (int i)\n {\n   char a[3];\n   struct S0 *p = (struct S0*)a;\n-  p->a = 0;\n+  p->a = 0;                         // { dg-warning \"\\\\\\[-Wstringop-overflow\" { target { i?86-*-* x86_64-*-* } } }\n   p->b[0] = 0;\n   p->b[1] = 1;                      // { dg-bogus \"\\\\\\[-Wstringop-overflow\" }\n-  p->b[2] = 2;                      // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  p->b[2] = 2;                      // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   p->b[i] = 2;\n   sink (p);\n }\n@@ -50,10 +50,10 @@ void test_store_flexarray (int i)\n {\n   char a[3];\n   struct Sx *p = (struct Sx*)a;\n-  p->a = 0;\n+  p->a = 0;                         // { dg-warning \"\\\\\\[-Wstringop-overflow\" { target { i?86-*-* x86_64-*-* } } }\n   p->b[0] = 0;\n   p->b[1] = 1;                      // { dg-bogus \"\\\\\\[-Wstringop-overflow\" }\n-  p->b[2] = 1;                      // { dg-warning \"\\\\\\[-Wstringop-overflow\" }\n+  p->b[2] = 1;                      // { dg-warning \"\\\\\\[-Wstringop-overflow\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n   p->b[i] = 2;\n   sink (p);\n }"}, {"sha": "09df000499172a3ae6b5961fafc91735c0947743", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-68.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-68.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -58,11 +58,11 @@ void warn_comp_lit_zero (void)\n void warn_comp_lit (void)\n {\n   *(AC2*)a1 = Ac2;      // { dg-warning \"writing 2 bytes into a region of size 1\" \"pr101475\" { xfail *-*-* } }\n-  *(AC4*)a2 = Ac4;      // { dg-warning \"writing 4 bytes into a region of size 2\" \"pr101475\" { xfail *-*-* } }\n-  *(AC4*)a3 = Ac4;      // { dg-warning \"writing 4 bytes into a region of size 3\" \"pr101475\" { xfail *-*-* } }\n-  *(AC8*)a4 = Ac8;      // { dg-warning \"writing 8 bytes into a region of size 4\" \"pr101475\" { xfail *-*-* } }\n-  *(AC8*)a7 = Ac8;      // { dg-warning \"writing 8 bytes into a region of size 7\" \"pr101475\" { xfail *-*-* } }\n-  *(AC16*)a15 = Ac16;   // { dg-warning \"writing 16 bytes into a region of size 15\" \"pr101475\" { xfail *-*-* } }\n+  *(AC4*)a2 = Ac4;      // { dg-warning \"writing 4 bytes into a region of size 2\" \"pr101475\" { xfail { ! { i?86-*-* x86_64-*-* } } } }\n+  *(AC4*)a3 = Ac4;      // { dg-warning \"writing 4 bytes into a region of size 3\" \"pr101475\" { xfail { ! { i?86-*-* x86_64-*-* } } } }\n+  *(AC8*)a4 = Ac8;      // { dg-warning \"writing 8 bytes into a region of size 4\" \"pr101475\" { xfail { ! { i?86-*-* x86_64-*-* } } } }\n+  *(AC8*)a7 = Ac8;      // { dg-warning \"writing 8 bytes into a region of size 7\" \"pr101475\" { xfail { ! { i?86-*-* x86_64-*-* } } } }\n+  *(AC16*)a15 = Ac16;   // { dg-warning \"writing 16 bytes into a region of size 15\" \"pr101475\" { xfail { ! { i?86-*-* x86_64-*-* } } } }\n }\n \n void warn_aggr_decl (void)"}, {"sha": "30b1c9af2e82e4a8e16c23f416d3f0a7f587d5b5", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-76.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-76.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -16,7 +16,7 @@\n    to the larger of the two objects and mentions the offset into it\n    (although the offset might be better included in the warning).  */\n extern char a3[3];\n-extern char a5[5];  // { dg-message \"at offset 5 into destination object 'a5' of size 5\" \"note\" }\n+extern char a5[5];  // { dg-message \"at offset \\[^a-zA-Z\\n\\r\\]*5\\[^a-zA-Z0-9\\]* into destination object 'a5' of size 5\" \"note\" }\n \n void max_a3_a5 (int i)\n {\n@@ -27,27 +27,27 @@ void max_a3_a5 (int i)\n      by its own warning independently of -Wstringop-overflow.  */\n   char *d = MAX (p, q);\n \n-  d[2] = 0;\n+  d[2] = 0;         // { dg-warning \"writing 4 bytes into a region of size 3\" { target { i?86-*-* x86_64-*-* } } }\n   d[3] = 0;\n   d[4] = 0;\n-  d[5] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" }\n+  d[5] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n }\n \n \n // Same as above but with the larger array as the first MAX_EXPR operand.\n extern char b4[4];\n-extern char b6[6];  // { dg-message \"at offset 6 into destination object 'b6' of size 6\" \"note\" }\n+extern char b6[6];  // { dg-message \"at offset \\[^a-zA-Z\\n\\r\\]*6\\[^a-zA-Z0-9\\]* into destination object 'b6' of size 6\" \"note\" }\n \n void max_b6_b4 (int i)\n {\n   char *p = b6 + i;\n   char *q = b4 + i;\n   char *d = MAX (p, q);\n \n-  d[3] = 0;\n+  d[3] = 0;         // { dg-warning \"writing 4 bytes into a region of size 3\" { target { i?86-*-* x86_64-*-* } } }\n   d[4] = 0;\n   d[5] = 0;\n-  d[6] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" }\n+  d[6] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n }\n \n \n@@ -82,7 +82,7 @@ void max_d8_p (char *q, int i)\n struct A3_5\n {\n   char a3[3];  // { dg-message \"at offset 3 into destination object 'a3' of size 3\" \"pr??????\" { xfail *-*-* } }\n-  char a5[5];  // { dg-message \"at offset 5 into destination object 'a5' of size 5\" \"note\" }\n+  char a5[5];  // { dg-message \"at offset 5 into destination object 'a5' of size 5\" \"note\" { xfail { i?86-*-* x86_64-*-* } } }\n };\n \n void max_A3_A5 (int i, struct A3_5 *pa3_5)\n@@ -95,14 +95,14 @@ void max_A3_A5 (int i, struct A3_5 *pa3_5)\n   d[2] = 0;\n   d[3] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" \"pr??????\" { xfail *-*-* } }\n   d[4] = 0;\n-  d[5] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" }\n+  d[5] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n }\n \n \n struct B4_B6\n {\n   char b4[4];\n-  char b6[6];       // { dg-message \"at offset 6 into destination object 'b6' of size 6\" \"note\" }\n+  char b6[6];       // { dg-message \"at offset \\[^a-zA-Z\\n\\r\\]*6\\[^a-zA-Z0-9\\]* into destination object 'b6' of size 6\" \"note\" { xfail { i?86-*-* x86_64-*-* } } }\n };\n \n void max_B6_B4 (int i, struct B4_B6 *pb4_b6)\n@@ -114,7 +114,7 @@ void max_B6_B4 (int i, struct B4_B6 *pb4_b6)\n   d[3] = 0;\n   d[4] = 0;\n   d[5] = 0;\n-  d[6] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" }\n+  d[6] = 0;         // { dg-warning \"writing 1 byte into a region of size 0\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n }\n \n "}, {"sha": "2e5626184899088c23f7bcf7aa214b393888cf35", "filename": "gcc/testsuite/gcc.dg/gomp/pr46032-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr46032-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr46032-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr46032-2.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fopenmp -std=c99 -fipa-pta -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fopenmp -std=c99 -fipa-pta -fdump-tree-optimized\" } */\n \n #define N 2\n "}, {"sha": "da1ab4873856d25d8143bc02206512b7ef94f4a6", "filename": "gcc/testsuite/gcc.dg/gomp/pr46032-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr46032-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr46032-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr46032-3.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fopenmp -std=c99 -fipa-pta -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fopenmp -std=c99 -fipa-pta -fdump-tree-optimized\" } */\n \n #define N 2\n "}, {"sha": "f4912127b81785344b430f5a4cb05544c854c36c", "filename": "gcc/testsuite/gcc.dg/gomp/simd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-2.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fopenmp -fdump-tree-vect-details\" } */\n+/* { dg-options \"-O2 -fopenmp -fvect-cost-model=cheap -fdump-tree-vect-details\" } */\n /* { dg-additional-options \"-msse2\" { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-additional-options \"-mavx\" { target avx } } */\n /* { dg-final { scan-tree-dump-times \"vectorized \\[1-9]\\[0-9]* loops in function\" 5 \"vect\" { target i?86-*-* x86_64-*-* aarch64-*-* } } } */"}, {"sha": "c75060c07ae324b0e96b073c443dcef4d5707844", "filename": "gcc/testsuite/gcc.dg/gomp/simd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-3.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fopenmp -fdump-tree-vect-details\" } */\n+/* { dg-options \"-O2 -fopenmp -fvect-cost-model=cheap -fdump-tree-vect-details\" } */\n /* { dg-additional-options \"-msse2\" { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-additional-options \"-mavx\" { target avx } } */\n /* { dg-final { scan-tree-dump-times \"vectorized \\[1-9]\\[0-9]* loops in function\" 5 \"vect\" { target i?86-*-* x86_64-*-* aarch64-*-* } } } */"}, {"sha": "61289d312c2b8dab136a71d567f8c6f8c9355008", "filename": "gcc/testsuite/gcc.dg/graphite/fuse-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* Check that the two loops are fused and that we manage to fold the two xor\n    operations.  */\n-/* { dg-options \"-O2 -floop-nest-optimize -fdump-tree-forwprop4 -fdump-tree-graphite-all\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -floop-nest-optimize -fdump-tree-forwprop4 -fdump-tree-graphite-all\" } */\n \n /* Make sure we fuse the loops like this:\n AST generated by isl:"}, {"sha": "b59d75b23180328c43976d3e11ebd8ca3186a5e7", "filename": "gcc/testsuite/gcc.dg/pr67089-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-6.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR target/67089 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -ftree-loop-if-convert -fdump-tree-widening_mul\" } */\n \n extern void abort (void);\n "}, {"sha": "b886f1cce763562b06d731717deb196b792def13", "filename": "gcc/testsuite/gcc.dg/pr82929-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82929-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82929-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82929-2.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/82929 */\n /* { dg-do compile { target store_merge } } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n void\n foo (short *p, short *q, short *r)"}, {"sha": "123e1919cec25a9a125af56befc0b95ae09fe4bf", "filename": "gcc/testsuite/gcc.dg/pr82929.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82929.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82929.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82929.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/82929 */\n /* { dg-do compile { target store_merge } } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n void\n foo (short *p, short *q, short *r)"}, {"sha": "91ca925be0edfe3a794040c01bc6b19194420f9b", "filename": "gcc/testsuite/gcc.dg/store_merging_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n struct bar {\n   int a;"}, {"sha": "60ed5cd8bf961a5571018fac2a6117ab6b22a722", "filename": "gcc/testsuite/gcc.dg/store_merging_11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_11.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n struct S { unsigned char b[2]; unsigned short c; unsigned char d[4]; unsigned long e; };\n "}, {"sha": "6e5206dd63a14c4a6b009a86950db6c245c2373a", "filename": "gcc/testsuite/gcc.dg/store_merging_13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_13.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n struct S { unsigned char a, b; unsigned short c; unsigned char d, e, f, g; unsigned long long h; };\n "}, {"sha": "13fcca4aa11df83a83b1577e0a89f3dec7801949", "filename": "gcc/testsuite/gcc.dg/store_merging_15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_15.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n struct S { unsigned char a, b; unsigned short c; unsigned char d, e, f, g; unsigned long long h; };\n "}, {"sha": "cd83f1c0fe5fefda26e9ddc20ab2ffe6ef132f4b", "filename": "gcc/testsuite/gcc.dg/store_merging_16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_16.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -2,7 +2,7 @@\n    are either big or little endian (not pdp endian).  */\n /* { dg-do run { target { lp64 && { i?86-*-* x86_64-*-* powerpc*-*-* aarch64*-*-* } } } } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n __attribute__((noipa)) void\n f1 (unsigned char *p, unsigned long long q)"}, {"sha": "0a2bbc4bfdebe5dce346e60097de524701b4389b", "filename": "gcc/testsuite/gcc.dg/store_merging_19.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_19.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/83843 */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n /* { dg-final { scan-tree-dump-times \"Merging successful\" 3 \"store-merging\" { target store_merge } } } */\n \n __attribute__((noipa)) void"}, {"sha": "5291bb9e98640d9670331a03235f43ee3d133891", "filename": "gcc/testsuite/gcc.dg/store_merging_24.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_24.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/87859 */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging-details\" } */\n /* { dg-final { scan-tree-dump \"New sequence of \\[23] stores to replace old one of 19 stores\" \"store-merging\" { target i?86-*-* x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump \"New sequence of 1 stores to replace old one of 6 stores\" \"store-merging\" { target i?86-*-* x86_64-*-* } } } */\n "}, {"sha": "96611b5e57b3d7d42b4c53bbcce3ee67e155e5e9", "filename": "gcc/testsuite/gcc.dg/store_merging_25.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_25.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/87859 */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging-details\" } */\n /* { dg-final { scan-tree-dump \"New sequence of \\[23] stores to replace old one of 14 stores\" \"store-merging\" { target i?86-*-* x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump \"New sequence of 1 stores to replace old one of 6 stores\" \"store-merging\" { target i?86-*-* x86_64-*-* } } } */\n "}, {"sha": "fadb7fff99320aeb5a85f4a5c1047fff0b1d7e53", "filename": "gcc/testsuite/gcc.dg/store_merging_28.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_28.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/88709 */\n /* { dg-do compile } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fno-ipa-icf -fdump-tree-store-merging-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fno-ipa-icf -fdump-tree-store-merging-details\" } */\n /* { dg-final { scan-tree-dump-times \"New sequence of \\[24] stores to replace old one of 16 stores\" 8 \"store-merging\" { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-tree-dump-times \"New sequence of \\[24] stores to replace old one of 6 stores\" 1 \"store-merging\" { target { ! arm*-*-* } } } } */\n "}, {"sha": "baf94efe733d43b98303aaff20806905487b0e30", "filename": "gcc/testsuite/gcc.dg/store_merging_30.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_30.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/94573 */\n /* { dg-do compile } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging-details\" } */\n /* { dg-final { scan-tree-dump \"New sequence of 4 stores to replace old one of 8 stores\" \"store-merging\" { target lp64 } } } */\n \n int var[43][12];"}, {"sha": "b0cb0da78e06dc410d88cd1c98b63aff40b642f9", "filename": "gcc/testsuite/gcc.dg/store_merging_5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_5.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n /* Make sure that non-aliasing non-constant interspersed stores do not\n    stop chains.  */"}, {"sha": "dbe000a463ed50ba01f437740ba16fd9110379c8", "filename": "gcc/testsuite/gcc.dg/store_merging_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_7.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n /* Check that we can merge consecutive array members through the pointer.\n    PR rtl-optimization/23684.  */"}, {"sha": "d719e0a22573d11c72c46bbb9f885cf11cb6b8e2", "filename": "gcc/testsuite/gcc.dg/store_merging_8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstore_merging_8.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target store_merge } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n struct baz {\n   struct bar {"}, {"sha": "2ba1ee05700faf160bf3888f550f006ee0b1068f", "filename": "gcc/testsuite/gcc.dg/strlenopt-85.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-85.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-85.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-85.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -4,7 +4,7 @@\n    of memory allocated by calloc() even if one or more nul bytes are\n    written into it.\n    { dg-do compile }\n-   { dg-options \"-O2 -fdump-tree-optimized\" } */\n+   { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-optimized\" } */\n \n unsigned n0, n1;\n "}, {"sha": "6c803908781864d1891f943f04474064e70d2546", "filename": "gcc/testsuite/gcc.dg/tree-ssa/dump-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-6.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/90676 - default GIMPLE dumps lack information\n    { dg-do compile }\n-   { dg-options \"-O2 -fdump-tree-store-merging\" }\n+   { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" }\n    { dg-require-effective-target int32plus }\n    { dg-require-effective-target store_merge } */\n "}, {"sha": "b9e40e964c1c70a032a37a43310e079641a5b339", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr19210-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19210-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19210-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19210-1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fopt-info-loop-missed\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fopt-info-loop-missed\" } */\n extern void g(void);\n \n void"}, {"sha": "860cde12c0f5d1a183735f79239bf74e334cb80b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr47059.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr47059.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr47059.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr47059.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Os -fdump-tree-optimized\" } */\n+/* { dg-options \"-Os -fno-tree-vectorize -fdump-tree-optimized\" } */\n \n \n struct struct1"}, {"sha": "c7ef73ad59e464a4a66f378eaa146ada982ebead", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr86017.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr86017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr86017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr86017.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-store-merging\" } */\n \n void f (void*);\n "}, {"sha": "0ddad5731291fd94119ea3cb71cc981ce1bbf667", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr91482.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91482.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91482.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91482.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-ccp1 -fdump-tree-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-ccp1 -fdump-tree-store-merging\" } */\n \n void write64 (void *p)\n {"}, {"sha": "8c3d9a4fc58ccbf3dbbbf11f7ab37b948ab0fb6b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/predcom-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpredcom-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpredcom-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpredcom-1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -funroll-loops --param max-unroll-times=8 -fpredictive-commoning -fdump-tree-pcom-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -funroll-loops --param max-unroll-times=8 -fpredictive-commoning -fdump-tree-pcom-details\" } */\n \n void abort (void);\n "}, {"sha": "1fc8f089345a1c329adefa50aa474c65c888d980", "filename": "gcc/testsuite/gcc.dg/tree-ssa/predcom-dse-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpredcom-dse-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpredcom-dse-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpredcom-dse-3.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fno-inline -fno-tree-loop-distribute-patterns -fpredictive-commoning -fdump-tree-pcom-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fno-inline -fno-tree-loop-distribute-patterns -fpredictive-commoning -fdump-tree-pcom-details\" } */\n \n int arr1[105] = {2, 3, 5, 7, 11, 13, 0};\n int arr2[105] = {2, 3, 5, 7, 11, 13, 0};"}, {"sha": "46f0d0c2317760e7ae7221555002106e23ad00f1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,7 +1,7 @@\n /* Prefetching used to prefer nonsensical unroll factor of 5 in this testcase.  */\n \n /* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 -fdump-tree-aprefetch-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fprefetch-loop-arrays -march=amdfam10 -fdump-tree-aprefetch-details\" } */\n \n #define N 1000000\n "}, {"sha": "3fa71685ace02d5203f632eb601d3c2ea37c73f8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 --param min-insn-to-prefetch-ratio=6 -fdump-tree-aprefetch-details\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 --param min-insn-to-prefetch-ratio=6 -fdump-tree-aprefetch-details\" } */\n \n #define N 1000\n #define K 900"}, {"sha": "00f41c3e4f4d47fa170ea60246d8621e542f917f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-options \"-O2 -fno-tree-loop-distribute-patterns -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fno-tree-loop-distribute-patterns -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n \n #define K 1000000\n int a[K];"}, {"sha": "e8848c30acc10cc0bf5cf109861c715c0aca8f46", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-options \"-O2 -fno-tree-loop-distribute-patterns -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fno-tree-loop-distribute-patterns -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n \n #define K 1000000\n int a[K], b[K];"}, {"sha": "2e7b5b496ead49caf3b9cfee3fa3b26c7b0aa312", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-18.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-optimized\" } */\n int g(_Complex int*);\n int f(void)\n {"}, {"sha": "7bb8d060631f414c7a80840cad0745a565ab5da1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-19.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-19.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-tree-optimized\" } */\n int g(_Complex int*);\n int f(void)\n {"}, {"sha": "8708079d3971f35f82f85bf7117fe357dac56d35", "filename": "gcc/testsuite/gcc.dg/uninit-40.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-40.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/98597 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Wuninitialized\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -Wuninitialized\" } */\n \n union U { double d; int i; float f; };\n struct S { char a; int b; char c; unsigned d; union U e; int f[3]; unsigned g[3]; };"}, {"sha": "695af5757cc8196f565dfff23e0fa411e7cfc68b", "filename": "gcc/testsuite/gcc.dg/unroll-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Funroll-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.dg%2Funroll-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll-7.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-rtl-loop2_unroll-details -funroll-loops\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fdump-rtl-loop2_unroll-details -funroll-loops\" } */\n /* { dg-require-effective-target int32plus } */\n \n extern int *a;"}, {"sha": "eb6d8686c6a1bc5b3b96dfedb5914caa992c60f2", "filename": "gcc/testsuite/gcc.misc-tests/help.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -79,7 +79,7 @@ check_for_options c \"--help=target,optimizers\" \"\" \"\" \"\"\n check_for_options c \"--help=warnings,^joined,^undocumented\" \"\" \"\" \"\"\n check_for_options c \"-Q -O2 --help=optimizers\" {\n -O\n--ftree-loop-vectorize[^\\n]*disabled\n+-ftree-loop-vectorize[^\\n]*enabled\n } \"  -g  \" \"\"\n check_for_options c \"-Q -O3 --help=optimizers\" {\n -O"}, {"sha": "a732bc466dbe73f9a3dabdb084e369ea9c806357", "filename": "gcc/testsuite/gcc.target/i386/avx512vpopcntdqvl-vpopcntd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdqvl-vpopcntd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdqvl-vpopcntd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdqvl-vpopcntd-1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mavx512vpopcntdq -mavx512bw -mavx512vl\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -mavx512vpopcntdq -mavx512bw -mavx512vl\" } */\n /* { dg-require-effective-target avx512vl } */\n /* { dg-require-effective-target avx512vpopcntdqvl } */\n /* { dg-require-effective-target avx512bw } */"}, {"sha": "1c1f0eea52e9f7302b1579140299f6d7d76ca40d", "filename": "gcc/testsuite/gcc.target/i386/pr34012.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34012.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34012.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34012.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,7 +1,7 @@\n /* PR rtl-optimization/34012 */\n /* { dg-do compile } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-O2 -fno-store-merging\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fno-store-merging\" } */\n \n void bar (long int *);\n void"}, {"sha": "d5a2e32db9733b9f7c70e0ae02368800d3991078", "filename": "gcc/testsuite/gcc.target/i386/pr49781-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49781-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49781-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49781-1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fpic -mtune=generic\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -fpic -mtune=generic\" } */\n /* { dg-require-effective-target fpic } */\n \n static int heap[2*(256 +1+29)+1];"}, {"sha": "526f48921fd8565143733668797e0b5fbaa3e377", "filename": "gcc/testsuite/gcc.target/i386/pr95798-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95798-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95798-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95798-1.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR target/95798 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -masm=att -fomit-frame-pointer\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -masm=att -fomit-frame-pointer\" } */\n /* { dg-final { scan-assembler \"1, 8\\\\\\(%rsp,%r\\[a-z0-9]*,8\\\\\\)\" { target lp64 } } } */\n /* { dg-final { scan-assembler \"2, 16\\\\\\(%rsp,%r\\[a-z0-9]*,8\\\\\\)\" { target lp64 } } } */\n /* { dg-final { scan-assembler \"3, 24\\\\\\(%rsp,%r\\[a-z0-9]*,8\\\\\\)\" { target lp64 } } } */"}, {"sha": "6b5c5a73e96a685020a018552361055a123222e0", "filename": "gcc/testsuite/gcc.target/i386/pr95798-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95798-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95798-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95798-2.c?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,6 +1,6 @@\n /* PR target/95798 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -masm=att -fomit-frame-pointer\" } */\n+/* { dg-options \"-O2 -fno-tree-vectorize -masm=att -fomit-frame-pointer\" } */\n /* { dg-final { scan-assembler \"1, 8\\\\\\(%rsp,%r\\[a-z0-9]*,8\\\\\\)\" { target lp64 } } } */\n /* { dg-final { scan-assembler \"2, 16\\\\\\(%rsp,%r\\[a-z0-9]*,8\\\\\\)\" { target lp64 } } } */\n /* { dg-final { scan-assembler \"3, 24\\\\\\(%rsp,%r\\[a-z0-9]*,8\\\\\\)\" { target lp64 } } } */"}, {"sha": "a0fc8275a84af03824707752ca712a99065a7064", "filename": "gcc/testsuite/gfortran.dg/pr77498.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77498.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8453c401b699ed93c085d0413ab4b5030bcdb8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77498.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77498.f?ref=2b8453c401b699ed93c085d0413ab4b5030bcdb8", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-O2 -ffast-math -fdump-tree-pre\" }\n+! { dg-options \"-O2 -fno-tree-vectorize -ffast-math -fdump-tree-pre\" }\n \n       subroutine foo(U,V,R,N,A)\n       integer N"}]}