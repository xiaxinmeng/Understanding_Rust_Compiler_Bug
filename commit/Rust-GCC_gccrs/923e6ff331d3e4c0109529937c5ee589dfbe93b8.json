{"sha": "923e6ff331d3e4c0109529937c5ee589dfbe93b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIzZTZmZjMzMWQzZTRjMDEwOTUyOTkzN2M1ZWU1ODlkZmJlOTNiOA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-09T10:38:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T10:38:54Z"}, "message": "binderr.adb, [...]: New circuitry for handling Maximum_Messages.\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* binderr.adb, errout.adb, errutil.adb: New circuitry for handling\n\tMaximum_Messages.\n\t\n\t* erroutc.adb, erroutc.ads (Warnings_Suppressed): Now tests global\n\twarning status as well.\n\t\n\t* opt.ads (Maximum_Messages): New name for Maximum_Errors.\n\t\n\t* switch-b.adb, switch-c.adb: Change name Maximum_Errors to\n\tMaximum_Messages.\n\t\n\t* bindusg.adb, usage.adb: Update line for -gnatm switch\n\n\t* gnat_ugn.texi: Update documentation for -gnatmnn compiler switch and\n\t-mnn binder switch.\n\n\t* sem_ch10.adb: Minor reformatting.\n\nFrom-SVN: r145822", "tree": {"sha": "31ba08971e0c8db8e92b164c64a7ddadbd742ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31ba08971e0c8db8e92b164c64a7ddadbd742ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/923e6ff331d3e4c0109529937c5ee589dfbe93b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923e6ff331d3e4c0109529937c5ee589dfbe93b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923e6ff331d3e4c0109529937c5ee589dfbe93b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923e6ff331d3e4c0109529937c5ee589dfbe93b8/comments", "author": null, "committer": null, "parents": [{"sha": "beb50807addf7817dafe8c229f9e9d9a09f5b828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb50807addf7817dafe8c229f9e9d9a09f5b828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb50807addf7817dafe8c229f9e9d9a09f5b828"}], "stats": {"total": 173, "additions": 132, "deletions": 41}, "files": [{"sha": "fe58ae8d6d1c604650fd3dec22a180e4fafe811b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -1,3 +1,25 @@\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* binderr.adb, errout.adb, errutil.adb: New circuitry for handling\n+\tMaximum_Messages.\n+\t\n+\t* erroutc.adb, erroutc.ads (Warnings_Suppressed): Now tests global\n+\twarning status as well.\n+\t\n+\t* opt.ads (Maximum_Messages): New name for Maximum_Errors.\n+\t\n+\t* switch-b.adb, switch-c.adb: Change name Maximum_Errors to\n+\tMaximum_Messages.\n+\t\n+\t* bindusg.adb, usage.adb: Update line for -gnatm switch\n+\n+\t* gnat_ugn.texi: Update documentation for -gnatmnn compiler switch and\n+\t-mnn binder switch.\n+\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch10.adb: Minor reformatting.\n+\n 2009-04-09  Bob Duff  <duff@adacore.com>\n \n \t* exp_ch11.adb (Expand_Exception_Handlers, Prepend_Call_To_Handler):"}, {"sha": "830a2f177150a8f2f54feac5735ab809e3342b4c", "filename": "gcc/ada/binderr.adb", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fbinderr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fbinderr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinderr.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,10 +64,24 @@ package body Binderr is\n          Error_Msg_Output (Msg, Info => False);\n       end if;\n \n-      if Warnings_Detected + Errors_Detected > Maximum_Errors then\n-         raise Unrecoverable_Error;\n+      --  If too many warnings print message and then turn off warnings\n+\n+      if Warnings_Detected = Maximum_Messages then\n+         Set_Standard_Error;\n+         Write_Line (\"maximum number of warnings reached\");\n+         Write_Line (\"further warnings will be suppressed\");\n+         Set_Standard_Output;\n+         Warning_Mode := Suppress;\n       end if;\n \n+      --  If too many errors print message and give fatal error\n+\n+      if Errors_Detected = Maximum_Messages then\n+         Set_Standard_Error;\n+         Write_Line (\"fatal error: maximum number of errors exceeded\");\n+         Set_Standard_Output;\n+         raise Unrecoverable_Error;\n+      end if;\n    end Error_Msg;\n \n    --------------------\n@@ -99,7 +113,7 @@ package body Binderr is\n       Warning         : Boolean := False;\n \n    begin\n-      if Warnings_Detected + Errors_Detected > Maximum_Errors then\n+      if Warnings_Detected + Errors_Detected > Maximum_Messages then\n          Write_Str (\"error: maximum errors exceeded\");\n          Write_Eol;\n          return;"}, {"sha": "19d0c147b86af0b974ce382f638f61d9a2ee865a", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -142,7 +142,7 @@ package body Bindusg is\n \n       --  Line for -m switch\n \n-      Write_Line (\"  -mnnn     Limit number of detected errors \" &\n+      Write_Line (\"  -mnnn     Limit number of detected errors/warnings \" &\n                   \"to nnn (1-999999)\");\n \n       --  Line for -M switch"}, {"sha": "042488041b60677cd93f1fcc36933c43876a95a2", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 37, "deletions": 12, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -328,11 +328,20 @@ package body Errout is\n          Warn_On_Instance := Is_Warning_Msg;\n       end if;\n \n-      --  Ignore warning message that is suppressed. Note that style\n-      --  checks are not considered warning messages for this purpose\n+      --  Ignore warning message that is suppressed for this location. Note\n+      --  that style checks are not considered warning messages for this\n+      --  purpose.\n \n       if Is_Warning_Msg and then Warnings_Suppressed (Orig_Loc) then\n          return;\n+\n+      --  For style messages, check too many messages so far\n+\n+      elsif Is_Style_Msg\n+        and then Maximum_Messages /= 0\n+        and then Warnings_Detected >= Maximum_Messages\n+      then\n+         return;\n       end if;\n \n       --  The idea at this stage is that we have two kinds of messages\n@@ -1034,10 +1043,18 @@ package body Errout is\n          end if;\n       end if;\n \n-      --  Terminate if max errors reached\n+      --  If too many warnings turn off warnings\n \n-      if Total_Errors_Detected + Warnings_Detected = Maximum_Errors then\n-         raise Unrecoverable_Error;\n+      if Maximum_Messages /= 0 then\n+         if Warnings_Detected = Maximum_Messages then\n+            Warning_Mode := Suppress;\n+         end if;\n+\n+         --  If too many errors abandon compilation\n+\n+         if Total_Errors_Detected = Maximum_Messages then\n+            raise Unrecoverable_Error;\n+         end if;\n       end if;\n    end Error_Msg_Internal;\n \n@@ -1556,13 +1573,21 @@ package body Errout is\n \n       procedure Write_Max_Errors is\n       begin\n-         if Maximum_Errors /= 0\n-           and then Total_Errors_Detected + Warnings_Detected = Maximum_Errors\n-         then\n-            Set_Standard_Error;\n-            Write_Str (\"fatal error: maximum errors reached\");\n-            Write_Eol;\n-            Set_Standard_Output;\n+         if Maximum_Messages /= 0 then\n+            if Warnings_Detected >= Maximum_Messages then\n+               Set_Standard_Error;\n+               Write_Line (\"maximum number of warnings output\");\n+               Write_Line (\"any further warnings suppressed\");\n+               Set_Standard_Output;\n+            end if;\n+\n+            --  If too many errors print message\n+\n+            if Total_Errors_Detected >= Maximum_Messages then\n+               Set_Standard_Error;\n+               Write_Line (\"fatal error: maximum number of errors detected\");\n+               Set_Standard_Output;\n+            end if;\n          end if;\n       end Write_Max_Errors;\n "}, {"sha": "a5d963f555de435a4bc0720d20bad2c79259b370", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -1340,6 +1340,10 @@ package body Erroutc is\n \n    function Warnings_Suppressed (Loc : Source_Ptr) return Boolean is\n    begin\n+      if Warning_Mode = Suppress then\n+         return True;\n+      end if;\n+\n       --  Loop through table of ON/OFF warnings\n \n       for J in Warnings.First .. Warnings.Last loop"}, {"sha": "f2127deaa39747f21d9ff325a60db417a1118430", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -481,7 +481,8 @@ package Erroutc is\n    --  Determines if given location is covered by a warnings off suppression\n    --  range in the warnings table (or is suppressed by compilation option,\n    --  which generates a warning range for the whole source file). This routine\n-   --  only deals with the general ON/OFF case, not specific warnings\n+   --  only deals with the general ON/OFF case, not specific warnings. True\n+   --  is also returned if warnings are globally suppressed.\n \n    function Warning_Specifically_Suppressed\n      (Loc : Source_Ptr;"}, {"sha": "480a35537a1035466694db705f5047a9b97d9b38", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -548,13 +548,18 @@ package body Errutil is\n          Set_Standard_Output;\n       end if;\n \n-      if Maximum_Errors /= 0\n-        and then Total_Errors_Detected + Warnings_Detected = Maximum_Errors\n-      then\n-         Set_Standard_Error;\n-         Write_Str (\"fatal error: maximum errors reached\");\n-         Write_Eol;\n-         Set_Standard_Output;\n+      if Maximum_Messages /= 0 then\n+         if Warnings_Detected >= Maximum_Messages then\n+            Set_Standard_Error;\n+            Write_Line (\"maximum number of warnings detected\");\n+            Warning_Mode := Suppress;\n+         end if;\n+\n+         if Total_Errors_Detected >= Maximum_Messages then\n+            Set_Standard_Error;\n+            Write_Line (\"fatal error: maximum errors reached\");\n+            Set_Standard_Output;\n+         end if;\n       end if;\n \n       if Warning_Mode = Treat_As_Error then"}, {"sha": "7907023f4d4bfc788b096119046ca10d08fc6b8a", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -3995,9 +3995,13 @@ source output.\n @item -gnatm=@var{n}\n @cindex @option{-gnatm} (@command{gcc})\n Limit number of detected error or warning messages to @var{n}\n-where @var{n} is in the range 1..999_999. The default setting if\n-no switch is given is 9999. Compilation is terminated if this\n-limit is exceeded. The equal sign here is optional.\n+where @var{n} is in the range 1..999999. The default setting if\n+no switch is given is 9999. If the number of warnings reaches this\n+limit, then a message is output and further warnings are suppressed,\n+but the compilation is continued. If the number of error messages\n+reaches this limit, then a message is output and the compilation\n+is abandoned. The equal sign here is optional. A value of zero\n+means that no limit applies.\n \n @item -gnatn\n @cindex @option{-gnatn} (@command{gcc})\n@@ -4488,16 +4492,25 @@ format message or full listing (which as usual is written to\n The @code{m} stands for maximum.\n @end ifclear\n @var{n} is a decimal integer in the\n-range of 1 to 999 and limits the number of error messages to be\n-generated. For example, using @option{-gnatm2} might yield\n+range of 1 to 999999 and limits the number of error or warning\n+messages to be generated. For example, using\n+@option{-gnatm2} might yield\n \n @smallexample\n e.adb:3:04: Incorrect spelling of keyword \"function\"\n e.adb:5:35: missing \"..\"\n-fatal error: maximum errors reached\n+fatal error: maximum number of errors detected\n compilation abandoned\n @end smallexample\n \n+@noindent\n+The default setting if\n+no switch is given is 9999. If the number of warnings reaches this\n+limit, then a message is output and further warnings are suppressed,\n+but the compilation is continued. If the number of error messages\n+reaches this limit, then a message is output and the compilation\n+is abandoned. A value of zero means that no limit applies.\n+\n @noindent\n Note that the equal sign is optional, so the switches\n @option{-gnatm2} and @option{-gnatm=2} are equivalent.\n@@ -7799,9 +7812,15 @@ supported on cross environments only.\n \n @item ^-m^/ERROR_LIMIT=^@var{n}\n @cindex @option{^-m^/ERROR_LIMIT^} (@command{gnatbind})\n-Limit number of detected errors to @var{n}, where @var{n} is\n-in the range 1..999_999. The default value if no switch is\n-given is 9999. Binding is terminated if the limit is exceeded.\n+Limit number of detected errors or warnings to @var{n}, where @var{n} is\n+in the range 1..999999. The default value if no switch is\n+given is 9999. If the number of warnings reaches this limit, then a\n+message is output and further warnings are suppressed, the bind\n+continues in this case. If the number of errors reaches this\n+limit, then a message is output and the bind is abandoned.\n+A value of zero means that no limit is enforced. The equal\n+sign is optional.\n+\n @ifset unw\n Furthermore, under Windows, the sources pointed to by the libraries path\n set in the registry are not searched for."}, {"sha": "3093d374f8f7e57016ef46e5484f0d6c71e71fcb", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -806,10 +806,11 @@ package Opt is\n    --  File name of mapping between unit names, file names and path names.\n    --  (given by switch -gnatem)\n \n-   Maximum_Errors : Int := 9999;\n+   Maximum_Messages : Int := 9999;\n    --  GNAT, GNATBIND\n-   --  Maximum default number of errors before compilation is terminated.\n-   --  Can be overridden using -gnatm (GNAT) or -m (GNATBIND) switch.\n+   --  Maximum default number of errors before compilation is terminated, or in\n+   --  the case of GNAT, maximum number of warnings before further warnings are\n+   --  suppressed. Can be overridden by -gnatm (GNAT) or -m (GNATBIND) switch.\n \n    Maximum_File_Name_Length : Int;\n    --  GNAT, GNATBIND"}, {"sha": "a4a9254c78627c3c8d588752cc644b8861d62003", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -3369,7 +3369,7 @@ package body Sem_Ch10 is\n                                                         N_Subprogram_Body,\n                                                         N_Subunit)\n          then\n-            --  Current unit is private, of descendant of a private unit.\n+            --  Current unit is private, of descendant of a private unit\n \n             null;\n "}, {"sha": "e3e597bcadfb06c6b232137887ad838d93fa2b29", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -286,7 +286,7 @@ package body Switch.B is\n             end if;\n \n             Ptr := Ptr + 1;\n-            Scan_Pos (Switch_Chars, Max, Ptr, Maximum_Errors, C);\n+            Scan_Pos (Switch_Chars, Max, Ptr, Maximum_Messages, C);\n \n          --  Processing for n switch\n "}, {"sha": "23b9551cea598b0509cab1528b6ca8612964fcdd", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -633,7 +633,7 @@ package body Switch.C is\n                   Ptr := Ptr + 1;\n                end if;\n \n-               Scan_Nat (Switch_Chars, Max, Ptr, Maximum_Errors, C);\n+               Scan_Nat (Switch_Chars, Max, Ptr, Maximum_Messages, C);\n \n             --  Processing for n switch\n "}, {"sha": "55a3f49921ae423e6960ddb7a5dd44d07222ac94", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923e6ff331d3e4c0109529937c5ee589dfbe93b8/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=923e6ff331d3e4c0109529937c5ee589dfbe93b8", "patch": "@@ -261,7 +261,7 @@ begin\n    --  Line for -gnatm switch\n \n    Write_Switch_Char (\"mnn\");\n-   Write_Line (\"Limit number of detected errors to nn (1-999999)\");\n+   Write_Line (\"Limit number of detected errors/warnings to nn (1-999999)\");\n \n    --  Line for -gnatn switch\n "}]}