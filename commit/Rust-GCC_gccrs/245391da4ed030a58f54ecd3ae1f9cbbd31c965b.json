{"sha": "245391da4ed030a58f54ecd3ae1f9cbbd31c965b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ1MzkxZGE0ZWQwMzBhNThmNTRlY2QzYWUxZjljYmJkMzFjOTY1Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-09T21:58:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-09T21:58:24Z"}, "message": "(skip_evaluation): New variable.\n\n(&&, ||, ?:): Increment it in unevaluated subexpressions.\n(/, %, integer_overflow): Suppress diagnostics if skip_evaluation != 0.\n(yyerror): Clear skip_evaluation.\n\nFrom-SVN: r9914", "tree": {"sha": "8f47e69c72ff7533b3b8abd2d8214d56b25a2e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f47e69c72ff7533b3b8abd2d8214d56b25a2e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/245391da4ed030a58f54ecd3ae1f9cbbd31c965b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245391da4ed030a58f54ecd3ae1f9cbbd31c965b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/245391da4ed030a58f54ecd3ae1f9cbbd31c965b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245391da4ed030a58f54ecd3ae1f9cbbd31c965b/comments", "author": null, "committer": null, "parents": [{"sha": "17856c497fa53217a7bde0e6c622ad8b61fd956f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17856c497fa53217a7bde0e6c622ad8b61fd956f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17856c497fa53217a7bde0e6c622ad8b61fd956f"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "6082fecbedd37bff7e2d7f33e17b5d89cb4809b5", "filename": "gcc/cexp.y", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245391da4ed030a58f54ecd3ae1f9cbbd31c965b/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245391da4ed030a58f54ecd3ae1f9cbbd31c965b/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=245391da4ed030a58f54ecd3ae1f9cbbd31c965b", "patch": "@@ -86,6 +86,10 @@ static jmp_buf parse_return_error;\n /* Nonzero means count most punctuation as part of a name.  */\n static int keyword_parsing = 0;\n \n+/* Nonzero means do not evaluate this expression.\n+   This is a count, since unevaluated expressions can nest.  */\n+static int skip_evaluation;\n+\n /* some external tables of character types */\n extern unsigned char is_idstart[], is_idchar[], is_hor_space[];\n \n@@ -225,7 +229,8 @@ exp\t:\texp '*' exp\n \t|\texp '/' exp\n \t\t\t{ if ($3.value == 0)\n \t\t\t    {\n-\t\t\t      error (\"division by zero in #if\");\n+\t\t\t      if (!skip_evaluation)\n+\t\t\t\terror (\"division by zero in #if\");\n \t\t\t      $3.value = 1;\n \t\t\t    }\n \t\t\t  $$.unsignedp = $1.unsignedp || $3.unsignedp;\n@@ -240,7 +245,8 @@ exp\t:\texp '*' exp\n \t|\texp '%' exp\n \t\t\t{ if ($3.value == 0)\n \t\t\t    {\n-\t\t\t      error (\"division by zero in #if\");\n+\t\t\t      if (!skip_evaluation)\n+\t\t\t\terror (\"division by zero in #if\");\n \t\t\t      $3.value = 1;\n \t\t\t    }\n \t\t\t  $$.unsignedp = $1.unsignedp || $3.unsignedp;\n@@ -313,15 +319,26 @@ exp\t:\texp '*' exp\n \t|\texp '|' exp\n \t\t\t{ $$.value = $1.value | $3.value;\n \t\t\t  $$.unsignedp = $1.unsignedp || $3.unsignedp; }\n-\t|\texp AND exp\n-\t\t\t{ $$.value = ($1.value && $3.value);\n+\t|\texp AND\n+\t\t\t{ skip_evaluation += !$1.value; }\n+\t\texp\n+\t\t\t{ skip_evaluation -= !$1.value;\n+\t\t\t  $$.value = ($1.value && $4.value);\n \t\t\t  $$.unsignedp = 0; }\n-\t|\texp OR exp\n-\t\t\t{ $$.value = ($1.value || $3.value);\n+\t|\texp OR\n+\t\t\t{ skip_evaluation += !!$1.value; }\n+\t\texp\n+\t\t\t{ skip_evaluation -= !!$1.value;\n+\t\t\t  $$.value = ($1.value || $4.value);\n \t\t\t  $$.unsignedp = 0; }\n-\t|\texp '?' exp ':' exp\n-\t\t\t{ $$.value = $1.value ? $3.value : $5.value;\n-\t\t\t  $$.unsignedp = $3.unsignedp || $5.unsignedp; }\n+\t|\texp '?'\n+\t\t\t{ skip_evaluation += !$1.value; }\n+\t        exp ':'\n+\t\t\t{ skip_evaluation += !!$1.value - !$1.value; }\n+\t\texp\n+\t\t\t{ skip_evaluation -= !!$1.value;\n+\t\t\t  $$.value = $1.value ? $4.value : $7.value;\n+\t\t\t  $$.unsignedp = $4.unsignedp || $7.unsignedp; }\n \t|\tINT\n \t\t\t{ $$ = yylval.integer; }\n \t|\tCHAR\n@@ -865,13 +882,14 @@ yyerror (s)\n      char *s;\n {\n   error (s);\n+  skip_evaluation = 0;\n   longjmp (parse_return_error, 1);\n }\n \n static void\n integer_overflow ()\n {\n-  if (pedantic)\n+  if (!skip_evaluation && pedantic)\n     pedwarn (\"integer overflow in preprocessor expression\");\n }\n "}]}