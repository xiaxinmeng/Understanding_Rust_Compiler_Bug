{"sha": "4b29c5e5434f7aaaabd4b6f314139fde5803b513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyOWM1ZTU0MzRmN2FhYWFiZDRiNmYzMTQxMzlmZGU1ODAzYjUxMw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2009-06-13T21:27:56Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2009-06-13T21:27:56Z"}, "message": "rs6000-protos.h (altivec_resolve_overloaded_builtin): Change first argument type to location_t.\n\n        * config/rs6000/rs6000-protos.h (altivec_resolve_overloaded_builtin):\n        Change first argument type to location_t.\n        * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Same.\n        Do not set input_location.\n        Use loc instead of input_location throughout.\nobjcp/\n        * objcp-decl.h (start_struct): Add location argument.\n        (finish_struct): Same.\n        (finish_decl): New.\n\nFrom-SVN: r148461", "tree": {"sha": "ad96463ea09c41bb6629fc9bc78134fa74144bfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad96463ea09c41bb6629fc9bc78134fa74144bfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b29c5e5434f7aaaabd4b6f314139fde5803b513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b29c5e5434f7aaaabd4b6f314139fde5803b513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b29c5e5434f7aaaabd4b6f314139fde5803b513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b29c5e5434f7aaaabd4b6f314139fde5803b513/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd19075ff986d497b9a37b20ecc301fd3e5d3a22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd19075ff986d497b9a37b20ecc301fd3e5d3a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd19075ff986d497b9a37b20ecc301fd3e5d3a22"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "0fe65b23ea38b50b126ea4a859df70dc3af729c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b29c5e5434f7aaaabd4b6f314139fde5803b513", "patch": "@@ -1,3 +1,11 @@\n+2009-06-13  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/rs6000/rs6000-protos.h (altivec_resolve_overloaded_builtin):\n+\tChange first argument type to location_t.\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Same.\n+\tDo not set input_location.\n+\tUse loc instead of input_location throughout.\n+\n 2009-06-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/40389"}, {"sha": "8a39b9e9f8458a2355199d8801288a077bd063a9", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=4b29c5e5434f7aaaabd4b6f314139fde5803b513", "patch": "@@ -3001,10 +3001,9 @@ altivec_build_resolved_builtin (tree *args, int n,\n    support Altivec's overloaded builtins.  */\n \n tree\n-altivec_resolve_overloaded_builtin (unsigned int loc, tree fndecl,\n+altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t\t\t\t    void *passed_arglist)\n {\n-  location_t input_location = (location_t) loc;\n   VEC(tree,gc) *arglist = (VEC(tree,gc) *) passed_arglist;\n   unsigned int nargs = VEC_length (tree, arglist);\n   unsigned int fcode = DECL_FUNCTION_CODE (fndecl);\n@@ -3115,11 +3114,11 @@ altivec_resolve_overloaded_builtin (unsigned int loc, tree fndecl,\n \tgoto bad; \n       /* Build *(((arg1_inner_type*)&(vector type){arg1})+arg2). */\n       arg1_inner_type = TREE_TYPE (arg1_type);\n-      arg2 = build_binary_op (input_location, BIT_AND_EXPR, arg2,\n+      arg2 = build_binary_op (loc, BIT_AND_EXPR, arg2,\n \t\t\t      build_int_cst (TREE_TYPE (arg2),\n \t\t\t\t\t     TYPE_VECTOR_SUBPARTS (arg1_type)\n \t\t\t\t\t     - 1), 0);\n-      decl = build_decl (input_location, VAR_DECL, NULL_TREE, arg1_type);\n+      decl = build_decl (loc, VAR_DECL, NULL_TREE, arg1_type);\n       DECL_EXTERNAL (decl) = 0;\n       TREE_PUBLIC (decl) = 0;\n       DECL_CONTEXT (decl) = current_function_decl;\n@@ -3129,15 +3128,15 @@ altivec_resolve_overloaded_builtin (unsigned int loc, tree fndecl,\n       DECL_INITIAL (decl) = arg1;\n       stmt = build1 (DECL_EXPR, arg1_type, decl);\n       TREE_ADDRESSABLE (decl) = 1;\n-      SET_EXPR_LOCATION (stmt, input_location);\n+      SET_EXPR_LOCATION (stmt, loc);\n       stmt = build1 (COMPOUND_LITERAL_EXPR, arg1_type, stmt);\n \n       innerptrtype = build_pointer_type (arg1_inner_type);\n \n-      stmt = build_unary_op (input_location, ADDR_EXPR, stmt, 0);\n+      stmt = build_unary_op (loc, ADDR_EXPR, stmt, 0);\n       stmt = convert (innerptrtype, stmt);\n-      stmt = build_binary_op (input_location, PLUS_EXPR, stmt, arg2, 1);\n-      stmt = build_indirect_ref (input_location, stmt, NULL);\n+      stmt = build_binary_op (loc, PLUS_EXPR, stmt, arg2, 1);\n+      stmt = build_indirect_ref (loc, stmt, NULL);\n \n       return stmt;\n     }\n@@ -3171,11 +3170,11 @@ altivec_resolve_overloaded_builtin (unsigned int loc, tree fndecl,\n \tgoto bad; \n       /* Build *(((arg1_inner_type*)&(vector type){arg1})+arg2) = arg0. */\n       arg1_inner_type = TREE_TYPE (arg1_type);\n-      arg2 = build_binary_op (input_location, BIT_AND_EXPR, arg2,\n+      arg2 = build_binary_op (loc, BIT_AND_EXPR, arg2,\n \t\t\t      build_int_cst (TREE_TYPE (arg2),\n \t\t\t\t\t     TYPE_VECTOR_SUBPARTS (arg1_type)\n \t\t\t\t\t     - 1), 0);\n-      decl = build_decl (input_location, VAR_DECL, NULL_TREE, arg1_type);\n+      decl = build_decl (loc, VAR_DECL, NULL_TREE, arg1_type);\n       DECL_EXTERNAL (decl) = 0;\n       TREE_PUBLIC (decl) = 0;\n       DECL_CONTEXT (decl) = current_function_decl;\n@@ -3185,15 +3184,15 @@ altivec_resolve_overloaded_builtin (unsigned int loc, tree fndecl,\n       DECL_INITIAL (decl) = arg1;\n       stmt = build1 (DECL_EXPR, arg1_type, decl);\n       TREE_ADDRESSABLE (decl) = 1;\n-      SET_EXPR_LOCATION (stmt, input_location);\n+      SET_EXPR_LOCATION (stmt, loc);\n       stmt = build1 (COMPOUND_LITERAL_EXPR, arg1_type, stmt);\n \n       innerptrtype = build_pointer_type (arg1_inner_type);\n \n-      stmt = build_unary_op (input_location, ADDR_EXPR, stmt, 0);\n+      stmt = build_unary_op (loc, ADDR_EXPR, stmt, 0);\n       stmt = convert (innerptrtype, stmt);\n-      stmt = build_binary_op (input_location, PLUS_EXPR, stmt, arg2, 1);\n-      stmt = build_indirect_ref (input_location, stmt, NULL);\n+      stmt = build_binary_op (loc, PLUS_EXPR, stmt, arg2, 1);\n+      stmt = build_indirect_ref (loc, stmt, NULL);\n       stmt = build2 (MODIFY_EXPR, TREE_TYPE (stmt), stmt,\n \t\t     convert (TREE_TYPE (stmt), arg0));\n       stmt = build2 (COMPOUND_EXPR, arg1_type, stmt, decl);"}, {"sha": "1b68d440eb8ade399ea0a8db1a3525f9ca19f710", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=4b29c5e5434f7aaaabd4b6f314139fde5803b513", "patch": "@@ -132,7 +132,7 @@ extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t  tree, int, int);\n extern int function_arg_boundary (enum machine_mode, tree);\n extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n-extern tree altivec_resolve_overloaded_builtin (unsigned int, tree, void *);\n+extern tree altivec_resolve_overloaded_builtin (location_t, tree, void *);\n extern rtx rs6000_function_value (const_tree, const_tree);\n extern rtx rs6000_libcall_value (enum machine_mode);\n extern rtx rs6000_va_arg (tree, tree);"}, {"sha": "45985f8db0bb1658d6effe4fd15449d67cce4541", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=4b29c5e5434f7aaaabd4b6f314139fde5803b513", "patch": "@@ -1,3 +1,9 @@\n+2009-06-13  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* objcp-decl.h (start_struct): Add location argument.\n+\t(finish_struct): Same.\n+\t(finish_decl): New.\n+\n 2009-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* objcp-decl.h (c_end_compound_stmt): New argument."}, {"sha": "07d39abaf8f5ea377a9dbaf67f096d08c2bac4f2", "filename": "gcc/objcp/objcp-decl.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fobjcp%2Fobjcp-decl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b29c5e5434f7aaaabd4b6f314139fde5803b513/gcc%2Fobjcp%2Fobjcp-decl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-decl.h?ref=4b29c5e5434f7aaaabd4b6f314139fde5803b513", "patch": "@@ -37,12 +37,14 @@ extern tree objcp_end_compound_stmt (tree, int);\n    invoke the original C++ functions if needed).  */\n #ifdef OBJCP_REMAP_FUNCTIONS\n \n-#define start_struct(code, name, in_struct, struct_types, loc) \\\n-\tobjcp_start_struct (code, name)\n-#define finish_struct(t, fieldlist, attributes, in_struct, struct_types) \\\n-\tobjcp_finish_struct (t, fieldlist, attributes)\n+#define start_struct(loc, code, name, in_struct, struct_types) \\\n+\tobjcp_start_struct (loc, code, name)\n+#define finish_struct(loc, t, fieldlist, attributes, in_struct, struct_types) \\\n+\tobjcp_finish_struct (loc, t, fieldlist, attributes)\n #define finish_function() \\\n \tobjcp_finish_function ()\n+#define finish_decl(decl, loc, init, origtype, asmspec) \\\n+\tcp_finish_decl (decl, init, false, asmspec, 0)\n #define xref_tag(code, name) \\\n \tobjcp_xref_tag (code, name)\n #define comptypes(type1, type2) \\"}]}