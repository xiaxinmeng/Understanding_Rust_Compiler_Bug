{"sha": "4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNhZmYzNjBhYzFhOGIzYzRlN2UwNDMzZDk4MmU4NTYxM2U2YmFjMQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2002-06-28T20:49:36Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2002-06-28T20:49:36Z"}, "message": "m68hc11.h (OPTIMIZATION_OPTIONS): Define.\n\n\t* config/m68hc11/m68hc11.h (OPTIMIZATION_OPTIONS): Define.\n\t* config/m68hc11/m68hc11-protos.h (m68hc11_optimization_options):\n\tDeclare.\n\t* config/m68hc11/m68hc11.c (m68hc11_optimization_options): New,\n\tdo not reorder basic blocks at the end when optimizing for size.\n\nFrom-SVN: r55079", "tree": {"sha": "6f5bac02b790f4a91494f2b7dbca54ba429177fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f5bac02b790f4a91494f2b7dbca54ba429177fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/comments", "author": null, "committer": null, "parents": [{"sha": "1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d63a28afca5d411a1e60bbbebb6f835880ccc7d"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "1f8fbd58ec75474890c135512f3603b5cb1fd71d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "patch": "@@ -5,6 +5,14 @@\n \t(do_define): ...here.\n \t(lex_macro_node): No longer a need to check for comments here.\n \n+2002-06-28  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11.h (OPTIMIZATION_OPTIONS): Define.\n+\t* config/m68hc11/m68hc11-protos.h (m68hc11_optimization_options):\n+\tDeclare.\n+\t* config/m68hc11/m68hc11.c (m68hc11_optimization_options): New,\n+\tdo not reorder basic blocks at the end when optimizing for size.\n+\n 2002-06-28  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.c (autoinc_mode): New function."}, {"sha": "20bc83e152e647328740ba2c616eec15e94e93fc", "filename": "gcc/config/m68hc11/m68hc11-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h?ref=4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "patch": "@@ -1,6 +1,6 @@\n /* Prototypes for exported functions defined in m68hc11.c\n    Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n-   Contributed by Stephane Carrez (stcarrez@worldnet.fr)\n+   Contributed by Stephane Carrez (stcarrez@nerim.fr)\n \n This file is part of GNU CC.\n \n@@ -21,6 +21,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n extern int m68hc11_override_options PARAMS((void));\n+extern int m68hc11_optimization_options PARAMS((int,int));\n extern void m68hc11_conditional_register_usage PARAMS((void));\n extern int hard_regno_mode_ok PARAMS((int, enum machine_mode));\n "}, {"sha": "be7b24b084afddfa6d0bb7242eb66a0344eaef7e", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "patch": "@@ -288,6 +288,21 @@ m68hc11_override_options ()\n }\n \n \n+int\n+m68hc11_optimization_options (level, size)\n+     int level ATTRIBUTE_UNUSED;\n+     int size;\n+{\n+  /* When optimizing for size, do not reorder basic blocks because\n+     it duplicates some insns for speed and this results in larder code.\n+     This reordering can still be enabled but explicitly.  */\n+  if (size)\n+    {\n+      flag_reorder_blocks = 0;\n+    }\n+  return 0;\n+}\n+\n void\n m68hc11_conditional_register_usage ()\n {"}, {"sha": "467862f3655fa8932b4d666686cda92ab332e9c5", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caff360ac1a8b3c4e7e0433d982e85613e6bac1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=4caff360ac1a8b3c4e7e0433d982e85613e6bac1", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola 68HC11 and 68HC12.\n    Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n-   Contributed by Stephane Carrez (stcarrez@worldnet.fr)\n+   Contributed by Stephane Carrez (stcarrez@nerim.fr)\n \n This file is part of GNU CC.\n \n@@ -214,6 +214,10 @@ extern const char *m68hc11_soft_reg_count;\n \n #define OVERRIDE_OPTIONS\tm68hc11_override_options ();\n \n+/* Define this to change the optimizations performed by default.  */\n+#define OPTIMIZATION_OPTIONS(LEVEL, SIZE) \\\n+m68hc11_optimization_options(LEVEL, SIZE)\n+\n \f\n /* Define cost parameters for a given processor variant.  */\n struct processor_costs {"}]}