{"sha": "423608115c8c93386979d6e90291dc5985601c04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIzNjA4MTE1YzhjOTMzODY5NzlkNmU5MDI5MWRjNTk4NTYwMWMwNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-08-25T16:12:35Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2014-08-25T16:12:35Z"}, "message": "Convert execute.exp to use the dg framework.\n\n\t* gcc.c-torture/execute/execute.exp: Replace with slightly adapted\n\tcopy of compile/compile.exp.\n\t* gcc.c-torture/execute/20010122-1.c: Skip if -fomit-frame-pointer.\n\t* gcc.c-torture/execute/20010129-1.c: Add -mtune=i686 if compiling for\n\ti?86-*.\n\t* gcc.c-torture/execute/20020404-1.c: Require int32plus.  Skip if\n\tm32c-*-*.\n\t* gcc.c-torture/execute/20021024-1.c: Require int32plus.\n\t* gcc.c-torture/execute/20021127-1.c: Add -std=c99 option.\n\t* gcc.c-torture/execute/20030125-1.c: Require c99_runtime.\n\t* gcc.c-torture/execute/20030216-1.c: Skip if -O1.\n\t* gcc.c-torture/execute/20030222-1.c: Skip on spu-*-*.\n\t* gcc.c-torture/execute/20040629-1.c: Require int32plus.\n\t* gcc.c-torture/execute/20040703-1.c: Likewise.\n\t* gcc.c-torture/execute/20040705-1.c: Likewise.\n\t* gcc.c-torture/execute/20040705-2.c: Likewise.\n\t* gcc.c-torture/execute/20040709-1.c: Likewise.\n\t* gcc.c-torture/execute/20040709-2.c: Likewise.\n\t* gcc.c-torture/execute/20040811-1.c: Likewise.\n\t* gcc.c-torture/execute/20050316-1.c: Likewise.  Add -Wno-psabi.\n\t* gcc.c-torture/execute/20050316-2.c: Use -mno-mmx -Wno-psabi when\n\tcompiling for x86_64-* or i?86-*.\n\t* gcc.c-torture/execute/20050604-1.c: Likewise.\n\t* gcc.c-torture/execute/20050316-3.c: Add -Wno-psabi option.\n\t* gcc.c-torture/execute/20050604-1.c: Use -mno-mmx when\tcompiling\n\tfor x86_64-* or i?86-*.\n\t* gcc.c-torture/execute/20061101-1.c: Require int32plus.\n\t* gcc.c-torture/execute/20061220-1.c: Skip on rl78-*.\n\t* gcc.c-torture/execute/20081117-1.c: Require int32plus.\n\t* gcc.c-torture/execute/20101011-1.c: Add -fnon-call-exceptions\n\toption.\n\t* gcc.c-torture/execute/20111227-2.c: Moved to...\n\t* gcc.dg/20111227-2.c: ... here.  Add -free option.\n\t* gcc.c-torture/execute/20111227-3.c: Likewise move to...\n\t* gcc.dg/20111227-3.c: ... here.  Add -free option.\n\t* gcc.c-torture/execute/20120919-1.c: Require int32plus.\n\t* gcc.c-torture/execute/920612-1.c: Add -fwrapv option.  Add\n\tdeclarations for abort and exit.\n\t* gcc.c-torture/execute/920711-1.c: Likewise.\n\t* gcc.c-torture/execute/930529-1.c: Likewise.\n\t* gcc.c-torture/execute/980709-1.c: Xfail if on AIX with -msoft-float.\n\t* gcc.c-torture/execute/981130-1.c: Xfail on m32r-* with scheduling.\n\t* gcc.c-torture/execute/990127-1.c: Add delcarations for abort and\n\texit.\n\t* gcc.c-torture/execute/990127-2.c: Add -mpc64 option if compiling\n\tfor i?86-* or x86_64-*.  Add declarations for abort and exit.\n\t* gcc.c-torture/execute/990413-2.c: Skip if not compiling for\n\ti?86-* or x86_64-*.\n\t* gcc.c-torture/execute/990826-0.c: Xfail if on AIX with -msoft-float.\n\t* gcc.c-torture/execute/bf64-1.c: Xfail on mcore-*.\n\t* gcc.c-torture/execute/bitfld-4.c: Require int32plus.\n\t* gcc.c-torture/execute/cmpsi-2.c: Likewise.\n\t* gcc.c-torture/execute/eeprof-1.c: Add -finstrument-functions option.\n\tXfail on powerpc-ibm-aix*.  Add declaration for abort.\n\t* gcc.c-torture/execute/ipa-sra-2.c: Require int32plus.\n\t* gcc.c-torture/execute/loop-2f.c: Require mmap.  Skip if on\n\tm68k-linux.\n\t* gcc.c-torture/execute/loop-2g.c: Likewise.\n\t* gcc.c-torture/execute/mode-dependent-address.c: Require stdint_types.\n\t* gcc.c-torture/execute/nest-align-1.c: Add -mno-eabi option for\n\tpowerpc-*-eabi*.\n\t* gcc.c-torture/execute/pr19689.c: Require int32plus.\n\t* gcc.c-torture/execute/pr22493-1.c: Add -fwrapv option.\n\t* gcc.c-torture/execute/pr23047.c: Likewise.\n\t* gcc.c-torture/execute/pr23135.c: Add -Wno-psabi option.  Add\n\tdeclarations for abort and exit.\n\t* gcc.c-torture/execute/pr29797-1.c: Require int32plus.\n\t* gcc.c-torture/execute/pr31448.c: Likewise.\n\t* gcc.c-torture/execute/pr35456.c: Skip on vax.\n\t* gcc.c-torture/execute/pr37573.c: Require int32plus.\n\t* gcc.c-torture/execute/pr38151.c: Add -Wno-psabi option.\n\t* gcc.c-torture/execute/pr39228.c: Add -mieee for sh* and alpha*.\n\tSkip on spu-*.\n\t* gcc.c-torture/execute/pr39501.c: Add -ffast-math option.  Add\n\tdeclarations for abort and exit.\n\t* gcc.c-torture/execute/pr40386.c: Add declarations for abort and exit.\n\t* gcc.c-torture/execute/pr43220.c: Require int32plus.\n\t* gcc.c-torture/execute/pr44583.c: Add -mieee option for sh*.\n\t* gcc.c-torture/execute/pr45262.c: Require int32plus.\n\t* gcc.c-torture/execute/pr47237.c: Xfail on nios2-*.\n\t* gcc.c-torture/execute/pr51581-1.c: Require int32plus.\n\t* gcc.c-torture/execute/pr51582-2.c: Likewise.\n\t* gcc.c-torture/execute/pr52979-1.c: Likewise.\n\t* gcc.c-torture/execute/pr52979-2.c: Likewise.\n\t* gcc.c-torture/execute/pr56799.c: Likewise.\n\t* gcc.c-torture/execute/pr57124.c: Likewise.  Add -fno-strict-overflow\n\toption.  Add declarations for abort and exit.\n\t* gcc.c-torture/execute/pr57344-2.c: Require int32plus.\n\t* gcc.c-torture/execute/pr58570.c: Likewise.\n\t* gcc.c-torture/execute/pr60822.c: Likewise.\n\t* gcc.c-torture/execute/pr7284-1.c: Likewise.\n\t* gcc.c-torture/execute/shiftdi.c: Likewise.\n\t* gcc.c-torture/execute/simd-4.c: Require stdint_types.\n\t* gcc.c-torture/execute/strncmp-1.c: Xfail if vxworks_kernel.\n\t* gcc.c-torture/execute/usmul.c: Require int32plus.\n\t* gcc.c-torture/execute/vrp-5.c: Likewise.\n\t* gcc.c-torture/execute/vrp-6.c: Likewise.\n\t* gcc.c-torture/execute/zerolen-2.c: Skip on epiphany-*.\n\t* gcc.c-torture/execute/20010122-1.x: Delete.\n\t* gcc.c-torture/execute/20010129-1.x: Delete.\n\t* gcc.c-torture/execute/20020404-1.x: Delete.\n\t* gcc.c-torture/execute/20021024-1.x: Delete.\n\t* gcc.c-torture/execute/20021127-1.x: Delete.\n\t* gcc.c-torture/execute/20030125-1.x: Delete.\n\t* gcc.c-torture/execute/20030216-1.x: Delete.\n\t* gcc.c-torture/execute/20030222-1.x: Delete.\n\t* gcc.c-torture/execute/20040629-1.x: Delete.\n\t* gcc.c-torture/execute/20040703-1.x: Delete.\n\t* gcc.c-torture/execute/20040705-1.x: Delete.\n\t* gcc.c-torture/execute/20040705-2.x: Delete.\n\t* gcc.c-torture/execute/20040709-1.x: Delete.\n\t* gcc.c-torture/execute/20040709-2.x: Delete.\n\t* gcc.c-torture/execute/20040811-1.x: Delete.\n\t* gcc.c-torture/execute/20050316-1.x: Delete.\n\t* gcc.c-torture/execute/20050316-2.x: Delete.\n\t* gcc.c-torture/execute/20050316-3.x: Delete.\n\t* gcc.c-torture/execute/20050604-1.x: Delete.\n\t* gcc.c-torture/execute/20061101-1.x: Delete.\n\t* gcc.c-torture/execute/20061220-1.x: Delete.\n\t* gcc.c-torture/execute/20081117-1.x: Delete.\n\t* gcc.c-torture/execute/20101011-1.x: Delete.\n\t* gcc.c-torture/execute/20120919-1.x: Delete.\n\t* gcc.c-torture/execute/920612-1.x: Delete.\n\t* gcc.c-torture/execute/920710-1.x: Delete.\n\t* gcc.c-torture/execute/920711-1.x: Delete.\n\t* gcc.c-torture/execute/930529-1.x: Delete.\n\t* gcc.c-torture/execute/931004-12.x: Delete.\n\t* gcc.c-torture/execute/980709-1.x: Delete.\n\t* gcc.c-torture/execute/981130-1.x: Delete.\n\t* gcc.c-torture/execute/990127-2.x: Delete.\n\t* gcc.c-torture/execute/990413-2.x: Delete.\n\t* gcc.c-torture/execute/990826-0.x: Delete.\n\t* gcc.c-torture/execute/bf64-1.x: Delete.\n\t* gcc.c-torture/execute/bitfld-4.x: Delete.\n\t* gcc.c-torture/execute/cmpsi-2.x: Delete.\n\t* gcc.c-torture/execute/cvt-1.x: Delete.\n\t* gcc.c-torture/execute/eeprof-1.x: Delete.\n\t* gcc.c-torture/execute/ipa-sra-2.x: Delete.\n\t* gcc.c-torture/execute/loop-2f.x: Delete.\n\t* gcc.c-torture/execute/loop-2g.x: Delete.\n\t* gcc.c-torture/execute/mode-dependent-address.x: Delete.\n\t* gcc.c-torture/execute/nest-align-1.x: Delete.\n\t* gcc.c-torture/execute/pr19689.x: Delete.\n\t* gcc.c-torture/execute/pr22493-1.x: Delete.\n\t* gcc.c-torture/execute/pr23047.x: Delete.\n\t* gcc.c-torture/execute/pr23135.x: Delete.\n\t* gcc.c-torture/execute/pr29797-1.x: Delete.\n\t* gcc.c-torture/execute/pr31448.x: Delete.\n\t* gcc.c-torture/execute/pr35456.x: Delete.\n\t* gcc.c-torture/execute/pr37573.x: Delete.\n\t* gcc.c-torture/execute/pr38151.x: Delete.\n\t* gcc.c-torture/execute/pr39228.x: Delete.\n\t* gcc.c-torture/execute/pr39501.x: Delete.\n\t* gcc.c-torture/execute/pr40386.x: Delete.\n\t* gcc.c-torture/execute/pr43220.x: Delete.\n\t* gcc.c-torture/execute/pr44683.x: Delete.\n\t* gcc.c-torture/execute/pr45262.x: Delete.\n\t* gcc.c-torture/execute/pr47237.x: Delete.\n\t* gcc.c-torture/execute/pr51581-1.x: Delete.\n\t* gcc.c-torture/execute/pr51581-2.x: Delete.\n\t* gcc.c-torture/execute/pr52979-1.x: Delete.\n\t* gcc.c-torture/execute/pr52979-2.x: Delete.\n\t* gcc.c-torture/execute/pr53366-1.x: Delete.\n\t* gcc.c-torture/execute/pr56799.x: Delete.\n\t* gcc.c-torture/execute/pr57124.x: Delete.\n\t* gcc.c-torture/execute/pr57344-2.x: Delete.\n\t* gcc.c-torture/execute/pr58570.x: Delete.\n\t* gcc.c-torture/execute/pr60822.x: Delete.\n\t* gcc.c-torture/execute/pr7284-1.x: Delete.\n\t* gcc.c-torture/execute/shiftdi.x: Delete.\n\t* gcc.c-torture/execute/simd-4.x: Delete.\n\t* gcc.c-torture/execute/strncmp-1.x: Delete.\n\t* gcc.c-torture/execute/usmul.x: Delete.\n\t* gcc.c-torture/execute/vrp-5.x: Delete.\n\t* gcc.c-torture/execute/vrp-6.x: Delete.\n\t* gcc.c-torture/execute/zerolen-2.x: Delete.\n\nFrom-SVN: r214433", "tree": {"sha": "fef83716983ef140dac48d0405eb40ec11d350d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fef83716983ef140dac48d0405eb40ec11d350d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/423608115c8c93386979d6e90291dc5985601c04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423608115c8c93386979d6e90291dc5985601c04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423608115c8c93386979d6e90291dc5985601c04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423608115c8c93386979d6e90291dc5985601c04/comments", "author": null, "committer": null, "parents": [{"sha": "d099d9a4d62656cd39f06617f024455f696c2844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d099d9a4d62656cd39f06617f024455f696c2844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d099d9a4d62656cd39f06617f024455f696c2844"}], "stats": {"total": 955, "additions": 344, "deletions": 611}, "files": [{"sha": "eaacb5079d658d2eb9c52713063f5364fbcb6062", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,182 @@\n+2014-08-25  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/execute.exp: Replace with slightly adapted\n+\tcopy of compile/compile.exp.\n+\t* gcc.c-torture/execute/20010122-1.c: Skip if -fomit-frame-pointer.\n+\t* gcc.c-torture/execute/20010129-1.c: Add -mtune=i686 if compiling for\n+\ti?86-*.\n+\t* gcc.c-torture/execute/20020404-1.c: Require int32plus.  Skip if\n+\tm32c-*-*.\n+\t* gcc.c-torture/execute/20021024-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/20021127-1.c: Add -std=c99 option.\n+\t* gcc.c-torture/execute/20030125-1.c: Require c99_runtime.\n+\t* gcc.c-torture/execute/20030216-1.c: Skip if -O1.\n+\t* gcc.c-torture/execute/20030222-1.c: Skip on spu-*-*.\n+\t* gcc.c-torture/execute/20040629-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/20040703-1.c: Likewise.\n+\t* gcc.c-torture/execute/20040705-1.c: Likewise.\n+\t* gcc.c-torture/execute/20040705-2.c: Likewise.\n+\t* gcc.c-torture/execute/20040709-1.c: Likewise.\n+\t* gcc.c-torture/execute/20040709-2.c: Likewise.\n+\t* gcc.c-torture/execute/20040811-1.c: Likewise.\n+\t* gcc.c-torture/execute/20050316-1.c: Likewise.  Add -Wno-psabi.\n+\t* gcc.c-torture/execute/20050316-2.c: Use -mno-mmx -Wno-psabi when\n+\tcompiling for x86_64-* or i?86-*.\n+\t* gcc.c-torture/execute/20050604-1.c: Likewise.\n+\t* gcc.c-torture/execute/20050316-3.c: Add -Wno-psabi option.\n+\t* gcc.c-torture/execute/20050604-1.c: Use -mno-mmx when\tcompiling\n+\tfor x86_64-* or i?86-*.\n+\t* gcc.c-torture/execute/20061101-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/20061220-1.c: Skip on rl78-*.\n+\t* gcc.c-torture/execute/20081117-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/20101011-1.c: Add -fnon-call-exceptions\n+\toption.\n+\t* gcc.c-torture/execute/20111227-2.c: Moved to...\n+\t* gcc.dg/20111227-2.c: ... here.  Add -free option.\n+\t* gcc.c-torture/execute/20111227-3.c: Likewise move to...\n+\t* gcc.dg/20111227-3.c: ... here.  Add -free option.\n+\t* gcc.c-torture/execute/20120919-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/920612-1.c: Add -fwrapv option.  Add\n+\tdeclarations for abort and exit.\n+\t* gcc.c-torture/execute/920711-1.c: Likewise.\n+\t* gcc.c-torture/execute/930529-1.c: Likewise.\n+\t* gcc.c-torture/execute/980709-1.c: Xfail if on AIX with -msoft-float.\n+\t* gcc.c-torture/execute/981130-1.c: Xfail on m32r-* with scheduling.\n+\t* gcc.c-torture/execute/990127-1.c: Add delcarations for abort and\n+\texit.\n+\t* gcc.c-torture/execute/990127-2.c: Add -mpc64 option if compiling\n+\tfor i?86-* or x86_64-*.  Add declarations for abort and exit.\n+\t* gcc.c-torture/execute/990413-2.c: Skip if not compiling for\n+\ti?86-* or x86_64-*.\n+\t* gcc.c-torture/execute/990826-0.c: Xfail if on AIX with -msoft-float.\n+\t* gcc.c-torture/execute/bf64-1.c: Xfail on mcore-*.\n+\t* gcc.c-torture/execute/bitfld-4.c: Require int32plus.\n+\t* gcc.c-torture/execute/cmpsi-2.c: Likewise.\n+\t* gcc.c-torture/execute/eeprof-1.c: Add -finstrument-functions option.\n+\tXfail on powerpc-ibm-aix*.  Add declaration for abort.\n+\t* gcc.c-torture/execute/ipa-sra-2.c: Require int32plus.\n+\t* gcc.c-torture/execute/loop-2f.c: Require mmap.  Skip if on\n+\tm68k-linux.\n+\t* gcc.c-torture/execute/loop-2g.c: Likewise.\n+\t* gcc.c-torture/execute/mode-dependent-address.c: Require stdint_types.\n+\t* gcc.c-torture/execute/nest-align-1.c: Add -mno-eabi option for\n+\tpowerpc-*-eabi*.\n+\t* gcc.c-torture/execute/pr19689.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr22493-1.c: Add -fwrapv option.\n+\t* gcc.c-torture/execute/pr23047.c: Likewise.\n+\t* gcc.c-torture/execute/pr23135.c: Add -Wno-psabi option.  Add\n+\tdeclarations for abort and exit.\n+\t* gcc.c-torture/execute/pr29797-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr31448.c: Likewise.\n+\t* gcc.c-torture/execute/pr35456.c: Skip on vax.\n+\t* gcc.c-torture/execute/pr37573.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr38151.c: Add -Wno-psabi option.\n+\t* gcc.c-torture/execute/pr39228.c: Add -mieee for sh* and alpha*.\n+\tSkip on spu-*.\n+\t* gcc.c-torture/execute/pr39501.c: Add -ffast-math option.  Add\n+\tdeclarations for abort and exit.\n+\t* gcc.c-torture/execute/pr40386.c: Add declarations for abort and exit.\n+\t* gcc.c-torture/execute/pr43220.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr44583.c: Add -mieee option for sh*.\n+\t* gcc.c-torture/execute/pr45262.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr47237.c: Xfail on nios2-*.\n+\t* gcc.c-torture/execute/pr51581-1.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr51582-2.c: Likewise.\n+\t* gcc.c-torture/execute/pr52979-1.c: Likewise.\n+\t* gcc.c-torture/execute/pr52979-2.c: Likewise.\n+\t* gcc.c-torture/execute/pr56799.c: Likewise.\n+\t* gcc.c-torture/execute/pr57124.c: Likewise.  Add -fno-strict-overflow\n+\toption.  Add declarations for abort and exit.\n+\t* gcc.c-torture/execute/pr57344-2.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr58570.c: Likewise.\n+\t* gcc.c-torture/execute/pr60822.c: Likewise.\n+\t* gcc.c-torture/execute/pr7284-1.c: Likewise.\n+\t* gcc.c-torture/execute/shiftdi.c: Likewise.\n+\t* gcc.c-torture/execute/simd-4.c: Require stdint_types.\n+\t* gcc.c-torture/execute/strncmp-1.c: Xfail if vxworks_kernel.\n+\t* gcc.c-torture/execute/usmul.c: Require int32plus.\n+\t* gcc.c-torture/execute/vrp-5.c: Likewise.\n+\t* gcc.c-torture/execute/vrp-6.c: Likewise.\n+\t* gcc.c-torture/execute/zerolen-2.c: Skip on epiphany-*.\n+\t* gcc.c-torture/execute/20010122-1.x: Delete.\n+\t* gcc.c-torture/execute/20010129-1.x: Delete.\n+\t* gcc.c-torture/execute/20020404-1.x: Delete.\n+\t* gcc.c-torture/execute/20021024-1.x: Delete.\n+\t* gcc.c-torture/execute/20021127-1.x: Delete.\n+\t* gcc.c-torture/execute/20030125-1.x: Delete.\n+\t* gcc.c-torture/execute/20030216-1.x: Delete.\n+\t* gcc.c-torture/execute/20030222-1.x: Delete.\n+\t* gcc.c-torture/execute/20040629-1.x: Delete.\n+\t* gcc.c-torture/execute/20040703-1.x: Delete.\n+\t* gcc.c-torture/execute/20040705-1.x: Delete.\n+\t* gcc.c-torture/execute/20040705-2.x: Delete.\n+\t* gcc.c-torture/execute/20040709-1.x: Delete.\n+\t* gcc.c-torture/execute/20040709-2.x: Delete.\n+\t* gcc.c-torture/execute/20040811-1.x: Delete.\n+\t* gcc.c-torture/execute/20050316-1.x: Delete.\n+\t* gcc.c-torture/execute/20050316-2.x: Delete.\n+\t* gcc.c-torture/execute/20050316-3.x: Delete.\n+\t* gcc.c-torture/execute/20050604-1.x: Delete.\n+\t* gcc.c-torture/execute/20061101-1.x: Delete.\n+\t* gcc.c-torture/execute/20061220-1.x: Delete.\n+\t* gcc.c-torture/execute/20081117-1.x: Delete.\n+\t* gcc.c-torture/execute/20101011-1.x: Delete.\n+\t* gcc.c-torture/execute/20120919-1.x: Delete.\n+\t* gcc.c-torture/execute/920612-1.x: Delete.\n+\t* gcc.c-torture/execute/920710-1.x: Delete.\n+\t* gcc.c-torture/execute/920711-1.x: Delete.\n+\t* gcc.c-torture/execute/930529-1.x: Delete.\n+\t* gcc.c-torture/execute/931004-12.x: Delete.\n+\t* gcc.c-torture/execute/980709-1.x: Delete.\n+\t* gcc.c-torture/execute/981130-1.x: Delete.\n+\t* gcc.c-torture/execute/990127-2.x: Delete.\n+\t* gcc.c-torture/execute/990413-2.x: Delete.\n+\t* gcc.c-torture/execute/990826-0.x: Delete.\n+\t* gcc.c-torture/execute/bf64-1.x: Delete.\n+\t* gcc.c-torture/execute/bitfld-4.x: Delete.\n+\t* gcc.c-torture/execute/cmpsi-2.x: Delete.\n+\t* gcc.c-torture/execute/cvt-1.x: Delete.\n+\t* gcc.c-torture/execute/eeprof-1.x: Delete.\n+\t* gcc.c-torture/execute/ipa-sra-2.x: Delete.\n+\t* gcc.c-torture/execute/loop-2f.x: Delete.\n+\t* gcc.c-torture/execute/loop-2g.x: Delete.\n+\t* gcc.c-torture/execute/mode-dependent-address.x: Delete.\n+\t* gcc.c-torture/execute/nest-align-1.x: Delete.\n+\t* gcc.c-torture/execute/pr19689.x: Delete.\n+\t* gcc.c-torture/execute/pr22493-1.x: Delete.\n+\t* gcc.c-torture/execute/pr23047.x: Delete.\n+\t* gcc.c-torture/execute/pr23135.x: Delete.\n+\t* gcc.c-torture/execute/pr29797-1.x: Delete.\n+\t* gcc.c-torture/execute/pr31448.x: Delete.\n+\t* gcc.c-torture/execute/pr35456.x: Delete.\n+\t* gcc.c-torture/execute/pr37573.x: Delete.\n+\t* gcc.c-torture/execute/pr38151.x: Delete.\n+\t* gcc.c-torture/execute/pr39228.x: Delete.\n+\t* gcc.c-torture/execute/pr39501.x: Delete.\n+\t* gcc.c-torture/execute/pr40386.x: Delete.\n+\t* gcc.c-torture/execute/pr43220.x: Delete.\n+\t* gcc.c-torture/execute/pr44683.x: Delete.\n+\t* gcc.c-torture/execute/pr45262.x: Delete.\n+\t* gcc.c-torture/execute/pr47237.x: Delete.\n+\t* gcc.c-torture/execute/pr51581-1.x: Delete.\n+\t* gcc.c-torture/execute/pr51581-2.x: Delete.\n+\t* gcc.c-torture/execute/pr52979-1.x: Delete.\n+\t* gcc.c-torture/execute/pr52979-2.x: Delete.\n+\t* gcc.c-torture/execute/pr53366-1.x: Delete.\n+\t* gcc.c-torture/execute/pr56799.x: Delete.\n+\t* gcc.c-torture/execute/pr57124.x: Delete.\n+\t* gcc.c-torture/execute/pr57344-2.x: Delete.\n+\t* gcc.c-torture/execute/pr58570.x: Delete.\n+\t* gcc.c-torture/execute/pr60822.x: Delete.\n+\t* gcc.c-torture/execute/pr7284-1.x: Delete.\n+\t* gcc.c-torture/execute/shiftdi.x: Delete.\n+\t* gcc.c-torture/execute/simd-4.x: Delete.\n+\t* gcc.c-torture/execute/strncmp-1.x: Delete.\n+\t* gcc.c-torture/execute/usmul.x: Delete.\n+\t* gcc.c-torture/execute/vrp-5.x: Delete.\n+\t* gcc.c-torture/execute/vrp-6.x: Delete.\n+\t* gcc.c-torture/execute/zerolen-2.x: Delete.\n+\n 2014-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.old-deja/g++.pt/var1.C: Use c++14, not c++1y, in dg-error."}, {"sha": "14269fa7f0e556c8b4cab51f19a500e8dff1c435", "filename": "gcc/testsuite/gcc.c-torture/execute/20010122-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"requires frame pointers\" { *-*-* } \"-fomit-frame-pointer\" \"\" } */\n \n extern void exit (int);\n extern void abort (void);"}, {"sha": "65582364431c19bd9f9fa2f94d6ef9c408afee9a", "filename": "gcc/testsuite/gcc.c-torture/execute/20010122-1.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,11 +0,0 @@\n-# This test relies on __builtin_return_address(1) returning something\n-# useful or NULL.  This is not guaranteed to be be so, especially when \n-# -fomit-frame-pointer is used.  So do not test with it.\n-\n-set torture_eval_before_compile {\n-  if {[string match {*-fomit-frame-pointer*} \"$option\"]} {\n-    continue\n-  }\n-}\n-\n-return 0"}, {"sha": "0586577ae61c309878f51e3b428e0bbc0a1cd929", "filename": "gcc/testsuite/gcc.c-torture/execute/20010129-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-mtune-i686\" { target { { i?86*-*-* } && ilp32 } } } */\n+\n long baz1 (void *a)\n {\n   static long l;"}, {"sha": "7e474c45348f730d6ccabcd2074334865415df12", "filename": "gcc/testsuite/gcc.c-torture/execute/20010129-1.x", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,13 +0,0 @@\n-# Use \"-mtune=i686\" on i?86-*-* unless \"-m64\" is specified.\n-if { [istarget \"i?86-*-*\"] } {\n-  set target_name [target_info name]\n-  if {[board_info $target_name exists multilib_flags]} {\n-    set multilib_flags [board_info $target_name multilib_flags]\n-    if { ![regexp -- \"-m64\" $multilib_flags] } {\n-      set additional_flags \"-mtune=i686\"\n-    }\n-  } else {\n-    set additional_flags \"-mtune=i686\"\n-  }\n-}\n-return 0"}, {"sha": "fe5ea14fad79865b17fd2036ec857b09e7bb913d", "filename": "gcc/testsuite/gcc.c-torture/execute/20020404-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020404-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020404-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020404-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-skip-if \"pointers can be truncated\" { m32c-*-* } \"*\" \"\" } */\n /* Extracted from GDB sources. */\n \n typedef long long bfd_signed_vma;"}, {"sha": "e4fd61a44a0ad03cdb7decd02d31a90d34e3dcaf", "filename": "gcc/testsuite/gcc.c-torture/execute/20020404-1.x", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020404-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020404-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020404-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,15 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-# m32c pointers can be 24 bits in a 32 bit variable, so the test\n-# patterns may get truncated.\n-if { [istarget \"m32c-*-*\"] } {\n-\treturn 1\n-}\n-\n-\n-return 0\n-"}, {"sha": "93504f2254a9b1e6627f0216a95f6bd7e34c4b8b", "filename": "gcc/testsuite/gcc.c-torture/execute/20021024-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* Origin: PR target/6981 from Mattias Engdegaard <mattias@virtutech.se>.  */\n+/* { dg-require-effective-target int32plus } */\n \n void exit (int);\n void abort (void);"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20021024-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021024-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "204305be30508f7aca047deadbdb6fecd47625df", "filename": "gcc/testsuite/gcc.c-torture/execute/20021127-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021127-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021127-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021127-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-std=c99\" } */\n+\n long long a = -1;\n long long llabs (long long);\n void abort (void);"}, {"sha": "efd854a050e5241fbdc927c37cd37dd2a2cc414c", "filename": "gcc/testsuite/gcc.c-torture/execute/20021127-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021127-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021127-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021127-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-std=c99\"\n-return 0"}, {"sha": "60ede34f5da70d42fdd342de8a935f02a2c9a652", "filename": "gcc/testsuite/gcc.c-torture/execute/20030125-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030125-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030125-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030125-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* Verify whether math functions are simplified.  */\n+/* { dg-require-effective-target c99_runtime } */\n double sin(double);\n double floor(double);\n float "}, {"sha": "895cff7fef760ad63bd227784d4cbdbb8b21009f", "filename": "gcc/testsuite/gcc.c-torture/execute/20030125-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030125-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030125-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030125-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-# Only glibc includes all c99 functions at the moment.\n-if { ! ([istarget \"*-linux*\"]\n-\t|| [istarget \"*-gnu*\"])} then {\n-    return 1\n-}\n-if { [check_effective_target_uclibc] } { return 1 }\n-return 0"}, {"sha": "0256ae39ebb02bc17fd6114eb2243150b4cc937e", "filename": "gcc/testsuite/gcc.c-torture/execute/20030216-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,8 @@\n+/* This test requires constant propagation of loads and stores to be\n+   enabled.  This is only guaranteed at -O2 and higher.  Do not run\n+   at -O1.  */\n+/* { dg-skip-if \"requires higher optimization\" { *-*-* } \"-O1\" \"\" } */\n+\n void link_error (void);\n const double one=1.0;\n main ()"}, {"sha": "a0e03e379dfdb4cbe80d86755f3ee5c2d2a49baf", "filename": "gcc/testsuite/gcc.c-torture/execute/20030216-1.x", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030216-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,12 +0,0 @@\n-# This test requires constant propagation of loads and stores to be\n-# enabled.  This is only guaranteed at -O2 and higher.  Do not run\n-# at -O1.\n-\n-set torture_eval_before_compile {\n-  if {[string match {*-O1*} \"$option\"]} {\n-    continue\n-  }\n-}\n-\n-return 0\n-"}, {"sha": "385ae68619280985361dc1c2958db63cac5ef16c", "filename": "gcc/testsuite/gcc.c-torture/execute/20030222-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -3,7 +3,7 @@\n    succeeded at all.  We use volatile to make sure the long long is\n    actually truncated to int, in case a single register is wide enough\n    for a long long.  */\n-\n+/* { dg-skip-if \"asm would require extra shift-left-4-byte\" { spu-*-* } \"*\" \"\" } */\n #include <limits.h>\n \n void"}, {"sha": "e195563ddd063c8a765ff975c88c14626afb3a1c", "filename": "gcc/testsuite/gcc.c-torture/execute/20030222-1.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,6 +0,0 @@\n-if [istarget \"spu-*-*\"] {\n-    # Using inline assembly to convert long long to int is not working quite\n-    # right # on the SPU.  An extra shift-left-4-byte is needed.\n-    return 1\n-}\n-return 0"}, {"sha": "5e03222b0e11d99afa359c8682438026d8f47cdf", "filename": "gcc/testsuite/gcc.c-torture/execute/20040629-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040629-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040629-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040629-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target int32plus } */\n+\n /* Test arithmetics on bitfields.  */\n #ifndef T\n "}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040629-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040629-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040629-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040629-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "a1b75d90bbc016490e3cd6bb5bb61cc905903e23", "filename": "gcc/testsuite/gcc.c-torture/execute/20040703-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040703-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* PR 16341 */\n+/* { dg-require-effective-target int32plus } */\n \n #define PART_PRECISION (sizeof (cpp_num_part) * 8)\n "}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040703-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040703-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040703-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040703-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "fe14d0f24bfae2b16d286144bfe459476f9c8674", "filename": "gcc/testsuite/gcc.c-torture/execute/20040705-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,2 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n+\n #define FIELDS1 long long l;\n #include \"20040629-1.c\""}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040705-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "1d6958654519355bbd8c997a9504f69e901d48af", "filename": "gcc/testsuite/gcc.c-torture/execute/20040705-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,2 +1,3 @@\n+/* { dg-require-effective-target int32plus } */\n #define FIELDS2 long long l;\n #include \"20040629-1.c\""}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040705-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040705-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "52de67d48700288b4f240e2750b2699bf98d9a4b", "filename": "gcc/testsuite/gcc.c-torture/execute/20040709-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target int32plus } */\n+\n /* Test arithmetics on bitfields.  */\n \n extern void abort (void);"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040709-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "925050d77bbd79e624409f0e684e1645ca140734", "filename": "gcc/testsuite/gcc.c-torture/execute/20040709-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* Test arithmetics on bitfields.  */\n+/* { dg-require-effective-target int32plus } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040709-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040709-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "0122825323a3d1d34a7cd0f20c1b848d9ce952d6", "filename": "gcc/testsuite/gcc.c-torture/execute/20040811-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target int32plus } */\n+\n /* Ensure that we deallocate X when branching back before its\n    declaration.  */\n "}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/20040811-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "0a285d73ec800b276b457edf3d4bbf3725866262", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,6 @@\n /* PR rtl-optimization/16104 */\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-options \"-Wno-psabi\" } */\n \n extern void abort (void);\n "}, {"sha": "cb2d28fd9fc9f71196a860a34e9189664064134d", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-1.x", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,8 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-set additional_flags \"-Wno-psabi\"\n-return 0;"}, {"sha": "920dfdb9fbf9f4089b6c9c08cee481696a3919c3", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,8 @@\n+/* This testcase generates MMX instructions together with x87 instructions.\n+   Currently, there is no \"emms\" generated to switch between register sets,\n+   so the testcase fails for targets where MMX insns are enabled.  */\n+/* { dg-options \"-mno-mmx -Wno-psabi\" { target { x86_64-*-* i?86-*-* } } } */\n+\n extern void abort (void);\n \n typedef int V2SI __attribute__ ((vector_size (8)));"}, {"sha": "f5b4aaae3d9696c8f426f031810b6bc9771656ad", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-2.x", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,9 +0,0 @@\n-# This testcase generates MMX instructions together with x87 instructions.\n-# Currently, there is no \"emms\" generated to switch between register sets,\n-# so the testcase fails for targets where MMX insns are enabled.\n-\n-if { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n-\tset additional_flags \"-mno-mmx\"\n-}\n-\n-return 0"}, {"sha": "9f35ece42812757e9d00dcdfca2b2276dde77129", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-Wno-psabi\" } */\n extern void abort (void);\n \n typedef int V2SI __attribute__ ((vector_size (8)));"}, {"sha": "cb7b119b8cb171c2882eb5f6f6073ebf806f1b71", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-3.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-Wno-psabi\"\n-return 0"}, {"sha": "6d633890761a53eef7b4cf21a65df5acbe96459b", "filename": "gcc/testsuite/gcc.c-torture/execute/20050604-1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,8 @@\n /* PR regression/21897 */\n+/* This testcase generates MMX instructions together with x87 instructions.\n+   Currently, there is no \"emms\" generated to switch between register sets,\n+   so the testcase fails for targets where MMX insns are enabled.  */\n+/* { dg-options \"-mno-mmx\" { target { x86_64-*-* i?86-*-* } } } */\n \n extern void abort (void);\n "}, {"sha": "756242d23450da0daff95528b6c912b9b3581707", "filename": "gcc/testsuite/gcc.c-torture/execute/20050604-1.x", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,10 +0,0 @@\n-# This testcase generates MMX instructions together with x87 instructions.\n-# Currently, there is no \"emms\" generated to switch between register sets,\n-# so the testcase fails for targets where MMX insns are enabled.\n-\n-if { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n-\tset additional_flags \"-mno-mmx\"\n-}\n-\n-set additional_flags \"-Wno-psabi\"\n-return 0"}, {"sha": "7bea079b783a301e55acd3b0e104f57dba2338d9", "filename": "gcc/testsuite/gcc.c-torture/execute/20061101-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061101-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061101-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061101-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,6 @@\n /* PR rtl-optimization/28970 */\n /* Origin: Peter Bergner <bergner@vnet.ibm.com> */\n+/* { dg-require-effective-target int32plus } */\n \n extern void abort (void);\n "}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/20061101-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061101-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061101-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061101-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "9a133e8c6e80cea0c5050786ae9ece3ff5081085", "filename": "gcc/testsuite/gcc.c-torture/execute/20061220-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/30262 */\n+/* { dg-skip-if \"asm statements do not work as expected\" { rl78-*-* } \"*\" \"\" } */\n extern void abort (void);\n \n int"}, {"sha": "bfc4e964d6329e9589d926706e1291881e602061", "filename": "gcc/testsuite/gcc.c-torture/execute/20061220-1.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20061220-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,6 +0,0 @@\n-# asm statements for the RL78 do not work as expected\n-if { [istarget \"rl78-*-*\"] } {\n-        return 1;\n-}\n-\n-return 0"}, {"sha": "8fa00d2f9537d82c213a5a7f14a0ed4ce0f5b919", "filename": "gcc/testsuite/gcc.c-torture/execute/20081117-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20081117-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20081117-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20081117-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n extern void abort (void);\n \n struct s"}, {"sha": "7378270cdb00d1815c876e8fa1216ef730be997b", "filename": "gcc/testsuite/gcc.c-torture/execute/20081117-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20081117-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20081117-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20081117-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-        return 1\n-}\n-\n-return 0"}, {"sha": "85b910df31c8c7f79113038c4e8f360920b9d114", "filename": "gcc/testsuite/gcc.c-torture/execute/20101011-1.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,5 @@\n-/* With -fnon-call-exceptions 0 / 0 should not be eliminated.  The .x\n-   file sets the option.  */\n+/* { dg-options \"-fnon-call-exceptions\" } */\n+/* With -fnon-call-exceptions 0 / 0 should not be eliminated.  */\n \n #ifdef SIGNAL_SUPPRESS\n # define DO_TEST 0\n@@ -75,6 +75,9 @@ __aeabi_idiv0 (int return_value)\n # define DO_TEST 1\n #endif\n \n+extern void abort (void);\n+extern void exit (int);\n+\n #if DO_TEST\n \n #include <signal.h>"}, {"sha": "b5c080dd371d4d1965dac44db23c21016d6d156d", "filename": "gcc/testsuite/gcc.c-torture/execute/20101011-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-fnon-call-exceptions\"\n-return 0"}, {"sha": "afcde95e27b5daca2df477a4f49f48b1a467ddb0", "filename": "gcc/testsuite/gcc.c-torture/execute/20120919-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120919-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120919-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120919-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,6 @@\n /* PR rtl-optimization/54290 */\n /* Testcase by Eric Volk <eriksnga@gmail.com> */\n+/* { dg-require-effective-target int32plus } */\n \n double vd[2] = {1., 0.};\n int vi[2] = {1234567890, 0};"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/20120919-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120919-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120919-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120919-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "bc6300352009c56fe83e35032f06bdade8df5bf9", "filename": "gcc/testsuite/gcc.c-torture/execute/920612-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,2 +1,7 @@\n+/* { dg-options \"-fwrapv\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n f(j)int j;{return++j>0;}\n main(){if(f((~0U)>>1))abort();exit(0);}"}, {"sha": "36a58395004c352395b3ff7d4877f1fbee5a758e", "filename": "gcc/testsuite/gcc.c-torture/execute/920612-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-fwrapv\"\n-return 0"}, {"sha": "b7612f78787241e3435a6463409b8dd06f2b618b", "filename": "gcc/testsuite/gcc.c-torture/execute/920710-1.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920710-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920710-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920710-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,6 +0,0 @@\n-# h8300 does not have long long\n-if { [istarget \"h8300-*-*\"] } {\n-        return 1;\n-}\n-\n-return 0"}, {"sha": "f72ef7c54528fc73c2302e6ed50a3f3a0e98e55d", "filename": "gcc/testsuite/gcc.c-torture/execute/920711-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,2 +1,7 @@\n+/* { dg-options \"-fwrapv\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n f(long a){return (--a > 0);}\n main(){if(f(0x80000000L)==0)abort();exit(0);}"}, {"sha": "36a58395004c352395b3ff7d4877f1fbee5a758e", "filename": "gcc/testsuite/gcc.c-torture/execute/920711-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-fwrapv\"\n-return 0"}, {"sha": "9c4085ce1a0f939578431b9e842bbecdf266655c", "filename": "gcc/testsuite/gcc.c-torture/execute/930529-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options { \"-fwrapv\" } } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n dd (x,d) { return x / d; }\n \n main ()"}, {"sha": "25225f4f4d691bc7f69019a8692aac0fde4a37f8", "filename": "gcc/testsuite/gcc.c-torture/execute/930529-1.x", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,24 +0,0 @@\n-# The problem on Alpha at -O3 is that when dd is inlined, we have\n-# division by a constant, which gets converted to multiplication\n-# by a large constant, which gets turned into an induction variable.\n-# The problem is that the multiplication was unsigned SImode, and the\n-# induction variable is DImode, and we lose the truncation that\n-# should have happened.\n-#\n-# On tree-ssa branch, the loop problem is still extant, but the\n-# gimple-level optimization makes it easy for the tree-rtl expanders\n-# to see that the comparisons are always true, and so the loop code\n-# is never exercized.\n-\n-# set torture_eval_before_execute {\n-# \n-#     set compiler_conditional_xfail_data {\n-#         \"division by a constant conflicts with strength reduction\" \\\n-#         \"alpha*-*-*\" \\\n-#         { \"-O3\" } \\\n-#         { \"\" }\n-#     }\n-# }\n-\n-set additional_flags \"-fwrapv\"\n-return 0"}, {"sha": "591dc7ff2b0a7e04061b79d71e02e554d6bd708c", "filename": "gcc/testsuite/gcc.c-torture/execute/931004-12.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F931004-12.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F931004-12.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F931004-12.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,6 +0,0 @@\n-if { [istarget \"powerpc-*-darwin*] } {\n-    # xfail this on powerpc-*-darwin, see PR 15923\n-    set torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "54b3bbc7cf9f1a481638421eb5970756addf9f8e", "filename": "gcc/testsuite/gcc.c-torture/execute/980709-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980709-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980709-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980709-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"Can not call system libm.a with -msoft-float\" { powerpc-*-aix* rs6000-*-aix* } { \"-msoft-float\" } { \"\" } } */\n #include <math.h>\n \n main()"}, {"sha": "307f568859cf21c9ef4134462ac8c546bb78de96", "filename": "gcc/testsuite/gcc.c-torture/execute/980709-1.x", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980709-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980709-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980709-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,16 +0,0 @@\n-# XFAIL this test for AIX using -msoft-float.\n-# This test calls the system libm.a function pow.\n-# A false failure is reported if -msoft-float is used.\n-# AIX expects the parameters to be passed in fp regs. \n-if { [istarget powerpc-*-aix*] || [istarget rs6000-*-aix*] } {\n-    set torture_eval_before_execute {\n-\tglobal compiler_conditional_xfail_data\n-\tset compiler_conditional_xfail_data {\n-\t    \"Can not call system libm.a with -msoft-float\" \\\n-\t\t    \"*-*-aix*\" \\\n-\t\t    { \"-msoft-float\" } \\\n-\t\t    { \"\" }\n-\t}\n-    }\n-}\n-return 0"}, {"sha": "c4ca227d1e857ef1745cf92d7ca96c0b8d4e3266", "filename": "gcc/testsuite/gcc.c-torture/execute/981130-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981130-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"alias analysis conflicts with instruction scheduling\" { m32r-*-* } { \"-O2\" \"-O1\" \"-O0\" \"-Os\"} { \"\" } } */\n struct s { int a; int b;};\n struct s s1;\n struct s s2 = { 1, 2, };"}, {"sha": "1565c68adc78dc088e2ffc5668c1714993578b6d", "filename": "gcc/testsuite/gcc.c-torture/execute/981130-1.x", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981130-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981130-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981130-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,22 +0,0 @@\n-# This test is known to fail on targets that use the instruction scheduler\n-# at optimisation levels of 2 or more because the alias analysis is confused\n-# by the reassignment of a variable structure to a fixed structure.  The \n-# failure could be suppressed by preventing instruction scheduling:\n-#\n-# set additional_flags \"-fno-schedule-insns2\";\n-#\n-# but this would disguise the fact that there is a problem.  Instead we use\n-# we generate an xfail result and explain that it is alias analysis that\n-# is at fault.\n-\n-set torture_eval_before_execute {\n-\n-    set compiler_conditional_xfail_data {\n-        \"alias analysis conflicts with instruction scheduling\" \\\n-\t\"m32r-*-*\" \\\n-\t{ \"-O2\" \"-O1\" \"-O0\" \"-Os\"} \\\n-\t{ \"\" }\n-\t}    \n-}\n-\n-return 0"}, {"sha": "8b572a7ce908576cf9ae32954b6e80c94ce29746", "filename": "gcc/testsuite/gcc.c-torture/execute/990127-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,6 @@\n+extern void abort (void);\n+extern void exit (int);\n+\n main()\n {\n     int a,b,c;"}, {"sha": "e87d27a3450c5b8d2e238d2ba3b0af69169e148a", "filename": "gcc/testsuite/gcc.c-torture/execute/990127-2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options \"-mpc64\"  { target { i?86-*-* x86_64-*-* } } } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n void\n fpEq (double x, double y)\n {"}, {"sha": "501e9314713d438e9bd9c33581584ea466bd9d54", "filename": "gcc/testsuite/gcc.c-torture/execute/990127-2.x", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,20 +0,0 @@\n-# On x86 targets, two floating-point double values can't be reliably compared\n-# for inequality due to excess precision of 80387 floating-point coprocessor.\n-# Use -mpc64 to force 80387 floating-point precision to 64 bits.  This option\n-# has no effect on SSE, but it is needed in case of -m32 on x86_64 targets.\n-\n-if { [istarget i?86-*-darwin*]\n-     || [istarget i?86-*-linux*]\n-     || [istarget i?86-*-gnu*]\n-     || [istarget i?86-*-kfreebsd*-gnu]\n-     || [istarget i?86-*-knetbsd*-gnu]\n-     || [istarget i?86-*-solaris2*]\n-     || [istarget x86_64-*-darwin*]\n-     || [istarget x86_64-*-linux*]\n-     || [istarget x86_64-*-kfreebsd*-gnu]\n-     || [istarget x86_64-*-knetbsd*-gnu]\n-     || [istarget x86_64-*-solaris2*] } {\n-\tset additional_flags \"-mpc64\"\n-}\n-\n-return 0"}, {"sha": "3beb5403b8713cb2b9831672084d024c61d8c469", "filename": "gcc/testsuite/gcc.c-torture/execute/990413-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990413-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990413-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990413-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* This tests for a bug in regstack that was breaking glibc's math library. */\n+/* { dg-skip-if \"\" { ! { i?86-*-* x86_64-*-* } } { \"*\" } { \"\" } } */\n \n extern void abort (void);\n "}, {"sha": "58be1c0e097206e8b2cf49e867d8759f0ed01836", "filename": "gcc/testsuite/gcc.c-torture/execute/990413-2.x", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990413-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990413-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990413-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,3 +0,0 @@\n-# This test is x86 specific.\n-if { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } { return 0 }\n-return 1"}, {"sha": "c630da7d2bf0919753c13629ba8c615fd0f597dd", "filename": "gcc/testsuite/gcc.c-torture/execute/990826-0.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990826-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990826-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990826-0.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -6,6 +6,8 @@ Date: Sun, 06 Jun 1999 23:37:23 -0400\n X-UIDL: 9c1e40c572e3b306464f703461764cd5\n */\n \n+/* { dg-xfail-if \"Can not call system libm.a with -msoft-float\" { powerpc-*-aix* rs6000-*-aix* } { \"-msoft-float\" } { \"\" } } */\n+\n #include <stdio.h>\n #include <math.h>\n "}, {"sha": "477c10bba5bfa555cb1303ed38560caff914537a", "filename": "gcc/testsuite/gcc.c-torture/execute/990826-0.x", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990826-0.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990826-0.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990826-0.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,16 +0,0 @@\n-# XFAIL this test for AIX using -msoft-float.\n-# This test calls the system libm.a function floor.\n-# A false failure is reported if -msoft-float is used.\n-# AIX expects the parameters to be passed in fp regs. \n-if { [istarget powerpc-*-aix*] || [istarget rs6000-*-aix*] } {\n-    set torture_eval_before_execute {\n-\tglobal compiler_conditional_xfail_data\n-\tset compiler_conditional_xfail_data {\n-\t    \"Can not call system libm.a with -msoft-float\" \\\n-\t\t    \"*-*-aix*\" \\\n-\t\t    { \"-msoft-float\" } \\\n-\t\t    { \"\" }\n-\t}\n-    }\n-}\n-return 0"}, {"sha": "d69a7c401f83c7fc7554ee4660fac105e03c747d", "filename": "gcc/testsuite/gcc.c-torture/execute/bf64-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbf64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbf64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbf64-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"ABI specifies bitfields cannot exceed 32 bits\" { mcore-*-* } \"*\" \"\" } */\n struct tmp\n {\n   long long int pad : 12;"}, {"sha": "f3069f2844b1e8eae4ee88dbd7f75b91c5857486", "filename": "gcc/testsuite/gcc.c-torture/execute/bf64-1.x", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbf64-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbf64-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbf64-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,8 +0,0 @@\n-# The MCore ABI specifies that bitfields may not exceed 32 bits.\n-# Hence this tes will fail.\n-\n-if { [istarget \"mcore-*-*\"] } {\n-\tset torture_execute_xfail \"mcore-*-*\"\n-}\n-\n-return 0"}, {"sha": "13a5c691dd2185edcda2573bf3191da2cae4c871", "filename": "gcc/testsuite/gcc.c-torture/execute/bitfld-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-4.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -6,6 +6,8 @@\n    32-bit systems.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n \n+/* { dg-require-effective-target int32plus } */\n+\n extern void abort (void);\n \n struct s { int a:12, b:20; };"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/bitfld-4.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-4.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-4.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-4.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "52c8065dd1b7576727565fe06f54ee2de13f4f2a", "filename": "gcc/testsuite/gcc.c-torture/execute/cmpsi-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n #define F 140\n #define T 13\n "}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/cmpsi-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "997c8650c0021dfcc69ae5a436ebdaff1b4748b1", "filename": "gcc/testsuite/gcc.c-torture/execute/cvt-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcvt-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcvt-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcvt-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-# This doesn't work on d10v if ints are not 32 bits\n-\n-if { [istarget \"d10v-*-*\"] && ! [string-match \"*-mint32*\" $CFLAGS] } {\n-\tset torture_execute_xfail \"d10v-*-*\"\n-}\n-\n-return 0"}, {"sha": "96dab9a33e139799cbf0ebc8bbe4034f89868310", "filename": "gcc/testsuite/gcc.c-torture/execute/eeprof-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options \"-finstrument-functions\" } */\n+/* { dg-xfail-if \"\" { powerpc-ibm-aix* } \"*\" \"\" } */\n+\n+extern void abort (void);\n+\n #define ASSERT(X)\tif (!(X)) abort ();\n #define NOCHK __attribute__ ((no_instrument_function))\n "}, {"sha": "d53f8c23ee29b50b5b453daa7df3f7d2290bc766", "filename": "gcc/testsuite/gcc.c-torture/execute/eeprof-1.x", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,5 +0,0 @@\n-if { [istarget \"powerpc-ibm-aix*\"] } {\n-        set torture_execute_xfail \"powerpc-ibm-aix*\"\n-}\n-set additional_flags \"-finstrument-functions\"\n-return 0"}, {"sha": "886bd05dfda3612af095d1af20116098f5e54c98", "filename": "gcc/testsuite/gcc.c-torture/execute/execute.exp", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fexecute.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fexecute.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fexecute.exp?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -22,28 +22,17 @@\n # C torture test suite.\n #\n \n-if $tracelevel then {\n-    strace $tracelevel\n-}\n+# Load support procs.\n+load_lib gcc-dg.exp\n \n-# load support procs\n-load_lib torture-options.exp\n-load_lib c-torture.exp\n+# Initialize `dg'.\n+dg-init\n \n-torture-init\n-set-torture-options $C_TORTURE_OPTIONS {{}} $LTO_TORTURE_OPTIONS\n+# Main loop.\n+set saved-dg-do-what-default ${dg-do-what-default}\n+set dg-do-what-default \"run\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" \"-w\"\n+set dg-do-what-default ${saved-dg-do-what-default}\n \n-#\n-# main test loop\n-#\n-\n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n-    }\n-\n-    c-torture-execute $src\n-}\n-\n-torture-finish\n+# All done.\n+dg-finish"}, {"sha": "feb2a34e037c8c9a9f60f87b61c5b8a4a6d872b0", "filename": "gcc/testsuite/gcc.c-torture/execute/ipa-sra-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fipa-sra-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fipa-sra-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fipa-sra-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n struct big\n {\n   int data[1000000];"}, {"sha": "c65423ef6d99391b117488a2ece7842e3f8b4034", "filename": "gcc/testsuite/gcc.c-torture/execute/ipa-sra-2.x", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fipa-sra-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fipa-sra-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fipa-sra-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,3 +0,0 @@\n-load_lib target-supports.exp\r\n-\r\n-return  [expr [check_effective_target_int16 ]] \r"}, {"sha": "539db4b4d430f713c9159df0862d48f35bd146b8", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2f.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,6 @@\n+/* { dg-require-effective-target mmap } */\n+/* { dg-skip-if \"the executable is at the same position the test tries to remap\" { m68k-*-linux* } { \"*\" } { \"\" } } */\n+\n #include <limits.h>\n \n #include <sys/types.h>"}, {"sha": "ad024dd493877ef5f98ef187302e96504912480b", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2f.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,11 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { ! [check_effective_target_mmap] } {\n-        return 1\n-}\n-\n-if [istarget \"m68k-*-linux*\"] {\n-    # the executable is at the same position the test tries to remap\n-    return 1\n-}\n-return 0"}, {"sha": "0840945c87a9c214907b78fdf4573b01d467cb32", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2g.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,6 @@\n+/* { dg-require-effective-target mmap } */\n+/* { dg-skip-if \"the executable is at the same position the test tries to remap\" { m68k-*-linux* } { \"*\" } { \"\" } } */\n+\n #include <limits.h>\n \n #include <sys/types.h>"}, {"sha": "ad024dd493877ef5f98ef187302e96504912480b", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2g.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,11 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { ! [check_effective_target_mmap] } {\n-        return 1\n-}\n-\n-if [istarget \"m68k-*-linux*\"] {\n-    # the executable is at the same position the test tries to remap\n-    return 1\n-}\n-return 0"}, {"sha": "49c8c093fd825cab4e37ecf9ccacd62b93be24aa", "filename": "gcc/testsuite/gcc.c-torture/execute/mode-dependent-address.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmode-dependent-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmode-dependent-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmode-dependent-address.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target stdint_types } */\n+\n #include <stdint.h>\n #include <string.h>\n #include <stdlib.h>"}, {"sha": "6622e71f35cd4ff17477175e497377b0816e4ff3", "filename": "gcc/testsuite/gcc.c-torture/execute/mode-dependent-address.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmode-dependent-address.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmode-dependent-address.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmode-dependent-address.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { ! [check_effective_target_stdint_types] } {\n-\treturn 1\n-}\n-\n-return 0"}, {"sha": "73c0f6470db2d18874f0712bbf437108bccd4e06", "filename": "gcc/testsuite/gcc.c-torture/execute/nest-align-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-align-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-align-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-align-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -2,6 +2,9 @@\n    function.  */\n /* Origin: Joey Ye <joey.ye@intel.com> */\n \n+/* Force bigger stack alignment for PowerPC EABI targets.  */\n+/* { dg-options \"-mno-eabi\" { target powerpc-*-eabi* } } */\n+\n #include <stddef.h>\n \n typedef int aligned __attribute__((aligned));"}, {"sha": "392d9aaa898a7c08345d5ab6239b81bf7b1f4ecf", "filename": "gcc/testsuite/gcc.c-torture/execute/nest-align-1.x", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-align-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-align-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-align-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,5 +0,0 @@\n-# Force bigger stack alignment for PowerPC EABI targets.\n-if { [istarget \"powerpc-*-eabi*\"] } {\n-    set additional_flags \"-mno-eabi\"\n-}\n-return 0"}, {"sha": "d950315f237347752e42b62be05051233782488b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr19689.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n extern void abort (void);\n \n struct"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/pr19689.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "dedcb657e191afd47800cc655ef6a53dbc323580", "filename": "gcc/testsuite/gcc.c-torture/execute/pr22493-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22493-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22493-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22493-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-fwrapv\" } */\n+\n #include <limits.h>\n extern void abort ();\n extern void exit (int);"}, {"sha": "36a58395004c352395b3ff7d4877f1fbee5a758e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr22493-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22493-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22493-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22493-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-fwrapv\"\n-return 0"}, {"sha": "2c963abc4c62a279576133092b46601c84695c18", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23047.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23047.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23047.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23047.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-fwrapv\" } */\n #include <limits.h>\n extern void abort ();\n extern void exit (int);"}, {"sha": "36a58395004c352395b3ff7d4877f1fbee5a758e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23047.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23047.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23047.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23047.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-fwrapv\"\n-return 0"}, {"sha": "378ebe741d9d2b994252d27a08d318659a05eee8", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23135.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,10 +1,15 @@\n /* Based on execute/simd-1.c, modified by joern.rennecke@st.com to\n    trigger a reload bug.  Verified for gcc mainline from 20050722 13:00 UTC\n    for sh-elf -m4 -O2.  */\n+/* { dg-options \"-Wno-psabi\" } */\n+\n #ifndef STACK_SIZE\n #define STACK_SIZE (256*1024)\n #endif\n \n+extern void abort (void);\n+extern void exit (int);\n+\n typedef struct { char c[STACK_SIZE/2]; } big_t;\n \n typedef int __attribute__((mode(SI))) __attribute__((vector_size (8))) vecint;"}, {"sha": "cb7b119b8cb171c2882eb5f6f6073ebf806f1b71", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23135.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-Wno-psabi\"\n-return 0"}, {"sha": "40758c1d583cd31faaf439f1d998b3abb155f86f", "filename": "gcc/testsuite/gcc.c-torture/execute/pr29797-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr29797-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr29797-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr29797-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n extern void abort(void);\n \n unsigned int bar(void) { return 32768; }"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr29797-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr29797-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr29797-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr29797-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "fb8c2471a6d3efd032ccef44dceaf016fda4ce61", "filename": "gcc/testsuite/gcc.c-torture/execute/pr31448.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31448.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31448.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31448.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/31448, this used to ICE during expand because\n    reduce_to_bit_field_precision was not ready to handle constants. */\n+/* { dg-require-effective-target int32plus } */\n \n typedef struct _st {\n     int iIndex : 24;"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr31448.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31448.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31448.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31448.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "17c70bcc4d0a3ec84ab7729c821502e0b369a922", "filename": "gcc/testsuite/gcc.c-torture/execute/pr35456.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35456.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35456.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35456.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"signed zero not supported\" { \"vax-*-*\" } { \"*\" } { \"\" } } */\n extern void abort (void);\n \n double"}, {"sha": "73b18fb74954acba3e9bfac5b6fa68bb0b828a29", "filename": "gcc/testsuite/gcc.c-torture/execute/pr35456.x", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35456.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35456.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35456.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,3 +0,0 @@\n-# VAX does not support signed zero.\n-if [istarget \"vax-*-*\"] { return 1 }\n-return 0"}, {"sha": "173a8d478881245e96086b7f3f1cd4e8b0afef66", "filename": "gcc/testsuite/gcc.c-torture/execute/pr37573.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37573.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37573.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37573.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/37573 */\n+/* { dg-require-effective-target int32plus } */\n \n struct S\n {"}, {"sha": "7378270cdb00d1815c876e8fa1216ef730be997b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr37573.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37573.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37573.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37573.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-        return 1\n-}\n-\n-return 0"}, {"sha": "5ee058ded8210caf5c8ab44c832eadf66f9ade37", "filename": "gcc/testsuite/gcc.c-torture/execute/pr38151.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-Wno-psabi\" } */\n void abort (void);\n \n struct S2848"}, {"sha": "cb7b119b8cb171c2882eb5f6f6073ebf806f1b71", "filename": "gcc/testsuite/gcc.c-torture/execute/pr38151.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-Wno-psabi\"\n-return 0"}, {"sha": "dcd8d53f7b5861fc49902c5dca35d20abed68b3d", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39228.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39228.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39228.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39228.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,6 @@\n+/* { dg-options \"-mieee\" { target sh*-*-* alpha*-*-* } } */\n+/* { dg-skip-if \"No Inf/NaN support\" { spu-*-* } \"*\" \"\" } */\n+\n extern void abort (void);\n \n static int __attribute__((always_inline)) testf (float b)"}, {"sha": "a7d8a821e53db00ae211a8cc9add74513dd28a97", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39228.x", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39228.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39228.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39228.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,10 +0,0 @@\n-if { [istarget \"alpha*-*-*\"] || [istarget \"sh*-*-*\"] } {\n-\t# alpha and SH require -mieee for this test.\n-\tset additional_flags \"-mieee\"\n-}\n-if [istarget \"spu-*-*\"] {\n-\t# No Inf/NaN support on SPU.\n-\treturn 1\n-}\n-\n-return 0"}, {"sha": "9c1868da31312542bc859f46c63fbb7a47cd32f0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39501.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,8 @@\n /* { dg-options \"-ffast-math\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n #define min1(a,b) ((a) < (b) ? (a) : (b))\n #define max1(a,b) ((a) > (b) ? (a) : (b))\n "}, {"sha": "72527d7b4e9d7d1be85865e431f37da0c8c76219", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39501.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-ffast-math\"\n-return 0"}, {"sha": "59cd6411fbb3d064e9bbf62155d6f0d89c59da02", "filename": "gcc/testsuite/gcc.c-torture/execute/pr40386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,8 @@\n /* { dg-options \"-fno-ira-share-spill-slots\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n #define CHAR_BIT 8\n \n #define ROR(a,b) (((a) >> (b)) | ((a) << ((sizeof (a) * CHAR_BIT) - (b))))"}, {"sha": "12192e203e70fdb7296d3c69da5f5c0d7adb8dbc", "filename": "gcc/testsuite/gcc.c-torture/execute/pr40386.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,2 +0,0 @@\n-set additional_flags \"-fno-ira-share-spill-slots\"\n-return 0"}, {"sha": "0d6ebfb273488309e05d381376a8bcb2bc6bf3c2", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43220.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target int32plus } */\n+\n void *volatile p;\n \n int"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43220.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "85eb016c544e6d56c816718e0d403d7f31ca6132", "filename": "gcc/testsuite/gcc.c-torture/execute/pr44683.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-mieee\" { target sh*-*-* } } */\n int __attribute__((noinline,noclone))\n copysign_bug (double x)\n {"}, {"sha": "20413409a201ce6aa3ea8ba6f0e10358b7012312", "filename": "gcc/testsuite/gcc.c-torture/execute/pr44683.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,6 +0,0 @@\n-if { [istarget \"sh*-*-*\"] } {\n-\t# SH require -mieee for this test.\n-\tset additional_flags \"-mieee\"\n-}\n-\n-return 0"}, {"sha": "45cc8de3c59a2a05aacf70bdce7e0581d800d2d6", "filename": "gcc/testsuite/gcc.c-torture/execute/pr45262.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr45262.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr45262.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr45262.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,7 @@\n /* PR middle-end/45262 */\n \n+/* { dg-require-effective-target int32plus } */\n+\n extern void abort (void);\n \n int"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/pr45262.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr45262.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr45262.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr45262.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "470c8ee204c57d23ea96aec01f1f340a12ecc7f8", "filename": "gcc/testsuite/gcc.c-torture/execute/pr47237.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"can cause stack underflow\" { nios2-*-* } \"*\" \"\" } */\n #define INTEGER_ARG  5\n \n extern void abort(void);"}, {"sha": "d5d6988f93f7bcc5465edba0365811724f21c93b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr47237.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,6 +0,0 @@\n-if { [istarget \"nios2-*-*\"] } {\n-    # This test can cause the stack to underflow on Nios II.\n-    set torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "14e1e317f5c4f8306214c35e8cc95eab6db82836", "filename": "gcc/testsuite/gcc.c-torture/execute/pr51581-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,7 @@\n /* PR tree-optimization/51581 */\n \n+/* { dg-require-effective-target int32plus } */\n+\n extern void abort (void);\n \n #define N 4096"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr51581-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "e4345b5fa7cf6a813f439532bc8ad3a6d57b4820", "filename": "gcc/testsuite/gcc.c-torture/execute/pr51581-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/51581 */\n+/* { dg-require-effective-target int32plus } */\n \n extern void abort (void);\n "}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr51581-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51581-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "13ecb7933548a93c03d1a37ebc4bd0b2d68a20f2", "filename": "gcc/testsuite/gcc.c-torture/execute/pr52979-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,5 +1,7 @@\n /* PR middle-end/52979 */\n \n+/* { dg-require-effective-target int32plus } */\n+\n extern void abort (void);\n int c, d, e;\n "}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr52979-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "91d4fbca8ac5137cb2d333679fa83f7453b65db6", "filename": "gcc/testsuite/gcc.c-torture/execute/pr52979-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/52979 */\n+/* { dg-require-effective-target int32plus } */\n \n extern void abort (void);\n int c, d, e;"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr52979-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52979-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "eeb38466535d2cf340946560a7e5e5ca1d764cad", "filename": "gcc/testsuite/gcc.c-torture/execute/pr53366-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53366-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53366-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53366-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0"}, {"sha": "a8558ea324367d591ab92c36cdc547698f3ff31c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr56799.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56799.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56799.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56799.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n \n #include <stdio.h>\n typedef struct { int x; int y;} S;"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr56799.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56799.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56799.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56799.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "ca6015872edcd695fa3bb5fae9a4148edc553845", "filename": "gcc/testsuite/gcc.c-torture/execute/pr57124.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,9 @@\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-options \"-fno-strict-overflow\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n __attribute__ ((noinline))\n foo(short unsigned int *p1, short unsigned int *p2)\n {"}, {"sha": "da6cfd08332df2afaf99b520551063375cd8804d", "filename": "gcc/testsuite/gcc.c-torture/execute/pr57124.x", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,9 +0,0 @@\n-load_lib target-supports.exp\n-\n-set additional_flags \"-fno-strict-overflow\"\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0"}, {"sha": "599071ba46c28e00499179cbef15faad4baa5a17", "filename": "gcc/testsuite/gcc.c-torture/execute/pr57344-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57344-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57344-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57344-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/57344 */\n+/* { dg-require-effective-target int32plus } */\n \n struct __attribute__((packed)) S\n {"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/pr57344-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57344-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57344-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57344-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "28b6efe8f9503ac5d115ebc976f48e1049fe0379", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58570.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n #pragma pack(1)\n struct S\n {"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58570.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "dcd24470f3e987c60f62ebdc4065819b087656b7", "filename": "gcc/testsuite/gcc.c-torture/execute/pr60822.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60822.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60822.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60822.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n struct X {\n     char fill0[800000];\n     int a;"}, {"sha": "4efed4c325fdaf8e580e991d809ed0805bb70ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr60822.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60822.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60822.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60822.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int32plus] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "067f3223bd612397ab21c244045a3d25047ef3ef", "filename": "gcc/testsuite/gcc.c-torture/execute/pr7284-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr7284-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr7284-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr7284-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -2,6 +2,7 @@\n    DR#081), not undefined.  Bug 7284 from Al Grant (AlGrant at\n    myrealbox.com).  */\n \n+/* { dg-require-effective-target int32plus } */\n /* { dg-options \"-std=c89\" } */\n \n extern void abort (void);"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/pr7284-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr7284-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr7284-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr7284-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "7e0409800c43744038b363eb767de3c426079c88", "filename": "gcc/testsuite/gcc.c-torture/execute/shiftdi.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fshiftdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fshiftdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fshiftdi.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target int32plus } */\n+\n /* Failed on sparc with -mv8plus because sparc.c:set_extends() thought\n    erroneously that SImode ASHIFT chops the upper bits, it does not.  */\n "}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/shiftdi.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fshiftdi.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fshiftdi.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fshiftdi.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "8a92cfe9073940aa3b0219772660466e01f60295", "filename": "gcc/testsuite/gcc.c-torture/execute/simd-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target stdint_types } */\n #include <stdint.h>\n typedef int32_t __attribute__((vector_size(8))) v2si;\n int64_t s64;"}, {"sha": "2e7510c6ddba72a4fe3536e0c6059b4ad21ad360", "filename": "gcc/testsuite/gcc.c-torture/execute/simd-4.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_stdint_types] } {\n-\treturn 0\n-}\n-\n-return 1;"}, {"sha": "c5d39fd09ee4635cf4ed06a01d03207ddac45308", "filename": "gcc/testsuite/gcc.c-torture/execute/strncmp-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrncmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrncmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrncmp-1.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"kernel strncmp does not perform unsigned comparisons\" { vxworks_kernel } \"*\" \"\" } */\n /* Copyright (C) 2002  Free Software Foundation.\n \n    Test strncmp with various combinations of pointer alignments and lengths to"}, {"sha": "b555e0c8f2a116043139fbc690eb92d2c5e10a8d", "filename": "gcc/testsuite/gcc.c-torture/execute/strncmp-1.x", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrncmp-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrncmp-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrncmp-1.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,16 +0,0 @@\n-if {[istarget i?86-*-vxworks*]\n-    || [istarget mips*-*-vxworks*]\n-    || [istarget sh*-*-vxworks*]\n-    || [istarget sparc*-*-vxworks*]} {\n-    # The kernel strncmp doesn't perform unsigned comparisons.\n-    set torture_eval_before_execute {\n-\tglobal compiler_conditional_xfail_data\n-\tset compiler_conditional_xfail_data {\n-\t    \"The kernel strncmp doesn't perform unsigned comparisons.\"\n-\t    { \"*-*-*\" }\n-\t    {}\n-\t    { \"-mrtp\" }\n-\t}\n-    }\n-}\n-return 0"}, {"sha": "42b447a27fc3f06072449a945d09f5cf0c19dba6", "filename": "gcc/testsuite/gcc.c-torture/execute/usmul.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fusmul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fusmul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fusmul.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n int __attribute__ ((noinline)) foo (short x, unsigned short y)\n {\n   return x * y;"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/usmul.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fusmul.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fusmul.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fusmul.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "8df557cddaab0711fb2514accb8a2457d619651a", "filename": "gcc/testsuite/gcc.c-torture/execute/vrp-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-5.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n extern void exit (int);\n extern void abort ();\n "}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/vrp-5.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-5.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-5.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-5.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "90ebd2d412c4b395650574b51fede9a14bd19ab8", "filename": "gcc/testsuite/gcc.c-torture/execute/vrp-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-6.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n #include <limits.h>\n \n extern void exit (int);"}, {"sha": "121fcfecc2c22fd274926e06105d20e909831f99", "filename": "gcc/testsuite/gcc.c-torture/execute/vrp-6.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-6.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-6.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-6.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-load_lib target-supports.exp\n-\n-if { [check_effective_target_int16] } {\n-\treturn 1\n-}\n-\n-return 0;"}, {"sha": "4a55acd2a3e824766ce83ed0092e0dcdf9369ee4", "filename": "gcc/testsuite/gcc.c-torture/execute/zerolen-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"assumes absence of larger-than-word padding\" { epiphany-*-* } \"*\" \"\" } */\n extern void abort(void);\n \n typedef int word __attribute__((mode(word)));"}, {"sha": "cee203d27bb58796e15fdb252d92022690fd217e", "filename": "gcc/testsuite/gcc.c-torture/execute/zerolen-2.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d099d9a4d62656cd39f06617f024455f696c2844/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.x?ref=d099d9a4d62656cd39f06617f024455f696c2844", "patch": "@@ -1,7 +0,0 @@\n-if [istarget \"epiphany-*-*\"] {\n-    # This test assumes the absence of larger-than-word padding.\n-    # to make this true for struct foo on epiphany would require\n-    # __attribute__((packed,aligned(__alignof__(word)))) .\n-    return 1\n-}\n-return 0"}, {"sha": "1266db3116d5c7da31971739b285aa48c9e18107", "filename": "gcc/testsuite/gcc.dg/20111227-2.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.dg%2F20111227-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.dg%2F20111227-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20111227-2.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,6 +1,6 @@\n /* Testcase derived from 20111227-1.c to ensure that REE is combining\n    redundant zero extends with zero extend to wider mode.  */\n-/* { dg-options \"-fdump-rtl-ree -O\" } */\n+/* { dg-options \"-fdump-rtl-ree -O -free\" } */\n extern void abort (void);\n \n unsigned short s;", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/20111227-2.c"}, {"sha": "a750db347faa09eacfc7b20d439d41b2bb749ed3", "filename": "gcc/testsuite/gcc.dg/20111227-3.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.dg%2F20111227-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423608115c8c93386979d6e90291dc5985601c04/gcc%2Ftestsuite%2Fgcc.dg%2F20111227-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20111227-3.c?ref=423608115c8c93386979d6e90291dc5985601c04", "patch": "@@ -1,6 +1,6 @@\n /* Testcase derived from 20111227-1.c to ensure that REE is combining\n    redundant sign extends with sign extend to wider mode.  */\n-/* { dg-options \"-fdump-rtl-ree -O\" } */\n+/* { dg-options \"-fdump-rtl-ree -O -free\" } */\n \n extern void abort (void);\n ", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/20111227-3.c"}]}