{"sha": "85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhOTJmN2VmNWE0NzZjYmJmMzZlODNiYjIwYmIzMDRjODQ3OGQzNA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2006-09-20T16:48:21Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2006-09-20T16:48:21Z"}, "message": "extend.texi (Decimal Float): Update for latest draft TR, clean up terminology.\n\n\t* doc/extend.texi (Decimal Float): Update for latest draft TR,\n\tclean up terminology.\n\nFrom-SVN: r117085", "tree": {"sha": "28375452ab91a8497231c3ebaaea0d0c1222d9b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28375452ab91a8497231c3ebaaea0d0c1222d9b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a92f7ef5a476cbbf36e83bb20bb304c8478d34/comments", "author": null, "committer": null, "parents": [{"sha": "4e60515f9a6cb7a6c2fd59a9e3a1601a929deb92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e60515f9a6cb7a6c2fd59a9e3a1601a929deb92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e60515f9a6cb7a6c2fd59a9e3a1601a929deb92"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "86217ace13664097aada6078d81ee242c6fa1cc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a92f7ef5a476cbbf36e83bb20bb304c8478d34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a92f7ef5a476cbbf36e83bb20bb304c8478d34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "patch": "@@ -1,3 +1,8 @@\n+2006-09-20  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/extend.texi (Decimal Float): Update for latest draft TR,\n+\tclean up terminology.\n+\n 2006-09-20  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/28574"}, {"sha": "fe507f2975eac57e1eb293aec9d3ae1bedb99b9f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a92f7ef5a476cbbf36e83bb20bb304c8478d34/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a92f7ef5a476cbbf36e83bb20bb304c8478d34/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "patch": "@@ -33,7 +33,7 @@ extensions, accepted by GCC in C89 mode and in C++.\n * Conditionals::        Omitting the middle operand of a @samp{?:} expression.\n * Long Long::\t\tDouble-word integers---@code{long long int}.\n * Complex::             Data types for complex numbers.\n-* Decimal Float::\tDecimal Floating Point.\n+* Decimal Float::       Decimal Floating Types. \n * Hex Floats::          Hexadecimal floating-point constants.\n * Zero Length::         Zero-length arrays.\n * Variable Length::     Arrays whose length is computed at run time.\n@@ -816,8 +816,8 @@ variables are named @code{foo$real} and @code{foo$imag}.  You can\n examine and set these two fictitious variables with your debugger.\n \n @node Decimal Float\n-@section Decimal Floating Point\n-@cindex decimal floating point\n+@section Decimal Floating Types\n+@cindex decimal floating types\n @cindex @code{_Decimal32} data type\n @cindex @code{_Decimal64} data type\n @cindex @code{_Decimal128} data type\n@@ -828,25 +828,41 @@ examine and set these two fictitious variables with your debugger.\n @cindex @code{DD} integer suffix\n @cindex @code{DL} integer suffix\n \n-GNU C supports decimal floating point types in addition to the\n-standard floating-point types.  This extension supports decimal\n-floating-point arithmetic as defined in IEEE-754R, the proposed\n-revision of IEEE-754.  The C language extension is defined in ISO/IEC\n-DTR 24732, Draft 5.  Support for this functionality will change when\n-it is accepted into the C standard and might change for new drafts\n-of the proposal.  Calling conventions for any target might also change.\n-Not all targets support decimal floating point.\n+As an extension, the GNU C compiler supports decimal floating types as\n+defined in the N1176 draft of ISO/IEC WDTR24732.  Support for decimal\n+floating types in GCC will evolve as the draft technical report changes.\n+Calling conventions for any target might also change.  Not all targets\n+support decimal floating types.\n \n-Support for decimal floating point includes the arithmetic operators\n+The decimal floating types are @code{_Decimal32}, @code{_Decimal64}, and\n+@code{_Decimal128}.  They use a radix of ten, unlike the floating types\n+@code{float}, @code{double}, and @code{long double} whose radix is not\n+specified by the C standard but is usually two.\n+\n+Support for decimal floating types includes the arithmetic operators\n add, subtract, multiply, divide; unary arithmetic operators;\n relational operators; equality operators; and conversions to and from\n-integer and other floating-point types.  Use a suffix @samp{df} or\n+integer and other floating types.  Use a suffix @samp{df} or\n @samp{DF} in a literal constant of type @code{_Decimal32}, @samp{dd}\n or @samp{DD} for @code{_Decimal64}, and @samp{dl} or @samp{DL} for\n @code{_Decimal128}.\n \n-Passing a decimal floating-point value as an argument to a function\n-without a prototype is undefined.\n+GCC support of decimal float as specified by the draft technical report\n+is incomplete:\n+\n+@itemize @bullet\n+@item\n+Translation time data type (TTDT) is not supported.\n+\n+@item\n+Characteristics of decimal floating types are defined in header file\n+@file{decfloat.h} rather than @file{float.h}.\n+\n+@item\n+When the value of a decimal floating type cannot be represented in the\n+integer type to which it is being converted, the result is undefined\n+rather than the result value specified by the draft technical report.\n+@end itemize\n \n Types @code{_Decimal32}, @code{_Decimal64}, and @code{_Decimal128}\n are supported by the DWARF2 debug information format."}]}