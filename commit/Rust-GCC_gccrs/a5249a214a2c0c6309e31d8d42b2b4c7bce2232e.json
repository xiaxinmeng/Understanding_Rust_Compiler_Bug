{"sha": "a5249a214a2c0c6309e31d8d42b2b4c7bce2232e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyNDlhMjE0YTJjMGM2MzA5ZTMxZDhkNDJiMmI0YzdiY2UyMjMyZQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2004-03-10T00:09:37Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2004-03-10T00:09:37Z"}, "message": "re PR other/14474 (make dvi breaks for \"TeX (Web2C 7.3.1) 3.14159\")\n\n\tPR other/14474\n\t* doc/md.texi (Pattern Ordering, Dependent Patterns)\n\t(Jump Patterns, Looping Patterns): Wrap in separate \"@ifset\n\tINTERNALS\".\n\nFrom-SVN: r79210", "tree": {"sha": "acb45f4d6ee84de692f37d0e65095027f4840cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb45f4d6ee84de692f37d0e65095027f4840cab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e373cdb46cbf785d4993ce5904f931df170690d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e373cdb46cbf785d4993ce5904f931df170690d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e373cdb46cbf785d4993ce5904f931df170690d4"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "98ba55aed704f212ade16895257f5d84cf661b69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5249a214a2c0c6309e31d8d42b2b4c7bce2232e", "patch": "@@ -1,3 +1,10 @@\n+2004-03-10  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR other/14474\n+\t* doc/md.texi (Pattern Ordering, Dependent Patterns)\n+\t(Jump Patterns, Looping Patterns): Wrap in separate \"@ifset\n+\tINTERNALS\".\n+\n 2004-03-09  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/ia64/hpux.h (MULTILIB_DEFAULTS): Define."}, {"sha": "47c33608e405b570aafe59b5ba9757e0e35b2746", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5249a214a2c0c6309e31d8d42b2b4c7bce2232e/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=a5249a214a2c0c6309e31d8d42b2b4c7bce2232e", "patch": "@@ -3483,6 +3483,12 @@ the values of operands 1 and 2.\n \n @end table\n \n+@end ifset\n+@c Each of the following nodes are wrapped in separate\n+@c \"@ifset INTERNALS\" to work around memory limits for the default\n+@c configuration in older tetex distributions.  Known to not work:\n+@c tetex-1.0.7, known to work: tetex-2.0.2.\n+@ifset INTERNALS\n @node Pattern Ordering\n @section When the Order of Patterns Matters\n @cindex Pattern Ordering\n@@ -3506,6 +3512,8 @@ Instead of using this pattern ordering it would be possible to make the\n pattern for convert-a-byte smart enough to deal properly with any\n constant value.\n \n+@end ifset\n+@ifset INTERNALS\n @node Dependent Patterns\n @section Interdependence of Patterns\n @cindex Dependent Patterns\n@@ -3586,6 +3594,8 @@ instructions.  Instead, they should be generated from the same pattern\n that supports register-register add insns by examining the operands and\n generating the appropriate machine instruction.\n \n+@end ifset\n+@ifset INTERNALS\n @node Jump Patterns\n @section Defining Jump Instruction Patterns\n @cindex jump instruction patterns\n@@ -3699,6 +3709,8 @@ discussed above, we have the pattern\n The @code{SELECT_CC_MODE} macro on the SPARC returns @code{CC_NOOVmode}\n for comparisons whose argument is a @code{plus}.\n \n+@end ifset\n+@ifset INTERNALS\n @node Looping Patterns\n @section Defining Looping Instruction Patterns\n @cindex looping instruction patterns\n@@ -3804,6 +3816,8 @@ be derived from it), however, in many cases the loop induction variable\n may become redundant and removed by the flow pass.\n \n \n+@end ifset\n+@ifset INTERNALS\n @node Insn Canonicalizations\n @section Canonicalization of Instructions\n @cindex canonicalization of instructions\n@@ -3938,6 +3952,8 @@ will be written using @code{zero_extract} rather than the equivalent\n \n @end itemize\n \n+@end ifset\n+@ifset INTERNALS\n @node Expander Definitions\n @section Defining RTL Sequences for Code Generation\n @cindex expander definitions\n@@ -4155,6 +4171,8 @@ at the end, emit an insn to copy the result of the operation into\n itself.  Such an insn will generate no code, but it can avoid problems\n in the compiler.\n \n+@end ifset\n+@ifset INTERNALS\n @node Insn Splitting\n @section Defining How to Split Instructions\n @cindex insn splitting\n@@ -4388,6 +4406,8 @@ functionality as two separate @code{define_insn} and @code{define_split}\n patterns.  It exists for compactness, and as a maintenance tool to prevent\n having to ensure the two patterns' templates match.\n \n+@end ifset\n+@ifset INTERNALS\n @node Including Patterns\n @section Including Patterns in Machine Descriptions.\n @cindex insn includes\n@@ -4462,6 +4482,8 @@ one @option{-I} option, the directories are scanned in left-to-right\n order; the standard default directory come after.\n \n \n+@end ifset\n+@ifset INTERNALS\n @node Peephole Definitions\n @section Machine-Specific Peephole Optimizers\n @cindex peephole optimizer definitions\n@@ -4492,6 +4514,8 @@ targets that do scheduling.\n * define_peephole2::    RTL to RTL Peephole Optimizers\n @end menu\n \n+@end ifset\n+@ifset INTERNALS\n @node define_peephole\n @subsection RTL to Text Peephole Optimizers\n @findex define_peephole\n@@ -4683,6 +4707,8 @@ then the way to mention this insn in a peephole is as follows:\n   @dots{})\n @end smallexample\n \n+@end ifset\n+@ifset INTERNALS\n @node define_peephole2\n @subsection RTL to RTL Peephole Optimizers\n @findex define_peephole2\n@@ -4768,6 +4794,8 @@ If we had not added the @code{(match_dup 4)} in the middle of the input\n sequence, it might have been the case that the register we chose at the\n beginning of the sequence is killed by the first or second @code{set}.\n \n+@end ifset\n+@ifset INTERNALS\n @node Insn Attributes\n @section Instruction Attributes\n @cindex insn attributes\n@@ -4791,6 +4819,8 @@ to track the condition codes.\n * Processor pipeline description:: Specifying information for insn scheduling.\n @end menu\n \n+@end ifset\n+@ifset INTERNALS\n @node Defining Attributes\n @subsection Defining Attributes and their Values\n @cindex defining attributes and their values\n@@ -4855,6 +4885,8 @@ If the attribute takes numeric values, no @code{enum} type will be\n defined and the function to obtain the attribute's value will return\n @code{int}.\n \n+@end ifset\n+@ifset INTERNALS\n @node Expressions\n @subsection Attribute Expressions\n @cindex attribute expressions\n@@ -5064,6 +5096,8 @@ for numeric attributes, as @code{eq_attr} and @code{attr_flag}\n produce more efficient code for non-numeric attributes.\n @end table\n \n+@end ifset\n+@ifset INTERNALS\n @node Tagging Insns\n @subsection Assigning Attribute Values to Insns\n @cindex tagging insns\n@@ -5169,6 +5203,8 @@ string.  Therefore, the value of the @code{length} attribute specified\n in a @code{define_asm_attributes} should be the maximum possible length\n of a single machine instruction.\n \n+@end ifset\n+@ifset INTERNALS\n @node Attr Example\n @subsection Example of Attribute Specifications\n @cindex attribute specifications example\n@@ -5224,6 +5260,8 @@ performed on quantities smaller than a machine word clobber the condition\n code since they will set the condition code to a value corresponding to the\n full-word result.\n \n+@end ifset\n+@ifset INTERNALS\n @node Insn Lengths\n @subsection Computing the Length of an Insn\n @cindex insn lengths, computing\n@@ -5308,6 +5346,8 @@ as follows:\n                       (const_int 6)))])\n @end smallexample\n \n+@end ifset\n+@ifset INTERNALS\n @node Constant Attributes\n @subsection Constant Attributes\n @cindex constant attributes\n@@ -5337,6 +5377,8 @@ the value of a constant attribute may use the @code{symbol_ref} form,\n but may not use either the @code{match_operand} form or @code{eq_attr}\n forms involving insn attributes.\n \n+@end ifset\n+@ifset INTERNALS\n @node Delay Slots\n @subsection Delay Slot Scheduling\n @cindex delay slots, defining\n@@ -5412,6 +5454,8 @@ branch is true, we might represent this as follows:\n @end smallexample\n @c the above is *still* too long.  --mew 4feb93\n \n+@end ifset\n+@ifset INTERNALS\n @node Processor pipeline description\n @subsection Specifying processor pipeline description\n @cindex processor pipeline description\n@@ -5497,6 +5541,8 @@ choose the best one.\n * Comparison of the two descriptions:: Drawbacks of the old pipeline description\n @end menu\n \n+@end ifset\n+@ifset INTERNALS\n @node Old pipeline description\n @subsubsection Specifying Function Units\n @cindex old pipeline description\n@@ -5619,6 +5665,8 @@ used during their execution and there is no way of representing that\n conflict.  We welcome any examples of how function unit conflicts work\n in such processors and suggestions for their representation.\n \n+@end ifset\n+@ifset INTERNALS\n @node Automaton pipeline description\n @subsubsection Describing instruction pipeline characteristics\n @cindex automaton based pipeline description\n@@ -6041,6 +6089,8 @@ construction\n @end smallexample\n \n \n+@end ifset\n+@ifset INTERNALS\n @node Comparison of the two descriptions\n @subsubsection Drawbacks of the old pipeline description\n @cindex old pipeline description\n@@ -6094,6 +6144,8 @@ In an automaton based pipeline hazard recognizer, speed is not dependent\n on processor complexity.\n @end itemize\n \n+@end ifset\n+@ifset INTERNALS\n @node Conditional Execution\n @section Conditional Execution\n @cindex conditional execution\n@@ -6174,6 +6226,8 @@ generates a new pattern\n   \"(%3) add %2,%1,%0\")\n @end smallexample\n \n+@end ifset\n+@ifset INTERNALS\n @node Constant Definitions\n @section Constant Definitions\n @cindex constant definitions"}]}