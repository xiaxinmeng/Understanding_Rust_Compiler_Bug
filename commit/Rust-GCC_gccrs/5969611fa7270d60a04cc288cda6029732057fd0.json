{"sha": "5969611fa7270d60a04cc288cda6029732057fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk2OTYxMWZhNzI3MGQ2MGEwNGNjMjg4Y2RhNjAyOTczMjA1N2ZkMA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-04T12:16:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:16:06Z"}, "message": "exp_ch7.adb, [...]: Minor reformatting.\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb, make.adb, sem_ch10.adb, bindgen.adb, sem_res.adb,\n\texp_ch4.adb, makeutl.adb: Minor reformatting.\n\nFrom-SVN: r177365", "tree": {"sha": "d6b4b2c6d1c7a7d404ef8b327689a5ef73005883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6b4b2c6d1c7a7d404ef8b327689a5ef73005883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5969611fa7270d60a04cc288cda6029732057fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5969611fa7270d60a04cc288cda6029732057fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5969611fa7270d60a04cc288cda6029732057fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5969611fa7270d60a04cc288cda6029732057fd0/comments", "author": null, "committer": null, "parents": [{"sha": "6367dd30236275f012c58eff2f3098f4b55a50a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6367dd30236275f012c58eff2f3098f4b55a50a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6367dd30236275f012c58eff2f3098f4b55a50a9"}], "stats": {"total": 482, "additions": 240, "deletions": 242}, "files": [{"sha": "93cd8d660baa4f1e9b0036cb33028ab3c4b6b30b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -1,3 +1,8 @@\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb, make.adb, sem_ch10.adb, bindgen.adb, sem_res.adb,\n+\texp_ch4.adb, makeutl.adb: Minor reformatting.\n+\n 2011-08-04  Emmanuel Briot  <briot@adacore.com>\n \n \t* make.adb, makeutl.adb, makeutl.ads (Make): major refactoring."}, {"sha": "aee3bddcd2c3f6fe651d04fb6995e01bbba66011", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -1665,6 +1665,10 @@ package body Bindgen is\n       procedure Gen_Header;\n       --  Generate the header of the finalization routine\n \n+      ----------------\n+      -- Gen_Header --\n+      ----------------\n+\n       procedure Gen_Header is\n       begin\n          WBI (\"   procedure finalize_library is\");\n@@ -1685,6 +1689,8 @@ package body Bindgen is\n          WBI (\"   begin\");\n       end Gen_Header;\n \n+   --  Start of processing for Gen_Finalize_Library_Ada\n+\n    begin\n       for E in reverse Elab_Order.First .. Elab_Order.Last loop\n          Unum := Elab_Order.Table (E);\n@@ -1954,7 +1960,7 @@ package body Bindgen is\n          if U.Unit_Kind /= 'p' or else U.Is_Generic then\n             null;\n \n-         --  That aren't an interface to a stand alone library\n+         --  .. that are not interfaces to a stand alone library\n \n          elsif U.SAL_Interface then\n             null;"}, {"sha": "d99157ab4d08213aa7a7c6266d9c3bd1a537a45a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -456,7 +456,7 @@ package body Exp_Ch4 is\n       then\n          declare\n             Pool_Id : constant Entity_Id :=\n-              Get_Global_Pool_For_Access_Type (Ptr_Typ);\n+                        Get_Global_Pool_For_Access_Type (Ptr_Typ);\n             Scop    : Node_Id := Cunit_Entity (Current_Sem_Unit);\n \n          begin"}, {"sha": "0c570f61b77fcc260a58aa8c4de1d685ba43ba97", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -4078,9 +4078,13 @@ package body Exp_Ch7 is\n \n    function Get_Global_Pool_For_Access_Type (T : Entity_Id) return Entity_Id is\n    begin\n-      if Opt.True_VMS_Target\n-        and then Esize (T) = 32\n-      then\n+      --  Access types whose size is smaller than System.Address size can\n+      --  exit only on VMS. We can't use the usual global pool which returns\n+      --  an object of type Address as truncation will make it invalid.\n+      --  To handle this case, VMS has a dedicated global pool that returns\n+      --  addresses that fit into 32 bit accesses.\n+\n+      if Opt.True_VMS_Target and then Esize (T) = 32 then\n          return RTE (RE_Global_Pool_32_Object);\n       else\n          return RTE (RE_Global_Pool_Object);"}, {"sha": "29e06b5467a91fc38dfb2b9f4b433c0474131d56", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 172, "deletions": 196, "changes": 368, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -612,9 +612,9 @@ package body Make is\n    --  when using project files.\n \n    procedure Queue_Library_Project_Sources;\n-   --  For all library project, if the library file does not exist,\n-   --  put all the project sources in the queue, and flag the project\n-   --  so that the library is generated.\n+   --  For all library project, if the library file does not exist, put all the\n+   --  project sources in the queue, and flag the project so that the library\n+   --  is generated.\n \n    procedure Compute_Switches_For_Main\n      (Main_Source_File  : in out File_Name_Type;\n@@ -641,12 +641,15 @@ package body Make is\n       Executable                 : File_Name_Type := No_File;\n       Is_Last_Main               : Boolean;\n       Stop_Compile               : out Boolean);\n-   --  Build all source files for a given main file.\n-   --  Current_Main_Index, if not zero, the index of the current main unit in\n-   --  its source file.\n+   --  Build all source files for a given main file\n+   --\n+   --  Current_Main_Index, if not zero, is the index of the current main unit\n+   --  in its source file.\n+   --\n    --  Stand_Alone_Libraries is set to True when there are Stand-Alone\n    --  Libraries, so that gnatbind is invoked with the -F switch to force\n    --  checking of elaboration flags.\n+   --\n    --  Stop_Compile is set to true if we should not try to compile any more\n    --  of the main units\n \n@@ -669,9 +672,8 @@ package body Make is\n      (Non_Std_Executable : Boolean := False;\n       Executable         : File_Name_Type := No_File;\n       Main_ALI_File      : File_Name_Type);\n-   --  Perform the link of a single executable.\n-   --  The ali file corresponding to Main_Source_File.\n-   --  Executable is the file name of an executable.\n+   --  Perform the link of a single executable. The ali file corresponds\n+   --  to Main_ALI_File. Executable is the file name of an executable.\n    --  Non_Std_Executable is set to True when there is a possibility that\n    --  the linker will not choose the correct executable file name.\n \n@@ -4172,12 +4174,13 @@ package body Make is\n    is\n       Linker_Switches_Last : constant Integer := Linker_Switches.Last;\n       Path_Option          : constant String_Access :=\n-        MLib.Linker_Library_Path_Option;\n+                               MLib.Linker_Library_Path_Option;\n       Libraries_Present    : Boolean := False;\n       Current              : Natural;\n       Proj2                : Project_Id;\n       Depth                : Natural;\n       Proj1                : Project_List;\n+\n    begin\n       if not Run_Path_Option then\n          Linker_Switches.Increment_Last;\n@@ -4205,8 +4208,8 @@ package body Make is\n                   Library_Projs.Increment_Last;\n                   Current := Library_Projs.Last;\n \n-                  --  Any project with a greater depth should be\n-                  --  after this project in the list.\n+                  --  Any project with a greater depth should be after this\n+                  --  project in the list.\n \n                   while Current > 1 loop\n                      Proj2 := Library_Projs.Table (Current - 1);\n@@ -4217,8 +4220,8 @@ package body Make is\n \n                   Library_Projs.Table (Current) := Proj1.Project;\n \n-                  --  If it is not a static library and path option\n-                  --  is set, add it to the Library_Paths table.\n+                  --  If it is not a static library and path option is set, add\n+                  --  it to the Library_Paths table.\n \n                   if Proj1.Project.Library_Kind /= Static\n                     and then Proj1.Project.Extended_By = No_Project\n@@ -4280,11 +4283,10 @@ package body Make is\n \n          if Libraries_Present then\n \n-            --  If Path_Option is not null, create the switch\n-            --  (\"-Wl,-rpath,\" or equivalent) with all the non-static\n-            --  library dirs plus the standard GNAT library dir.\n-            --  We do that only if Run_Path_Option is True\n-            --  (not disabled by -R switch).\n+            --  If Path_Option is not null, create the switch (\"-Wl,-rpath,\"\n+            --  or equivalent) with all the non-static library dirs plus the\n+            --  standard GNAT library dir. We do that only if Run_Path_Option\n+            --  is True (not disabled by -R switch).\n \n             if Run_Path_Option and then Path_Option /= null then\n                declare\n@@ -4305,8 +4307,7 @@ package body Make is\n                        Library_Paths.First .. Library_Paths.Last\n                      loop\n                         Linker_Switches.Increment_Last;\n-                        Linker_Switches.Table\n-                          (Linker_Switches.Last) :=\n+                        Linker_Switches.Table (Linker_Switches.Last) :=\n                           new String'\n                             (Path_Option.all &\n                              Library_Paths.Table (Index).all);\n@@ -4315,10 +4316,8 @@ package body Make is\n                      --  One switch for the standard GNAT library dir\n \n                      Linker_Switches.Increment_Last;\n-                     Linker_Switches.Table\n-                       (Linker_Switches.Last) :=\n-                       new String'\n-                         (Path_Option.all & MLib.Utl.Lib_Directory);\n+                     Linker_Switches.Table (Linker_Switches.Last) :=\n+                       new String'(Path_Option.all & MLib.Utl.Lib_Directory);\n \n                   else\n                      --  We are going to create one switch of the form\n@@ -4327,21 +4326,19 @@ package body Make is\n                      for Index in\n                        Library_Paths.First .. Library_Paths.Last\n                      loop\n-                        --  Add the length of the library dir plus one\n-                        --  for the directory separator.\n+                        --  Add the length of the library dir plus one for the\n+                        --  directory separator.\n \n                         Length :=\n-                          Length +\n-                            Library_Paths.Table (Index)'Length + 1;\n+                          Length + Library_Paths.Table (Index)'Length + 1;\n                      end loop;\n \n                      --  Finally, add the length of the standard GNAT\n                      --  library dir.\n \n                      Length := Length + MLib.Utl.Lib_Directory'Length;\n                      Option := new String (1 .. Length);\n-                     Option (1 .. Path_Option'Length) :=\n-                       Path_Option.all;\n+                     Option (1 .. Path_Option'Length) := Path_Option.all;\n                      Current := Path_Option'Length;\n \n                      --  Put each library dir followed by a dir\n@@ -4352,12 +4349,10 @@ package body Make is\n                      loop\n                         Option\n                           (Current + 1 ..\n-                             Current +\n-                               Library_Paths.Table (Index)'Length) :=\n+                             Current + Library_Paths.Table (Index)'Length) :=\n                           Library_Paths.Table (Index).all;\n                         Current :=\n-                          Current +\n-                            Library_Paths.Table (Index)'Length + 1;\n+                          Current + Library_Paths.Table (Index)'Length + 1;\n                         Option (Current) := Path_Separator;\n                      end loop;\n \n@@ -4371,8 +4366,7 @@ package body Make is\n                      --  And add the switch to the linker switches\n \n                      Linker_Switches.Increment_Last;\n-                     Linker_Switches.Table (Linker_Switches.Last) :=\n-                       Option;\n+                     Linker_Switches.Table (Linker_Switches.Last) := Option;\n                   end if;\n                end;\n             end if;\n@@ -4387,8 +4381,8 @@ package body Make is\n             Including_Libraries => False,\n             Include_Path        => False);\n \n-         --  Check for attributes Linker'Linker_Options in projects\n-         --  other than the main project\n+         --  Check for attributes Linker'Linker_Options in projects other than\n+         --  the main project\n \n          declare\n             Linker_Options : constant String_List :=\n@@ -4416,7 +4410,7 @@ package body Make is\n \n       declare\n          Args : Argument_List\n-           (Linker_Switches.First .. Linker_Switches.Last + 2);\n+                  (Linker_Switches.First .. Linker_Switches.Last + 2);\n \n          Last_Arg : Integer := Linker_Switches.First - 1;\n          Skip     : Boolean := False;\n@@ -4434,16 +4428,15 @@ package body Make is\n                Skip := True;\n \n                --  Here we capture and duplicate the linker argument. We\n-               --  need to do the duplication since the arguments will\n-               --  get normalized. Not doing so will result in calling\n-               --  normalized two times for the same set of arguments if\n-               --  gnatmake is passed multiple mains. This can result in\n-               --  the wrong argument being passed to the linker.\n+               --  need to do the duplication since the arguments will get\n+               --  normalized. Not doing so will result in calling normalized\n+               --  two times for the same set of arguments if gnatmake is\n+               --  passed multiple mains. This can result in the wrong argument\n+               --  being passed to the linker.\n \n             else\n                Last_Arg := Last_Arg + 1;\n-               Args (Last_Arg) :=\n-                 new String'(Linker_Switches.Table (J).all);\n+               Args (Last_Arg) := new String'(Linker_Switches.Table (J).all);\n             end if;\n          end loop;\n \n@@ -4468,8 +4461,7 @@ package body Make is\n \n             if Success then\n                Successful_Links.Increment_Last;\n-               Successful_Links.Table (Successful_Links.Last) :=\n-                 Main_ALI_File;\n+               Successful_Links.Table (Successful_Links.Last) := Main_ALI_File;\n \n             elsif Osint.Number_Of_Files = 1\n               or else not Keep_Going\n@@ -4485,8 +4477,7 @@ package body Make is\n                end if;\n \n                Failed_Links.Increment_Last;\n-               Failed_Links.Table (Failed_Links.Last) :=\n-                 Main_ALI_File;\n+               Failed_Links.Table (Failed_Links.Last) := Main_ALI_File;\n             end if;\n          end;\n       end;\n@@ -4500,10 +4491,9 @@ package body Make is\n \n    procedure Binding_Phase\n      (Stand_Alone_Libraries : Boolean := False;\n-      Main_ALI_File : File_Name_Type)\n+      Main_ALI_File         : File_Name_Type)\n    is\n-      Args : Argument_List\n-        (Binder_Switches.First .. Binder_Switches.Last + 2);\n+      Args : Argument_List (Binder_Switches.First .. Binder_Switches.Last + 2);\n       --  The arguments for the invocation of gnatbind\n \n       Last_Arg : Natural := Binder_Switches.Last;\n@@ -4519,10 +4509,10 @@ package body Make is\n       --  The path name of the mapping file\n \n    begin\n-      --  Check if there are shared libraries, so that gnatbind is\n-      --  called with -shared. Check also if gnatbind is called with\n-      --  -shared, so that gnatlink is called with -shared-libgcc\n-      --  ensuring that the shared version of libgcc will be used.\n+      --  Check if there are shared libraries, so that gnatbind is called with\n+      --  -shared. Check also if gnatbind is called with -shared, so that\n+      --  gnatlink is called with -shared-libgcc ensuring that the shared\n+      --  version of libgcc will be used.\n \n       if Main_Project /= No_Project\n         and then MLib.Tgt.Support_For_Libraries /= Prj.None\n@@ -4536,6 +4526,7 @@ package body Make is\n                Bind_Shared := Shared_Switch'Access;\n                exit;\n             end if;\n+\n             Proj := Proj.Next;\n          end loop;\n       end if;\n@@ -4605,8 +4596,7 @@ package body Make is\n             --  Delete the temporary mapping file if one was created\n \n             if Mapping_Path /= No_Path then\n-               Delete_Temporary_File\n-                 (Project_Tree.Shared, Mapping_Path);\n+               Delete_Temporary_File (Project_Tree.Shared, Mapping_Path);\n             end if;\n \n             --  And reraise the exception\n@@ -4707,7 +4697,7 @@ package body Make is\n                Rebuild : Boolean := False;\n \n                Lib_Timestamp1 : constant Time_Stamp_Type :=\n-                 Proj1.Project.Library_TS;\n+                                  Proj1.Project.Library_TS;\n \n             begin\n                List := Proj1.Project.All_Imported_Projects;\n@@ -4737,8 +4727,8 @@ package body Make is\n          Proj1 := Proj1.Next;\n       end loop;\n \n-      --  Reset the flags Need_To_Build_Lib for the next main,\n-      --  to avoid rebuilding libraries uselessly.\n+      --  Reset the flags Need_To_Build_Lib for the next main, to avoid\n+      --  rebuilding libraries uselessly.\n \n       Proj1 := Project_Tree.Projects;\n       while Proj1 /= null loop\n@@ -4838,9 +4828,9 @@ package body Make is\n       if Main_Project /= No_Project\n         and then MLib.Tgt.Support_For_Libraries /= Prj.None\n         and then (Do_Bind_Step\n-                  or Unique_Compile_All_Projects\n-                  or not Compile_Only)\n-        and then (Do_Link_Step or else Is_Last_Main)\n+                   or Unique_Compile_All_Projects\n+                   or not Compile_Only)\n+        and then (Do_Link_Step or Is_Last_Main)\n       then\n          Library_Phase\n            (Stand_Alone_Libraries => Stand_Alone_Libraries,\n@@ -4864,9 +4854,7 @@ package body Make is\n       then\n          Inform (Msg => \"objects up to date.\");\n \n-      elsif Do_Not_Execute\n-        and then First_Compiled_File /= No_File\n-      then\n+      elsif Do_Not_Execute and then First_Compiled_File /= No_File then\n          Write_Name (First_Compiled_File);\n          Write_Eol;\n       end if;\n@@ -4883,12 +4871,12 @@ package body Make is\n       --    4) Made unit cannot be a main unit\n \n       if ((Do_Not_Execute\n-           or List_Dependencies\n-           or not Do_Bind_Step\n-           or not Is_Main_Unit)\n-          and then not No_Main_Subprogram\n-          and then not Build_Bind_And_Link_Full_Project)\n-        or else Unique_Compile\n+            or List_Dependencies\n+            or not Do_Bind_Step\n+            or not Is_Main_Unit)\n+          and not No_Main_Subprogram\n+          and not Build_Bind_And_Link_Full_Project)\n+        or Unique_Compile\n       then\n          Stop_Compile := True;\n          return;\n@@ -4905,17 +4893,13 @@ package body Make is\n          Executable_Stamp := File_Stamp (Executable);\n \n          if not Executable_Obsolete then\n-            Executable_Obsolete :=\n-              Youngest_Obj_Stamp > Executable_Stamp;\n+            Executable_Obsolete := Youngest_Obj_Stamp > Executable_Stamp;\n          end if;\n \n          if not Executable_Obsolete then\n             for Index in reverse 1 .. Dependencies.Last loop\n-               if Is_In_Obsoleted\n-                 (Dependencies.Table (Index).Depends_On)\n-               then\n-                  Enter_Into_Obsoleted\n-                    (Dependencies.Table (Index).This);\n+               if Is_In_Obsoleted (Dependencies.Table (Index).Depends_On) then\n+                  Enter_Into_Obsoleted (Dependencies.Table (Index).This);\n                end if;\n             end loop;\n \n@@ -4940,18 +4924,15 @@ package body Make is\n          --  executable: there may be an externally built library\n          --  file that has been modified.\n \n-         if not Executable_Obsolete\n-           and then Main_Project /= No_Project\n-         then\n+         if not Executable_Obsolete and then Main_Project /= No_Project then\n             declare\n                Proj1 : Project_List;\n \n             begin\n                Proj1 := Project_Tree.Projects;\n                while Proj1 /= null loop\n                   if Proj1.Project.Library\n-                    and then\n-                      Proj1.Project.Library_TS > Executable_Stamp\n+                    and then Proj1.Project.Library_TS > Executable_Stamp\n                   then\n                      Executable_Obsolete := True;\n                      Youngest_Obj_Stamp := Proj1.Project.Library_TS;\n@@ -5027,26 +5008,26 @@ package body Make is\n       Default_Switches_Array : Array_Id;\n \n    begin\n-\n       --  If there is a package Builder in the main project file, add\n       --  the switches from it.\n \n       if Builder_Package /= No_Package then\n          Global_Compilation_Array := Prj.Util.Value_Of\n            (Name      => Name_Global_Compilation_Switches,\n             In_Arrays => Project_Tree.Shared.Packages.Table\n-              (Builder_Package).Decl.Arrays,\n+                           (Builder_Package).Decl.Arrays,\n             Shared    => Project_Tree.Shared);\n \n          Default_Switches_Array :=\n            Project_Tree.Shared.Packages.Table (Builder_Package).Decl.Arrays;\n \n-         while Default_Switches_Array /= No_Array and then\n-           Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Name\n-           /= Name_Default_Switches\n+         while Default_Switches_Array /= No_Array\n+           and then\n+             Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Name /=\n+                                                        Name_Default_Switches\n          loop\n-            Default_Switches_Array := Project_Tree.Shared.Arrays.Table\n-              (Default_Switches_Array).Next;\n+            Default_Switches_Array :=\n+              Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Next;\n          end loop;\n \n          if Global_Compilation_Array /= No_Array_Element and then\n@@ -5060,10 +5041,9 @@ package body Make is\n             Make_Failed (\"*** illegal combination of Builder attributes\");\n          end if;\n \n-         --  If there is only one main, we attempt to get the gnatmake\n-         --  switches for this main (if any). If there are no specific\n-         --  switch for this particular main, get the general gnatmake\n-         --  switches (if any).\n+         --  If there is only one main, we attempt to get the gnatmake switches\n+         --  for this main (if any). If there are no specific switch for this\n+         --  particular main, get the general gnatmake switches (if any).\n \n          if Osint.Number_Of_Files = 1 then\n             if Verbose_Mode then\n@@ -5083,55 +5063,51 @@ package body Make is\n                  Global_Compilation_Array = No_Array_Element);\n \n          else\n-            --  If there are several mains, we always get the general\n-            --  gnatmake switches (if any).\n+            --  If there are several mains, we always get the general gnatmake\n+            --  switches (if any).\n \n-            --  Warn the user, if necessary, so that he is not surprised\n-            --  that specific switches are not taken into account.\n+            --  Warn the user, if necessary, so that he is not surprised that\n+            --  specific switches are not taken into account.\n \n             declare\n                Defaults : constant Variable_Value :=\n                  Prj.Util.Value_Of\n                    (Name                    => Name_Ada,\n                     Index                   => 0,\n-                    Attribute_Or_Array_Name =>\n-                      Name_Default_Switches,\n-                    In_Package              =>\n-                      Builder_Package,\n-                    Shared            => Project_Tree.Shared);\n+                    Attribute_Or_Array_Name => Name_Default_Switches,\n+                    In_Package              => Builder_Package,\n+                    Shared                  => Project_Tree.Shared);\n \n                Switches : constant Array_Element_Id :=\n                  Prj.Util.Value_Of\n                    (Name      => Name_Switches,\n-                    In_Arrays =>\n-                      Project_Tree.Shared.Packages.Table\n-                        (Builder_Package).Decl.Arrays,\n+                    In_Arrays => Project_Tree.Shared.Packages.Table\n+                                   (Builder_Package).Decl.Arrays,\n                     Shared    => Project_Tree.Shared);\n \n                Other_Switches : constant Variable_Value :=\n                  Prj.Util.Value_Of\n-                   (Name        => All_Other_Names,\n-                    Index       => 0,\n-                    Attribute_Or_Array_Name\n-                    => Name_Switches,\n-                    In_Package  => Builder_Package,\n-                    Shared      => Project_Tree.Shared);\n+                   (Name                    => All_Other_Names,\n+                    Index                   => 0,\n+                    Attribute_Or_Array_Name => Name_Switches,\n+                    In_Package              => Builder_Package,\n+                    Shared                  => Project_Tree.Shared);\n \n             begin\n                if Other_Switches /= Nil_Variable_Value then\n                   if not Quiet_Output\n                     and then Switches /= No_Array_Element\n                     and then Project_Tree.Shared.Array_Elements.Table\n-                      (Switches).Next /= No_Array_Element\n+                               (Switches).Next /= No_Array_Element\n                   then\n                      Write_Line\n                        (\"Warning: using Builder'Switches(others), \"\n                         & \"as there are several mains\");\n                   end if;\n \n                   Add_Switches\n-                    (Project_Node_Tree              => Project_Node_Tree,\n-                     Env                            => Root_Environment,\n+                    (Project_Node_Tree                => Project_Node_Tree,\n+                     Env                              => Root_Environment,\n                      File_Name                        => \" \",\n                      Index                            => 0,\n                      The_Package                      => Builder_Package,\n@@ -5150,10 +5126,10 @@ package body Make is\n                   Add_Switches\n                     (Project_Node_Tree => Project_Node_Tree,\n                      Env               => Root_Environment,\n-                     File_Name   => \" \",\n-                     Index       => 0,\n-                     The_Package => Builder_Package,\n-                     Program     => None);\n+                     File_Name         => \" \",\n+                     Index             => 0,\n+                     The_Package       => Builder_Package,\n+                     Program           => None);\n \n                elsif not Quiet_Output\n                  and then Switches /= No_Array_Element\n@@ -5189,16 +5165,13 @@ package body Make is\n                   if Global_Compilation_Switches /= Nil_Variable_Value\n                     and then not Global_Compilation_Switches.Default\n                   then\n-                     --  We have found attribute\n-                     --  Global_Compilation_Switches (\"Ada\"): put the\n-                     --  switches in the appropriate table.\n+                     --  We have found attribute Global_Compilation_Switches\n+                     --  (\"Ada\"): put the switches in the appropriate table.\n \n                      List := Global_Compilation_Switches.Values;\n-\n                      while List /= Nil_String loop\n                         Elem :=\n-                          Project_Tree.Shared.String_Elements.Table\n-                            (List);\n+                          Project_Tree.Shared.String_Elements.Table (List);\n \n                         if Elem.Value /= No_Name then\n                            Add_Switch\n@@ -5233,12 +5206,11 @@ package body Make is\n          if Saved_Linker_Switches.Table (J).all = Output_Flag.all then\n             declare\n                Exec_File_Name : constant String :=\n-                 Saved_Linker_Switches.Table (J + 1).all;\n+                                  Saved_Linker_Switches.Table (J + 1).all;\n \n             begin\n                if not Is_Absolute_Path (Exec_File_Name) then\n-                  Get_Name_String\n-                    (Main_Project.Exec_Directory.Display_Name);\n+                  Get_Name_String (Main_Project.Exec_Directory.Display_Name);\n                   Add_Str_To_Name_Buffer (Exec_File_Name);\n                   Saved_Linker_Switches.Table (J + 1) :=\n                     new String'(Name_Buffer (1 .. Name_Len));\n@@ -5256,7 +5228,7 @@ package body Make is\n \n       declare\n          Dir_Path : constant String :=\n-           Get_Name_String (Main_Project.Directory.Display_Name);\n+                      Get_Name_String (Main_Project.Directory.Display_Name);\n       begin\n          for J in 1 .. Binder_Switches.Last loop\n             Test_If_Relative_Path\n@@ -5268,28 +5240,29 @@ package body Make is\n          for J in 1 .. Saved_Binder_Switches.Last loop\n             Test_If_Relative_Path\n               (Saved_Binder_Switches.Table (J),\n-               Do_Fail => Make_Failed'Access,\n-               Parent => Current_Work_Dir,\n+               Do_Fail            => Make_Failed'Access,\n+               Parent             => Current_Work_Dir,\n                Including_L_Switch => False);\n          end loop;\n \n          for J in 1 .. Linker_Switches.Last loop\n             Test_If_Relative_Path\n-              (Linker_Switches.Table (J), Parent => Dir_Path,\n+              (Linker_Switches.Table (J),\n+               Parent  => Dir_Path,\n                Do_Fail => Make_Failed'Access);\n          end loop;\n \n          for J in 1 .. Saved_Linker_Switches.Last loop\n             Test_If_Relative_Path\n               (Saved_Linker_Switches.Table (J),\n                Do_Fail => Make_Failed'Access,\n-               Parent => Current_Work_Dir);\n+               Parent  => Current_Work_Dir);\n          end loop;\n \n          for J in 1 .. Gcc_Switches.Last loop\n             Test_If_Relative_Path\n               (Gcc_Switches.Table (J),\n-               Do_Fail => Make_Failed'Access,\n+               Do_Fail              => Make_Failed'Access,\n                Parent               => Dir_Path,\n                Including_Non_Switch => False);\n          end loop;\n@@ -5298,7 +5271,7 @@ package body Make is\n             Test_If_Relative_Path\n               (Saved_Gcc_Switches.Table (J),\n                Parent               => Current_Work_Dir,\n-               Do_Fail => Make_Failed'Access,\n+               Do_Fail              => Make_Failed'Access,\n                Including_Non_Switch => False);\n          end loop;\n       end;\n@@ -5322,14 +5295,13 @@ package body Make is\n                if Proj.Project.Library then\n                   Proj.Project.Need_To_Build_Lib :=\n                     not MLib.Tgt.Library_Exists_For\n-                      (Proj.Project, Project_Tree)\n+                          (Proj.Project, Project_Tree)\n                     and then not Proj.Project.Externally_Built;\n \n                   if Proj.Project.Need_To_Build_Lib then\n \n                      --  If there is no object directory, then it will be\n-                     --  impossible to build the library. So fail\n-                     --  immediately.\n+                     --  impossible to build the library, so fail immediately.\n \n                      if Proj.Project.Object_Directory =\n                        No_Path_Information\n@@ -5409,11 +5381,11 @@ package body Make is\n             Executable := Executable_Name (Strip_Suffix (Main_Source_File));\n \n          else\n-            --  If we are using a project file, we attempt to remove the\n-            --  body (or spec) termination of the main subprogram. We find\n-            --  it the naming scheme of the project file. This avoids\n-            --  generating an executable \"main.2\" for a main subprogram\n-            --  \"main.2.ada\", when the body termination is \".2.ada\".\n+            --  If we are using a project file, we attempt to remove the body\n+            --  (or spec) termination of the main subprogram. We find it the\n+            --  naming scheme of the project file. This avoids generating an\n+            --  executable \"main.2\" for a main subprogram \"main.2.ada\", when\n+            --  the body termination is \".2.ada\".\n \n             Executable :=\n               Prj.Util.Executable_Of\n@@ -5459,25 +5431,24 @@ package body Make is\n \n             Main_Unit_File_Name   : constant String :=\n               Prj.Env.File_Name_Of_Library_Unit_Body\n-                (Name    => Main_Source_File_Name,\n-                 Project => Main_Project,\n-                 In_Tree => Project_Tree,\n-                 Main_Project_Only =>\n-                 not Unique_Compile);\n+                (Name              => Main_Source_File_Name,\n+                 Project           => Main_Project,\n+                 In_Tree           => Project_Tree,\n+                 Main_Project_Only => not Unique_Compile);\n \n             The_Packages : constant Package_Id := Main_Project.Decl.Packages;\n \n             Binder_Package : constant Prj.Package_Id :=\n-              Prj.Util.Value_Of\n-                (Name        => Name_Binder,\n-                 In_Packages => The_Packages,\n-                 Shared      => Project_Tree.Shared);\n+                               Prj.Util.Value_Of\n+                                 (Name        => Name_Binder,\n+                                  In_Packages => The_Packages,\n+                                  Shared      => Project_Tree.Shared);\n \n             Linker_Package : constant Prj.Package_Id :=\n-              Prj.Util.Value_Of\n-                (Name        => Name_Linker,\n-                 In_Packages => The_Packages,\n-                 Shared      => Project_Tree.Shared);\n+                               Prj.Util.Value_Of\n+                                 (Name        => Name_Linker,\n+                                  In_Packages => The_Packages,\n+                                  Shared      => Project_Tree.Shared);\n \n          begin\n             --  We fail if we cannot find the main source file\n@@ -5528,24 +5499,24 @@ package body Make is\n                Resolve_Relative_Names_In_Switches\n                  (Current_Work_Dir => Current_Work_Dir);\n \n-               --  Record the current last switch index for table\n-               --  Binder_Switches and Linker_Switches, so that these tables\n-               --  may be reset before each main, before adding switches from\n-               --  the project file and from the command line.\n+               --  Record current last switch index for tables Binder_Switches\n+               --  and Linker_Switches, so that these tables may be reset\n+               --  before each main, before adding switches from the project\n+               --  file and from the command line.\n \n                Last_Binder_Switch := Binder_Switches.Last;\n                Last_Linker_Switch := Linker_Switches.Last;\n \n             else\n                --  Reset the tables Binder_Switches and Linker_Switches\n+\n                Binder_Switches.Set_Last (Last_Binder_Switch);\n                Linker_Switches.Set_Last (Last_Linker_Switch);\n             end if;\n \n-            --  We now deal with the binder and linker switches.\n-            --  If no project file is used, there is nothing to do\n-            --  because the binder and linker switches are the same\n-            --  for all mains.\n+            --  We now deal with the binder and linker switches. If no project\n+            --  file is used, there is nothing to do because the binder and\n+            --  linker switches are the same for all mains.\n \n             --  Add binder switches from the project file for the first main\n \n@@ -5583,10 +5554,10 @@ package body Make is\n                   Program           => Linker);\n             end if;\n \n-            --  As we are using a project file, for relative paths we add\n-            --  the current working directory for any relative path on\n-            --  the command line and the project directory, for any\n-            --  relative path in the project file.\n+            --  As we are using a project file, for relative paths we add the\n+            --  current working directory for any relative path on the command\n+            --  line and the project directory, for any relative path in the\n+            --  project file.\n \n             declare\n                Dir_Path : constant String :=\n@@ -5610,7 +5581,9 @@ package body Make is\n \n       else\n          if not Compute_Builder then\n+\n             --  Reset the tables Binder_Switches and Linker_Switches\n+\n             Binder_Switches.Set_Last (Last_Binder_Switch);\n             Linker_Switches.Set_Last (Last_Linker_Switch);\n          end if;\n@@ -5622,11 +5595,10 @@ package body Make is\n          Display_Commands (not Quiet_Output);\n       end if;\n \n-      --  We now put in the Binder_Switches and Linker_Switches tables,\n-      --  the binder and linker switches of the command line that have\n-      --  been put in the Saved_ tables. If a project file was used, then\n-      --  the command line switches will follow the project file\n-      --  switches.\n+      --  We now put in the Binder_Switches and Linker_Switches tables, the\n+      --  binder and linker switches of the command line that have been put in\n+      --  the Saved_ tables. If a project file was used, then the command line\n+      --  switches will follow the project file switches.\n \n       for J in 1 .. Saved_Binder_Switches.Last loop\n          Add_Switch\n@@ -5727,6 +5699,7 @@ package body Make is\n       --  Special case when switch -B was specified\n \n       if Build_Bind_And_Link_Full_Project then\n+\n          --  When switch -B is specified, there must be a project file\n \n          if Main_Project = No_Project then\n@@ -5775,6 +5748,7 @@ package body Make is\n          Make_Failed (\"cannot specify several mains with a multi-unit index\");\n \n       elsif Main_Project /= No_Project then\n+\n          --  If the main project file is a library project file, main(s) cannot\n          --  be specified on the command line.\n \n@@ -5807,8 +5781,9 @@ package body Make is\n \n                if Value = Prj.Nil_String or else Unique_Compile then\n \n-                  if (not Make_Steps) or else Compile_Only\n-                    or else not Main_Project.Library\n+                  if not Make_Steps\n+                    or Compile_Only\n+                    or not Main_Project.Library\n                   then\n                      --  First make sure that the binder and the linker will\n                      --  not be invoked.\n@@ -5892,16 +5867,17 @@ package body Make is\n \n                         declare\n                            Main_Name : constant String :=\n-                              Get_Name_String\n-                               (Project_Tree.Shared.String_Elements.Table\n-                                    (Value).Value);\n+                                         Get_Name_String\n+                                           (Project_Tree.Shared.\n+                                             String_Elements.\n+                                               Table (Value).Value);\n+\n                            Proj : constant Project_Id :=\n-                             Prj.Env.Project_Of\n-                              (Main_Name, Main_Project, Project_Tree);\n-                        begin\n+                                    Prj.Env.Project_Of\n+                                     (Main_Name, Main_Project, Project_Tree);\n \n+                        begin\n                            if Proj = Main_Project then\n-\n                               At_Least_One_Main := True;\n                               Osint.Add_File\n                                 (Get_Name_String\n@@ -5950,9 +5926,7 @@ package body Make is\n       end if;\n \n       if Osint.Number_Of_Files = 0 then\n-         if Main_Project /= No_Project\n-           and then Main_Project.Library\n-         then\n+         if Main_Project /= No_Project and then Main_Project.Library then\n             if Do_Bind_Step\n               and then not Main_Project.Standalone_Library\n             then\n@@ -6050,19 +6024,18 @@ package body Make is\n       if Main_Project /= No_Project then\n \n          if Main_Project.Object_Directory /= No_Path_Information then\n+\n             --  Change current directory to object directory of main project\n \n             Project_Of_Current_Object_Directory := No_Project;\n             Change_To_Object_Directory (Main_Project);\n          end if;\n \n-         --  Source file lookups should be cached for efficiency.\n-         --  Source files are not supposed to change.\n+         --  Source file lookups should be cached for efficiency. Source files\n+         --  are not supposed to change.\n \n          Osint.Source_File_Data (Cache => True);\n-\n          Osint.Add_Default_Search_Dirs;\n-\n          Queue_Library_Project_Sources;\n       end if;\n \n@@ -6183,8 +6156,10 @@ package body Make is\n \n       declare\n          Data : Project_Compilation_Access;\n-         Proj : Project_List := Project_Tree.Projects;\n+         Proj : Project_List;\n+\n       begin\n+         Proj := Project_Tree.Projects;\n          while Proj /= null loop\n             Data := new Project_Compilation_Data'\n               (Mapping_File_Names        => new Temp_Path_Names\n@@ -6480,7 +6455,7 @@ package body Make is\n        Env               : out Prj.Tree.Environment)\n    is\n       procedure Check_Version_And_Help is\n-         new Check_Version_And_Help_G (Makeusg);\n+        new Check_Version_And_Help_G (Makeusg);\n \n       --  Start of processing for Initialize\n \n@@ -6726,6 +6701,7 @@ package body Make is\n \n          --  We add the source directories and the object directories to the\n          --  search paths.\n+\n          --  ??? Why do we need these search directories, we already know the\n          --  locations from parsing the project, except for the runtime which\n          --  has its own directories anyway\n@@ -6817,7 +6793,7 @@ package body Make is\n    --  Start of processing for Insert_Project_Sources\n \n    begin\n-      --  For all the sources in the project files,\n+      --  Loop through all the sources in the project files\n \n       Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n       while Unit /= null loop"}, {"sha": "57853016d75eed2ae72045e35e01e697a6e20a8c", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 46, "deletions": 39, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -1350,11 +1350,14 @@ package body Makeutl is\n             Base_Main    : String) return Prj.Source_Id\n          is\n             Spec_Source : Prj.Source_Id := No_Source;\n-            Source      : Prj.Source_Id := No_Source;\n-            Project     : Project_Id := Root_Project;\n+            Source      : Prj.Source_Id;\n+            Project     : Project_Id;\n             Iter        : Source_Iterator;\n             Suffix      : File_Name_Type;\n+\n          begin\n+            Source  := No_Source;\n+            Project := Root_Project;\n             while Source = No_Source\n               and then Project /= No_Project\n             loop\n@@ -1429,12 +1432,13 @@ package body Makeutl is\n \n                for J in reverse Names.First .. Names.Last loop\n                   declare\n-                     File       : Main_Info       := Names.Table (J);\n-                     Main_Id    : File_Name_Type  := File.File;\n-                     Main       : constant String := Get_Name_String (Main_Id);\n-                     Base       : constant String := Base_Name (Main);\n-                     Source     : Prj.Source_Id   := No_Source;\n-                     Is_Absolute : Boolean        := False;\n+                     File        : Main_Info       := Names.Table (J);\n+                     Main_Id     : File_Name_Type  := File.File;\n+                     Main        : constant String :=\n+                                     Get_Name_String (Main_Id);\n+                     Base        : constant String := Base_Name (Main);\n+                     Source      : Prj.Source_Id   := No_Source;\n+                     Is_Absolute : Boolean         := False;\n \n                   begin\n                      if Base /= Main then\n@@ -1444,10 +1448,10 @@ package body Makeutl is\n                         else\n                            declare\n                               Absolute : constant String :=\n-                                Normalize_Pathname\n-                                  (Name           => Main,\n-                                   Directory      => \"\",\n-                                   Resolve_Links  => False);\n+                                           Normalize_Pathname\n+                                             (Name           => Main,\n+                                              Directory      => \"\",\n+                                              Resolve_Links  => False);\n                            begin\n                               File.File := Create_Name (Absolute);\n                               Main_Id := Create_Name (Base);\n@@ -1504,15 +1508,19 @@ package body Makeutl is\n                         end if;\n \n                         if Source = No_Source then\n-                           --  Still not found ? Maybe we have a unit name\n+\n+                           --  Still not found? Maybe we have a unit name\n+\n                            declare\n                               Unit : constant Unit_Index :=\n-                                Units_Htable.Get\n-                                  (File.Tree.Units_HT, Name_Id (Main_Id));\n-                           begin\n+                                       Units_Htable.Get\n+                                         (File.Tree.Units_HT,\n+                                          Name_Id (Main_Id));\n \n+                           begin\n                               if Unit /= No_Unit_Index then\n                                  Source := Unit.File_Names (Impl);\n+\n                                  if Source = No_Source then\n                                     Source := Unit.File_Names (Spec);\n                                  end if;\n@@ -1527,9 +1535,7 @@ package body Makeutl is\n                            --  to compile all the units from the same source\n                            --  file.\n \n-                           if Source.Index /= 0\n-                             and then File.Index = 0\n-                           then\n+                           if Source.Index /= 0 and then File.Index = 0 then\n                               Add_Multi_Unit_Sources (File.Tree, Source);\n                            end if;\n \n@@ -1564,8 +1570,7 @@ package body Makeutl is\n                            Error_Msg_File_1 := Main_Id;\n                            Error_Msg_Name_1 := Root_Project.Name;\n                            Prj.Err.Error_Msg\n-                             (Flags,\n-                              \"{ is not a source of project %%\",\n+                             (Flags, \"{ is not a source of project %%\",\n                               File.Location, Project);\n                         end if;\n                      end if;\n@@ -1832,8 +1837,10 @@ package body Makeutl is\n \n                elsif Sw'Length >= 4\n                  and then (Sw (2 .. 3) = \"aL\"\n-                            or else Sw (2 .. 3) = \"aO\"\n-                            or else Sw (2 .. 3) = \"aI\")\n+                             or else\n+                           Sw (2 .. 3) = \"aO\"\n+                             or else\n+                           Sw (2 .. 3) = \"aI\")\n                then\n                   Start := 4;\n \n@@ -1923,7 +1930,6 @@ package body Makeutl is\n \n       Start := Finish;\n       Finish := Finish - 1;\n-\n       while Start >= 1 and then Name_Buffer (Start - 1) in '0' .. '9' loop\n          Start := Start - 1;\n       end loop;\n@@ -2644,6 +2650,7 @@ package body Makeutl is\n \n             Iter   : Source_Iterator;\n             Source : Prj.Source_Id;\n+\n          begin\n             --  Nothing to do when \"-u\" was specified and some files were\n             --  specified on the command line\n@@ -2662,23 +2669,23 @@ package body Makeutl is\n                if Is_Compilable (Source)\n                  and then\n                    (All_Projects\n-                    or else Is_Extending (Project, Source.Project))\n+                     or else Is_Extending (Project, Source.Project))\n                  and then not Source.Locally_Removed\n                  and then Source.Replaced_By = No_Source\n                  and then\n                    (not Source.Project.Externally_Built\n-                    or else\n-                      (Is_Extending (Project, Source.Project)\n-                        and then not Project.Externally_Built))\n+                     or else\n+                       (Is_Extending (Project, Source.Project)\n+                         and then not Project.Externally_Built))\n                  and then Source.Kind /= Sep\n                  and then Source.Path /= No_Path_Information\n                then\n                   if Source.Kind = Impl\n                     or else (Source.Unit /= No_Unit_Index\n-                             and then Source.Kind = Spec\n-                             and then (Other_Part (Source) = No_Source\n-                                        or else\n-                                          Other_Part (Source).Locally_Removed))\n+                              and then Source.Kind = Spec\n+                              and then (Other_Part (Source) = No_Source\n+                                          or else\n+                                        Other_Part (Source).Locally_Removed))\n                   then\n                      if (Unit_Based\n                           or else Source.Unit = No_Unit_Index\n@@ -2712,9 +2719,9 @@ package body Makeutl is\n          Project_Tree          : Project_Tree_Ref;\n          Excluding_Shared_SALs : Boolean := False)\n       is\n-         Sfile     : File_Name_Type;\n-         Afile     : File_Name_Type;\n-         Src_Id    : Prj.Source_Id;\n+         Sfile  : File_Name_Type;\n+         Afile  : File_Name_Type;\n+         Src_Id : Prj.Source_Id;\n \n       begin\n          --  Insert in the queue the unmarked source files (i.e. those which\n@@ -2745,7 +2752,7 @@ package body Makeutl is\n                         when Spec =>\n                            declare\n                               Bdy : constant Prj.Source_Id :=\n-                                Other_Part (Src_Id);\n+                                      Other_Part (Src_Id);\n                            begin\n                               if Bdy /= No_Source\n                                 and then not Bdy.Locally_Removed\n@@ -2838,9 +2845,9 @@ package body Makeutl is\n       procedure Do_Compute (Project : Project_Id; Tree : Project_Tree_Ref) is\n          Data       : constant Builder_Data_Access := Builder_Data (Tree);\n          All_Phases : constant Boolean :=\n-           not Option_Compile_Only\n-           and then not Option_Bind_Only\n-           and then not Option_Link_Only;\n+                        not Option_Compile_Only\n+                        and then not Option_Bind_Only\n+                        and then not Option_Link_Only;\n          --  Whether the command line asked for all three phases. Depending on\n          --  the project settings, we might still disable some of the phases.\n "}, {"sha": "59ec7a4b0510952360cd1a65bee96e9f76e4c309", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -2602,7 +2602,7 @@ package body Sem_Ch10 is\n             Par_Name := Entity (Pref);\n          end if;\n \n-         --  Guard against missing or misspelled child units.\n+         --  Guard against missing or misspelled child units\n \n          if Present (Par_Name) then\n             Set_Entity_With_Style_Check (Pref, Par_Name);"}, {"sha": "c79672f885304a6e1077e712899141eac7a03852", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5969611fa7270d60a04cc288cda6029732057fd0/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=5969611fa7270d60a04cc288cda6029732057fd0", "patch": "@@ -4355,7 +4355,7 @@ package body Sem_Res is\n       then\n          Error_Msg_N\n            (\"cannot activate task before body seen?\", N);\n-         Error_Msg_N (\"\\Program_Error will be raised at run time\", N);\n+         Error_Msg_N (\"\\Program_Error will be raised at run time?\", N);\n       end if;\n    end Resolve_Allocator;\n "}]}