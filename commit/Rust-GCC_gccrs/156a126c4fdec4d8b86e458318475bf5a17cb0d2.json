{"sha": "156a126c4fdec4d8b86e458318475bf5a17cb0d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU2YTEyNmM0ZmRlYzRkOGI4NmU0NTgzMTg0NzViZjVhMTdjYjBkMg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2004-09-01T17:18:02Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2004-09-01T17:18:02Z"}, "message": "darwin.c (machopic_symbol_defined_p): In addition to being SYMBOL_REF_LOCAL_P...\n\n\t* config/darwin.c (machopic_symbol_defined_p): In addition to\n\tbeing SYMBOL_REF_LOCAL_P, a symbol must also be\n\t! SYMBOL_REF_EXTERNAL_P, as only those are _always_ locally\n\tdefined in this output file, or translation unit in the case\n\tof IMA not being used.\n\t(machopic_output_indirection): SYMBOL_REF_LOCAL_P symbols\n\tnever need .indirect_symbol when indirecting.\n\nFrom-SVN: r86915", "tree": {"sha": "9e41ebffeb3e69e887e931f907b91cf65b019361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e41ebffeb3e69e887e931f907b91cf65b019361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/156a126c4fdec4d8b86e458318475bf5a17cb0d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156a126c4fdec4d8b86e458318475bf5a17cb0d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156a126c4fdec4d8b86e458318475bf5a17cb0d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156a126c4fdec4d8b86e458318475bf5a17cb0d2/comments", "author": null, "committer": null, "parents": [{"sha": "ffbef0240f8fe57c2addd6bd47ff44cdb459dff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffbef0240f8fe57c2addd6bd47ff44cdb459dff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffbef0240f8fe57c2addd6bd47ff44cdb459dff7"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "658bfe4575f8c3193aea4903abb5e181b24b9c57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156a126c4fdec4d8b86e458318475bf5a17cb0d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156a126c4fdec4d8b86e458318475bf5a17cb0d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=156a126c4fdec4d8b86e458318475bf5a17cb0d2", "patch": "@@ -1,3 +1,13 @@\n+2004-09-01  Mike Stump  <mrs@apple.com>\n+\n+\t* config/darwin.c (machopic_symbol_defined_p): In addition to\n+\tbeing SYMBOL_REF_LOCAL_P, a symbol must also be\n+\t! SYMBOL_REF_EXTERNAL_P, as only those are _always_ locally\n+\tdefined in this output file, or translation unit in the case\n+\tof IMA not being used.\n+\t(machopic_output_indirection): SYMBOL_REF_LOCAL_P symbols\n+\tnever need .indirect_symbol when indirecting.\n+\n 2004-09-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in (bb-reorder.o): Add several dependencies."}, {"sha": "c2353e30912d29f29d51348ffb63cb15c2020a8a", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156a126c4fdec4d8b86e458318475bf5a17cb0d2/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156a126c4fdec4d8b86e458318475bf5a17cb0d2/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=156a126c4fdec4d8b86e458318475bf5a17cb0d2", "patch": "@@ -97,9 +97,8 @@ name_needs_quotes (const char *name)\n static int\n machopic_symbol_defined_p (rtx sym_ref)\n {\n-  return ((SYMBOL_REF_FLAGS (sym_ref) & MACHO_SYMBOL_FLAG_DEFINED)\n-\t  /* Local symbols must always be defined.  */\n-\t  || SYMBOL_REF_LOCAL_P (sym_ref));\n+  return (SYMBOL_REF_FLAGS (sym_ref) & MACHO_SYMBOL_FLAG_DEFINED)\n+    || (SYMBOL_REF_LOCAL_P (sym_ref) && ! SYMBOL_REF_EXTERNAL_P (sym_ref));\n }\n \n /* This module assumes that (const (symbol_ref \"foo\")) is a legal pic\n@@ -874,7 +873,8 @@ machopic_output_indirection (void **slot, void *data)\n       machopic_output_stub (asm_out_file, sym, stub);    \n     }\n   else if (! indirect_data (symbol)\n-\t   && machopic_symbol_defined_p (symbol))\n+\t   && (machopic_symbol_defined_p (symbol)\n+\t       || SYMBOL_REF_LOCAL_P (symbol)))\n     {\n       data_section ();\n       assemble_align (GET_MODE_ALIGNMENT (Pmode));"}, {"sha": "b1f15758aa2d78b02ef033cc4629872036dd4501", "filename": "gcc/testsuite/gcc.dg/visibility-b.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156a126c4fdec4d8b86e458318475bf5a17cb0d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156a126c4fdec4d8b86e458318475bf5a17cb0d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-b.c?ref=156a126c4fdec4d8b86e458318475bf5a17cb0d2", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do assemble { target *-*-darwin* } } */\n+\n+#define __private_extern__ extern __attribute__((visibility (\"hidden\")))\n+\n+__private_extern__ int n;\n+\n+int\n+mach_error_type(int sub)\n+{\n+ if (sub >= n)\n+     return 1;\n+ return 0;\n+}"}]}