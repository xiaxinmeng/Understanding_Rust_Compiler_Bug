{"sha": "acbedd7cc0bdf155b70b9b993bc343466c984ef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiZWRkN2NjMGJkZjE1NWI3MGI5Yjk5M2JjMzQzNDY2Yzk4NGVmNg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-03-28T22:35:46Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-03-28T22:35:46Z"}, "message": "parse-scan.y (pop_class_context): Reset `inner_qualifier_length' when negative *before* using it as an array index.\n\n2000-03-28  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse-scan.y (pop_class_context): Reset `inner_qualifier_length'\n\twhen negative *before* using it as an array index.\n\t* ChangeLog: Fixed typo.\n\n(Fixes the following bogus patch:\n http://gcc.gnu.org/ml/gcc-patches/2000-03/msg00937.html)\n\nFrom-SVN: r32793", "tree": {"sha": "510a217cdc386c0605818d621c312d7dcb7bbffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/510a217cdc386c0605818d621c312d7dcb7bbffe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acbedd7cc0bdf155b70b9b993bc343466c984ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbedd7cc0bdf155b70b9b993bc343466c984ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acbedd7cc0bdf155b70b9b993bc343466c984ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbedd7cc0bdf155b70b9b993bc343466c984ef6/comments", "author": null, "committer": null, "parents": [{"sha": "29a72a4f09d8606f1414e5380c5eeb2ad5fc6737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a72a4f09d8606f1414e5380c5eeb2ad5fc6737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a72a4f09d8606f1414e5380c5eeb2ad5fc6737"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "0ab7edbc26e098f2670916d1f4f560d7ff9539e2", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbedd7cc0bdf155b70b9b993bc343466c984ef6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbedd7cc0bdf155b70b9b993bc343466c984ef6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=acbedd7cc0bdf155b70b9b993bc343466c984ef6", "patch": "@@ -1,3 +1,9 @@\n+2000-03-28  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse-scan.y (pop_class_context): Reset `inner_qualifier_length'\n+\twhen negative *before* using it as an array index.\n+\t* ChangeLog: Fixed typo.\n+\n 2000-03-28  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse-scan.y (pop_class_context): Reset `inner_qualifier_length'\n@@ -6,7 +12,7 @@\n 2000-03-27  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* jcf-parse.c (get_constant): Properly cast `num' during the\n-\tinvocation of `add_double call'.\n+\tinvocation of `add_double'.\n \t* jcf-write.c (push_long_const): Properly cast `lo' before\n \tcomparing it to short bounds.\n \t* parse-scan.y (interface_declaration:): Rule re-arrange so that"}, {"sha": "649c18160d71997dcf0e80505f5e96194358d16d", "filename": "gcc/java/parse-scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbedd7cc0bdf155b70b9b993bc343466c984ef6/gcc%2Fjava%2Fparse-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbedd7cc0bdf155b70b9b993bc343466c984ef6/gcc%2Fjava%2Fparse-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.c?ref=acbedd7cc0bdf155b70b9b993bc343466c984ef6", "patch": "@@ -2495,9 +2495,9 @@ pop_class_context ()\n         && inner_qualifier [inner_qualifier_length-1] != '$')\n     ;\n   inner_qualifier = xrealloc (inner_qualifier, inner_qualifier_length+1);\n-  inner_qualifier [inner_qualifier_length] = '\\0';\n   if (inner_qualifier_length == -1)\n     inner_qualifier_length = 0;\n+  inner_qualifier [inner_qualifier_length] = '\\0';\n }\n \n /* Actions defined here */"}, {"sha": "f4d10b840e80014d00b22e7b0b35f3de77927c55", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbedd7cc0bdf155b70b9b993bc343466c984ef6/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbedd7cc0bdf155b70b9b993bc343466c984ef6/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=acbedd7cc0bdf155b70b9b993bc343466c984ef6", "patch": "@@ -1144,9 +1144,9 @@ pop_class_context ()\n         && inner_qualifier [inner_qualifier_length-1] != '$')\n     ;\n   inner_qualifier = xrealloc (inner_qualifier, inner_qualifier_length+1);\n-  inner_qualifier [inner_qualifier_length] = '\\0';\n   if (inner_qualifier_length == -1)\n     inner_qualifier_length = 0;\n+  inner_qualifier [inner_qualifier_length] = '\\0';\n }\n \n /* Actions defined here */"}]}