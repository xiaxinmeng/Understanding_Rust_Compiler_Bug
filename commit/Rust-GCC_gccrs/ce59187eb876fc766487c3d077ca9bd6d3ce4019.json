{"sha": "ce59187eb876fc766487c3d077ca9bd6d3ce4019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1OTE4N2ViODc2ZmM3NjY0ODdjM2QwNzdjYTliZDZkM2NlNDAxOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-11-19T20:25:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-11-19T20:25:49Z"}, "message": "config-ml.in: Add Go support...\n\n\t* config-ml.in: Add Go support: treat GOC and GOCFLAGS like other\n\tcompiler/flag environment variables.\n\nFrom-SVN: r166956", "tree": {"sha": "39621bc4f436442a12dbac64b0591639c2f2dbcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39621bc4f436442a12dbac64b0591639c2f2dbcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce59187eb876fc766487c3d077ca9bd6d3ce4019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce59187eb876fc766487c3d077ca9bd6d3ce4019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce59187eb876fc766487c3d077ca9bd6d3ce4019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce59187eb876fc766487c3d077ca9bd6d3ce4019/comments", "author": null, "committer": null, "parents": [{"sha": "535bd17c2f200547ed8b4c8a243216f666919d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/535bd17c2f200547ed8b4c8a243216f666919d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/535bd17c2f200547ed8b4c8a243216f666919d20"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "ba1855b4f6537f46bfbf796bb29467af28b703c2", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce59187eb876fc766487c3d077ca9bd6d3ce4019/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce59187eb876fc766487c3d077ca9bd6d3ce4019/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=ce59187eb876fc766487c3d077ca9bd6d3ce4019", "patch": "@@ -1,3 +1,8 @@\n+2010-11-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* config-ml.in: Add Go support: treat GOC and GOCFLAGS like other\n+\tcompiler/flag environment variables.\n+\n 2010-11-18  Ian Lance Taylor  <iant@google.com>\n \n \t* configure.ac: Check for lang_requires_boot_languages in"}, {"sha": "2dd0d5181f2c8cc5f64a0a57944482a0b3c24d0d", "filename": "config-ml.in", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce59187eb876fc766487c3d077ca9bd6d3ce4019/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce59187eb876fc766487c3d077ca9bd6d3ce4019/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=ce59187eb876fc766487c3d077ca9bd6d3ce4019", "patch": "@@ -2,7 +2,7 @@\n # wanting multilib support.\n #\n # Copyright (C) 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-# 2005, 2006, 2007  Free Software Foundation, Inc.\n+# 2005, 2006, 2007, 2008, 2010  Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -517,6 +517,7 @@ multi-do:\n \t\t\t\tprefix=\"$(prefix)\" \\\n \t\t\t\texec_prefix=\"$(exec_prefix)\" \\\n \t\t\t\tGCJFLAGS=\"$(GCJFLAGS) $${flags}\" \\\n+\t\t\t\tGOCFLAGS=\"$(GOCFLAGS) $${flags}\" \\\n \t\t\t\tCXXFLAGS=\"$(CXXFLAGS) $${flags}\" \\\n \t\t\t\tLIBCFLAGS=\"$(LIBCFLAGS) $${flags}\" \\\n \t\t\t\tLIBCXXFLAGS=\"$(LIBCXXFLAGS) $${flags}\" \\\n@@ -750,14 +751,15 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n         break\n       fi\n     done\n-    ml_config_env='CC=\"${CC_}$flags\" CXX=\"${CXX_}$flags\" F77=\"${F77_}$flags\" GCJ=\"${GCJ_}$flags\" GFORTRAN=\"${GFORTRAN_}$flags\"'\n+    ml_config_env='CC=\"${CC_}$flags\" CXX=\"${CXX_}$flags\" F77=\"${F77_}$flags\" GCJ=\"${GCJ_}$flags\" GFORTRAN=\"${GFORTRAN_}$flags\" GOC=\"${GOC_}$flags\"'\n \n     if [ \"${with_target_subdir}\" = \".\" ]; then\n \tCC_=$CC' '\n \tCXX_=$CXX' '\n \tF77_=$F77' '\n \tGCJ_=$GCJ' '\n \tGFORTRAN_=$GFORTRAN' '\n+\tGOC_=$GOC' '\n     else\n \t# Create a regular expression that matches any string as long\n \t# as ML_POPDIR.\n@@ -822,6 +824,18 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n \t  esac\n \tdone\n \n+\tGOC_=\n+\tfor arg in ${GOC}; do\n+\t  case $arg in\n+\t  -[BIL]\"${ML_POPDIR}\"/*)\n+\t    GOC_=\"${GOC_}\"`echo \"X${arg}\" | sed -n \"s/X\\\\(-[BIL]${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X-[BIL]${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"`' ' ;;\n+\t  \"${ML_POPDIR}\"/*)\n+\t    GOC_=\"${GOC_}\"`echo \"X${arg}\" | sed -n \"s/X\\\\(${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"`' ' ;;\n+\t  *)\n+\t    GOC_=\"${GOC_}${arg} \" ;;\n+\t  esac\n+\tdone\n+\n \tif test \"x${LD_LIBRARY_PATH+set}\" = xset; then\n \t  LD_LIBRARY_PATH_=\n \t  for arg in `echo \"$LD_LIBRARY_PATH\" | tr ':' ' '`; do"}]}