{"sha": "61630b27687dcd30748a594f90cd25035347959c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2MzBiMjc2ODdkY2QzMDc0OGE1OTRmOTBjZDI1MDM1MzQ3OTU5Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-15T20:07:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-15T20:07:39Z"}, "message": "re PR debug/46387 (ICE in add_stores, at var-tracking.c:5415)\n\n\tPR debug/46387\n\t* rtl.h (vt_equate_reg_base_value): New prototype.\n\t* alias.c (vt_equate_reg_base_value): New function.\n\t* var-tracking.c (vt_init_cfa_base): Use it.\n\n\t* gcc.dg/pr46387.c: New test.\n\nFrom-SVN: r166766", "tree": {"sha": "379244decef3dcbcca0f376008cd4b43301437e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/379244decef3dcbcca0f376008cd4b43301437e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61630b27687dcd30748a594f90cd25035347959c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61630b27687dcd30748a594f90cd25035347959c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61630b27687dcd30748a594f90cd25035347959c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61630b27687dcd30748a594f90cd25035347959c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3abe8cabdcb83ad745fe569f76887cd0920e5998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abe8cabdcb83ad745fe569f76887cd0920e5998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3abe8cabdcb83ad745fe569f76887cd0920e5998"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "fc7c8d10acd3104b965d887566b1ec4c01d656bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61630b27687dcd30748a594f90cd25035347959c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61630b27687dcd30748a594f90cd25035347959c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61630b27687dcd30748a594f90cd25035347959c", "patch": "@@ -1,3 +1,10 @@\n+2010-11-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46387\n+\t* rtl.h (vt_equate_reg_base_value): New prototype.\n+\t* alias.c (vt_equate_reg_base_value): New function.\n+\t* var-tracking.c (vt_init_cfa_base): Use it.\n+\n 2010-11-15  Jan Hubicka  <jh@suse.cz>\n \t    Diego Novillo  <dnovillo@google.com>\n "}, {"sha": "2a877979417ac89f0491ff1b31added425636eef", "filename": "gcc/alias.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61630b27687dcd30748a594f90cd25035347959c/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61630b27687dcd30748a594f90cd25035347959c/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=61630b27687dcd30748a594f90cd25035347959c", "patch": "@@ -2906,6 +2906,15 @@ init_alias_analysis (void)\n   timevar_pop (TV_ALIAS_ANALYSIS);\n }\n \n+/* Equate REG_BASE_VALUE (reg1) to REG_BASE_VALUE (reg2).\n+   Special API for var-tracking pass purposes.  */\n+\n+void\n+vt_equate_reg_base_value (const_rtx reg1, const_rtx reg2)\n+{\n+  VEC_replace (rtx, reg_base_value, REGNO (reg1), REG_BASE_VALUE (reg2));\n+}\n+\n void\n end_alias_analysis (void)\n {"}, {"sha": "66751a6785478276fbe15567f1e97503c4a1e8d8", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61630b27687dcd30748a594f90cd25035347959c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61630b27687dcd30748a594f90cd25035347959c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=61630b27687dcd30748a594f90cd25035347959c", "patch": "@@ -2503,6 +2503,7 @@ extern int may_alias_p (const_rtx, const_rtx);\n extern void init_alias_target (void);\n extern void init_alias_analysis (void);\n extern void end_alias_analysis (void);\n+extern void vt_equate_reg_base_value (const_rtx, const_rtx);\n extern bool memory_modified_in_insn_p (const_rtx, const_rtx);\n extern rtx find_base_term (rtx);\n extern rtx gen_hard_reg_clobber (enum machine_mode, unsigned int);"}, {"sha": "5b8a56e08b0b2ad71818785981d59da0cf588da2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61630b27687dcd30748a594f90cd25035347959c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61630b27687dcd30748a594f90cd25035347959c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61630b27687dcd30748a594f90cd25035347959c", "patch": "@@ -1,3 +1,8 @@\n+2010-11-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46387\n+\t* gcc.dg/pr46387.c: New test.\n+\n 2010-11-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/dotsyntax-16.m: New."}, {"sha": "e06bd3b106581927ec4c7eb69b060c45d82a6bcf", "filename": "gcc/testsuite/gcc.dg/pr46387.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61630b27687dcd30748a594f90cd25035347959c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46387.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61630b27687dcd30748a594f90cd25035347959c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46387.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46387.c?ref=61630b27687dcd30748a594f90cd25035347959c", "patch": "@@ -0,0 +1,32 @@\n+/* PR debug/46387 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O2\" } */\n+\n+struct S { double x; double y; short z; };\n+int a = 0, b = 0, c;\n+void bar (int, int, int);\n+void baz (int *, int *, int *);\n+\n+void\n+foo (struct S *v)\n+{\n+  int x, y, z;\n+  if (!a && b != 0)\n+    return;\n+  if (v->z)\n+    baz (&x, &y, &z);\n+  else\n+    {\n+      x = v->x;\n+      y = v->y;\n+    }\n+  x = x / (5 + 1);\n+  y = y / (5 + 1);\n+  if (x < 0)\n+    x = 0;\n+  if (x > c - 1)\n+    x = c - 1;\n+  if (b == 0)\n+    bar (x, y, 1);\n+  return;\n+}"}, {"sha": "85847f0263f3def4f60cdb5e87919aaf0eb01151", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61630b27687dcd30748a594f90cd25035347959c/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61630b27687dcd30748a594f90cd25035347959c/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=61630b27687dcd30748a594f90cd25035347959c", "patch": "@@ -8230,6 +8230,11 @@ vt_init_cfa_base (void)\n   if (!MAY_HAVE_DEBUG_INSNS)\n     return;\n \n+  /* Tell alias analysis that cfa_base_rtx should share\n+     find_base_term value with stack pointer or hard frame pointer.  */\n+  vt_equate_reg_base_value (cfa_base_rtx,\n+\t\t\t    frame_pointer_needed\n+\t\t\t    ? hard_frame_pointer_rtx : stack_pointer_rtx);\n   val = cselib_lookup_from_insn (cfa_base_rtx, GET_MODE (cfa_base_rtx), 1,\n \t\t\t\t get_insns ());\n   preserve_value (val);"}]}