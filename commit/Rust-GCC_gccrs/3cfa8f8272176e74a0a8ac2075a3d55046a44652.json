{"sha": "3cfa8f8272176e74a0a8ac2075a3d55046a44652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NmYThmODI3MjE3NmU3NGEwYThhYzIwNzVhM2Q1NTA0NmE0NDY1Mg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-07T17:17:22Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-07T17:17:22Z"}, "message": "In gcc/cp/: 2010-10-07 Nicola Pero <nicola@nicola.brainstorm.co.uk>\n\nIn gcc/cp/:\n2010-10-07  Nicola Pero  <nicola@nicola.brainstorm.co.uk>\n\n        Merge from apple/trunk branch on FSF servers.\n\n        2006-04-26  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4508851\n        * parser.c (cp_parser_objc_interstitial_code): Recognize\n        and parse RID_NAMESPACE keyword.\n\nIn gcc/testsuite/:\n2010-10-07  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.\n\n        2006-04-26  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4508851\n        * obj-c++.dg/method-namespace-1.mm: New.\n\nFrom-SVN: r165125", "tree": {"sha": "26fcd9635e015e16a3b1d3002eab69dbff7c1483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26fcd9635e015e16a3b1d3002eab69dbff7c1483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cfa8f8272176e74a0a8ac2075a3d55046a44652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cfa8f8272176e74a0a8ac2075a3d55046a44652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cfa8f8272176e74a0a8ac2075a3d55046a44652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cfa8f8272176e74a0a8ac2075a3d55046a44652/comments", "author": null, "committer": null, "parents": [{"sha": "fc37536b9da32b31dbe2ba094ccfb615e1fc380a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc37536b9da32b31dbe2ba094ccfb615e1fc380a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc37536b9da32b31dbe2ba094ccfb615e1fc380a"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "7e6bdda9f4281bb0414e3313405ffa60d0953676", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3cfa8f8272176e74a0a8ac2075a3d55046a44652", "patch": "@@ -1,6 +1,16 @@\n+2010-10-07  Nicola Pero  <nicola@nicola.brainstorm.co.uk>\n+\n+\tMerge from apple/trunk branch on FSF servers.\n+\n+\t2006-04-26  Fariborz Jahanian <fjahanian@apple.com>\n+\n+        Radar 4508851\n+\t* parser.c (cp_parser_objc_interstitial_code): Recognize\n+\tand parse RID_NAMESPACE keyword.\n+\n 2010-10-07  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\tparser.c (cp_parser_objc_method_tail_params_opt): Peek new token after\n+\t* parser.c (cp_parser_objc_method_tail_params_opt): Peek new token after\n \tfinding ellipsis, before checking for attributes.\n \n 2010-10-06  Nicola Pero  <nicola.pero@meta-innovation.com>"}, {"sha": "f5fa793da4a9877b2d9a02d4d770bddd394dfe3b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3cfa8f8272176e74a0a8ac2075a3d55046a44652", "patch": "@@ -21635,6 +21635,8 @@ cp_parser_objc_interstitial_code (cp_parser* parser)\n       cp_lexer_consume_token (parser->lexer);\n       objc_set_method_opt (false);\n     }\n+  else if (token->keyword == RID_NAMESPACE)\n+    cp_parser_namespace_definition (parser);\n   /* Other stray characters must generate errors.  */\n   else if (token->type == CPP_OPEN_BRACE || token->type == CPP_CLOSE_BRACE)\n     {"}, {"sha": "c8f841ea490674b37433dea5cc46db20938b49a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cfa8f8272176e74a0a8ac2075a3d55046a44652", "patch": "@@ -1,3 +1,12 @@\n+2010-10-07  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers.\n+\t\n+\t2006-04-26  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4508851\n+\t* obj-c++.dg/method-namespace-1.mm: New.\n+\n 2010-10-07  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/tree-ssa/sra-11.c: New test."}, {"sha": "6095f572ccacdf4dfe25cc22fd86a718ebc25a76", "filename": "gcc/testsuite/obj-c++.dg/method-namespace-1.mm", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-namespace-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cfa8f8272176e74a0a8ac2075a3d55046a44652/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-namespace-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-namespace-1.mm?ref=3cfa8f8272176e74a0a8ac2075a3d55046a44652", "patch": "@@ -0,0 +1,29 @@\n+/* Test for usage of namespace inside @implementation. */\n+/* { dg-do compile } */\n+@interface MyDocument\n+@end\n+\n+@implementation MyDocument\n+\n+// This deprecated usage works\n+static void foo1() { }\n+\n+// This preferred usage does _not_ work\n+namespace\n+    {\n+    void foo2() { }\n+    }\n+\n+namespace STD \n+    {\n+\tvoid foo3 () {}\n+    }\n+\n+using namespace STD;\n+\n+- (void) GARF {\n+  foo2();\n+  foo3();\n+}\n+\n+@end"}]}