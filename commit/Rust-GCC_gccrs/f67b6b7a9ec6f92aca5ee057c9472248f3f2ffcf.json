{"sha": "f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY3YjZiN2E5ZWM2ZjkyYWNhNWVlMDU3Yzk0NzIyNDhmM2YyZmZjZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-10-01T09:22:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-10-01T09:22:49Z"}, "message": "sstream.tcc (seekpos): Minor rearrangement of two conditionals consistently with seekoff.\n\n2004-10-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/sstream.tcc (seekpos): Minor rearrangement of two\n\tconditionals consistently with seekoff.\n\t* include/std/std_sstream.h (setbuf): Avoid a string temporary.\n\t(_M_sync): Simplify a bit, clean-up comment.\n\nFrom-SVN: r88389", "tree": {"sha": "1293525332ce28fec1f31439a5df03c35b1520e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1293525332ce28fec1f31439a5df03c35b1520e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/comments", "author": null, "committer": null, "parents": [{"sha": "e6845c238200c37250282413728488871a8ffea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6845c238200c37250282413728488871a8ffea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6845c238200c37250282413728488871a8ffea5"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "88bd3a757680a64a09087389deaa195cbce99b1d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "patch": "@@ -1,3 +1,10 @@\n+2004-10-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/sstream.tcc (seekpos): Minor rearrangement of two\n+\tconditionals consistently with seekoff.\n+\t* include/std/std_sstream.h (setbuf): Avoid a string temporary.\n+\t(_M_sync): Simplify a bit, clean-up comment.\n+\n 2004-09-30  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/10975 (DR 453)"}, {"sha": "19a24bf0f189b938d4fb5cdc8e249a66e6568917", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "patch": "@@ -187,14 +187,14 @@ namespace std\n       const bool __testout = (ios_base::out & this->_M_mode & __mode) != 0;\n \n       const char_type* __beg = __testin ? this->eback() : this->pbase();\n-      if (__beg)\n+      if (__beg && (__testin || __testout))\n \t{\n \t  _M_update_egptr();\n \n-\t  off_type __pos(__sp);\n+\t  const off_type __pos(__sp);\n \t  const bool __testpos = 0 <= __pos\n \t                         && __pos <=  this->egptr() - __beg;\n-\t  if ((__testin || __testout) && __testpos)\n+\t  if (__testpos)\n \t    {\n \t      if (__testin)\n \t\tthis->gbump((__beg + __pos) - this->gptr());"}, {"sha": "3420999164c09066eee0a6c14efda28c0e95a055", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "patch": "@@ -219,7 +219,7 @@ namespace std\n \t    // things will quickly blow up.\n \t    \n \t    // Step 1: Destroy the current internal array.\n-\t    _M_string = __string_type(__s, __n);\n+\t    _M_string.assign(__s, __n);\n \t    \n \t    // Step 2: Use the external array.\n \t    _M_sync(__s, 0, 0);\n@@ -253,20 +253,19 @@ namespace std\n       {\n \tconst bool __testin = this->_M_mode & ios_base::in;\n \tconst bool __testout = this->_M_mode & ios_base::out;\n-\tconst __size_type __len = _M_string.size();\n+\tchar_type* __end = __base + _M_string.size();\n \n \tif (__testin)\n-\t  this->setg(__base, __base + __i, __base + __len);\n+\t  this->setg(__base, __base + __i, __end);\n \tif (__testout)\n \t  {\n \t    this->setp(__base, __base + _M_string.capacity());\n \t    this->pbump(__o);\n-\t    // We need a pointer to the string end anyway, even when\n-\t    // !__testin: in that case, however, for the correct\n-\t    // functioning of the streambuf inlines all the get area\n-\t    // pointers must be identical.\n+\t    // egptr() always tracks the string end. When !__testin,\n+\t    // for the correct functioning of the streambuf inlines\n+\t    // the other get area pointers are identical.\n \t    if (!__testin)\n-\t      this->setg(__base + __len, __base + __len, __base + __len);\n+\t      this->setg(__end, __end, __end);\n \t  }\n       }\n "}]}