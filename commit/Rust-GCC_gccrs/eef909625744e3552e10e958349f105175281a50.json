{"sha": "eef909625744e3552e10e958349f105175281a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmOTA5NjI1NzQ0ZTM1NTJlMTBlOTU4MzQ5ZjEwNTE3NTI4MWE1MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-10-11T08:42:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-10-11T08:42:25Z"}, "message": "i386.md (movsi_1, [...]): Use mmxadd type for setting MMX register to 0 rather than mmx.\n\n\t* config/i386/i386.md (movsi_1, movdi_1_rex64): Use mmxadd type\n\tfor setting MMX register to 0 rather than mmx.\n\n\t* g++.dg/opt/mmx2.C: New test.\n\nFrom-SVN: r105230", "tree": {"sha": "dee967ed641d951f07d1277c39fe4a56af98fc88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dee967ed641d951f07d1277c39fe4a56af98fc88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eef909625744e3552e10e958349f105175281a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef909625744e3552e10e958349f105175281a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef909625744e3552e10e958349f105175281a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef909625744e3552e10e958349f105175281a50/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bff36d30616df91fbfb4d9c427721d52c0a1527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bff36d30616df91fbfb4d9c427721d52c0a1527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bff36d30616df91fbfb4d9c427721d52c0a1527"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "6b1f9c57d59650b5c45338cc26123ffb4abff505", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef909625744e3552e10e958349f105175281a50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef909625744e3552e10e958349f105175281a50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eef909625744e3552e10e958349f105175281a50", "patch": "@@ -1,3 +1,8 @@\n+2005-10-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (movsi_1, movdi_1_rex64): Use mmxadd type\n+\tfor setting MMX register to 0 rather than mmx.\n+\n 2005-10-10  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/12098"}, {"sha": "849920e66d4e0dc1f1906e3fa7033fe5e2252887", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef909625744e3552e10e958349f105175281a50/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef909625744e3552e10e958349f105175281a50/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=eef909625744e3552e10e958349f105175281a50", "patch": "@@ -1193,7 +1193,7 @@\n }\n   [(set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"2\")\n-\t      (const_string \"mmx\")\n+\t      (const_string \"mmxadd\")\n \t    (eq_attr \"alternative\" \"3,4,5\")\n \t      (const_string \"mmxmov\")\n \t    (eq_attr \"alternative\" \"6\")\n@@ -2007,7 +2007,7 @@\n }\n   [(set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"5\")\n-\t      (const_string \"mmx\")\n+\t      (const_string \"mmxadd\")\n \t    (eq_attr \"alternative\" \"6,7,8\")\n \t      (const_string \"mmxmov\")\n \t    (eq_attr \"alternative\" \"9\")"}, {"sha": "8ebe56ea2356d7fe213c0dceb14b7673cb52f694", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef909625744e3552e10e958349f105175281a50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef909625744e3552e10e958349f105175281a50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eef909625744e3552e10e958349f105175281a50", "patch": "@@ -1,3 +1,7 @@\n+2005-10-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/opt/mmx2.C: New test.\n+\n 2005-10-10  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/24277"}, {"sha": "21dcdda7fc80e68683b64d34652f5abdf1dead47", "filename": "gcc/testsuite/g++.dg/opt/mmx2.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef909625744e3552e10e958349f105175281a50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmmx2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef909625744e3552e10e958349f105175281a50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmmx2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmmx2.C?ref=eef909625744e3552e10e958349f105175281a50", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do link { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-O2 -mmmx\" }\n+\n+#include <mmintrin.h>\n+\n+static union u { __m64 m; long long l; } u;\n+extern \"C\" void abort (void);\n+\n+__attribute__((noinline))\n+void bar (__m64 x)\n+{\n+  u.m = x;\n+}\n+\n+int\n+main ()\n+{\n+  bar (_mm_set_pi32 (0x000000FF,0xFFFF00FF));\n+  _mm_empty ();\n+  if (u.l != 0xffffff00ffLL)\n+    abort ();\n+  return 0;\n+}"}]}