{"sha": "cb64953075c20b6e004949206c3d7cdd6795d773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2NDk1MzA3NWMyMGI2ZTAwNDk0OTIwNmMzZDdjZGQ2Nzk1ZDc3Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T13:12:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T13:12:44Z"}, "message": "(output_asm_name): New function, using code taken from output_asm_insn.\n\n(output_asm_insn): If flag_print_asm_name, print the comment after the\nfirst assembler instruction even in multi-instruction templates.\n\nFrom-SVN: r9030", "tree": {"sha": "907ffa0caa217e06153a50f14104f9e99df06af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/907ffa0caa217e06153a50f14104f9e99df06af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb64953075c20b6e004949206c3d7cdd6795d773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb64953075c20b6e004949206c3d7cdd6795d773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb64953075c20b6e004949206c3d7cdd6795d773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb64953075c20b6e004949206c3d7cdd6795d773/comments", "author": null, "committer": null, "parents": [{"sha": "57e1b65caaf247d5ac9022ff20586c7d43a1931c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e1b65caaf247d5ac9022ff20586c7d43a1931c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e1b65caaf247d5ac9022ff20586c7d43a1931c"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "237cf4916080ddeac2641ad18ae9f9361f00a06b", "filename": "gcc/final.c", "status": "modified", "additions": 27, "deletions": 19, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb64953075c20b6e004949206c3d7cdd6795d773/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb64953075c20b6e004949206c3d7cdd6795d773/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=cb64953075c20b6e004949206c3d7cdd6795d773", "patch": "@@ -276,6 +276,7 @@ static int add_bb_string\tPROTO((char *, int));\n static void output_source_line\tPROTO((FILE *, rtx));\n static rtx walk_alter_subreg\tPROTO((rtx));\n static int alter_cond\t\tPROTO((rtx));\n+static void output_asm_name\tPROTO((void));\n static void output_operand\tPROTO((rtx, int));\n static void leaf_renumber_regs\tPROTO((rtx));\n \n@@ -2313,6 +2314,28 @@ output_operand_lossage (str)\n       and print a constant expression for minus the value\n       of the operand, with no other punctuation.  */\n \n+static void\n+output_asm_name ()\n+{\n+  if (flag_print_asm_name)\n+    {\n+      /* Annotate the assembly with a comment describing the pattern and\n+\t alternative used.  */\n+      if (debug_insn)\n+\t{\n+\t  register int num = INSN_CODE (debug_insn);\n+\t  fprintf (asm_out_file, \" %s %d %s\", \n+\t\t   ASM_COMMENT_START, INSN_UID (debug_insn), insn_name[num]);\n+\t  if (insn_n_alternatives[num] > 1)\n+\t    fprintf (asm_out_file, \"/%d\", which_alternative + 1);\n+\n+\t  /* Clear this so only the first assembler insn\n+\t     of any rtl insn will get the special comment for -dp.  */\n+\t  debug_insn = 0;\n+\t}\n+    }\n+}\n+\n void\n output_asm_insn (template, operands)\n      char *template;\n@@ -2336,17 +2359,18 @@ output_asm_insn (template, operands)\n   while (c = *p++)\n     switch (c)\n       {\n-#ifdef ASM_OUTPUT_OPCODE\n       case '\\n':\n+\toutput_asm_name ();\n \tputc (c, asm_out_file);\n+#ifdef ASM_OUTPUT_OPCODE\n \twhile ((c = *p) == '\\t')\n \t  {\n \t    putc (c, asm_out_file);\n \t    p++;\n \t  }\n \tASM_OUTPUT_OPCODE (asm_out_file, p);\n-\tbreak;\n #endif\n+\tbreak;\n \n #ifdef ASSEMBLER_DIALECT\n       case '{':\n@@ -2459,23 +2483,7 @@ output_asm_insn (template, operands)\n \tputc (c, asm_out_file);\n       }\n \n-  if (flag_print_asm_name)\n-    {\n-      /* Annotate the assembly with a comment describing the pattern and\n-\t alternative used.  */\n-      if (debug_insn)\n-\t{\n-\t  register int num = INSN_CODE (debug_insn);\n-\t  fprintf (asm_out_file, \" %s %d %s\", \n-\t\t   ASM_COMMENT_START, INSN_UID (debug_insn), insn_name[num]);\n-\t  if (insn_n_alternatives[num] > 1)\n-\t    fprintf (asm_out_file, \"/%d\", which_alternative + 1);\n-\n-\t  /* Clear this so only the first assembler insn\n-\t     of any rtl insn will get the special comment for -dp.  */\n-\t  debug_insn = 0;\n-\t}\n-    }\n+  output_asm_name ();\n \n   putc ('\\n', asm_out_file);\n }"}]}