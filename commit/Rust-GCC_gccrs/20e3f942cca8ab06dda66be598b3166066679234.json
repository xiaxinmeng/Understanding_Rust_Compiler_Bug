{"sha": "20e3f942cca8ab06dda66be598b3166066679234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBlM2Y5NDJjY2E4YWIwNmRkYTY2YmU1OThiMzE2NjA2NjY3OTIzNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-07-29T15:19:22Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-07-29T15:19:22Z"}, "message": "Replace strtok with strtoken\n\n\tPR bootstrap/61914\n\t* gengtype.c (strtoken): New function.\n\t(create_user_defined_type): Replace strtok with strtoken.\n\nFrom-SVN: r213213", "tree": {"sha": "d8cfda64985649cf37e145db703ca2375d6d98bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8cfda64985649cf37e145db703ca2375d6d98bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20e3f942cca8ab06dda66be598b3166066679234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e3f942cca8ab06dda66be598b3166066679234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20e3f942cca8ab06dda66be598b3166066679234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e3f942cca8ab06dda66be598b3166066679234/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8e6830b3446b34cb3aee27d94bca490546c7d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e6830b3446b34cb3aee27d94bca490546c7d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8e6830b3446b34cb3aee27d94bca490546c7d07"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "891fc92e9b830a2ed3ad3de57013feabbb6879d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20e3f942cca8ab06dda66be598b3166066679234/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20e3f942cca8ab06dda66be598b3166066679234/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20e3f942cca8ab06dda66be598b3166066679234", "patch": "@@ -1,3 +1,9 @@\n+2014-07-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/61914\n+\t* gengtype.c (strtoken): New function.\n+\t(create_user_defined_type): Replace strtok with strtoken.\n+\n 2014-07-29  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcov-io.c (gcov_var): Make hidden."}, {"sha": "e66941b9602a2bea3e13d7dd868e87dbe1681fbc", "filename": "gcc/gengtype.c", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20e3f942cca8ab06dda66be598b3166066679234/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20e3f942cca8ab06dda66be598b3166066679234/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=20e3f942cca8ab06dda66be598b3166066679234", "patch": "@@ -569,6 +569,40 @@ do_scalar_typedef (const char *s, struct fileloc *pos)\n   do_typedef (s, &scalar_nonchar, pos);\n }\n \n+/* Similar to strtok_r.  */\n+\n+static char *\n+strtoken (char *str, const char *delim, char **next)\n+{\n+  char *p;\n+\n+  if (str == NULL)\n+    str = *next;\n+\n+  /* Skip the leading delimiters.  */\n+  str += strspn (str, delim);\n+  if (*str == '\\0')\n+    /* This is an empty token.  */\n+    return NULL;\n+\n+  /* The current token.  */\n+  p = str;\n+\n+  /* Find the next delimiter.  */\n+  str += strcspn (str, delim);\n+  if (*str == '\\0')\n+    /* This is the last token.  */\n+    *next = str;\n+  else\n+    {\n+      /* Terminate the current token.  */\n+      *str = '\\0';\n+      /* Advance to the next token.  */\n+      *next = str + 1;\n+    }\n+\n+  return p;\n+}\n \n /* Define TYPE_NAME to be a user defined type at location POS.  */\n \n@@ -599,7 +633,8 @@ create_user_defined_type (const char *type_name, struct fileloc *pos)\n \t comma-separated list of strings, implicitly assumed to\n \t be type names, potentially with \"*\" characters.  */\n       char *arg = open_bracket + 1;\n-      char *type_id = strtok (arg, \",>\");\n+      char *next;\n+      char *type_id = strtoken (arg, \",>\", &next);\n       pair_p fields = 0;\n       while (type_id)\n \t{\n@@ -628,7 +663,7 @@ create_user_defined_type (const char *type_name, struct fileloc *pos)\n \t    arg_type = resolve_typedef (field_name, pos);\n \n \t  fields = create_field_at (fields, arg_type, field_name, 0, pos);\n-\t  type_id = strtok (0, \",>\");\n+\t  type_id = strtoken (0, \",>\", &next);\n \t}\n \n       /* Associate the field list to TY.  */"}]}