{"sha": "d66a97e281d541d7595fa72c9ac7e3484c8abc3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2YTk3ZTI4MWQ1NDFkNzU5NWZhNzJjOWFjN2UzNDg0YzhhYmMzZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2009-07-01T22:34:26Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2009-07-01T22:34:26Z"}, "message": "Fix PR 40558, undo part of June 25th patch\n\nCo-Authored-By: Pat Haugen <pthaugen@us.ibm.com>\nCo-Authored-By: Revital Eres <eres@il.ibm.com>\n\nFrom-SVN: r149155", "tree": {"sha": "5f800c31ae9bab7e43753eabb033f99ec2ca5cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f800c31ae9bab7e43753eabb033f99ec2ca5cb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d66a97e281d541d7595fa72c9ac7e3484c8abc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66a97e281d541d7595fa72c9ac7e3484c8abc3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66a97e281d541d7595fa72c9ac7e3484c8abc3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66a97e281d541d7595fa72c9ac7e3484c8abc3e/comments", "author": null, "committer": null, "parents": [{"sha": "479b101323d7601d991a72ba79fc4f3a7dccaebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479b101323d7601d991a72ba79fc4f3a7dccaebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479b101323d7601d991a72ba79fc4f3a7dccaebc"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "456acee86deb48b32aacf96de725eb2c72680d34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66a97e281d541d7595fa72c9ac7e3484c8abc3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66a97e281d541d7595fa72c9ac7e3484c8abc3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d66a97e281d541d7595fa72c9ac7e3484c8abc3e", "patch": "@@ -1,3 +1,9 @@\n+2009-07-01  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR bootstrap/40558\n+\t* config/rs6000/rs6000.c (print_operand): Undo change that breaks\n+\tdarwin9 for printing reg addresses with %y.\n+\n 2009-07-01  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* combine.c (force_to_mode): Handle TRUNCATE.  Factor out\n@@ -735,6 +741,19 @@\n \t    Pat Haugen  <pthaugen@us.ibm.com>\n \t    Revital Eres <ERES@il.ibm.com>\n \n+\t* config/rs6000/rs6000.c (print_operand): Correct lossage message\n+\tfor %c error.  Add %x support to print VSX registers as a unified\n+\tregister set, instead of separate float and altivec registers.\n+\tSwitch to use VECTOR_MEM_ALTIVEC_P instead of TARGET_ALTIVEC for\n+\t%y case, and add support for VSX pre-modify addresses.\n+\t(output_toc): Add assert for CONST containing an integer constant\n+\tin the PLUS case.\n+\t(rs6000_adjust_cost): Add POWER7 support.\n+\t(insn_must_be_first_in_group): Ditto.\n+\t(insn_must_be_last_in_group): Ditto.\n+\t(rs6000_emit_popcount): Ditto.\n+\t(rs6000_vector_mode_supported_p): Ditto.\n+\n \t* config/rs6000/rs6000-protos.h (rs6000_secondary_reload_class):\n \tChange some of the functions called by macros to being called\n \tthrough a pointer, so debug functions can be inserted if"}, {"sha": "aa97f381820680d345cfe128116c9818bc7df418", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66a97e281d541d7595fa72c9ac7e3484c8abc3e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66a97e281d541d7595fa72c9ac7e3484c8abc3e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d66a97e281d541d7595fa72c9ac7e3484c8abc3e", "patch": "@@ -13471,7 +13471,7 @@ print_operand (FILE *file, rtx x, int code)\n \t\t && GET_CODE (tmp) == PRE_MODIFY)\n \t  tmp = XEXP (tmp, 1);\n \tif (GET_CODE (tmp) == REG)\n-\t  fprintf (file, \"%s,%s\", reg_names[0], reg_names[REGNO (tmp)]);\n+\t  fprintf (file, \"0,%s\", reg_names[REGNO (tmp)]);\n \telse\n \t  {\n \t    if (!GET_CODE (tmp) == PLUS"}]}