{"sha": "78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhmYmU3MzFhODgyMmU4MTljNGNhMGU2ZDZmNzc3YzdhMmYzNmJhZA==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-09-02T06:26:15Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-10-14T03:47:33Z"}, "message": "PR target/96759 - Handle global variable assignment from misaligned structure/PARALLEL return values.\n\nIn g:70cdb21e579191fe9f0f1d45e328908e59c0179e, DECL/global variable has handled\nmisaligned stores, but it didn't handle PARALLEL values, and I refer the\nother part of this function, I found the PARALLEL need handled by\nemit_group_* functions, so I add a check, and using emit_group_store if\nstoring a PARALLEL value, also checked this change didn't break the\ntestcase(gcc.target/arm/unaligned-argument-3.c) added by the orginal changes.\n\nFor riscv64 target, struct S {int a; double b;} will pack into a parallel\nvalue to return and it has TImode when misaligned access is supported,\nhowever TImode required 16-byte align, but it only 8-byte align, so it go to\nthe misaligned stores handling, then it will try to generate move\ninstruction from a PARALLEL value.\n\nTested on following target without introduced new reguression:\n  - riscv32/riscv64 elf\n  - x86_64-linux\n  - arm-eabi\n\nv2 changes:\n  - Use maybe_emit_group_store instead of emit_group_store.\n  - Remove push_temp_slots/pop_temp_slots, emit_group_store only require\n    stack temp slot when dst is CONCAT or PARALLEL, however\n    maybe_emit_group_store will always use REG for dst if needed.\n\ngcc/ChangeLog:\n\n\tPR target/96759\n\t* expr.c (expand_assignment): Handle misaligned stores with PARALLEL\n\tvalue.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/96759\n\t* g++.target/riscv/pr96759.C: New.\n\t* gcc.target/riscv/pr96759.c: New.", "tree": {"sha": "b579eab21ff3ed2c539751a409949bbacca72bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b579eab21ff3ed2c539751a409949bbacca72bec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b38338228b3e90879828c0bb059603f683d98b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b38338228b3e90879828c0bb059603f683d98b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b38338228b3e90879828c0bb059603f683d98b"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "9d951e82522f58308c786ba49ef73ebf810511a6", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "patch": "@@ -5168,6 +5168,8 @@ expand_assignment (tree to, tree from, bool nontemporal)\n       rtx reg, mem;\n \n       reg = expand_expr (from, NULL_RTX, VOIDmode, EXPAND_NORMAL);\n+      /* Handle PARALLEL.  */\n+      reg = maybe_emit_group_store (reg, TREE_TYPE (from));\n       reg = force_not_mem (reg);\n       mem = expand_expr (to, NULL_RTX, VOIDmode, EXPAND_WRITE);\n       if (TREE_CODE (to) == MEM_REF && REF_REVERSE_STORAGE_ORDER (to))"}, {"sha": "673999a4baf750d319108355f98fa1351e8318ef", "filename": "gcc/testsuite/g++.target/riscv/pr96759.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Fpr96759.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Fpr96759.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Fpr96759.C?ref=78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-options \"-mno-strict-align -std=gnu++17\" } */\n+/* { dg-do compile } */\n+struct S {\n+  int a;\n+  double b;\n+};\n+S GetNumbers();\n+auto [globalC, globalD] = GetNumbers();"}, {"sha": "621c39196fca3668191b39c06a731916901b770d", "filename": "gcc/testsuite/gcc.target/riscv/pr96759.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr96759.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fbe731a8822e819c4ca0e6d6f777c7a2f36bad/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr96759.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr96759.c?ref=78fbe731a8822e819c4ca0e6d6f777c7a2f36bad", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"-mno-strict-align\" } */\n+/* { dg-do compile } */\n+\n+struct S {\n+  int a;\n+  double b;\n+};\n+struct S GetNumbers();\n+struct S g;\n+\n+void foo(){\n+  g = GetNumbers();\n+}"}]}