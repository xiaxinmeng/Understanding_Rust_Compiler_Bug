{"sha": "f5139cc523535e77d5971aff50403cb2b063e94b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUxMzljYzUyMzUzNWU3N2Q1OTcxYWZmNTA0MDNjYjJiMDYzZTk0Yg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-06-25T11:54:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-25T11:54:44Z"}, "message": "h8300.c (compute_mov_length): Adjust for the new optimization.\n\n\t* config/h8300/h8300.c (compute_mov_length): Adjust for the\n\tnew optimization.\n\t* config/h8300/h8300.md (*movsi_h8300): Optimize the load of\n\tan SImode constant whose upper and lower are the same.\n\nFrom-SVN: r68475", "tree": {"sha": "3c49c0b8a763abbd01d4777646f9461ada1231f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c49c0b8a763abbd01d4777646f9461ada1231f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5139cc523535e77d5971aff50403cb2b063e94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5139cc523535e77d5971aff50403cb2b063e94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5139cc523535e77d5971aff50403cb2b063e94b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5139cc523535e77d5971aff50403cb2b063e94b/comments", "author": null, "committer": null, "parents": [{"sha": "7099616c53df127058c1fbee5b6cbdfdfa2575dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7099616c53df127058c1fbee5b6cbdfdfa2575dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7099616c53df127058c1fbee5b6cbdfdfa2575dc"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "493e045def206c2936135f09ea2bdd0247cb9f38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5139cc523535e77d5971aff50403cb2b063e94b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5139cc523535e77d5971aff50403cb2b063e94b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5139cc523535e77d5971aff50403cb2b063e94b", "patch": "@@ -1,3 +1,10 @@\n+2003-06-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (compute_mov_length): Adjust for the\n+\tnew optimization.\n+\t* config/h8300/h8300.md (*movsi_h8300): Optimize the load of\n+\tan SImode constant whose upper and lower are the same.\n+\n Wed Jun 25 11:31:59 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* varasm.c (assemble_name): Mark needed variables even when"}, {"sha": "edb7820d128fe48c9ec69bf3aa1f74f01a89ace2", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5139cc523535e77d5971aff50403cb2b063e94b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5139cc523535e77d5971aff50403cb2b063e94b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=f5139cc523535e77d5971aff50403cb2b063e94b", "patch": "@@ -1876,6 +1876,10 @@ compute_mov_length (rtx *operands)\n \n \t\t  if ((INTVAL (src) & 0xffff) == 0)\n \t\t    return 6;\n+\n+\t\t  if ((INTVAL (src) & 0xffff)\n+\t\t      == ((INTVAL (src) >> 16) & 0xffff))\n+\t\t    return 6;\n \t\t}\n \t      return 8;\n \t    }"}, {"sha": "341e167ce9dde6d66fb6a21eb7b33e5097aacca4", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5139cc523535e77d5971aff50403cb2b063e94b/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5139cc523535e77d5971aff50403cb2b063e94b/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=f5139cc523535e77d5971aff50403cb2b063e94b", "patch": "@@ -396,14 +396,19 @@\n \t}\n       else\n \t{\n-\t  /* See if either half is zero.  If so, use sub.w to clear\n-\t     that half.  */\n \t  if (GET_CODE (operands[1]) == CONST_INT)\n \t    {\n+\t      /* If either half is zero, use sub.w to clear that\n+\t\t half.  */\n \t      if ((INTVAL (operands[1]) & 0xffff) == 0)\n \t\treturn \\\"mov.w\t%e1,%e0\\;sub.w\t%f0,%f0\\\";\n \t      if (((INTVAL (operands[1]) >> 16) & 0xffff) == 0)\n \t\treturn \\\"sub.w\t%e0,%e0\\;mov.w\t%f1,%f0\\\";\n+\t      /* If the upper half and the lower half are the same,\n+\t\t copy one half to the other.  */\n+\t      if ((INTVAL (operands[1]) & 0xffff)\n+\t\t  == ((INTVAL (operands[1]) >> 16) & 0xffff))\n+\t\treturn \\\"mov.w\\\\t%e1,%e0\\;mov.w\\\\t%e0,%f0\\\";\n \t    }\n \t  return \\\"mov.w\t%e1,%e0\\;mov.w\t%f1,%f0\\\";\n \t}"}]}