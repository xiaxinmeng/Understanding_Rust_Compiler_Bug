{"sha": "86bc0909613e19e284b40fce9f9914e3a115bbe8", "node_id": "C_kwDOANBUbNoAKDg2YmMwOTA5NjEzZTE5ZTI4NGI0MGZjZTlmOTkxNGUzYTExNWJiZTg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-14T15:14:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-15T07:28:48Z"}, "message": "Fix possible sanopt compile-time hog\n\nWhile working on bitmap operations I figured sanopt.cc uses\na sbitmap worklist, iterating using bitmap_first_set_bit on it.\nThat's quadratic since bitmap_first_set_bit for sbitmap is O(n).\n\nThe fix is to use regular bitmaps for the worklist and the bitmap\nfeeding it and to avoid a useless copy.\n\n\t* sanopt.cc (sanitize_asan_mark_unpoison): Use bitmap\n\tfor with_poison and alias worklist to it.\n\t(sanitize_asan_mark_poison): Likewise.", "tree": {"sha": "850524450cb6e557627733d0f7ec34513d4074ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/850524450cb6e557627733d0f7ec34513d4074ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86bc0909613e19e284b40fce9f9914e3a115bbe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bc0909613e19e284b40fce9f9914e3a115bbe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86bc0909613e19e284b40fce9f9914e3a115bbe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bc0909613e19e284b40fce9f9914e3a115bbe8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1dfac7e71056e879f101fef1c5ecb8ff6be1a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1dfac7e71056e879f101fef1c5ecb8ff6be1a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1dfac7e71056e879f101fef1c5ecb8ff6be1a1f"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "b356a21eca306ccda8d5650b54c1dc6e8cb21258", "filename": "gcc/sanopt.cc", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bc0909613e19e284b40fce9f9914e3a115bbe8/gcc%2Fsanopt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bc0909613e19e284b40fce9f9914e3a115bbe8/gcc%2Fsanopt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.cc?ref=86bc0909613e19e284b40fce9f9914e3a115bbe8", "patch": "@@ -987,15 +987,11 @@ static void\n sanitize_asan_mark_unpoison (void)\n {\n   /* 1) Find all BBs that contain an ASAN_MARK poison call.  */\n-  auto_sbitmap with_poison (last_basic_block_for_fn (cfun) + 1);\n-  bitmap_clear (with_poison);\n+  auto_bitmap with_poison;\n   basic_block bb;\n \n   FOR_EACH_BB_FN (bb, cfun)\n     {\n-      if (bitmap_bit_p (with_poison, bb->index))\n-\tcontinue;\n-\n       gimple_stmt_iterator gsi;\n       for (gsi = gsi_last_bb (bb); !gsi_end_p (gsi); gsi_prev (&gsi))\n \t{\n@@ -1010,8 +1006,8 @@ sanitize_asan_mark_unpoison (void)\n \n   auto_sbitmap poisoned (last_basic_block_for_fn (cfun) + 1);\n   bitmap_clear (poisoned);\n-  auto_sbitmap worklist (last_basic_block_for_fn (cfun) + 1);\n-  bitmap_copy (worklist, with_poison);\n+  /* We now treat with_poison as worklist.  */\n+  bitmap worklist = with_poison;\n \n   /* 2) Propagate the information to all reachable blocks.  */\n   while (!bitmap_empty_p (worklist))\n@@ -1088,8 +1084,7 @@ static void\n sanitize_asan_mark_poison (void)\n {\n   /* 1) Find all BBs that possibly contain an ASAN_CHECK.  */\n-  auto_sbitmap with_check (last_basic_block_for_fn (cfun) + 1);\n-  bitmap_clear (with_check);\n+  auto_bitmap with_check;\n   basic_block bb;\n \n   FOR_EACH_BB_FN (bb, cfun)\n@@ -1108,8 +1103,8 @@ sanitize_asan_mark_poison (void)\n \n   auto_sbitmap can_reach_check (last_basic_block_for_fn (cfun) + 1);\n   bitmap_clear (can_reach_check);\n-  auto_sbitmap worklist (last_basic_block_for_fn (cfun) + 1);\n-  bitmap_copy (worklist, with_check);\n+  /* We now treat with_check as worklist.  */\n+  bitmap worklist = with_check;\n \n   /* 2) Propagate the information to all definitions blocks.  */\n   while (!bitmap_empty_p (worklist))"}]}