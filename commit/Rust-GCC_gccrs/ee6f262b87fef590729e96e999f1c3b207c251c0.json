{"sha": "ee6f262b87fef590729e96e999f1c3b207c251c0", "node_id": "C_kwDOANBUbNoAKGVlNmYyNjJiODdmZWY1OTA3MjllOTZlOTk5ZjFjM2IyMDdjMjUxYzA", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-23T14:27:32Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-28T08:14:17Z"}, "message": "strlen: do not use cond_expr for boundaries\n\n\tPR tree-optimization/108137\n\ngcc/ChangeLog:\n\n\t* tree-ssa-strlen.cc (get_range_strlen_phi): Reject anything\n\tdifferent from INTEGER_CST.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr108137.c: New test.", "tree": {"sha": "300c3599e10f2c29c66bbc3ca4bd6d78cb22b45a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/300c3599e10f2c29c66bbc3ca4bd6d78cb22b45a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee6f262b87fef590729e96e999f1c3b207c251c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6f262b87fef590729e96e999f1c3b207c251c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee6f262b87fef590729e96e999f1c3b207c251c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6f262b87fef590729e96e999f1c3b207c251c0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ec203247413f150d5244198efd586fc6d2ef5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ec203247413f150d5244198efd586fc6d2ef5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ec203247413f150d5244198efd586fc6d2ef5e"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "f0cb71b22674a3936652293a7bf67af2ca15cc51", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr108137.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee6f262b87fef590729e96e999f1c3b207c251c0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr108137.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee6f262b87fef590729e96e999f1c3b207c251c0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr108137.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr108137.c?ref=ee6f262b87fef590729e96e999f1c3b207c251c0", "patch": "@@ -0,0 +1,8 @@\n+// PR tree-optimization/108137\n+// { dg-do compile }\n+// { dg-options \"-Wformat-overflow\" }\n+\n+void f(unsigned short x_port, unsigned int x_host)\n+{\n+    __builtin_printf(\"missing %s\", x_port ? \"host\" : &\"host:port\"[x_host ? 5 : 0]);\n+}"}, {"sha": "a2edac4c77fe154405931fdd69f89580953ddb46", "filename": "gcc/tree-ssa-strlen.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee6f262b87fef590729e96e999f1c3b207c251c0/gcc%2Ftree-ssa-strlen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee6f262b87fef590729e96e999f1c3b207c251c0/gcc%2Ftree-ssa-strlen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.cc?ref=ee6f262b87fef590729e96e999f1c3b207c251c0", "patch": "@@ -1136,14 +1136,15 @@ get_range_strlen_phi (tree src, gphi *phi,\n \n       /* Adjust the minimum and maximum length determined so far and\n \t the upper bound on the array size.  */\n-      if (!pdata->minlen\n-\t  || tree_int_cst_lt (argdata.minlen, pdata->minlen))\n+      if (TREE_CODE (argdata.minlen) == INTEGER_CST\n+\t  && (!pdata->minlen\n+\t      || tree_int_cst_lt (argdata.minlen, pdata->minlen)))\n \tpdata->minlen = argdata.minlen;\n \n-      if (!pdata->maxlen\n-\t  || (argdata.maxlen\n-\t      && TREE_CODE (argdata.maxlen) == INTEGER_CST\n-\t      && tree_int_cst_lt (pdata->maxlen, argdata.maxlen)))\n+      if (TREE_CODE (argdata.maxlen) == INTEGER_CST\n+\t  && (!pdata->maxlen\n+\t      || (argdata.maxlen\n+\t\t  && tree_int_cst_lt (pdata->maxlen, argdata.maxlen))))\n \tpdata->maxlen = argdata.maxlen;\n \n       if (!pdata->maxbound"}]}