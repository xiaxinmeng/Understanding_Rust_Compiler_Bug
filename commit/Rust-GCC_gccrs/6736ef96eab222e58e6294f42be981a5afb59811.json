{"sha": "6736ef96eab222e58e6294f42be981a5afb59811", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjczNmVmOTZlYWIyMjJlNThlNjI5NGY0MmJlOTgxYTVhZmI1OTgxMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-06T22:37:27Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-06T22:37:27Z"}, "message": "libgo: Merge to master revision 19184.\n\nThe next revision, 19185, renames several runtime files, and\nwill be handled in a separate change.\n\nFrom-SVN: r211328", "tree": {"sha": "2bc668fae9bf96f9a3988e0b0a16685bde8c4f0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc668fae9bf96f9a3988e0b0a16685bde8c4f0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6736ef96eab222e58e6294f42be981a5afb59811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6736ef96eab222e58e6294f42be981a5afb59811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6736ef96eab222e58e6294f42be981a5afb59811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6736ef96eab222e58e6294f42be981a5afb59811/comments", "author": null, "committer": null, "parents": [{"sha": "38a138411da4206c53f9a153ee9c3624fce58a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a138411da4206c53f9a153ee9c3624fce58a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a138411da4206c53f9a153ee9c3624fce58a52"}], "stats": {"total": 18321, "additions": 11972, "deletions": 6349}, "files": [{"sha": "80372916d20b303303483f6ea36911b20482c8dc", "filename": "gcc/testsuite/go.test/test/deferfin.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferfin.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferfin.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferfin.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -34,17 +34,17 @@ func main() {\n \tfor i := 0; i < N; i++ {\n \t\tgo func() {\n \t\t\tdefer wg.Done()\n-\t\t\tv := new(int)\n+\t\t\tv := new(string)\n \t\t\tf := func() {\n-\t\t\t\tif *v != 0 {\n+\t\t\t\tif *v != \"\" {\n \t\t\t\t\tpanic(\"oops\")\n \t\t\t\t}\n \t\t\t}\n-\t\t\tif *v != 0 {\n+\t\t\tif *v != \"\" {\n \t\t\t\t// let the compiler think f escapes\n \t\t\t\tsink = f\n \t\t\t}\n-\t\t\truntime.SetFinalizer(v, func(p *int) {\n+\t\t\truntime.SetFinalizer(v, func(p *string) {\n \t\t\t\tatomic.AddInt32(&count, -1)\n \t\t\t})\n \t\t\tdefer f()"}, {"sha": "fe875b35013f9a7bf7f8d09a011eb1476a8bf309", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue4618.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue4618.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue4618.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue4618.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -30,7 +30,7 @@ func G() {\n func main() {\n \tnf := testing.AllocsPerRun(100, F)\n \tng := testing.AllocsPerRun(100, G)\n-\tif int(nf) != 1 {\n+\tif int(nf) > 1 {\n \t\tfmt.Printf(\"AllocsPerRun(100, F) = %v, want 1\\n\", nf)\n \t\tos.Exit(1)\n \t}"}, {"sha": "18d773c2cfb9a21201ec3530bdeed8141719834d", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue4667.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue4667.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue4667.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue4667.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -26,11 +26,11 @@ func F() {\n func main() {\n \tnf := testing.AllocsPerRun(100, F)\n \tng := testing.AllocsPerRun(100, G)\n-\tif int(nf) != 1 {\n+\tif int(nf) > 1 {\n \t\tfmt.Printf(\"AllocsPerRun(100, F) = %v, want 1\\n\", nf)\n \t\tos.Exit(1)\n \t}\n-\tif int(ng) != 1 {\n+\tif int(ng) > 1 {\n \t\tfmt.Printf(\"AllocsPerRun(100, G) = %v, want 1\\n\", ng)\n \t\tos.Exit(1)\n \t}"}, {"sha": "2ef8f7a9489efb31f54aff54e6ca7379e6f790d6", "filename": "libgo/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMERGE?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,4 +1,4 @@\n-00cce3a34d7e\n+50c8fc924389\n \n The first line of this file holds the Mercurial revision number of the\n last merge done from the master library sources."}, {"sha": "a88f0b7f24c3c798de24b68165ddf4297aeff030", "filename": "libgo/Makefile.am", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -199,7 +199,8 @@ toolexeclibgodebug_DATA = \\\n \tdebug/goobj.gox \\\n \tdebug/gosym.gox \\\n \tdebug/macho.gox \\\n-\tdebug/pe.gox\n+\tdebug/pe.gox \\\n+\tdebug/plan9obj.gox\n \n toolexeclibgoencodingdir = $(toolexeclibgodir)/encoding\n \n@@ -500,7 +501,6 @@ runtime_files = \\\n \truntime/mcache.c \\\n \truntime/mcentral.c \\\n \t$(runtime_mem_file) \\\n-\truntime/mfinal.c \\\n \truntime/mfixalloc.c \\\n \truntime/mgc0.c \\\n \truntime/mheap.c \\\n@@ -1144,7 +1144,8 @@ go_crypto_hmac_files = \\\n \tgo/crypto/hmac/hmac.go\n go_crypto_md5_files = \\\n \tgo/crypto/md5/md5.go \\\n-\tgo/crypto/md5/md5block.go\n+\tgo/crypto/md5/md5block.go \\\n+\tgo/crypto/md5/md5block_generic.go\n go_crypto_rand_files = \\\n \tgo/crypto/rand/rand.go \\\n \tgo/crypto/rand/rand_unix.go \\\n@@ -1158,7 +1159,8 @@ go_crypto_rsa_files = \\\n \tgo/crypto/rsa/rsa.go\n go_crypto_sha1_files = \\\n \tgo/crypto/sha1/sha1.go \\\n-\tgo/crypto/sha1/sha1block.go\n+\tgo/crypto/sha1/sha1block.go \\\n+\tgo/crypto/sha1/sha1block_generic.go\n go_crypto_sha256_files = \\\n \tgo/crypto/sha256/sha256.go \\\n \tgo/crypto/sha256/sha256block.go\n@@ -1208,6 +1210,7 @@ go_debug_dwarf_files = \\\n \tgo/debug/dwarf/line.go \\\n \tgo/debug/dwarf/open.go \\\n \tgo/debug/dwarf/type.go \\\n+\tgo/debug/dwarf/typeunit.go \\\n \tgo/debug/dwarf/unit.go\n go_debug_elf_files = \\\n \tgo/debug/elf/elf.go \\\n@@ -1218,11 +1221,15 @@ go_debug_gosym_files = \\\n \tgo/debug/gosym/pclntab.go \\\n \tgo/debug/gosym/symtab.go\n go_debug_macho_files = \\\n+\tgo/debug/macho/fat.go \\\n \tgo/debug/macho/file.go \\\n \tgo/debug/macho/macho.go\n go_debug_pe_files = \\\n \tgo/debug/pe/file.go \\\n \tgo/debug/pe/pe.go\n+go_debug_plan9obj_files = \\\n+\tgo/debug/plan9obj/file.go \\\n+\tgo/debug/plan9obj/plan9obj.go\n \n go_encoding_ascii85_files = \\\n \tgo/encoding/ascii85/ascii85.go\n@@ -1452,6 +1459,7 @@ go_net_http_pprof_files = \\\n go_net_http_httputil_files = \\\n \tgo/net/http/httputil/chunked.go \\\n \tgo/net/http/httputil/dump.go \\\n+\tgo/net/http/httputil/httputil.go \\\n \tgo/net/http/httputil/persist.go \\\n \tgo/net/http/httputil/reverseproxy.go\n \n@@ -1876,6 +1884,7 @@ libgo_go_objs = \\\n \tdebug/gosym.lo \\\n \tdebug/macho.lo \\\n \tdebug/pe.lo \\\n+\tdebug/plan9obj.lo \\\n \tencoding/ascii85.lo \\\n \tencoding/asn1.lo \\\n \tencoding/base32.lo \\\n@@ -2636,6 +2645,15 @@ debug/pe/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: debug/pe/check\n \n+@go_include@ debug/plan9obj.lo.dep\n+debug/plan9obj.lo.dep: $(go_debug_plan9obj_files)\n+\t$(BUILDDEPS)\n+debug/plan9obj.lo: $(go_debug_plan9obj_files)\n+\t$(BUILDPACKAGE)\n+debug/plan9obj/check: $(CHECK_DEPS)\n+\t@$(CHECK)\n+.PHONY: debug/plan9obj/check\n+\n @go_include@ encoding/asn1.lo.dep\n encoding/asn1.lo.dep: $(go_encoding_asn1_files)\n \t$(BUILDDEPS)\n@@ -3435,6 +3453,8 @@ debug/macho.gox: debug/macho.lo\n \t$(BUILDGOX)\n debug/pe.gox: debug/pe.lo\n \t$(BUILDGOX)\n+debug/plan9obj.gox: debug/plan9obj.lo\n+\t$(BUILDGOX)\n \n encoding/ascii85.gox: encoding/ascii85.lo\n \t$(BUILDGOX)\n@@ -3659,6 +3679,7 @@ TEST_PACKAGES = \\\n \tdebug/elf/check \\\n \tdebug/macho/check \\\n \tdebug/pe/check \\\n+\tdebug/plan9obj/check \\\n \tencoding/ascii85/check \\\n \tencoding/asn1/check \\\n \tencoding/base32/check \\"}, {"sha": "73620f772d882720581d187006cc0f7acd280bfd", "filename": "libgo/Makefile.in", "status": "modified", "additions": 43, "deletions": 29, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -148,21 +148,21 @@ am__DEPENDENCIES_2 = bufio.lo bytes.lo bytes/index.lo crypto.lo \\\n \tcrypto/sha512.lo crypto/subtle.lo crypto/tls.lo crypto/x509.lo \\\n \tcrypto/x509/pkix.lo database/sql.lo database/sql/driver.lo \\\n \tdebug/dwarf.lo debug/elf.lo debug/goobj.lo debug/gosym.lo \\\n-\tdebug/macho.lo debug/pe.lo encoding/ascii85.lo \\\n-\tencoding/asn1.lo encoding/base32.lo encoding/base64.lo \\\n-\tencoding/binary.lo encoding/csv.lo encoding/gob.lo \\\n-\tencoding/hex.lo encoding/json.lo encoding/pem.lo \\\n-\tencoding/xml.lo exp/proxy.lo exp/terminal.lo html/template.lo \\\n-\tgo/ast.lo go/build.lo go/doc.lo go/format.lo go/parser.lo \\\n-\tgo/printer.lo go/scanner.lo go/token.lo hash/adler32.lo \\\n-\thash/crc32.lo hash/crc64.lo hash/fnv.lo net/http/cgi.lo \\\n-\tnet/http/cookiejar.lo net/http/fcgi.lo net/http/httptest.lo \\\n-\tnet/http/httputil.lo net/http/pprof.lo image/color.lo \\\n-\timage/color/palette.lo image/draw.lo image/gif.lo \\\n-\timage/jpeg.lo image/png.lo index/suffixarray.lo io/ioutil.lo \\\n-\tlog/syslog.lo log/syslog/syslog_c.lo math/big.lo math/cmplx.lo \\\n-\tmath/rand.lo mime/multipart.lo net/http.lo net/mail.lo \\\n-\tnet/rpc.lo net/smtp.lo net/textproto.lo net/url.lo \\\n+\tdebug/macho.lo debug/pe.lo debug/plan9obj.lo \\\n+\tencoding/ascii85.lo encoding/asn1.lo encoding/base32.lo \\\n+\tencoding/base64.lo encoding/binary.lo encoding/csv.lo \\\n+\tencoding/gob.lo encoding/hex.lo encoding/json.lo \\\n+\tencoding/pem.lo encoding/xml.lo exp/proxy.lo exp/terminal.lo \\\n+\thtml/template.lo go/ast.lo go/build.lo go/doc.lo go/format.lo \\\n+\tgo/parser.lo go/printer.lo go/scanner.lo go/token.lo \\\n+\thash/adler32.lo hash/crc32.lo hash/crc64.lo hash/fnv.lo \\\n+\tnet/http/cgi.lo net/http/cookiejar.lo net/http/fcgi.lo \\\n+\tnet/http/httptest.lo net/http/httputil.lo net/http/pprof.lo \\\n+\timage/color.lo image/color/palette.lo image/draw.lo \\\n+\timage/gif.lo image/jpeg.lo image/png.lo index/suffixarray.lo \\\n+\tio/ioutil.lo log/syslog.lo log/syslog/syslog_c.lo math/big.lo \\\n+\tmath/cmplx.lo math/rand.lo mime/multipart.lo net/http.lo \\\n+\tnet/mail.lo net/rpc.lo net/smtp.lo net/textproto.lo net/url.lo \\\n \told/regexp.lo old/template.lo os/exec.lo $(am__DEPENDENCIES_1) \\\n \tos/signal.lo os/user.lo path/filepath.lo regexp/syntax.lo \\\n \tnet/rpc/jsonrpc.lo runtime/debug.lo runtime/pprof.lo \\\n@@ -213,8 +213,8 @@ am__objects_6 = go-append.lo go-assert.lo go-assert-interface.lo \\\n \tgo-unsafe-new.lo go-unsafe-newarray.lo go-unsafe-pointer.lo \\\n \tgo-unwind.lo go-varargs.lo chan.lo cpuprof.lo env_posix.lo \\\n \tlfstack.lo $(am__objects_1) mcache.lo mcentral.lo \\\n-\t$(am__objects_2) mfinal.lo mfixalloc.lo mgc0.lo mheap.lo \\\n-\tmsize.lo $(am__objects_3) panic.lo parfor.lo print.lo proc.lo \\\n+\t$(am__objects_2) mfixalloc.lo mgc0.lo mheap.lo msize.lo \\\n+\t$(am__objects_3) panic.lo parfor.lo print.lo proc.lo \\\n \truntime.lo signal_unix.lo thread.lo yield.lo $(am__objects_4) \\\n \tiface.lo malloc.lo map.lo mprof.lo netpoll.lo reflect.lo \\\n \truntime1.lo sema.lo sigqueue.lo string.lo time.lo \\\n@@ -591,7 +591,8 @@ toolexeclibgodebug_DATA = \\\n \tdebug/goobj.gox \\\n \tdebug/gosym.gox \\\n \tdebug/macho.gox \\\n-\tdebug/pe.gox\n+\tdebug/pe.gox \\\n+\tdebug/plan9obj.gox\n \n toolexeclibgoencodingdir = $(toolexeclibgodir)/encoding\n toolexeclibgoencoding_DATA = \\\n@@ -829,7 +830,6 @@ runtime_files = \\\n \truntime/mcache.c \\\n \truntime/mcentral.c \\\n \t$(runtime_mem_file) \\\n-\truntime/mfinal.c \\\n \truntime/mfixalloc.c \\\n \truntime/mgc0.c \\\n \truntime/mheap.c \\\n@@ -1302,7 +1302,8 @@ go_crypto_hmac_files = \\\n \n go_crypto_md5_files = \\\n \tgo/crypto/md5/md5.go \\\n-\tgo/crypto/md5/md5block.go\n+\tgo/crypto/md5/md5block.go \\\n+\tgo/crypto/md5/md5block_generic.go\n \n go_crypto_rand_files = \\\n \tgo/crypto/rand/rand.go \\\n@@ -1320,7 +1321,8 @@ go_crypto_rsa_files = \\\n \n go_crypto_sha1_files = \\\n \tgo/crypto/sha1/sha1.go \\\n-\tgo/crypto/sha1/sha1block.go\n+\tgo/crypto/sha1/sha1block.go \\\n+\tgo/crypto/sha1/sha1block_generic.go\n \n go_crypto_sha256_files = \\\n \tgo/crypto/sha256/sha256.go \\\n@@ -1375,6 +1377,7 @@ go_debug_dwarf_files = \\\n \tgo/debug/dwarf/line.go \\\n \tgo/debug/dwarf/open.go \\\n \tgo/debug/dwarf/type.go \\\n+\tgo/debug/dwarf/typeunit.go \\\n \tgo/debug/dwarf/unit.go\n \n go_debug_elf_files = \\\n@@ -1389,13 +1392,18 @@ go_debug_gosym_files = \\\n \tgo/debug/gosym/symtab.go\n \n go_debug_macho_files = \\\n+\tgo/debug/macho/fat.go \\\n \tgo/debug/macho/file.go \\\n \tgo/debug/macho/macho.go\n \n go_debug_pe_files = \\\n \tgo/debug/pe/file.go \\\n \tgo/debug/pe/pe.go\n \n+go_debug_plan9obj_files = \\\n+\tgo/debug/plan9obj/file.go \\\n+\tgo/debug/plan9obj/plan9obj.go\n+\n go_encoding_ascii85_files = \\\n \tgo/encoding/ascii85/ascii85.go\n \n@@ -1656,6 +1664,7 @@ go_net_http_pprof_files = \\\n go_net_http_httputil_files = \\\n \tgo/net/http/httputil/chunked.go \\\n \tgo/net/http/httputil/dump.go \\\n+\tgo/net/http/httputil/httputil.go \\\n \tgo/net/http/httputil/persist.go \\\n \tgo/net/http/httputil/reverseproxy.go\n \n@@ -1947,6 +1956,7 @@ libgo_go_objs = \\\n \tdebug/gosym.lo \\\n \tdebug/macho.lo \\\n \tdebug/pe.lo \\\n+\tdebug/plan9obj.lo \\\n \tencoding/ascii85.lo \\\n \tencoding/asn1.lo \\\n \tencoding/base32.lo \\\n@@ -2187,6 +2197,7 @@ TEST_PACKAGES = \\\n \tdebug/elf/check \\\n \tdebug/macho/check \\\n \tdebug/pe/check \\\n+\tdebug/plan9obj/check \\\n \tencoding/ascii85/check \\\n \tencoding/asn1/check \\\n \tencoding/base32/check \\\n@@ -2472,7 +2483,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mcentral.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mem.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mem_posix_memalign.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfinal.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfixalloc.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mgc0.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mheap.Plo@am__quote@\n@@ -3081,13 +3091,6 @@ mem.lo: runtime/mem.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mem.lo `test -f 'runtime/mem.c' || echo '$(srcdir)/'`runtime/mem.c\n \n-mfinal.lo: runtime/mfinal.c\n-@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mfinal.lo -MD -MP -MF $(DEPDIR)/mfinal.Tpo -c -o mfinal.lo `test -f 'runtime/mfinal.c' || echo '$(srcdir)/'`runtime/mfinal.c\n-@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/mfinal.Tpo $(DEPDIR)/mfinal.Plo\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/mfinal.c' object='mfinal.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mfinal.lo `test -f 'runtime/mfinal.c' || echo '$(srcdir)/'`runtime/mfinal.c\n-\n mfixalloc.lo: runtime/mfixalloc.c\n @am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mfixalloc.lo -MD -MP -MF $(DEPDIR)/mfixalloc.Tpo -c -o mfixalloc.lo `test -f 'runtime/mfixalloc.c' || echo '$(srcdir)/'`runtime/mfixalloc.c\n @am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/mfixalloc.Tpo $(DEPDIR)/mfixalloc.Plo\n@@ -5014,6 +5017,15 @@ debug/pe/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: debug/pe/check\n \n+@go_include@ debug/plan9obj.lo.dep\n+debug/plan9obj.lo.dep: $(go_debug_plan9obj_files)\n+\t$(BUILDDEPS)\n+debug/plan9obj.lo: $(go_debug_plan9obj_files)\n+\t$(BUILDPACKAGE)\n+debug/plan9obj/check: $(CHECK_DEPS)\n+\t@$(CHECK)\n+.PHONY: debug/plan9obj/check\n+\n @go_include@ encoding/asn1.lo.dep\n encoding/asn1.lo.dep: $(go_encoding_asn1_files)\n \t$(BUILDDEPS)\n@@ -5805,6 +5817,8 @@ debug/macho.gox: debug/macho.lo\n \t$(BUILDGOX)\n debug/pe.gox: debug/pe.lo\n \t$(BUILDGOX)\n+debug/plan9obj.gox: debug/plan9obj.lo\n+\t$(BUILDGOX)\n \n encoding/ascii85.gox: encoding/ascii85.lo\n \t$(BUILDGOX)"}, {"sha": "e8b973c1faf0b5b8566b9bc0fc1f9fe4226ae3d4", "filename": "libgo/go/archive/tar/common.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fcommon.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fcommon.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Fcommon.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -57,6 +57,7 @@ type Header struct {\n \tDevminor   int64     // minor number of character or block device\n \tAccessTime time.Time // access time\n \tChangeTime time.Time // status change time\n+\tXattrs     map[string]string\n }\n \n // File name constants from the tar spec.\n@@ -189,6 +190,7 @@ const (\n \tpaxSize     = \"size\"\n \tpaxUid      = \"uid\"\n \tpaxUname    = \"uname\"\n+\tpaxXattr    = \"SCHILY.xattr.\"\n \tpaxNone     = \"\"\n )\n "}, {"sha": "7cb6e649c7bec17549063c890ad12f296e3e93a7", "filename": "libgo/go/archive/tar/reader.go", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Freader.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Freader.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Freader.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -139,8 +139,14 @@ func mergePAX(hdr *Header, headers map[string]string) error {\n \t\t\t\treturn err\n \t\t\t}\n \t\t\thdr.Size = int64(size)\n+\t\tdefault:\n+\t\t\tif strings.HasPrefix(k, paxXattr) {\n+\t\t\t\tif hdr.Xattrs == nil {\n+\t\t\t\t\thdr.Xattrs = make(map[string]string)\n+\t\t\t\t}\n+\t\t\t\thdr.Xattrs[k[len(paxXattr):]] = v\n+\t\t\t}\n \t\t}\n-\n \t}\n \treturn nil\n }"}, {"sha": "f84dbebe98996d18d1cb6eafcf92340b87b03ef7", "filename": "libgo/go/archive/tar/reader_test.go", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Freader_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Freader_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Freader_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -161,6 +161,46 @@ var untarTests = []*untarTest{\n \t\t\t},\n \t\t},\n \t},\n+\t{\n+\t\tfile: \"testdata/xattrs.tar\",\n+\t\theaders: []*Header{\n+\t\t\t{\n+\t\t\t\tName:       \"small.txt\",\n+\t\t\t\tMode:       0644,\n+\t\t\t\tUid:        1000,\n+\t\t\t\tGid:        10,\n+\t\t\t\tSize:       5,\n+\t\t\t\tModTime:    time.Unix(1386065770, 448252320),\n+\t\t\t\tTypeflag:   '0',\n+\t\t\t\tUname:      \"alex\",\n+\t\t\t\tGname:      \"wheel\",\n+\t\t\t\tAccessTime: time.Unix(1389782991, 419875220),\n+\t\t\t\tChangeTime: time.Unix(1389782956, 794414986),\n+\t\t\t\tXattrs: map[string]string{\n+\t\t\t\t\t\"user.key\":  \"value\",\n+\t\t\t\t\t\"user.key2\": \"value2\",\n+\t\t\t\t\t// Interestingly, selinux encodes the terminating null inside the xattr\n+\t\t\t\t\t\"security.selinux\": \"unconfined_u:object_r:default_t:s0\\x00\",\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tName:       \"small2.txt\",\n+\t\t\t\tMode:       0644,\n+\t\t\t\tUid:        1000,\n+\t\t\t\tGid:        10,\n+\t\t\t\tSize:       11,\n+\t\t\t\tModTime:    time.Unix(1386065770, 449252304),\n+\t\t\t\tTypeflag:   '0',\n+\t\t\t\tUname:      \"alex\",\n+\t\t\t\tGname:      \"wheel\",\n+\t\t\t\tAccessTime: time.Unix(1389782991, 419875220),\n+\t\t\t\tChangeTime: time.Unix(1386065770, 449252304),\n+\t\t\t\tXattrs: map[string]string{\n+\t\t\t\t\t\"security.selinux\": \"unconfined_u:object_r:default_t:s0\\x00\",\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t},\n }\n \n func TestReader(t *testing.T) {\n@@ -180,7 +220,7 @@ testLoop:\n \t\t\t\tf.Close()\n \t\t\t\tcontinue testLoop\n \t\t\t}\n-\t\t\tif *hdr != *header {\n+\t\t\tif !reflect.DeepEqual(*hdr, *header) {\n \t\t\t\tt.Errorf(\"test %d, entry %d: Incorrect header:\\nhave %+v\\nwant %+v\",\n \t\t\t\t\ti, j, *hdr, *header)\n \t\t\t}\n@@ -253,7 +293,7 @@ func TestIncrementalRead(t *testing.T) {\n \t\t}\n \n \t\t// check the header\n-\t\tif *hdr != *headers[nread] {\n+\t\tif !reflect.DeepEqual(*hdr, *headers[nread]) {\n \t\t\tt.Errorf(\"Incorrect header:\\nhave %+v\\nwant %+v\",\n \t\t\t\t*hdr, headers[nread])\n \t\t}\n@@ -321,7 +361,7 @@ func TestParsePAXHeader(t *testing.T) {\n \t\t{\"mtime\", \"mtime=1350244992.023960108\", \"30 mtime=1350244992.023960108\\n\"}}\n \tfor _, test := range paxTests {\n \t\tkey, expected, raw := test[0], test[1], test[2]\n-\t\treader := bytes.NewBuffer([]byte(raw))\n+\t\treader := bytes.NewReader([]byte(raw))\n \t\theaders, err := parsePAX(reader)\n \t\tif err != nil {\n \t\t\tt.Errorf(\"Couldn't parse correctly formatted headers: %v\", err)\n@@ -337,7 +377,7 @@ func TestParsePAXHeader(t *testing.T) {\n \t\t\tt.Error(\"Buffer wasn't consumed\")\n \t\t}\n \t}\n-\tbadHeader := bytes.NewBuffer([]byte(\"3 somelongkey=\"))\n+\tbadHeader := bytes.NewReader([]byte(\"3 somelongkey=\"))\n \tif _, err := parsePAX(badHeader); err != ErrHeader {\n \t\tt.Fatal(\"Unexpected success when parsing bad header\")\n \t}"}, {"sha": "cf9cc79c5915bace0af0e81fa4df961f3a68553c", "filename": "libgo/go/archive/tar/stat_atim.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fstat_atim.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fstat_atim.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Fstat_atim.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build linux openbsd\n+// +build linux dragonfly openbsd solaris\n \n package tar\n "}, {"sha": "cb843db4cfd65815830128cc0aa285dee36f7123", "filename": "libgo/go/archive/tar/stat_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fstat_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fstat_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Fstat_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build linux darwin freebsd openbsd netbsd\n+// +build linux darwin dragonfly freebsd openbsd netbsd solaris\n \n package tar\n "}, {"sha": "9701950edd1f0dc82858b7117136b37391be0b08", "filename": "libgo/go/archive/tar/testdata/xattrs.tar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Ftestdata%2Fxattrs.tar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Ftestdata%2Fxattrs.tar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Ftestdata%2Fxattrs.tar?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "9ee94992970eca4bf7b8ec7770616e0ef4767d45", "filename": "libgo/go/archive/tar/writer.go", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fwriter.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fwriter.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Fwriter.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -236,6 +236,12 @@ func (tw *Writer) writeHeader(hdr *Header, allowPax bool) error {\n \t\treturn tw.err\n \t}\n \n+\tif allowPax {\n+\t\tfor k, v := range hdr.Xattrs {\n+\t\t\tpaxHeaders[paxXattr+k] = v\n+\t\t}\n+\t}\n+\n \tif len(paxHeaders) > 0 {\n \t\tif !allowPax {\n \t\t\treturn errInvalidHeader"}, {"sha": "2b9ea658db479193aebd5e3f391ea361b2869e79", "filename": "libgo/go/archive/tar/writer_test.go", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fwriter_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Ftar%2Fwriter_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Fwriter_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -10,6 +10,7 @@ import (\n \t\"io\"\n \t\"io/ioutil\"\n \t\"os\"\n+\t\"reflect\"\n \t\"strings\"\n \t\"testing\"\n \t\"testing/iotest\"\n@@ -338,6 +339,45 @@ func TestPaxNonAscii(t *testing.T) {\n \t}\n }\n \n+func TestPaxXattrs(t *testing.T) {\n+\txattrs := map[string]string{\n+\t\t\"user.key\": \"value\",\n+\t}\n+\n+\t// Create an archive with an xattr\n+\tfileinfo, err := os.Stat(\"testdata/small.txt\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\thdr, err := FileInfoHeader(fileinfo, \"\")\n+\tif err != nil {\n+\t\tt.Fatalf(\"os.Stat: %v\", err)\n+\t}\n+\tcontents := \"Kilts\"\n+\thdr.Xattrs = xattrs\n+\tvar buf bytes.Buffer\n+\twriter := NewWriter(&buf)\n+\tif err := writer.WriteHeader(hdr); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif _, err = writer.Write([]byte(contents)); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif err := writer.Close(); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\t// Test that we can get the xattrs back out of the archive.\n+\treader := NewReader(&buf)\n+\thdr, err = reader.Next()\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif !reflect.DeepEqual(hdr.Xattrs, xattrs) {\n+\t\tt.Fatalf(\"xattrs did not survive round trip: got %+v, want %+v\",\n+\t\t\thdr.Xattrs, xattrs)\n+\t}\n+}\n+\n func TestPAXHeader(t *testing.T) {\n \tmedName := strings.Repeat(\"CD\", 50)\n \tlongName := strings.Repeat(\"AB\", 100)"}, {"sha": "5652f3a50074b6b2ebef61a87c729dca1fe77a8c", "filename": "libgo/go/archive/zip/reader_test.go", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Freader_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Freader_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Freader_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -235,6 +235,18 @@ var tests = []ZipTest{\n \t\t\t},\n \t\t},\n \t},\n+\t// Another zip64 file with different Extras fields. (golang.org/issue/7069)\n+\t{\n+\t\tName: \"zip64-2.zip\",\n+\t\tFile: []ZipTestFile{\n+\t\t\t{\n+\t\t\t\tName:    \"README\",\n+\t\t\t\tContent: []byte(\"This small file is in ZIP64 format.\\n\"),\n+\t\t\t\tMtime:   \"08-10-12 14:33:32\",\n+\t\t\t\tMode:    0644,\n+\t\t\t},\n+\t\t},\n+\t},\n }\n \n var crossPlatform = []ZipTestFile{\n@@ -343,19 +355,13 @@ func readTestFile(t *testing.T, zt ZipTest, ft ZipTestFile, f *File) {\n \n \ttestFileMode(t, zt.Name, f, ft.Mode)\n \n-\tsize0 := f.UncompressedSize\n-\n \tvar b bytes.Buffer\n \tr, err := f.Open()\n \tif err != nil {\n-\t\tt.Error(err)\n+\t\tt.Errorf(\"%s: %v\", zt.Name, err)\n \t\treturn\n \t}\n \n-\tif size1 := f.UncompressedSize; size0 != size1 {\n-\t\tt.Errorf(\"file %q changed f.UncompressedSize from %d to %d\", f.Name, size0, size1)\n-\t}\n-\n \t_, err = io.Copy(&b, r)\n \tif err != ft.ContentErr {\n \t\tt.Errorf(\"%s: copying contents: %v (want %v)\", zt.Name, err, ft.ContentErr)\n@@ -365,6 +371,14 @@ func readTestFile(t *testing.T, zt ZipTest, ft ZipTestFile, f *File) {\n \t}\n \tr.Close()\n \n+\tsize := uint64(f.UncompressedSize)\n+\tif size == uint32max {\n+\t\tsize = f.UncompressedSize64\n+\t}\n+\tif g := uint64(b.Len()); g != size {\n+\t\tt.Errorf(\"%v: read %v bytes but f.UncompressedSize == %v\", f.Name, g, size)\n+\t}\n+\n \tvar c []byte\n \tif ft.Content != nil {\n \t\tc = ft.Content"}, {"sha": "4211ec7af7ba8ee56c5dcd194959230c5a000e07", "filename": "libgo/go/archive/zip/register.go", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Fregister.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Fregister.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Fregister.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -6,6 +6,7 @@ package zip\n \n import (\n \t\"compress/flate\"\n+\t\"errors\"\n \t\"io\"\n \t\"io/ioutil\"\n \t\"sync\"\n@@ -21,12 +22,50 @@ type Compressor func(io.Writer) (io.WriteCloser, error)\n // when they're finished reading.\n type Decompressor func(io.Reader) io.ReadCloser\n \n+var flateWriterPool sync.Pool\n+\n+func newFlateWriter(w io.Writer) io.WriteCloser {\n+\tfw, ok := flateWriterPool.Get().(*flate.Writer)\n+\tif ok {\n+\t\tfw.Reset(w)\n+\t} else {\n+\t\tfw, _ = flate.NewWriter(w, 5)\n+\t}\n+\treturn &pooledFlateWriter{fw: fw}\n+}\n+\n+type pooledFlateWriter struct {\n+\tmu sync.Mutex // guards Close and Write\n+\tfw *flate.Writer\n+}\n+\n+func (w *pooledFlateWriter) Write(p []byte) (n int, err error) {\n+\tw.mu.Lock()\n+\tdefer w.mu.Unlock()\n+\tif w.fw == nil {\n+\t\treturn 0, errors.New(\"Write after Close\")\n+\t}\n+\treturn w.fw.Write(p)\n+}\n+\n+func (w *pooledFlateWriter) Close() error {\n+\tw.mu.Lock()\n+\tdefer w.mu.Unlock()\n+\tvar err error\n+\tif w.fw != nil {\n+\t\terr = w.fw.Close()\n+\t\tflateWriterPool.Put(w.fw)\n+\t\tw.fw = nil\n+\t}\n+\treturn err\n+}\n+\n var (\n \tmu sync.RWMutex // guards compressor and decompressor maps\n \n \tcompressors = map[uint16]Compressor{\n \t\tStore:   func(w io.Writer) (io.WriteCloser, error) { return &nopCloser{w}, nil },\n-\t\tDeflate: func(w io.Writer) (io.WriteCloser, error) { return flate.NewWriter(w, 5) },\n+\t\tDeflate: func(w io.Writer) (io.WriteCloser, error) { return newFlateWriter(w), nil },\n \t}\n \n \tdecompressors = map[uint16]Decompressor{"}, {"sha": "f844e35373e8a28289f8556032bc8d6f6ee92ec2", "filename": "libgo/go/archive/zip/testdata/zip64-2.zip", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Fzip64-2.zip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Fzip64-2.zip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Fzip64-2.zip?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "4bfa87080906e1d8176de54947a0efea2e701dce", "filename": "libgo/go/archive/zip/writer_test.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Fwriter_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Farchive%2Fzip%2Fwriter_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Fwriter_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -125,3 +125,21 @@ func testReadFile(t *testing.T, f *File, wt *WriteTest) {\n \t\tt.Errorf(\"File contents %q, want %q\", b, wt.Data)\n \t}\n }\n+\n+func BenchmarkCompressedZipGarbage(b *testing.B) {\n+\tb.ReportAllocs()\n+\tvar buf bytes.Buffer\n+\tbigBuf := bytes.Repeat([]byte(\"a\"), 1<<20)\n+\tfor i := 0; i < b.N; i++ {\n+\t\tbuf.Reset()\n+\t\tzw := NewWriter(&buf)\n+\t\tfor j := 0; j < 3; j++ {\n+\t\t\tw, _ := zw.CreateHeader(&FileHeader{\n+\t\t\t\tName:   \"foo\",\n+\t\t\t\tMethod: Deflate,\n+\t\t\t})\n+\t\t\tw.Write(bigBuf)\n+\t\t}\n+\t\tzw.Close()\n+\t}\n+}"}, {"sha": "3c86857e107c20be9b9120055f92afa031fd24f1", "filename": "libgo/go/bufio/bufio_test.go", "status": "modified", "additions": 53, "deletions": 33, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fbufio%2Fbufio_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fbufio%2Fbufio_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbufio%2Fbufio_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -65,12 +65,12 @@ func readBytes(buf *Reader) string {\n \n func TestReaderSimple(t *testing.T) {\n \tdata := \"hello world\"\n-\tb := NewReader(bytes.NewBufferString(data))\n+\tb := NewReader(strings.NewReader(data))\n \tif s := readBytes(b); s != \"hello world\" {\n \t\tt.Errorf(\"simple hello world test failed: got %q\", s)\n \t}\n \n-\tb = NewReader(newRot13Reader(bytes.NewBufferString(data)))\n+\tb = NewReader(newRot13Reader(strings.NewReader(data)))\n \tif s := readBytes(b); s != \"uryyb jbeyq\" {\n \t\tt.Errorf(\"rot13 hello world test failed: got %q\", s)\n \t}\n@@ -161,7 +161,7 @@ func TestReader(t *testing.T) {\n \t\t\t\t\treadmaker := readMakers[i]\n \t\t\t\t\tbufreader := bufreaders[j]\n \t\t\t\t\tbufsize := bufsizes[k]\n-\t\t\t\t\tread := readmaker.fn(bytes.NewBufferString(text))\n+\t\t\t\t\tread := readmaker.fn(strings.NewReader(text))\n \t\t\t\t\tbuf := NewReaderSize(read, bufsize)\n \t\t\t\t\ts := bufreader.fn(buf)\n \t\t\t\t\tif s != text {\n@@ -479,7 +479,7 @@ func TestWriteErrors(t *testing.T) {\n \n func TestNewReaderSizeIdempotent(t *testing.T) {\n \tconst BufSize = 1000\n-\tb := NewReaderSize(bytes.NewBufferString(\"hello world\"), BufSize)\n+\tb := NewReaderSize(strings.NewReader(\"hello world\"), BufSize)\n \t// Does it recognize itself?\n \tb1 := NewReaderSize(b, BufSize)\n \tif b1 != b {\n@@ -677,7 +677,7 @@ func TestLineTooLong(t *testing.T) {\n \tfor i := 0; i < minReadBufferSize*5/2; i++ {\n \t\tdata = append(data, '0'+byte(i%10))\n \t}\n-\tbuf := bytes.NewBuffer(data)\n+\tbuf := bytes.NewReader(data)\n \tl := NewReaderSize(buf, minReadBufferSize)\n \tline, isPrefix, err := l.ReadLine()\n \tif !isPrefix || !bytes.Equal(line, data[:minReadBufferSize]) || err != nil {\n@@ -702,7 +702,7 @@ func TestLineTooLong(t *testing.T) {\n func TestReadAfterLines(t *testing.T) {\n \tline1 := \"this is line1\"\n \trestData := \"this is line2\\nthis is line 3\\n\"\n-\tinbuf := bytes.NewBuffer([]byte(line1 + \"\\n\" + restData))\n+\tinbuf := bytes.NewReader([]byte(line1 + \"\\n\" + restData))\n \toutbuf := new(bytes.Buffer)\n \tmaxLineLength := len(line1) + len(restData)/2\n \tl := NewReaderSize(inbuf, maxLineLength)\n@@ -728,7 +728,7 @@ func TestReadEmptyBuffer(t *testing.T) {\n }\n \n func TestLinesAfterRead(t *testing.T) {\n-\tl := NewReaderSize(bytes.NewBuffer([]byte(\"foo\")), minReadBufferSize)\n+\tl := NewReaderSize(bytes.NewReader([]byte(\"foo\")), minReadBufferSize)\n \t_, err := ioutil.ReadAll(l)\n \tif err != nil {\n \t\tt.Error(err)\n@@ -818,7 +818,7 @@ func createTestInput(n int) []byte {\n \n func TestReaderWriteTo(t *testing.T) {\n \tinput := createTestInput(8192)\n-\tr := NewReader(onlyReader{bytes.NewBuffer(input)})\n+\tr := NewReader(onlyReader{bytes.NewReader(input)})\n \tw := new(bytes.Buffer)\n \tif n, err := r.WriteTo(w); err != nil || n != int64(len(input)) {\n \t\tt.Fatalf(\"r.WriteTo(w) = %d, %v, want %d, nil\", n, err, len(input))\n@@ -877,7 +877,7 @@ func TestWriterReadFrom(t *testing.T) {\n \t\t\tinput := createTestInput(8192)\n \t\t\tb := new(bytes.Buffer)\n \t\t\tw := NewWriter(wfunc(b))\n-\t\t\tr := rfunc(bytes.NewBuffer(input))\n+\t\t\tr := rfunc(bytes.NewReader(input))\n \t\t\tif n, err := w.ReadFrom(r); err != nil || n != int64(len(input)) {\n \t\t\t\tt.Errorf(\"ws[%d],rs[%d]: w.ReadFrom(r) = %d, %v, want %d, nil\", wi, ri, n, err, len(input))\n \t\t\t\tcontinue\n@@ -1112,63 +1112,83 @@ func (w onlyWriter) Write(b []byte) (int, error) {\n \n func BenchmarkReaderCopyOptimal(b *testing.B) {\n \t// Optimal case is where the underlying reader implements io.WriterTo\n+\tsrcBuf := bytes.NewBuffer(make([]byte, 8192))\n+\tsrc := NewReader(srcBuf)\n+\tdstBuf := new(bytes.Buffer)\n+\tdst := onlyWriter{dstBuf}\n \tfor i := 0; i < b.N; i++ {\n-\t\tb.StopTimer()\n-\t\tsrc := NewReader(bytes.NewBuffer(make([]byte, 8192)))\n-\t\tdst := onlyWriter{new(bytes.Buffer)}\n-\t\tb.StartTimer()\n+\t\tsrcBuf.Reset()\n+\t\tsrc.Reset(srcBuf)\n+\t\tdstBuf.Reset()\n \t\tio.Copy(dst, src)\n \t}\n }\n \n func BenchmarkReaderCopyUnoptimal(b *testing.B) {\n \t// Unoptimal case is where the underlying reader doesn't implement io.WriterTo\n+\tsrcBuf := bytes.NewBuffer(make([]byte, 8192))\n+\tsrc := NewReader(onlyReader{srcBuf})\n+\tdstBuf := new(bytes.Buffer)\n+\tdst := onlyWriter{dstBuf}\n \tfor i := 0; i < b.N; i++ {\n-\t\tb.StopTimer()\n-\t\tsrc := NewReader(onlyReader{bytes.NewBuffer(make([]byte, 8192))})\n-\t\tdst := onlyWriter{new(bytes.Buffer)}\n-\t\tb.StartTimer()\n+\t\tsrcBuf.Reset()\n+\t\tsrc.Reset(onlyReader{srcBuf})\n+\t\tdstBuf.Reset()\n \t\tio.Copy(dst, src)\n \t}\n }\n \n func BenchmarkReaderCopyNoWriteTo(b *testing.B) {\n+\tsrcBuf := bytes.NewBuffer(make([]byte, 8192))\n+\tsrcReader := NewReader(srcBuf)\n+\tsrc := onlyReader{srcReader}\n+\tdstBuf := new(bytes.Buffer)\n+\tdst := onlyWriter{dstBuf}\n \tfor i := 0; i < b.N; i++ {\n-\t\tb.StopTimer()\n-\t\tsrc := onlyReader{NewReader(bytes.NewBuffer(make([]byte, 8192)))}\n-\t\tdst := onlyWriter{new(bytes.Buffer)}\n-\t\tb.StartTimer()\n+\t\tsrcBuf.Reset()\n+\t\tsrcReader.Reset(srcBuf)\n+\t\tdstBuf.Reset()\n \t\tio.Copy(dst, src)\n \t}\n }\n \n func BenchmarkWriterCopyOptimal(b *testing.B) {\n \t// Optimal case is where the underlying writer implements io.ReaderFrom\n+\tsrcBuf := bytes.NewBuffer(make([]byte, 8192))\n+\tsrc := onlyReader{srcBuf}\n+\tdstBuf := new(bytes.Buffer)\n+\tdst := NewWriter(dstBuf)\n \tfor i := 0; i < b.N; i++ {\n-\t\tb.StopTimer()\n-\t\tsrc := onlyReader{bytes.NewBuffer(make([]byte, 8192))}\n-\t\tdst := NewWriter(new(bytes.Buffer))\n-\t\tb.StartTimer()\n+\t\tsrcBuf.Reset()\n+\t\tdstBuf.Reset()\n+\t\tdst.Reset(dstBuf)\n \t\tio.Copy(dst, src)\n \t}\n }\n \n func BenchmarkWriterCopyUnoptimal(b *testing.B) {\n+\tsrcBuf := bytes.NewBuffer(make([]byte, 8192))\n+\tsrc := onlyReader{srcBuf}\n+\tdstBuf := new(bytes.Buffer)\n+\tdst := NewWriter(onlyWriter{dstBuf})\n \tfor i := 0; i < b.N; i++ {\n-\t\tb.StopTimer()\n-\t\tsrc := onlyReader{bytes.NewBuffer(make([]byte, 8192))}\n-\t\tdst := NewWriter(onlyWriter{new(bytes.Buffer)})\n-\t\tb.StartTimer()\n+\t\tsrcBuf.Reset()\n+\t\tdstBuf.Reset()\n+\t\tdst.Reset(onlyWriter{dstBuf})\n \t\tio.Copy(dst, src)\n \t}\n }\n \n func BenchmarkWriterCopyNoReadFrom(b *testing.B) {\n+\tsrcBuf := bytes.NewBuffer(make([]byte, 8192))\n+\tsrc := onlyReader{srcBuf}\n+\tdstBuf := new(bytes.Buffer)\n+\tdstWriter := NewWriter(dstBuf)\n+\tdst := onlyWriter{dstWriter}\n \tfor i := 0; i < b.N; i++ {\n-\t\tb.StopTimer()\n-\t\tsrc := onlyReader{bytes.NewBuffer(make([]byte, 8192))}\n-\t\tdst := onlyWriter{NewWriter(new(bytes.Buffer))}\n-\t\tb.StartTimer()\n+\t\tsrcBuf.Reset()\n+\t\tdstBuf.Reset()\n+\t\tdstWriter.Reset(dstBuf)\n \t\tio.Copy(dst, src)\n \t}\n }"}, {"sha": "77b2c2ac6f8472fa55e56bb8600d17338aa32ea9", "filename": "libgo/go/bufio/scan.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fbufio%2Fscan.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fbufio%2Fscan.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbufio%2Fscan.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -306,7 +306,7 @@ func isSpace(r rune) bool {\n \t\treturn true\n \t}\n \tswitch r {\n-\tcase '\\u1680', '\\u180e', '\\u2028', '\\u2029', '\\u202f', '\\u205f', '\\u3000':\n+\tcase '\\u1680', '\\u2028', '\\u2029', '\\u202f', '\\u205f', '\\u3000':\n \t\treturn true\n \t}\n \treturn false"}, {"sha": "4ac529fd6dd71ea797e13bfd4383424bd8201081", "filename": "libgo/go/bufio/scan_test.go", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fbufio%2Fscan_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fbufio%2Fscan_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbufio%2Fscan_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -38,7 +38,7 @@ var scanTests = []string{\n \n func TestScanByte(t *testing.T) {\n \tfor n, test := range scanTests {\n-\t\tbuf := bytes.NewBufferString(test)\n+\t\tbuf := strings.NewReader(test)\n \t\ts := NewScanner(buf)\n \t\ts.Split(ScanBytes)\n \t\tvar i int\n@@ -60,7 +60,7 @@ func TestScanByte(t *testing.T) {\n // Test that the rune splitter returns same sequence of runes (not bytes) as for range string.\n func TestScanRune(t *testing.T) {\n \tfor n, test := range scanTests {\n-\t\tbuf := bytes.NewBufferString(test)\n+\t\tbuf := strings.NewReader(test)\n \t\ts := NewScanner(buf)\n \t\ts.Split(ScanRunes)\n \t\tvar i, runeCount int\n@@ -104,7 +104,7 @@ var wordScanTests = []string{\n // Test that the word splitter returns the same data as strings.Fields.\n func TestScanWords(t *testing.T) {\n \tfor n, test := range wordScanTests {\n-\t\tbuf := bytes.NewBufferString(test)\n+\t\tbuf := strings.NewReader(test)\n \t\ts := NewScanner(buf)\n \t\ts.Split(ScanWords)\n \t\twords := strings.Fields(test)\n@@ -135,7 +135,7 @@ func TestScanWords(t *testing.T) {\n // reads in Scanner.Scan.\n type slowReader struct {\n \tmax int\n-\tbuf *bytes.Buffer\n+\tbuf io.Reader\n }\n \n func (sr *slowReader) Read(p []byte) (n int, err error) {\n@@ -248,7 +248,7 @@ func TestScanLineTooLong(t *testing.T) {\n \n // Test that the line splitter handles a final line without a newline.\n func testNoNewline(text string, lines []string, t *testing.T) {\n-\tbuf := bytes.NewBufferString(text)\n+\tbuf := strings.NewReader(text)\n \ts := NewScanner(&slowReader{7, buf})\n \ts.Split(ScanLines)\n \tfor lineNum := 0; s.Scan(); lineNum++ {\n@@ -328,7 +328,7 @@ func TestSplitError(t *testing.T) {\n \t}\n \t// Read the data.\n \tconst text = \"abcdefghijklmnopqrstuvwxyz\"\n-\tbuf := bytes.NewBufferString(text)\n+\tbuf := strings.NewReader(text)\n \ts := NewScanner(&slowReader{1, buf})\n \ts.Split(errorSplit)\n \tvar i int"}, {"sha": "cd647e5ae0048031b17d2f2331cf969a24475ada", "filename": "libgo/go/compress/bzip2/bzip2_test.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fbzip2%2Fbzip2_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fbzip2%2Fbzip2_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fbzip2%2Fbzip2_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -14,7 +14,7 @@ import (\n )\n \n func TestBitReader(t *testing.T) {\n-\tbuf := bytes.NewBuffer([]byte{0xaa})\n+\tbuf := bytes.NewReader([]byte{0xaa})\n \tbr := newBitReader(buf)\n \tif n := br.ReadBits(1); n != 1 {\n \t\tt.Errorf(\"read 1 wrong\")\n@@ -31,7 +31,7 @@ func TestBitReader(t *testing.T) {\n }\n \n func TestBitReaderLarge(t *testing.T) {\n-\tbuf := bytes.NewBuffer([]byte{0x12, 0x34, 0x56, 0x78})\n+\tbuf := bytes.NewReader([]byte{0x12, 0x34, 0x56, 0x78})\n \tbr := newBitReader(buf)\n \tif n := br.ReadBits(32); n != 0x12345678 {\n \t\tt.Errorf(\"got: %x want: %x\", n, 0x12345678)\n@@ -43,7 +43,7 @@ func readerFromHex(s string) io.Reader {\n \tif err != nil {\n \t\tpanic(\"readerFromHex: bad input\")\n \t}\n-\treturn bytes.NewBuffer(data)\n+\treturn bytes.NewReader(data)\n }\n \n func decompressHex(s string) (out []byte, err error) {\n@@ -191,7 +191,7 @@ func benchmarkDecode(b *testing.B, testfile int) {\n \t}\n \tb.SetBytes(int64(len(compressed)))\n \tfor i := 0; i < b.N; i++ {\n-\t\tr := bytes.NewBuffer(compressed)\n+\t\tr := bytes.NewReader(compressed)\n \t\tio.Copy(ioutil.Discard, NewReader(r))\n \t}\n }\n@@ -201,7 +201,7 @@ func BenchmarkDecodeTwain(b *testing.B)  { benchmarkDecode(b, twain) }\n \n func TestBufferOverrun(t *testing.T) {\n \t// Tests https://code.google.com/p/go/issues/detail?id=5747.\n-\tbuffer := bytes.NewBuffer([]byte(bufferOverrunBase64))\n+\tbuffer := bytes.NewReader([]byte(bufferOverrunBase64))\n \tdecoder := base64.NewDecoder(base64.StdEncoding, buffer)\n \tdecompressor := NewReader(decoder)\n \t// This shouldn't panic."}, {"sha": "75a6223d8134c42fb41ba9c95050a2bc2c45271e", "filename": "libgo/go/compress/bzip2/huffman.go", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fbzip2%2Fhuffman.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fbzip2%2Fhuffman.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fbzip2%2Fhuffman.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -190,7 +190,37 @@ func buildHuffmanNode(t *huffmanTree, codes []huffmanCode, level uint32) (nodeIn\n \tright := codes[firstRightIndex:]\n \n \tif len(left) == 0 || len(right) == 0 {\n-\t\treturn 0, StructuralError(\"superfluous level in Huffman tree\")\n+\t\t// There is a superfluous level in the Huffman tree indicating\n+\t\t// a bug in the encoder. However, this bug has been observed in\n+\t\t// the wild so we handle it.\n+\n+\t\t// If this function was called recursively then we know that\n+\t\t// len(codes) >= 2 because, otherwise, we would have hit the\n+\t\t// \"leaf node\" case, below, and not recursed.\n+\t\t//\n+\t\t// However, for the initial call it's possible that len(codes)\n+\t\t// is zero or one. Both cases are invalid because a zero length\n+\t\t// tree cannot encode anything and a length-1 tree can only\n+\t\t// encode EOF and so is superfluous. We reject both.\n+\t\tif len(codes) < 2 {\n+\t\t\treturn 0, StructuralError(\"empty Huffman tree\")\n+\t\t}\n+\n+\t\t// In this case the recursion doesn't always reduce the length\n+\t\t// of codes so we need to ensure termination via another\n+\t\t// mechanism.\n+\t\tif level == 31 {\n+\t\t\t// Since len(codes) >= 2 the only way that the values\n+\t\t\t// can match at all 32 bits is if they are equal, which\n+\t\t\t// is invalid. This ensures that we never enter\n+\t\t\t// infinite recursion.\n+\t\t\treturn 0, StructuralError(\"equal symbols in Huffman tree\")\n+\t\t}\n+\n+\t\tif len(left) == 0 {\n+\t\t\treturn buildHuffmanNode(t, right, level+1)\n+\t\t}\n+\t\treturn buildHuffmanNode(t, left, level+1)\n \t}\n \n \tnodeIndex = uint16(t.nextNode)"}, {"sha": "068766323358ecb74ab82c63c5f4e0c9636c5d93", "filename": "libgo/go/compress/flate/flate_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fflate%2Fflate_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fflate%2Fflate_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fflate%2Fflate_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -14,7 +14,7 @@ import (\n )\n \n func TestUncompressedSource(t *testing.T) {\n-\tdecoder := NewReader(bytes.NewBuffer([]byte{0x01, 0x01, 0x00, 0xfe, 0xff, 0x11}))\n+\tdecoder := NewReader(bytes.NewReader([]byte{0x01, 0x01, 0x00, 0xfe, 0xff, 0x11}))\n \toutput := make([]byte, 1)\n \tn, error := decoder.Read(output)\n \tif n != 1 || error != nil {"}, {"sha": "561537373770fdb5713aa151dba523ba008dca36", "filename": "libgo/go/compress/gzip/gunzip_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fgzip%2Fgunzip_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fgzip%2Fgunzip_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fgzip%2Fgunzip_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -284,7 +284,7 @@ var gunzipTests = []gunzipTest{\n func TestDecompressor(t *testing.T) {\n \tb := new(bytes.Buffer)\n \tfor _, tt := range gunzipTests {\n-\t\tin := bytes.NewBuffer(tt.gzip)\n+\t\tin := bytes.NewReader(tt.gzip)\n \t\tgzip, err := NewReader(in)\n \t\tif err != nil {\n \t\t\tt.Errorf(\"%s: NewReader: %s\", tt.name, err)"}, {"sha": "09271b24e92037492a7e9e753ec58f96a88d8ace", "filename": "libgo/go/compress/gzip/gzip_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fgzip%2Fgzip_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fgzip%2Fgzip_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fgzip%2Fgzip_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -85,7 +85,7 @@ func TestRoundTrip(t *testing.T) {\n func TestLatin1(t *testing.T) {\n \tlatin1 := []byte{0xc4, 'u', 0xdf, 'e', 'r', 'u', 'n', 'g', 0}\n \tutf8 := \"\u00c4u\u00dferung\"\n-\tz := Reader{r: bufio.NewReader(bytes.NewBuffer(latin1))}\n+\tz := Reader{r: bufio.NewReader(bytes.NewReader(latin1))}\n \ts, err := z.readString()\n \tif err != nil {\n \t\tt.Fatalf(\"readString: %v\", err)"}, {"sha": "9006c91c233c62bf5ca585c5c652451322223a1b", "filename": "libgo/go/compress/lzw/reader_test.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Flzw%2Freader_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Flzw%2Freader_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Flzw%2Freader_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -127,15 +127,15 @@ func benchmarkDecoder(b *testing.B, n int) {\n \t\tif len(buf0) > n-i {\n \t\t\tbuf0 = buf0[:n-i]\n \t\t}\n-\t\tio.Copy(w, bytes.NewBuffer(buf0))\n+\t\tw.Write(buf0)\n \t}\n \tw.Close()\n \tbuf1 := compressed.Bytes()\n \tbuf0, compressed, w = nil, nil, nil\n \truntime.GC()\n \tb.StartTimer()\n \tfor i := 0; i < b.N; i++ {\n-\t\tio.Copy(ioutil.Discard, NewReader(bytes.NewBuffer(buf1), LSB, 8))\n+\t\tio.Copy(ioutil.Discard, NewReader(bytes.NewReader(buf1), LSB, 8))\n \t}\n }\n "}, {"sha": "218ccba14110fcdcd0a64a778891c377d454284b", "filename": "libgo/go/compress/zlib/reader_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fzlib%2Freader_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcompress%2Fzlib%2Freader_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fzlib%2Freader_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -102,7 +102,7 @@ var zlibTests = []zlibTest{\n func TestDecompressor(t *testing.T) {\n \tb := new(bytes.Buffer)\n \tfor _, tt := range zlibTests {\n-\t\tin := bytes.NewBuffer(tt.compressed)\n+\t\tin := bytes.NewReader(tt.compressed)\n \t\tzlib, err := NewReaderDict(in, tt.dict)\n \t\tif err != nil {\n \t\t\tif err != tt.err {"}, {"sha": "3fe2327ad2dab76673edc1b63e6a1eb07d5b9d6c", "filename": "libgo/go/container/heap/heap.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcontainer%2Fheap%2Fheap.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcontainer%2Fheap%2Fheap.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Fheap%2Fheap.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -22,7 +22,7 @@ import \"sort\"\n // min-heap with the following invariants (established after\n // Init has been called or if the data is empty or sorted):\n //\n-//\t!h.Less(j, i) for 0 <= i < h.Len() and j = 2*i+1 or 2*i+2 and j < h.Len()\n+//\t!h.Less(j, i) for 0 <= i < h.Len() and 2*i+1 <= j <= 2*i+2 and j < h.Len()\n //\n // Note that Push and Pop in this interface are for package heap's\n // implementation to call.  To add and remove things from the heap,"}, {"sha": "0256768efe58adab88c3a89a60946b606e6336a0", "filename": "libgo/go/container/list/list.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcontainer%2Flist%2Flist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcontainer%2Flist%2Flist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Flist%2Flist.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -180,18 +180,18 @@ func (l *List) MoveToBack(e *Element) {\n }\n \n // MoveBefore moves element e to its new position before mark.\n-// If e is not an element of l, or e == mark, the list is not modified.\n+// If e or mark is not an element of l, or e == mark, the list is not modified.\n func (l *List) MoveBefore(e, mark *Element) {\n-\tif e.list != l || e == mark {\n+\tif e.list != l || e == mark || mark.list != l {\n \t\treturn\n \t}\n \tl.insert(l.remove(e), mark.prev)\n }\n \n // MoveAfter moves element e to its new position after mark.\n-// If e is not an element of l, or e == mark, the list is not modified.\n+// If e or mark is not an element of l, or e == mark, the list is not modified.\n func (l *List) MoveAfter(e, mark *Element) {\n-\tif e.list != l || e == mark {\n+\tif e.list != l || e == mark || mark.list != l {\n \t\treturn\n \t}\n \tl.insert(l.remove(e), mark)"}, {"sha": "4d8bfc2bf0791bd6148420e374e306e1a0dd3beb", "filename": "libgo/go/container/list/list_test.go", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcontainer%2Flist%2Flist_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcontainer%2Flist%2Flist_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Flist%2Flist_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -324,3 +324,20 @@ func TestInsertAfterUnknownMark(t *testing.T) {\n \tl.InsertAfter(1, new(Element))\n \tcheckList(t, &l, []interface{}{1, 2, 3})\n }\n+\n+// Test that a list l is not modified when calling MoveAfter or MoveBefore with a mark that is not an element of l.\n+func TestMoveUnkownMark(t *testing.T) {\n+\tvar l1 List\n+\te1 := l1.PushBack(1)\n+\n+\tvar l2 List\n+\te2 := l2.PushBack(2)\n+\n+\tl1.MoveAfter(e1, e2)\n+\tcheckList(t, &l1, []interface{}{1})\n+\tcheckList(t, &l2, []interface{}{2})\n+\n+\tl1.MoveBefore(e1, e2)\n+\tcheckList(t, &l1, []interface{}{1})\n+\tcheckList(t, &l2, []interface{}{2})\n+}"}, {"sha": "241e122ee80079e31e36d6b545ba9b00a4893fd6", "filename": "libgo/go/crypto/cipher/cbc.go", "status": "modified", "additions": 40, "deletions": 10, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -48,13 +48,22 @@ func (x *cbcEncrypter) CryptBlocks(dst, src []byte) {\n \tif len(dst) < len(src) {\n \t\tpanic(\"crypto/cipher: output smaller than input\")\n \t}\n+\n+\tiv := x.iv\n+\n \tfor len(src) > 0 {\n-\t\txorBytes(x.iv, x.iv, src[:x.blockSize])\n-\t\tx.b.Encrypt(x.iv, x.iv)\n-\t\tcopy(dst, x.iv)\n+\t\t// Write the xor to dst, then encrypt in place.\n+\t\txorBytes(dst[:x.blockSize], src[:x.blockSize], iv)\n+\t\tx.b.Encrypt(dst[:x.blockSize], dst[:x.blockSize])\n+\n+\t\t// Move to the next block with this block as the next iv.\n+\t\tiv = dst[:x.blockSize]\n \t\tsrc = src[x.blockSize:]\n \t\tdst = dst[x.blockSize:]\n \t}\n+\n+\t// Save the iv for the next CryptBlocks call.\n+\tcopy(x.iv, iv)\n }\n \n func (x *cbcEncrypter) SetIV(iv []byte) {\n@@ -85,14 +94,35 @@ func (x *cbcDecrypter) CryptBlocks(dst, src []byte) {\n \tif len(dst) < len(src) {\n \t\tpanic(\"crypto/cipher: output smaller than input\")\n \t}\n-\tfor len(src) > 0 {\n-\t\tx.b.Decrypt(x.tmp, src[:x.blockSize])\n-\t\txorBytes(x.tmp, x.tmp, x.iv)\n-\t\tcopy(x.iv, src)\n-\t\tcopy(dst, x.tmp)\n-\t\tsrc = src[x.blockSize:]\n-\t\tdst = dst[x.blockSize:]\n+\tif len(src) == 0 {\n+\t\treturn\n \t}\n+\n+\t// For each block, we need to xor the decrypted data with the previous block's ciphertext (the iv).\n+\t// To avoid making a copy each time, we loop over the blocks BACKWARDS.\n+\tend := len(src)\n+\tstart := end - x.blockSize\n+\tprev := start - x.blockSize\n+\n+\t// Copy the last block of ciphertext in preparation as the new iv.\n+\tcopy(x.tmp, src[start:end])\n+\n+\t// Loop over all but the first block.\n+\tfor start > 0 {\n+\t\tx.b.Decrypt(dst[start:end], src[start:end])\n+\t\txorBytes(dst[start:end], dst[start:end], src[prev:start])\n+\n+\t\tend = start\n+\t\tstart = prev\n+\t\tprev -= x.blockSize\n+\t}\n+\n+\t// The first block is special because it uses the saved iv.\n+\tx.b.Decrypt(dst[start:end], src[start:end])\n+\txorBytes(dst[start:end], dst[start:end], x.iv)\n+\n+\t// Set the new iv to the first block we copied earlier.\n+\tx.iv, x.tmp = x.tmp, x.iv\n }\n \n func (x *cbcDecrypter) SetIV(iv []byte) {"}, {"sha": "bf9e7ad7018a290cbd199cd50ebd49e12cae3068", "filename": "libgo/go/crypto/cipher/cbc_aes_test.go", "status": "modified", "additions": 30, "deletions": 16, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc_aes_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc_aes_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc_aes_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -63,28 +63,42 @@ var cbcAESTests = []struct {\n \t},\n }\n \n-func TestCBC_AES(t *testing.T) {\n-\tfor _, tt := range cbcAESTests {\n-\t\ttest := tt.name\n-\n-\t\tc, err := aes.NewCipher(tt.key)\n+func TestCBCEncrypterAES(t *testing.T) {\n+\tfor _, test := range cbcAESTests {\n+\t\tc, err := aes.NewCipher(test.key)\n \t\tif err != nil {\n-\t\t\tt.Errorf(\"%s: NewCipher(%d bytes) = %s\", test, len(tt.key), err)\n+\t\t\tt.Errorf(\"%s: NewCipher(%d bytes) = %s\", test.name, len(test.key), err)\n \t\t\tcontinue\n \t\t}\n \n-\t\tencrypter := cipher.NewCBCEncrypter(c, tt.iv)\n-\t\td := make([]byte, len(tt.in))\n-\t\tencrypter.CryptBlocks(d, tt.in)\n-\t\tif !bytes.Equal(tt.out, d) {\n-\t\t\tt.Errorf(\"%s: CBCEncrypter\\nhave %x\\nwant %x\", test, d, tt.out)\n+\t\tencrypter := cipher.NewCBCEncrypter(c, test.iv)\n+\n+\t\tdata := make([]byte, len(test.in))\n+\t\tcopy(data, test.in)\n+\n+\t\tencrypter.CryptBlocks(data, data)\n+\t\tif !bytes.Equal(test.out, data) {\n+\t\t\tt.Errorf(\"%s: CBCEncrypter\\nhave %x\\nwant %x\", test.name, data, test.out)\n \t\t}\n+\t}\n+}\n+\n+func TestCBCDecrypterAES(t *testing.T) {\n+\tfor _, test := range cbcAESTests {\n+\t\tc, err := aes.NewCipher(test.key)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"%s: NewCipher(%d bytes) = %s\", test.name, len(test.key), err)\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tdecrypter := cipher.NewCBCDecrypter(c, test.iv)\n+\n+\t\tdata := make([]byte, len(test.out))\n+\t\tcopy(data, test.out)\n \n-\t\tdecrypter := cipher.NewCBCDecrypter(c, tt.iv)\n-\t\tp := make([]byte, len(d))\n-\t\tdecrypter.CryptBlocks(p, d)\n-\t\tif !bytes.Equal(tt.in, p) {\n-\t\t\tt.Errorf(\"%s: CBCDecrypter\\nhave %x\\nwant %x\", test, d, tt.in)\n+\t\tdecrypter.CryptBlocks(data, data)\n+\t\tif !bytes.Equal(test.in, data) {\n+\t\t\tt.Errorf(\"%s: CBCDecrypter\\nhave %x\\nwant %x\", test.name, data, test.in)\n \t\t}\n \t}\n }"}, {"sha": "75295e4fcb070a21ad94bb491da7e858a2db3aa5", "filename": "libgo/go/crypto/md5/gen.go", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fgen.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fgen.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fmd5%2Fgen.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -167,8 +167,6 @@ var program = `// Copyright 2013 The Go Authors. All rights reserved.\n // DO NOT EDIT.\n // Generate with: go run gen.go{{if .Full}} -full{{end}} | gofmt >md5block.go\n \n-// +build !amd64,!386,!arm\n-\n package md5\n \n import (\n@@ -204,7 +202,7 @@ func init() {\n \tlittleEndian = *(*[4]byte)(unsafe.Pointer(&x)) == y\n }\n \n-func block(dig *digest, p []byte) {\n+func blockGeneric(dig *digest, p []byte) {\n \ta := dig.s[0]\n \tb := dig.s[1]\n \tc := dig.s[2]"}, {"sha": "e7faf4961e43cce6c96c515bd38b39c0a874719d", "filename": "libgo/go/crypto/md5/md5_test.go", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,6 +5,7 @@\n package md5\n \n import (\n+\t\"crypto/rand\"\n \t\"fmt\"\n \t\"io\"\n \t\"testing\"\n@@ -105,6 +106,18 @@ func TestLarge(t *testing.T) {\n \t}\n }\n \n+// Tests that blockGeneric (pure Go) and block (in assembly for amd64, 386, arm) match.\n+func TestBlockGeneric(t *testing.T) {\n+\tgen, asm := New().(*digest), New().(*digest)\n+\tbuf := make([]byte, BlockSize*20) // arbitrary factor\n+\trand.Read(buf)\n+\tblockGeneric(gen, buf)\n+\tblock(asm, buf)\n+\tif *gen != *asm {\n+\t\tt.Error(\"block and blockGeneric resulted in different states\")\n+\t}\n+}\n+\n var bench = New()\n var buf = make([]byte, 8192+1)\n var sum = make([]byte, bench.Size())"}, {"sha": "e2a17677757e55ac0b07d2477513fb38734524ba", "filename": "libgo/go/crypto/md5/md5block.go", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,8 +5,6 @@\n // DO NOT EDIT.\n // Generate with: go run gen.go -full | gofmt >md5block.go\n \n-// +build !amd64,!386,!arm\n-\n package md5\n \n import (\n@@ -24,7 +22,7 @@ func init() {\n \tlittleEndian = *(*[4]byte)(unsafe.Pointer(&x)) == y\n }\n \n-func block(dig *digest, p []byte) {\n+func blockGeneric(dig *digest, p []byte) {\n \ta := dig.s[0]\n \tb := dig.s[1]\n \tc := dig.s[2]"}, {"sha": "239bf4d2152b2f6b5a541bd1300abecabd7b3435", "filename": "libgo/go/crypto/md5/md5block_generic.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block_generic.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block_generic.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block_generic.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !amd64,!386,!arm\n+\n+package md5\n+\n+var block = blockGeneric"}, {"sha": "0fbd7eaf5794bab6492f4e84d894df833cf42bf6", "filename": "libgo/go/crypto/rand/rand_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frand%2Frand_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frand%2Frand_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frand%2Frand_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd plan9\n+// +build darwin dragonfly freebsd linux netbsd openbsd plan9 solaris\n \n // Unix cryptographically secure pseudorandom number\n // generator."}, {"sha": "1e2a4dd84b715da3478e242f69e48e80552bb425", "filename": "libgo/go/crypto/rand/util_test.go", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frand%2Futil_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frand%2Futil_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frand%2Futil_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -6,6 +6,7 @@ package rand_test\n \n import (\n \t\"crypto/rand\"\n+\t\"math/big\"\n \t\"testing\"\n )\n \n@@ -24,3 +25,41 @@ func TestPrimeSmall(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+// Test that passing bits < 2 causes Prime to return nil, error\n+func TestPrimeBitsLt2(t *testing.T) {\n+\tif p, err := rand.Prime(rand.Reader, 1); p != nil || err == nil {\n+\t\tt.Errorf(\"Prime should return nil, error when called with bits < 2\")\n+\t}\n+}\n+\n+func TestInt(t *testing.T) {\n+\t// start at 128 so the case of (max.BitLen() % 8) == 0 is covered\n+\tfor n := 128; n < 140; n++ {\n+\t\tb := new(big.Int).SetInt64(int64(n))\n+\t\tif i, err := rand.Int(rand.Reader, b); err != nil {\n+\t\t\tt.Fatalf(\"Can't generate random value: %v, %v\", i, err)\n+\t\t}\n+\t}\n+}\n+\n+func testIntPanics(t *testing.T, b *big.Int) {\n+\tdefer func() {\n+\t\tif err := recover(); err == nil {\n+\t\t\tt.Errorf(\"Int should panic when called with max <= 0: %v\", b)\n+\t\t}\n+\t}()\n+\trand.Int(rand.Reader, b)\n+}\n+\n+// Test that passing a new big.Int as max causes Int to panic\n+func TestIntEmptyMaxPanics(t *testing.T) {\n+\tb := new(big.Int)\n+\ttestIntPanics(t, b)\n+}\n+\n+// Test that passing a negative value as max causes Int to panic\n+func TestIntNegativeMaxPanics(t *testing.T) {\n+\tb := new(big.Int).SetInt64(int64(-1))\n+\ttestIntPanics(t, b)\n+}"}, {"sha": "9acb681bfb64e5f8ae875049ed9d071d4f65a0f2", "filename": "libgo/go/crypto/rc4/rc4.go", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -50,3 +50,20 @@ func (c *Cipher) Reset() {\n \t}\n \tc.i, c.j = 0, 0\n }\n+\n+// xorKeyStreamGeneric sets dst to the result of XORing src with the\n+// key stream.  Dst and src may be the same slice but otherwise should\n+// not overlap.\n+//\n+// This is the pure Go version. rc4_{amd64,386,arm}* contain assembly\n+// implementations. This is here for tests and to prevent bitrot.\n+func (c *Cipher) xorKeyStreamGeneric(dst, src []byte) {\n+\ti, j := c.i, c.j\n+\tfor k, v := range src {\n+\t\ti += 1\n+\t\tj += uint8(c.s[i])\n+\t\tc.s[i], c.s[j] = c.s[j], c.s[i]\n+\t\tdst[k] = v ^ uint8(c.s[uint8(c.s[i]+c.s[j])])\n+\t}\n+\tc.i, c.j = i, j\n+}"}, {"sha": "bdf5e1db2ddf127801d7b182bacf0e08d726adf6", "filename": "libgo/go/crypto/rc4/rc4_ref.go", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_ref.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_ref.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_ref.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -9,12 +9,5 @@ package rc4\n // XORKeyStream sets dst to the result of XORing src with the key stream.\n // Dst and src may be the same slice but otherwise should not overlap.\n func (c *Cipher) XORKeyStream(dst, src []byte) {\n-\ti, j := c.i, c.j\n-\tfor k, v := range src {\n-\t\ti += 1\n-\t\tj += uint8(c.s[i])\n-\t\tc.s[i], c.s[j] = c.s[j], c.s[i]\n-\t\tdst[k] = v ^ uint8(c.s[uint8(c.s[i]+c.s[j])])\n-\t}\n-\tc.i, c.j = i, j\n+\tc.xorKeyStreamGeneric(dst, src)\n }"}, {"sha": "af7988246329d5c4018db2506ebcfcb19427e071", "filename": "libgo/go/crypto/rc4/rc4_test.go", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -117,19 +117,30 @@ func TestGolden(t *testing.T) {\n }\n \n func TestBlock(t *testing.T) {\n+\ttestBlock(t, (*Cipher).XORKeyStream)\n+}\n+\n+// Test the pure Go version.\n+// Because we have assembly for amd64, 386, and arm, this prevents\n+// bitrot of the reference implementations.\n+func TestBlockGeneric(t *testing.T) {\n+\ttestBlock(t, (*Cipher).xorKeyStreamGeneric)\n+}\n+\n+func testBlock(t *testing.T, xor func(c *Cipher, dst, src []byte)) {\n \tc1a, _ := NewCipher(golden[0].key)\n \tc1b, _ := NewCipher(golden[1].key)\n \tdata1 := make([]byte, 1<<20)\n \tfor i := range data1 {\n-\t\tc1a.XORKeyStream(data1[i:i+1], data1[i:i+1])\n-\t\tc1b.XORKeyStream(data1[i:i+1], data1[i:i+1])\n+\t\txor(c1a, data1[i:i+1], data1[i:i+1])\n+\t\txor(c1b, data1[i:i+1], data1[i:i+1])\n \t}\n \n \tc2a, _ := NewCipher(golden[0].key)\n \tc2b, _ := NewCipher(golden[1].key)\n \tdata2 := make([]byte, 1<<20)\n-\tc2a.XORKeyStream(data2, data2)\n-\tc2b.XORKeyStream(data2, data2)\n+\txor(c2a, data2, data2)\n+\txor(c2b, data2, data2)\n \n \tif !bytes.Equal(data1, data2) {\n \t\tt.Fatalf(\"bad block\")"}, {"sha": "c8f1febe64705e2306c794036c7c64045d371050", "filename": "libgo/go/crypto/rsa/rsa.go", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frsa%2Frsa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frsa%2Frsa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frsa%2Frsa.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -120,16 +120,18 @@ func (priv *PrivateKey) Validate() error {\n \treturn nil\n }\n \n-// GenerateKey generates an RSA keypair of the given bit size.\n+// GenerateKey generates an RSA keypair of the given bit size using the\n+// random source random (for example, crypto/rand.Reader).\n func GenerateKey(random io.Reader, bits int) (priv *PrivateKey, err error) {\n \treturn GenerateMultiPrimeKey(random, 2, bits)\n }\n \n // GenerateMultiPrimeKey generates a multi-prime RSA keypair of the given bit\n-// size, as suggested in [1]. Although the public keys are compatible\n-// (actually, indistinguishable) from the 2-prime case, the private keys are\n-// not. Thus it may not be possible to export multi-prime private keys in\n-// certain formats or to subsequently import them into other code.\n+// size and the given random source, as suggested in [1]. Although the public\n+// keys are compatible (actually, indistinguishable) from the 2-prime case,\n+// the private keys are not. Thus it may not be possible to export multi-prime\n+// private keys in certain formats or to subsequently import them into other\n+// code.\n //\n // Table 1 in [2] suggests maximum numbers of primes for a given size.\n //"}, {"sha": "4ee1c3a8b2afc6e4be23c041f7b40629a61c1e1b", "filename": "libgo/go/crypto/rsa/rsa_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frsa%2Frsa_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Frsa%2Frsa_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frsa%2Frsa_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -197,7 +197,7 @@ func TestEncryptOAEP(t *testing.T) {\n \t\tpublic := PublicKey{n, test.e}\n \n \t\tfor j, message := range test.msgs {\n-\t\t\trandomSource := bytes.NewBuffer(message.seed)\n+\t\t\trandomSource := bytes.NewReader(message.seed)\n \t\t\tout, err := EncryptOAEP(sha1, randomSource, &public, message.in, nil)\n \t\t\tif err != nil {\n \t\t\t\tt.Errorf(\"#%d,%d error: %s\", i, j, err)"}, {"sha": "4a629518b761eb3c64813c35c0305a6f227fcbe2", "filename": "libgo/go/crypto/sha1/sha1_test.go", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -7,6 +7,7 @@\n package sha1\n \n import (\n+\t\"crypto/rand\"\n \t\"fmt\"\n \t\"io\"\n \t\"testing\"\n@@ -90,6 +91,18 @@ func TestBlockSize(t *testing.T) {\n \t}\n }\n \n+// Tests that blockGeneric (pure Go) and block (in assembly for amd64, 386, arm) match.\n+func TestBlockGeneric(t *testing.T) {\n+\tgen, asm := New().(*digest), New().(*digest)\n+\tbuf := make([]byte, BlockSize*20) // arbitrary factor\n+\trand.Read(buf)\n+\tblockGeneric(gen, buf)\n+\tblock(asm, buf)\n+\tif *gen != *asm {\n+\t\tt.Error(\"block and blockGeneric resulted in different states\")\n+\t}\n+}\n+\n var bench = New()\n var buf = make([]byte, 8192)\n "}, {"sha": "fde3c981c083f46c24b620c63758200df8c238b0", "filename": "libgo/go/crypto/sha1/sha1block.go", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,12 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build !amd64,!386\n-\n-// SHA1 block step.\n-// In its own file so that a faster assembly or C version\n-// can be substituted easily.\n-\n package sha1\n \n const (\n@@ -17,7 +11,9 @@ const (\n \t_K3 = 0xCA62C1D6\n )\n \n-func block(dig *digest, p []byte) {\n+// blockGeneric is a portable, pure Go version of the SHA1 block step.\n+// It's used by sha1block_generic.go and tests.\n+func blockGeneric(dig *digest, p []byte) {\n \tvar w [16]uint32\n \n \th0, h1, h2, h3, h4 := dig.h[0], dig.h[1], dig.h[2], dig.h[3], dig.h[4]"}, {"sha": "b2c68f0e8baaf2f1d65d18f278530e4ebe1afea4", "filename": "libgo/go/crypto/sha1/sha1block_decl.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block_decl.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block_decl.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block_decl.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build amd64 386\n+// +build amd64 386 arm\n \n package sha1\n "}, {"sha": "2c78683aa49c9e2cd31486479fc8728e889fa3a3", "filename": "libgo/go/crypto/sha1/sha1block_generic.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block_generic.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block_generic.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1block_generic.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !amd64,!386,!arm\n+\n+package sha1\n+\n+var block = blockGeneric"}, {"sha": "de1a4e8c54da1a4c59d6f88b9b3e78a9fe68f44e", "filename": "libgo/go/crypto/subtle/constant_time.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -10,6 +10,10 @@ package subtle\n // and y, have equal contents. The time taken is a function of the length of\n // the slices and is independent of the contents.\n func ConstantTimeCompare(x, y []byte) int {\n+\tif len(x) != len(y) {\n+\t\tpanic(\"subtle: slices have different lengths\")\n+\t}\n+\n \tvar v byte\n \n \tfor i := 0; i < len(x); i++ {"}, {"sha": "7ce2077de41aaf70b3f687c63f0414e435f8bf7d", "filename": "libgo/go/crypto/tls/common.go", "status": "modified", "additions": 116, "deletions": 5, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fcommon.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fcommon.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fcommon.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,9 +5,11 @@\n package tls\n \n import (\n+\t\"container/list\"\n \t\"crypto\"\n \t\"crypto/rand\"\n \t\"crypto/x509\"\n+\t\"fmt\"\n \t\"io\"\n \t\"math/big\"\n \t\"strings\"\n@@ -64,27 +66,33 @@ const (\n )\n \n // TLS extension numbers\n-var (\n+const (\n \textensionServerName          uint16 = 0\n \textensionStatusRequest       uint16 = 5\n \textensionSupportedCurves     uint16 = 10\n \textensionSupportedPoints     uint16 = 11\n \textensionSignatureAlgorithms uint16 = 13\n \textensionSessionTicket       uint16 = 35\n \textensionNextProtoNeg        uint16 = 13172 // not IANA assigned\n+\textensionRenegotiationInfo   uint16 = 0xff01\n+)\n+\n+// TLS signaling cipher suite values\n+const (\n+\tscsvRenegotiation uint16 = 0x00ff\n )\n \n // TLS Elliptic Curves\n // http://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8\n-var (\n+const (\n \tcurveP256 uint16 = 23\n \tcurveP384 uint16 = 24\n \tcurveP521 uint16 = 25\n )\n \n // TLS Elliptic Curve Point Formats\n // http://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-9\n-var (\n+const (\n \tpointFormatUncompressed uint8 = 0\n )\n \n@@ -167,6 +175,29 @@ const (\n \tRequireAndVerifyClientCert\n )\n \n+// ClientSessionState contains the state needed by clients to resume TLS\n+// sessions.\n+type ClientSessionState struct {\n+\tsessionTicket      []uint8             // Encrypted ticket used for session resumption with server\n+\tvers               uint16              // SSL/TLS version negotiated for the session\n+\tcipherSuite        uint16              // Ciphersuite negotiated for the session\n+\tmasterSecret       []byte              // MasterSecret generated by client on a full handshake\n+\tserverCertificates []*x509.Certificate // Certificate chain presented by the server\n+}\n+\n+// ClientSessionCache is a cache of ClientSessionState objects that can be used\n+// by a client to resume a TLS session with a given server. ClientSessionCache\n+// implementations should expect to be called concurrently from different\n+// goroutines.\n+type ClientSessionCache interface {\n+\t// Get searches for a ClientSessionState associated with the given key.\n+\t// On return, ok is true if one was found.\n+\tGet(sessionKey string) (session *ClientSessionState, ok bool)\n+\n+\t// Put adds the ClientSessionState to the cache with the given key.\n+\tPut(sessionKey string, cs *ClientSessionState)\n+}\n+\n // A Config structure is used to configure a TLS client or server. After one\n // has been passed to a TLS function it must not be modified.\n type Config struct {\n@@ -200,8 +231,9 @@ type Config struct {\n \t// NextProtos is a list of supported, application level protocols.\n \tNextProtos []string\n \n-\t// ServerName is included in the client's handshake to support virtual\n-\t// hosting.\n+\t// ServerName is used to verify the hostname on the returned\n+\t// certificates unless InsecureSkipVerify is given. It is also included\n+\t// in the client's handshake to support virtual hosting.\n \tServerName string\n \n \t// ClientAuth determines the server's policy for\n@@ -245,6 +277,10 @@ type Config struct {\n \t// connections using that key are compromised.\n \tSessionTicketKey [32]byte\n \n+\t// SessionCache is a cache of ClientSessionState entries for TLS session\n+\t// resumption.\n+\tClientSessionCache ClientSessionCache\n+\n \t// MinVersion contains the minimum SSL/TLS version that is acceptable.\n \t// If zero, then SSLv3 is taken as the minimum.\n \tMinVersion uint16\n@@ -406,6 +442,77 @@ type handshakeMessage interface {\n \tunmarshal([]byte) bool\n }\n \n+// lruSessionCache is a ClientSessionCache implementation that uses an LRU\n+// caching strategy.\n+type lruSessionCache struct {\n+\tsync.Mutex\n+\n+\tm        map[string]*list.Element\n+\tq        *list.List\n+\tcapacity int\n+}\n+\n+type lruSessionCacheEntry struct {\n+\tsessionKey string\n+\tstate      *ClientSessionState\n+}\n+\n+// NewLRUClientSessionCache returns a ClientSessionCache with the given\n+// capacity that uses an LRU strategy. If capacity is < 1, a default capacity\n+// is used instead.\n+func NewLRUClientSessionCache(capacity int) ClientSessionCache {\n+\tconst defaultSessionCacheCapacity = 64\n+\n+\tif capacity < 1 {\n+\t\tcapacity = defaultSessionCacheCapacity\n+\t}\n+\treturn &lruSessionCache{\n+\t\tm:        make(map[string]*list.Element),\n+\t\tq:        list.New(),\n+\t\tcapacity: capacity,\n+\t}\n+}\n+\n+// Put adds the provided (sessionKey, cs) pair to the cache.\n+func (c *lruSessionCache) Put(sessionKey string, cs *ClientSessionState) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\n+\tif elem, ok := c.m[sessionKey]; ok {\n+\t\tentry := elem.Value.(*lruSessionCacheEntry)\n+\t\tentry.state = cs\n+\t\tc.q.MoveToFront(elem)\n+\t\treturn\n+\t}\n+\n+\tif c.q.Len() < c.capacity {\n+\t\tentry := &lruSessionCacheEntry{sessionKey, cs}\n+\t\tc.m[sessionKey] = c.q.PushFront(entry)\n+\t\treturn\n+\t}\n+\n+\telem := c.q.Back()\n+\tentry := elem.Value.(*lruSessionCacheEntry)\n+\tdelete(c.m, entry.sessionKey)\n+\tentry.sessionKey = sessionKey\n+\tentry.state = cs\n+\tc.q.MoveToFront(elem)\n+\tc.m[sessionKey] = elem\n+}\n+\n+// Get returns the ClientSessionState value associated with a given key. It\n+// returns (nil, false) if no value is found.\n+func (c *lruSessionCache) Get(sessionKey string) (*ClientSessionState, bool) {\n+\tc.Lock()\n+\tdefer c.Unlock()\n+\n+\tif elem, ok := c.m[sessionKey]; ok {\n+\t\tc.q.MoveToFront(elem)\n+\t\treturn elem.Value.(*lruSessionCacheEntry).state, true\n+\t}\n+\treturn nil, false\n+}\n+\n // TODO(jsing): Make these available to both crypto/x509 and crypto/tls.\n type dsaSignature struct {\n \tR, S *big.Int\n@@ -435,3 +542,7 @@ func initDefaultCipherSuites() {\n \t\tvarDefaultCipherSuites[i] = suite.id\n \t}\n }\n+\n+func unexpectedMessageError(wanted, got interface{}) error {\n+\treturn fmt.Errorf(\"tls: received unexpected handshake message of type %T when waiting for %T\", got, wanted)\n+}"}, {"sha": "c33549c9efffa3ee83d17b6f6d21e0eaef213483", "filename": "libgo/go/crypto/tls/conn.go", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fconn.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fconn.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fconn.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -12,6 +12,7 @@ import (\n \t\"crypto/subtle\"\n \t\"crypto/x509\"\n \t\"errors\"\n+\t\"fmt\"\n \t\"io\"\n \t\"net\"\n \t\"sync\"\n@@ -518,14 +519,17 @@ func (c *Conn) readRecord(want recordType) error {\n \t// else application data.  (We don't support renegotiation.)\n \tswitch want {\n \tdefault:\n-\t\treturn c.sendAlert(alertInternalError)\n+\t\tc.sendAlert(alertInternalError)\n+\t\treturn errors.New(\"tls: unknown record type requested\")\n \tcase recordTypeHandshake, recordTypeChangeCipherSpec:\n \t\tif c.handshakeComplete {\n-\t\t\treturn c.sendAlert(alertInternalError)\n+\t\t\tc.sendAlert(alertInternalError)\n+\t\t\treturn errors.New(\"tls: handshake or ChangeCipherSpec requested after handshake complete\")\n \t\t}\n \tcase recordTypeApplicationData:\n \t\tif !c.handshakeComplete {\n-\t\t\treturn c.sendAlert(alertInternalError)\n+\t\t\tc.sendAlert(alertInternalError)\n+\t\t\treturn errors.New(\"tls: application data record requested before handshake complete\")\n \t\t}\n \t}\n \n@@ -562,10 +566,12 @@ Again:\n \tvers := uint16(b.data[1])<<8 | uint16(b.data[2])\n \tn := int(b.data[3])<<8 | int(b.data[4])\n \tif c.haveVers && vers != c.vers {\n-\t\treturn c.sendAlert(alertProtocolVersion)\n+\t\tc.sendAlert(alertProtocolVersion)\n+\t\treturn fmt.Errorf(\"tls: received record with version %x when expecting version %x\", vers, c.vers)\n \t}\n \tif n > maxCiphertext {\n-\t\treturn c.sendAlert(alertRecordOverflow)\n+\t\tc.sendAlert(alertRecordOverflow)\n+\t\treturn fmt.Errorf(\"tls: oversized record received with length %d\", n)\n \t}\n \tif !c.haveVers {\n \t\t// First message, be extra suspicious:\n@@ -577,7 +583,8 @@ Again:\n \t\t// well under a kilobyte.  If the length is >= 12 kB,\n \t\t// it's probably not real.\n \t\tif (typ != recordTypeAlert && typ != want) || vers >= 0x1000 || n >= 0x3000 {\n-\t\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\t\treturn fmt.Errorf(\"tls: first record does not look like a TLS handshake\")\n \t\t}\n \t}\n \tif err := b.readFromUntil(c.conn, recordHeaderLen+n); err != nil {\n@@ -799,6 +806,8 @@ func (c *Conn) readHandshake() (interface{}, error) {\n \t\tm = new(clientHelloMsg)\n \tcase typeServerHello:\n \t\tm = new(serverHelloMsg)\n+\tcase typeNewSessionTicket:\n+\t\tm = new(newSessionTicketMsg)\n \tcase typeCertificate:\n \t\tm = new(certificateMsg)\n \tcase typeCertificateRequest:\n@@ -988,10 +997,10 @@ func (c *Conn) VerifyHostname(host string) error {\n \tc.handshakeMutex.Lock()\n \tdefer c.handshakeMutex.Unlock()\n \tif !c.isClient {\n-\t\treturn errors.New(\"VerifyHostname called on TLS server connection\")\n+\t\treturn errors.New(\"tls: VerifyHostname called on TLS server connection\")\n \t}\n \tif !c.handshakeComplete {\n-\t\treturn errors.New(\"TLS handshake has not yet been performed\")\n+\t\treturn errors.New(\"tls: handshake has not yet been performed\")\n \t}\n \treturn c.peerCertificates[0].VerifyHostname(host)\n }"}, {"sha": "fd1303eebb947ff7d3a35ad46530c44f6460a05c", "filename": "libgo/go/crypto/tls/handshake_client.go", "status": "modified", "additions": 271, "deletions": 85, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -12,24 +12,37 @@ import (\n \t\"crypto/x509\"\n \t\"encoding/asn1\"\n \t\"errors\"\n+\t\"fmt\"\n \t\"io\"\n+\t\"net\"\n \t\"strconv\"\n )\n \n+type clientHandshakeState struct {\n+\tc            *Conn\n+\tserverHello  *serverHelloMsg\n+\thello        *clientHelloMsg\n+\tsuite        *cipherSuite\n+\tfinishedHash finishedHash\n+\tmasterSecret []byte\n+\tsession      *ClientSessionState\n+}\n+\n func (c *Conn) clientHandshake() error {\n \tif c.config == nil {\n \t\tc.config = defaultConfig()\n \t}\n \n \thello := &clientHelloMsg{\n-\t\tvers:               c.config.maxVersion(),\n-\t\tcompressionMethods: []uint8{compressionNone},\n-\t\trandom:             make([]byte, 32),\n-\t\tocspStapling:       true,\n-\t\tserverName:         c.config.ServerName,\n-\t\tsupportedCurves:    []uint16{curveP256, curveP384, curveP521},\n-\t\tsupportedPoints:    []uint8{pointFormatUncompressed},\n-\t\tnextProtoNeg:       len(c.config.NextProtos) > 0,\n+\t\tvers:                c.config.maxVersion(),\n+\t\tcompressionMethods:  []uint8{compressionNone},\n+\t\trandom:              make([]byte, 32),\n+\t\tocspStapling:        true,\n+\t\tserverName:          c.config.ServerName,\n+\t\tsupportedCurves:     []uint16{curveP256, curveP384, curveP521},\n+\t\tsupportedPoints:     []uint8{pointFormatUncompressed},\n+\t\tnextProtoNeg:        len(c.config.NextProtos) > 0,\n+\t\tsecureRenegotiation: true,\n \t}\n \n \tpossibleCipherSuites := c.config.cipherSuites()\n@@ -51,21 +64,61 @@ NextCipherSuite:\n \t\t}\n \t}\n \n-\tt := uint32(c.config.time().Unix())\n-\thello.random[0] = byte(t >> 24)\n-\thello.random[1] = byte(t >> 16)\n-\thello.random[2] = byte(t >> 8)\n-\thello.random[3] = byte(t)\n-\t_, err := io.ReadFull(c.config.rand(), hello.random[4:])\n+\t_, err := io.ReadFull(c.config.rand(), hello.random)\n \tif err != nil {\n \t\tc.sendAlert(alertInternalError)\n-\t\treturn errors.New(\"short read from Rand\")\n+\t\treturn errors.New(\"tls: short read from Rand: \" + err.Error())\n \t}\n \n \tif hello.vers >= VersionTLS12 {\n \t\thello.signatureAndHashes = supportedSKXSignatureAlgorithms\n \t}\n \n+\tvar session *ClientSessionState\n+\tvar cacheKey string\n+\tsessionCache := c.config.ClientSessionCache\n+\tif c.config.SessionTicketsDisabled {\n+\t\tsessionCache = nil\n+\t}\n+\n+\tif sessionCache != nil {\n+\t\thello.ticketSupported = true\n+\n+\t\t// Try to resume a previously negotiated TLS session, if\n+\t\t// available.\n+\t\tcacheKey = clientSessionCacheKey(c.conn.RemoteAddr(), c.config)\n+\t\tcandidateSession, ok := sessionCache.Get(cacheKey)\n+\t\tif ok {\n+\t\t\t// Check that the ciphersuite/version used for the\n+\t\t\t// previous session are still valid.\n+\t\t\tcipherSuiteOk := false\n+\t\t\tfor _, id := range hello.cipherSuites {\n+\t\t\t\tif id == candidateSession.cipherSuite {\n+\t\t\t\t\tcipherSuiteOk = true\n+\t\t\t\t\tbreak\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tversOk := candidateSession.vers >= c.config.minVersion() &&\n+\t\t\t\tcandidateSession.vers <= c.config.maxVersion()\n+\t\t\tif versOk && cipherSuiteOk {\n+\t\t\t\tsession = candidateSession\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tif session != nil {\n+\t\thello.sessionTicket = session.sessionTicket\n+\t\t// A random session ID is used to detect when the\n+\t\t// server accepted the ticket and is resuming a session\n+\t\t// (see RFC 5077).\n+\t\thello.sessionId = make([]byte, 16)\n+\t\tif _, err := io.ReadFull(c.config.rand(), hello.sessionId); err != nil {\n+\t\t\tc.sendAlert(alertInternalError)\n+\t\t\treturn errors.New(\"tls: short read from Rand: \" + err.Error())\n+\t\t}\n+\t}\n+\n \tc.writeRecord(recordTypeHandshake, hello.marshal())\n \n \tmsg, err := c.readHandshake()\n@@ -74,51 +127,103 @@ NextCipherSuite:\n \t}\n \tserverHello, ok := msg.(*serverHelloMsg)\n \tif !ok {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(serverHello, msg)\n \t}\n \n \tvers, ok := c.config.mutualVersion(serverHello.vers)\n \tif !ok || vers < VersionTLS10 {\n \t\t// TLS 1.0 is the minimum version supported as a client.\n-\t\treturn c.sendAlert(alertProtocolVersion)\n+\t\tc.sendAlert(alertProtocolVersion)\n+\t\treturn fmt.Errorf(\"tls: server selected unsupported protocol version %x\", serverHello.vers)\n \t}\n \tc.vers = vers\n \tc.haveVers = true\n \n-\tfinishedHash := newFinishedHash(c.vers)\n-\tfinishedHash.Write(hello.marshal())\n-\tfinishedHash.Write(serverHello.marshal())\n+\tsuite := mutualCipherSuite(c.config.cipherSuites(), serverHello.cipherSuite)\n+\tif suite == nil {\n+\t\tc.sendAlert(alertHandshakeFailure)\n+\t\treturn fmt.Errorf(\"tls: server selected an unsupported cipher suite\")\n+\t}\n \n-\tif serverHello.compressionMethod != compressionNone {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\ths := &clientHandshakeState{\n+\t\tc:            c,\n+\t\tserverHello:  serverHello,\n+\t\thello:        hello,\n+\t\tsuite:        suite,\n+\t\tfinishedHash: newFinishedHash(c.vers),\n+\t\tsession:      session,\n \t}\n \n-\tif !hello.nextProtoNeg && serverHello.nextProtoNeg {\n-\t\tc.sendAlert(alertHandshakeFailure)\n-\t\treturn errors.New(\"server advertised unrequested NPN\")\n+\ths.finishedHash.Write(hs.hello.marshal())\n+\ths.finishedHash.Write(hs.serverHello.marshal())\n+\n+\tisResume, err := hs.processServerHello()\n+\tif err != nil {\n+\t\treturn err\n \t}\n \n-\tsuite := mutualCipherSuite(c.config.cipherSuites(), serverHello.cipherSuite)\n-\tif suite == nil {\n-\t\treturn c.sendAlert(alertHandshakeFailure)\n+\tif isResume {\n+\t\tif err := hs.establishKeys(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.readSessionTicket(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.readFinished(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.sendFinished(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t} else {\n+\t\tif err := hs.doFullHandshake(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.establishKeys(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.sendFinished(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.readSessionTicket(); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := hs.readFinished(); err != nil {\n+\t\t\treturn err\n+\t\t}\n \t}\n \n-\tmsg, err = c.readHandshake()\n+\tif sessionCache != nil && hs.session != nil && session != hs.session {\n+\t\tsessionCache.Put(cacheKey, hs.session)\n+\t}\n+\n+\tc.didResume = isResume\n+\tc.handshakeComplete = true\n+\tc.cipherSuite = suite.id\n+\treturn nil\n+}\n+\n+func (hs *clientHandshakeState) doFullHandshake() error {\n+\tc := hs.c\n+\n+\tmsg, err := c.readHandshake()\n \tif err != nil {\n \t\treturn err\n \t}\n \tcertMsg, ok := msg.(*certificateMsg)\n \tif !ok || len(certMsg.certificates) == 0 {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(certMsg, msg)\n \t}\n-\tfinishedHash.Write(certMsg.marshal())\n+\ths.finishedHash.Write(certMsg.marshal())\n \n \tcerts := make([]*x509.Certificate, len(certMsg.certificates))\n \tfor i, asn1Data := range certMsg.certificates {\n \t\tcert, err := x509.ParseCertificate(asn1Data)\n \t\tif err != nil {\n \t\t\tc.sendAlert(alertBadCertificate)\n-\t\t\treturn errors.New(\"failed to parse certificate from server: \" + err.Error())\n+\t\t\treturn errors.New(\"tls: failed to parse certificate from server: \" + err.Error())\n \t\t}\n \t\tcerts[i] = cert\n \t}\n@@ -148,21 +253,23 @@ NextCipherSuite:\n \tcase *rsa.PublicKey, *ecdsa.PublicKey:\n \t\tbreak\n \tdefault:\n-\t\treturn c.sendAlert(alertUnsupportedCertificate)\n+\t\tc.sendAlert(alertUnsupportedCertificate)\n+\t\treturn fmt.Errorf(\"tls: server's certificate contains an unsupported type of public key: %T\", certs[0].PublicKey)\n \t}\n \n \tc.peerCertificates = certs\n \n-\tif serverHello.ocspStapling {\n+\tif hs.serverHello.ocspStapling {\n \t\tmsg, err = c.readHandshake()\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}\n \t\tcs, ok := msg.(*certificateStatusMsg)\n \t\tif !ok {\n-\t\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\t\treturn unexpectedMessageError(cs, msg)\n \t\t}\n-\t\tfinishedHash.Write(cs.marshal())\n+\t\ths.finishedHash.Write(cs.marshal())\n \n \t\tif cs.statusType == statusTypeOCSP {\n \t\t\tc.ocspResponse = cs.response\n@@ -174,12 +281,12 @@ NextCipherSuite:\n \t\treturn err\n \t}\n \n-\tkeyAgreement := suite.ka(c.vers)\n+\tkeyAgreement := hs.suite.ka(c.vers)\n \n \tskx, ok := msg.(*serverKeyExchangeMsg)\n \tif ok {\n-\t\tfinishedHash.Write(skx.marshal())\n-\t\terr = keyAgreement.processServerKeyExchange(c.config, hello, serverHello, certs[0], skx)\n+\t\ths.finishedHash.Write(skx.marshal())\n+\t\terr = keyAgreement.processServerKeyExchange(c.config, hs.hello, hs.serverHello, certs[0], skx)\n \t\tif err != nil {\n \t\t\tc.sendAlert(alertUnexpectedMessage)\n \t\t\treturn err\n@@ -208,7 +315,7 @@ NextCipherSuite:\n \t\t// ClientCertificateType, unless there is some external\n \t\t// arrangement to the contrary.\n \n-\t\tfinishedHash.Write(certReq.marshal())\n+\t\ths.finishedHash.Write(certReq.marshal())\n \n \t\tvar rsaAvail, ecdsaAvail bool\n \t\tfor _, certType := range certReq.certificateTypes {\n@@ -271,9 +378,10 @@ NextCipherSuite:\n \n \tshd, ok := msg.(*serverHelloDoneMsg)\n \tif !ok {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(shd, msg)\n \t}\n-\tfinishedHash.Write(shd.marshal())\n+\ths.finishedHash.Write(shd.marshal())\n \n \t// If the server requested a certificate then we have to send a\n \t// Certificate message, even if it's empty because we don't have a\n@@ -283,17 +391,17 @@ NextCipherSuite:\n \t\tif chainToSend != nil {\n \t\t\tcertMsg.certificates = chainToSend.Certificate\n \t\t}\n-\t\tfinishedHash.Write(certMsg.marshal())\n+\t\ths.finishedHash.Write(certMsg.marshal())\n \t\tc.writeRecord(recordTypeHandshake, certMsg.marshal())\n \t}\n \n-\tpreMasterSecret, ckx, err := keyAgreement.generateClientKeyExchange(c.config, hello, certs[0])\n+\tpreMasterSecret, ckx, err := keyAgreement.generateClientKeyExchange(c.config, hs.hello, certs[0])\n \tif err != nil {\n \t\tc.sendAlert(alertInternalError)\n \t\treturn err\n \t}\n \tif ckx != nil {\n-\t\tfinishedHash.Write(ckx.marshal())\n+\t\ths.finishedHash.Write(ckx.marshal())\n \t\tc.writeRecord(recordTypeHandshake, ckx.marshal())\n \t}\n \n@@ -305,95 +413,173 @@ NextCipherSuite:\n \n \t\tswitch key := c.config.Certificates[0].PrivateKey.(type) {\n \t\tcase *ecdsa.PrivateKey:\n-\t\t\tdigest, _, hashId := finishedHash.hashForClientCertificate(signatureECDSA)\n+\t\t\tdigest, _, hashId := hs.finishedHash.hashForClientCertificate(signatureECDSA)\n \t\t\tr, s, err := ecdsa.Sign(c.config.rand(), key, digest)\n \t\t\tif err == nil {\n \t\t\t\tsigned, err = asn1.Marshal(ecdsaSignature{r, s})\n \t\t\t}\n \t\t\tcertVerify.signatureAndHash.signature = signatureECDSA\n \t\t\tcertVerify.signatureAndHash.hash = hashId\n \t\tcase *rsa.PrivateKey:\n-\t\t\tdigest, hashFunc, hashId := finishedHash.hashForClientCertificate(signatureRSA)\n+\t\t\tdigest, hashFunc, hashId := hs.finishedHash.hashForClientCertificate(signatureRSA)\n \t\t\tsigned, err = rsa.SignPKCS1v15(c.config.rand(), key, hashFunc, digest)\n \t\t\tcertVerify.signatureAndHash.signature = signatureRSA\n \t\t\tcertVerify.signatureAndHash.hash = hashId\n \t\tdefault:\n \t\t\terr = errors.New(\"unknown private key type\")\n \t\t}\n \t\tif err != nil {\n-\t\t\treturn c.sendAlert(alertInternalError)\n+\t\t\tc.sendAlert(alertInternalError)\n+\t\t\treturn errors.New(\"tls: failed to sign handshake with client certificate: \" + err.Error())\n \t\t}\n \t\tcertVerify.signature = signed\n \n-\t\tfinishedHash.Write(certVerify.marshal())\n+\t\ths.finishedHash.Write(certVerify.marshal())\n \t\tc.writeRecord(recordTypeHandshake, certVerify.marshal())\n \t}\n \n-\tmasterSecret := masterFromPreMasterSecret(c.vers, preMasterSecret, hello.random, serverHello.random)\n-\tclientMAC, serverMAC, clientKey, serverKey, clientIV, serverIV :=\n-\t\tkeysFromMasterSecret(c.vers, masterSecret, hello.random, serverHello.random, suite.macLen, suite.keyLen, suite.ivLen)\n+\ths.masterSecret = masterFromPreMasterSecret(c.vers, preMasterSecret, hs.hello.random, hs.serverHello.random)\n+\treturn nil\n+}\n+\n+func (hs *clientHandshakeState) establishKeys() error {\n+\tc := hs.c\n \n-\tvar clientCipher interface{}\n-\tvar clientHash macFunction\n-\tif suite.cipher != nil {\n-\t\tclientCipher = suite.cipher(clientKey, clientIV, false /* not for reading */)\n-\t\tclientHash = suite.mac(c.vers, clientMAC)\n+\tclientMAC, serverMAC, clientKey, serverKey, clientIV, serverIV :=\n+\t\tkeysFromMasterSecret(c.vers, hs.masterSecret, hs.hello.random, hs.serverHello.random, hs.suite.macLen, hs.suite.keyLen, hs.suite.ivLen)\n+\tvar clientCipher, serverCipher interface{}\n+\tvar clientHash, serverHash macFunction\n+\tif hs.suite.cipher != nil {\n+\t\tclientCipher = hs.suite.cipher(clientKey, clientIV, false /* not for reading */)\n+\t\tclientHash = hs.suite.mac(c.vers, clientMAC)\n+\t\tserverCipher = hs.suite.cipher(serverKey, serverIV, true /* for reading */)\n+\t\tserverHash = hs.suite.mac(c.vers, serverMAC)\n \t} else {\n-\t\tclientCipher = suite.aead(clientKey, clientIV)\n+\t\tclientCipher = hs.suite.aead(clientKey, clientIV)\n+\t\tserverCipher = hs.suite.aead(serverKey, serverIV)\n \t}\n+\n+\tc.in.prepareCipherSpec(c.vers, serverCipher, serverHash)\n \tc.out.prepareCipherSpec(c.vers, clientCipher, clientHash)\n-\tc.writeRecord(recordTypeChangeCipherSpec, []byte{1})\n+\treturn nil\n+}\n \n-\tif serverHello.nextProtoNeg {\n-\t\tnextProto := new(nextProtoMsg)\n-\t\tproto, fallback := mutualProtocol(c.config.NextProtos, serverHello.nextProtos)\n-\t\tnextProto.proto = proto\n-\t\tc.clientProtocol = proto\n-\t\tc.clientProtocolFallback = fallback\n+func (hs *clientHandshakeState) serverResumedSession() bool {\n+\t// If the server responded with the same sessionId then it means the\n+\t// sessionTicket is being used to resume a TLS session.\n+\treturn hs.session != nil && hs.hello.sessionId != nil &&\n+\t\tbytes.Equal(hs.serverHello.sessionId, hs.hello.sessionId)\n+}\n \n-\t\tfinishedHash.Write(nextProto.marshal())\n-\t\tc.writeRecord(recordTypeHandshake, nextProto.marshal())\n+func (hs *clientHandshakeState) processServerHello() (bool, error) {\n+\tc := hs.c\n+\n+\tif hs.serverHello.compressionMethod != compressionNone {\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn false, errors.New(\"tls: server selected unsupported compression format\")\n \t}\n \n-\tfinished := new(finishedMsg)\n-\tfinished.verifyData = finishedHash.clientSum(masterSecret)\n-\tfinishedHash.Write(finished.marshal())\n-\tc.writeRecord(recordTypeHandshake, finished.marshal())\n+\tif !hs.hello.nextProtoNeg && hs.serverHello.nextProtoNeg {\n+\t\tc.sendAlert(alertHandshakeFailure)\n+\t\treturn false, errors.New(\"server advertised unrequested NPN extension\")\n+\t}\n \n-\tvar serverCipher interface{}\n-\tvar serverHash macFunction\n-\tif suite.cipher != nil {\n-\t\tserverCipher = suite.cipher(serverKey, serverIV, true /* for reading */)\n-\t\tserverHash = suite.mac(c.vers, serverMAC)\n-\t} else {\n-\t\tserverCipher = suite.aead(serverKey, serverIV)\n+\tif hs.serverResumedSession() {\n+\t\t// Restore masterSecret and peerCerts from previous state\n+\t\ths.masterSecret = hs.session.masterSecret\n+\t\tc.peerCertificates = hs.session.serverCertificates\n+\t\treturn true, nil\n \t}\n-\tc.in.prepareCipherSpec(c.vers, serverCipher, serverHash)\n+\treturn false, nil\n+}\n+\n+func (hs *clientHandshakeState) readFinished() error {\n+\tc := hs.c\n+\n \tc.readRecord(recordTypeChangeCipherSpec)\n \tif err := c.error(); err != nil {\n \t\treturn err\n \t}\n \n-\tmsg, err = c.readHandshake()\n+\tmsg, err := c.readHandshake()\n \tif err != nil {\n \t\treturn err\n \t}\n \tserverFinished, ok := msg.(*finishedMsg)\n \tif !ok {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(serverFinished, msg)\n \t}\n \n-\tverify := finishedHash.serverSum(masterSecret)\n+\tverify := hs.finishedHash.serverSum(hs.masterSecret)\n \tif len(verify) != len(serverFinished.verifyData) ||\n \t\tsubtle.ConstantTimeCompare(verify, serverFinished.verifyData) != 1 {\n-\t\treturn c.sendAlert(alertHandshakeFailure)\n+\t\tc.sendAlert(alertHandshakeFailure)\n+\t\treturn errors.New(\"tls: server's Finished message was incorrect\")\n \t}\n+\ths.finishedHash.Write(serverFinished.marshal())\n+\treturn nil\n+}\n \n-\tc.handshakeComplete = true\n-\tc.cipherSuite = suite.id\n+func (hs *clientHandshakeState) readSessionTicket() error {\n+\tif !hs.serverHello.ticketSupported {\n+\t\treturn nil\n+\t}\n+\n+\tc := hs.c\n+\tmsg, err := c.readHandshake()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tsessionTicketMsg, ok := msg.(*newSessionTicketMsg)\n+\tif !ok {\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(sessionTicketMsg, msg)\n+\t}\n+\ths.finishedHash.Write(sessionTicketMsg.marshal())\n+\n+\ths.session = &ClientSessionState{\n+\t\tsessionTicket:      sessionTicketMsg.ticket,\n+\t\tvers:               c.vers,\n+\t\tcipherSuite:        hs.suite.id,\n+\t\tmasterSecret:       hs.masterSecret,\n+\t\tserverCertificates: c.peerCertificates,\n+\t}\n+\n+\treturn nil\n+}\n+\n+func (hs *clientHandshakeState) sendFinished() error {\n+\tc := hs.c\n+\n+\tc.writeRecord(recordTypeChangeCipherSpec, []byte{1})\n+\tif hs.serverHello.nextProtoNeg {\n+\t\tnextProto := new(nextProtoMsg)\n+\t\tproto, fallback := mutualProtocol(c.config.NextProtos, hs.serverHello.nextProtos)\n+\t\tnextProto.proto = proto\n+\t\tc.clientProtocol = proto\n+\t\tc.clientProtocolFallback = fallback\n+\n+\t\ths.finishedHash.Write(nextProto.marshal())\n+\t\tc.writeRecord(recordTypeHandshake, nextProto.marshal())\n+\t}\n+\n+\tfinished := new(finishedMsg)\n+\tfinished.verifyData = hs.finishedHash.clientSum(hs.masterSecret)\n+\ths.finishedHash.Write(finished.marshal())\n+\tc.writeRecord(recordTypeHandshake, finished.marshal())\n \treturn nil\n }\n \n+// clientSessionCacheKey returns a key used to cache sessionTickets that could\n+// be used to resume previously negotiated TLS sessions with a server.\n+func clientSessionCacheKey(serverAddr net.Addr, config *Config) string {\n+\tif len(config.ServerName) > 0 {\n+\t\treturn config.ServerName\n+\t}\n+\treturn serverAddr.String()\n+}\n+\n // mutualProtocol finds the mutual Next Protocol Negotiation protocol given the\n // set of client and server supported protocols. The set of client supported\n // protocols must not be empty. It returns the resulting protocol and flag"}, {"sha": "0d73c8e2f97fccb2e46ff6d5781414e0b8a9aa21", "filename": "libgo/go/crypto/tls/handshake_client_test.go", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -353,3 +353,87 @@ func TestHandshakeClientCertECDSA(t *testing.T) {\n \trunClientTestTLS10(t, test)\n \trunClientTestTLS12(t, test)\n }\n+\n+func TestClientResumption(t *testing.T) {\n+\tserverConfig := &Config{\n+\t\tCipherSuites: []uint16{TLS_RSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_RC4_128_SHA},\n+\t\tCertificates: testConfig.Certificates,\n+\t}\n+\tclientConfig := &Config{\n+\t\tCipherSuites:       []uint16{TLS_RSA_WITH_RC4_128_SHA},\n+\t\tInsecureSkipVerify: true,\n+\t\tClientSessionCache: NewLRUClientSessionCache(32),\n+\t}\n+\n+\ttestResumeState := func(test string, didResume bool) {\n+\t\ths, err := testHandshake(clientConfig, serverConfig)\n+\t\tif err != nil {\n+\t\t\tt.Fatalf(\"%s: handshake failed: %s\", test, err)\n+\t\t}\n+\t\tif hs.DidResume != didResume {\n+\t\t\tt.Fatalf(\"%s resumed: %v, expected: %v\", test, hs.DidResume, didResume)\n+\t\t}\n+\t}\n+\n+\ttestResumeState(\"Handshake\", false)\n+\ttestResumeState(\"Resume\", true)\n+\n+\tif _, err := io.ReadFull(serverConfig.rand(), serverConfig.SessionTicketKey[:]); err != nil {\n+\t\tt.Fatalf(\"Failed to invalidate SessionTicketKey\")\n+\t}\n+\ttestResumeState(\"InvalidSessionTicketKey\", false)\n+\ttestResumeState(\"ResumeAfterInvalidSessionTicketKey\", true)\n+\n+\tclientConfig.CipherSuites = []uint16{TLS_ECDHE_RSA_WITH_RC4_128_SHA}\n+\ttestResumeState(\"DifferentCipherSuite\", false)\n+\ttestResumeState(\"DifferentCipherSuiteRecovers\", true)\n+\n+\tclientConfig.ClientSessionCache = nil\n+\ttestResumeState(\"WithoutSessionCache\", false)\n+}\n+\n+func TestLRUClientSessionCache(t *testing.T) {\n+\t// Initialize cache of capacity 4.\n+\tcache := NewLRUClientSessionCache(4)\n+\tcs := make([]ClientSessionState, 6)\n+\tkeys := []string{\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"}\n+\n+\t// Add 4 entries to the cache and look them up.\n+\tfor i := 0; i < 4; i++ {\n+\t\tcache.Put(keys[i], &cs[i])\n+\t}\n+\tfor i := 0; i < 4; i++ {\n+\t\tif s, ok := cache.Get(keys[i]); !ok || s != &cs[i] {\n+\t\t\tt.Fatalf(\"session cache failed lookup for added key: %s\", keys[i])\n+\t\t}\n+\t}\n+\n+\t// Add 2 more entries to the cache. First 2 should be evicted.\n+\tfor i := 4; i < 6; i++ {\n+\t\tcache.Put(keys[i], &cs[i])\n+\t}\n+\tfor i := 0; i < 2; i++ {\n+\t\tif s, ok := cache.Get(keys[i]); ok || s != nil {\n+\t\t\tt.Fatalf(\"session cache should have evicted key: %s\", keys[i])\n+\t\t}\n+\t}\n+\n+\t// Touch entry 2. LRU should evict 3 next.\n+\tcache.Get(keys[2])\n+\tcache.Put(keys[0], &cs[0])\n+\tif s, ok := cache.Get(keys[3]); ok || s != nil {\n+\t\tt.Fatalf(\"session cache should have evicted key 3\")\n+\t}\n+\n+\t// Update entry 0 in place.\n+\tcache.Put(keys[0], &cs[3])\n+\tif s, ok := cache.Get(keys[0]); !ok || s != &cs[3] {\n+\t\tt.Fatalf(\"session cache failed update for key 0\")\n+\t}\n+\n+\t// Adding a nil entry is valid.\n+\tcache.Put(keys[0], nil)\n+\tif s, ok := cache.Get(keys[0]); !ok || s != nil {\n+\t\tt.Fatalf(\"failed to add nil entry to cache\")\n+\t}\n+}"}, {"sha": "fbdd0b9a78f4433ef10d9274ac56584cef116104", "filename": "libgo/go/crypto/tls/handshake_messages.go", "status": "modified", "additions": 68, "deletions": 29, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_messages.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_messages.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_messages.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -7,20 +7,21 @@ package tls\n import \"bytes\"\n \n type clientHelloMsg struct {\n-\traw                []byte\n-\tvers               uint16\n-\trandom             []byte\n-\tsessionId          []byte\n-\tcipherSuites       []uint16\n-\tcompressionMethods []uint8\n-\tnextProtoNeg       bool\n-\tserverName         string\n-\tocspStapling       bool\n-\tsupportedCurves    []uint16\n-\tsupportedPoints    []uint8\n-\tticketSupported    bool\n-\tsessionTicket      []uint8\n-\tsignatureAndHashes []signatureAndHash\n+\traw                 []byte\n+\tvers                uint16\n+\trandom              []byte\n+\tsessionId           []byte\n+\tcipherSuites        []uint16\n+\tcompressionMethods  []uint8\n+\tnextProtoNeg        bool\n+\tserverName          string\n+\tocspStapling        bool\n+\tsupportedCurves     []uint16\n+\tsupportedPoints     []uint8\n+\tticketSupported     bool\n+\tsessionTicket       []uint8\n+\tsignatureAndHashes  []signatureAndHash\n+\tsecureRenegotiation bool\n }\n \n func (m *clientHelloMsg) equal(i interface{}) bool {\n@@ -42,7 +43,8 @@ func (m *clientHelloMsg) equal(i interface{}) bool {\n \t\tbytes.Equal(m.supportedPoints, m1.supportedPoints) &&\n \t\tm.ticketSupported == m1.ticketSupported &&\n \t\tbytes.Equal(m.sessionTicket, m1.sessionTicket) &&\n-\t\teqSignatureAndHashes(m.signatureAndHashes, m1.signatureAndHashes)\n+\t\teqSignatureAndHashes(m.signatureAndHashes, m1.signatureAndHashes) &&\n+\t\tm.secureRenegotiation == m1.secureRenegotiation\n }\n \n func (m *clientHelloMsg) marshal() []byte {\n@@ -80,6 +82,10 @@ func (m *clientHelloMsg) marshal() []byte {\n \t\textensionsLength += 2 + 2*len(m.signatureAndHashes)\n \t\tnumExtensions++\n \t}\n+\tif m.secureRenegotiation {\n+\t\textensionsLength += 1\n+\t\tnumExtensions++\n+\t}\n \tif numExtensions > 0 {\n \t\textensionsLength += 4 * numExtensions\n \t\tlength += 2 + extensionsLength\n@@ -114,13 +120,13 @@ func (m *clientHelloMsg) marshal() []byte {\n \t}\n \tif m.nextProtoNeg {\n \t\tz[0] = byte(extensionNextProtoNeg >> 8)\n-\t\tz[1] = byte(extensionNextProtoNeg)\n+\t\tz[1] = byte(extensionNextProtoNeg & 0xff)\n \t\t// The length is always 0\n \t\tz = z[4:]\n \t}\n \tif len(m.serverName) > 0 {\n \t\tz[0] = byte(extensionServerName >> 8)\n-\t\tz[1] = byte(extensionServerName)\n+\t\tz[1] = byte(extensionServerName & 0xff)\n \t\tl := len(m.serverName) + 5\n \t\tz[2] = byte(l >> 8)\n \t\tz[3] = byte(l)\n@@ -224,6 +230,13 @@ func (m *clientHelloMsg) marshal() []byte {\n \t\t\tz = z[2:]\n \t\t}\n \t}\n+\tif m.secureRenegotiation {\n+\t\tz[0] = byte(extensionRenegotiationInfo >> 8)\n+\t\tz[1] = byte(extensionRenegotiationInfo & 0xff)\n+\t\tz[2] = 0\n+\t\tz[3] = 1\n+\t\tz = z[5:]\n+\t}\n \n \tm.raw = x\n \n@@ -256,6 +269,9 @@ func (m *clientHelloMsg) unmarshal(data []byte) bool {\n \tm.cipherSuites = make([]uint16, numCipherSuites)\n \tfor i := 0; i < numCipherSuites; i++ {\n \t\tm.cipherSuites[i] = uint16(data[2+2*i])<<8 | uint16(data[3+2*i])\n+\t\tif m.cipherSuites[i] == scsvRenegotiation {\n+\t\t\tm.secureRenegotiation = true\n+\t\t}\n \t}\n \tdata = data[2+cipherSuiteLen:]\n \tif len(data) < 1 {\n@@ -379,6 +395,11 @@ func (m *clientHelloMsg) unmarshal(data []byte) bool {\n \t\t\t\tm.signatureAndHashes[i].signature = d[1]\n \t\t\t\td = d[2:]\n \t\t\t}\n+\t\tcase extensionRenegotiationInfo + 1:\n+\t\t\tif length != 1 || data[0] != 0 {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t\tm.secureRenegotiation = true\n \t\t}\n \t\tdata = data[length:]\n \t}\n@@ -387,16 +408,17 @@ func (m *clientHelloMsg) unmarshal(data []byte) bool {\n }\n \n type serverHelloMsg struct {\n-\traw               []byte\n-\tvers              uint16\n-\trandom            []byte\n-\tsessionId         []byte\n-\tcipherSuite       uint16\n-\tcompressionMethod uint8\n-\tnextProtoNeg      bool\n-\tnextProtos        []string\n-\tocspStapling      bool\n-\tticketSupported   bool\n+\traw                 []byte\n+\tvers                uint16\n+\trandom              []byte\n+\tsessionId           []byte\n+\tcipherSuite         uint16\n+\tcompressionMethod   uint8\n+\tnextProtoNeg        bool\n+\tnextProtos          []string\n+\tocspStapling        bool\n+\tticketSupported     bool\n+\tsecureRenegotiation bool\n }\n \n func (m *serverHelloMsg) equal(i interface{}) bool {\n@@ -414,7 +436,8 @@ func (m *serverHelloMsg) equal(i interface{}) bool {\n \t\tm.nextProtoNeg == m1.nextProtoNeg &&\n \t\teqStrings(m.nextProtos, m1.nextProtos) &&\n \t\tm.ocspStapling == m1.ocspStapling &&\n-\t\tm.ticketSupported == m1.ticketSupported\n+\t\tm.ticketSupported == m1.ticketSupported &&\n+\t\tm.secureRenegotiation == m1.secureRenegotiation\n }\n \n func (m *serverHelloMsg) marshal() []byte {\n@@ -441,6 +464,10 @@ func (m *serverHelloMsg) marshal() []byte {\n \tif m.ticketSupported {\n \t\tnumExtensions++\n \t}\n+\tif m.secureRenegotiation {\n+\t\textensionsLength += 1\n+\t\tnumExtensions++\n+\t}\n \tif numExtensions > 0 {\n \t\textensionsLength += 4 * numExtensions\n \t\tlength += 2 + extensionsLength\n@@ -469,7 +496,7 @@ func (m *serverHelloMsg) marshal() []byte {\n \t}\n \tif m.nextProtoNeg {\n \t\tz[0] = byte(extensionNextProtoNeg >> 8)\n-\t\tz[1] = byte(extensionNextProtoNeg)\n+\t\tz[1] = byte(extensionNextProtoNeg & 0xff)\n \t\tz[2] = byte(nextProtoLen >> 8)\n \t\tz[3] = byte(nextProtoLen)\n \t\tz = z[4:]\n@@ -494,6 +521,13 @@ func (m *serverHelloMsg) marshal() []byte {\n \t\tz[1] = byte(extensionSessionTicket)\n \t\tz = z[4:]\n \t}\n+\tif m.secureRenegotiation {\n+\t\tz[0] = byte(extensionRenegotiationInfo >> 8)\n+\t\tz[1] = byte(extensionRenegotiationInfo & 0xff)\n+\t\tz[2] = 0\n+\t\tz[3] = 1\n+\t\tz = z[5:]\n+\t}\n \n \tm.raw = x\n \n@@ -573,6 +607,11 @@ func (m *serverHelloMsg) unmarshal(data []byte) bool {\n \t\t\t\treturn false\n \t\t\t}\n \t\t\tm.ticketSupported = true\n+\t\tcase extensionRenegotiationInfo:\n+\t\t\tif length != 1 || data[0] != 0 {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t\tm.secureRenegotiation = true\n \t\t}\n \t\tdata = data[length:]\n \t}"}, {"sha": "12e5ff1e5895b9052b2751e043a51c8db7e39a78", "filename": "libgo/go/crypto/tls/handshake_server.go", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -12,6 +12,7 @@ import (\n \t\"crypto/x509\"\n \t\"encoding/asn1\"\n \t\"errors\"\n+\t\"fmt\"\n \t\"io\"\n )\n \n@@ -100,11 +101,13 @@ func (hs *serverHandshakeState) readClientHello() (isResume bool, err error) {\n \tvar ok bool\n \ths.clientHello, ok = msg.(*clientHelloMsg)\n \tif !ok {\n-\t\treturn false, c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn false, unexpectedMessageError(hs.clientHello, msg)\n \t}\n \tc.vers, ok = config.mutualVersion(hs.clientHello.vers)\n \tif !ok {\n-\t\treturn false, c.sendAlert(alertProtocolVersion)\n+\t\tc.sendAlert(alertProtocolVersion)\n+\t\treturn false, fmt.Errorf(\"tls: client offered an unsupported, maximum protocol version of %x\", hs.clientHello.vers)\n \t}\n \tc.haveVers = true\n \n@@ -142,20 +145,18 @@ Curves:\n \t}\n \n \tif !foundCompression {\n-\t\treturn false, c.sendAlert(alertHandshakeFailure)\n+\t\tc.sendAlert(alertHandshakeFailure)\n+\t\treturn false, errors.New(\"tls: client does not support uncompressed connections\")\n \t}\n \n \ths.hello.vers = c.vers\n-\tt := uint32(config.time().Unix())\n \ths.hello.random = make([]byte, 32)\n-\ths.hello.random[0] = byte(t >> 24)\n-\ths.hello.random[1] = byte(t >> 16)\n-\ths.hello.random[2] = byte(t >> 8)\n-\ths.hello.random[3] = byte(t)\n-\t_, err = io.ReadFull(config.rand(), hs.hello.random[4:])\n+\t_, err = io.ReadFull(config.rand(), hs.hello.random)\n \tif err != nil {\n-\t\treturn false, c.sendAlert(alertInternalError)\n+\t\tc.sendAlert(alertInternalError)\n+\t\treturn false, err\n \t}\n+\ths.hello.secureRenegotiation = hs.clientHello.secureRenegotiation\n \ths.hello.compressionMethod = compressionNone\n \tif len(hs.clientHello.serverName) > 0 {\n \t\tc.serverName = hs.clientHello.serverName\n@@ -170,7 +171,8 @@ Curves:\n \t}\n \n \tif len(config.Certificates) == 0 {\n-\t\treturn false, c.sendAlert(alertInternalError)\n+\t\tc.sendAlert(alertInternalError)\n+\t\treturn false, errors.New(\"tls: no certificates configured\")\n \t}\n \ths.cert = &config.Certificates[0]\n \tif len(hs.clientHello.serverName) > 0 {\n@@ -199,7 +201,8 @@ Curves:\n \t}\n \n \tif hs.suite == nil {\n-\t\treturn false, c.sendAlert(alertHandshakeFailure)\n+\t\tc.sendAlert(alertHandshakeFailure)\n+\t\treturn false, errors.New(\"tls: no cipher suite supported by both client and server\")\n \t}\n \n \treturn false, nil\n@@ -349,7 +352,8 @@ func (hs *serverHandshakeState) doFullHandshake() error {\n \t// certificate message, even if it's empty.\n \tif config.ClientAuth >= RequestClientCert {\n \t\tif certMsg, ok = msg.(*certificateMsg); !ok {\n-\t\t\treturn c.sendAlert(alertHandshakeFailure)\n+\t\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\t\treturn unexpectedMessageError(certMsg, msg)\n \t\t}\n \t\ths.finishedHash.Write(certMsg.marshal())\n \n@@ -376,7 +380,8 @@ func (hs *serverHandshakeState) doFullHandshake() error {\n \t// Get client key exchange\n \tckx, ok := msg.(*clientKeyExchangeMsg)\n \tif !ok {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(ckx, msg)\n \t}\n \ths.finishedHash.Write(ckx.marshal())\n \n@@ -393,7 +398,8 @@ func (hs *serverHandshakeState) doFullHandshake() error {\n \t\t}\n \t\tcertVerify, ok := msg.(*certificateVerifyMsg)\n \t\tif !ok {\n-\t\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\t\treturn unexpectedMessageError(certVerify, msg)\n \t\t}\n \n \t\tswitch key := pub.(type) {\n@@ -473,7 +479,8 @@ func (hs *serverHandshakeState) readFinished() error {\n \t\t}\n \t\tnextProto, ok := msg.(*nextProtoMsg)\n \t\tif !ok {\n-\t\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\t\treturn unexpectedMessageError(nextProto, msg)\n \t\t}\n \t\ths.finishedHash.Write(nextProto.marshal())\n \t\tc.clientProtocol = nextProto.proto\n@@ -485,13 +492,15 @@ func (hs *serverHandshakeState) readFinished() error {\n \t}\n \tclientFinished, ok := msg.(*finishedMsg)\n \tif !ok {\n-\t\treturn c.sendAlert(alertUnexpectedMessage)\n+\t\tc.sendAlert(alertUnexpectedMessage)\n+\t\treturn unexpectedMessageError(clientFinished, msg)\n \t}\n \n \tverify := hs.finishedHash.clientSum(hs.masterSecret)\n \tif len(verify) != len(clientFinished.verifyData) ||\n \t\tsubtle.ConstantTimeCompare(verify, clientFinished.verifyData) != 1 {\n-\t\treturn c.sendAlert(alertHandshakeFailure)\n+\t\tc.sendAlert(alertHandshakeFailure)\n+\t\treturn errors.New(\"tls: client's Finished message is incorrect\")\n \t}\n \n \ths.finishedHash.Write(clientFinished.marshal())\n@@ -594,7 +603,8 @@ func (hs *serverHandshakeState) processCertsFromClient(certificates [][]byte) (c\n \t\tcase *ecdsa.PublicKey, *rsa.PublicKey:\n \t\t\tpub = key\n \t\tdefault:\n-\t\t\treturn nil, c.sendAlert(alertUnsupportedCertificate)\n+\t\t\tc.sendAlert(alertUnsupportedCertificate)\n+\t\t\treturn nil, fmt.Errorf(\"tls: client's certificate contains an unsupported public key of type %T\", certs[0].PublicKey)\n \t\t}\n \t\tc.peerCertificates = certs\n \t\treturn pub, nil"}, {"sha": "4f41ab9b78c2866aa4c0495413a28e793fbffc2a", "filename": "libgo/go/crypto/tls/handshake_server_test.go", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -20,6 +20,7 @@ import (\n \t\"os\"\n \t\"os/exec\"\n \t\"path/filepath\"\n+\t\"strings\"\n \t\"testing\"\n \t\"time\"\n )\n@@ -53,7 +54,7 @@ func init() {\n \ttestConfig.BuildNameToCertificate()\n }\n \n-func testClientHelloFailure(t *testing.T, m handshakeMessage, expected error) {\n+func testClientHelloFailure(t *testing.T, m handshakeMessage, expectedSubStr string) {\n \t// Create in-memory network connection,\n \t// send message to server.  Should return\n \t// expected error.\n@@ -68,20 +69,20 @@ func testClientHelloFailure(t *testing.T, m handshakeMessage, expected error) {\n \t}()\n \terr := Server(s, testConfig).Handshake()\n \ts.Close()\n-\tif e, ok := err.(*net.OpError); !ok || e.Err != expected {\n-\t\tt.Errorf(\"Got error: %s; expected: %s\", err, expected)\n+\tif err == nil || !strings.Contains(err.Error(), expectedSubStr) {\n+\t\tt.Errorf(\"Got error: %s; expected to match substring '%s'\", err, expectedSubStr)\n \t}\n }\n \n func TestSimpleError(t *testing.T) {\n-\ttestClientHelloFailure(t, &serverHelloDoneMsg{}, alertUnexpectedMessage)\n+\ttestClientHelloFailure(t, &serverHelloDoneMsg{}, \"unexpected handshake message\")\n }\n \n var badProtocolVersions = []uint16{0x0000, 0x0005, 0x0100, 0x0105, 0x0200, 0x0205}\n \n func TestRejectBadProtocolVersion(t *testing.T) {\n \tfor _, v := range badProtocolVersions {\n-\t\ttestClientHelloFailure(t, &clientHelloMsg{vers: v}, alertProtocolVersion)\n+\t\ttestClientHelloFailure(t, &clientHelloMsg{vers: v}, \"unsupported, maximum protocol version\")\n \t}\n }\n \n@@ -91,7 +92,7 @@ func TestNoSuiteOverlap(t *testing.T) {\n \t\tcipherSuites:       []uint16{0xff00},\n \t\tcompressionMethods: []uint8{0},\n \t}\n-\ttestClientHelloFailure(t, clientHello, alertHandshakeFailure)\n+\ttestClientHelloFailure(t, clientHello, \"no cipher suite supported by both client and server\")\n }\n \n func TestNoCompressionOverlap(t *testing.T) {\n@@ -100,7 +101,7 @@ func TestNoCompressionOverlap(t *testing.T) {\n \t\tcipherSuites:       []uint16{TLS_RSA_WITH_RC4_128_SHA},\n \t\tcompressionMethods: []uint8{0xff},\n \t}\n-\ttestClientHelloFailure(t, clientHello, alertHandshakeFailure)\n+\ttestClientHelloFailure(t, clientHello, \"client does not support uncompressed connections\")\n }\n \n func TestTLS12OnlyCipherSuites(t *testing.T) {\n@@ -177,17 +178,20 @@ func TestClose(t *testing.T) {\n \n func testHandshake(clientConfig, serverConfig *Config) (state ConnectionState, err error) {\n \tc, s := net.Pipe()\n+\tdone := make(chan bool)\n \tgo func() {\n \t\tcli := Client(c, clientConfig)\n \t\tcli.Handshake()\n \t\tc.Close()\n+\t\tdone <- true\n \t}()\n \tserver := Server(s, serverConfig)\n \terr = server.Handshake()\n \tif err == nil {\n \t\tstate = server.ConnectionState()\n \t}\n \ts.Close()\n+\t<-done\n \treturn\n }\n \n@@ -490,9 +494,9 @@ func TestHandshakeServerSNI(t *testing.T) {\n \n // TestCipherSuiteCertPreferance ensures that we select an RSA ciphersuite with\n // an RSA certificate and an ECDSA ciphersuite with an ECDSA certificate.\n-func TestCipherSuiteCertPreferance(t *testing.T) {\n+func TestCipherSuiteCertPreferenceECDSA(t *testing.T) {\n \tconfig := *testConfig\n-\tconfig.CipherSuites = []uint16{TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA}\n+\tconfig.CipherSuites = []uint16{TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA}\n \tconfig.PreferServerCipherSuites = true\n \n \ttest := &serverTest{"}, {"sha": "861faf0e85a0495c058de1f543986ad4dd04121f", "filename": "libgo/go/crypto/tls/key_agreement.go", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fkey_agreement.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Fkey_agreement.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fkey_agreement.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -19,6 +19,9 @@ import (\n \t\"math/big\"\n )\n \n+var errClientKeyExchange = errors.New(\"tls: invalid ClientKeyExchange message\")\n+var errServerKeyExchange = errors.New(\"tls: invalid ServerKeyExchange message\")\n+\n // rsaKeyAgreement implements the standard TLS key agreement where the client\n // encrypts the pre-master secret to the server's public key.\n type rsaKeyAgreement struct{}\n@@ -35,14 +38,14 @@ func (ka rsaKeyAgreement) processClientKeyExchange(config *Config, cert *Certifi\n \t}\n \n \tif len(ckx.ciphertext) < 2 {\n-\t\treturn nil, errors.New(\"bad ClientKeyExchange\")\n+\t\treturn nil, errClientKeyExchange\n \t}\n \n \tciphertext := ckx.ciphertext\n \tif version != VersionSSL30 {\n \t\tciphertextLen := int(ckx.ciphertext[0])<<8 | int(ckx.ciphertext[1])\n \t\tif ciphertextLen != len(ckx.ciphertext)-2 {\n-\t\t\treturn nil, errors.New(\"bad ClientKeyExchange\")\n+\t\t\treturn nil, errClientKeyExchange\n \t\t}\n \t\tciphertext = ckx.ciphertext[2:]\n \t}\n@@ -61,7 +64,7 @@ func (ka rsaKeyAgreement) processClientKeyExchange(config *Config, cert *Certifi\n }\n \n func (ka rsaKeyAgreement) processServerKeyExchange(config *Config, clientHello *clientHelloMsg, serverHello *serverHelloMsg, cert *x509.Certificate, skx *serverKeyExchangeMsg) error {\n-\treturn errors.New(\"unexpected ServerKeyExchange\")\n+\treturn errors.New(\"tls: unexpected ServerKeyExchange\")\n }\n \n func (ka rsaKeyAgreement) generateClientKeyExchange(config *Config, clientHello *clientHelloMsg, cert *x509.Certificate) ([]byte, *clientKeyExchangeMsg, error) {\n@@ -271,11 +274,11 @@ Curve:\n \n func (ka *ecdheKeyAgreement) processClientKeyExchange(config *Config, cert *Certificate, ckx *clientKeyExchangeMsg, version uint16) ([]byte, error) {\n \tif len(ckx.ciphertext) == 0 || int(ckx.ciphertext[0]) != len(ckx.ciphertext)-1 {\n-\t\treturn nil, errors.New(\"bad ClientKeyExchange\")\n+\t\treturn nil, errClientKeyExchange\n \t}\n \tx, y := elliptic.Unmarshal(ka.curve, ckx.ciphertext[1:])\n \tif x == nil {\n-\t\treturn nil, errors.New(\"bad ClientKeyExchange\")\n+\t\treturn nil, errClientKeyExchange\n \t}\n \tx, _ = ka.curve.ScalarMult(x, y, ka.privateKey)\n \tpreMasterSecret := make([]byte, (ka.curve.Params().BitSize+7)>>3)\n@@ -285,8 +288,6 @@ func (ka *ecdheKeyAgreement) processClientKeyExchange(config *Config, cert *Cert\n \treturn preMasterSecret, nil\n }\n \n-var errServerKeyExchange = errors.New(\"invalid ServerKeyExchange\")\n-\n func (ka *ecdheKeyAgreement) processServerKeyExchange(config *Config, clientHello *clientHelloMsg, serverHello *serverHelloMsg, cert *x509.Certificate, skx *serverKeyExchangeMsg) error {\n \tif len(skx.key) < 4 {\n \t\treturn errServerKeyExchange"}, {"sha": "0d2294a710713292c5f7e4ca579aaa62f0e70cfc", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-ECDSA-ECDSA", "status": "modified", "additions": 74, "deletions": 74, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-ECDSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,67 +1,67 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f8 34  |....T...P..R.w.4|\n-00000010  93 89 d0 c8 9e 83 58 9b  46 f1 4e 67 40 4c ea 67  |......X.F.Ng@L.g|\n-00000020  6b 70 0e 24 0e 95 3e 49  96 56 7d 20 2e 80 c6 ef  |kp.$..>I.V} ....|\n-00000030  c7 dc 41 e1 86 f4 7c d9  8a 01 b5 70 9e 02 20 6b  |..A...|....p.. k|\n-00000040  bb 4a 4c 8f ed 79 dc 15  be 16 cb ef c0 09 00 00  |.JL..y..........|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 01 00  |6$1{j.9....*....|\n-00000270  d5 0c 00 00 d1 03 00 17  41 04 13 22 64 a7 fc 9c  |........A..\"d...|\n-00000280  f8 90 f2 4d 68 a1 cc b0  03 48 d7 e5 14 1e 3b e9  |...Mh....H....;.|\n-00000290  d0 be 49 ee c7 b3 98 b5  b2 9c 52 d0 ab 28 b5 16  |..I.......R..(..|\n-000002a0  ef 17 ee 7a 64 a3 81 8b  0e 3f 44 81 18 67 2c c1  |...zd....?D..g,.|\n-000002b0  17 da be f4 59 bc 0e d8  c5 4f 00 8a 30 81 87 02  |....Y....O..0...|\n-000002c0  41 0f be e7 a5 29 04 dc  89 b5 02 bd 59 8f c1 66  |A....)......Y..f|\n-000002d0  47 1c c0 ad 25 52 22 91  fc 6a 17 37 cc b5 a7 42  |G...%R\"..j.7...B|\n-000002e0  06 36 44 7a 78 33 df 25  34 85 82 9b 9d ed 98 1c  |.6Dzx3.%4.......|\n-000002f0  43 72 3e 79 61 0d ca 5f  a1 2e ff 47 bf ae 11 c6  |Cr>ya.._...G....|\n-00000300  60 ec 02 42 00 de 6f 7b  44 78 f5 70 9c 95 f6 09  |`..B..o{Dx.p....|\n-00000310  9f 84 f5 10 c8 f3 b2 ab  4c 67 07 c1 6f a2 94 18  |........Lg..o...|\n-00000320  3b b0 6b d9 43 70 e3 d5  ef be 23 79 5f 84 33 20  |;.k.Cp....#y_.3 |\n-00000330  0c c3 f6 cd d9 18 d3 0a  a5 e8 2e 27 69 07 47 72  |...........'i.Gr|\n-00000340  d4 cd 38 3e 30 9e 16 03  01 00 0e 0d 00 00 06 03  |..8>0...........|\n-00000350  01 02 40 00 00 0e 00 00  00                       |..@......|\n+00000000  16 03 01 00 59 02 00 00  55 03 01 52 cc 57 59 e6  |....Y...U..R.WY.|\n+00000010  12 4c 15 38 e6 b7 2c 9e  b5 82 bb b5 9d f5 71 4a  |.L.8..,.......qJ|\n+00000020  66 21 30 c2 44 69 ec 7c  8a 37 8b 20 1e 9c 78 3a  |f!0.Di.|.7. ..x:|\n+00000030  bf d0 e0 37 6b 88 5c 8f  90 a8 92 c3 f6 b7 ad fc  |...7k.\\.........|\n+00000040  56 4a 50 34 ce 8f 08 e5  08 40 71 9b c0 09 00 00  |VJP4.....@q.....|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  01 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 01 00 d5 0c 00  00 d1 03 00 17 41 04 00  |*............A..|\n+00000280  3d 87 12 2c c5 fd db 6e  ab 0c 7c 54 85 fc d3 13  |=..,...n..|T....|\n+00000290  34 1e 13 83 2c 60 05 67  83 f0 3a cc c6 27 84 63  |4...,`.g..:..'.c|\n+000002a0  90 4e 25 26 0f 03 ca f3  ae 7e 44 c6 94 0d e4 1b  |.N%&.....~D.....|\n+000002b0  4a 53 e2 d7 f0 5c 83 64  37 c0 0f d1 9e 86 de 00  |JS...\\.d7.......|\n+000002c0  8a 30 81 87 02 41 4f 85  6d 11 af d1 27 9c de 21  |.0...AO.m...'..!|\n+000002d0  d7 e5 96 ad 4f 6a a1 5c  2b 63 22 0e 4f 22 77 16  |....Oj.\\+c\".O\"w.|\n+000002e0  ec 6e db 38 1a df 28 4e  ee 9e a4 c1 e7 d3 02 74  |.n.8..(N.......t|\n+000002f0  07 3f 58 7f 82 51 2d 9e  78 6b bd 28 77 20 c1 40  |.?X..Q-.xk.(w .@|\n+00000300  09 71 ba b9 23 c7 82 02  42 01 13 1b 64 c4 1f c6  |.q..#...B...d...|\n+00000310  1f f3 f4 51 8c 64 92 37  5e f0 5c 11 c9 ee 43 55  |...Q.d.7^.\\...CU|\n+00000320  a0 83 52 8b d9 2d d1 22  2c 2e 2c e0 04 a6 59 b3  |..R..-.\",.,...Y.|\n+00000330  f9 33 d8 e4 9a 0b 2b 95  c6 41 5d 60 a3 d1 9f 31  |.3....+..A]`...1|\n+00000340  14 5d a3 31 6e 70 f1 e7  35 5a f9 16 03 01 00 0e  |.].1np..5Z......|\n+00000350  0d 00 00 06 03 01 02 40  00 00 0e 00 00 00        |.......@......|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n 00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n@@ -108,22 +108,22 @@\n 000002a0  85 6a 42 9b f9 7e 7e 31  c2 e5 bd 66 02 41 4b 49  |.jB..~~1...f.AKI|\n 000002b0  c6 cd 02 e3 83 f7 03 50  18 6d b4 c9 51 02 c0 ab  |.......P.m..Q...|\n 000002c0  87 bc e0 3e 4b 89 53 3a  e2 65 89 97 02 c1 87 f1  |...>K.S:.e......|\n-000002d0  67 d0 f2 06 28 4e 51 4e  fd f0 01 ee b8 6b e0 01  |g...(NQN.....k..|\n-000002e0  1c 57 7e a8 fc 82 71 26  10 42 27 8c 5d c8 a9 14  |.W~...q&.B'.]...|\n-000002f0  03 01 00 01 01 16 03 01  00 30 6e 6b 80 06 bb 98  |.........0nk....|\n-00000300  c1 47 e3 92 1b 4d 98 4a  b4 3f 18 2e 73 a9 57 84  |.G...M.J.?..s.W.|\n-00000310  92 b5 cb 45 db bb db 89  dd 10 04 7c 60 3e a0 d1  |...E.......|`>..|\n-00000320  22 1d 7c 51 11 28 09 4a  26 f6                    |\".|Q.(.J&.|\n+000002d0  67 d0 f2 06 28 4e 51 4e  fd f0 01 c1 1f 1d 1c 32  |g...(NQN.......2|\n+000002e0  1f 91 5d 06 f5 44 1b a0  1b 61 43 6b de 81 bd 14  |..]..D...aCk....|\n+000002f0  03 01 00 01 01 16 03 01  00 30 fe bb 82 52 2d 8a  |.........0...R-.|\n+00000300  81 87 ba 2c 18 5b 93 07  78 30 85 f3 5f 4f df 3f  |...,.[..x0.._O.?|\n+00000310  1a fc 01 b9 a5 32 99 d3  40 0b ef c5 b8 32 f4 7e  |.....2..@....2.~|\n+00000320  d2 93 0f 19 24 87 c5 18  e2 8b                    |....$.....|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 30 05 ba 98 98 0f  |..........0.....|\n-00000010  f9 f8 f4 4d 9a 29 99 ce  d7 d4 9a 4b d1 ed 54 d1  |...M.).....K..T.|\n-00000020  a7 32 9a b8 ce 80 53 c4  50 61 83 37 35 c8 99 25  |.2....S.Pa.75..%|\n-00000030  0b ac 66 91 62 ce 12 ba  cf dc 6f                 |..f.b.....o|\n+00000000  14 03 01 00 01 01 16 03  01 00 30 84 a0 90 cb 8b  |..........0.....|\n+00000010  43 ad 66 06 ef f1 4b 5c  85 cc 4e 12 60 44 b4 be  |C.f...K\\..N.`D..|\n+00000020  ed 94 23 69 bf 7a cc e9  a7 17 db 9a ec d5 9b 15  |..#i.z..........|\n+00000030  92 62 5e bb ac db 78 50  d1 b2 0c                 |.b^...xP...|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 20 7a 1e c3  4c 5f dd f1 14 f4 97 45  |.... z..L_.....E|\n-00000010  21 4f 75 a5 a5 53 4a d7  91 a4 ad 1b cd 4b da 5a  |!Ou..SJ......K.Z|\n-00000020  92 96 48 1f bc 17 03 01  00 20 a4 c9 d5 67 2f d9  |..H...... ...g/.|\n-00000030  d2 ee e4 82 a5 ff 2d fa  41 8f 3d cc 3d ce 08 4a  |......-.A.=.=..J|\n-00000040  39 7d 0c 6c 69 a4 71 e2  c0 98 15 03 01 00 20 19  |9}.li.q....... .|\n-00000050  ae 20 b2 ff ce d4 71 37  ed 92 6a b3 3c 8d df 00  |. ....q7..j.<...|\n-00000060  3b 69 5d f9 45 b1 8b 33  37 fe 52 d2 a1 56 01     |;i].E..37.R..V.|\n+00000000  17 03 01 00 20 b4 fd 9e  0a 69 49 16 72 52 8b 81  |.... ....iI.rR..|\n+00000010  50 87 07 77 d4 9a 07 06  88 e0 43 43 32 a0 7c f9  |P..w......CC2.|.|\n+00000020  13 88 3f 87 36 17 03 01  00 20 6e 96 f6 4c f8 8d  |..?.6.... n..L..|\n+00000030  1b 15 ff 3e 7c 5e fc f0  81 6e 5e 26 3c 42 96 dc  |...>|^...n^&<B..|\n+00000040  69 79 b8 73 9c 1d eb 31  5d 94 15 03 01 00 20 b4  |iy.s...1]..... .|\n+00000050  68 2c 4d 74 ed a5 bc f4  e3 56 bd 3e 19 78 fc 8a  |h,Mt.....V.>.x..|\n+00000060  1e f0 4c 7e f9 11 de e1  15 38 9b ed 6f 9b 34     |..L~.....8..o.4|"}, {"sha": "36f6eb16371c2fe355b02bde25c055a392320187", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-ECDSA-RSA", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-RSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,64 +1,64 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 4a 02 00 00  46 03 01 52 ac 77 f8 32  |....J...F..R.w.2|\n-00000010  42 f3 96 ae d6 f1 36 23  a4 c5 c0 ba 05 5a 67 bb  |B.....6#.....Zg.|\n-00000020  12 5c 64 95 96 3d cc 0c  3a 85 38 20 13 48 bf 31  |.\\d..=..:.8 .H.1|\n-00000030  52 76 11 55 05 5d 24 5a  53 17 9e be d5 88 c1 d7  |Rv.U.]$ZS.......|\n-00000040  88 35 b9 70 2b 66 46 35  a6 aa ff 8f 00 05 00 16  |.5.p+fF5........|\n-00000050  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 01 00 0e 0d  00 00 06 03 01 02 40 00  |..............@.|\n-00000320  00 0e 00 00 00                                    |.....|\n+00000000  16 03 01 00 51 02 00 00  4d 03 01 52 cc 57 59 78  |....Q...M..R.WYx|\n+00000010  63 f8 d6 ea 32 6f 22 7c  7b fb ab 48 c8 3b d9 ed  |c...2o\"|{..H.;..|\n+00000020  5b 01 e0 0a 36 d8 26 57  56 dd e4 20 ed c9 d8 e5  |[...6.&WV.. ....|\n+00000030  5c 2a 1b b6 d2 bd 32 5d  42 fe 4b d1 89 4c 1f b0  |\\*....2]B.K..L..|\n+00000040  5d fc 1f d4 4a f3 ef 06  28 1a d3 09 00 05 00 00  |]...J...(.......|\n+00000050  05 ff 01 00 01 00 16 03  01 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 01 00 0e 0d 00  |n8P)l...........|\n+00000320  00 06 03 01 02 40 00 00  0e 00 00 00              |.....@......|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n 00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n@@ -109,17 +109,17 @@\n 000002e0  85 6a 42 9b f9 7e 7e 31  c2 e5 bd 66 02 41 4b 49  |.jB..~~1...f.AKI|\n 000002f0  c6 cd 02 e3 83 f7 03 50  18 6d b4 c9 51 02 c0 ab  |.......P.m..Q...|\n 00000300  87 bc e0 3e 4b 89 53 3a  e2 65 89 97 02 c1 87 f1  |...>K.S:.e......|\n-00000310  67 d0 f2 06 28 4e 51 4e  fd f0 01 92 6d 54 ed 77  |g...(NQN....mT.w|\n-00000320  96 b9 6c 79 66 fc c7 4e  db 53 7a 61 f3 31 9b 14  |..lyf..N.Sza.1..|\n-00000330  03 01 00 01 01 16 03 01  00 24 4d cd f0 d5 d5 4c  |.........$M....L|\n-00000340  2b 51 9f 88 04 10 65 c9  1c 92 26 d0 07 0a af 06  |+Q....e...&.....|\n-00000350  bd 0a 2d 1e e6 dd 2a a5  3f c9 39 2d f8 0d        |..-...*.?.9-..|\n+00000310  67 d0 f2 06 28 4e 51 4e  fd f0 01 65 a4 80 ad 7e  |g...(NQN...e...~|\n+00000320  a3 bc 1d 1a 83 3a db 30  c7 67 96 cf e7 aa dc 14  |.....:.0.g......|\n+00000330  03 01 00 01 01 16 03 01  00 24 d9 38 91 04 a4 ac  |.........$.8....|\n+00000340  eb d7 4c 7a c6 07 25 72  a0 f7 3f 6d 37 cc db 40  |..Lz..%r..?m7..@|\n+00000350  c0 26 9b be 03 55 2d 24  c5 b3 4f 6d 56 c4        |.&...U-$..OmV.|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 24 79 e0 a5 d6 1c  |..........$y....|\n-00000010  2d c9 2f 3d 35 96 2f ce  97 9c 33 38 8b fc ba 02  |-./=5./...38....|\n-00000020  6f 46 13 64 82 d5 ff 9d  16 9a ad 90 e3 ec 46     |oF.d..........F|\n+00000000  14 03 01 00 01 01 16 03  01 00 24 b8 8d b1 db 80  |..........$.....|\n+00000010  1d 26 9e 41 d0 48 40 0d  6a 94 e6 42 93 60 58 d1  |.&.A.H@.j..B.`X.|\n+00000020  b2 13 7c 6f ec 1c f5 2a  1e 82 14 6f 0f 13 a7     |..|o...*...o...|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 1a 8b 3c 90  3e 94 ef fd 6e 32 42 fa  |......<.>...n2B.|\n-00000010  70 0b d0 65 62 23 25 a4  0f b5 a7 9a 45 f0 52 15  |p..eb#%.....E.R.|\n-00000020  03 01 00 16 74 72 64 8d  b8 41 13 07 49 7c d7 d0  |....trd..A..I|..|\n-00000030  b6 c9 cf 33 20 69 5e f4  d2 a8                    |...3 i^...|\n+00000000  17 03 01 00 1a ea f3 99  a3 b1 7e 9a 29 ad 31 18  |..........~.).1.|\n+00000010  1b 5b 7c 71 ae 5b c6 ba  8e 8e 36 f6 ab 2c dd 15  |.[|q.[....6..,..|\n+00000020  03 01 00 16 82 cf f4 83  05 4c 86 e2 47 cc 6f 2c  |.........L..G.o,|\n+00000030  6d 50 c6 09 3b fd a8 5e  12 3c                    |mP..;..^.<|"}, {"sha": "9e4ea6654431f6503bbc3b77a69e8b8cb5b29d5f", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-RSA-ECDSA", "status": "modified", "additions": 81, "deletions": 81, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-ECDSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,67 +1,67 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f7 ee  |....T...P..R.w..|\n-00000010  90 30 d2 75 be d4 70 dd  2d 4f a7 9e 0f 6f 0b ac  |.0.u..p.-O...o..|\n-00000020  bf 02 7d 53 1d 05 7f 93  9a c3 50 20 c8 18 17 c2  |..}S......P ....|\n-00000030  70 76 8d a8 52 c8 b7 ff  32 35 cb bb 7e e0 4c 9c  |pv..R...25..~.L.|\n-00000040  42 69 90 26 b5 c8 b7 22  da 52 db f9 c0 09 00 00  |Bi.&...\".R......|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 01 00  |6$1{j.9....*....|\n-00000270  d6 0c 00 00 d2 03 00 17  41 04 14 a3 b3 8a d0 9a  |........A.......|\n-00000280  93 50 4e 4c ad b1 61 10  09 96 cc 65 d0 85 02 17  |.PNL..a....e....|\n-00000290  e6 12 56 e5 f3 6b 97 0e  4e 04 60 49 46 39 a9 a9  |..V..k..N.`IF9..|\n-000002a0  70 20 fa 28 d7 91 01 24  3a 52 90 7d ac dc 1c 87  |p .(...$:R.}....|\n-000002b0  fe 05 2a 23 ff d6 f7 84  ad 08 00 8b 30 81 88 02  |..*#........0...|\n-000002c0  42 00 f0 df fd cb 17 ba  68 6e 1c b5 6c ee 29 68  |B.......hn..l.)h|\n-000002d0  a4 a7 15 c8 88 cd 60 57  fd ec b3 53 31 6f 19 64  |......`W...S1o.d|\n-000002e0  fd 91 c8 59 c3 19 d3 67  5d 38 26 07 c5 93 c1 92  |...Y...g]8&.....|\n-000002f0  86 5b 89 99 01 24 db ab  d0 51 a3 6a 54 e8 7f bb  |.[...$...Q.jT...|\n-00000300  de 9c 1c 02 42 01 7c d6  5f b8 f9 15 b4 a2 89 04  |....B.|._.......|\n-00000310  46 36 2f a9 cc 5c 7c 78  24 17 fd 11 b8 3f 0b 4a  |F6/..\\|x$....?.J|\n-00000320  5e 4d 55 1a 65 b2 27 d8  51 97 6c d8 a7 b2 62 30  |^MU.e.'.Q.l...b0|\n-00000330  01 3d b0 ef 27 fe f6 cd  40 0e 7b 54 c6 bc 38 b0  |.=..'...@.{T..8.|\n-00000340  b1 b2 37 6c 87 ac d1 16  03 01 00 0e 0d 00 00 06  |..7l............|\n-00000350  03 01 02 40 00 00 0e 00  00 00                    |...@......|\n+00000000  16 03 01 00 59 02 00 00  55 03 01 52 cc 57 58 fc  |....Y...U..R.WX.|\n+00000010  46 e4 45 fc 07 cb ec 16  cc ce 87 96 0e f6 d9 c7  |F.E.............|\n+00000020  49 2e ec 53 30 07 cd 01  1d 49 2e 20 2b bc 5c 11  |I..S0....I. +.\\.|\n+00000030  90 55 88 3f ec e4 30 b3  58 e7 d2 82 32 15 dd b4  |.U.?..0.X...2...|\n+00000040  1f e2 4c 1d 08 f9 a0 8d  75 8b 63 c2 c0 09 00 00  |..L.....u.c.....|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  01 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 01 00 d5 0c 00  00 d1 03 00 17 41 04 5e  |*............A.^|\n+00000280  6d f1 9c b6 ec 5b c9 fc  16 b2 75 63 90 82 23 8f  |m....[....uc..#.|\n+00000290  14 6f 53 b1 23 06 fa c7  b9 b4 d2 59 3d 4f 94 a2  |.oS.#......Y=O..|\n+000002a0  02 af 0a 1e 94 f7 4d 31  c1 b3 a7 c4 67 89 67 da  |......M1....g.g.|\n+000002b0  71 de 5a 1d ca 79 b8 f3  9e 6a 42 f8 60 8b 2a 00  |q.Z..y...jB.`.*.|\n+000002c0  8a 30 81 87 02 42 00 85  32 00 54 ab af 7a 95 32  |.0...B..2.T..z.2|\n+000002d0  f9 c7 e3 34 23 ed 1c 5d  7b a2 78 bf f1 a3 3f 53  |...4#..]{.x...?S|\n+000002e0  ad c4 56 1f f6 98 9e 29  66 ef 52 21 80 d6 21 e7  |..V....)f.R!..!.|\n+000002f0  61 fd 75 90 37 ec 13 0a  f4 c2 47 a4 a7 41 87 24  |a.u.7.....G..A.$|\n+00000300  0c c6 c0 09 f0 54 c4 df  02 41 30 3e a5 6c a2 5d  |.....T...A0>.l.]|\n+00000310  76 66 fb a2 f5 2d ef ee  63 63 b4 9a db 84 23 db  |vf...-..cc....#.|\n+00000320  e9 0d 5f 43 cc 6b ef 4a  7f a2 1d 6b 6c 7f 1f ba  |.._C.k.J...kl...|\n+00000330  52 5f 6c 3f cc 77 54 ef  75 1f c2 1e da 6f d3 07  |R_l?.wT.u....o..|\n+00000340  23 7d 54 6d 40 88 0d 6e  72 90 8e 16 03 01 00 0e  |#}Tm@..nr.......|\n+00000350  0d 00 00 06 03 01 02 40  00 00 0e 00 00 00        |.......@......|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n 00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n@@ -100,29 +100,29 @@\n 00000220  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000230  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000240  a6 b5 68 1a 41 03 56 6b  dc 5a 89 16 03 01 00 86  |..h.A.Vk.Z......|\n-00000250  0f 00 00 82 00 80 1b 62  58 10 7f d1 fb 94 fd 4e  |.......bX......N|\n-00000260  29 d8 ce fb 46 c4 16 ce  32 a0 a6 40 10 a8 24 0c  |)...F...2..@..$.|\n-00000270  c3 a2 50 34 2c 50 e4 b9  0f d8 2a d1 c6 d5 d9 ee  |..P4,P....*.....|\n-00000280  66 38 dd 68 7d 9f a4 78  b7 9c e3 fb 29 d9 8d ff  |f8.h}..x....)...|\n-00000290  0e b4 94 6e a9 58 a3 74  d7 b7 47 1a 0f 37 2b ab  |...n.X.t..G..7+.|\n-000002a0  cc ee 90 36 58 72 2a cb  2a 0f 2f 1b a0 fa 43 18  |...6Xr*.*./...C.|\n-000002b0  1f 4a 24 9a 67 55 11 e5  b9 f3 f0 d2 ff 66 26 dd  |.J$.gU.......f&.|\n-000002c0  b9 d1 ab b3 35 52 95 98  dd 86 8a 1b f8 8e ba 7e  |....5R.........~|\n-000002d0  10 07 0f a6 85 dc 14 03  01 00 01 01 16 03 01 00  |................|\n-000002e0  30 c6 a2 49 6c 31 b1 a8  d2 9e 0c 96 b1 0b 0d 57  |0..Il1.........W|\n-000002f0  8d f0 93 37 93 ea 06 b5  a7 d7 ba 3f 0e a2 f5 6a  |...7.......?...j|\n-00000300  38 88 cc 53 66 18 61 a5  e1 79 99 59 0e 44 58 79  |8..Sf.a..y.Y.DXy|\n-00000310  c7                                                |.|\n+00000250  0f 00 00 82 00 80 0d cf  9a c6 5e 57 60 b9 a4 87  |..........^W`...|\n+00000260  ae 83 25 4a d5 af 02 69  4d a1 0b ac 0c 97 58 30  |..%J...iM.....X0|\n+00000270  cc 9d 45 6a eb e3 a5 b1  f9 63 9c 05 04 8f 55 b3  |..Ej.....c....U.|\n+00000280  5b 7c 5b f6 36 2d b1 89  84 21 ce a6 ce be 66 c6  |[|[.6-...!....f.|\n+00000290  06 4a 07 8a a0 13 ee f1  52 ea 65 71 b7 49 b7 49  |.J......R.eq.I.I|\n+000002a0  dc 0a d0 c6 c3 69 ef 67  97 6b d8 41 e0 d1 a4 66  |.....i.g.k.A...f|\n+000002b0  cc 3c ba 4a 63 46 af e1  7f 16 2e 73 5c 69 17 45  |.<.JcF.....s\\i.E|\n+000002c0  b3 2d e2 7c 92 4c de 02  c6 97 d3 9c e0 d5 9c 22  |.-.|.L.........\"|\n+000002d0  30 21 11 5e 1c 1a 14 03  01 00 01 01 16 03 01 00  |0!.^............|\n+000002e0  30 db d7 9e 46 3e 5a 60  5d 21 22 34 ca 9a 3b 3c  |0...F>Z`]!\"4..;<|\n+000002f0  a6 41 12 42 b9 78 d7 39  4b 51 d0 d0 3e 7e ba 4c  |.A.B.x.9KQ..>~.L|\n+00000300  7c 8d 4b 03 e5 fe 4c 59  a6 9f a1 5d 46 54 56 61  ||.K...LY...]FTVa|\n+00000310  33                                                |3|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 30 68 f5 47 9c 34  |..........0h.G.4|\n-00000010  ba c1 96 05 d0 bd 77 e9  6c fb 88 c8 45 f5 fe 37  |......w.l...E..7|\n-00000020  e2 6b b9 3c 95 36 bf cc  76 2b 1c 3e 1e 8f 63 e7  |.k.<.6..v+.>..c.|\n-00000030  9b c2 84 fb 76 cf 97 a0  da 96 42                 |....v.....B|\n+00000000  14 03 01 00 01 01 16 03  01 00 30 72 c2 59 5a f3  |..........0r.YZ.|\n+00000010  6f db 45 d0 4b 8c b9 49  25 25 cd eb 00 c7 99 6c  |o.E.K..I%%.....l|\n+00000020  a7 4d 5a 4c f3 05 7d b0  fb 97 1a 40 0d 42 ca ad  |.MZL..}....@.B..|\n+00000030  df 57 6c 47 40 13 49 47  09 7c 2e                 |.WlG@.IG.|.|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 20 99 81 8e  c7 04 d1 03 0c 80 e2 44  |.... ..........D|\n-00000010  14 7c 74 5a 85 36 55 f0  62 d5 36 d4 da 6f 43 98  |.|tZ.6U.b.6..oC.|\n-00000020  36 7c 53 76 89 17 03 01  00 20 ec d3 7f fa 49 6c  |6|Sv..... ....Il|\n-00000030  60 89 16 ee 6a 1f 69 4f  5a 88 0c 5c 89 a6 e0 3f  |`...j.iOZ..\\...?|\n-00000040  38 89 fa da 39 16 d2 9b  08 1f 15 03 01 00 20 64  |8...9......... d|\n-00000050  a1 7a 98 b4 ff 54 a4 a0  e1 01 e4 0b 6c 67 80 b6  |.z...T......lg..|\n-00000060  b6 76 90 e5 e5 cf 9b ca  fe 5c a3 4a 24 53 e4     |.v.......\\.J$S.|\n+00000000  17 03 01 00 20 c5 99 ba  cc 39 bb db 07 27 3c 05  |.... ....9...'<.|\n+00000010  fb 79 ce bd ec 8c 67 20  c8 46 3b ad bf 8c 66 fc  |.y....g .F;...f.|\n+00000020  55 de 73 0f 71 17 03 01  00 20 7b 3e 2b 60 c0 df  |U.s.q.... {>+`..|\n+00000030  ca b1 c4 19 28 de 3e 8e  20 8b 4a 4a 07 52 5f 8c  |....(.>. .JJ.R_.|\n+00000040  1b 4f 54 15 69 31 f7 46  03 94 15 03 01 00 20 fc  |.OT.i1.F...... .|\n+00000050  b9 06 b4 6d 60 28 3f 4f  b2 9a e8 1c 74 d3 15 a6  |...m`(?O....t...|\n+00000060  7b 49 85 d0 2f 83 bf 4d  7f 60 6e 18 bf c7 34     |{I../..M.`n...4|"}, {"sha": "c21579c93297adbb0a9d9a83f33ad97e1a4deb01", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-RSA-RSA", "status": "modified", "additions": 73, "deletions": 73, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-RSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,64 +1,64 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 4a 02 00 00  46 03 01 52 ac 77 f7 f0  |....J...F..R.w..|\n-00000010  99 da 46 81 2b c1 04 7a  9e 61 bf 0f 67 e3 40 ed  |..F.+..z.a..g.@.|\n-00000020  9c 69 17 75 6f 64 63 14  4f 0f 99 20 06 c2 0e 89  |.i.uodc.O.. ....|\n-00000030  2e 5a bb e6 ce e1 39 f6  11 53 a5 92 95 61 b4 e3  |.Z....9..S...a..|\n-00000040  20 35 72 f8 e3 8d 19 6e  e3 5c a9 af 00 05 00 16  | 5r....n.\\......|\n-00000050  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 01 00 0e 0d  00 00 06 03 01 02 40 00  |..............@.|\n-00000320  00 0e 00 00 00                                    |.....|\n+00000000  16 03 01 00 51 02 00 00  4d 03 01 52 cc 57 58 bd  |....Q...M..R.WX.|\n+00000010  25 74 73 5e 31 99 73 f1  c6 a1 9b f0 07 09 97 d7  |%ts^1.s.........|\n+00000020  b6 b9 65 a3 08 16 0b 4c  4a 06 00 20 ef 0b 97 cb  |..e....LJ.. ....|\n+00000030  3c cf 05 b6 fe 62 d7 15  29 cf c8 56 e0 7e d7 92  |<....b..)..V.~..|\n+00000040  11 86 86 49 a0 b1 12 2f  dc 15 f7 67 00 05 00 00  |...I.../...g....|\n+00000050  05 ff 01 00 01 00 16 03  01 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 01 00 0e 0d 00  |n8P)l...........|\n+00000320  00 06 03 01 02 40 00 00  0e 00 00 00              |.....@......|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n 00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n@@ -101,24 +101,24 @@\n 00000260  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n 00000270  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n 00000280  35 d4 1c 43 d1 30 6f 55  4e 0a 70 16 03 01 00 86  |5..C.0oUN.p.....|\n-00000290  0f 00 00 82 00 80 4d 9d  67 d8 0f e2 4e f4 bc eb  |......M.g...N...|\n-000002a0  5f ad 77 c6 4d d4 2f 2c  77 dd a5 f7 4c 87 7e 99  |_.w.M./,w...L.~.|\n-000002b0  86 70 f3 8a 9d b4 29 21  75 17 f1 cf 66 63 a1 76  |.p....)!u...fc.v|\n-000002c0  3c 6c d7 3c 23 ee 35 1a  18 46 86 60 25 81 e3 25  |<l.<#.5..F.`%..%|\n-000002d0  df ab 2c 28 26 53 a8 92  6c 35 5a 9a cc cb d5 43  |..,(&S..l5Z....C|\n-000002e0  74 2f 6e a3 df d3 60 6a  97 97 71 ce 81 10 51 2d  |t/n...`j..q...Q-|\n-000002f0  50 f7 8a b2 ff d2 56 ba  e3 e5 03 e9 99 79 9e b4  |P.....V......y..|\n-00000300  a7 16 6e 08 98 1b f0 a5  d1 81 79 cc f4 48 34 58  |..n.......y..H4X|\n-00000310  df 69 49 b5 77 81 14 03  01 00 01 01 16 03 01 00  |.iI.w...........|\n-00000320  24 a2 58 ce 9a 68 34 da  df f7 21 41 da da 3d f1  |$.X..h4...!A..=.|\n-00000330  a1 cf 87 9e 50 96 aa 3d  80 71 50 0f 30 56 75 fe  |....P..=.qP.0Vu.|\n-00000340  97 48 66 de 13                                    |.Hf..|\n+00000290  0f 00 00 82 00 80 41 42  bb be 9d a4 d3 e9 24 f2  |......AB......$.|\n+000002a0  6c 7d b0 68 10 7a 88 e3  41 5d 24 f9 b2 a6 4c 31  |l}.h.z..A]$...L1|\n+000002b0  2b 90 51 49 65 3d d4 4b  1f 69 93 91 c0 a2 ec 2c  |+.QIe=.K.i.....,|\n+000002c0  d0 48 e1 64 7f ef 8b da  be 8c 0a 19 8b ff c7 37  |.H.d...........7|\n+000002d0  3d b8 8c 6d 2f 28 bd ba  96 6e c5 ed fa 29 c5 42  |=..m/(...n...).B|\n+000002e0  f2 24 b9 b5 55 1e 12 46  a5 bb 7c 41 2a b0 02 44  |.$..U..F..|A*..D|\n+000002f0  68 89 e9 92 e3 ad 50 44  f1 18 e7 e4 ee 2c 74 40  |h.....PD.....,t@|\n+00000300  82 39 a3 cf 30 54 fb 53  42 f1 18 28 8a f4 ef 65  |.9..0T.SB..(...e|\n+00000310  f2 33 6a e7 2a 48 14 03  01 00 01 01 16 03 01 00  |.3j.*H..........|\n+00000320  24 d8 a8 6d 1c 31 f7 cc  06 57 ef cf 7e 9b ac d3  |$..m.1...W..~...|\n+00000330  6b 50 b2 d8 c6 41 a2 c8  a6 f5 53 b3 d4 af e8 71  |kP...A....S....q|\n+00000340  88 9e 7e d9 57                                    |..~.W|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 24 83 7b dc b5 11  |..........$.{...|\n-00000010  28 12 6b d0 8a a3 dd f2  eb 29 cb fd 04 54 a1 31  |(.k......)...T.1|\n-00000020  8c 08 40 c3 bd 21 3a 13  be 57 47 89 f3 26 30     |..@..!:..WG..&0|\n+00000000  14 03 01 00 01 01 16 03  01 00 24 71 90 c8 76 87  |..........$q..v.|\n+00000010  7f 07 da de 41 93 59 f4  e9 64 73 49 d3 15 b0 7d  |....A.Y..dsI...}|\n+00000020  d7 86 06 85 62 71 9f 57  db 1a 81 82 ed 9b df     |....bq.W.......|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 1a 52 d0 be  a9 8f fb 91 38 7b a4 82  |.....R......8{..|\n-00000010  5d ff 93 61 f8 e9 80 b4  26 0e 21 42 2d 44 5a 15  |]..a....&.!B-DZ.|\n-00000020  03 01 00 16 49 68 5c 35  7e 9d eb ed 16 a4 60 16  |....Ih\\5~.....`.|\n-00000030  fb 25 80 5c 15 9e 31 68  aa 5b                    |.%.\\..1h.[|\n+00000000  17 03 01 00 1a 35 83 3e  0a 4d 7b 58 4d 6b 9e d7  |.....5.>.M{XMk..|\n+00000010  77 32 dd b0 93 25 d1 fc  e2 08 ad 2c 91 fd ce 15  |w2...%.....,....|\n+00000020  03 01 00 16 56 9c d9 6e  45 4c 95 8a 2d 75 7e 52  |....V..nEL..-u~R|\n+00000030  0a 75 0a f0 a1 52 91 c4  d2 b4                    |.u...R....|"}, {"sha": "b89d02c3687f08e792c4015f7ce230566a08da9f", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ECDHE-ECDSA-AES", "status": "modified", "additions": 72, "deletions": 71, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-ECDSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,86 +1,87 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f7 24  |....T...P..R.w.$|\n-00000010  5b 96 60 d7 6a 2e 9f 05  ea 1e 61 15 64 16 ab a6  |[.`.j.....a.d...|\n-00000020  a8 4e 72 f2 09 14 c2 fd  64 2d 22 20 e9 e3 04 64  |.Nr.....d-\" ...d|\n-00000030  7a 93 f1 de 0c d5 f9 5a  9a 5b d3 af 2b 03 84 bd  |z......Z.[..+...|\n-00000040  69 71 dd 35 a7 ca 52 bf  90 a1 03 f0 c0 09 00 00  |iq.5..R.........|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 01 00  |6$1{j.9....*....|\n-00000270  d5 0c 00 00 d1 03 00 17  41 04 65 02 4b f2 bc 54  |........A.e.K..T|\n-00000280  3d c2 42 3d 8d 06 b4 9a  7a 15 c8 04 0f 2b a0 f8  |=.B=....z....+..|\n-00000290  ee e8 5d 52 10 c3 36 30  e0 cc 34 67 bb 83 29 ea  |..]R..60..4g..).|\n-000002a0  d3 47 56 54 95 c5 29 25  53 d8 97 15 66 69 f2 cb  |.GVT..)%S...fi..|\n-000002b0  59 05 97 f7 ac 66 27 d9  19 4a 00 8a 30 81 87 02  |Y....f'..J..0...|\n-000002c0  41 6a 3c ca 93 ea 20 84  0e 04 2b 1b 52 28 32 29  |Aj<... ...+.R(2)|\n-000002d0  af b9 8d fb 1c 5c c3 02  6b 45 02 c7 25 4e 19 51  |.....\\..kE..%N.Q|\n-000002e0  19 8b 3c 34 5d 20 b8 77  77 4a f1 b1 ba 47 03 14  |..<4] .wwJ...G..|\n-000002f0  09 74 42 df 82 39 b0 51  54 ad e9 4d 1a 9d b9 18  |.tB..9.QT..M....|\n-00000300  14 58 02 42 01 b8 18 1d  a1 53 a2 52 ad a3 13 85  |.X.B.....S.R....|\n-00000310  f5 fb c4 75 0e 6b f1 f9  a6 7d 21 63 d0 fe 20 ba  |...u.k...}!c.. .|\n-00000320  4b 38 3d 25 12 dc 73 5e  1d 5e 23 e5 52 ae cf 62  |K8=%..s^.^#.R..b|\n-00000330  5a f4 a5 11 b7 33 1e 08  06 32 bb 7f 8d 40 db 5f  |Z....3...2...@._|\n-00000340  f7 39 93 0e 32 9e 16 03  01 00 04 0e 00 00 00     |.9..2..........|\n+00000000  16 03 01 00 59 02 00 00  55 03 01 52 cc 57 58 a5  |....Y...U..R.WX.|\n+00000010  0d f3 9c e1 2f 44 99 dc  f2 26 bc c2 44 4a 0f ab  |..../D...&..DJ..|\n+00000020  6d 40 3b 5a 98 21 43 9e  c0 39 03 20 03 46 6f c2  |m@;Z.!C..9. .Fo.|\n+00000030  bd 1f bc cc 2d b2 eb 22  91 23 df 20 28 c5 df ea  |....-..\".#. (...|\n+00000040  70 1a dc 07 b9 19 a1 d0  03 74 81 a8 c0 09 00 00  |p........t......|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  01 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 01 00 d5 0c 00  00 d1 03 00 17 41 04 3c  |*............A.<|\n+00000280  f8 33 94 22 ad fb 45 01  10 5c 8e b1 09 19 da de  |.3.\"..E..\\......|\n+00000290  21 0a 09 72 af 25 6f 2f  63 4d 8c 6b b6 a6 00 02  |!..r.%o/cM.k....|\n+000002a0  4d 6c fe 71 9e 45 74 13  db b5 7a a1 74 f0 16 35  |Ml.q.Et...z.t..5|\n+000002b0  50 fd ab 45 4c 64 9f 4d  80 a9 5c 85 ee 20 33 00  |P..ELd.M..\\.. 3.|\n+000002c0  8a 30 81 87 02 42 01 73  bc ac 1a 30 11 5f 93 95  |.0...B.s...0._..|\n+000002d0  00 03 ba d6 f3 02 cd c9  a0 15 bf 9a 1a 59 24 1e  |.............Y$.|\n+000002e0  3e 99 6b da b1 81 e1 eb  da fd 8e 73 d6 94 1e ce  |>.k........s....|\n+000002f0  04 cf 41 33 cd e5 8d f0  e2 50 b9 9b 49 df bc 51  |..A3.....P..I..Q|\n+00000300  2d 5c 12 5c b3 8b 81 73  02 41 3c bf 11 5c 10 be  |-\\.\\...s.A<..\\..|\n+00000310  f2 e7 59 2f 9a d7 0e 49  a3 17 7d 20 cc bc 17 1f  |..Y/...I..} ....|\n+00000320  2d 1b 19 90 52 c5 16 08  b3 3c b0 33 9d 03 45 75  |-...R....<.3..Eu|\n+00000330  0c 3f ac 7b 0b b2 69 f4  a5 7c fc 49 a6 54 55 84  |.?.{..i..|.I.TU.|\n+00000340  2f 19 f1 de 1b 92 3d fb  68 5d ea 16 03 01 00 04  |/.....=.h]......|\n+00000350  0e 00 00 00                                       |....|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 01 00 01  |..h.A.Vk.Z......|\n-00000050  01 16 03 01 00 30 6d 72  30 82 5b 76 0b bd a7 a2  |.....0mr0.[v....|\n-00000060  ed 1e de bd 14 1d 25 69  97 4c ad 9c b1 50 8e 2f  |......%i.L...P./|\n-00000070  a0 65 ac e7 52 e0 b4 fb  f9 8c e7 26 09 96 53 6f  |.e..R......&..So|\n-00000080  bc 77 24 8c 1f a7                                 |.w$...|\n+00000050  01 16 03 01 00 30 c7 cf  21 f8 0c 94 5b 11 ef ee  |.....0..!...[...|\n+00000060  d0 d3 3a d5 ba 2d 19 8b  5b 53 68 94 f1 49 8b 19  |..:..-..[Sh..I..|\n+00000070  f3 80 d5 55 52 7d 72 af  38 73 35 df 6e 04 4b ca  |...UR}r.8s5.n.K.|\n+00000080  64 b7 ff c3 e1 eb                                 |d.....|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 30 a0 97 45 7d 58  |..........0..E}X|\n-00000010  2d 6e 6b 51 ad 5b 4f e0  f3 58 d3 48 a6 e1 b7 71  |-nkQ.[O..X.H...q|\n-00000020  f8 94 e2 fe c5 c9 b2 0b  27 4f 48 11 df 01 5f ef  |........'OH..._.|\n-00000030  5d 9c f5 85 91 39 75 f4  21 1b ed                 |]....9u.!..|\n+00000000  14 03 01 00 01 01 16 03  01 00 30 59 2c 4c 03 7f  |..........0Y,L..|\n+00000010  aa a8 ca d8 2a b0 35 71  ea 3a 2b d4 b1 9f 13 f9  |....*.5q.:+.....|\n+00000020  c2 7b fb 21 52 15 73 e6  71 d4 65 8e 21 25 1a 63  |.{.!R.s.q.e.!%.c|\n+00000030  03 d3 a5 6b 17 0e e7 18  84 17 d8                 |...k.......|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 20 31 c0 13  eb 77 e7 51 f6 14 fc bd  |.... 1...w.Q....|\n-00000010  94 32 2c 31 58 28 72 29  a9 6a 11 56 f2 c1 de 96  |.2,1X(r).j.V....|\n-00000020  e0 cd cf 4a 47 17 03 01  00 20 b2 95 e4 81 56 f3  |...JG.... ....V.|\n-00000030  f8 6a b1 4f a0 41 41 fd  1f 7e b8 bb 7f 71 80 0d  |.j.O.AA..~...q..|\n-00000040  22 9f 46 be cb b9 b6 bd  c0 0e 15 03 01 00 20 fa  |\".F........... .|\n-00000050  4e 05 c4 29 a5 92 4e 68  34 b7 5b 99 a8 b3 46 1b  |N..)..Nh4.[...F.|\n-00000060  f9 f6 fc e5 b4 f4 cd c4  be 1a b2 af b7 13 43     |..............C|\n+00000000  17 03 01 00 20 8d 73 59  92 ce 93 78 e6 63 cf 9d  |.... .sY...x.c..|\n+00000010  bc 44 40 76 c7 66 3f 15  3a 0a 91 9b 94 49 ec cc  |.D@v.f?.:....I..|\n+00000020  7c 1a 6c b2 85 17 03 01  00 20 2e 6a dd 85 be 12  ||.l...... .j....|\n+00000030  c1 45 e4 04 bf 46 70 19  12 d1 1a 28 f6 22 30 a2  |.E...Fp....(.\"0.|\n+00000040  fe 98 a8 11 c2 c4 19 46  c6 7e 15 03 01 00 20 a7  |.......F.~.... .|\n+00000050  71 3d 87 94 9d 6c c5 dd  de 44 54 47 d5 06 37 82  |q=...l...DTG..7.|\n+00000060  36 e0 c2 e5 91 74 a8 88  28 2f 87 7d a1 a7 e3     |6....t..(/.}...|"}, {"sha": "ae03ea4584dab042c8d12164ea6bb0fdd74cac97", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ECDHE-RSA-AES", "status": "modified", "additions": 82, "deletions": 82, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-RSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,97 +1,97 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f7 b6  |....T...P..R.w..|\n-00000010  40 88 14 a0 46 9b 24 3c  7c 8d cb 63 70 b3 fc 60  |@...F.$<|..cp..`|\n-00000020  fb 04 97 82 c4 f6 d4 02  ab c6 5b 20 da cf c2 62  |..........[ ...b|\n-00000030  87 5b 67 63 3a fa e1 f7  cd 64 d2 84 ee 95 bb 86  |.[gc:....d......|\n-00000040  f5 c7 32 20 74 99 34 6c  ad 92 07 de c0 13 00 00  |..2 t.4l........|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 be 0b 00  |................|\n-00000060  02 ba 00 02 b7 00 02 b4  30 82 02 b0 30 82 02 19  |........0...0...|\n-00000070  a0 03 02 01 02 02 09 00  85 b0 bb a4 8a 7f b8 ca  |................|\n-00000080  30 0d 06 09 2a 86 48 86  f7 0d 01 01 05 05 00 30  |0...*.H........0|\n-00000090  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-000000a0  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-000000b0  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-000000c0  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-000000d0  74 79 20 4c 74 64 30 1e  17 0d 31 30 30 34 32 34  |ty Ltd0...100424|\n-000000e0  30 39 30 39 33 38 5a 17  0d 31 31 30 34 32 34 30  |090938Z..1104240|\n-000000f0  39 30 39 33 38 5a 30 45  31 0b 30 09 06 03 55 04  |90938Z0E1.0...U.|\n-00000100  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-00000110  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-00000120  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-00000130  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 81 9f  |dgits Pty Ltd0..|\n-00000140  30 0d 06 09 2a 86 48 86  f7 0d 01 01 01 05 00 03  |0...*.H.........|\n-00000150  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n-00000160  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n-00000170  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n-00000180  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n-00000190  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n-000001a0  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n-000001b0  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n-000001c0  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n-000001d0  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n-000001e0  81 a7 30 81 a4 30 1d 06  03 55 1d 0e 04 16 04 14  |..0..0...U......|\n-000001f0  b1 ad e2 85 5a cf cb 28  db 69 ce 23 69 de d3 26  |....Z..(.i.#i..&|\n-00000200  8e 18 88 39 30 75 06 03  55 1d 23 04 6e 30 6c 80  |...90u..U.#.n0l.|\n-00000210  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n-00000220  26 8e 18 88 39 a1 49 a4  47 30 45 31 0b 30 09 06  |&...9.I.G0E1.0..|\n-00000230  03 55 04 06 13 02 41 55  31 13 30 11 06 03 55 04  |.U....AU1.0...U.|\n-00000240  08 13 0a 53 6f 6d 65 2d  53 74 61 74 65 31 21 30  |...Some-State1!0|\n-00000250  1f 06 03 55 04 0a 13 18  49 6e 74 65 72 6e 65 74  |...U....Internet|\n-00000260  20 57 69 64 67 69 74 73  20 50 74 79 20 4c 74 64  | Widgits Pty Ltd|\n-00000270  82 09 00 85 b0 bb a4 8a  7f b8 ca 30 0c 06 03 55  |...........0...U|\n-00000280  1d 13 04 05 30 03 01 01  ff 30 0d 06 09 2a 86 48  |....0....0...*.H|\n-00000290  86 f7 0d 01 01 05 05 00  03 81 81 00 08 6c 45 24  |.............lE$|\n-000002a0  c7 6b b1 59 ab 0c 52 cc  f2 b0 14 d7 87 9d 7a 64  |.k.Y..R.......zd|\n-000002b0  75 b5 5a 95 66 e4 c5 2b  8e ae 12 66 1f eb 4f 38  |u.Z.f..+...f..O8|\n-000002c0  b3 6e 60 d3 92 fd f7 41  08 b5 25 13 b1 18 7a 24  |.n`....A..%...z$|\n-000002d0  fb 30 1d ba ed 98 b9 17  ec e7 d7 31 59 db 95 d3  |.0.........1Y...|\n-000002e0  1d 78 ea 50 56 5c d5 82  5a 2d 5a 5f 33 c4 b6 d8  |.x.PV\\..Z-Z_3...|\n-000002f0  c9 75 90 96 8c 0f 52 98  b5 cd 98 1f 89 20 5f f2  |.u....R...... _.|\n-00000300  a0 1c a3 1b 96 94 dd a9  fd 57 e9 70 e8 26 6d 71  |.........W.p.&mq|\n-00000310  99 9b 26 6e 38 50 29 6c  90 a7 bd d9 16 03 01 00  |..&n8P)l........|\n-00000320  cb 0c 00 00 c7 03 00 17  41 04 eb a8 6e 0a 31 5e  |........A...n.1^|\n-00000330  20 2a 31 db 85 82 43 e0  b6 ca a5 3c 1c e1 32 52  | *1...C....<..2R|\n-00000340  e8 75 50 f2 e2 e0 de 30  06 3f e5 6d 8f d5 00 61  |.uP....0.?.m...a|\n-00000350  22 8a bc e0 58 4a 37 3b  fd b7 67 2e c4 07 22 4c  |\"...XJ7;..g...\"L|\n-00000360  ac 27 6d bb 10 b6 e3 6e  34 35 00 80 8c e7 14 84  |.'m....n45......|\n-00000370  84 d0 ab f9 8f c7 ae 6d  34 c7 f8 9e e4 93 3e 67  |.......m4.....>g|\n-00000380  be 03 7a 7a 5b 30 15 99  e2 e8 ff c1 28 af 40 9a  |..zz[0......(.@.|\n-00000390  20 8c 11 e1 c7 12 fe bc  b5 12 51 f8 59 ed af a2  | .........Q.Y...|\n-000003a0  78 d2 77 e2 bc 0e 97 0b  69 8f 98 40 04 6e 59 4e  |x.w.....i..@.nYN|\n-000003b0  6d 50 c2 06 7e a6 74 27  97 a0 35 43 7d 9f 44 66  |mP..~.t'..5C}.Df|\n-000003c0  17 91 fe 19 50 c2 d4 9a  f7 4f 0b 8a 40 c9 33 c8  |....P....O..@.3.|\n-000003d0  a5 b0 0a d4 18 72 4a 1d  5d cd b3 9a 62 d9 1d 04  |.....rJ.]...b...|\n-000003e0  d2 42 04 a1 27 5a 19 02  19 d9 cd ab 16 03 01 00  |.B..'Z..........|\n-000003f0  04 0e 00 00 00                                    |.....|\n+00000000  16 03 01 00 59 02 00 00  55 03 01 52 cc 57 58 f3  |....Y...U..R.WX.|\n+00000010  e4 e3 02 40 35 40 24 91  0a 0b 54 1b 46 0d c1 46  |...@5@$...T.F..F|\n+00000020  7f 9c dd 08 ec 9c 63 73  13 cd e8 20 3c c2 72 a5  |......cs... <.r.|\n+00000030  8d 4e 66 14 83 b1 27 c9  51 7e a6 46 7c 38 e1 66  |.Nf...'.Q~.F|8.f|\n+00000040  3f f6 9c e2 8d e0 51 29  fc 76 ee d0 c0 13 00 00  |?.....Q).v......|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  01 02 be 0b 00 02 ba 00  02 b7 00 02 b4 30 82 02  |.............0..|\n+00000070  b0 30 82 02 19 a0 03 02  01 02 02 09 00 85 b0 bb  |.0..............|\n+00000080  a4 8a 7f b8 ca 30 0d 06  09 2a 86 48 86 f7 0d 01  |.....0...*.H....|\n+00000090  01 05 05 00 30 45 31 0b  30 09 06 03 55 04 06 13  |....0E1.0...U...|\n+000000a0  02 41 55 31 13 30 11 06  03 55 04 08 13 0a 53 6f  |.AU1.0...U....So|\n+000000b0  6d 65 2d 53 74 61 74 65  31 21 30 1f 06 03 55 04  |me-State1!0...U.|\n+000000c0  0a 13 18 49 6e 74 65 72  6e 65 74 20 57 69 64 67  |...Internet Widg|\n+000000d0  69 74 73 20 50 74 79 20  4c 74 64 30 1e 17 0d 31  |its Pty Ltd0...1|\n+000000e0  30 30 34 32 34 30 39 30  39 33 38 5a 17 0d 31 31  |00424090938Z..11|\n+000000f0  30 34 32 34 30 39 30 39  33 38 5a 30 45 31 0b 30  |0424090938Z0E1.0|\n+00000100  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+00000110  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+00000120  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+00000130  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+00000140  74 64 30 81 9f 30 0d 06  09 2a 86 48 86 f7 0d 01  |td0..0...*.H....|\n+00000150  01 01 05 00 03 81 8d 00  30 81 89 02 81 81 00 bb  |........0.......|\n+00000160  79 d6 f5 17 b5 e5 bf 46  10 d0 dc 69 be e6 2b 07  |y......F...i..+.|\n+00000170  43 5a d0 03 2d 8a 7a 43  85 b7 14 52 e7 a5 65 4c  |CZ..-.zC...R..eL|\n+00000180  2c 78 b8 23 8c b5 b4 82  e5 de 1f 95 3b 7e 62 a5  |,x.#........;~b.|\n+00000190  2c a5 33 d6 fe 12 5c 7a  56 fc f5 06 bf fa 58 7b  |,.3...\\zV.....X{|\n+000001a0  26 3f b5 cd 04 d3 d0 c9  21 96 4a c7 f4 54 9f 5a  |&?......!.J..T.Z|\n+000001b0  bf ef 42 71 00 fe 18 99  07 7f 7e 88 7d 7d f1 04  |..Bq......~.}}..|\n+000001c0  39 c4 a2 2e db 51 c9 7c  e3 c0 4c 3b 32 66 01 cf  |9....Q.|..L;2f..|\n+000001d0  af b1 1d b8 71 9a 1d db  db 89 6b ae da 2d 79 02  |....q.....k..-y.|\n+000001e0  03 01 00 01 a3 81 a7 30  81 a4 30 1d 06 03 55 1d  |.......0..0...U.|\n+000001f0  0e 04 16 04 14 b1 ad e2  85 5a cf cb 28 db 69 ce  |.........Z..(.i.|\n+00000200  23 69 de d3 26 8e 18 88  39 30 75 06 03 55 1d 23  |#i..&...90u..U.#|\n+00000210  04 6e 30 6c 80 14 b1 ad  e2 85 5a cf cb 28 db 69  |.n0l......Z..(.i|\n+00000220  ce 23 69 de d3 26 8e 18  88 39 a1 49 a4 47 30 45  |.#i..&...9.I.G0E|\n+00000230  31 0b 30 09 06 03 55 04  06 13 02 41 55 31 13 30  |1.0...U....AU1.0|\n+00000240  11 06 03 55 04 08 13 0a  53 6f 6d 65 2d 53 74 61  |...U....Some-Sta|\n+00000250  74 65 31 21 30 1f 06 03  55 04 0a 13 18 49 6e 74  |te1!0...U....Int|\n+00000260  65 72 6e 65 74 20 57 69  64 67 69 74 73 20 50 74  |ernet Widgits Pt|\n+00000270  79 20 4c 74 64 82 09 00  85 b0 bb a4 8a 7f b8 ca  |y Ltd...........|\n+00000280  30 0c 06 03 55 1d 13 04  05 30 03 01 01 ff 30 0d  |0...U....0....0.|\n+00000290  06 09 2a 86 48 86 f7 0d  01 01 05 05 00 03 81 81  |..*.H...........|\n+000002a0  00 08 6c 45 24 c7 6b b1  59 ab 0c 52 cc f2 b0 14  |..lE$.k.Y..R....|\n+000002b0  d7 87 9d 7a 64 75 b5 5a  95 66 e4 c5 2b 8e ae 12  |...zdu.Z.f..+...|\n+000002c0  66 1f eb 4f 38 b3 6e 60  d3 92 fd f7 41 08 b5 25  |f..O8.n`....A..%|\n+000002d0  13 b1 18 7a 24 fb 30 1d  ba ed 98 b9 17 ec e7 d7  |...z$.0.........|\n+000002e0  31 59 db 95 d3 1d 78 ea  50 56 5c d5 82 5a 2d 5a  |1Y....x.PV\\..Z-Z|\n+000002f0  5f 33 c4 b6 d8 c9 75 90  96 8c 0f 52 98 b5 cd 98  |_3....u....R....|\n+00000300  1f 89 20 5f f2 a0 1c a3  1b 96 94 dd a9 fd 57 e9  |.. _..........W.|\n+00000310  70 e8 26 6d 71 99 9b 26  6e 38 50 29 6c 90 a7 bd  |p.&mq..&n8P)l...|\n+00000320  d9 16 03 01 00 cb 0c 00  00 c7 03 00 17 41 04 30  |.............A.0|\n+00000330  a3 31 3d 66 ce 80 2a fb  1d 11 66 f6 35 cb c9 d2  |.1=f..*...f.5...|\n+00000340  53 fd 18 37 84 75 7e 00  55 92 0c 6d e5 40 46 77  |S..7.u~.U..m.@Fw|\n+00000350  d8 17 d4 81 13 74 90 e0  7c 4b 58 25 65 99 8e 18  |.....t..|KX%e...|\n+00000360  9f d7 af e0 70 f8 c6 99  13 2d 0e 28 32 02 40 00  |....p....-.(2.@.|\n+00000370  80 b3 34 d4 4a d7 c1 8e  1d f6 23 ef 04 0c d6 bb  |..4.J.....#.....|\n+00000380  40 8c 85 0f ce a6 8e d2  29 3d 81 0f 47 ce 59 dc  |@.......)=..G.Y.|\n+00000390  dc 56 68 b1 11 af 98 3a  07 4b 7a d9 6e 08 c5 ff  |.Vh....:.Kz.n...|\n+000003a0  b2 54 06 72 f3 d2 19 22  df ee 90 fc 8a 4d 76 c1  |.T.r...\".....Mv.|\n+000003b0  c2 d4 af d7 77 82 79 3d  12 0f 9c 56 28 a6 43 ea  |....w.y=...V(.C.|\n+000003c0  a3 71 c2 af bf 52 40 4a  fa c7 3e d3 ae 8e 84 42  |.q...R@J..>....B|\n+000003d0  5f fd 9f a7 0f 94 8c fa  15 86 23 28 be 2b 3a 32  |_.........#(.+:2|\n+000003e0  cb e5 18 5c 2d d6 d9 94  5f a4 b7 05 d0 a0 ab aa  |...\\-..._.......|\n+000003f0  c3 16 03 01 00 04 0e 00  00 00                    |..........|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 01 00 01  |..h.A.Vk.Z......|\n-00000050  01 16 03 01 00 30 33 95  ec 63 ff 89 fe 3b f8 80  |.....03..c...;..|\n-00000060  1b 05 c6 29 a4 72 78 af  04 c1 21 53 fd 02 28 36  |...).rx...!S..(6|\n-00000070  29 b1 c7 a8 25 02 3d b0  ad 5b f3 52 9c a0 f5 8d  |)...%.=..[.R....|\n-00000080  da 03 65 b6 ac 27                                 |..e..'|\n+00000050  01 16 03 01 00 30 34 e6  9a 20 8c 33 d7 85 ae 83  |.....04.. .3....|\n+00000060  f1 8f 46 68 63 3f a3 23  88 f8 00 9b 01 a7 80 c6  |..Fhc?.#........|\n+00000070  8b 45 6e 5a c1 2f 62 5f  70 b6 20 1e 58 18 53 6b  |.EnZ./b_p. .X.Sk|\n+00000080  e2 cb ce 2c 97 7c                                 |...,.||\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 30 20 59 0a 77 5a  |..........0 Y.wZ|\n-00000010  15 63 2b 9e f0 ff 27 ce  a8 57 89 e3 32 91 2d 5b  |.c+...'..W..2.-[|\n-00000020  55 e1 c0 fd 50 69 c8 e1  d8 02 e3 3f d4 56 d7 b8  |U...Pi.....?.V..|\n-00000030  80 5f 83 53 5e 2e 17 c3  41 72 bd                 |._.S^...Ar.|\n+00000000  14 03 01 00 01 01 16 03  01 00 30 ff 81 ba a6 cc  |..........0.....|\n+00000010  c5 25 83 eb 65 99 39 4d  19 39 c1 8c cf b5 30 58  |.%..e.9M.9....0X|\n+00000020  aa 6f e1 f4 f7 da 88 14  39 c0 1b 5a f3 05 bd 8c  |.o......9..Z....|\n+00000030  6b af 52 32 0f 1e 87 0c  7a 39 3a                 |k.R2....z9:|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 20 f5 42 0c  71 9c 27 35 6f 89 96 ca  |.... .B.q.'5o...|\n-00000010  25 55 ce d3 81 3a 99 6e  c3 25 29 c6 71 05 f2 e2  |%U...:.n.%).q...|\n-00000020  4d 21 6f d9 d6 17 03 01  00 20 a2 03 64 b9 0e e9  |M!o...... ..d...|\n-00000030  cf 8e aa 15 f4 46 66 52  a6 c1 8b 00 3b 22 36 cc  |.....FfR....;\"6.|\n-00000040  34 b6 43 08 a5 73 eb 3f  1f e6 15 03 01 00 20 52  |4.C..s.?...... R|\n-00000050  4d 42 9f 91 8e 0d d9 3f  ca 35 7f 47 af 30 14 5c  |MB.....?.5.G.0.\\|\n-00000060  10 6d de 84 84 36 2e f3  24 44 a3 5f 2b e4 7e     |.m...6..$D._+.~|\n+00000000  17 03 01 00 20 72 b0 d7  a5 88 02 64 29 65 4b d5  |.... r.....d)eK.|\n+00000010  f7 0b 74 bd df af ce 2d  02 6b 01 37 fb 44 80 e6  |..t....-.k.7.D..|\n+00000020  f4 e1 17 e6 7f 17 03 01  00 20 18 8a 94 81 86 56  |......... .....V|\n+00000030  eb 7e 77 48 03 ce b4 8c  2b 75 b8 06 eb 66 5f 77  |.~wH....+u...f_w|\n+00000040  df 98 1f cd 6d bd 39 38  06 fc 15 03 01 00 20 d1  |....m.98...... .|\n+00000050  bd 74 3b eb a2 f6 be ad  ab df 5f 99 c2 92 fd 9b  |.t;......._.....|\n+00000060  e7 9a 03 a5 f4 00 99 8c  f8 85 34 2d 15 a0 30     |..........4-..0|"}, {"sha": "1a6c42c14581e82068c5041faac002d2db4de2a3", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-RSA-RC4", "status": "modified", "additions": 64, "deletions": 63, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,63 +1,64 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 4a 02 00 00  46 03 01 52 ac 77 f7 17  |....J...F..R.w..|\n-00000010  4c 25 27 29 1a fe 71 9e  69 96 e9 a7 8a 5f dc 47  |L%')..q.i...._.G|\n-00000020  b1 70 9a 23 e0 3a 32 95  4e 73 a4 20 b1 7a f0 69  |.p.#.:2.Ns. .z.i|\n-00000030  f6 26 55 0b 6b 77 cc b6  f2 03 5b 6c 81 25 28 ea  |.&U.kw....[l.%(.|\n-00000040  4b 2e ac 7a fe 54 62 bf  62 b4 0c e3 00 05 00 16  |K..z.Tb.b.......|\n-00000050  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+00000000  16 03 01 00 51 02 00 00  4d 03 01 52 cc 57 58 d1  |....Q...M..R.WX.|\n+00000010  c7 22 72 55 68 fb 69 12  2d 85 02 b7 66 93 40 d1  |.\"rUh.i.-...f.@.|\n+00000020  2d 32 57 a8 f2 06 62 93  a0 39 b6 20 08 37 44 11  |-2W...b..9. .7D.|\n+00000030  73 db 68 79 6d 98 30 f7  bf a2 9b a3 cb c0 03 cb  |s.hym.0.........|\n+00000040  7f 79 e9 31 08 ce 93 17  25 6d c3 c4 00 05 00 00  |.y.1....%m......|\n+00000050  05 ff 01 00 01 00 16 03  01 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 01 00 04 0e 00  |n8P)l...........|\n+00000320  00 00                                             |..|\n >>> Flow 3 (client to server)\n 00000000  16 03 01 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n 00000010  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n@@ -68,15 +69,15 @@\n 00000060  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n 00000070  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n 00000080  35 d4 1c 43 d1 30 6f 55  4e 0a 70 14 03 01 00 01  |5..C.0oUN.p.....|\n-00000090  01 16 03 01 00 24 8f 42  2e 1a 6f 42 a2 d1 51 ae  |.....$.B..oB..Q.|\n-000000a0  68 c4 3c 76 d0 df c3 41  3e 79 88 1a 43 28 bf 08  |h.<v...A>y..C(..|\n-000000b0  ad 4e e2 1c f1 7f 87 3d  9d ba                    |.N.....=..|\n+00000090  01 16 03 01 00 24 54 26  aa 7d 70 99 51 f1 bc d6  |.....$T&.}p.Q...|\n+000000a0  e9 0b 4b c7 b2 02 8c ed  36 c9 7f b8 f7 82 29 3a  |..K.....6.....):|\n+000000b0  0b 6a c0 b4 ef 38 3f e8  8a bf                    |.j...8?...|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 24 19 91 48 bb ae  |..........$..H..|\n-00000010  63 9d 91 d8 2f 8b 97 00  b4 ae 79 06 88 a8 23 a0  |c.../.....y...#.|\n-00000020  2d f4 dc 0f d9 6e c9 24  61 dd 3f 54 ec 9b 2f     |-....n.$a.?T../|\n+00000000  14 03 01 00 01 01 16 03  01 00 24 9a 52 2f b1 3c  |..........$.R/.<|\n+00000010  71 92 5c 81 68 a8 27 4c  b8 a9 4e 69 81 41 01 a2  |q.\\.h.'L..Ni.A..|\n+00000020  99 d4 0c dc 15 7b 52 b5  ee be a6 6f 70 88 91     |.....{R....op..|\n >>> Flow 5 (client to server)\n-00000000  17 03 01 00 1a 80 15 48  e1 1a 02 3e 0f 11 0a 8b  |.......H...>....|\n-00000010  ff 31 28 5f 7c 1e af fb  c7 c2 1f 8b fc 0f 12 15  |.1(_|...........|\n-00000020  03 01 00 16 67 d2 c4 57  fd e1 55 9f 51 0d ff 89  |....g..W..U.Q...|\n-00000030  09 17 87 2c 6c d4 96 9d  d9 86                    |...,l.....|\n+00000000  17 03 01 00 1a b5 06 d1  18 a6 4b 26 21 47 be 14  |..........K&!G..|\n+00000010  79 2e 63 49 84 1e 83 31  3b cb 97 14 94 5b 09 15  |y.cI...1;....[..|\n+00000020  03 01 00 16 9d d6 d0 2a  65 f2 7e 31 20 e6 63 89  |.......*e.~1 .c.|\n+00000030  b3 76 92 20 db b8 e6 25  54 1b                    |.v. ...%T.|"}, {"sha": "935aac14910dbe64a59d4bdfe777518da2fb7b78", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv11-ECDHE-ECDSA-AES", "status": "modified", "additions": 72, "deletions": 71, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-ECDSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,88 +1,89 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 02 00 54 02 00 00  50 03 02 52 ac 77 f7 1a  |....T...P..R.w..|\n-00000010  64 f7 56 af 0c d1 f7 5c  35 fb 48 6a b7 29 65 d6  |d.V....\\5.Hj.)e.|\n-00000020  3c b0 76 37 16 02 3c ed  25 24 d5 20 29 00 2f 99  |<.v7..<.%$. )./.|\n-00000030  d5 2b 2e 59 f5 59 c6 ca  04 57 a9 5c ec ee f7 38  |.+.Y.Y...W.\\...8|\n-00000040  c9 0d 3b 6b e9 01 8b bd  5a e5 0d 68 c0 09 00 00  |..;k....Z..h....|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 02 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 02 00  |6$1{j.9....*....|\n-00000270  d5 0c 00 00 d1 03 00 17  41 04 6f c1 70 ca c9 46  |........A.o.p..F|\n-00000280  2c 5e 69 58 33 1f 6f d6  aa 87 b7 bb d5 66 42 e9  |,^iX3.o......fB.|\n-00000290  34 2e 37 d1 0b 04 11 14  ce 57 f4 00 6c ec 47 31  |4.7......W..l.G1|\n-000002a0  e4 5a 38 25 50 51 f7 3a  22 b0 9f 7c 4d 81 f9 9a  |.Z8%PQ.:\"..|M...|\n-000002b0  b3 c9 fd 4e f4 20 62 0b  73 ce 00 8a 30 81 87 02  |...N. b.s...0...|\n-000002c0  41 4d ee 15 33 7a 88 5f  20 15 e8 76 1f c9 0f 16  |AM..3z._ ..v....|\n-000002d0  64 8c e1 d6 97 45 6a 56  1f 75 1b 41 6a ca de 86  |d....EjV.u.Aj...|\n-000002e0  3e de 50 49 e7 21 ac f9  09 14 ca 96 c7 e6 23 ba  |>.PI.!........#.|\n-000002f0  32 8d d4 22 b7 02 0b 40  77 cc 3f 19 50 9e a1 72  |2..\"...@w.?.P..r|\n-00000300  b8 8d 02 42 01 2c d4 47  4c 0b 20 3a 14 dd 11 ed  |...B.,.GL. :....|\n-00000310  90 ed 83 ff 94 62 ec 88  d9 11 fd 2d 0c b0 01 b7  |.....b.....-....|\n-00000320  0c 47 0b a2 1f 7f 73 5a  77 7d 76 27 8b 8c ca 29  |.G....sZw}v'...)|\n-00000330  b5 b8 fb 22 79 25 4b dd  0a a1 39 c9 81 c7 2b 24  |...\"y%K...9...+$|\n-00000340  c9 5c b5 31 17 95 16 03  02 00 04 0e 00 00 00     |.\\.1...........|\n+00000000  16 03 02 00 59 02 00 00  55 03 02 52 cc 57 58 b6  |....Y...U..R.WX.|\n+00000010  e0 47 f9 28 99 af 27 4c  21 20 d6 b1 ae 4e d4 62  |.G.(..'L! ...N.b|\n+00000020  8a 24 f4 62 47 77 a5 78  4b d0 09 20 5b 17 6b 88  |.$.bGw.xK.. [.k.|\n+00000030  8a ab 8c 0b 63 d9 c3 06  6d 13 e3 27 22 38 ee 69  |....c...m..'\"8.i|\n+00000040  88 7d e1 18 f8 ef 93 62  f4 06 1f ab c0 09 00 00  |.}.....b........|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  02 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 02 00 d6 0c 00  00 d2 03 00 17 41 04 79  |*............A.y|\n+00000280  48 bb 4c 30 4f 5c fe 5e  37 65 dc 65 90 d4 4a 7f  |H.L0O\\.^7e.e..J.|\n+00000290  8c fc 45 b6 4f fb 11 2b  7c 20 cf 94 83 79 f6 cc  |..E.O..+| ...y..|\n+000002a0  c6 d6 44 0c ad ae 5c fc  fd 87 0f b9 51 03 dc 38  |..D...\\.....Q..8|\n+000002b0  d8 44 a8 75 18 7e d1 c6  3e 9e 0a 45 85 92 4b 00  |.D.u.~..>..E..K.|\n+000002c0  8b 30 81 88 02 42 01 dd  a7 0b d6 69 3c b5 fc 06  |.0...B.....i<...|\n+000002d0  8b c3 37 1d 12 be 0d 80  4a e4 d5 4e df c0 5c 7d  |..7.....J..N..\\}|\n+000002e0  ca 61 f2 3c 87 83 e0 de  22 0f 25 78 f0 21 ec ca  |.a.<....\".%x.!..|\n+000002f0  8e 62 28 24 10 3e d9 7d  30 d7 f1 bd dc c6 98 a9  |.b($.>.}0.......|\n+00000300  c4 3f 85 8f 47 8c 8e b7  02 42 01 3c 61 1e ee e9  |.?..G....B.<a...|\n+00000310  44 2d ae 57 d1 2f 04 59  16 f0 80 03 3e a1 fe 1f  |D-.W./.Y....>...|\n+00000320  5f 54 b2 e1 b2 c0 07 3c  ad d9 9f 95 8d 79 7d 9b  |_T.....<.....y}.|\n+00000330  8e 68 cc b9 7f 08 b3 c9  24 1f a9 37 18 60 52 54  |.h......$..7.`RT|\n+00000340  5e 55 9c 36 1c 06 29 6b  7b 95 3e 73 16 03 02 00  |^U.6..)k{.>s....|\n+00000350  04 0e 00 00 00                                    |.....|\n >>> Flow 3 (client to server)\n 00000000  16 03 02 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 02 00 01  |..h.A.Vk.Z......|\n 00000050  01 16 03 02 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n-00000060  00 00 00 00 00 00 8d 08  b9 eb b8 28 6a 9b b0 fb  |...........(j...|\n-00000070  c3 79 06 07 ed b2 e5 56  5e 80 5d 0a 12 3b 50 b7  |.y.....V^.]..;P.|\n-00000080  eb a0 6c eb aa d2 16 02  86 a8 76 13 23 65 ce ff  |..l.......v.#e..|\n-00000090  57 52 7c 30 f2 a0                                 |WR|0..|\n+00000060  00 00 00 00 00 00 42 9f  9d 29 fc 0e e3 9d 6d 89  |......B..)....m.|\n+00000070  38 c3 6f d8 0f 0f 41 69  24 b8 44 a8 81 28 56 80  |8.o...Ai$.D..(V.|\n+00000080  c2 a2 cd b8 27 84 4d f1  f0 5c dc df 94 a7 a4 05  |....'.M..\\......|\n+00000090  84 b9 f6 5c b4 50                                 |...\\.P|\n >>> Flow 4 (server to client)\n-00000000  14 03 02 00 01 01 16 03  02 00 40 8f b3 15 b3 54  |..........@....T|\n-00000010  3b e9 7e c5 ec b7 df 4b  ae e4 d7 0f e5 4a d5 8e  |;.~....K.....J..|\n-00000020  1c 94 f8 19 d9 a7 f3 5d  8b 18 6b 1f e8 a2 94 e4  |.......]..k.....|\n-00000030  f9 31 ed ab 38 3b 25 22  12 61 d6 c9 c7 76 6d 82  |.1..8;%\".a...vm.|\n-00000040  ac 16 02 89 73 4f 02 98  e2 95 0f                 |....sO.....|\n+00000000  14 03 02 00 01 01 16 03  02 00 40 5f 24 a7 68 9c  |..........@_$.h.|\n+00000010  cc 93 4c fc a1 25 3d 71  43 88 d9 17 9b c9 99 6b  |..L..%=qC......k|\n+00000020  01 00 24 a8 ca b3 52 3e  cf 2f f5 3e 80 16 c9 cb  |..$...R>./.>....|\n+00000030  52 20 c3 f5 e0 8f a2 d9  f9 3d 86 c5 44 f6 52 31  |R .......=..D.R1|\n+00000040  82 3a f9 fb d1 f6 43 5b  b8 28 bc                 |.:....C[.(.|\n >>> Flow 5 (client to server)\n 00000000  17 03 02 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-00000010  00 00 00 00 00 f3 c1 b3  fb 58 f0 ce 01 e4 23 4f  |.........X....#O|\n-00000020  de d9 81 9b d8 80 66 7a  fb 7b 45 1b a8 ac a0 f5  |......fz.{E.....|\n-00000030  0b b4 92 74 e9 15 03 02  00 30 00 00 00 00 00 00  |...t.....0......|\n-00000040  00 00 00 00 00 00 00 00  00 00 0b 89 72 90 d6 30  |............r..0|\n-00000050  1c fb 6d ab 68 79 48 6d  2a 32 1a 4f b7 45 0b 08  |..m.hyHm*2.O.E..|\n-00000060  11 dd 52 66 76 65 fc 02  e1 7e                    |..Rfve...~|\n+00000010  00 00 00 00 00 18 60 dd  b8 15 76 04 ae 8c e9 09  |......`...v.....|\n+00000020  84 8c c2 04 38 b2 45 3d  cb ea 9b cf 11 1a 38 67  |....8.E=......8g|\n+00000030  cd ff 89 4c 8c 15 03 02  00 30 00 00 00 00 00 00  |...L.....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 f3 b4 a0 68 1b 3b  |.............h.;|\n+00000050  5c c7 e7 70 32 5f 19 4f  a4 bf 0a 57 bc a0 7d be  |\\..p2_.O...W..}.|\n+00000060  91 46 5a 8e 02 25 67 20  d0 c2                    |.FZ..%g ..|"}, {"sha": "9bfaa75deb12541b105e9b647aa0d38b6a07312c", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv11-ECDHE-RSA-AES", "status": "modified", "additions": 82, "deletions": 82, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-RSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,99 +1,99 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 02 00 54 02 00 00  50 03 02 52 ac 77 f7 e5  |....T...P..R.w..|\n-00000010  29 8d 77 7e b2 af b8 50  dd 1f d4 2d 86 c1 bd c6  |).w~...P...-....|\n-00000020  13 77 41 6c a1 2a 68 20  80 ce 0f 20 b4 52 61 8d  |.wAl.*h ... .Ra.|\n-00000030  44 36 59 2b fa 58 be 5f  fa 69 f9 cd cf 4b 6f 9e  |D6Y+.X._.i...Ko.|\n-00000040  dd 2f bf 58 e1 5f 11 5f  fa 24 75 38 c0 13 00 00  |./.X._._.$u8....|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 02 02 be 0b 00  |................|\n-00000060  02 ba 00 02 b7 00 02 b4  30 82 02 b0 30 82 02 19  |........0...0...|\n-00000070  a0 03 02 01 02 02 09 00  85 b0 bb a4 8a 7f b8 ca  |................|\n-00000080  30 0d 06 09 2a 86 48 86  f7 0d 01 01 05 05 00 30  |0...*.H........0|\n-00000090  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-000000a0  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-000000b0  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-000000c0  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-000000d0  74 79 20 4c 74 64 30 1e  17 0d 31 30 30 34 32 34  |ty Ltd0...100424|\n-000000e0  30 39 30 39 33 38 5a 17  0d 31 31 30 34 32 34 30  |090938Z..1104240|\n-000000f0  39 30 39 33 38 5a 30 45  31 0b 30 09 06 03 55 04  |90938Z0E1.0...U.|\n-00000100  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-00000110  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-00000120  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-00000130  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 81 9f  |dgits Pty Ltd0..|\n-00000140  30 0d 06 09 2a 86 48 86  f7 0d 01 01 01 05 00 03  |0...*.H.........|\n-00000150  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n-00000160  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n-00000170  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n-00000180  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n-00000190  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n-000001a0  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n-000001b0  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n-000001c0  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n-000001d0  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n-000001e0  81 a7 30 81 a4 30 1d 06  03 55 1d 0e 04 16 04 14  |..0..0...U......|\n-000001f0  b1 ad e2 85 5a cf cb 28  db 69 ce 23 69 de d3 26  |....Z..(.i.#i..&|\n-00000200  8e 18 88 39 30 75 06 03  55 1d 23 04 6e 30 6c 80  |...90u..U.#.n0l.|\n-00000210  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n-00000220  26 8e 18 88 39 a1 49 a4  47 30 45 31 0b 30 09 06  |&...9.I.G0E1.0..|\n-00000230  03 55 04 06 13 02 41 55  31 13 30 11 06 03 55 04  |.U....AU1.0...U.|\n-00000240  08 13 0a 53 6f 6d 65 2d  53 74 61 74 65 31 21 30  |...Some-State1!0|\n-00000250  1f 06 03 55 04 0a 13 18  49 6e 74 65 72 6e 65 74  |...U....Internet|\n-00000260  20 57 69 64 67 69 74 73  20 50 74 79 20 4c 74 64  | Widgits Pty Ltd|\n-00000270  82 09 00 85 b0 bb a4 8a  7f b8 ca 30 0c 06 03 55  |...........0...U|\n-00000280  1d 13 04 05 30 03 01 01  ff 30 0d 06 09 2a 86 48  |....0....0...*.H|\n-00000290  86 f7 0d 01 01 05 05 00  03 81 81 00 08 6c 45 24  |.............lE$|\n-000002a0  c7 6b b1 59 ab 0c 52 cc  f2 b0 14 d7 87 9d 7a 64  |.k.Y..R.......zd|\n-000002b0  75 b5 5a 95 66 e4 c5 2b  8e ae 12 66 1f eb 4f 38  |u.Z.f..+...f..O8|\n-000002c0  b3 6e 60 d3 92 fd f7 41  08 b5 25 13 b1 18 7a 24  |.n`....A..%...z$|\n-000002d0  fb 30 1d ba ed 98 b9 17  ec e7 d7 31 59 db 95 d3  |.0.........1Y...|\n-000002e0  1d 78 ea 50 56 5c d5 82  5a 2d 5a 5f 33 c4 b6 d8  |.x.PV\\..Z-Z_3...|\n-000002f0  c9 75 90 96 8c 0f 52 98  b5 cd 98 1f 89 20 5f f2  |.u....R...... _.|\n-00000300  a0 1c a3 1b 96 94 dd a9  fd 57 e9 70 e8 26 6d 71  |.........W.p.&mq|\n-00000310  99 9b 26 6e 38 50 29 6c  90 a7 bd d9 16 03 02 00  |..&n8P)l........|\n-00000320  cb 0c 00 00 c7 03 00 17  41 04 f2 1f af 58 08 d7  |........A....X..|\n-00000330  4e ac d4 ee 2b 56 df 11  96 c8 01 d8 c8 0c 97 95  |N...+V..........|\n-00000340  3c 34 1c 24 8b e9 a0 92  1a 74 71 9c ee 56 ec 0f  |<4.$.....tq..V..|\n-00000350  b5 c6 3b 3c f1 a2 4d 52  11 f1 e3 3b 43 f8 fc 43  |..;<..MR...;C..C|\n-00000360  83 67 7d 62 c7 56 0c 38  01 5c 00 80 83 5f df 3b  |.g}b.V.8.\\..._.;|\n-00000370  fe 4f 90 30 c6 c3 c7 16  df 7b 58 dc 5a c1 68 e6  |.O.0.....{X.Z.h.|\n-00000380  18 7f 5e 4c 0f ae d2 f0  81 2c 48 a9 c4 7b 05 f6  |..^L.....,H..{..|\n-00000390  e0 9e 17 95 dd fe a3 53  32 57 12 f4 96 55 94 ff  |.......S2W...U..|\n-000003a0  0a ee cf 95 85 43 7c 75  fc f3 13 5e e0 cf c2 ff  |.....C|u...^....|\n-000003b0  56 c6 2b 60 09 b3 32 b2  1a 93 49 2e f0 b6 5c 2f  |V.+`..2...I...\\/|\n-000003c0  5a 45 c9 da 8c ee 26 72  ca 9e b4 63 13 a8 7d 60  |ZE....&r...c..}`|\n-000003d0  54 dd 17 70 40 60 15 e1  85 d5 64 02 83 e2 b3 e9  |T..p@`....d.....|\n-000003e0  b3 de 84 6e 9d 62 18 48  99 66 cd 63 16 03 02 00  |...n.b.H.f.c....|\n-000003f0  04 0e 00 00 00                                    |.....|\n+00000000  16 03 02 00 59 02 00 00  55 03 02 52 cc 57 58 39  |....Y...U..R.WX9|\n+00000010  f8 48 dc e0 ba ad e3 f6  6e bf 6b 9e e0 34 53 4f  |.H......n.k..4SO|\n+00000020  cd 16 7a 31 ac 23 de 31  3c 4b 0d 20 41 92 79 b5  |..z1.#.1<K. A.y.|\n+00000030  e0 f6 1c 25 da db 35 3b  58 61 04 52 7f ac da 64  |...%..5;Xa.R...d|\n+00000040  0d 31 f0 52 55 5d ec 37  94 21 aa 6f c0 13 00 00  |.1.RU].7.!.o....|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  02 02 be 0b 00 02 ba 00  02 b7 00 02 b4 30 82 02  |.............0..|\n+00000070  b0 30 82 02 19 a0 03 02  01 02 02 09 00 85 b0 bb  |.0..............|\n+00000080  a4 8a 7f b8 ca 30 0d 06  09 2a 86 48 86 f7 0d 01  |.....0...*.H....|\n+00000090  01 05 05 00 30 45 31 0b  30 09 06 03 55 04 06 13  |....0E1.0...U...|\n+000000a0  02 41 55 31 13 30 11 06  03 55 04 08 13 0a 53 6f  |.AU1.0...U....So|\n+000000b0  6d 65 2d 53 74 61 74 65  31 21 30 1f 06 03 55 04  |me-State1!0...U.|\n+000000c0  0a 13 18 49 6e 74 65 72  6e 65 74 20 57 69 64 67  |...Internet Widg|\n+000000d0  69 74 73 20 50 74 79 20  4c 74 64 30 1e 17 0d 31  |its Pty Ltd0...1|\n+000000e0  30 30 34 32 34 30 39 30  39 33 38 5a 17 0d 31 31  |00424090938Z..11|\n+000000f0  30 34 32 34 30 39 30 39  33 38 5a 30 45 31 0b 30  |0424090938Z0E1.0|\n+00000100  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+00000110  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+00000120  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+00000130  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+00000140  74 64 30 81 9f 30 0d 06  09 2a 86 48 86 f7 0d 01  |td0..0...*.H....|\n+00000150  01 01 05 00 03 81 8d 00  30 81 89 02 81 81 00 bb  |........0.......|\n+00000160  79 d6 f5 17 b5 e5 bf 46  10 d0 dc 69 be e6 2b 07  |y......F...i..+.|\n+00000170  43 5a d0 03 2d 8a 7a 43  85 b7 14 52 e7 a5 65 4c  |CZ..-.zC...R..eL|\n+00000180  2c 78 b8 23 8c b5 b4 82  e5 de 1f 95 3b 7e 62 a5  |,x.#........;~b.|\n+00000190  2c a5 33 d6 fe 12 5c 7a  56 fc f5 06 bf fa 58 7b  |,.3...\\zV.....X{|\n+000001a0  26 3f b5 cd 04 d3 d0 c9  21 96 4a c7 f4 54 9f 5a  |&?......!.J..T.Z|\n+000001b0  bf ef 42 71 00 fe 18 99  07 7f 7e 88 7d 7d f1 04  |..Bq......~.}}..|\n+000001c0  39 c4 a2 2e db 51 c9 7c  e3 c0 4c 3b 32 66 01 cf  |9....Q.|..L;2f..|\n+000001d0  af b1 1d b8 71 9a 1d db  db 89 6b ae da 2d 79 02  |....q.....k..-y.|\n+000001e0  03 01 00 01 a3 81 a7 30  81 a4 30 1d 06 03 55 1d  |.......0..0...U.|\n+000001f0  0e 04 16 04 14 b1 ad e2  85 5a cf cb 28 db 69 ce  |.........Z..(.i.|\n+00000200  23 69 de d3 26 8e 18 88  39 30 75 06 03 55 1d 23  |#i..&...90u..U.#|\n+00000210  04 6e 30 6c 80 14 b1 ad  e2 85 5a cf cb 28 db 69  |.n0l......Z..(.i|\n+00000220  ce 23 69 de d3 26 8e 18  88 39 a1 49 a4 47 30 45  |.#i..&...9.I.G0E|\n+00000230  31 0b 30 09 06 03 55 04  06 13 02 41 55 31 13 30  |1.0...U....AU1.0|\n+00000240  11 06 03 55 04 08 13 0a  53 6f 6d 65 2d 53 74 61  |...U....Some-Sta|\n+00000250  74 65 31 21 30 1f 06 03  55 04 0a 13 18 49 6e 74  |te1!0...U....Int|\n+00000260  65 72 6e 65 74 20 57 69  64 67 69 74 73 20 50 74  |ernet Widgits Pt|\n+00000270  79 20 4c 74 64 82 09 00  85 b0 bb a4 8a 7f b8 ca  |y Ltd...........|\n+00000280  30 0c 06 03 55 1d 13 04  05 30 03 01 01 ff 30 0d  |0...U....0....0.|\n+00000290  06 09 2a 86 48 86 f7 0d  01 01 05 05 00 03 81 81  |..*.H...........|\n+000002a0  00 08 6c 45 24 c7 6b b1  59 ab 0c 52 cc f2 b0 14  |..lE$.k.Y..R....|\n+000002b0  d7 87 9d 7a 64 75 b5 5a  95 66 e4 c5 2b 8e ae 12  |...zdu.Z.f..+...|\n+000002c0  66 1f eb 4f 38 b3 6e 60  d3 92 fd f7 41 08 b5 25  |f..O8.n`....A..%|\n+000002d0  13 b1 18 7a 24 fb 30 1d  ba ed 98 b9 17 ec e7 d7  |...z$.0.........|\n+000002e0  31 59 db 95 d3 1d 78 ea  50 56 5c d5 82 5a 2d 5a  |1Y....x.PV\\..Z-Z|\n+000002f0  5f 33 c4 b6 d8 c9 75 90  96 8c 0f 52 98 b5 cd 98  |_3....u....R....|\n+00000300  1f 89 20 5f f2 a0 1c a3  1b 96 94 dd a9 fd 57 e9  |.. _..........W.|\n+00000310  70 e8 26 6d 71 99 9b 26  6e 38 50 29 6c 90 a7 bd  |p.&mq..&n8P)l...|\n+00000320  d9 16 03 02 00 cb 0c 00  00 c7 03 00 17 41 04 0a  |.............A..|\n+00000330  be f8 00 24 e0 50 bf 90  12 25 b9 26 3b 7f 4a a2  |...$.P...%.&;.J.|\n+00000340  b3 4b b1 76 db 53 0d 83  9b 35 57 2f 64 ad 03 d1  |.K.v.S...5W/d...|\n+00000350  f9 1b ef cf 48 8a a8 a9  4c df d3 7b 7d e8 a0 68  |....H...L..{}..h|\n+00000360  2b 20 b4 4f 1c e3 11 1d  bf a9 bd 58 e4 4a 3e 00  |+ .O.......X.J>.|\n+00000370  80 2a 64 fb 5f 8f f5 bb  6d 48 2c 7d a6 c0 f6 b2  |.*d._...mH,}....|\n+00000380  3d 2b 75 83 07 fd b8 9d  50 a1 ec 1c 09 85 69 4f  |=+u.....P.....iO|\n+00000390  a3 39 8e 2f b4 94 76 b1  8d 03 3f 76 01 7e 22 90  |.9./..v...?v.~\".|\n+000003a0  08 58 40 0d d7 65 c1 49  d5 7e 0d 28 62 ec b6 58  |.X@..e.I.~.(b..X|\n+000003b0  6f ff 83 21 65 e7 8b f5  51 32 5f 39 e8 9e 85 d4  |o..!e...Q2_9....|\n+000003c0  65 1c a8 a8 70 82 5e db  d7 c6 4a 2d 2e ef c3 b3  |e...p.^...J-....|\n+000003d0  73 ca 13 5b 99 19 e3 4d  cb 4a 9f 42 3c b7 79 fb  |s..[...M.J.B<.y.|\n+000003e0  70 33 f7 a7 59 cb 76 a7  7c f3 8a 9a 5d fd 12 74  |p3..Y.v.|...]..t|\n+000003f0  5a 16 03 02 00 04 0e 00  00 00                    |Z.........|\n >>> Flow 3 (client to server)\n 00000000  16 03 02 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 02 00 01  |..h.A.Vk.Z......|\n 00000050  01 16 03 02 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n-00000060  00 00 00 00 00 00 a4 c5  6a e0 d6 3d 47 a8 17 8f  |........j..=G...|\n-00000070  5e 21 57 ac d5 0a 7c f7  fb df 33 e2 68 c4 46 82  |^!W...|...3.h.F.|\n-00000080  b4 48 d2 d3 f5 79 14 0a  db f9 00 f2 59 ff c3 f4  |.H...y......Y...|\n-00000090  11 a2 e9 90 49 d6                                 |....I.|\n+00000060  00 00 00 00 00 00 9a 7d  f8 d5 af e5 5d 16 a2 39  |.......}....]..9|\n+00000070  94 a5 de f6 ae 71 ba b7  b5 6e 9e a7 05 37 ed ff  |.....q...n...7..|\n+00000080  b4 c3 d9 4e d5 d5 3c 84  7e 3f a4 68 23 3b 52 ab  |...N..<.~?.h#;R.|\n+00000090  d7 30 3b 63 ed b1                                 |.0;c..|\n >>> Flow 4 (server to client)\n-00000000  14 03 02 00 01 01 16 03  02 00 40 84 bb 5f a3 9a  |..........@.._..|\n-00000010  07 af bf a2 3a 48 23 7c  a9 45 0c 07 ba ea bf 62  |....:H#|.E.....b|\n-00000020  c0 4f f3 2f f1 70 0e b1  ee ec 90 4e ea b4 0f 50  |.O./.p.....N...P|\n-00000030  47 e2 29 f3 ef ee 01 c7  eb db a4 56 d6 e8 d9 77  |G.)........V...w|\n-00000040  9a 64 42 50 40 42 d9 4b  ef 04 48                 |.dBP@B.K..H|\n+00000000  14 03 02 00 01 01 16 03  02 00 40 df 38 36 f9 ee  |..........@.86..|\n+00000010  03 f3 92 e1 3b 81 21 60  3a 46 3a 2c fc 2f 6a 01  |....;.!`:F:,./j.|\n+00000020  a4 04 a6 f4 09 f9 bf 1f  73 a6 c6 04 83 8a ae 39  |........s......9|\n+00000030  43 d7 8d 88 8e 6c f2 da  0d a9 82 b5 4e b0 41 c9  |C....l......N.A.|\n+00000040  5a 00 93 9b 8c 60 3c 08  fa aa 91                 |Z....`<....|\n >>> Flow 5 (client to server)\n 00000000  17 03 02 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-00000010  00 00 00 00 00 d4 03 ec  a2 a8 1b 0a 4f 63 36 5e  |............Oc6^|\n-00000020  df 85 45 e0 e7 1e 2d 48  be 2f 1a 09 5f 02 cb 91  |..E...-H./.._...|\n-00000030  b2 76 35 39 a2 15 03 02  00 30 00 00 00 00 00 00  |.v59.....0......|\n-00000040  00 00 00 00 00 00 00 00  00 00 b1 f1 a5 97 1d e5  |................|\n-00000050  29 4c e4 d0 c7 43 3a 43  b1 15 fc 84 6e 54 ab 92  |)L...C:C....nT..|\n-00000060  d4 c0 62 c9 fc 8b 73 83  62 a3                    |..b...s.b.|\n+00000010  00 00 00 00 00 85 20 30  5e 6e e6 ab a0 2c 66 7a  |...... 0^n...,fz|\n+00000020  f9 88 3b ee c9 5b 5c 0b  a3 7a 94 f0 8a ab 61 e0  |..;..[\\..z....a.|\n+00000030  7f 93 78 79 61 15 03 02  00 30 00 00 00 00 00 00  |..xya....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 e0 de 16 23 01 0a  |.............#..|\n+00000050  cf 90 1b 96 6a 14 f2 c9  af e2 20 49 ce b4 82 bf  |....j..... I....|\n+00000060  bf ed 7a 28 e1 ed 8e e7  18 c6                    |..z(......|"}, {"sha": "8483870fe8312786a7093ca8bb0bc0d9f3c688c6", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv11-RSA-RC4", "status": "modified", "additions": 64, "deletions": 63, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,63 +1,64 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 02 00 4a 02 00 00  46 03 02 52 ac 77 f7 01  |....J...F..R.w..|\n-00000010  a9 ef 15 61 bf ac 76 b1  88 0d de 98 8c de f4 3e  |...a..v........>|\n-00000020  52 04 64 33 6f ca b5 b4  19 5b 8f 20 1a d3 25 e1  |R.d3o....[. ..%.|\n-00000030  d0 17 4c 71 8e ec 5b be  e6 99 f0 c0 07 76 8a be  |..Lq..[......v..|\n-00000040  43 35 9b 98 71 e4 22 cc  88 48 fb c0 00 05 00 16  |C5..q.\"..H......|\n-00000050  03 02 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 02 00 04 0e  00 00 00                 |...........|\n+00000000  16 03 02 00 51 02 00 00  4d 03 02 52 cc 57 58 d2  |....Q...M..R.WX.|\n+00000010  3e 7a 93 49 2a f2 3f f8  fe 58 6b 88 d2 87 66 71  |>z.I*.?..Xk...fq|\n+00000020  69 bd d2 98 03 4b 17 b1  5d 5b a5 20 c6 5d a6 c7  |i....K..][. .]..|\n+00000030  40 53 b8 4f 68 74 12 70  64 58 4f 78 fa d1 a9 5c  |@S.Oht.pdXOx...\\|\n+00000040  f0 ce 5e 78 fd 66 30 98  8e ac 94 37 00 05 00 00  |..^x.f0....7....|\n+00000050  05 ff 01 00 01 00 16 03  02 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 02 00 04 0e 00  |n8P)l...........|\n+00000320  00 00                                             |..|\n >>> Flow 3 (client to server)\n 00000000  16 03 02 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n 00000010  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n@@ -68,15 +69,15 @@\n 00000060  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n 00000070  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n 00000080  35 d4 1c 43 d1 30 6f 55  4e 0a 70 14 03 02 00 01  |5..C.0oUN.p.....|\n-00000090  01 16 03 02 00 24 8e 02  46 f8 a6 27 03 86 ce 21  |.....$..F..'...!|\n-000000a0  3e c1 64 75 2d fa db 7c  01 2f 89 43 9a 75 63 92  |>.du-..|./.C.uc.|\n-000000b0  b0 03 5e a8 97 59 40 81  75 10                    |..^..Y@.u.|\n+00000090  01 16 03 02 00 24 6c 69  1d 96 27 2b f5 0b 6e d5  |.....$li..'+..n.|\n+000000a0  f7 97 96 c6 9f 5e 59 92  9f 3a 0e e5 d0 36 e4 af  |.....^Y..:...6..|\n+000000b0  bc 17 bf 95 ab f7 0c 19  a6 86                    |..........|\n >>> Flow 4 (server to client)\n-00000000  14 03 02 00 01 01 16 03  02 00 24 0f 50 8b d8 76  |..........$.P..v|\n-00000010  1b 47 9d 1a 8f 8c 48 d1  1d 14 57 f5 54 6b f8 59  |.G....H...W.Tk.Y|\n-00000020  cf 2c 6e ab f6 cb dd 43  0d f7 59 6d 41 cb 50     |.,n....C..YmA.P|\n+00000000  14 03 02 00 01 01 16 03  02 00 24 dd 9f e5 d3 53  |..........$....S|\n+00000010  ae af f2 41 bf eb 53 33  71 d0 f3 84 ac b0 88 72  |...A..S3q......r|\n+00000020  2d de 14 5b 59 9d f3 4c  9f ab a1 aa f4 f3 af     |-..[Y..L.......|\n >>> Flow 5 (client to server)\n-00000000  17 03 02 00 1a 3d 52 8b  ae aa b7 15 dd 68 bd b5  |.....=R......h..|\n-00000010  bb 49 fb 5c ab eb aa cd  1e af 5b 3c 75 6f 51 15  |.I.\\......[<uoQ.|\n-00000020  03 02 00 16 ca fb 12 88  a0 47 f3 fa 9c d9 21 ee  |.........G....!.|\n-00000030  20 35 0c 6d 37 04 2c 75  f8 c6                    | 5.m7.,u..|\n+00000000  17 03 02 00 1a 24 4d 6b  23 8a 36 07 80 49 1a e5  |.....$Mk#.6..I..|\n+00000010  da 85 7c a0 cb f3 82 e5  23 d7 b9 46 82 cb bc 15  |..|.....#..F....|\n+00000020  03 02 00 16 f3 f1 5b f2  40 0f 3f 88 ea f2 4e 28  |......[.@.?...N(|\n+00000030  52 aa c6 3a 6c 88 e3 30  21 0f                    |R..:l..0!.|"}, {"sha": "0731ee2c35b31b3a4677ab319a18e56cff5b11bf", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-ECDSA-ECDSA", "status": "modified", "additions": 78, "deletions": 77, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-ECDSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,69 +1,70 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f8 c5  |....T...P..R.w..|\n-00000010  96 12 04 26 41 58 b0 da  a3 63 a6 7c 30 17 a4 95  |...&AX...c.|0...|\n-00000020  72 dc 9b 08 6b 5c cd f0  93 9e 64 20 b7 5d af c1  |r...k\\....d .]..|\n-00000030  b7 ca 6f 52 3b d8 51 da  34 4a 39 38 31 ed 69 01  |..oR;.Q.4J981.i.|\n-00000040  bf e5 57 4c bb 90 07 f8  7b 59 e4 4c c0 09 00 00  |..WL....{Y.L....|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n-00000270  d7 0c 00 00 d3 03 00 17  41 04 d8 75 d0 64 77 b8  |........A..u.dw.|\n-00000280  77 cf 62 09 56 22 8d 7c  c9 ad 95 b6 20 e1 22 53  |w.b.V\".|.... .\"S|\n-00000290  04 a2 ff ef 55 98 32 a1  93 35 0d 75 21 cf f3 8b  |....U.2..5.u!...|\n-000002a0  75 f1 8c da 6a d1 4d 3f  ee 45 bd 10 4c c3 cc 45  |u...j.M?.E..L..E|\n-000002b0  ea 3c f7 6d 0f be 49 2c  f7 82 04 03 00 8a 30 81  |.<.m..I,......0.|\n-000002c0  87 02 42 01 d5 04 fa a4  10 ff 0e 5f bb a3 ab ae  |..B........_....|\n-000002d0  19 ee f0 cf 01 f1 c5 5a  ed b3 2c 08 21 e2 36 2f  |.......Z..,.!.6/|\n-000002e0  ef ab 04 ab 03 2f 8c 3a  c6 1d 02 44 ca 91 dd 43  |...../.:...D...C|\n-000002f0  a5 00 08 0c 5d ff d7 4e  31 5c 0c b3 da 7f 6d 6d  |....]..N1\\....mm|\n-00000300  0a ef 36 2e 55 02 41 2e  74 02 05 c1 4f 48 6e 3a  |..6.U.A.t...OHn:|\n-00000310  59 fc 67 1d 31 b2 85 67  24 ea ed be 99 87 b3 03  |Y.g.1..g$.......|\n-00000320  3c a5 bb fa f0 39 39 b6  a1 3a 3d b0 7e c4 c8 8f  |<....99..:=.~...|\n-00000330  5b 74 9c bf df a0 84 f5  6c c5 c8 2a b5 65 f3 60  |[t......l..*.e.`|\n-00000340  5f 38 10 c7 9b 71 64 a3  16 03 03 00 30 0d 00 00  |_8...qd.....0...|\n-00000350  28 03 01 02 40 00 20 06  01 06 02 06 03 05 01 05  |(...@. .........|\n-00000360  02 05 03 04 01 04 02 04  03 03 01 03 02 03 03 02  |................|\n-00000370  01 02 02 02 03 01 01 00  00 0e 00 00 00           |.............|\n+00000000  16 03 03 00 59 02 00 00  55 03 03 52 cc 57 59 76  |....Y...U..R.WYv|\n+00000010  bc 07 88 2c 89 e3 aa 41  69 76 d1 0b 5f c0 7a b1  |...,...Aiv.._.z.|\n+00000020  c3 c4 f8 12 6e 73 7f 5b  25 41 8e 20 b4 2d 8d a9  |....ns.[%A. .-..|\n+00000030  80 95 44 d4 d7 47 8c a1  f1 de 36 57 cf 54 dd ee  |..D..G....6W.T..|\n+00000040  a7 d8 ba cf ca b7 68 0e  9e b4 a3 7b c0 09 00 00  |......h....{....|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  03 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 03 00 d8 0c 00  00 d4 03 00 17 41 04 3a  |*............A.:|\n+00000280  16 95 9a af 75 ff 51 27  76 6e 82 c7 db a2 3d 62  |....u.Q'vn....=b|\n+00000290  b4 65 d1 97 26 38 55 68  29 68 2c fc 4b 69 2c f9  |.e..&8Uh)h,.Ki,.|\n+000002a0  01 00 4b 1e ee cf 88 54  a7 f3 49 a5 04 98 bd 12  |..K....T..I.....|\n+000002b0  74 b1 cb 95 4c 49 c2 1a  31 e6 95 9f f5 0a f5 04  |t...LI..1.......|\n+000002c0  03 00 8b 30 81 88 02 42  01 e7 72 2b 54 9e e0 97  |...0...B..r+T...|\n+000002d0  79 e6 23 52 f7 2e 08 36  d5 dc 31 21 9d f2 13 ae  |y.#R...6..1!....|\n+000002e0  30 86 1c df d2 be 52 e0  e7 8b f5 dd fa 09 f2 f3  |0.....R.........|\n+000002f0  97 5d f7 48 37 83 9b aa  6c ef 87 95 de f4 50 19  |.].H7...l.....P.|\n+00000300  b2 9b d6 27 4c 4d 67 6a  27 be 02 42 01 d8 86 63  |...'LMgj'..B...c|\n+00000310  dc f1 9f 32 a3 25 6f 55  b3 67 7b 64 7e 24 38 25  |...2.%oU.g{d~$8%|\n+00000320  96 bb 7b b1 9b ef 73 c3  6c d1 69 83 7d bc c5 30  |..{...s.l.i.}..0|\n+00000330  fe 9a 21 0d 29 c4 d6 1a  51 a5 dd 6e a0 80 c8 9c  |..!.)...Q..n....|\n+00000340  54 49 34 22 f7 5e cf 28  ae 2f cd 46 b1 71 16 03  |TI4\".^.(./.F.q..|\n+00000350  03 00 30 0d 00 00 28 03  01 02 40 00 20 06 01 06  |..0...(...@. ...|\n+00000360  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000370  01 03 02 03 03 02 01 02  02 02 03 01 01 00 00 0e  |................|\n+00000380  00 00 00                                          |...|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n 00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n@@ -110,24 +111,24 @@\n 000002a0  b3 c1 85 6a 42 9b f9 7e  7e 31 c2 e5 bd 66 02 41  |...jB..~~1...f.A|\n 000002b0  4b 49 c6 cd 02 e3 83 f7  03 50 18 6d b4 c9 51 02  |KI.......P.m..Q.|\n 000002c0  c0 ab 87 bc e0 3e 4b 89  53 3a e2 65 89 97 02 c1  |.....>K.S:.e....|\n-000002d0  88 4a bb 6d c8 1f 2a 63  e4 a7 25 02 5c 95 a7 f1  |.J.m..*c..%.\\...|\n-000002e0  2c 8f bb f1 f6 95 31 b6  6b bc 29 61 b6 36 27 6e  |,.....1.k.)a.6'n|\n-000002f0  ee 14 03 03 00 01 01 16  03 03 00 40 00 00 00 00  |...........@....|\n-00000300  00 00 00 00 00 00 00 00  00 00 00 00 2b ec 49 d6  |............+.I.|\n-00000310  bc 29 f0 dd ad 8f 56 56  1f e1 1e 8a 52 f1 ec d0  |.)....VV....R...|\n-00000320  60 21 d9 6f e0 82 7b 5a  de 2d 9e e9 74 6d 7a e5  |`!.o..{Z.-..tmz.|\n-00000330  c6 9f 6b da 1e 4c d6 2e  e8 57 cd 9f              |..k..L...W..|\n+000002d0  88 a6 56 bf d0 53 0b a9  7e 82 7d 4d fc 66 78 8f  |..V..S..~.}M.fx.|\n+000002e0  57 dc 5e 62 54 70 cc 32  0c 1c b5 62 fc 6a 76 7e  |W.^bTp.2...b.jv~|\n+000002f0  3f 14 03 03 00 01 01 16  03 03 00 40 00 00 00 00  |?..........@....|\n+00000300  00 00 00 00 00 00 00 00  00 00 00 00 62 a7 74 42  |............b.tB|\n+00000310  ab 04 f8 f9 5a 86 3e 35  94 ce 4b 79 77 a1 a0 6a  |....Z.>5..Kyw..j|\n+00000320  cf 2b 3a 62 fc 3b 50 2b  51 5e d7 6a d1 d0 65 b4  |.+:b.;P+Q^.j..e.|\n+00000330  5d 15 99 11 10 d3 6b a3  97 d2 30 08              |].....k...0.|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 40 17 41 a0 69 d4  |..........@.A.i.|\n-00000010  a0 9d aa dd 16 bf 06 ef  8d 63 e2 c8 d8 60 d9 a1  |.........c...`..|\n-00000020  15 9e 28 76 6c 68 07 1a  e9 d6 68 f7 d2 51 5e b2  |..(vlh....h..Q^.|\n-00000030  fb 5a 3c 39 5f d9 6a 1f  dd 23 06 63 47 b5 9e c1  |.Z<9_.j..#.cG...|\n-00000040  7f 7a 3a e9 d9 fa 72 8a  44 e8 01                 |.z:...r.D..|\n+00000000  14 03 03 00 01 01 16 03  03 00 40 fa 8c c0 6f 59  |..........@...oY|\n+00000010  8f af a8 21 c8 aa 4c 00  db 6a a5 98 09 52 1a 27  |...!..L..j...R.'|\n+00000020  77 af 6d 13 c2 54 f8 90  31 37 5c 86 3b 66 de d8  |w.m..T..17\\.;f..|\n+00000030  41 96 8b 84 d9 75 c0 00  b5 5f 99 3e a9 19 fa 6b  |A....u..._.>...k|\n+00000040  be e2 78 43 30 41 94 39  ce 87 67                 |..xC0A.9..g|\n >>> Flow 5 (client to server)\n 00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-00000010  00 00 00 00 00 36 4a d2  bf e3 17 b8 b0 08 09 2e  |.....6J.........|\n-00000020  75 9e 67 b6 86 09 6a f5  ed fa 75 3a 17 1e a8 9e  |u.g...j...u:....|\n-00000030  50 e7 b5 79 75 15 03 03  00 30 00 00 00 00 00 00  |P..yu....0......|\n-00000040  00 00 00 00 00 00 00 00  00 00 ee b2 c1 37 7d 4d  |.............7}M|\n-00000050  9c 00 34 26 42 7f 3b d1  f2 f1 a9 7d 35 18 25 bb  |..4&B.;....}5.%.|\n-00000060  a5 46 cc 2c 2b 90 02 a2  3b cc                    |.F.,+...;.|\n+00000010  00 00 00 00 00 76 8b 21  f2 c9 fe b7 c4 60 e6 91  |.....v.!.....`..|\n+00000020  00 ca 3e 54 25 5e f4 20  f8 df 58 41 03 b0 d0 fb  |..>T%^. ..XA....|\n+00000030  e7 59 4d 6a 34 15 03 03  00 30 00 00 00 00 00 00  |.YMj4....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 0f 0f e5 7a a2 86  |.............z..|\n+00000050  8c 31 53 05 be 22 fb 53  51 e6 26 0a a5 c5 09 ca  |.1S..\".SQ.&.....|\n+00000060  f3 46 0f 67 50 d8 83 35  7b f3                    |.F.gP..5{.|"}, {"sha": "9edab394f70eb3fe1c5d5b93c3cd8d4806acacad", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-ECDSA-RSA", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-RSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,66 +1,66 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 4a 02 00 00  46 03 03 52 ac 77 f8 46  |....J...F..R.w.F|\n-00000010  c2 25 41 4d f8 87 23 8f  4b f7 71 de cf 3b 78 df  |.%AM..#.K.q..;x.|\n-00000020  77 c6 71 a2 6e f6 87 de  31 c6 89 20 23 7f ad 48  |w.q.n...1.. #..H|\n-00000030  70 f7 2c 4f 87 c8 fb fd  0c 6f af a3 c1 a9 be 57  |p.,O.....o.....W|\n-00000040  0f e0 d4 cc 2c f3 31 94  6f 60 b0 1e 00 05 00 16  |....,.1.o`......|\n-00000050  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 03 00 30 0d  00 00 28 03 01 02 40 00  |......0...(...@.|\n-00000320  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n-00000330  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n-00000340  01 00 00 0e 00 00 00                              |.......|\n+00000000  16 03 03 00 51 02 00 00  4d 03 03 52 cc 57 59 85  |....Q...M..R.WY.|\n+00000010  0f 00 df b8 0d ef c4 98  ba e3 bd 71 4c 98 e5 80  |...........qL...|\n+00000020  af 77 c7 d8 5f c1 36 62  1c ef 89 20 b6 01 c3 3b  |.w.._.6b... ...;|\n+00000030  9e 93 27 04 05 7b 73 b3  02 7b c3 89 f5 ac 51 24  |..'..{s..{....Q$|\n+00000040  7c e5 6d f3 34 d0 99 71  5e ae 30 ea 00 05 00 00  ||.m.4..q^.0.....|\n+00000050  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 30 0d 00  |n8P)l........0..|\n+00000320  00 28 03 01 02 40 00 20  06 01 06 02 06 03 05 01  |.(...@. ........|\n+00000330  05 02 05 03 04 01 04 02  04 03 03 01 03 02 03 03  |................|\n+00000340  02 01 02 02 02 03 01 01  00 00 0e 00 00 00        |..............|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n 00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n@@ -111,17 +111,17 @@\n 000002e0  b3 c1 85 6a 42 9b f9 7e  7e 31 c2 e5 bd 66 02 41  |...jB..~~1...f.A|\n 000002f0  4b 49 c6 cd 02 e3 83 f7  03 50 18 6d b4 c9 51 02  |KI.......P.m..Q.|\n 00000300  c0 ab 87 bc e0 3e 4b 89  53 3a e2 65 89 97 02 c1  |.....>K.S:.e....|\n-00000310  88 e9 ba 78 0b 19 d9 81  39 02 7e b5 9f ec 53 0d  |...x....9.~...S.|\n-00000320  7e 92 80 e5 ca c5 4a 25  50 bf 85 3a 4c 0f 73 ca  |~.....J%P..:L.s.|\n-00000330  ef 14 03 03 00 01 01 16  03 03 00 24 d0 33 06 ab  |...........$.3..|\n-00000340  17 88 e1 65 44 18 3a 45  51 44 6f 0e 2e 85 61 33  |...eD.:EQDo...a3|\n-00000350  1d 1b bb 5b 89 b5 da f0  7d df 01 90 67 0c 27 4e  |...[....}...g.'N|\n+00000310  88 d6 42 09 8f e0 57 a7  e6 9e 65 3d fd 82 45 9d  |..B...W...e=..E.|\n+00000320  3e 69 cc ad 17 72 c7 98  8d 3a ca f0 05 63 43 40  |>i...r...:...cC@|\n+00000330  7a 14 03 03 00 01 01 16  03 03 00 24 a8 45 b8 6e  |z..........$.E.n|\n+00000340  21 28 b3 6d 94 0d 7b c4  af 24 0e ca 51 ec 85 3c  |!(.m..{..$..Q..<|\n+00000350  87 43 fd 36 e4 3d 1a f4  28 df 90 19 b6 05 d0 c9  |.C.6.=..(.......|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 4d ed 09 20 61  |..........$M.. a|\n-00000010  30 03 09 eb cd d5 84 29  82 90 84 50 1e e7 9b 7b  |0......)...P...{|\n-00000020  ec 8a 18 0c b5 6e 32 c7  65 fb 26 15 9e 79 41     |.....n2.e.&..yA|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 ae 0d d7 72 4f  |..........$...rO|\n+00000010  70 d9 16 20 da 70 dd 04  d5 5a 96 32 80 8c 14 db  |p.. .p...Z.2....|\n+00000020  4d 10 31 47 1e 26 78 f1  95 25 0c fe 24 2f 6f     |M.1G.&x..%..$/o|\n >>> Flow 5 (client to server)\n-00000000  17 03 03 00 1a 85 47 11  25 35 d5 53 7f 3d 01 87  |......G.%5.S.=..|\n-00000010  14 58 90 f7 25 1a 56 99  7b a2 b9 31 86 b3 45 15  |.X..%.V.{..1..E.|\n-00000020  03 03 00 16 88 b2 fb 1c  f9 bb e6 7a a0 c0 d0 52  |...........z...R|\n-00000030  f2 f9 b8 e4 5d e5 b7 a0  96 ca                    |....].....|\n+00000000  17 03 03 00 1a d4 7d c7  83 f7 98 3b 77 91 4b e6  |......}....;w.K.|\n+00000010  68 fa e2 22 37 24 93 20  fa e2 67 18 03 41 90 15  |h..\"7$. ..g..A..|\n+00000020  03 03 00 16 0b ff 73 1c  e5 81 5f 28 52 72 49 39  |......s..._(RrI9|\n+00000030  ca 42 fb 57 8a 3a 80 75  2b ac                    |.B.W.:.u+.|"}, {"sha": "2b380a8119f6ef8632f4e3058d68b0faa1f1a6d7", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-RSA-ECDSA", "status": "modified", "additions": 84, "deletions": 83, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-ECDSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,69 +1,70 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f8 85  |....T...P..R.w..|\n-00000010  40 fe 2e 6e 8e 8b 52 83  0e 17 63 15 6e a8 07 43  |@..n..R...c.n..C|\n-00000020  de 66 78 c6 3b 54 c2 fe  a1 8e c8 20 d8 77 b3 a3  |.fx.;T..... .w..|\n-00000030  2e bf c7 0f 1a 2f 0a 76  c7 e3 a6 62 ae 4b 57 0a  |...../.v...b.KW.|\n-00000040  78 ed 7e ea 4f 4e ce 97  72 b1 04 78 c0 09 00 00  |x.~.ON..r..x....|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n-00000270  d8 0c 00 00 d4 03 00 17  41 04 d9 d2 72 4b ef c3  |........A...rK..|\n-00000280  be a2 5b fc b3 75 52 c9  b4 5d 56 bf 23 2e e6 18  |..[..uR..]V.#...|\n-00000290  96 df 4b 67 af 1c 11 c3  17 fa d5 43 81 d6 91 c3  |..Kg.......C....|\n-000002a0  b2 0a d8 cc b9 24 36 1d  74 4e bf 1e 20 2f 77 cd  |.....$6.tN.. /w.|\n-000002b0  6a 3b d7 07 b9 17 e8 ad  1d 5a 04 03 00 8b 30 81  |j;.......Z....0.|\n-000002c0  88 02 42 01 9d ae 1a b6  0f 0a 0d 1b e1 d7 30 8c  |..B...........0.|\n-000002d0  f1 63 1c 0a b9 9a 06 ef  23 59 4d c7 ba 86 ec 7e  |.c......#YM....~|\n-000002e0  e4 5b 95 21 ea 7b 28 d2  a1 8c 9c fe 80 25 63 5f  |.[.!.{(......%c_|\n-000002f0  42 e7 a2 59 db 76 de a2  66 cc 99 c7 96 a2 0a 54  |B..Y.v..f......T|\n-00000300  15 62 cb d4 59 02 42 00  80 29 a2 cb a7 f4 ce 1d  |.b..Y.B..)......|\n-00000310  4b 99 9b c1 36 70 a7 18  a4 94 8a 4b 02 6d 25 a6  |K...6p.....K.m%.|\n-00000320  00 7c 84 09 21 db 31 0f  0d cc 4a 57 b6 44 5b cd  |.|..!.1...JW.D[.|\n-00000330  1b be 16 ec d7 0c e4 27  bb 13 33 e9 d2 ae 13 c5  |.......'..3.....|\n-00000340  05 c1 48 fd f3 c6 f9 a2  e0 16 03 03 00 30 0d 00  |..H..........0..|\n-00000350  00 28 03 01 02 40 00 20  06 01 06 02 06 03 05 01  |.(...@. ........|\n-00000360  05 02 05 03 04 01 04 02  04 03 03 01 03 02 03 03  |................|\n-00000370  02 01 02 02 02 03 01 01  00 00 0e 00 00 00        |..............|\n+00000000  16 03 03 00 59 02 00 00  55 03 03 52 cc 57 58 6a  |....Y...U..R.WXj|\n+00000010  f6 51 de a7 6b b0 94 bb  98 24 ab e2 c0 02 e4 8c  |.Q..k....$......|\n+00000020  ac a8 48 5d 41 82 eb c0  de 5a 1e 20 70 29 82 6c  |..H]A....Z. p).l|\n+00000030  01 cf 4e 21 52 18 98 8c  0a 31 14 26 6c a4 44 11  |..N!R....1.&l.D.|\n+00000040  6c 5b d6 5c cb a4 b1 91  52 13 b5 77 c0 09 00 00  |l[.\\....R..w....|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  03 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 03 00 d8 0c 00  00 d4 03 00 17 41 04 de  |*............A..|\n+00000280  c7 75 51 96 25 63 8e c0  da 9c c0 8e d1 76 ca 08  |.uQ.%c.......v..|\n+00000290  4c f5 a0 13 75 01 ab cf  12 09 ae cd 13 53 84 1e  |L...u........S..|\n+000002a0  a4 f8 46 0f 15 08 18 48  65 d9 75 85 80 38 79 b7  |..F....He.u..8y.|\n+000002b0  fc 51 a2 7c 7a ac ab b9  67 8a d7 16 af 75 df 04  |.Q.|z...g....u..|\n+000002c0  03 00 8b 30 81 88 02 42  00 fe 19 74 a9 a1 27 05  |...0...B...t..'.|\n+000002d0  92 78 a4 c8 9d c8 a5 de  67 cd 1f a3 1b c7 ba 7e  |.x......g......~|\n+000002e0  75 68 15 29 16 e7 91 f9  b9 7b d7 e4 e9 c0 2a 7f  |uh.).....{....*.|\n+000002f0  1a ce 71 5a b9 c1 64 dd  26 59 24 e8 34 21 24 8a  |..qZ..d.&Y$.4!$.|\n+00000300  b0 19 06 d4 46 0c 05 46  dc 5f 02 42 00 a8 05 71  |....F..F._.B...q|\n+00000310  59 ef 60 fa cf 06 ec 18  5f be 53 b7 95 07 05 5b  |Y.`....._.S....[|\n+00000320  70 87 ac da f4 61 94 41  60 c8 ab 7b 26 5a 32 4d  |p....a.A`..{&Z2M|\n+00000330  0d 53 00 0e 8e b3 b2 16  c7 4e 3a 15 14 76 bc dc  |.S.......N:..v..|\n+00000340  ff b6 60 eb 62 b6 15 34  53 4f 2a 42 48 2c 16 03  |..`.b..4SO*BH,..|\n+00000350  03 00 30 0d 00 00 28 03  01 02 40 00 20 06 01 06  |..0...(...@. ...|\n+00000360  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000370  01 03 02 03 03 02 01 02  02 02 03 01 01 00 00 0e  |................|\n+00000380  00 00 00                                          |...|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n 00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n@@ -102,31 +103,31 @@\n 00000220  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000230  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000240  a6 b5 68 1a 41 03 56 6b  dc 5a 89 16 03 03 00 88  |..h.A.Vk.Z......|\n-00000250  0f 00 00 84 04 01 00 80  3c 05 23 6b 47 37 6c de  |........<.#kG7l.|\n-00000260  d9 21 fc c5 ba 63 15 5d  55 d0 1c 78 cc b7 76 6f  |.!...c.]U..x..vo|\n-00000270  97 d7 ce cc 28 e4 cb 2c  b4 33 c4 7b 39 3a da b8  |....(..,.3.{9:..|\n-00000280  0a 6d 79 be 30 86 21 2d  40 c9 7a 5e 44 98 b7 a2  |.my.0.!-@.z^D...|\n-00000290  23 9d d2 af 3d d1 df 08  a0 b5 87 9f 57 06 1b ab  |#...=.......W...|\n-000002a0  1e 8b e5 1f 09 71 cd df  7d 9b d3 bd a9 06 29 7f  |.....q..}.....).|\n-000002b0  6a 84 b7 1b c5 a4 ee 11  e4 11 23 c1 1c 64 00 0b  |j.........#..d..|\n-000002c0  07 49 ba 2b 40 95 57 0a  e5 02 ae a1 c1 e4 0b 31  |.I.+@.W........1|\n-000002d0  9b bf ad eb aa 74 a9 fa  14 03 03 00 01 01 16 03  |.....t..........|\n+00000250  0f 00 00 84 04 01 00 80  42 bd a6 a2 1f 49 ea 57  |........B....I.W|\n+00000260  43 59 a0 b6 9f 1d b3 3c  35 a7 fa c7 57 02 fa f0  |CY.....<5...W...|\n+00000270  9f 7d a2 77 1a a4 e1 13  c0 78 a3 9e 59 1a f2 c6  |.}.w.....x..Y...|\n+00000280  2b dd 8d bc 5d f1 99 e8  db ac a2 9c 6e d8 b5 6a  |+...].......n..j|\n+00000290  a5 04 aa 6c 48 b8 7a 06  55 81 1a e0 41 69 28 42  |...lH.z.U...Ai(B|\n+000002a0  53 fa f0 63 a9 b5 c1 2f  69 60 cf 02 da d2 eb c8  |S..c.../i`......|\n+000002b0  e8 a1 5c 7b b1 05 c3 b8  66 34 fe 21 8a 7a 84 10  |..\\{....f4.!.z..|\n+000002c0  f1 4d bd b1 68 97 85 11  10 bf be 96 cf 37 e9 68  |.M..h........7.h|\n+000002d0  20 ab d2 f8 d2 20 65 90  14 03 03 00 01 01 16 03  | .... e.........|\n 000002e0  03 00 40 00 00 00 00 00  00 00 00 00 00 00 00 00  |..@.............|\n-000002f0  00 00 00 9b 04 da 20 1e  55 a7 d0 60 f3 7b 60 e2  |...... .U..`.{`.|\n-00000300  3e 46 59 73 84 f7 1c 19  93 c5 53 95 bf 24 05 c9  |>FYs......S..$..|\n-00000310  68 40 53 a9 b8 da 98 2b  08 9e 02 39 b0 a3 3f aa  |h@S....+...9..?.|\n-00000320  eb ba 9c                                          |...|\n+000002f0  00 00 00 a1 73 35 05 15  f3 87 00 58 06 54 f7 44  |....s5.....X.T.D|\n+00000300  25 71 3f a6 16 3c e9 95  0a de 14 9d d0 78 73 35  |%q?..<.......xs5|\n+00000310  a4 84 dc 9e bf 94 4e fe  07 89 33 d0 81 ef 9f 49  |......N...3....I|\n+00000320  17 0a 64                                          |..d|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 40 23 ec df cd 12  |..........@#....|\n-00000010  ca 13 f8 b5 75 10 af a0  27 a7 cf f5 d7 a7 46 68  |....u...'.....Fh|\n-00000020  44 6b 7e cf 0b ce dc 86  5f b7 35 16 5f 01 ae c9  |Dk~....._.5._...|\n-00000030  16 15 ae 4c 9e 7a ca 8e  ae dd cb ec 24 32 32 9c  |...L.z......$22.|\n-00000040  b4 b7 61 78 18 0b ee 61  74 6d 0b                 |..ax...atm.|\n+00000000  14 03 03 00 01 01 16 03  03 00 40 19 b8 9d de 48  |..........@....H|\n+00000010  86 1e be b4 62 54 57 12  fc f0 ad fd 70 b7 69 48  |....bTW.....p.iH|\n+00000020  58 66 8e 68 1c fd 73 62  da bd 6d 8f 83 8c 09 91  |Xf.h..sb..m.....|\n+00000030  de 53 83 20 2b 81 f1 30  3f 0b 6b 7d c1 59 47 dc  |.S. +..0?.k}.YG.|\n+00000040  e1 f4 95 85 d5 0b 09 45  4e a7 2f                 |.......EN./|\n >>> Flow 5 (client to server)\n 00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-00000010  00 00 00 00 00 d7 7d 87  ac 42 06 f2 4e d3 71 0c  |......}..B..N.q.|\n-00000020  1b 62 8c 81 03 38 85 7e  6c 31 ae 8c b4 04 2f 19  |.b...8.~l1..../.|\n-00000030  b1 c8 6c a2 6c 15 03 03  00 30 00 00 00 00 00 00  |..l.l....0......|\n-00000040  00 00 00 00 00 00 00 00  00 00 99 e8 4b a9 33 ec  |............K.3.|\n-00000050  f4 5e 60 5b c0 72 ef 61  6c e2 e0 5b 4d af f8 c6  |.^`[.r.al..[M...|\n-00000060  b6 57 be 07 a3 c0 fe cd  29 65                    |.W......)e|\n+00000010  00 00 00 00 00 69 73 64  71 d8 dc 9b a5 ce 9a 1e  |.....isdq.......|\n+00000020  65 82 01 94 45 12 e7 13  4e 3e 59 7b 19 2b 41 a7  |e...E...N>Y{.+A.|\n+00000030  49 aa 70 1d ce 15 03 03  00 30 00 00 00 00 00 00  |I.p......0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 5f 67 8d e3 77 5e  |.........._g..w^|\n+00000050  32 c4 83 91 2b e6 37 76  18 11 8d 9f e5 c2 20 43  |2...+.7v...... C|\n+00000060  c1 68 83 f9 e6 0b 07 95  ef b6                    |.h........|"}, {"sha": "dc56555cf1dc51308dcd3dbccfdbba6c94d9c79d", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-RSA-RSA", "status": "modified", "additions": 75, "deletions": 75, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-RSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,66 +1,66 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 4a 02 00 00  46 03 03 52 ac 77 f7 91  |....J...F..R.w..|\n-00000010  73 b5 51 be 27 c7 ba 60  72 d9 ca 1f f6 7e a2 c2  |s.Q.'..`r....~..|\n-00000020  ec 8a 16 39 9a 30 c8 46  3f 34 e8 20 90 e8 71 aa  |...9.0.F?4. ..q.|\n-00000030  9f 0a fe 6f f1 9c 5c 8d  10 51 45 ea 90 ef f8 6e  |...o..\\..QE....n|\n-00000040  88 ba 7e 37 00 e8 66 b9  53 6f 89 dc 00 05 00 16  |..~7..f.So......|\n-00000050  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 03 00 30 0d  00 00 28 03 01 02 40 00  |......0...(...@.|\n-00000320  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n-00000330  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n-00000340  01 00 00 0e 00 00 00                              |.......|\n+00000000  16 03 03 00 51 02 00 00  4d 03 03 52 cc 57 58 8f  |....Q...M..R.WX.|\n+00000010  4b 2e 8c 90 dd 88 33 43  44 02 90 c0 b5 ae b3 b2  |K.....3CD.......|\n+00000020  c9 2c cd c4 53 8e 7e 5c  de 08 fe 20 ee 4e 7b b1  |.,..S.~\\... .N{.|\n+00000030  7e a2 eb b0 21 e3 b2 1e  b5 18 ff b3 43 c8 a7 a3  |~...!.......C...|\n+00000040  2f ef 82 11 ae 66 be c5  64 5d 15 59 00 05 00 00  |/....f..d].Y....|\n+00000050  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 30 0d 00  |n8P)l........0..|\n+00000320  00 28 03 01 02 40 00 20  06 01 06 02 06 03 05 01  |.(...@. ........|\n+00000330  05 02 05 03 04 01 04 02  04 03 03 01 03 02 03 03  |................|\n+00000340  02 01 02 02 02 03 01 01  00 00 0e 00 00 00        |..............|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n 00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n@@ -103,24 +103,24 @@\n 00000260  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n 00000270  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n 00000280  35 d4 1c 43 d1 30 6f 55  4e 0a 70 16 03 03 00 88  |5..C.0oUN.p.....|\n-00000290  0f 00 00 84 04 01 00 80  1d 50 f8 65 0a 2e e7 b8  |.........P.e....|\n-000002a0  4e 52 51 05 bd 9f 4f 7a  31 67 dd 6c 34 ea 45 30  |NRQ...Oz1g.l4.E0|\n-000002b0  57 0b ac a0 9c 41 f5 d7  82 1a fe 7d 3f 5d d4 b9  |W....A.....}?]..|\n-000002c0  38 b0 3d 0c f3 57 ff 8e  e8 52 3d be 91 54 c5 49  |8.=..W...R=..T.I|\n-000002d0  38 63 9e b8 8a 17 b5 36  29 e1 22 f5 a9 b8 f3 1a  |8c.....6).\".....|\n-000002e0  98 ab c3 32 3c 36 70 45  b0 25 e4 8c b7 e8 2c ea  |...2<6pE.%....,.|\n-000002f0  cf 62 cd c0 69 6d 35 c4  3b 77 4d 90 5a ba 35 de  |.b..im5.;wM.Z.5.|\n-00000300  6f 1d d3 ab bb e8 77 e7  83 6c b6 3c b3 ab b2 7e  |o.....w..l.<...~|\n-00000310  f4 52 b4 e0 5f c9 9e 0d  14 03 03 00 01 01 16 03  |.R.._...........|\n-00000320  03 00 24 8c 9a a2 e5 d5  9c af dc 73 d9 aa 86 a2  |..$........s....|\n-00000330  f5 ff 2f 66 f1 5f 1e 65  4f ba 57 37 4f 6d 3b 47  |../f._.eO.W7Om;G|\n-00000340  24 27 74 ca 91 3e e1                              |$'t..>.|\n+00000290  0f 00 00 84 04 01 00 80  0a eb 78 3e 77 c5 9c 8e  |..........x>w...|\n+000002a0  05 67 4e 06 bd ec c8 7c  b2 16 13 7d c5 5d e1 1a  |.gN....|...}.]..|\n+000002b0  4d 2e f4 b1 78 2c 94 1b  47 e4 3e 2f 7e 74 cc 03  |M...x,..G.>/~t..|\n+000002c0  1d eb e2 56 99 0e 92 27  79 e4 7e a7 12 86 88 91  |...V...'y.~.....|\n+000002d0  a4 99 db 1d 50 62 88 41  cc a6 b7 90 d0 51 66 47  |....Pb.A.....QfG|\n+000002e0  92 39 a0 2b 4c 8d 50 a6  af f4 72 2d 16 3b 6b b8  |.9.+L.P...r-.;k.|\n+000002f0  82 d2 9a d8 cd 7b b9 aa  82 a5 31 12 9e bb 19 23  |.....{....1....#|\n+00000300  15 5d ad a5 b1 65 c1 de  01 7d e3 d3 16 73 28 d6  |.]...e...}...s(.|\n+00000310  75 02 32 68 5a e0 b1 bb  14 03 03 00 01 01 16 03  |u.2hZ...........|\n+00000320  03 00 24 cd c6 25 df 1c  0b b3 a7 2a 46 99 b8 10  |..$..%.....*F...|\n+00000330  37 78 40 2a aa 66 7a 3a  34 8e 87 bf 85 4c e2 de  |7x@*.fz:4....L..|\n+00000340  36 62 4a 9e 7f e8 e8                              |6bJ....|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 a0 10 09 ea 2c  |..........$....,|\n-00000010  f5 7c 55 41 84 35 47 d6  7d 75 09 fc 1a d7 b7 da  |.|UA.5G.}u......|\n-00000020  8f e0 2d fb c8 a5 9e 71  12 1e eb 64 6b bb ae     |..-....q...dk..|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 20 68 ec 6b 11  |..........$ h.k.|\n+00000010  e5 d6 eb c7 4f 7f e0 d0  c4 36 d4 c2 46 06 1d 92  |....O....6..F...|\n+00000020  83 b4 77 e2 58 b6 cb 06  74 0a 5c f8 c6 06 83     |..w.X...t.\\....|\n >>> Flow 5 (client to server)\n-00000000  17 03 03 00 1a dd 2a cd  81 c7 ed c5 29 5f ef b2  |......*.....)_..|\n-00000010  f2 34 9e bb cb 00 75 8b  d5 3e a6 3e b8 42 cd 15  |.4....u..>.>.B..|\n-00000020  03 03 00 16 d5 4d e2 8f  8d f1 be 2d 85 fe 49 8a  |.....M.....-..I.|\n-00000030  8d f8 df ca e4 ed d0 22  72 e0                    |.......\"r.|\n+00000000  17 03 03 00 1a bb d6 71  f3 e0 2f c3 d6 0d 70 85  |.......q../...p.|\n+00000010  25 df 6f ba b1 37 dd 49  42 79 5c b3 c1 85 7e 15  |%.o..7.IBy\\...~.|\n+00000020  03 03 00 16 8c 93 50 30  45 38 da e2 bf c6 df d8  |......P0E8......|\n+00000030  41 e1 63 ca 28 82 d1 ae  30 76                    |A.c.(...0v|"}, {"sha": "47bbebfc45799a7db74a13a04fe399067c05c8b1", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ECDHE-ECDSA-AES", "status": "modified", "additions": 72, "deletions": 72, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,89 +1,89 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f7 5e  |....T...P..R.w.^|\n-00000010  12 d1 1a fa 09 d7 e5 3c  eb 34 6f 79 3a 4f e8 7b  |.......<.4oy:O.{|\n-00000020  92 d7 bd ff 22 37 21 58  c2 73 c2 20 7e 17 7f 83  |....\"7!X.s. ~...|\n-00000030  36 9e 12 f1 ce c0 3a b3  02 7f 3f 6d 58 7e 71 fe  |6.....:...?mX~q.|\n-00000040  9c ce e2 7e f4 19 92 e3  45 57 69 5e c0 09 00 00  |...~....EWi^....|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n-00000270  d8 0c 00 00 d4 03 00 17  41 04 81 cc fd bd 41 23  |........A.....A#|\n-00000280  dc cb a6 e5 8f 0b c9 bc  8a 0b 4a 26 e0 a6 5f 89  |..........J&.._.|\n-00000290  a0 10 50 41 4b a9 80 f1  bf c1 a0 c0 e1 97 40 47  |..PAK.........@G|\n-000002a0  f1 98 10 b2 73 a7 40 e6  8b 15 ed 83 37 4f 32 b9  |....s.@.....7O2.|\n-000002b0  1f 0b 91 11 33 46 70 15  35 4d 04 03 00 8b 30 81  |....3Fp.5M....0.|\n-000002c0  88 02 42 00 84 b5 7e 53  1d 32 a2 88 19 e6 bc a8  |..B...~S.2......|\n-000002d0  8a b9 e8 13 af 63 8c a2  af 39 3b e0 dc d3 13 f9  |.....c...9;.....|\n-000002e0  ec fe 4b 4a e1 7c 59 0a  ae 98 0c 5e ec 9b 33 d2  |..KJ.|Y....^..3.|\n-000002f0  b4 ff 9a ed de 5a be 21  29 ad a6 e6 d5 c4 63 ae  |.....Z.!).....c.|\n-00000300  b2 cd 8a dd 26 02 42 01  29 f0 0a 38 4d 14 ca 41  |....&.B.)..8M..A|\n-00000310  89 02 31 2e 37 46 1f 60  f8 8d 4a 11 8e 86 a1 80  |..1.7F.`..J.....|\n-00000320  10 be 13 79 a0 74 af 43  d8 b1 6e 52 33 3e eb bf  |...y.t.C..nR3>..|\n-00000330  39 87 22 53 95 a4 15 1a  e6 d1 90 39 65 ec 75 c0  |9.\"S.......9e.u.|\n-00000340  1c 58 fa 0b f1 83 04 f5  e7 16 03 03 00 04 0e 00  |.X..............|\n-00000350  00 00                                             |..|\n+00000000  16 03 03 00 59 02 00 00  55 03 03 52 cc 57 58 4e  |....Y...U..R.WXN|\n+00000010  9d 88 aa 42 ea 19 04 55  fe e8 13 0c db 2d a9 70  |...B...U.....-.p|\n+00000020  93 85 12 08 d2 15 f6 61  25 84 b7 20 55 a3 15 3b  |.......a%.. U..;|\n+00000030  27 48 55 53 d1 23 c5 e8  f4 83 ce 44 db 2c 47 b8  |'HUS.#.....D.,G.|\n+00000040  2b 4a 3e be 29 3d 73 76  dc 79 6b 75 c0 09 00 00  |+J>.)=sv.yku....|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  03 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 03 00 d8 0c 00  00 d4 03 00 17 41 04 67  |*............A.g|\n+00000280  9e b0 72 cf 69 da 56 8c  d2 8f fb 80 64 bb d2 ec  |..r.i.V.....d...|\n+00000290  57 2d 8c 77 b7 5a b5 bc  ae bb 1f de db e7 64 5c  |W-.w.Z........d\\|\n+000002a0  36 2a 9b cb 92 a7 f1 db  93 76 8c 10 b5 74 ad b5  |6*.......v...t..|\n+000002b0  8f c5 79 18 18 e7 92 6f  22 3b 92 47 dc 60 cf 04  |..y....o\";.G.`..|\n+000002c0  03 00 8b 30 81 88 02 42  01 c9 0b bf 07 18 e3 7d  |...0...B.......}|\n+000002d0  26 b0 17 94 70 1d dc e8  6c 9e 45 4f d5 e0 79 00  |&...p...l.EO..y.|\n+000002e0  2b 03 90 bb 7a aa 23 01  43 53 a1 d8 9f 81 1f 18  |+...z.#.CS......|\n+000002f0  a2 5f 54 fa 7c c3 3a 15  d4 18 38 80 7e de f0 70  |._T.|.:...8.~..p|\n+00000300  42 5d 2a 22 74 d1 6c 75  f5 18 02 42 00 a8 0a 3c  |B]*\"t.lu...B...<|\n+00000310  44 38 fa 3f b7 fc 00 1e  80 30 0d e5 55 87 99 53  |D8.?.....0..U..S|\n+00000320  0a ab cd ad dd 1b 72 7f  49 bf 2f 89 74 72 11 3c  |......r.I./.tr.<|\n+00000330  6e 49 5e 31 3c 6c f1 bc  90 fc e9 75 95 78 7b 95  |nI^1<l.....u.x{.|\n+00000340  6a 8d 4d 51 0f e1 2f d1  9e 7b b7 c1 aa 62 16 03  |j.MQ../..{...b..|\n+00000350  03 00 04 0e 00 00 00                              |.......|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 03 00 01  |..h.A.Vk.Z......|\n 00000050  01 16 03 03 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n-00000060  00 00 00 00 00 00 dd af  5a 6c c7 fb 45 57 e9 0b  |........Zl..EW..|\n-00000070  33 b6 a9 42 7e d0 33 79  dc ba d2 9f 07 b2 a5 16  |3..B~.3y........|\n-00000080  31 30 5b 72 fb 27 10 ab  0b a9 cb 18 27 6f bd 75  |10[r.'......'o.u|\n-00000090  65 a8 94 ba 2d 18                                 |e...-.|\n+00000060  00 00 00 00 00 00 ea 9c  f3 e5 4d 7c 48 a5 48 9b  |..........M|H.H.|\n+00000070  87 43 2a 6b 74 e4 8e ca  e4 1c c9 87 46 c2 d7 ef  |.C*kt.......F...|\n+00000080  5e 8f c8 60 a9 1c 5f 68  c6 a9 7d 39 a5 8d 13 7c  |^..`.._h..}9...||\n+00000090  bd 31 6e 19 8d 95                                 |.1n...|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 40 2a 60 dc bf a9  |..........@*`...|\n-00000010  7e 5e a9 97 17 ee 1e 62  e8 0f c5 f2 72 1b 11 86  |~^.....b....r...|\n-00000020  68 83 49 30 2e d4 08 32  80 16 1d 6a 4a 98 d2 e0  |h.I0...2...jJ...|\n-00000030  0b 0c fa 5b 1c 74 b6 83  b8 ec 3d c6 7c f4 c5 f1  |...[.t....=.|...|\n-00000040  d9 16 68 cf 32 1b 06 9b  18 fd f6                 |..h.2......|\n+00000000  14 03 03 00 01 01 16 03  03 00 40 b1 d2 81 e7 2c  |..........@....,|\n+00000010  ae 4a 72 98 91 5a 36 ae  8b 62 4b 58 55 f0 65 30  |.Jr..Z6..bKXU.e0|\n+00000020  9a 8d ca 73 13 9f 90 c0  18 fb 10 07 c9 fa 9c aa  |...s............|\n+00000030  67 2a 42 90 11 e5 38 7f  2f 35 ac d7 c7 75 cc 84  |g*B...8./5...u..|\n+00000040  a4 73 dd 9c f5 0d 3e 5d  25 76 c6                 |.s....>]%v.|\n >>> Flow 5 (client to server)\n 00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-00000010  00 00 00 00 00 16 b5 36  aa c9 3d 27 04 cf 9f 37  |.......6..='...7|\n-00000020  a0 6c 35 d1 d3 dd 5b cf  a1 df aa e0 54 0b 5d d4  |.l5...[.....T.].|\n-00000030  b0 d3 44 18 5e 15 03 03  00 30 00 00 00 00 00 00  |..D.^....0......|\n-00000040  00 00 00 00 00 00 00 00  00 00 ea de c9 15 ff e6  |................|\n-00000050  28 f8 5d c4 2a de 64 64  98 22 1e ea 75 2e a7 72  |(.].*.dd.\"..u..r|\n-00000060  65 95 98 0a e0 96 f4 de  ad 33                    |e........3|\n+00000010  00 00 00 00 00 5c f6 d4  35 91 79 5d 47 e6 7d eb  |.....\\..5.y]G.}.|\n+00000020  a4 ba d8 94 ee 89 71 60  ba 67 e6 58 79 d7 52 38  |......q`.g.Xy.R8|\n+00000030  35 07 0a 90 e4 15 03 03  00 30 00 00 00 00 00 00  |5........0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 73 92 bf 53 22 d7  |..........s..S\".|\n+00000050  80 54 7a 1c 77 d9 a5 16  05 68 c7 c7 5b ce 05 41  |.Tz.w....h..[..A|\n+00000060  51 d2 a6 2b b9 ba 34 ef  93 5e                    |Q..+..4..^|"}, {"sha": "155fab6b2ae30eac2cada2a4f6e7fbcafb84af7f", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ECDHE-ECDSA-AES-GCM", "status": "modified", "additions": 69, "deletions": 69, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES-GCM", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES-GCM", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES-GCM?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,84 +1,84 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f7 a9  |....T...P..R.w..|\n-00000010  e1 80 2b b8 c5 87 2e 11  81 69 a3 0c 25 83 bb 69  |..+......i..%..i|\n-00000020  4c a0 c9 cf c0 b9 f4 be  7b 8b fc 20 d4 78 d2 91  |L.......{.. .x..|\n-00000030  37 58 b2 d6 0a ee 11 5c  31 c6 d3 58 83 38 c3 6a  |7X.....\\1..X.8.j|\n-00000040  2a da 64 70 02 0f ce f5  65 27 21 76 c0 2b 00 00  |*.dp....e'!v.+..|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n-00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n-00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n-00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n-00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n-000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n-000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n-000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n-00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n-00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n-00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n-00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n-00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n-00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n-00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n-00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n-00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n-00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n-000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n-000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n-000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n-000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n-000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n-000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n-00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n-00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n-00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n-00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n-00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n-00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n-00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n-00000270  d7 0c 00 00 d3 03 00 17  41 04 b1 83 29 44 4d 61  |........A...)DMa|\n-00000280  7f 14 4e 4f 54 fc 9f fb  01 e7 ab 16 fb 28 20 fc  |..NOT........( .|\n-00000290  9a cb 75 50 b0 47 d5 3e  d3 41 0f 0f f7 dd c8 6f  |..uP.G.>.A.....o|\n-000002a0  b3 65 e2 e4 c4 2b 74 fa  4e f0 6d 27 5a 1a 5a 69  |.e...+t.N.m'Z.Zi|\n-000002b0  9d 44 78 f0 9b ec 4e cc  26 70 04 03 00 8a 30 81  |.Dx...N.&p....0.|\n-000002c0  87 02 42 01 16 f4 f8 7a  52 8b 0f 83 75 d9 4f b2  |..B....zR...u.O.|\n-000002d0  51 10 1c a6 30 6b ac 30  ab b9 00 38 b9 44 95 47  |Q...0k.0...8.D.G|\n-000002e0  4b 80 29 ca 36 f4 b2 86  32 25 14 7b 4a 99 14 18  |K.).6...2%.{J...|\n-000002f0  cd 3c 43 68 cb cf d8 cb  12 d8 1c 27 7b 4e de dd  |.<Ch.......'{N..|\n-00000300  91 d8 7a 23 de 02 41 4b  33 2b 28 83 e4 47 e9 a7  |..z#..AK3+(..G..|\n-00000310  fb aa 8a 3b ee 5e 96 3f  dd 2c c8 cf f4 1f 1d c7  |...;.^.?.,......|\n-00000320  c3 41 b5 ba c9 22 d3 5b  7f 11 d9 e6 c5 f3 a7 df  |.A...\".[........|\n-00000330  bb dd 4f df a0 5f 53 0b  d0 bb 73 84 8a 5c 1c 8f  |..O.._S...s..\\..|\n-00000340  a7 4c 6e fd 4b fe d5 b1  16 03 03 00 04 0e 00 00  |.Ln.K...........|\n-00000350  00                                                |.|\n+00000000  16 03 03 00 59 02 00 00  55 03 03 52 cc 57 58 95  |....Y...U..R.WX.|\n+00000010  a0 c0 f9 1d 34 16 31 f5  a5 08 dd 3d 6a 4c c9 96  |....4.1....=jL..|\n+00000020  aa 8b 7f f3 1e 0c 59 4c  06 c1 2b 20 22 f5 fb 09  |......YL..+ \"...|\n+00000030  f2 7a c3 22 85 2f 16 b6  81 2d 2b d6 12 c2 4d 84  |.z.\"./...-+...M.|\n+00000040  7e a9 3f 18 f2 1c f7 44  6c 66 3f 7f c0 2b 00 00  |~.?....Dlf?..+..|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  03 02 0e 0b 00 02 0a 00  02 07 00 02 04 30 82 02  |.............0..|\n+00000070  00 30 82 01 62 02 09 00  b8 bf 2d 47 a0 d2 eb f4  |.0..b.....-G....|\n+00000080  30 09 06 07 2a 86 48 ce  3d 04 01 30 45 31 0b 30  |0...*.H.=..0E1.0|\n+00000090  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+000000a0  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+000000b0  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000c0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000d0  74 64 30 1e 17 0d 31 32  31 31 32 32 31 35 30 36  |td0...1211221506|\n+000000e0  33 32 5a 17 0d 32 32 31  31 32 30 31 35 30 36 33  |32Z..22112015063|\n+000000f0  32 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |2Z0E1.0...U....A|\n+00000100  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+00000110  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000120  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000130  73 20 50 74 79 20 4c 74  64 30 81 9b 30 10 06 07  |s Pty Ltd0..0...|\n+00000140  2a 86 48 ce 3d 02 01 06  05 2b 81 04 00 23 03 81  |*.H.=....+...#..|\n+00000150  86 00 04 00 c4 a1 ed be  98 f9 0b 48 73 36 7e c3  |...........Hs6~.|\n+00000160  16 56 11 22 f2 3d 53 c3  3b 4d 21 3d cd 6b 75 e6  |.V.\".=S.;M!=.ku.|\n+00000170  f6 b0 dc 9a df 26 c1 bc  b2 87 f0 72 32 7c b3 64  |.....&.....r2|.d|\n+00000180  2f 1c 90 bc ea 68 23 10  7e fe e3 25 c0 48 3a 69  |/....h#.~..%.H:i|\n+00000190  e0 28 6d d3 37 00 ef 04  62 dd 0d a0 9c 70 62 83  |.(m.7...b....pb.|\n+000001a0  d8 81 d3 64 31 aa 9e 97  31 bd 96 b0 68 c0 9b 23  |...d1...1...h..#|\n+000001b0  de 76 64 3f 1a 5c 7f e9  12 0e 58 58 b6 5f 70 dd  |.vd?.\\....XX._p.|\n+000001c0  9b d8 ea d5 d7 f5 d5 cc  b9 b6 9f 30 66 5b 66 9a  |...........0f[f.|\n+000001d0  20 e2 27 e5 bf fe 3b 30  09 06 07 2a 86 48 ce 3d  | .'...;0...*.H.=|\n+000001e0  04 01 03 81 8c 00 30 81  88 02 42 01 88 a2 4f eb  |......0...B...O.|\n+000001f0  e2 45 c5 48 7d 1b ac f5  ed 98 9d ae 47 70 c0 5e  |.E.H}.......Gp.^|\n+00000200  1b b6 2f bd f1 b6 4d b7  61 40 d3 11 a2 ce ee 0b  |../...M.a@......|\n+00000210  7e 92 7e ff 76 9d c3 3b  7e a5 3f ce fa 10 e2 59  |~.~.v..;~.?....Y|\n+00000220  ec 47 2d 7c ac da 4e 97  0e 15 a0 6f d0 02 42 01  |.G-|..N....o..B.|\n+00000230  4d fc be 67 13 9c 2d 05  0e bd 3f a3 8c 25 c1 33  |M..g..-...?..%.3|\n+00000240  13 83 0d 94 06 bb d4 37  7a f6 ec 7a c9 86 2e dd  |.......7z..z....|\n+00000250  d7 11 69 7f 85 7c 56 de  fb 31 78 2b e4 c7 78 0d  |..i..|V..1x+..x.|\n+00000260  ae cb be 9e 4e 36 24 31  7b 6a 0f 39 95 12 07 8f  |....N6$1{j.9....|\n+00000270  2a 16 03 03 00 d8 0c 00  00 d4 03 00 17 41 04 dd  |*............A..|\n+00000280  b5 88 3a be 12 a5 fe 0e  19 f5 76 4f 71 90 93 ca  |..:.......vOq...|\n+00000290  0e b3 62 a2 b0 c0 f2 78  95 90 cb 10 f9 e8 c8 8e  |..b....x........|\n+000002a0  a6 5e 48 ae 8e 96 3d 60  3f 0a b0 73 e8 ea 42 42  |.^H...=`?..s..BB|\n+000002b0  6e 19 fe e3 ab 30 ff 01  cc ae c1 90 3a 10 85 04  |n....0......:...|\n+000002c0  03 00 8b 30 81 88 02 42  01 6e b2 79 a1 c1 45 7d  |...0...B.n.y..E}|\n+000002d0  a3 44 45 75 e0 05 b6 68  ee e3 bb 80 2d 88 23 0c  |.DEu...h....-.#.|\n+000002e0  40 ad 68 95 59 0f 49 5b  e5 67 2a 5a 9b 29 32 38  |@.h.Y.I[.g*Z.)28|\n+000002f0  13 a0 f1 6c 11 3f 23 b9  1b 4b 0c 1f 2d 61 5e b3  |...l.?#..K..-a^.|\n+00000300  de 14 b7 b8 a6 fb 7b 23  1f f3 02 42 01 30 39 22  |......{#...B.09\"|\n+00000310  01 6f d7 a2 83 2a fd 8a  6f f0 c2 d6 1b 0f b4 17  |.o...*..o.......|\n+00000320  d3 50 f7 de 59 20 6a 5c  a1 93 65 ed aa fa 8f 6f  |.P..Y j\\..e....o|\n+00000330  75 3a b6 ab 33 b6 68 26  0b 8f d5 b2 ca eb 86 27  |u:..3.h&.......'|\n+00000340  27 72 68 ed ee 42 37 1a  ff 8a 68 c3 32 91 16 03  |'rh..B7...h.2...|\n+00000350  03 00 04 0e 00 00 00                              |.......|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 03 00 01  |..h.A.Vk.Z......|\n-00000050  01 16 03 03 00 28 00 00  00 00 00 00 00 00 cd 30  |.....(.........0|\n-00000060  fd 7f db 2c e9 5d df be  c1 6d ee 15 44 e3 04 f4  |...,.]...m..D...|\n-00000070  4c 32 e8 05 65 65 8f 20  93 4b 7a b2 29 e6        |L2..ee. .Kz.).|\n+00000050  01 16 03 03 00 28 00 00  00 00 00 00 00 00 8c c6  |.....(..........|\n+00000060  b4 4f c9 4b f0 81 05 aa  aa 88 79 b0 76 fb 56 8a  |.O.K......y.v.V.|\n+00000070  d3 8f 14 ff e2 9b a3 f6  92 77 aa cf f3 4e        |.........w...N|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 28 fb ad f8 e3 77  |..........(....w|\n-00000010  e2 56 68 41 49 cb 4c 7b  1d 1e c4 2f 0b d2 3f 45  |.VhAI.L{.../..?E|\n-00000020  e5 ec a0 72 bd 77 f7 c3  be 17 39 e2 ff 03 36 ee  |...r.w....9...6.|\n-00000030  39 b0 9f                                          |9..|\n+00000000  14 03 03 00 01 01 16 03  03 00 28 ca a5 27 78 fb  |..........(..'x.|\n+00000010  e9 66 83 4d 71 62 d4 37  2f 01 5c 8b 67 52 98 5d  |.f.Mqb.7/.\\.gR.]|\n+00000020  0d a0 94 53 c1 b5 25 00  e2 42 ab 37 67 2e 12 eb  |...S..%..B.7g...|\n+00000030  35 a3 9a                                          |5..|\n >>> Flow 5 (client to server)\n-00000000  17 03 03 00 1e 00 00 00  00 00 00 00 01 cc 1e ea  |................|\n-00000010  a9 11 7d 34 9d 73 f0 5d  76 e6 3a bf 76 9b 71 45  |..}4.s.]v.:.v.qE|\n-00000020  84 4b 37 15 03 03 00 1a  00 00 00 00 00 00 00 02  |.K7.............|\n-00000030  a4 98 0c 9a 61 5f 58 48  98 b5 eb 9a 67 93 3e 6a  |....a_XH....g.>j|\n-00000040  7d 49                                             |}I|\n+00000000  17 03 03 00 1e 00 00 00  00 00 00 00 01 e0 be 1e  |................|\n+00000010  a7 0f 73 a6 25 ca 9e d3  0a ad 6b e7 e9 db 21 a1  |..s.%.....k...!.|\n+00000020  70 5f c1 15 03 03 00 1a  00 00 00 00 00 00 00 02  |p_..............|\n+00000030  c3 af f9 8c 63 94 cb e4  99 6d b7 32 80 22 f7 1f  |....c....m.2.\"..|\n+00000040  02 87                                             |..|"}, {"sha": "ae137d878451ffdc296474d68b76dff95ede95ad", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ECDHE-RSA-AES", "status": "modified", "additions": 82, "deletions": 82, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-RSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,99 +1,99 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f7 63  |....T...P..R.w.c|\n-00000010  0f 46 31 fc 9b 1f 13 19  98 13 0f dc f0 99 40 1c  |.F1...........@.|\n-00000020  a4 72 1a 73 39 8e 49 d8  bc c6 60 20 80 ba 81 b5  |.r.s9.I...` ....|\n-00000030  fb 17 2e 41 f4 e3 26 4b  2e ab 4f e0 10 d6 fd 46  |...A..&K..O....F|\n-00000040  b6 1e 94 ef 5f 66 34 21  e0 27 71 b9 c0 13 00 00  |...._f4!.'q.....|\n-00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 be 0b 00  |................|\n-00000060  02 ba 00 02 b7 00 02 b4  30 82 02 b0 30 82 02 19  |........0...0...|\n-00000070  a0 03 02 01 02 02 09 00  85 b0 bb a4 8a 7f b8 ca  |................|\n-00000080  30 0d 06 09 2a 86 48 86  f7 0d 01 01 05 05 00 30  |0...*.H........0|\n-00000090  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-000000a0  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-000000b0  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-000000c0  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-000000d0  74 79 20 4c 74 64 30 1e  17 0d 31 30 30 34 32 34  |ty Ltd0...100424|\n-000000e0  30 39 30 39 33 38 5a 17  0d 31 31 30 34 32 34 30  |090938Z..1104240|\n-000000f0  39 30 39 33 38 5a 30 45  31 0b 30 09 06 03 55 04  |90938Z0E1.0...U.|\n-00000100  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n-00000110  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n-00000120  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n-00000130  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 81 9f  |dgits Pty Ltd0..|\n-00000140  30 0d 06 09 2a 86 48 86  f7 0d 01 01 01 05 00 03  |0...*.H.........|\n-00000150  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n-00000160  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n-00000170  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n-00000180  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n-00000190  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n-000001a0  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n-000001b0  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n-000001c0  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n-000001d0  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n-000001e0  81 a7 30 81 a4 30 1d 06  03 55 1d 0e 04 16 04 14  |..0..0...U......|\n-000001f0  b1 ad e2 85 5a cf cb 28  db 69 ce 23 69 de d3 26  |....Z..(.i.#i..&|\n-00000200  8e 18 88 39 30 75 06 03  55 1d 23 04 6e 30 6c 80  |...90u..U.#.n0l.|\n-00000210  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n-00000220  26 8e 18 88 39 a1 49 a4  47 30 45 31 0b 30 09 06  |&...9.I.G0E1.0..|\n-00000230  03 55 04 06 13 02 41 55  31 13 30 11 06 03 55 04  |.U....AU1.0...U.|\n-00000240  08 13 0a 53 6f 6d 65 2d  53 74 61 74 65 31 21 30  |...Some-State1!0|\n-00000250  1f 06 03 55 04 0a 13 18  49 6e 74 65 72 6e 65 74  |...U....Internet|\n-00000260  20 57 69 64 67 69 74 73  20 50 74 79 20 4c 74 64  | Widgits Pty Ltd|\n-00000270  82 09 00 85 b0 bb a4 8a  7f b8 ca 30 0c 06 03 55  |...........0...U|\n-00000280  1d 13 04 05 30 03 01 01  ff 30 0d 06 09 2a 86 48  |....0....0...*.H|\n-00000290  86 f7 0d 01 01 05 05 00  03 81 81 00 08 6c 45 24  |.............lE$|\n-000002a0  c7 6b b1 59 ab 0c 52 cc  f2 b0 14 d7 87 9d 7a 64  |.k.Y..R.......zd|\n-000002b0  75 b5 5a 95 66 e4 c5 2b  8e ae 12 66 1f eb 4f 38  |u.Z.f..+...f..O8|\n-000002c0  b3 6e 60 d3 92 fd f7 41  08 b5 25 13 b1 18 7a 24  |.n`....A..%...z$|\n-000002d0  fb 30 1d ba ed 98 b9 17  ec e7 d7 31 59 db 95 d3  |.0.........1Y...|\n-000002e0  1d 78 ea 50 56 5c d5 82  5a 2d 5a 5f 33 c4 b6 d8  |.x.PV\\..Z-Z_3...|\n-000002f0  c9 75 90 96 8c 0f 52 98  b5 cd 98 1f 89 20 5f f2  |.u....R...... _.|\n-00000300  a0 1c a3 1b 96 94 dd a9  fd 57 e9 70 e8 26 6d 71  |.........W.p.&mq|\n-00000310  99 9b 26 6e 38 50 29 6c  90 a7 bd d9 16 03 03 00  |..&n8P)l........|\n-00000320  cd 0c 00 00 c9 03 00 17  41 04 07 bc 8a ca 81 0b  |........A.......|\n-00000330  56 ef fa 13 da 6f 4b 90  77 d7 bc e0 4b b5 50 31  |V....oK.w...K.P1|\n-00000340  f4 a4 bf c8 e3 28 32 42  22 ec a3 2e c6 65 21 93  |.....(2B\"....e!.|\n-00000350  75 26 cf b0 83 68 c4 22  ce 02 7d 9a 5a a4 2a 76  |u&...h.\"..}.Z.*v|\n-00000360  f4 63 d1 97 48 6e 5a 5d  55 af 04 01 00 80 2f 5a  |.c..HnZ]U...../Z|\n-00000370  0e 8e a3 98 6c 5d fe 45  c0 a1 80 56 9b a7 cd 3f  |....l].E...V...?|\n-00000380  62 5c 65 94 4a b4 00 e1  85 6a 08 9f 21 c7 de f5  |b\\e.J....j..!...|\n-00000390  32 96 3a e1 24 4c a2 1a  f4 42 eb 26 34 32 98 1f  |2.:.$L...B.&42..|\n-000003a0  00 1f 0c 54 ed cd d5 90  32 ac 63 7a 6b 8b 81 22  |...T....2.czk..\"|\n-000003b0  a0 9a 1b 72 cc b1 ea aa  a8 e5 92 dd 1b 47 59 9f  |...r.........GY.|\n-000003c0  2c 0e f4 96 44 ae 40 4b  d2 12 8d 66 f3 13 a2 fe  |,...D.@K...f....|\n-000003d0  e8 ec d7 69 5b fe 6b 1b  57 2a b0 e4 4c 9c d8 01  |...i[.k.W*..L...|\n-000003e0  fc b6 b1 b6 b5 06 49 2f  a7 65 6c da ac a1 16 03  |......I/.el.....|\n-000003f0  03 00 04 0e 00 00 00                              |.......|\n+00000000  16 03 03 00 59 02 00 00  55 03 03 52 cc 57 58 64  |....Y...U..R.WXd|\n+00000010  28 c0 0d 0a be 3a aa 96  4e 92 8d 9d f2 19 ab de  |(....:..N.......|\n+00000020  b2 05 3a 61 13 78 60 7e  96 24 b2 20 a3 06 80 14  |..:a.x`~.$. ....|\n+00000030  15 52 89 1b d4 84 94 8b  ed 66 8d 75 63 8f dc 5a  |.R.......f.uc..Z|\n+00000040  a8 20 14 65 5d ce 7e 2f  4b 3e 1e 09 c0 13 00 00  |. .e].~/K>......|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  03 02 be 0b 00 02 ba 00  02 b7 00 02 b4 30 82 02  |.............0..|\n+00000070  b0 30 82 02 19 a0 03 02  01 02 02 09 00 85 b0 bb  |.0..............|\n+00000080  a4 8a 7f b8 ca 30 0d 06  09 2a 86 48 86 f7 0d 01  |.....0...*.H....|\n+00000090  01 05 05 00 30 45 31 0b  30 09 06 03 55 04 06 13  |....0E1.0...U...|\n+000000a0  02 41 55 31 13 30 11 06  03 55 04 08 13 0a 53 6f  |.AU1.0...U....So|\n+000000b0  6d 65 2d 53 74 61 74 65  31 21 30 1f 06 03 55 04  |me-State1!0...U.|\n+000000c0  0a 13 18 49 6e 74 65 72  6e 65 74 20 57 69 64 67  |...Internet Widg|\n+000000d0  69 74 73 20 50 74 79 20  4c 74 64 30 1e 17 0d 31  |its Pty Ltd0...1|\n+000000e0  30 30 34 32 34 30 39 30  39 33 38 5a 17 0d 31 31  |00424090938Z..11|\n+000000f0  30 34 32 34 30 39 30 39  33 38 5a 30 45 31 0b 30  |0424090938Z0E1.0|\n+00000100  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+00000110  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+00000120  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+00000130  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+00000140  74 64 30 81 9f 30 0d 06  09 2a 86 48 86 f7 0d 01  |td0..0...*.H....|\n+00000150  01 01 05 00 03 81 8d 00  30 81 89 02 81 81 00 bb  |........0.......|\n+00000160  79 d6 f5 17 b5 e5 bf 46  10 d0 dc 69 be e6 2b 07  |y......F...i..+.|\n+00000170  43 5a d0 03 2d 8a 7a 43  85 b7 14 52 e7 a5 65 4c  |CZ..-.zC...R..eL|\n+00000180  2c 78 b8 23 8c b5 b4 82  e5 de 1f 95 3b 7e 62 a5  |,x.#........;~b.|\n+00000190  2c a5 33 d6 fe 12 5c 7a  56 fc f5 06 bf fa 58 7b  |,.3...\\zV.....X{|\n+000001a0  26 3f b5 cd 04 d3 d0 c9  21 96 4a c7 f4 54 9f 5a  |&?......!.J..T.Z|\n+000001b0  bf ef 42 71 00 fe 18 99  07 7f 7e 88 7d 7d f1 04  |..Bq......~.}}..|\n+000001c0  39 c4 a2 2e db 51 c9 7c  e3 c0 4c 3b 32 66 01 cf  |9....Q.|..L;2f..|\n+000001d0  af b1 1d b8 71 9a 1d db  db 89 6b ae da 2d 79 02  |....q.....k..-y.|\n+000001e0  03 01 00 01 a3 81 a7 30  81 a4 30 1d 06 03 55 1d  |.......0..0...U.|\n+000001f0  0e 04 16 04 14 b1 ad e2  85 5a cf cb 28 db 69 ce  |.........Z..(.i.|\n+00000200  23 69 de d3 26 8e 18 88  39 30 75 06 03 55 1d 23  |#i..&...90u..U.#|\n+00000210  04 6e 30 6c 80 14 b1 ad  e2 85 5a cf cb 28 db 69  |.n0l......Z..(.i|\n+00000220  ce 23 69 de d3 26 8e 18  88 39 a1 49 a4 47 30 45  |.#i..&...9.I.G0E|\n+00000230  31 0b 30 09 06 03 55 04  06 13 02 41 55 31 13 30  |1.0...U....AU1.0|\n+00000240  11 06 03 55 04 08 13 0a  53 6f 6d 65 2d 53 74 61  |...U....Some-Sta|\n+00000250  74 65 31 21 30 1f 06 03  55 04 0a 13 18 49 6e 74  |te1!0...U....Int|\n+00000260  65 72 6e 65 74 20 57 69  64 67 69 74 73 20 50 74  |ernet Widgits Pt|\n+00000270  79 20 4c 74 64 82 09 00  85 b0 bb a4 8a 7f b8 ca  |y Ltd...........|\n+00000280  30 0c 06 03 55 1d 13 04  05 30 03 01 01 ff 30 0d  |0...U....0....0.|\n+00000290  06 09 2a 86 48 86 f7 0d  01 01 05 05 00 03 81 81  |..*.H...........|\n+000002a0  00 08 6c 45 24 c7 6b b1  59 ab 0c 52 cc f2 b0 14  |..lE$.k.Y..R....|\n+000002b0  d7 87 9d 7a 64 75 b5 5a  95 66 e4 c5 2b 8e ae 12  |...zdu.Z.f..+...|\n+000002c0  66 1f eb 4f 38 b3 6e 60  d3 92 fd f7 41 08 b5 25  |f..O8.n`....A..%|\n+000002d0  13 b1 18 7a 24 fb 30 1d  ba ed 98 b9 17 ec e7 d7  |...z$.0.........|\n+000002e0  31 59 db 95 d3 1d 78 ea  50 56 5c d5 82 5a 2d 5a  |1Y....x.PV\\..Z-Z|\n+000002f0  5f 33 c4 b6 d8 c9 75 90  96 8c 0f 52 98 b5 cd 98  |_3....u....R....|\n+00000300  1f 89 20 5f f2 a0 1c a3  1b 96 94 dd a9 fd 57 e9  |.. _..........W.|\n+00000310  70 e8 26 6d 71 99 9b 26  6e 38 50 29 6c 90 a7 bd  |p.&mq..&n8P)l...|\n+00000320  d9 16 03 03 00 cd 0c 00  00 c9 03 00 17 41 04 33  |.............A.3|\n+00000330  96 55 c1 5e 9d c4 a1 23  86 5b e8 df f9 7d d4 d0  |.U.^...#.[...}..|\n+00000340  5f 61 9a c6 24 be a6 4b  ce 08 6e 9f 8f ef 08 66  |_a..$..K..n....f|\n+00000350  9f a5 2e e7 04 c9 f2 d9  ab ef fa 62 28 a0 01 7a  |...........b(..z|\n+00000360  d9 d6 44 9b c3 25 dc 5e  a9 75 ea 8d 2f e8 63 04  |..D..%.^.u../.c.|\n+00000370  01 00 80 ba b3 36 74 0f  2c 3a c2 a3 2c ae 74 dc  |.....6t.,:..,.t.|\n+00000380  f8 90 ba 91 10 a3 c1 8e  2b bf 2c b4 05 78 12 ff  |........+.,..x..|\n+00000390  ec 62 b3 db f2 27 3d d0  0f bb 7d 1e f6 8f fd ee  |.b...'=...}.....|\n+000003a0  53 37 be 6a 9e d9 21 42  ea 20 1e d8 fc eb 3c 79  |S7.j..!B. ....<y|\n+000003b0  98 85 ab fe 9b 2d 63 77  cb 13 32 32 81 94 3e 53  |.....-cw..22..>S|\n+000003c0  4f a7 63 c4 78 2d a2 48  08 ea f6 2a 50 24 33 f4  |O.c.x-.H...*P$3.|\n+000003d0  9f 10 63 13 80 4e ec 5e  68 e3 18 f0 7b a4 2f 16  |..c..N.^h...{./.|\n+000003e0  db c0 aa 8c a0 ee 47 65  a9 57 f3 a5 ef 6a 45 f5  |......Ge.W...jE.|\n+000003f0  e2 54 cd 16 03 03 00 04  0e 00 00 00              |.T..........|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n 00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n 00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n 00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n 00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 03 00 01  |..h.A.Vk.Z......|\n 00000050  01 16 03 03 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n-00000060  00 00 00 00 00 00 40 b3  ad 72 14 89 dc 2f e5 ac  |......@..r.../..|\n-00000070  21 94 09 2f a4 99 ea f1  6e 09 57 20 05 51 2b 0b  |!../....n.W .Q+.|\n-00000080  db 16 2d d8 ab 58 71 d9  da be 75 10 69 2d ef 03  |..-..Xq...u.i-..|\n-00000090  e3 68 0e ab da 21                                 |.h...!|\n+00000060  00 00 00 00 00 00 73 06  31 ab 8e cc e0 db 1a fe  |......s.1.......|\n+00000070  7e d1 5b 2b 96 93 ee 2d  76 54 17 f9 c2 73 e8 62  |~.[+...-vT...s.b|\n+00000080  f0 39 31 02 72 e9 ae 08  75 2d f1 f3 82 06 17 57  |.91.r...u-.....W|\n+00000090  b7 aa c2 79 9f 8e                                 |...y..|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 40 c3 bb ef 26 e3  |..........@...&.|\n-00000010  77 8d ca 38 15 ee e3 ce  2e b4 63 41 5a 07 fe b7  |w..8......cAZ...|\n-00000020  9e 68 48 40 fc 09 17 f7  44 0d 04 7c af 2a 72 08  |.hH@....D..|.*r.|\n-00000030  26 a0 65 13 02 04 c5 c7  63 80 86 76 cb da 67 4b  |&.e.....c..v..gK|\n-00000040  6b 77 6b 69 f7 38 81 9b  22 42 36                 |kwki.8..\"B6|\n+00000000  14 03 03 00 01 01 16 03  03 00 40 dc c3 03 17 76  |..........@....v|\n+00000010  d0 a5 61 9e 47 6a 1a 01  d0 21 92 c5 d5 f9 69 ba  |..a.Gj...!....i.|\n+00000020  5e 82 2e d3 fc 4b a4 af  78 9d 47 6e b8 33 dc 8b  |^....K..x.Gn.3..|\n+00000030  a0 94 b5 72 ea 4a 7d fc  ea f5 6e b6 c9 00 73 d1  |...r.J}...n...s.|\n+00000040  3e cb 44 ef 0c fc fc ff  1e 87 8e                 |>.D........|\n >>> Flow 5 (client to server)\n 00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-00000010  00 00 00 00 00 4a b4 4a  af 44 80 31 87 26 b3 a8  |.....J.J.D.1.&..|\n-00000020  1e f7 2a 4c 0c 8f 29 ac  52 55 75 e7 fe de b9 66  |..*L..).RUu....f|\n-00000030  aa 16 e7 18 02 15 03 03  00 30 00 00 00 00 00 00  |.........0......|\n-00000040  00 00 00 00 00 00 00 00  00 00 54 7f 4b c7 d7 93  |..........T.K...|\n-00000050  90 30 ff 8f 96 4d 71 b7  ed db 65 7c af a2 00 f9  |.0...Mq...e|....|\n-00000060  cb b4 77 a6 c4 5e 23 a7  77 4a                    |..w..^#.wJ|\n+00000010  00 00 00 00 00 de 2e e3  8e d3 a5 e5 64 8e 22 f7  |............d.\".|\n+00000020  09 00 15 06 cb e9 d3 c5  3c 17 41 2f 5b a8 ce 09  |........<.A/[...|\n+00000030  70 59 47 24 22 15 03 03  00 30 00 00 00 00 00 00  |pYG$\"....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 6a af 3f c1 54 6b  |..........j.?.Tk|\n+00000050  14 64 23 c4 94 79 82 fd  78 84 ef 04 6f 64 fd 3e  |.d#..y..x...od.>|\n+00000060  20 ff a0 11 ed fb d1 fb  ff 07                    | .........|"}, {"sha": "2c6e776848eab1118db9755bc638d9f125011332", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-RSA-RC4", "status": "modified", "additions": 64, "deletions": 63, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,63 +1,64 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000000  16 03 01 00 75 01 00 00  71 03 03 00 00 00 00 00  |....u...q.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n 00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n-00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 2e 00 05 00 05  |./.5............|\n 00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n 00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n-00000070  03 02 01 02 03                                    |.....|\n+00000070  03 02 01 02 03 ff 01 00  01 00                    |..........|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 4a 02 00 00  46 03 03 52 ac 77 f7 35  |....J...F..R.w.5|\n-00000010  a6 0a 57 0a 43 25 69 29  e7 14 d6 27 f3 21 ec c7  |..W.C%i)...'.!..|\n-00000020  be 69 65 eb f4 ed 96 4c  9e 0a fa 20 5d 7d 71 3b  |.ie....L... ]}q;|\n-00000030  c1 7d 2d 56 a9 60 2f 58  f2 05 29 36 8f 59 a6 0f  |.}-V.`/X..)6.Y..|\n-00000040  13 f8 31 dc 8e b5 ca 4d  38 c4 28 19 00 05 00 16  |..1....M8.(.....|\n-00000050  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-00000310  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+00000000  16 03 03 00 51 02 00 00  4d 03 03 52 cc 57 58 70  |....Q...M..R.WXp|\n+00000010  03 50 58 32 ec de bc ae  18 e7 24 15 2b 4d cc d5  |.PX2......$.+M..|\n+00000020  1f 40 db 80 5b 19 d9 3f  48 4b 06 20 87 fe d3 d4  |.@..[..?HK. ....|\n+00000030  51 42 74 9c cf 9d fd 31  c3 53 28 f1 a4 21 16 d6  |QBt....1.S(..!..|\n+00000040  4f 5a 22 09 9d 99 89 7c  f9 e7 5b 49 00 05 00 00  |OZ\"....|..[I....|\n+00000050  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000060  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000070  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000080  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000090  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000a0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000b0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000c0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000d0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000e0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000f0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+00000100  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000110  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000120  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000130  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000140  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000150  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000160  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000170  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000180  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000190  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+000001a0  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+000001b0  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001c0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001d0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001e0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+00000210  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000220  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000230  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000240  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000250  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000260  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000270  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000280  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000290  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+000002a0  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+000002b0  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002c0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002d0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002e0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002f0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+00000300  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+00000310  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 04 0e 00  |n8P)l...........|\n+00000320  00 00                                             |..|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n 00000010  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n@@ -68,15 +69,15 @@\n 00000060  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n 00000070  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n 00000080  35 d4 1c 43 d1 30 6f 55  4e 0a 70 14 03 03 00 01  |5..C.0oUN.p.....|\n-00000090  01 16 03 03 00 24 6e bd  04 e6 9f 42 97 d8 e5 c8  |.....$n....B....|\n-000000a0  53 80 41 35 a7 f3 a3 9e  88 13 37 ac 51 25 c2 87  |S.A5......7.Q%..|\n-000000b0  29 4a e1 e4 eb 2b 31 a3  8b 0b                    |)J...+1...|\n+00000090  01 16 03 03 00 24 fb 2b  2f c5 19 90 a6 bc 81 c0  |.....$.+/.......|\n+000000a0  ac 6b e6 1f e2 af be 10  b4 a0 c7 31 aa d8 cc a2  |.k.........1....|\n+000000b0  ce 51 1e 8e d6 00 76 27  72 53                    |.Q....v'rS|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 60 22 7f 1b 4d  |..........$`\"..M|\n-00000010  75 6a c3 d3 d6 7c 18 f5  94 b1 4b 80 b8 7c a5 1b  |uj...|....K..|..|\n-00000020  8c 45 f0 b6 e7 8a 65 82  69 0f c0 0f 9b 71 ea     |.E....e.i....q.|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 d4 c8 b3 8a 87  |..........$.....|\n+00000010  b5 0d 01 80 fc 2c df 18  ca 17 fd 06 ad 31 29 13  |.....,.......1).|\n+00000020  5f f9 b4 75 ad 49 c8 de  ec 1a ee 57 6b 1a 81     |_..u.I.....Wk..|\n >>> Flow 5 (client to server)\n-00000000  17 03 03 00 1a 3a 50 9f  29 c9 86 ec 81 79 f0 86  |.....:P.)....y..|\n-00000010  25 03 5b 0c dd a6 f7 d6  e0 ad dc bc eb 37 c7 15  |%.[..........7..|\n-00000020  03 03 00 16 89 31 da 0a  95 7a 42 54 81 85 de 9f  |.....1...zBT....|\n-00000030  ff 9f 7e 13 28 3a f6 84  40 24                    |..~.(:..@$|\n+00000000  17 03 03 00 1a 8b ce be  7d c7 06 42 d0 9b 65 6c  |........}..B..el|\n+00000010  23 0e 84 ef e0 a3 ec 42  4e 70 14 65 78 ad 52 15  |#......BNp.ex.R.|\n+00000020  03 03 00 16 49 5f f2 e2  e0 8f d3 54 68 2a d6 ab  |....I_.....Th*..|\n+00000030  28 be 50 3d 62 8b 1a b3  5b e5                    |(.P=b...[.|"}, {"sha": "a6c7a4196c7b4d4502938d491aef02997cb3bdec", "filename": "libgo/go/crypto/tls/testdata/Server-SSLv3-RSA-3DES", "status": "modified", "additions": 78, "deletions": 77, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-3DES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-3DES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-3DES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,82 +1,83 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 00 00 30 01 00 00  2c 03 00 52 ac 77 f8 ba  |....0...,..R.w..|\n-00000010  20 7c b1 a6 c2 a5 5e 1b  b6 76 26 88 79 9b 52 56  | |....^..v&.y.RV|\n-00000020  f4 f5 83 1e 23 be 66 6c  47 70 ed 00 00 04 00 0a  |....#.flGp......|\n-00000030  00 ff 02 01 00                                    |.....|\n+00000000  16 03 00 00 2f 01 00 00  2b 03 00 52 cc 57 59 d8  |..../...+..R.WY.|\n+00000010  86 d6 07 ae e0 8d 63 b7  1e cb aa c6 67 32 c8 dd  |......c.....g2..|\n+00000020  68 03 d8 3d 37 18 72 c3  c0 f1 9d 00 00 04 00 0a  |h..=7.r.........|\n+00000030  00 ff 01 00                                       |....|\n >>> Flow 2 (server to client)\n-00000000  16 03 00 00 2a 02 00 00  26 03 00 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 00 00 31 02 00 00  2d 03 00 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 16  |................|\n-00000030  03 00 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 00 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  00 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 00 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 00 00 84 10 00 00  80 b6 25 91 8f 12 fc a2  |..........%.....|\n-00000010  b9 f1 31 3a b5 a8 b6 cf  aa f1 b4 83 3d aa f1 1d  |..1:........=...|\n-00000020  de 33 e4 25 6a 49 25 71  e9 9d 51 97 3b 9d 2a 68  |.3.%jI%q..Q.;.*h|\n-00000030  84 13 3a e7 2c 97 67 36  ee 23 a9 97 6d c2 3a e5  |..:.,.g6.#..m.:.|\n-00000040  33 24 37 ce 76 ed a1 8f  f8 49 e4 b8 77 2a ef 9a  |3$7.v....I..w*..|\n-00000050  38 3c 4f d1 88 7b 28 1b  3a 90 4b 6b 67 8f 04 f0  |8<O..{(.:.Kkg...|\n-00000060  cd d4 b7 ab a2 42 86 e9  45 38 dd 78 4c 9f fb 10  |.....B..E8.xL...|\n-00000070  3c 65 35 8e f5 bc 3a 28  e1 cb 86 44 e8 bc 29 26  |<e5...:(...D..)&|\n-00000080  fc 43 be 15 f2 5b e7 07  82 14 03 00 00 01 01 16  |.C...[..........|\n-00000090  03 00 00 40 3d db ec d5  66 0d 92 2f 23 36 3e e6  |...@=...f../#6>.|\n-000000a0  ac ee 10 8d db 11 ce dc  65 e7 cb ba 14 4d 81 34  |........e....M.4|\n-000000b0  46 eb 6e fd 5e 36 20 32  bd 59 05 b6 39 a1 86 31  |F.n.^6 2.Y..9..1|\n-000000c0  24 ef 53 64 0a 7a 91 95  c1 e3 aa bb 48 08 ac 22  |$.Sd.z......H..\"|\n-000000d0  6e 1c df e1                                       |n...|\n+00000000  16 03 00 00 84 10 00 00  80 75 e0 c9 76 d6 e9 34  |.........u..v..4|\n+00000010  1d e3 31 9e db 3b 03 41  93 e8 db 73 7c e9 3f 6a  |..1..;.A...s|.?j|\n+00000020  d8 2a 7b 25 83 4f 45 de  3f 78 3f b6 53 a7 b4 6c  |.*{%.OE.?x?.S..l|\n+00000030  e3 87 c4 c3 70 55 71 79  55 dc 74 98 84 21 19 13  |....pUqyU.t..!..|\n+00000040  be d5 8e 0a ff 2f 9f 7a  6b d4 6c ef 78 d1 cb 65  |...../.zk.l.x..e|\n+00000050  32 4c 0c c5 29 b9 60 94  c6 79 56 a2 aa 2d d9 ad  |2L..).`..yV..-..|\n+00000060  51 2c 54 1b 28 23 33 54  cd 48 cb 80 13 45 3d 4a  |Q,T.(#3T.H...E=J|\n+00000070  8e 2f f2 da bd 68 3e 1b  eb 73 f9 2d 35 6b b1 40  |./...h>..s.-5k.@|\n+00000080  2e 6d 9d 1c e9 c1 02 80  37 14 03 00 00 01 01 16  |.m......7.......|\n+00000090  03 00 00 40 f7 c3 dd a4  64 3d 81 24 de a2 81 7d  |...@....d=.$...}|\n+000000a0  e4 df 78 46 e7 ba 93 6c  36 43 05 96 fc 75 ef ec  |..xF...l6C...u..|\n+000000b0  a5 46 6d 47 a5 be 74 ad  15 93 d9 87 4f 1d e2 b3  |.FmG..t.....O...|\n+000000c0  03 ff 2e 89 6e 50 f4 d6  a6 e2 b3 54 cb 74 07 f7  |....nP.....T.t..|\n+000000d0  ca 1b 8c 0a                                       |....|\n >>> Flow 4 (server to client)\n-00000000  14 03 00 00 01 01 16 03  00 00 40 c1 e3 a0 4d 7d  |..........@...M}|\n-00000010  02 0b dc 0a 12 8c 2c 5c  c4 d4 b9 76 b8 a3 dc 9a  |......,\\...v....|\n-00000020  7d 3a 08 a6 b6 c9 00 8b  ee b7 e6 8e 72 3c e0 07  |}:..........r<..|\n-00000030  28 07 20 a7 7a 93 1a de  63 af bd 80 2b 66 74 d9  |(. .z...c...+ft.|\n-00000040  d8 ef 7c 56 cd 0f c4 bf  b4 7d cc 17 03 00 00 18  |..|V.....}......|\n-00000050  18 d2 23 27 f9 89 7c 47  8a a8 92 32 26 4e 7d c6  |..#'..|G...2&N}.|\n-00000060  59 44 71 b3 c9 ca 31 63  17 03 00 00 28 24 09 c1  |YDq...1c....($..|\n-00000070  98 2e 4c 4b 80 66 b5 cb  20 01 0f 23 06 44 be 23  |..LK.f.. ..#.D.#|\n-00000080  32 0e bc e4 c1 b5 b4 f0  e3 53 5a 69 fb ae 3b 92  |2........SZi..;.|\n-00000090  29 c9 b6 cf 5d 15 03 00  00 18 ec 3e e9 e6 4e 7e  |)...]......>..N~|\n-000000a0  4d 8f b7 74 93 61 f4 85  28 5f e6 37 2d 9f 01 54  |M..t.a..(_.7-..T|\n-000000b0  bd 24                                             |.$|\n+00000000  14 03 00 00 01 01 16 03  00 00 40 6d 3d d8 d5 cf  |..........@m=...|\n+00000010  05 7d 98 8c 28 28 e2 43  ab ad 4a fa ae bf ec c3  |.}..((.C..J.....|\n+00000020  9c 0a 13 4d 28 a4 45 c4  b9 f2 bc c5 12 a2 68 91  |...M(.E.......h.|\n+00000030  77 fa 72 f8 9e 4e b7 1f  b4 02 02 e3 5d 57 b0 8b  |w.r..N......]W..|\n+00000040  d8 90 0c 9d e6 df 5b 90  92 a1 0d 17 03 00 00 18  |......[.........|\n+00000050  91 48 8a e1 d6 bf 79 1c  d5 0a 70 d5 94 20 25 78  |.H....y...p.. %x|\n+00000060  d8 84 c8 6e 54 f0 99 01  17 03 00 00 28 74 19 90  |...nT.......(t..|\n+00000070  41 44 53 27 bb fb 1f fd  71 34 20 61 a0 eb a4 7c  |ADS'....q4 a...||\n+00000080  fe 36 f8 4b d7 b0 27 d3  b9 36 e1 67 af 2d 0e 23  |.6.K..'..6.g.-.#|\n+00000090  2b 76 a7 2f c3 15 03 00  00 18 db fc e9 fd 87 5f  |+v./..........._|\n+000000a0  92 a8 3d 4b 35 f5 c6 48  2c b4 42 50 c3 81 28 f0  |..=K5..H,.BP..(.|\n+000000b0  2b 41                                             |+A|"}, {"sha": "4885b267da7e2df32d83988681ff8712d1e3f908", "filename": "libgo/go/crypto/tls/testdata/Server-SSLv3-RSA-AES", "status": "modified", "additions": 79, "deletions": 78, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,83 +1,84 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 00 00 30 01 00 00  2c 03 00 52 ac 77 f8 f2  |....0...,..R.w..|\n-00000010  8a e8 25 e4 df f9 db 01  25 d2 14 4b 10 25 b8 f7  |..%.....%..K.%..|\n-00000020  86 b3 83 32 96 e8 af 50  93 78 8d 00 00 04 00 2f  |...2...P.x...../|\n-00000030  00 ff 02 01 00                                    |.....|\n+00000000  16 03 00 00 2f 01 00 00  2b 03 00 52 cc 57 59 30  |..../...+..R.WY0|\n+00000010  e1 ee 8c 60 5b 40 dd 95  bd b4 84 87 2f 01 15 e7  |...`[@....../...|\n+00000020  50 88 4c 82 6b 6d 93 8a  57 d0 27 00 00 04 00 2f  |P.L.km..W.'..../|\n+00000030  00 ff 01 00                                       |....|\n >>> Flow 2 (server to client)\n-00000000  16 03 00 00 2a 02 00 00  26 03 00 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 00 00 31 02 00 00  2d 03 00 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n-00000030  03 00 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 00 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 00  |............./..|\n+00000030  05 ff 01 00 01 00 16 03  00 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 00 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 00 00 84 10 00 00  80 00 0a a1 56 18 df ac  |............V...|\n-00000010  c2 e2 64 41 17 df 7f 05  29 0a 72 65 46 ea c9 ff  |..dA....).reF...|\n-00000020  c6 67 75 62 9a e8 46 05  e3 08 1a 14 ea e7 ff 35  |.gub..F........5|\n-00000030  a8 d1 fa 96 cc e2 d8 d9  7a a3 40 64 37 96 54 29  |........z.@d7.T)|\n-00000040  ad 72 7c 98 13 de c3 a8  fb c6 4a 6e 2a 8b e7 5f  |.r|.......Jn*.._|\n-00000050  ef f3 c5 76 7f fb b3 24  ed 80 57 b6 ce 0e 53 65  |...v...$..W...Se|\n-00000060  2b db da fd a5 6a ee 46  b4 2e 26 8c 53 d5 67 d4  |+....j.F..&.S.g.|\n-00000070  8a 4c 56 58 40 68 7d b5  d7 51 f3 05 1f 68 b5 54  |.LVX@h}..Q...h.T|\n-00000080  f5 91 86 71 cd 3c 6d 0a  d6 14 03 00 00 01 01 16  |...q.<m.........|\n-00000090  03 00 00 40 1c 55 bc ea  55 12 63 36 f2 1a f4 ae  |...@.U..U.c6....|\n-000000a0  34 51 d6 d0 63 e1 13 4c  d9 a0 a9 ac 3b cb 1e e4  |4Q..c..L....;...|\n-000000b0  de 21 f7 bf ae 7f 27 31  cb 01 58 e4 b1 57 00 39  |.!....'1..X..W.9|\n-000000c0  13 e0 e3 be 2b b1 24 cc  41 55 69 c4 f0 a6 cc 38  |....+.$.AUi....8|\n-000000d0  e8 a8 ba c1                                       |....|\n+00000000  16 03 00 00 84 10 00 00  80 74 50 05 6f f5 83 c9  |.........tP.o...|\n+00000010  f5 0c 5a 65 c7 4e c6 f3  87 96 d7 5d 3e 88 27 32  |..Ze.N.....]>.'2|\n+00000020  89 12 ba ec db ef c0 85  70 84 ed b6 83 03 8f 44  |........p......D|\n+00000030  f5 6f fa fa d0 1f 95 30  d1 ae a7 71 cf ee e9 b1  |.o.....0...q....|\n+00000040  80 7b 34 a9 ea 1b 5e e5  71 40 3f e8 7d 30 d1 8b  |.{4...^.q@?.}0..|\n+00000050  11 f1 68 1f c8 25 f0 77  c5 af b3 92 6e d9 81 cc  |..h..%.w....n...|\n+00000060  f8 fd 82 95 cc 1f 4a b1  05 15 7a b3 a1 22 33 09  |......J...z..\"3.|\n+00000070  e7 a5 c2 89 7f 03 e0 91  b6 61 a3 a0 4e 17 0d 7a  |.........a..N..z|\n+00000080  13 01 c4 b6 50 c7 d9 81  15 14 03 00 00 01 01 16  |....P...........|\n+00000090  03 00 00 40 56 da 56 ab  e6 26 98 58 53 1f 36 b5  |...@V.V..&.XS.6.|\n+000000a0  03 14 bd 42 29 ee 9c 7c  e4 48 26 82 68 ae fd fe  |...B)..|.H&.h...|\n+000000b0  5e a4 43 22 75 95 7b c8  77 88 fd d6 d4 9b c9 b5  |^.C\"u.{.w.......|\n+000000c0  ee 3e a6 e8 c5 04 90 63  3f ac be 56 67 da 30 d4  |.>.....c?..Vg.0.|\n+000000d0  64 fb a8 a0                                       |d...|\n >>> Flow 4 (server to client)\n-00000000  14 03 00 00 01 01 16 03  00 00 40 68 cb f5 14 f0  |..........@h....|\n-00000010  42 7a 8c d6 69 09 37 24  92 82 ef 78 bb 4f f9 86  |Bz..i.7$...x.O..|\n-00000020  9f f1 db 3c da 97 f1 02  ab f0 9d c9 8a 71 8e b4  |...<.........q..|\n-00000030  ac 6f 83 1a 44 90 80 a3  3b 97 a2 7f 64 b9 63 b1  |.o..D...;...d.c.|\n-00000040  6b 80 2a a5 5f 2d c3 14  b6 d5 0c 17 03 00 00 20  |k.*._-......... |\n-00000050  b1 d5 04 a3 c4 05 f9 8d  96 84 78 a6 cb 8e 0a 04  |..........x.....|\n-00000060  a9 e3 97 f9 dc f0 7a 7d  f5 44 0e e5 eb 80 83 9a  |......z}.D......|\n-00000070  17 03 00 00 30 8d c7 b7  e4 ac 13 79 cc fb f8 74  |....0......y...t|\n-00000080  00 cb 89 5c b0 fb bd 3c  f6 9f e0 72 02 34 4f d2  |...\\...<...r.4O.|\n-00000090  f5 6e 29 da 14 d2 11 45  85 dd ae 72 8e b6 4e eb  |.n)....E...r..N.|\n-000000a0  56 cb a9 33 fd 15 03 00  00 20 10 46 5e 81 a1 29  |V..3..... .F^..)|\n-000000b0  69 2b 66 52 6c d9 4b 8f  79 c0 7f d9 13 8a 67 99  |i+fRl.K.y.....g.|\n-000000c0  14 b2 eb a8 2a 2e 2d b0  0f 5a                    |....*.-..Z|\n+00000000  14 03 00 00 01 01 16 03  00 00 40 96 af fb 79 96  |..........@...y.|\n+00000010  92 97 2d d0 67 46 1e 08  b5 35 65 ef dc bc 8e 57  |..-.gF...5e....W|\n+00000020  53 b7 36 58 74 d7 88 b1  55 fc eb fa 2e f3 17 b7  |S.6Xt...U.......|\n+00000030  62 58 a0 9d 99 e1 85 d4  33 e0 b4 1f 1d 94 f2 88  |bX......3.......|\n+00000040  d5 9a 34 5b 74 cd d2 ff  87 bd 52 17 03 00 00 20  |..4[t.....R.... |\n+00000050  c6 61 c2 28 ac d2 0c 08  7f f1 c2 62 af 37 7e 78  |.a.(.......b.7~x|\n+00000060  e8 e2 a1 54 f2 3a 80 97  f8 47 64 f2 cd 94 dd 0b  |...T.:...Gd.....|\n+00000070  17 03 00 00 30 b8 40 8f  a3 18 ff 03 84 d4 1c 28  |....0.@........(|\n+00000080  82 ce d8 9a 81 3a dd 23  7c 65 d8 ca f7 f1 46 1b  |.....:.#|e....F.|\n+00000090  70 f0 d7 d9 54 a7 71 e6  4d d4 25 61 5a e4 30 d3  |p...T.q.M.%aZ.0.|\n+000000a0  4a 42 ae 26 a5 15 03 00  00 20 c4 e8 ed 40 57 00  |JB.&..... ...@W.|\n+000000b0  dc a5 0e 82 90 47 92 08  dd 7e 50 6b 30 66 5e 90  |.....G...~Pk0f^.|\n+000000c0  73 7c 81 93 8d 24 b1 06  e7 39                    |s|...$...9|"}, {"sha": "1314b659bf0b01a8fc4de19eacfe6c18b6d29699", "filename": "libgo/go/crypto/tls/testdata/Server-SSLv3-RSA-RC4", "status": "modified", "additions": 74, "deletions": 73, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,78 +1,79 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 00 00 30 01 00 00  2c 03 00 52 ac 77 f8 34  |....0...,..R.w.4|\n-00000010  e1 b1 2e 93 67 6d 6e 49  b5 9d 74 06 e1 1b 73 92  |....gmnI..t...s.|\n-00000020  0f c3 39 5f 4b 17 88 45  84 28 fd 00 00 04 00 05  |..9_K..E.(......|\n-00000030  00 ff 02 01 00                                    |.....|\n+00000000  16 03 00 00 2f 01 00 00  2b 03 00 52 cc 57 59 79  |..../...+..R.WYy|\n+00000010  b9 3b ef df 53 fb 09 f6  01 e5 18 0a fc 3d 65 bb  |.;..S........=e.|\n+00000020  cf 9c 4c 77 b1 e8 6b 4f  5f c7 94 00 00 04 00 05  |..Lw..kO_.......|\n+00000030  00 ff 01 00                                       |....|\n >>> Flow 2 (server to client)\n-00000000  16 03 00 00 2a 02 00 00  26 03 00 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 00 00 31 02 00 00  2d 03 00 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 00 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 00 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  00 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 00 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 00 00 84 10 00 00  80 a0 f8 7e 56 69 88 3a  |...........~Vi.:|\n-00000010  75 b6 bc 7f 3f a5 15 0c  7a 33 7c 3d c9 84 ce 06  |u...?...z3|=....|\n-00000020  52 a4 c3 47 8d 91 c1 0d  27 b6 56 a8 92 b8 b5 2c  |R..G....'.V....,|\n-00000030  6b 19 54 3f 14 e2 d8 b5  39 6a 53 0a ba 3d 7f bc  |k.T?....9jS..=..|\n-00000040  69 e5 fd 93 88 15 84 27  ea e0 ef f3 6b 17 5c 07  |i......'....k.\\.|\n-00000050  76 5f 71 0f 3e 94 d3 7b  2f 63 88 03 5e 79 28 d9  |v_q.>..{/c..^y(.|\n-00000060  e8 c7 fc 65 b1 5a a3 91  1c fe cc a3 f6 13 d3 a2  |...e.Z..........|\n-00000070  7c e0 5f 51 97 a3 a7 32  14 c5 d4 fa 09 5d de 04  ||._Q...2.....]..|\n-00000080  59 7d 78 af 1e e5 d9 99  68 14 03 00 00 01 01 16  |Y}x.....h.......|\n-00000090  03 00 00 3c de c0 8f 60  be 89 4f 61 5e 88 72 50  |...<...`..Oa^.rP|\n-000000a0  b4 c8 e0 ff 9d 91 2e c4  ba 11 3e fb 92 ba dd ab  |..........>.....|\n-000000b0  96 ba 56 91 78 70 f6 fe  73 fb a3 85 47 28 9e 57  |..V.xp..s...G(.W|\n-000000c0  80 18 f0 e7 44 d6 0c a6  6e 5a 03 9e c1 7a f3 a4  |....D...nZ...z..|\n+00000000  16 03 00 00 84 10 00 00  80 4d 66 7a f3 f8 ab 86  |.........Mfz....|\n+00000010  43 4c 5f 7c 52 ca e7 3f  ba 62 b3 82 88 16 7d ca  |CL_|R..?.b....}.|\n+00000020  3a 66 15 c0 36 55 2c ab  bf 30 6b cd 9c d8 b9 48  |:f..6U,..0k....H|\n+00000030  03 c9 d0 98 ab 0b a6 5b  39 c8 fe 82 8e bb f0 16  |.......[9.......|\n+00000040  6f 96 62 81 f2 dc 52 02  c9 de e4 47 73 21 6e 1e  |o.b...R....Gs!n.|\n+00000050  3a 11 89 7a e2 6b 9e 04  64 72 15 ba 2d 10 a2 69  |:..z.k..dr..-..i|\n+00000060  07 e6 ba 17 cf 54 d6 4e  5f 99 e8 59 8b 54 ce 8e  |.....T.N_..Y.T..|\n+00000070  6b 58 ba 83 68 46 4a 5f  43 3e 9b e1 32 a2 19 42  |kX..hFJ_C>..2..B|\n+00000080  46 0f e4 47 1a 3b 16 5f  e1 14 03 00 00 01 01 16  |F..G.;._........|\n+00000090  03 00 00 3c 78 7e ee da  0d 38 0b 1a d6 d4 8e d5  |...<x~...8......|\n+000000a0  6a c5 3a 0f 85 e7 37 a6  3c 8d 1e 4b da 02 94 bf  |j.:...7.<..K....|\n+000000b0  ae 2c 50 3b 4e 1c 0c 3c  4f cc d5 1c da 33 13 43  |.,P;N..<O....3.C|\n+000000c0  37 64 44 ac 26 43 28 0b  d0 c2 04 09 b5 0f 23 1d  |7dD.&C(.......#.|\n >>> Flow 4 (server to client)\n-00000000  14 03 00 00 01 01 16 03  00 00 3c 8e ae 6b 37 56  |..........<..k7V|\n-00000010  42 96 37 76 e9 48 a0 4d  67 5e e9 e0 48 4e 75 4d  |B.7v.H.Mg^..HNuM|\n-00000020  a8 58 01 a5 e5 c2 0c ec  43 ae a1 86 8d 0f be fc  |.X......C.......|\n-00000030  de c3 5c 15 c3 84 fc ed  6a 48 6f dd 22 94 4f 54  |..\\.....jHo.\".OT|\n-00000040  83 ab 76 ab 38 ea a1 17  03 00 00 21 64 56 94 f9  |..v.8......!dV..|\n-00000050  ba 22 a3 af 63 30 16 b0  23 54 e2 22 92 4e 67 5d  |.\"..c0..#T.\".Ng]|\n-00000060  a2 37 92 83 1f 28 78 bb  02 6b fe 4d de 15 03 00  |.7...(x..k.M....|\n-00000070  00 16 c3 1b bb 58 03 ce  44 9b 3c 6e e9 75 ba 66  |.....X..D.<n.u.f|\n-00000080  1c 03 08 19 75 64 9c 98                           |....ud..|\n+00000000  14 03 00 00 01 01 16 03  00 00 3c 23 29 64 62 23  |..........<#)db#|\n+00000010  19 20 f8 2e 15 07 ee c8  f4 ab f0 3e 66 c3 ed 7b  |. .........>f..{|\n+00000020  7c a7 c2 7e c3 25 3c 8f  f3 04 dc 37 e8 fc 0a 1d  ||..~.%<....7....|\n+00000030  fa 7a 09 d4 21 11 e3 24  21 4b 37 d1 85 cc 40 bf  |.z..!..$!K7...@.|\n+00000040  bd bd f8 59 6b cd 73 17  03 00 00 21 47 1d ac 54  |...Yk.s....!G..T|\n+00000050  bd 58 a6 c0 04 e2 0c 6b  66 64 5a 85 09 0e 47 fc  |.X.....kfdZ...G.|\n+00000060  0b 57 ee f1 24 b6 89 57  46 be 6b 0d f2 15 03 00  |.W..$..WF.k.....|\n+00000070  00 16 b4 f7 34 99 19 43  b6 b3 5a 8b c3 d2 67 2f  |....4..C..Z...g/|\n+00000080  3b 19 1c 31 d4 f9 bd 96                           |;..1....|"}, {"sha": "d90f02bd3556017ea03d33566dc6adac1b9d4039", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-ECDHE-ECDSA-AES", "status": "modified", "additions": 88, "deletions": 87, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-ECDHE-ECDSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,92 +1,93 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 77 01 00 00  73 03 01 52 ac 77 f8 0f  |....w...s..R.w..|\n-00000010  da f5 85 29 f9 40 1c fd  b5 88 59 30 92 9d 24 66  |...).@....Y0..$f|\n-00000020  d5 14 a0 f2 f3 31 5f 55  a2 6e 49 00 00 04 c0 0a  |.....1_U.nI.....|\n-00000030  00 ff 02 01 00 00 45 00  0b 00 04 03 00 01 02 00  |......E.........|\n-00000040  0a 00 34 00 32 00 0e 00  0d 00 19 00 0b 00 0c 00  |..4.2...........|\n-00000050  18 00 09 00 0a 00 16 00  17 00 08 00 06 00 07 00  |................|\n-00000060  14 00 15 00 04 00 05 00  12 00 13 00 01 00 02 00  |................|\n-00000070  03 00 0f 00 10 00 11 00  0f 00 01 01              |............|\n+00000000  16 03 01 00 76 01 00 00  72 03 01 52 cc 57 59 19  |....v...r..R.WY.|\n+00000010  3d b7 7c 4b 54 8d ca 3a  b1 4c 4e a9 78 86 d9 74  |=.|KT..:.LN.x..t|\n+00000020  87 2f f3 86 bf ac cc f4  11 75 b7 00 00 04 c0 0a  |./.......u......|\n+00000030  00 ff 01 00 00 45 00 0b  00 04 03 00 01 02 00 0a  |.....E..........|\n+00000040  00 34 00 32 00 0e 00 0d  00 19 00 0b 00 0c 00 18  |.4.2............|\n+00000050  00 09 00 0a 00 16 00 17  00 08 00 06 00 07 00 14  |................|\n+00000060  00 15 00 04 00 05 00 12  00 13 00 01 00 02 00 03  |................|\n+00000070  00 0f 00 10 00 11 00 0f  00 01 01                 |...........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 01 00 31 02 00 00  2d 03 01 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 16  |................|\n-00000030  03 01 02 0e 0b 00 02 0a  00 02 07 00 02 04 30 82  |..............0.|\n-00000040  02 00 30 82 01 62 02 09  00 b8 bf 2d 47 a0 d2 eb  |..0..b.....-G...|\n-00000050  f4 30 09 06 07 2a 86 48  ce 3d 04 01 30 45 31 0b  |.0...*.H.=..0E1.|\n-00000060  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000070  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000080  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000090  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-000000a0  4c 74 64 30 1e 17 0d 31  32 31 31 32 32 31 35 30  |Ltd0...121122150|\n-000000b0  36 33 32 5a 17 0d 32 32  31 31 32 30 31 35 30 36  |632Z..2211201506|\n-000000c0  33 32 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |32Z0E1.0...U....|\n-000000d0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n-000000e0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n-000000f0  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n-00000100  74 73 20 50 74 79 20 4c  74 64 30 81 9b 30 10 06  |ts Pty Ltd0..0..|\n-00000110  07 2a 86 48 ce 3d 02 01  06 05 2b 81 04 00 23 03  |.*.H.=....+...#.|\n-00000120  81 86 00 04 00 c4 a1 ed  be 98 f9 0b 48 73 36 7e  |............Hs6~|\n-00000130  c3 16 56 11 22 f2 3d 53  c3 3b 4d 21 3d cd 6b 75  |..V.\".=S.;M!=.ku|\n-00000140  e6 f6 b0 dc 9a df 26 c1  bc b2 87 f0 72 32 7c b3  |......&.....r2|.|\n-00000150  64 2f 1c 90 bc ea 68 23  10 7e fe e3 25 c0 48 3a  |d/....h#.~..%.H:|\n-00000160  69 e0 28 6d d3 37 00 ef  04 62 dd 0d a0 9c 70 62  |i.(m.7...b....pb|\n-00000170  83 d8 81 d3 64 31 aa 9e  97 31 bd 96 b0 68 c0 9b  |....d1...1...h..|\n-00000180  23 de 76 64 3f 1a 5c 7f  e9 12 0e 58 58 b6 5f 70  |#.vd?.\\....XX._p|\n-00000190  dd 9b d8 ea d5 d7 f5 d5  cc b9 b6 9f 30 66 5b 66  |............0f[f|\n-000001a0  9a 20 e2 27 e5 bf fe 3b  30 09 06 07 2a 86 48 ce  |. .'...;0...*.H.|\n-000001b0  3d 04 01 03 81 8c 00 30  81 88 02 42 01 88 a2 4f  |=......0...B...O|\n-000001c0  eb e2 45 c5 48 7d 1b ac  f5 ed 98 9d ae 47 70 c0  |..E.H}.......Gp.|\n-000001d0  5e 1b b6 2f bd f1 b6 4d  b7 61 40 d3 11 a2 ce ee  |^../...M.a@.....|\n-000001e0  0b 7e 92 7e ff 76 9d c3  3b 7e a5 3f ce fa 10 e2  |.~.~.v..;~.?....|\n-000001f0  59 ec 47 2d 7c ac da 4e  97 0e 15 a0 6f d0 02 42  |Y.G-|..N....o..B|\n-00000200  01 4d fc be 67 13 9c 2d  05 0e bd 3f a3 8c 25 c1  |.M..g..-...?..%.|\n-00000210  33 13 83 0d 94 06 bb d4  37 7a f6 ec 7a c9 86 2e  |3.......7z..z...|\n-00000220  dd d7 11 69 7f 85 7c 56  de fb 31 78 2b e4 c7 78  |...i..|V..1x+..x|\n-00000230  0d ae cb be 9e 4e 36 24  31 7b 6a 0f 39 95 12 07  |.....N6$1{j.9...|\n-00000240  8f 2a 16 03 01 01 1a 0c  00 01 16 03 00 19 85 04  |.*..............|\n-00000250  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n-00000260  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n-00000270  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n-00000280  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n-00000290  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n-000002a0  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n-000002b0  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n-000002c0  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n-000002d0  94 79 90 33 00 8b 30 81  88 02 42 00 c6 85 8e 06  |.y.3..0...B.....|\n-000002e0  b7 04 04 e9 cd 9e 3e cb  66 23 95 b4 42 9c 64 81  |......>.f#..B.d.|\n-000002f0  39 05 3f b5 21 f8 28 af  60 6b 4d 3d ba a1 4b 5e  |9.?.!.(.`kM=..K^|\n-00000300  77 ef e7 59 28 fe 1d c1  27 a2 ff a8 de 33 48 b3  |w..Y(...'....3H.|\n-00000310  c1 85 6a 42 9b f9 7e 7e  31 c2 e5 bd 66 02 42 00  |..jB..~~1...f.B.|\n-00000320  ad 7d 06 35 ab ec 8d ac  d4 ba 1b 49 5e 05 5f f0  |.}.5.......I^._.|\n-00000330  97 93 82 b8 2b 8d 91 98  63 8e b4 14 62 db 1e c9  |....+...c...b...|\n-00000340  2b 30 f8 41 9b a6 e6 bc  de 0e 68 30 21 d7 c5 13  |+0.A......h0!...|\n-00000350  c5 0d 59 07 a1 c7 28 ca  0c e3 9b 45 fa d3 04 fb  |..Y...(....E....|\n-00000360  31 16 03 01 00 04 0e 00  00 00                    |1.........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  01 02 0e 0b 00 02 0a 00  |................|\n+00000040  02 07 00 02 04 30 82 02  00 30 82 01 62 02 09 00  |.....0...0..b...|\n+00000050  b8 bf 2d 47 a0 d2 eb f4  30 09 06 07 2a 86 48 ce  |..-G....0...*.H.|\n+00000060  3d 04 01 30 45 31 0b 30  09 06 03 55 04 06 13 02  |=..0E1.0...U....|\n+00000070  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000080  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000090  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+000000a0  74 73 20 50 74 79 20 4c  74 64 30 1e 17 0d 31 32  |ts Pty Ltd0...12|\n+000000b0  31 31 32 32 31 35 30 36  33 32 5a 17 0d 32 32 31  |1122150632Z..221|\n+000000c0  31 32 30 31 35 30 36 33  32 5a 30 45 31 0b 30 09  |120150632Z0E1.0.|\n+000000d0  06 03 55 04 06 13 02 41  55 31 13 30 11 06 03 55  |..U....AU1.0...U|\n+000000e0  04 08 13 0a 53 6f 6d 65  2d 53 74 61 74 65 31 21  |....Some-State1!|\n+000000f0  30 1f 06 03 55 04 0a 13  18 49 6e 74 65 72 6e 65  |0...U....Interne|\n+00000100  74 20 57 69 64 67 69 74  73 20 50 74 79 20 4c 74  |t Widgits Pty Lt|\n+00000110  64 30 81 9b 30 10 06 07  2a 86 48 ce 3d 02 01 06  |d0..0...*.H.=...|\n+00000120  05 2b 81 04 00 23 03 81  86 00 04 00 c4 a1 ed be  |.+...#..........|\n+00000130  98 f9 0b 48 73 36 7e c3  16 56 11 22 f2 3d 53 c3  |...Hs6~..V.\".=S.|\n+00000140  3b 4d 21 3d cd 6b 75 e6  f6 b0 dc 9a df 26 c1 bc  |;M!=.ku......&..|\n+00000150  b2 87 f0 72 32 7c b3 64  2f 1c 90 bc ea 68 23 10  |...r2|.d/....h#.|\n+00000160  7e fe e3 25 c0 48 3a 69  e0 28 6d d3 37 00 ef 04  |~..%.H:i.(m.7...|\n+00000170  62 dd 0d a0 9c 70 62 83  d8 81 d3 64 31 aa 9e 97  |b....pb....d1...|\n+00000180  31 bd 96 b0 68 c0 9b 23  de 76 64 3f 1a 5c 7f e9  |1...h..#.vd?.\\..|\n+00000190  12 0e 58 58 b6 5f 70 dd  9b d8 ea d5 d7 f5 d5 cc  |..XX._p.........|\n+000001a0  b9 b6 9f 30 66 5b 66 9a  20 e2 27 e5 bf fe 3b 30  |...0f[f. .'...;0|\n+000001b0  09 06 07 2a 86 48 ce 3d  04 01 03 81 8c 00 30 81  |...*.H.=......0.|\n+000001c0  88 02 42 01 88 a2 4f eb  e2 45 c5 48 7d 1b ac f5  |..B...O..E.H}...|\n+000001d0  ed 98 9d ae 47 70 c0 5e  1b b6 2f bd f1 b6 4d b7  |....Gp.^../...M.|\n+000001e0  61 40 d3 11 a2 ce ee 0b  7e 92 7e ff 76 9d c3 3b  |a@......~.~.v..;|\n+000001f0  7e a5 3f ce fa 10 e2 59  ec 47 2d 7c ac da 4e 97  |~.?....Y.G-|..N.|\n+00000200  0e 15 a0 6f d0 02 42 01  4d fc be 67 13 9c 2d 05  |...o..B.M..g..-.|\n+00000210  0e bd 3f a3 8c 25 c1 33  13 83 0d 94 06 bb d4 37  |..?..%.3.......7|\n+00000220  7a f6 ec 7a c9 86 2e dd  d7 11 69 7f 85 7c 56 de  |z..z......i..|V.|\n+00000230  fb 31 78 2b e4 c7 78 0d  ae cb be 9e 4e 36 24 31  |.1x+..x.....N6$1|\n+00000240  7b 6a 0f 39 95 12 07 8f  2a 16 03 01 01 1a 0c 00  |{j.9....*.......|\n+00000250  01 16 03 00 19 85 04 01  39 dc ee 44 17 5e db d7  |........9..D.^..|\n+00000260  27 af b6 56 d9 b4 43 5a  99 cf aa 31 37 0c 6f 3a  |'..V..CZ...17.o:|\n+00000270  a0 f8 53 c4 74 d1 91 0a  46 f5 38 3b 5c 09 d8 97  |..S.t...F.8;\\...|\n+00000280  dc 4b aa 70 26 48 f2 d6  0b 31 c9 f8 d4 98 43 e1  |.K.p&H...1....C.|\n+00000290  6c d5 c7 b2 8e 0b 01 e6  b6 00 28 80 7b fc 96 8f  |l.........(.{...|\n+000002a0  0d a2 4f b0 79 af dc 61  28 63 33 78 f6 31 39 fd  |..O.y..a(c3x.19.|\n+000002b0  8a f4 15 18 11 fe db d5  07 da 2c ed 49 a0 23 bf  |..........,.I.#.|\n+000002c0  d0 3a 38 1d 54 ae 1c 7b  ea 29 ee d0 38 c1 76 a7  |.:8.T..{.)..8.v.|\n+000002d0  7f 2a f4 ce 1e ac cc 94  79 90 33 00 8b 30 81 88  |.*......y.3..0..|\n+000002e0  02 42 00 c6 85 8e 06 b7  04 04 e9 cd 9e 3e cb 66  |.B...........>.f|\n+000002f0  23 95 b4 42 9c 64 81 39  05 3f b5 21 f8 28 af 60  |#..B.d.9.?.!.(.`|\n+00000300  6b 4d 3d ba a1 4b 5e 77  ef e7 59 28 fe 1d c1 27  |kM=..K^w..Y(...'|\n+00000310  a2 ff a8 de 33 48 b3 c1  85 6a 42 9b f9 7e 7e 31  |....3H...jB..~~1|\n+00000320  c2 e5 bd 66 02 42 00 ad  7d 06 35 ab ec 8d ac d4  |...f.B..}.5.....|\n+00000330  ba 1b 49 5e 05 5f f0 97  93 82 b8 2b 8d 91 98 63  |..I^._.....+...c|\n+00000340  8e b4 14 62 db 1e c9 2b  30 f8 41 9b a6 e6 bc de  |...b...+0.A.....|\n+00000350  0e 68 30 21 e4 33 62 b4  3c 00 12 33 3c d2 bb 9e  |.h0!.3b.<..3<...|\n+00000360  a9 db ef 22 41 ed 2b 1a  16 03 01 00 04 0e 00 00  |...\"A.+.........|\n+00000370  00                                                |.|\n >>> Flow 3 (client to server)\n-00000000  16 03 01 00 8a 10 00 00  86 85 04 00 dc a9 a1 fb  |................|\n-00000010  01 f0 3c 35 4f f0 67 6c  7b de 7d dc 6e bb 59 6f  |..<5O.gl{.}.n.Yo|\n-00000020  5b 42 57 b1 55 c6 78 28  69 cb c5 c0 c1 e3 b5 89  |[BW.U.x(i.......|\n-00000030  dd 03 20 6b d2 08 17 50  68 11 64 ad 0c 2f aa 4f  |.. k...Ph.d../.O|\n-00000040  df ea e1 b9 1a 3c 92 ec  e7 78 f4 19 f8 01 77 e0  |.....<...x....w.|\n-00000050  e2 c5 a2 d1 39 e3 e4 6b  78 0c 70 ae d4 2b 9f e4  |....9..kx.p..+..|\n-00000060  79 a2 ab 23 82 9e ec 3c  7c 62 f1 66 b9 9a 06 4f  |y..#...<|b.f...O|\n-00000070  49 a0 39 79 b4 32 7a 38  0e 6c ec e0 aa fc e2 d9  |I.9y.2z8.l......|\n-00000080  fe 2a c0 88 bc 9c 29 8c  78 06 bb bc 5d 0f 01 14  |.*....).x...]...|\n-00000090  03 01 00 01 01 16 03 01  00 30 76 33 00 79 15 52  |.........0v3.y.R|\n-000000a0  12 d8 c0 34 74 b3 50 76  98 e3 29 db 30 9c 82 1f  |...4t.Pv..).0...|\n-000000b0  89 47 b7 ab 26 bc 19 d8  b1 49 7b f8 d2 71 88 b0  |.G..&....I{..q..|\n-000000c0  05 c4 0d 96 54 d2 61 c4  ad b8                    |....T.a...|\n+00000000  16 03 01 00 8a 10 00 00  86 85 04 00 be 44 15 9d  |.............D..|\n+00000010  89 bc 13 e7 55 cf 7a f9  b1 dc 2b 22 f2 7b a6 33  |....U.z...+\".{.3|\n+00000020  b6 46 de 7d c2 08 a6 67  15 7d 3e c2 02 d4 30 dc  |.F.}...g.}>...0.|\n+00000030  35 37 7e ee fb 12 8c 74  c0 bf ea db 72 06 cd 52  |57~....t....r..R|\n+00000040  1a e9 36 2e c5 5d 22 9e  56 e5 8d 9f a5 01 e2 e6  |..6..]\".V.......|\n+00000050  f5 77 64 05 80 c0 e3 54  9a 89 76 f9 73 64 7d 0e  |.wd....T..v.sd}.|\n+00000060  bf d7 b3 57 a2 6c 4a 34  80 53 96 90 61 56 34 ad  |...W.lJ4.S..aV4.|\n+00000070  75 44 54 79 dd 71 16 fe  4f 27 4f d0 0c d0 1e b6  |uDTy.q..O'O.....|\n+00000080  82 c4 b2 e9 a1 87 fd a7  2a 6a 5d 79 b8 f1 4e 14  |........*j]y..N.|\n+00000090  03 01 00 01 01 16 03 01  00 30 db c5 5f 9b 03 77  |.........0.._..w|\n+000000a0  c9 aa 5e 74 fd 0c f7 28  fe 40 8b 0e 2d 85 1e 25  |..^t...(.@..-..%|\n+000000b0  96 23 79 48 2c 3f 5d 9b  57 f0 34 8d 87 81 13 d9  |.#yH,?].W.4.....|\n+000000c0  ed 72 f6 51 bf d7 6e 8b  61 3d                    |.r.Q..n.a=|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 30 7a 2a 1b a8 08  |..........0z*...|\n-00000010  56 fa a3 93 04 45 31 8d  8b 9b 55 36 bb 5b 18 53  |V....E1...U6.[.S|\n-00000020  b5 da d6 9f 51 89 a5 b5  ff 8d 26 24 df 05 1e 09  |....Q.....&$....|\n-00000030  ee 7d 59 d3 e0 8b 9b d7  10 93 ce 17 03 01 00 20  |.}Y............ |\n-00000040  b0 68 94 01 e0 38 37 6d  5c 4e ec 9d 77 f7 e6 a8  |.h...87m\\N..w...|\n-00000050  1a 06 bd ec 9f a2 63 ce  25 10 d2 ad 48 00 30 8f  |......c.%...H.0.|\n-00000060  17 03 01 00 30 6f c4 67  87 d4 b2 1e 32 31 44 23  |....0o.g....21D#|\n-00000070  54 45 95 99 16 7a 83 32  86 75 5d 14 d1 ae 65 3c  |TE...z.2.u]...e<|\n-00000080  71 2c c7 ca 84 4a ea 1d  6a 54 33 6f d6 38 21 4d  |q,...J..jT3o.8!M|\n-00000090  e0 6c 64 a9 58 15 03 01  00 20 8f 9e 96 b1 74 b0  |.ld.X.... ....t.|\n-000000a0  93 1e 6b ba c3 ce 53 f5  0a 11 ae cb 08 ac 1d 2c  |..k...S........,|\n-000000b0  e4 79 9a 6b bf fb db 0b  29 a1                    |.y.k....).|\n+00000000  14 03 01 00 01 01 16 03  01 00 30 95 b6 20 60 88  |..........0.. `.|\n+00000010  5f 23 11 06 83 f5 20 2d  42 77 36 c2 84 1b 70 90  |_#.... -Bw6...p.|\n+00000020  12 af d3 5e fa b0 59 6b  1e 91 0a c3 e0 37 40 94  |...^..Yk.....7@.|\n+00000030  07 c0 2b 84 74 41 fa fd  7c 41 59 17 03 01 00 20  |..+.tA..|AY.... |\n+00000040  de a7 ea 4e f8 88 22 6d  cb 3d d5 ed 60 7c b9 a0  |...N..\"m.=..`|..|\n+00000050  ba c5 19 14 86 3a 98 ea  d3 73 68 1e d4 f8 0e 12  |.....:...sh.....|\n+00000060  17 03 01 00 30 30 50 48  84 2e b0 15 0a 5f 64 3c  |....00PH....._d<|\n+00000070  fc 19 aa 89 7d 6e ba 84  56 56 66 15 6e d4 b9 35  |....}n..VVf.n..5|\n+00000080  20 ac 98 0d 8d 09 e1 80  8d 32 c8 99 d2 70 41 3a  | ........2...pA:|\n+00000090  9b 62 d6 48 b1 15 03 01  00 20 9a 16 01 aa d0 6f  |.b.H..... .....o|\n+000000a0  d4 d3 bb 5d 57 c0 7c d1  a8 d4 67 5d 5e 1d be 7d  |...]W.|...g]^..}|\n+000000b0  d2 78 4a 33 93 ae 53 cc  fb a0                    |.xJ3..S...|"}, {"sha": "c0e6241c07ea0b9a60b07f5dce7a7f216a296483", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-RSA-3DES", "status": "modified", "additions": 74, "deletions": 73, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-3DES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-3DES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-3DES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,78 +1,79 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 37 01 00 00  33 03 01 52 ac 77 f8 13  |....7...3..R.w..|\n-00000010  46 58 6c 7e 9a 3d 5b 13  de 27 23 60 5a a9 8e 0b  |FXl~.=[..'#`Z...|\n-00000020  b9 f0 f8 f9 ad d5 fc f9  c2 50 10 00 00 04 00 0a  |.........P......|\n-00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+00000000  16 03 01 00 36 01 00 00  32 03 01 52 cc 57 59 13  |....6...2..R.WY.|\n+00000010  8b e6 5b a3 1d cb 94 ef  48 e4 59 7e 20 6d 07 67  |..[.....H.Y~ m.g|\n+00000020  1e 28 6d 31 a2 e7 96 b3  7d 32 cc 00 00 04 00 0a  |.(m1....}2......|\n+00000030  00 ff 01 00 00 05 00 0f  00 01 01                 |...........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 01 00 31 02 00 00  2d 03 01 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 16  |................|\n-00000030  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  01 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 01 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 01 00 86 10 00 00  82 00 80 17 30 df 06 a4  |............0...|\n-00000010  8d 51 21 4a 76 9f 8b d2  2d 5d 0b 5e b1 72 63 7f  |.Q!Jv...-].^.rc.|\n-00000020  f6 66 50 76 7a e0 90 de  3a 30 3f c3 66 1e 06 e4  |.fPvz...:0?.f...|\n-00000030  ae fa 2f e5 a9 e9 9e fe  a6 b8 78 44 73 72 31 91  |../.......xDsr1.|\n-00000040  78 76 7e e3 86 58 2f 62  79 5c 04 08 63 24 bd 29  |xv~..X/by\\..c$.)|\n-00000050  42 af fc c7 40 8b b0 26  1b a7 e1 a6 00 be e7 3a  |B...@..&.......:|\n-00000060  60 bd a9 ff de 21 7f 87  55 7f d5 5f 5c 0f dc 5e  |`....!..U.._\\..^|\n-00000070  af b1 be 7f f6 5a fc e1  fc 81 2a 5d 5a 57 17 4c  |.....Z....*]ZW.L|\n-00000080  76 b7 33 9a a2 89 46 66  b8 70 86 14 03 01 00 01  |v.3...Ff.p......|\n-00000090  01 16 03 01 00 28 02 28  ba 24 9f 8c aa d8 e6 ce  |.....(.(.$......|\n-000000a0  48 cf d5 6a 38 8b d4 d3  68 7a ce 6e a6 92 c7 47  |H..j8...hz.n...G|\n-000000b0  85 72 c5 06 2f f1 5b b7  be 89 04 f3 b6 af        |.r../.[.......|\n+00000000  16 03 01 00 86 10 00 00  82 00 80 2e af d2 61 f6  |..............a.|\n+00000010  e2 b8 24 da 28 17 55 99  fd 11 bd 7a ab 98 dd f2  |..$.(.U....z....|\n+00000020  f6 5f e0 11 6b 12 61 6f  86 48 b2 6e db f0 dd d5  |._..k.ao.H.n....|\n+00000030  07 88 e5 95 f4 2d 6b 0c  d0 09 1a 5e 5f 50 1f dc  |.....-k....^_P..|\n+00000040  f2 e7 02 7d 5e a0 70 29  80 ef 87 aa cc 95 3f 2e  |...}^.p)......?.|\n+00000050  24 d1 40 b6 62 53 1d 25  31 87 1e 2f 77 d3 e1 1c  |$.@.bS.%1../w...|\n+00000060  c4 99 89 bc 99 09 e9 ad  1f ce 09 e6 36 1c 3e 97  |............6.>.|\n+00000070  be 62 69 a0 4e 14 20 9c  82 2a 3e fc 7e 9b c4 7a  |.bi.N. ..*>.~..z|\n+00000080  5a f7 ad 1a 03 17 2a f8  7a 5f 44 14 03 01 00 01  |Z.....*.z_D.....|\n+00000090  01 16 03 01 00 28 49 6b  da 73 07 ad 85 9a 0e fb  |.....(Ik.s......|\n+000000a0  dd e0 69 ef c9 22 2d 86  91 51 26 63 d0 24 7d 16  |..i..\"-..Q&c.$}.|\n+000000b0  3c db 9b 00 c9 7e 64 e2  69 02 85 7d f7 47        |<....~d.i..}.G|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 28 d8 7a 71 41 9f  |..........(.zqA.|\n-00000010  63 7a a8 5e ad 34 83 75  6a 15 29 d0 87 43 9b 3f  |cz.^.4.uj.)..C.?|\n-00000020  b6 79 b1 44 92 f6 fd 9c  9b cc ec fc 05 8e 55 e9  |.y.D..........U.|\n-00000030  7b 6a fe 17 03 01 00 18  52 2c 2b 19 63 fa 1f f0  |{j......R,+.c...|\n-00000040  3a c2 1a 7e ba 3a 90 aa  25 46 f9 a4 f6 57 0e 32  |:..~.:..%F...W.2|\n-00000050  17 03 01 00 28 49 ad 51  5e 27 fe e7 e4 1b bc 79  |....(I.Q^'.....y|\n-00000060  34 51 f2 ea 3f cb 16 51  c5 d1 01 9a 65 7b e1 97  |4Q..?..Q....e{..|\n-00000070  d4 28 f1 e6 ab cd 19 86  d3 01 79 9c 53 15 03 01  |.(........y.S...|\n-00000080  00 18 ee 5b 0a 3c c5 0f  6f 85 2b 24 de 93 55 31  |...[.<..o.+$..U1|\n-00000090  d8 17 a5 77 3c d4 10 48  cf af                    |...w<..H..|\n+00000000  14 03 01 00 01 01 16 03  01 00 28 dc 60 83 43 6c  |..........(.`.Cl|\n+00000010  37 79 ab 6e 92 1f 66 d0  b1 12 ce c1 64 9d 2b 68  |7y.n..f.....d.+h|\n+00000020  c7 1a e5 1f 8c 80 08 d2  86 3e a1 2c e3 7e f4 64  |.........>.,.~.d|\n+00000030  e7 96 b2 17 03 01 00 18  8d b5 7c 03 78 cf dc 09  |..........|.x...|\n+00000040  95 06 4b a6 82 f9 30 d2  6b 26 cb 0a 9a 9d 47 9f  |..K...0.k&....G.|\n+00000050  17 03 01 00 28 30 a9 55  dd b9 4d 6a 76 00 39 96  |....(0.U..Mjv.9.|\n+00000060  a3 94 6a df e5 af 1e a2  eb bb e4 ac 95 2c f7 93  |..j..........,..|\n+00000070  ef d1 b5 13 d8 e2 06 1a  ad 5c 00 dd 0c 15 03 01  |.........\\......|\n+00000080  00 18 a5 62 e4 8b 51 1d  28 46 bc 8a c8 50 a3 32  |...b..Q.(F...P.2|\n+00000090  6b 7b f1 b6 19 43 63 1f  7d 38                    |k{...Cc.}8|"}, {"sha": "1670997b0d0cbebdfc4c06467b62b06224ad32f1", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-RSA-AES", "status": "modified", "additions": 77, "deletions": 76, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,81 +1,82 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 37 01 00 00  33 03 01 52 ac 77 f8 da  |....7...3..R.w..|\n-00000010  b3 ba 8c d1 0a a2 3b 35  7c db 1b ff cc e0 c4 f1  |......;5|.......|\n-00000020  aa a3 40 fe 92 15 5b ed  29 3d 07 00 00 04 00 2f  |..@...[.)=...../|\n-00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+00000000  16 03 01 00 36 01 00 00  32 03 01 52 cc 57 59 5d  |....6...2..R.WY]|\n+00000010  0d 77 24 3e b3 32 3d ba  0f b0 aa 1d e3 13 06 f6  |.w$>.2=.........|\n+00000020  0f be 3c 92 ba 93 bd a6  6d 69 53 00 00 04 00 2f  |..<.....miS..../|\n+00000030  00 ff 01 00 00 05 00 0f  00 01 01                 |...........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 01 00 31 02 00 00  2d 03 01 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n-00000030  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 00  |............./..|\n+00000030  05 ff 01 00 01 00 16 03  01 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 01 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 01 00 86 10 00 00  82 00 80 ae 53 cd ef fb  |............S...|\n-00000010  31 07 cb 0b 1b a6 da c6  b6 b6 49 1b fb 5c f9 2f  |1.........I..\\./|\n-00000020  6b fe c9 5c 46 0c 2b 01  a2 4b 2e df 65 6d d9 61  |k..\\F.+..K..em.a|\n-00000030  59 93 72 89 d1 38 72 49  a7 28 e8 7a 70 7d 96 6e  |Y.r..8rI.(.zp}.n|\n-00000040  72 0b 4d d4 f8 59 46 32  49 8b e4 97 35 de 77 19  |r.M..YF2I...5.w.|\n-00000050  e9 30 12 ff d9 3d 32 07  4b 26 f7 d3 1a 32 dc 36  |.0...=2.K&...2.6|\n-00000060  d9 f3 f9 33 fb 34 73 a4  35 15 f1 a9 cc 1a 30 55  |...3.4s.5.....0U|\n-00000070  f3 25 20 8a 9e 25 87 13  58 ec e7 07 87 5d a7 84  |.% ..%..X....]..|\n-00000080  e9 f8 83 c3 9e 08 0a 01  fa c2 8f 14 03 01 00 01  |................|\n-00000090  01 16 03 01 00 30 dd 53  57 25 a0 e3 91 a1 0b fd  |.....0.SW%......|\n-000000a0  16 91 90 59 4a 12 fe 96  a2 4b ca c9 85 a2 91 ef  |...YJ....K......|\n-000000b0  ac 1f aa dc ff c3 9a 6d  79 5a 56 36 8d 48 fd e4  |.......myZV6.H..|\n-000000c0  9a d2 4d 47 8e d0                                 |..MG..|\n+00000000  16 03 01 00 86 10 00 00  82 00 80 20 e6 80 f7 48  |........... ...H|\n+00000010  7e 7d 08 08 54 e1 b4 e3  98 27 5f 90 9d 3b e3 c2  |~}..T....'_..;..|\n+00000020  c8 8b dc 9e ff 75 fa fc  60 e1 9e 67 7c c4 08 27  |.....u..`..g|..'|\n+00000030  cc 6f 15 6c bc 7c 96 de  83 8f 98 6d 4a c7 b7 20  |.o.l.|.....mJ.. |\n+00000040  8c 19 47 5a ff 76 92 0a  df df 66 d2 b6 9d 2d 06  |..GZ.v....f...-.|\n+00000050  fb ac 07 cf 38 08 f1 fd  0d fe 07 d7 69 3e 8a 79  |....8.......i>.y|\n+00000060  dc 2d ab bb f7 18 3c 51  14 6e c6 70 95 a2 59 b1  |.-....<Q.n.p..Y.|\n+00000070  39 04 9f ae f3 5f fb a7  2b d3 5a c0 96 d9 4d 2a  |9...._..+.Z...M*|\n+00000080  2a 6c 6d 39 ee fc ce 76  1a 92 1b 14 03 01 00 01  |*lm9...v........|\n+00000090  01 16 03 01 00 30 10 20  90 7b 0e e6 c2 05 81 c3  |.....0. .{......|\n+000000a0  bc da 84 67 dd 5f 97 e2  74 c4 35 4e bf d2 1b 90  |...g._..t.5N....|\n+000000b0  2f e0 af dd 6b f5 52 db  36 cd 3e e1 e6 bd 99 30  |/...k.R.6.>....0|\n+000000c0  ed c6 bc c2 38 b6                                 |....8.|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 30 12 3f 15 b4 79  |..........0.?..y|\n-00000010  a8 f7 48 a3 f5 fa 0b 8e  58 f2 f0 cb dc 56 54 95  |..H.....X....VT.|\n-00000020  8d fa 83 3a 09 da 97 28  bd 01 7f 0d 88 1d 46 33  |...:...(......F3|\n-00000030  42 58 b3 d5 31 45 c2 4c  cb 0b fc 17 03 01 00 20  |BX..1E.L....... |\n-00000040  9c 90 ff 54 aa 89 5a f7  70 0a 1e 99 47 94 1e b6  |...T..Z.p...G...|\n-00000050  b7 66 14 4a 25 4f b8 b1  cc 60 65 5d 0b 5a c1 c2  |.f.J%O...`e].Z..|\n-00000060  17 03 01 00 30 b6 f0 49  f3 b1 2e 3a b5 d8 9e 35  |....0..I...:...5|\n-00000070  fc 2a 77 6e d3 d8 5a 17  dc d8 8a ac 29 d3 90 28  |.*wn..Z.....)..(|\n-00000080  8b bf 3c 8a b0 59 05 15  e6 ac 53 5b 59 ae 61 30  |..<..Y....S[Y.a0|\n-00000090  f8 1c b4 40 62 15 03 01  00 20 1f bb db f5 0e a8  |...@b.... ......|\n-000000a0  8d ed 68 b1 aa 3d c7 15  3e 7f 00 24 41 c6 4e b8  |..h..=..>..$A.N.|\n-000000b0  91 24 46 5e f1 23 b2 4d  7e 47                    |.$F^.#.M~G|\n+00000000  14 03 01 00 01 01 16 03  01 00 30 5d 0c a2 18 13  |..........0]....|\n+00000010  40 a1 84 ce c5 d8 4e fc  a4 8a 14 b5 94 18 b1 86  |@.....N.........|\n+00000020  da 6a 7d 26 08 d6 a0 f8  78 5b 42 7e f8 83 54 56  |.j}&....x[B~..TV|\n+00000030  36 a4 91 37 67 5a d7 68  37 c4 4f 17 03 01 00 20  |6..7gZ.h7.O.... |\n+00000040  fd aa 5e cf 4b 12 c5 be  a4 a2 65 5d 6e 65 46 5f  |..^.K.....e]neF_|\n+00000050  d2 fe 46 e7 77 2d 9c 1e  0b 39 40 48 c2 2f be 21  |..F.w-...9@H./.!|\n+00000060  17 03 01 00 30 03 af 9e  6b d6 76 ed 9e 1d 8b 8b  |....0...k.v.....|\n+00000070  2e 2a 5d da c4 73 95 ac  0e 6f 69 cb 63 df 50 27  |.*]..s...oi.c.P'|\n+00000080  30 de 2e 55 86 85 ad 3e  33 22 49 72 f2 e2 9f 8f  |0..U...>3\"Ir....|\n+00000090  ba cf 4e 30 34 15 03 01  00 20 4c 4c 97 61 70 ea  |..N04.... LL.ap.|\n+000000a0  ae fc a2 e9 c6 c2 b6 2e  4d 85 f6 ae 2b 56 46 82  |........M...+VF.|\n+000000b0  9d d8 a5 82 17 fa 3e 62  67 7e                    |......>bg~|"}, {"sha": "d653561f9d42339af390451ceba6db40b456d862", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-RSA-RC4", "status": "modified", "additions": 71, "deletions": 70, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,75 +1,76 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 37 01 00 00  33 03 01 52 ac 77 f8 61  |....7...3..R.w.a|\n-00000010  5d ea e5 06 b5 5e 74 c9  65 dd 4b f3 12 10 82 90  |]....^t.e.K.....|\n-00000020  3a 4f 56 50 1a 96 fa a1  6e 41 12 00 00 04 00 05  |:OVP....nA......|\n-00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+00000000  16 03 01 00 36 01 00 00  32 03 01 52 cc 57 59 cf  |....6...2..R.WY.|\n+00000010  00 a1 49 a4 37 69 74 d8  a7 93 ea 8d e7 50 b7 b3  |..I.7it......P..|\n+00000020  8c ec e5 56 fb dc 5f 1a  2e ab 18 00 00 04 00 05  |...V.._.........|\n+00000030  00 ff 01 00 00 05 00 0f  00 01 01                 |...........|\n >>> Flow 2 (server to client)\n-00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 01 00 31 02 00 00  2d 03 01 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  01 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 01 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 01 00 86 10 00 00  82 00 80 9a 45 b5 b4 9d  |............E...|\n-00000010  1c 49 c5 52 aa 0b 43 45  45 10 ab a0 21 04 f1 ca  |.I.R..CEE...!...|\n-00000020  41 d8 b3 70 10 fc c5 7c  a1 d2 d7 15 04 1e 8f ae  |A..p...|........|\n-00000030  39 a4 d2 0d b9 e3 cf d4  40 9a b4 ee 8e 57 c4 41  |9.......@....W.A|\n-00000040  74 d4 94 a4 7b 36 70 e9  af 43 e3 7b 02 52 7d 99  |t...{6p..C.{.R}.|\n-00000050  52 65 03 b7 e3 05 72 36  7c f7 c0 07 49 27 f8 5d  |Re....r6|...I'.]|\n-00000060  cb e0 00 5b 84 b1 bd b7  7f e5 6b a8 ad e3 df 9e  |...[......k.....|\n-00000070  b8 7c 19 aa 6e 22 c7 0b  43 61 6d 0b d3 b9 72 10  |.|..n\"..Cam...r.|\n-00000080  b1 a3 ac e4 12 de 32 b5  e0 89 a0 14 03 01 00 01  |......2.........|\n-00000090  01 16 03 01 00 24 ba 96  18 34 84 cc 60 cd 33 33  |.....$...4..`.33|\n-000000a0  c2 24 88 ec 0d 46 93 d3  d5 42 82 a5 8b f0 a5 c6  |.$...F...B......|\n-000000b0  c5 73 9a d5 85 fb 79 5e  90 09                    |.s....y^..|\n+00000000  16 03 01 00 86 10 00 00  82 00 80 b1 96 7b 6f f5  |.............{o.|\n+00000010  a0 cb 0d 60 9b 64 d3 f5  17 76 47 7b bc a5 0e 96  |...`.d...vG{....|\n+00000020  53 af 68 0c 96 22 f7 28  0c 24 37 9c 51 69 ed b2  |S.h..\".(.$7.Qi..|\n+00000030  47 14 ba 33 c5 79 6b 96  f2 ab 3c 02 5c 37 a4 97  |G..3.yk...<.\\7..|\n+00000040  23 fc 7f d3 95 2d 85 99  1a 10 1b 38 e5 f1 83 55  |#....-.....8...U|\n+00000050  4a ab 60 f8 89 0a 6a c4  eb 45 f5 b0 f4 f8 09 31  |J.`...j..E.....1|\n+00000060  6e f0 25 30 fd 5e 68 61  bc cb 0d 9e 05 73 0a f4  |n.%0.^ha.....s..|\n+00000070  a5 2e d9 d5 4e 08 f6 3b  8d 2d 21 f5 79 b6 97 55  |....N..;.-!.y..U|\n+00000080  b9 99 03 49 ea 96 36 49  21 56 bf 14 03 01 00 01  |...I..6I!V......|\n+00000090  01 16 03 01 00 24 f0 4f  30 06 c3 25 01 93 34 ab  |.....$.O0..%..4.|\n+000000a0  93 8f 59 26 83 6e 8a fd  5a a6 cf af ad b1 a2 83  |..Y&.n..Z.......|\n+000000b0  28 ff c2 66 5f ac e5 a5  a5 03                    |(..f_.....|\n >>> Flow 4 (server to client)\n-00000000  14 03 01 00 01 01 16 03  01 00 24 88 79 b1 70 0e  |..........$.y.p.|\n-00000010  86 2a ec 3e a3 8b 2f 78  70 d0 92 4e ae 8e 17 78  |.*.>../xp..N...x|\n-00000020  cc 91 a9 3d 5c f2 2c 36  45 12 62 e4 8d 15 0a 17  |...=\\.,6E.b.....|\n-00000030  03 01 00 21 f7 3b 4e 00  2b 54 e8 86 6f 84 bd 92  |...!.;N.+T..o...|\n-00000040  ca 87 5f a7 4e 62 ad 84  a8 3d be 8d 61 5f e2 e8  |.._.Nb...=..a_..|\n-00000050  74 83 e3 1e 1f 15 03 01  00 16 fd 57 d8 6c 17 47  |t..........W.l.G|\n-00000060  af 7b 6e c6 5e 68 26 db  bc 5b 47 51 92 ac 11 b5  |.{n.^h&..[GQ....|\n+00000000  14 03 01 00 01 01 16 03  01 00 24 9d b4 ea d8 be  |..........$.....|\n+00000010  b5 9f 00 fd b5 99 04 12  6b 7a 3f b8 52 d7 52 a9  |........kz?.R.R.|\n+00000020  e9 bd 5b 63 ad b0 53 ac  46 80 be 48 6e dd ee 17  |..[c..S.F..Hn...|\n+00000030  03 01 00 21 07 ac c4 fb  21 e4 b8 6b 64 3b b5 27  |...!....!..kd;.'|\n+00000040  29 67 a1 10 2e d2 71 d5  59 5e fc 1d 84 31 15 6e  |)g....q.Y^...1.n|\n+00000050  4d 4b dc a9 3a 15 03 01  00 16 25 22 a5 78 23 5a  |MK..:.....%\".x#Z|\n+00000060  69 6f 99 a1 b3 1c 8d bf  f3 bd 1b c8 1c 57 15 75  |io...........W.u|"}, {"sha": "9237db0786366112e36990c7f70014a8ee50f0e4", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv11-RSA-RC4", "status": "modified", "additions": 71, "deletions": 70, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv11-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv11-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv11-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,75 +1,76 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 37 01 00 00  33 03 02 52 ac 77 f8 ec  |....7...3..R.w..|\n-00000010  6b 58 37 4d 43 de 2f 43  32 93 a4 d2 a1 10 21 6e  |kX7MC./C2.....!n|\n-00000020  55 aa f2 0d 14 70 6d 37  cb 0e e7 00 00 04 00 05  |U....pm7........|\n-00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+00000000  16 03 01 00 36 01 00 00  32 03 02 52 cc 57 59 bd  |....6...2..R.WY.|\n+00000010  cd 9d 1e 17 38 43 a5 e3  e7 30 e4 2b 2a ef f7 5b  |....8C...0.+*..[|\n+00000020  81 91 0c 0b 52 f8 2d 2c  61 d3 13 00 00 04 00 05  |....R.-,a.......|\n+00000030  00 ff 01 00 00 05 00 0f  00 01 01                 |...........|\n >>> Flow 2 (server to client)\n-00000000  16 03 02 00 2a 02 00 00  26 03 02 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 02 00 31 02 00 00  2d 03 02 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 02 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 02 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  02 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 02 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 02 00 86 10 00 00  82 00 80 04 ed f2 fd 60  |...............`|\n-00000010  fe 22 e4 ed 2a d2 f4 e2  7c 50 f7 a5 20 7f aa 06  |.\"..*...|P.. ...|\n-00000020  ab fa 73 e7 fa 52 da 1e  ee a2 27 2c 90 21 35 0e  |..s..R....',.!5.|\n-00000030  b4 c7 ca 3e 94 bc 65 e0  64 cb a0 c3 80 15 6e 40  |...>..e.d.....n@|\n-00000040  53 6c 02 ec e8 b9 51 29  ae b8 bc 1e fa 18 61 50  |Sl....Q)......aP|\n-00000050  79 f4 31 d3 13 0d e1 36  a4 2b c1 7d 3f 88 90 a5  |y.1....6.+.}?...|\n-00000060  3d bd 09 2a e8 f9 56 a5  4b 59 63 90 0a fd 79 26  |=..*..V.KYc...y&|\n-00000070  2b 80 8c 40 68 ee 85 41  c1 b7 9c 6d d5 fc 2f 96  |+..@h..A...m../.|\n-00000080  d3 20 7b 34 7b 8c 94 5f  fc 27 80 14 03 02 00 01  |. {4{.._.'......|\n-00000090  01 16 03 02 00 24 ae b1  15 28 25 1b e0 a1 d1 6e  |.....$...(%....n|\n-000000a0  6f 01 b9 ff 19 09 2e 01  c1 15 b8 04 cc ad e7 63  |o..............c|\n-000000b0  29 0a fd 3e eb ea 56 f3  68 ac                    |)..>..V.h.|\n+00000000  16 03 02 00 86 10 00 00  82 00 80 71 2b 19 25 86  |...........q+.%.|\n+00000010  a0 ff ba d5 1c a6 0c 8b  6b 0a b8 e9 42 93 2f 55  |........k...B./U|\n+00000020  a8 ee 62 fa ed bc 6d e2  9d e3 76 a6 73 d7 99 58  |..b...m...v.s..X|\n+00000030  cc 0b 14 42 96 7c b6 c7  8f 21 16 cf 71 9b 2b b9  |...B.|...!..q.+.|\n+00000040  e0 34 57 76 22 d5 87 8a  ce 1f ea 26 6e 1e e6 ca  |.4Wv\"......&n...|\n+00000050  55 3b 20 cd cf 42 26 b1  51 3e 8c 1d a2 ae c4 63  |U; ..B&.Q>.....c|\n+00000060  f5 ce 27 3c 1e c3 e0 e3  b1 16 c1 8a 62 bd 21 7f  |..'<........b.!.|\n+00000070  38 b5 b7 3a 3c bb 03 37  e1 a5 ff f1 29 e2 21 0a  |8..:<..7....).!.|\n+00000080  8c 20 02 e0 c0 82 97 9d  18 6d f8 14 03 02 00 01  |. .......m......|\n+00000090  01 16 03 02 00 24 bc 19  16 6e fd 0b db 9e d5 1d  |.....$...n......|\n+000000a0  65 b6 57 1c 58 b5 6a ac  f7 4f f0 cd a1 a9 0c c0  |e.W.X.j..O......|\n+000000b0  df e6 eb d5 00 f7 fd 43  bb 27                    |.......C.'|\n >>> Flow 4 (server to client)\n-00000000  14 03 02 00 01 01 16 03  02 00 24 99 ca 80 4d cf  |..........$...M.|\n-00000010  dd de 83 29 63 8c 16 36  5f e0 6b ed c4 ed 6c 03  |...)c..6_.k...l.|\n-00000020  9a 56 8b 78 e1 cc 68 a5  83 ae 25 23 4d 31 0a 17  |.V.x..h...%#M1..|\n-00000030  03 02 00 21 66 36 75 ae  62 17 85 e8 2e b0 3d c6  |...!f6u.b.....=.|\n-00000040  c7 71 44 a5 6b 50 ea c3  8b 46 b8 b6 d0 9d 04 36  |.qD.kP...F.....6|\n-00000050  cd f1 69 cf 8f 15 03 02  00 16 47 61 e8 e2 4c bb  |..i.......Ga..L.|\n-00000060  10 a3 31 38 5a a1 33 61  c2 09 cf a9 95 1c df 72  |..18Z.3a.......r|\n+00000000  14 03 02 00 01 01 16 03  02 00 24 cf 4f e4 27 b0  |..........$.O.'.|\n+00000010  3d 17 34 b1 3c 37 6e c5  2b 3d 4a c3 46 50 44 b4  |=.4.<7n.+=J.FPD.|\n+00000020  de 77 18 10 4f 60 b3 4e  dc 06 fd 25 ec 05 15 17  |.w..O`.N...%....|\n+00000030  03 02 00 21 a5 c9 32 f2  21 fb 94 7e 0d 15 65 fd  |...!..2.!..~..e.|\n+00000040  3e fe e4 c1 a5 e9 88 72  b2 f1 26 39 a6 48 59 97  |>......r..&9.HY.|\n+00000050  65 e3 f0 cb 46 15 03 02  00 16 4b 02 ec cd ca 30  |e...F.....K....0|\n+00000060  42 cf 3d a0 4a fa 8e 79  bb ed b0 59 40 9b 2c 1a  |B.=.J..y...Y@.,.|"}, {"sha": "c170408e48099b5d9eea6faa16eea0d9bfd7d954", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-CipherSuiteCertPreferenceECDSA", "status": "modified", "additions": 37, "deletions": 44, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceECDSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,24 +1,17 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 01 39 01 00 01  35 03 03 52 ac 77 f8 cf  |....9...5..R.w..|\n-00000010  8e 29 75 5c 1e a8 0c ef  df a1 2b c5 c0 ca fe bc  |.)u\\......+.....|\n-00000020  63 b1 df 9a 17 e3 5f a4  e1 1c c4 00 00 a0 c0 30  |c....._........0|\n+00000000  16 03 01 00 ca 01 00 00  c6 03 03 52 cc 5e 7f 49  |...........R.^.I|\n+00000010  8a 7a 88 c0 85 24 6b 3d  95 ff 0f 9e 91 32 c2 a4  |.z...$k=.....2..|\n+00000020  6b 4c 53 e4 b4 4c 40 72  e4 54 27 00 00 32 c0 30  |kLS..L@r.T'..2.0|\n 00000030  c0 2c c0 28 c0 24 c0 14  c0 0a c0 22 c0 21 00 a3  |.,.(.$.....\".!..|\n 00000040  00 9f 00 6b 00 6a 00 39  00 38 00 88 00 87 c0 32  |...k.j.9.8.....2|\n 00000050  c0 2e c0 2a c0 26 c0 0f  c0 05 00 9d 00 3d 00 35  |...*.&.......=.5|\n-00000060  00 84 c0 12 c0 08 c0 1c  c0 1b 00 16 00 13 c0 0d  |................|\n-00000070  c0 03 00 0a c0 2f c0 2b  c0 27 c0 23 c0 13 c0 09  |...../.+.'.#....|\n-00000080  c0 1f c0 1e 00 a2 00 9e  00 67 00 40 00 33 00 32  |.........g.@.3.2|\n-00000090  00 9a 00 99 00 45 00 44  c0 31 c0 2d c0 29 c0 25  |.....E.D.1.-.).%|\n-000000a0  c0 0e c0 04 00 9c 00 3c  00 2f 00 96 00 41 00 07  |.......<./...A..|\n-000000b0  c0 11 c0 07 c0 0c c0 02  00 05 00 04 00 15 00 12  |................|\n-000000c0  00 09 00 14 00 11 00 08  00 06 00 03 00 ff 02 01  |................|\n-000000d0  00 00 6b 00 0b 00 04 03  00 01 02 00 0a 00 34 00  |..k...........4.|\n-000000e0  32 00 0e 00 0d 00 19 00  0b 00 0c 00 18 00 09 00  |2...............|\n-000000f0  0a 00 16 00 17 00 08 00  06 00 07 00 14 00 15 00  |................|\n-00000100  04 00 05 00 12 00 13 00  01 00 02 00 03 00 0f 00  |................|\n-00000110  10 00 11 00 0d 00 22 00  20 06 01 06 02 06 03 05  |......\". .......|\n-00000120  01 05 02 05 03 04 01 04  02 04 03 03 01 03 02 03  |................|\n-00000130  03 02 01 02 02 02 03 01  01 00 0f 00 01 01        |..............|\n+00000060  01 00 00 6b 00 0b 00 04  03 00 01 02 00 0a 00 34  |...k...........4|\n+00000070  00 32 00 0e 00 0d 00 19  00 0b 00 0c 00 18 00 09  |.2..............|\n+00000080  00 0a 00 16 00 17 00 08  00 06 00 07 00 14 00 15  |................|\n+00000090  00 04 00 05 00 12 00 13  00 01 00 02 00 03 00 0f  |................|\n+000000a0  00 10 00 11 00 0d 00 22  00 20 06 01 06 02 06 03  |.......\". ......|\n+000000b0  05 01 05 02 05 03 04 01  04 02 04 03 03 01 03 02  |................|\n+000000c0  03 03 02 01 02 02 02 03  01 01 00 0f 00 01 01     |...............|\n >>> Flow 2 (server to client)\n 00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n@@ -72,35 +65,35 @@\n 00000310  48 b3 c1 85 6a 42 9b f9  7e 7e 31 c2 e5 bd 66 02  |H...jB..~~1...f.|\n 00000320  42 00 ad 7d 06 35 ab ec  8d ac d4 ba 1b 49 5e 05  |B..}.5.......I^.|\n 00000330  5f f0 97 93 82 b8 2b 8d  91 98 63 8e b4 14 62 db  |_.....+...c...b.|\n-00000340  1e c9 2b b9 8d 7b bf 37  1c f3 94 74 60 d6 7d a5  |..+..{.7...t`.}.|\n-00000350  28 0a 74 d1 59 87 c3 42  31 9a 0e f7 85 ce ec eb  |(.t.Y..B1.......|\n-00000360  fa 4a 14 16 03 03 00 04  0e 00 00 00              |.J..........|\n+00000340  1e c9 2b ca fe c9 88 b7  3d 46 d2 5b 55 de bc 9a  |..+.....=F.[U...|\n+00000350  66 c9 cf b7 3d e8 c8 62  24 93 d8 db 12 77 2a 6c  |f...=..b$....w*l|\n+00000360  08 66 48 16 03 03 00 04  0e 00 00 00              |.fH.........|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 8a 10 00 00  86 85 04 01 31 b5 19 44  |............1..D|\n-00000010  f5 d4 29 20 77 2e cc a9  bb ab 5d 3b f6 0e 5c dd  |..) w.....];..\\.|\n-00000020  c2 cd 42 a4 b1 ce 1f 69  0f 09 c7 ef 5a 99 96 03  |..B....i....Z...|\n-00000030  5b 57 86 02 c0 d0 9a a6  5f 59 b0 5b 45 c2 ae ec  |[W......_Y.[E...|\n-00000040  cf 3d 3d 60 b5 5f 7d c9  82 5a 54 0b 74 00 c2 8b  |.==`._}..ZT.t...|\n-00000050  67 2f f9 dd c9 bd 2c 63  12 5b 55 61 09 8b fe 75  |g/....,c.[Ua...u|\n-00000060  23 2c a2 c1 bd 6e 71 23  07 e3 c2 64 5e 13 f1 d1  |#,...nq#...d^...|\n-00000070  cc db 17 dc 8b e6 4f d4  72 46 0a 1e 26 63 cb e0  |......O.rF..&c..|\n-00000080  da f3 f7 f6 d3 64 f5 44  ce 01 7b 21 4e cb 23 14  |.....d.D..{!N.#.|\n-00000090  03 03 00 01 01 16 03 03  00 40 5d 5b 3c 90 6b e1  |.........@][<.k.|\n-000000a0  33 90 6a a3 6a 9e f8 a6  9b 2d ca 8b ea 26 10 92  |3.j.j....-...&..|\n-000000b0  ca 60 7b 4b fb 8a df 5d  1d 4b 23 41 7e 4f f7 c2  |.`{K...].K#A~O..|\n-000000c0  98 64 11 84 56 bc 9c ba  11 1c 19 7f a9 04 43 d3  |.d..V.........C.|\n-000000d0  a0 80 47 11 09 a5 dc 08  fc a0                    |..G.......|\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 fd 02 a1 b1  |................|\n+00000010  56 3c 37 37 da 78 37 d9  07 ee 09 35 4f ff 3e db  |V<77.x7....5O.>.|\n+00000020  da da 23 12 2c 40 12 dd  73 e7 2c c5 2e fb 37 24  |..#.,@..s.,...7$|\n+00000030  2f 97 95 b4 6c 1e 56 6c  4e 49 d5 89 21 8b ca 74  |/...l.VlNI..!..t|\n+00000040  85 1b 24 96 fb 28 cc 64  70 59 fc be 18 00 00 98  |..$..(.dpY......|\n+00000050  9a f6 c9 26 26 6d ce 48  7b 3b 62 ea dd da 73 8b  |...&&m.H{;b...s.|\n+00000060  71 48 18 71 52 2d 22 1d  7c 67 55 1b 6b fa 44 40  |qH.qR-\".|gU.k.D@|\n+00000070  be 87 0f 52 21 4b 86 b4  f0 6d 1b dd e7 0f f8 ef  |...R!K...m......|\n+00000080  1a 09 8b 66 b9 60 38 da  6f 9d 9d 74 58 d9 35 14  |...f.`8.o..tX.5.|\n+00000090  03 03 00 01 01 16 03 03  00 40 5b 98 11 9d d4 83  |.........@[.....|\n+000000a0  13 b6 28 4b 85 61 0b e1  bf 36 3f 43 c0 95 3d 7e  |..(K.a...6?C..=~|\n+000000b0  95 ea 84 14 e6 6d 1a e0  20 50 b4 02 d0 b2 e9 5f  |.....m.. P....._|\n+000000c0  07 82 a8 6a 1e 7c 1e f7  6c b5 be 1b 20 2e 98 4e  |...j.|..l... ..N|\n+000000d0  ab 8d 1e f2 56 88 ed ef  aa 39                    |....V....9|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n-00000010  00 00 00 00 00 00 00 00  00 00 00 2e 6a 39 7e ab  |............j9~.|\n-00000020  da af a7 27 4f 60 4e e4  d6 6e 75 3a 03 20 af 45  |...'O`N..nu:. .E|\n-00000030  a2 ad 58 2e 8b 4b e6 5f  22 41 87 79 21 eb 5c 71  |..X..K._\"A.y!.\\q|\n-00000040  d8 63 ba 42 8b 32 8a 61  e2 6f 43 17 03 03 00 40  |.c.B.2.a.oC....@|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 7e f1 fc 1d 0c  |...........~....|\n+00000020  f5 a2 c6 35 de 78 97 62  72 3f 05 6c a3 a8 0e cb  |...5.x.br?.l....|\n+00000030  10 7e c0 3d 28 c7 d9 4e  71 f4 18 d7 14 42 09 5c  |.~.=(..Nq....B.\\|\n+00000040  22 26 04 1f 04 12 9f 88  3d 4a 4a 17 03 03 00 40  |\"&......=JJ....@|\n 00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000060  2e e2 39 2b 6c 28 9e 3a  59 f6 31 04 8b 95 be bd  |..9+l(.:Y.1.....|\n-00000070  73 e6 12 77 ab 3a 30 30  1b f2 5f 7e 42 f9 53 1c  |s..w.:00.._~B.S.|\n-00000080  bf 3c 58 8f e0 b6 c7 f2  c5 5d 0f d0 37 3f 37 96  |.<X......]..7?7.|\n+00000060  0f 35 50 38 be 3a c7 4e  c4 de 36 63 85 c1 7a 78  |.5P8.:.N..6c..zx|\n+00000070  c6 7f 65 8c d1 44 c5 7e  45 32 60 88 93 bf 10 82  |..e..D.~E2`.....|\n+00000080  4b 1a 46 9a 60 54 c5 ee  2a c1 86 02 a7 b6 d5 ea  |K.F.`T..*.......|\n 00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-000000a0  00 00 00 00 00 a5 fa 6a  4d 33 1a 0d 83 5e 26 39  |.......jM3...^&9|\n-000000b0  a1 07 3c 00 02 7e 2b 1b  c0 95 4a 16 85 83 c4 af  |..<..~+...J.....|\n-000000c0  79 0e 43 c6 c8                                    |y.C..|\n+000000a0  00 00 00 00 00 78 6c 41  05 2f 6f c2 d7 70 54 24  |.....xlA./o..pT$|\n+000000b0  66 01 2c 1e 71 43 05 3a  1b 9e 86 ff b4 c5 65 b2  |f.,.qC.:......e.|\n+000000c0  f0 f8 ef 6b 25                                    |...k%|"}, {"sha": "de2f0aba8b31c64f6eac846722e42b6badaefae4", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-CipherSuiteCertPreferenceRSA", "status": "modified", "additions": 44, "deletions": 51, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceRSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceRSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceRSA?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,28 +1,21 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 01 39 01 00 01  35 03 03 52 ac 77 f8 37  |....9...5..R.w.7|\n-00000010  29 0d 02 21 92 09 b5 f1  91 cd bc a7 7d 84 2b 9b  |)..!........}.+.|\n-00000020  f5 4f bf b6 c6 f3 a0 60  62 df cf 00 00 a0 c0 30  |.O.....`b......0|\n+00000000  16 03 01 00 ca 01 00 00  c6 03 03 52 cc 5e 7f ec  |...........R.^..|\n+00000010  d7 b4 0c ac 92 e8 d1 6e  df c1 e6 ee f5 84 5e 1a  |.......n......^.|\n+00000020  1d 05 bf 2d 3f 71 91 d1  cc b7 f8 00 00 32 c0 30  |...-?q.......2.0|\n 00000030  c0 2c c0 28 c0 24 c0 14  c0 0a c0 22 c0 21 00 a3  |.,.(.$.....\".!..|\n 00000040  00 9f 00 6b 00 6a 00 39  00 38 00 88 00 87 c0 32  |...k.j.9.8.....2|\n 00000050  c0 2e c0 2a c0 26 c0 0f  c0 05 00 9d 00 3d 00 35  |...*.&.......=.5|\n-00000060  00 84 c0 12 c0 08 c0 1c  c0 1b 00 16 00 13 c0 0d  |................|\n-00000070  c0 03 00 0a c0 2f c0 2b  c0 27 c0 23 c0 13 c0 09  |...../.+.'.#....|\n-00000080  c0 1f c0 1e 00 a2 00 9e  00 67 00 40 00 33 00 32  |.........g.@.3.2|\n-00000090  00 9a 00 99 00 45 00 44  c0 31 c0 2d c0 29 c0 25  |.....E.D.1.-.).%|\n-000000a0  c0 0e c0 04 00 9c 00 3c  00 2f 00 96 00 41 00 07  |.......<./...A..|\n-000000b0  c0 11 c0 07 c0 0c c0 02  00 05 00 04 00 15 00 12  |................|\n-000000c0  00 09 00 14 00 11 00 08  00 06 00 03 00 ff 02 01  |................|\n-000000d0  00 00 6b 00 0b 00 04 03  00 01 02 00 0a 00 34 00  |..k...........4.|\n-000000e0  32 00 0e 00 0d 00 19 00  0b 00 0c 00 18 00 09 00  |2...............|\n-000000f0  0a 00 16 00 17 00 08 00  06 00 07 00 14 00 15 00  |................|\n-00000100  04 00 05 00 12 00 13 00  01 00 02 00 03 00 0f 00  |................|\n-00000110  10 00 11 00 0d 00 22 00  20 06 01 06 02 06 03 05  |......\". .......|\n-00000120  01 05 02 05 03 04 01 04  02 04 03 03 01 03 02 03  |................|\n-00000130  03 02 01 02 02 02 03 01  01 00 0f 00 01 01        |..............|\n+00000060  01 00 00 6b 00 0b 00 04  03 00 01 02 00 0a 00 34  |...k...........4|\n+00000070  00 32 00 0e 00 0d 00 19  00 0b 00 0c 00 18 00 09  |.2..............|\n+00000080  00 0a 00 16 00 17 00 08  00 06 00 07 00 14 00 15  |................|\n+00000090  00 04 00 05 00 12 00 13  00 01 00 02 00 03 00 0f  |................|\n+000000a0  00 10 00 11 00 0d 00 22  00 20 06 01 06 02 06 03  |.......\". ......|\n+000000b0  05 01 05 02 05 03 04 01  04 02 04 03 03 01 03 02  |................|\n+000000c0  03 03 02 01 02 02 02 03  01 01 00 0f 00 01 01     |...............|\n >>> Flow 2 (server to client)\n 00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 13 00 16  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 14 00 16  |................|\n 00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n 00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n 00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n@@ -76,42 +69,42 @@\n 00000350  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n 00000360  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n 00000370  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n-00000380  94 79 90 33 04 01 00 80  8f 6a 76 5c 33 9a 1e 46  |.y.3.....jv\\3..F|\n-00000390  e6 c4 91 f6 69 23 05 38  bf c0 fd 9e dc 32 49 a6  |....i#.8.....2I.|\n-000003a0  9a 80 43 a0 47 d4 37 f5  98 06 2f 77 cb 30 8a 95  |..C.G.7.../w.0..|\n-000003b0  04 02 76 f1 2a ee 7c a6  79 df 7f 63 1e 1a 64 75  |..v.*.|.y..c..du|\n-000003c0  f5 a9 1e a9 32 49 65 8b  5b 1b 02 68 7b 6c 39 e8  |....2Ie.[..h{l9.|\n-000003d0  06 99 10 08 77 f7 a2 b3  22 14 14 d6 83 b8 a2 3e  |....w...\"......>|\n-000003e0  e3 a6 4d dd da 99 c4 d7  5c 4c d1 2f 0e 0e 21 2e  |..M.....\\L./..!.|\n-000003f0  e0 9d dc bf 51 f3 da 1d  7a df 8e dc 41 77 b3 18  |....Q...z...Aw..|\n-00000400  38 75 ba b6 a3 75 0f fd  16 03 03 00 04 0e 00 00  |8u...u..........|\n+00000380  94 79 90 33 04 01 00 80  ad 89 a5 bf 16 74 a1 14  |.y.3.........t..|\n+00000390  c4 a1 09 31 95 69 e4 b4  e3 8d df 99 73 cd e6 94  |...1.i......s...|\n+000003a0  eb ca 07 7f f4 36 ca 31  1c 29 f0 f0 d8 40 6b 19  |.....6.1.)...@k.|\n+000003b0  f2 15 be f1 76 22 b3 82  f7 bf 2b 09 0f cd 31 c8  |....v\"....+...1.|\n+000003c0  69 7b 7b 1a ed a1 f7 85  6e 04 5c fa a5 20 c0 ef  |i{{.....n.\\.. ..|\n+000003d0  c6 45 6d 05 25 37 ec f6  94 91 32 f3 c8 d1 f0 13  |.Em.%7....2.....|\n+000003e0  81 1e 26 bb 4c 47 91 79  ad cf 7e 61 85 54 eb 13  |..&.LG.y..~a.T..|\n+000003f0  6b b1 15 36 72 bf d1 ad  07 3e 6d bd 44 1a 30 ac  |k..6r....>m.D.0.|\n+00000400  41 39 ad 75 14 bb 11 dc  16 03 03 00 04 0e 00 00  |A9.u............|\n 00000410  00                                                |.|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 8a 10 00 00  86 85 04 01 e0 a2 f2 1d  |................|\n-00000010  d1 f5 e7 49 09 07 df 43  5f 45 f7 fc 42 9a 81 7d  |...I...C_E..B..}|\n-00000020  39 fa bf 1c 74 df 68 de  93 49 62 3e 72 e7 78 47  |9...t.h..Ib>r.xG|\n-00000030  71 71 fd d0 3d 89 d3 38  aa f0 54 4a ad 1e 87 e9  |qq..=..8..TJ....|\n-00000040  f7 89 90 b0 25 5b a0 81  a0 20 1a 99 5e 01 7f 05  |....%[... ..^...|\n-00000050  95 78 f7 f4 4a ec 85 a9  aa cc 56 bc f7 15 37 ab  |.x..J.....V...7.|\n-00000060  31 41 62 d3 ea 46 ce 94  bf 6c 00 83 a6 f0 ee dc  |1Ab..F...l......|\n-00000070  0b 2a e0 5a fb f0 db 70  cd 9f 48 92 49 c9 9d 20  |.*.Z...p..H.I.. |\n-00000080  7b 8c de af 9d cd 5e 20  94 4e 95 c7 32 50 94 14  |{.....^ .N..2P..|\n-00000090  03 03 00 01 01 16 03 03  00 40 6a 6c 92 ef b5 d0  |.........@jl....|\n-000000a0  8f 4d c7 23 5b 31 65 71  24 50 be 5a e7 95 fc 14  |.M.#[1eq$P.Z....|\n-000000b0  e7 4f 33 c8 ae e0 e7 5f  63 76 3a 7b 51 cd 18 7a  |.O3...._cv:{Q..z|\n-000000c0  15 15 0c aa cc 76 be fc  1e 55 a1 3a df 05 4c 84  |.....v...U.:..L.|\n-000000d0  75 6e c2 2b 3d 93 76 53  41 13                    |un.+=.vSA.|\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 fb 77 96 9a  |.............w..|\n+00000010  82 26 4f 44 b5 2f 32 28  0a dd 51 f5 a4 84 46 a1  |.&OD./2(..Q...F.|\n+00000020  ba 58 e6 9a 96 1b 85 9f  ae 3a 8b db a8 93 81 00  |.X.......:......|\n+00000030  17 be 24 26 17 fd b8 7c  fe 93 7f af 5f 4d c6 47  |..$&...|...._M.G|\n+00000040  8b 72 5b 23 89 03 d5 a6  fb 6f de 59 15 00 bb 36  |.r[#.....o.Y...6|\n+00000050  6d 72 03 47 61 b7 7e d4  46 43 b3 e9 9d 2f 61 6a  |mr.Ga.~.FC.../aj|\n+00000060  08 1b 04 70 ac 95 ad bf  18 e5 09 b6 b3 0d 6a bb  |...p..........j.|\n+00000070  e8 77 09 fa 81 2e 8a e1  61 7e 9f 38 d0 67 f5 11  |.w......a~.8.g..|\n+00000080  f1 62 7f a4 69 4a 42 7a  f8 9e 05 26 66 34 6e 14  |.b..iJBz...&f4n.|\n+00000090  03 03 00 01 01 16 03 03  00 40 2c a1 a8 3a 34 18  |.........@,..:4.|\n+000000a0  ea a1 d4 28 0b 1a ac ab  51 b1 c5 48 f2 56 8d c7  |...(....Q..H.V..|\n+000000b0  83 7b 70 44 40 7d 15 1c  00 19 ed 53 21 fe 9d c1  |.{pD@}.....S!...|\n+000000c0  a2 13 8f a0 0c 51 f5 13  67 1f bf 07 da bc 2d ca  |.....Q..g.....-.|\n+000000d0  7c 0f 53 4b 4a 02 bb 0f  72 c6                    ||.SKJ...r.|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n-00000010  00 00 00 00 00 00 00 00  00 00 00 e8 4b a0 ea c7  |............K...|\n-00000020  e8 9e 4a c7 c5 65 84 eb  3f 4e a5 bd 97 11 b4 0b  |..J..e..?N......|\n-00000030  26 b8 6d 28 16 38 c4 92  d9 45 48 7f 7f e0 74 dd  |&.m(.8...EH...t.|\n-00000040  85 b7 13 5b f8 4e 5b 3f  00 95 0a 17 03 03 00 40  |...[.N[?.......@|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 82 f6 03 51 7f  |..............Q.|\n+00000020  37 19 ec 26 20 db e2 5b  8e 5e 22 29 1a 88 ca f1  |7..& ..[.^\")....|\n+00000030  ad 55 1c 3c 07 1d 05 b6  c4 88 58 84 a0 5d 33 41  |.U.<......X..]3A|\n+00000040  7a 65 bc ba a1 71 a4 71  df 6c 9d 17 03 03 00 40  |ze...q.q.l.....@|\n 00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000060  c6 52 ac 75 32 b3 86 f4  cb cf 18 66 02 40 a3 b1  |.R.u2......f.@..|\n-00000070  cb 1b 25 2e ac 91 a7 91  2b 73 37 72 c1 1f 2c 2f  |..%.....+s7r..,/|\n-00000080  55 59 12 bd f0 df b4 07  fa b1 13 cc 58 f3 66 54  |UY..........X.fT|\n+00000060  8d ca 51 a1 4a b1 23 dc  e3 ef 63 5f b0 e8 7a c6  |..Q.J.#...c_..z.|\n+00000070  97 d7 18 6a 4b 80 3e 5c  7b 79 86 93 60 2c 8b f1  |...jK.>\\{y..`,..|\n+00000080  4e 46 c5 5e 64 0c 98 81  10 6d c5 08 22 f1 02 1d  |NF.^d....m..\"...|\n 00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-000000a0  00 00 00 00 00 14 49 94  f4 07 cb 98 d2 6f a5 b3  |......I......o..|\n-000000b0  37 bb 55 71 04 43 f9 3c  53 1c 00 31 c9 3b 8a 5c  |7.Uq.C.<S..1.;.\\|\n-000000c0  53 75 90 5d 59                                    |Su.]Y|\n+000000a0  00 00 00 00 00 51 19 c4  67 b7 14 6b 5c 49 ac 1d  |.....Q..g..k\\I..|\n+000000b0  b3 97 88 42 29 cb f5 06  54 f4 c6 38 9a 47 41 78  |...B)...T..8.GAx|\n+000000c0  0f 33 21 ac c5                                    |.3!..|"}, {"sha": "547f79834d965eeeb6fd765103b14ee9a509d1d7", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedAndECDSAGiven", "status": "modified", "additions": 84, "deletions": 84, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndECDSAGiven", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndECDSAGiven", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndECDSAGiven?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,61 +1,62 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 7c  |....]...Y..R.w.||\n-00000010  ec cd d0 9c df d2 a6 8b  74 43 ed af 58 14 00 1f  |........tC..X...|\n-00000020  3f 85 68 1d c9 3d 20 0a  61 87 33 00 00 04 00 05  |?.h..= .a.3.....|\n-00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n-00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-00000060  01 01                                             |..|\n+00000000  16 03 01 00 5c 01 00 00  58 03 03 52 cc 57 59 65  |....\\...X..R.WYe|\n+00000010  ae b3 ec a4 7a 05 f7 ec  39 22 7d 8c 91 96 6b e0  |....z...9\"}...k.|\n+00000020  69 81 ff 88 28 17 60 ac  94 19 ff 00 00 04 00 05  |i...(.`.........|\n+00000030  00 ff 01 00 00 2b 00 0d  00 22 00 20 06 01 06 02  |.....+...\". ....|\n+00000040  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000050  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+00000060  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 00 0f 0d  00 00 0b 02 01 40 00 04  |.............@..|\n-00000300  04 01 04 03 00 00 16 03  03 00 04 0e 00 00 00     |...............|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 0f 0d 00  |n8P)l...........|\n+00000300  00 0b 02 01 40 00 04 04  01 04 03 00 00 16 03 03  |....@...........|\n+00000310  00 04 0e 00 00 00                                 |......|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n 00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n@@ -90,33 +91,32 @@\n 000001e0  be e8 91 b3 da 1a f5 5d  a3 23 f5 26 8b 45 70 8d  |.......].#.&.Ep.|\n 000001f0  65 62 9b 7e 01 99 3d 18  f6 10 9a 38 61 9b 2e 57  |eb.~..=....8a..W|\n 00000200  e4 fa cc b1 8a ce e2 23  a0 87 f0 e1 67 51 eb 16  |.......#....gQ..|\n-00000210  03 03 00 86 10 00 00 82  00 80 b9 28 1c 08 59 6e  |...........(..Yn|\n-00000220  04 5f dd 1d a2 c0 04 d9  ef 2e 9c be ae a4 ce cb  |._..............|\n-00000230  a3 5e 25 da ec a7 70 95  bb 78 1f 68 37 cc 76 25  |.^%...p..x.h7.v%|\n-00000240  14 64 b1 23 35 7e af 93  07 56 41 f2 f7 6b 65 03  |.d.#5~...VA..ke.|\n-00000250  98 08 0d dd 0b b3 57 3c  63 09 14 3e 38 7a e8 f6  |......W<c..>8z..|\n-00000260  7a 92 3d f4 cc 91 78 a0  90 19 94 a8 1b 60 e5 aa  |z.=...x......`..|\n-00000270  93 48 44 6c 89 e1 d7 5c  22 20 67 8e 3c 56 ef 7d  |.HDl...\\\" g.<V.}|\n-00000280  1b 43 7d c5 d1 06 19 d4  6d 59 d7 36 59 63 e5 08  |.C}.....mY.6Yc..|\n-00000290  84 53 51 1e cf a0 d7 fc  ec 2a 16 03 03 00 93 0f  |.SQ......*......|\n-000002a0  00 00 8f 04 03 00 8b 30  81 88 02 42 01 99 ca f5  |.......0...B....|\n-000002b0  1d 5f 49 9c 9e 98 df 42  65 dd 3c 6a 50 95 34 94  |._I....Be.<jP.4.|\n-000002c0  ff 90 c1 91 89 19 4f 8c  7a a0 f6 9a 30 6d 69 25  |......O.z...0mi%|\n-000002d0  d6 73 ce 37 6f 59 cc 84  62 de 48 d9 93 41 1c cb  |.s.7oY..b.H..A..|\n-000002e0  93 b0 35 c9 01 f2 2b 23  68 62 97 ab 10 4c 02 42  |..5...+#hb...L.B|\n-000002f0  00 ba e9 5f ba 91 96 5d  7f d3 a3 f0 c0 29 45 0d  |..._...].....)E.|\n-00000300  47 64 93 92 96 6f 3a ea  a8 48 71 68 0e 67 62 b5  |Gd...o:..Hqh.gb.|\n-00000310  61 09 b3 d0 6e 28 8d 43  c8 bc 6e 15 59 91 6c 74  |a...n(.C..n.Y.lt|\n-00000320  6c 63 2c 02 dd 3d 40 ce  d9 2c 7e 4c f5 92 8c aa  |lc,..=@..,~L....|\n-00000330  3a b7 14 03 03 00 01 01  16 03 03 00 24 46 dd 87  |:...........$F..|\n-00000340  c7 50 96 64 41 11 ad b6  68 cc 90 04 85 21 48 aa  |.P.dA...h....!H.|\n-00000350  43 da 06 a6 7e ec 73 71  be 37 9a a5 10 1b c7 5c  |C...~.sq.7.....\\|\n-00000360  a7                                                |.|\n+00000210  03 03 00 86 10 00 00 82  00 80 47 5a 2f b8 78 46  |..........GZ/.xF|\n+00000220  9f 3c fc ab 8b 35 c9 77  da c3 96 78 31 7c 2b 4f  |.<...5.w...x1|+O|\n+00000230  56 be 0f 33 bd 17 bc 1c  86 5a ae b3 0f 8b 18 2f  |V..3.....Z...../|\n+00000240  48 0d e0 0a 20 d3 53 96  88 d2 8a 7d b6 58 13 44  |H... .S....}.X.D|\n+00000250  a5 e8 19 6d 02 df a6 1b  79 c5 54 c2 ef 4d 41 4f  |...m....y.T..MAO|\n+00000260  04 1c eb 37 55 b7 2b f4  7c 6d 37 9c f1 89 a0 2c  |...7U.+.|m7....,|\n+00000270  0f ba 10 09 e4 a1 ee 0a  7e 9a fd 2c 32 63 1c 55  |........~..,2c.U|\n+00000280  85 38 de d0 7b 5f 46 03  1f cc 4d 69 51 97 d8 d7  |.8..{_F...MiQ...|\n+00000290  88 6f ba 43 04 b0 42 09  61 5e 16 03 03 00 92 0f  |.o.C..B.a^......|\n+000002a0  00 00 8e 04 03 00 8a 30  81 87 02 41 14 3d 4c 71  |.......0...A.=Lq|\n+000002b0  c2 32 4a 20 ee b7 69 17  55 e8 99 55 11 76 51 7a  |.2J ..i.U..U.vQz|\n+000002c0  74 55 e7 e8 c3 3b b3 70  db 1c 8e f6 8a d4 99 40  |tU...;.p.......@|\n+000002d0  6e da 04 fd 7a 47 41 d6  ae c0 63 ad fd 91 a8 58  |n...zGA...c....X|\n+000002e0  24 b9 ac 2f 7a 4c bf 5b  24 12 cb 3a f3 02 42 00  |$../zL.[$..:..B.|\n+000002f0  90 f9 48 97 0e d4 33 99  09 9f 1d a8 97 16 60 82  |..H...3.......`.|\n+00000300  85 cc 5a 5d 79 f7 2f 03  2a c0 b8 12 61 ac 9f 88  |..Z]y./.*...a...|\n+00000310  1d 0d 9e 0a ee 28 a8 5a  e2 42 b7 94 e2 e6 0e 13  |.....(.Z.B......|\n+00000320  c8 64 dc 4e d3 6b 10 d6  83 41 9c dc d4 53 c3 08  |.d.N.k...A...S..|\n+00000330  19 14 03 03 00 01 01 16  03 03 00 24 ef bd e3 23  |...........$...#|\n+00000340  10 23 ae 6e b5 12 eb 9c  21 78 db 36 fd bf 7f ee  |.#.n....!x.6....|\n+00000350  6f c8 00 2d b6 35 cc 2f  38 73 ae a4 34 cf 0d df  |o..-.5./8s..4...|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 49 19 94 44 b4  |..........$I..D.|\n-00000010  e7 50 8a 4f 7a 4f 05 28  e3 bc ae fc e5 ed 1c e0  |.P.OzO.(........|\n-00000020  34 0e a7 99 99 08 44 fc  95 5a 91 c9 f4 29 4a 17  |4.....D..Z...)J.|\n-00000030  03 03 00 21 5f 7b 31 75  5f 5c 84 a9 c6 5b cf e5  |...!_{1u_\\...[..|\n-00000040  90 11 a9 64 62 5d cf 54  f2 40 4f fa 1d 52 85 d1  |...db].T.@O..R..|\n-00000050  52 5a 2d 7a 18 15 03 03  00 16 4c 68 39 b1 4b 18  |RZ-z......Lh9.K.|\n-00000060  9e 67 77 5e 89 1d ae f9  17 fd 16 03 76 12 a6 73  |.gw^........v..s|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 a7 50 0f 50 b4  |..........$.P.P.|\n+00000010  1c c3 4d f3 7a 64 df 65  ac 35 22 13 46 cc ec 36  |..M.zd.e.5\".F..6|\n+00000020  e6 d2 f3 67 94 6a 18 85  9f 4a 3c 44 a3 58 b0 17  |...g.j...J<D.X..|\n+00000030  03 03 00 21 51 0a 41 8c  fd 50 e3 54 8b 6a 1f 83  |...!Q.A..P.T.j..|\n+00000040  a5 37 98 e1 5b 1e ec 03  1d c7 0e 28 6d 79 3f 34  |.7..[......(my?4|\n+00000050  de 1c 38 6d 7e 15 03 03  00 16 06 fc b1 7d ad 70  |..8m~........}.p|\n+00000060  1a de d4 b7 b5 e7 a2 6d  1b 9a b0 31 0c cc 7b 70  |.......m...1..{p|"}, {"sha": "04a5b117cd6d380deb02183610a66873eef9b7ec", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedAndGiven", "status": "modified", "additions": 84, "deletions": 83, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,61 +1,62 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 5a  |....]...Y..R.w.Z|\n-00000010  89 61 73 8e 24 3b 48 6d  30 b4 36 ee 17 10 58 76  |.as.$;Hm0.6...Xv|\n-00000020  d0 48 1d 93 eb 78 c9 ad  c0 53 ed 00 00 04 00 05  |.H...x...S......|\n-00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n-00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-00000060  01 01                                             |..|\n+00000000  16 03 01 00 5c 01 00 00  58 03 03 52 cc 57 59 6b  |....\\...X..R.WYk|\n+00000010  11 07 04 39 77 20 c2 b4  3f cb 0a c9 53 fe 5b 3e  |...9w ..?...S.[>|\n+00000020  5f 58 2c 7e 30 69 e1 8e  6c 9d c8 00 00 04 00 05  |_X,~0i..l.......|\n+00000030  00 ff 01 00 00 2b 00 0d  00 22 00 20 06 01 06 02  |.....+...\". ....|\n+00000040  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000050  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+00000060  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 00 0f 0d  00 00 0b 02 01 40 00 04  |.............@..|\n-00000300  04 01 04 03 00 00 16 03  03 00 04 0e 00 00 00     |...............|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 0f 0d 00  |n8P)l...........|\n+00000300  00 0b 02 01 40 00 04 04  01 04 03 00 00 16 03 03  |....@...........|\n+00000310  00 04 0e 00 00 00                                 |......|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n 00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n@@ -89,32 +90,32 @@\n 000001d0  8b ec ab 67 be c8 64 b0  11 50 46 58 17 6b 99 1c  |...g..d..PFX.k..|\n 000001e0  d3 1d fc 06 f1 0e e5 96  a8 0c f9 78 20 b7 44 18  |...........x .D.|\n 000001f0  51 8d 10 7e 4f 94 67 df  a3 4e 70 73 8e 90 91 85  |Q..~O.g..Nps....|\n-00000200  16 03 03 00 86 10 00 00  82 00 80 05 f0 5b e7 ee  |.............[..|\n-00000210  1a a0 9d 54 85 3c c9 1d  e0 fd d7 21 ed d2 34 0a  |...T.<.....!..4.|\n-00000220  91 da db 03 b4 c8 b5 50  d9 5f 8e 31 9e 56 ec 62  |.......P._.1.V.b|\n-00000230  ff df 79 37 6e 22 c1 11  00 a2 e3 ed 63 29 9e 26  |..y7n\"......c).&|\n-00000240  4c d1 7a 6a d4 b6 06 cc  06 da 72 a8 4b 08 0b fc  |L.zj......r.K...|\n-00000250  f4 23 e8 43 9b 9f 55 cc  dc 4a e3 45 be b5 be d7  |.#.C..U..J.E....|\n-00000260  e5 34 e5 86 ca 45 b4 15  9d 8c bc 0c 66 f2 e5 24  |.4...E......f..$|\n-00000270  2c af d8 1a c0 9e dc f7  cc 30 43 d1 1e 8e 4c c0  |,........0C...L.|\n-00000280  e8 7b 8e a5 21 37 35 ae  b9 c4 aa 16 03 03 00 88  |.{..!75.........|\n-00000290  0f 00 00 84 04 01 00 80  2f db 55 56 9a 38 36 98  |......../.UV.86.|\n-000002a0  b3 46 cf 9f 91 37 92 98  97 d6 7e 7b 5e b8 cc ef  |.F...7....~{^...|\n-000002b0  b9 f8 69 91 e4 f5 4a bf  2c 6d f5 b2 d0 61 b3 79  |..i...J.,m...a.y|\n-000002c0  f0 6a 22 3c 32 bf 72 c3  7d 4c 30 68 dd d6 cd 53  |.j\"<2.r.}L0h...S|\n-000002d0  c1 88 84 11 90 7f 75 e2  5b ca 80 a9 c9 8e 6e ef  |......u.[.....n.|\n-000002e0  87 8b 80 06 c5 ce 95 a5  b5 20 d6 75 04 66 87 29  |......... .u.f.)|\n-000002f0  06 1d 59 0b b5 d2 b1 07  5e 09 c3 1d 9e 47 0e 07  |..Y.....^....G..|\n-00000300  d9 83 dd 56 e5 93 b6 1e  e7 61 5c f8 2b 8a e7 83  |...V.....a\\.+...|\n-00000310  52 15 2f bd 9c 91 3b a3  14 03 03 00 01 01 16 03  |R./...;.........|\n-00000320  03 00 24 64 d6 db a5 d4  0c 9f 03 be c9 f1 20 5c  |..$d.......... \\|\n-00000330  5f 5a 41 1e 5e c9 c6 04  e7 f5 7f 68 db 38 a6 8c  |_ZA.^......h.8..|\n-00000340  cb 5e b9 99 5e b3 69                              |.^..^.i|\n+00000200  16 03 03 00 86 10 00 00  82 00 80 44 89 7d aa 26  |...........D.}.&|\n+00000210  30 ce 6b db 25 70 b0 1e  16 fa 5b 3a dd 4a 4b bd  |0.k.%p....[:.JK.|\n+00000220  ec ee 50 9d 21 ba 52 b5  51 4f a8 65 d8 2e 41 e2  |..P.!.R.QO.e..A.|\n+00000230  e1 dc f3 1a df 58 4f 87  7a d3 e1 e1 1c 13 b2 0b  |.....XO.z.......|\n+00000240  b7 43 b7 92 f2 df 19 bb  79 71 e0 71 44 ab 19 2f  |.C......yq.qD../|\n+00000250  37 11 ac 62 50 b6 f1 53  fe aa b4 bc 29 8e 0b 4c  |7..bP..S....)..L|\n+00000260  0b 12 8d d5 84 a9 fa a9  ea 16 aa c3 0d da 32 c8  |..............2.|\n+00000270  e0 4c 9f 99 f8 69 cd a8  c3 b1 76 42 67 f3 ff 15  |.L...i....vBg...|\n+00000280  52 95 43 66 da 49 43 25  9d e5 eb 16 03 03 00 88  |R.Cf.IC%........|\n+00000290  0f 00 00 84 04 01 00 80  01 d5 0e 1c 75 97 89 52  |............u..R|\n+000002a0  1a f0 cc ef 93 6e 71 b2  b1 38 8c 50 11 f7 a3 02  |.....nq..8.P....|\n+000002b0  71 c4 d5 6f 8d 01 83 06  2e ea 5a 10 8a 0d d0 fc  |q..o......Z.....|\n+000002c0  b6 a2 63 af 4f 99 b5 eb  ab fd 01 c2 fb 26 fc fd  |..c.O........&..|\n+000002d0  ad 2c b3 63 b3 87 a6 f5  14 ea 7d e7 fe a8 e7 7e  |.,.c......}....~|\n+000002e0  20 ab b9 f6 c3 58 bd c0  f3 96 eb 83 dc 42 6c 0d  | ....X.......Bl.|\n+000002f0  5e e8 09 55 c7 b8 24 05  dd e1 7c af 9f 2c 22 6c  |^..U..$...|..,\"l|\n+00000300  fa b8 94 13 3b f1 09 e1  38 59 fc a1 8c cb aa ca  |....;...8Y......|\n+00000310  f8 e0 2a 9c 36 f9 c3 2b  14 03 03 00 01 01 16 03  |..*.6..+........|\n+00000320  03 00 24 d0 12 7c cc d2  3e 37 1f f4 7d b4 c0 fc  |..$..|..>7..}...|\n+00000330  19 f6 c8 ea 62 12 e0 0d  af 62 d4 69 f7 96 5a c0  |....b....b.i..Z.|\n+00000340  97 d3 bb b0 a3 f7 3f                              |......?|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 5a 42 72 e0 fc  |..........$ZBr..|\n-00000010  c7 ca 9c 74 da 0a 85 df  d5 32 f4 24 aa e1 45 39  |...t.....2.$..E9|\n-00000020  5c 86 29 99 85 c8 1b cb  bc ba 1d 27 68 1a a7 17  |\\.)........'h...|\n-00000030  03 03 00 21 95 56 9f 44  51 a4 51 67 3f ee 8b e4  |...!.V.DQ.Qg?...|\n-00000040  19 03 e4 5f 15 aa b7 ce  7f db 15 a0 15 65 e7 cc  |..._.........e..|\n-00000050  c5 25 72 ae 0c 15 03 03  00 16 e5 97 49 3d f1 5e  |.%r.........I=.^|\n-00000060  53 4e d9 40 cf 81 de 3b  5f 5e b2 2a 78 51 ab 66  |SN.@...;_^.*xQ.f|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 cd 20 85 1e 74  |..........$. ..t|\n+00000010  18 b2 71 48 d5 10 61 c6  b0 18 26 83 c2 7f f1 b1  |..qH..a...&.....|\n+00000020  2f b5 35 d0 47 a8 99 9a  9a a5 62 64 fb f9 29 17  |/.5.G.....bd..).|\n+00000030  03 03 00 21 22 7b ed 61  e3 9b 6d 98 b9 23 98 e3  |...!\"{.a..m..#..|\n+00000040  55 11 b8 0f 7e 2b e1 c1  d4 f1 83 79 c3 f8 03 f0  |U...~+.....y....|\n+00000050  02 5c 61 24 d7 15 03 03  00 16 14 2b a3 5a 56 f0  |.\\a$.......+.ZV.|\n+00000060  92 da d0 e6 32 91 d8 30  7a b4 d0 a2 93 f5 01 ea  |....2..0z.......|"}, {"sha": "562fe1aaa0a463452e744e8cb52e7ab4f143cdfc", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedNotGiven", "status": "modified", "additions": 75, "deletions": 74, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedNotGiven", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedNotGiven", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedNotGiven?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,80 +1,81 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 c7  |....]...Y..R.w..|\n-00000010  e6 0f 80 12 13 8e 2d a8  61 1f 31 ba 94 f9 0e f8  |......-.a.1.....|\n-00000020  43 a5 2b c8 95 c5 f7 47  b4 f9 b5 00 00 04 00 05  |C.+....G........|\n-00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n-00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-00000060  01 01                                             |..|\n+00000000  16 03 01 00 5c 01 00 00  58 03 03 52 cc 57 59 1b  |....\\...X..R.WY.|\n+00000010  08 fe f7 8a bf 07 84 2b  60 a6 13 2d 15 13 f8 b6  |.......+`..-....|\n+00000020  d4 b6 3b f2 7a 98 ff 32  a0 68 7c 00 00 04 00 05  |..;.z..2.h|.....|\n+00000030  00 ff 01 00 00 2b 00 0d  00 22 00 20 06 01 06 02  |.....+...\". ....|\n+00000040  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000050  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+00000060  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 00 0f 0d  00 00 0b 02 01 40 00 04  |.............@..|\n-00000300  04 01 04 03 00 00 16 03  03 00 04 0e 00 00 00     |...............|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 0f 0d 00  |n8P)l...........|\n+00000300  00 0b 02 01 40 00 04 04  01 04 03 00 00 16 03 03  |....@...........|\n+00000310  00 04 0e 00 00 00                                 |......|\n >>> Flow 3 (client to server)\n 00000000  16 03 03 00 07 0b 00 00  03 00 00 00 16 03 03 00  |................|\n-00000010  86 10 00 00 82 00 80 8c  f3 9d ed 36 34 11 9b 89  |...........64...|\n-00000020  22 b2 0e 20 0c be c6 91  f5 2e 7f 35 e9 14 b1 b9  |\".. .......5....|\n-00000030  c6 02 cf da d2 3a 81 a4  18 1b 32 0c 21 fe cd a5  |.....:....2.!...|\n-00000040  c2 74 0c db 29 9c 73 e4  de 7c c4 8d f6 2d b0 0e  |.t..).s..|...-..|\n-00000050  f5 b4 48 b5 24 94 be 3f  c2 da 2a fe 82 b9 66 1f  |..H.$..?..*...f.|\n-00000060  45 12 e9 50 a9 e4 09 2d  6e 67 e2 63 21 a8 e7 23  |E..P...-ng.c!..#|\n-00000070  2e ec e3 e3 39 dc f9 54  c4 5a 5c 3e e8 a1 fc 6a  |....9..T.Z\\>...j|\n-00000080  98 38 23 85 a2 a4 f4 26  4c 8e 00 fa 99 f9 53 3f  |.8#....&L.....S?|\n-00000090  ce f7 34 4e a3 1b 2e 14  03 03 00 01 01 16 03 03  |..4N............|\n-000000a0  00 24 e2 c8 25 81 12 b8  b1 28 f9 a3 8c 94 9e 7c  |.$..%....(.....||\n-000000b0  63 78 f0 04 74 53 31 50  40 29 2f 6c 0a 09 05 6a  |cx..tS1P@)/l...j|\n-000000c0  32 5d 92 1a 0c 2e                                 |2]....|\n+00000010  86 10 00 00 82 00 80 6b  51 48 d3 18 7d 30 e0 0c  |.......kQH..}0..|\n+00000020  20 8d f3 e4 39 47 30 0e  a5 85 79 f9 8b 11 50 9e  | ...9G0...y...P.|\n+00000030  81 71 5c 26 c6 bb cb aa  d5 00 d1 89 79 b1 77 2d  |.q\\&........y.w-|\n+00000040  eb 9b 86 7c 52 c6 f7 b7  10 b0 b6 94 22 51 b8 12  |...|R.......\"Q..|\n+00000050  3c 09 35 8e 1b cc f4 3b  b7 b8 78 ab 89 59 41 49  |<.5....;..x..YAI|\n+00000060  21 31 eb f0 f8 94 63 3d  e6 96 8f b6 63 95 05 dd  |!1....c=....c...|\n+00000070  46 b3 00 8a d6 83 75 99  1b 5a 48 0a 23 b5 10 c1  |F.....u..ZH.#...|\n+00000080  95 b5 bc 15 72 b5 f5 a0  62 e2 1d c0 ff d2 87 a5  |....r...b.......|\n+00000090  97 5c 33 49 a7 26 35 14  03 03 00 01 01 16 03 03  |.\\3I.&5.........|\n+000000a0  00 24 61 38 1f 9d fb d9  65 2e 02 07 fb be f9 85  |.$a8....e.......|\n+000000b0  8d 15 34 c0 d1 0e 4e 10  3c 25 60 2f ac 04 21 66  |..4...N.<%`/..!f|\n+000000c0  04 9d 9a 60 31 72                                 |...`1r|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 fb 18 af ff 1b  |..........$.....|\n-00000010  72 08 c5 e1 1f c6 8b 43  18 0b 54 65 bd 6e d8 f4  |r......C..Te.n..|\n-00000020  7e 3e e4 b0 bb 73 39 bf  24 ab d4 cd 4a 88 b2 17  |~>...s9.$...J...|\n-00000030  03 03 00 21 ee 69 69 7c  70 70 d7 63 b7 cf 3c 50  |...!.ii|pp.c..<P|\n-00000040  30 96 0a f8 1b ed c8 3a  c7 a4 8e d5 35 5d e1 8d  |0......:....5]..|\n-00000050  bd 26 6e 1e 33 15 03 03  00 16 bc 99 f6 0b 44 7e  |.&n.3.........D~|\n-00000060  6a 5b 65 51 8d 2d b9 e0  bf 47 fa 46 f7 0a f0 9f  |j[eQ.-...G.F....|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 fe 0e 3e 84 af  |..........$..>..|\n+00000010  e5 6b 10 ed 41 9c 2b e0  ba e0 2b 53 61 36 1b 40  |.k..A.+...+Sa6.@|\n+00000020  35 de 3a c7 c3 5c df 74  67 f7 05 74 84 f5 e1 17  |5.:..\\.tg..t....|\n+00000030  03 03 00 21 d3 8d 81 85  b7 1f 30 bd 89 33 f9 81  |...!......0..3..|\n+00000040  89 f7 af d1 be b0 c1 46  e3 df 32 f6 dc 2f 4d 82  |.......F..2../M.|\n+00000050  0a 84 9f 5b 03 15 03 03  00 16 13 af 37 91 82 67  |...[........7..g|\n+00000060  b0 7c 5e 0e ec 8e cc 31  a0 ea a5 72 a4 2b 0b 73  |.|^....1...r.+.s|"}, {"sha": "fa6cb080c90544c8a8035ff9275851926b3b40bc", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ECDHE-ECDSA-AES", "status": "modified", "additions": 90, "deletions": 89, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ECDHE-ECDSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,97 +1,98 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 9d 01 00 00  99 03 03 52 ac 77 f8 5b  |...........R.w.[|\n-00000010  57 5f 06 3b 30 36 42 66  99 e9 c9 8c 57 1c cf 14  |W_.;06Bf....W...|\n-00000020  c9 a8 20 ee da a6 55 d4  d9 ff 1c 00 00 04 c0 0a  |.. ...U.........|\n-00000030  00 ff 02 01 00 00 6b 00  0b 00 04 03 00 01 02 00  |......k.........|\n-00000040  0a 00 34 00 32 00 0e 00  0d 00 19 00 0b 00 0c 00  |..4.2...........|\n-00000050  18 00 09 00 0a 00 16 00  17 00 08 00 06 00 07 00  |................|\n-00000060  14 00 15 00 04 00 05 00  12 00 13 00 01 00 02 00  |................|\n-00000070  03 00 0f 00 10 00 11 00  0d 00 22 00 20 06 01 06  |..........\". ...|\n-00000080  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000090  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-000000a0  01 01                                             |..|\n+00000000  16 03 01 00 9c 01 00 00  98 03 03 52 cc 57 59 54  |...........R.WYT|\n+00000010  0b ba f3 ec 2c 33 3e 3e  ac b8 c1 d5 d5 ff e3 d3  |....,3>>........|\n+00000020  63 d0 29 16 aa 5d 96 37  89 90 c4 00 00 04 c0 0a  |c.)..].7........|\n+00000030  00 ff 01 00 00 6b 00 0b  00 04 03 00 01 02 00 0a  |.....k..........|\n+00000040  00 34 00 32 00 0e 00 0d  00 19 00 0b 00 0c 00 18  |.4.2............|\n+00000050  00 09 00 0a 00 16 00 17  00 08 00 06 00 07 00 14  |................|\n+00000060  00 15 00 04 00 05 00 12  00 13 00 01 00 02 00 03  |................|\n+00000070  00 0f 00 10 00 11 00 0d  00 22 00 20 06 01 06 02  |.........\". ....|\n+00000080  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000090  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+000000a0  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 16  |................|\n-00000030  03 03 02 0e 0b 00 02 0a  00 02 07 00 02 04 30 82  |..............0.|\n-00000040  02 00 30 82 01 62 02 09  00 b8 bf 2d 47 a0 d2 eb  |..0..b.....-G...|\n-00000050  f4 30 09 06 07 2a 86 48  ce 3d 04 01 30 45 31 0b  |.0...*.H.=..0E1.|\n-00000060  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-00000070  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-00000080  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000090  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-000000a0  4c 74 64 30 1e 17 0d 31  32 31 31 32 32 31 35 30  |Ltd0...121122150|\n-000000b0  36 33 32 5a 17 0d 32 32  31 31 32 30 31 35 30 36  |632Z..2211201506|\n-000000c0  33 32 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |32Z0E1.0...U....|\n-000000d0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n-000000e0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n-000000f0  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n-00000100  74 73 20 50 74 79 20 4c  74 64 30 81 9b 30 10 06  |ts Pty Ltd0..0..|\n-00000110  07 2a 86 48 ce 3d 02 01  06 05 2b 81 04 00 23 03  |.*.H.=....+...#.|\n-00000120  81 86 00 04 00 c4 a1 ed  be 98 f9 0b 48 73 36 7e  |............Hs6~|\n-00000130  c3 16 56 11 22 f2 3d 53  c3 3b 4d 21 3d cd 6b 75  |..V.\".=S.;M!=.ku|\n-00000140  e6 f6 b0 dc 9a df 26 c1  bc b2 87 f0 72 32 7c b3  |......&.....r2|.|\n-00000150  64 2f 1c 90 bc ea 68 23  10 7e fe e3 25 c0 48 3a  |d/....h#.~..%.H:|\n-00000160  69 e0 28 6d d3 37 00 ef  04 62 dd 0d a0 9c 70 62  |i.(m.7...b....pb|\n-00000170  83 d8 81 d3 64 31 aa 9e  97 31 bd 96 b0 68 c0 9b  |....d1...1...h..|\n-00000180  23 de 76 64 3f 1a 5c 7f  e9 12 0e 58 58 b6 5f 70  |#.vd?.\\....XX._p|\n-00000190  dd 9b d8 ea d5 d7 f5 d5  cc b9 b6 9f 30 66 5b 66  |............0f[f|\n-000001a0  9a 20 e2 27 e5 bf fe 3b  30 09 06 07 2a 86 48 ce  |. .'...;0...*.H.|\n-000001b0  3d 04 01 03 81 8c 00 30  81 88 02 42 01 88 a2 4f  |=......0...B...O|\n-000001c0  eb e2 45 c5 48 7d 1b ac  f5 ed 98 9d ae 47 70 c0  |..E.H}.......Gp.|\n-000001d0  5e 1b b6 2f bd f1 b6 4d  b7 61 40 d3 11 a2 ce ee  |^../...M.a@.....|\n-000001e0  0b 7e 92 7e ff 76 9d c3  3b 7e a5 3f ce fa 10 e2  |.~.~.v..;~.?....|\n-000001f0  59 ec 47 2d 7c ac da 4e  97 0e 15 a0 6f d0 02 42  |Y.G-|..N....o..B|\n-00000200  01 4d fc be 67 13 9c 2d  05 0e bd 3f a3 8c 25 c1  |.M..g..-...?..%.|\n-00000210  33 13 83 0d 94 06 bb d4  37 7a f6 ec 7a c9 86 2e  |3.......7z..z...|\n-00000220  dd d7 11 69 7f 85 7c 56  de fb 31 78 2b e4 c7 78  |...i..|V..1x+..x|\n-00000230  0d ae cb be 9e 4e 36 24  31 7b 6a 0f 39 95 12 07  |.....N6$1{j.9...|\n-00000240  8f 2a 16 03 03 01 1c 0c  00 01 18 03 00 19 85 04  |.*..............|\n-00000250  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n-00000260  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n-00000270  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n-00000280  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n-00000290  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n-000002a0  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n-000002b0  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n-000002c0  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n-000002d0  94 79 90 33 04 03 00 8b  30 81 88 02 42 00 c6 85  |.y.3....0...B...|\n-000002e0  8e 06 b7 04 04 e9 cd 9e  3e cb 66 23 95 b4 42 9c  |........>.f#..B.|\n-000002f0  64 81 39 05 3f b5 21 f8  28 af 60 6b 4d 3d ba a1  |d.9.?.!.(.`kM=..|\n-00000300  4b 5e 77 ef e7 59 28 fe  1d c1 27 a2 ff a8 de 33  |K^w..Y(...'....3|\n-00000310  48 b3 c1 85 6a 42 9b f9  7e 7e 31 c2 e5 bd 66 02  |H...jB..~~1...f.|\n-00000320  42 00 ad 7d 06 35 ab ec  8d ac d4 ba 1b 49 5e 05  |B..}.5.......I^.|\n-00000330  5f f0 97 93 82 b8 2b 8d  91 98 63 8e b4 14 62 db  |_.....+...c...b.|\n-00000340  1e c9 2c 13 30 dc 4e 5e  b7 d5 65 00 16 6c 30 04  |..,.0.N^..e..l0.|\n-00000350  cb 66 02 97 ea 7f 7a 16  90 97 16 51 4e de 88 c8  |.f....z....QN...|\n-00000360  63 95 8f 16 03 03 00 04  0e 00 00 00              |c...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 0e 0b 00 02 0a 00  |................|\n+00000040  02 07 00 02 04 30 82 02  00 30 82 01 62 02 09 00  |.....0...0..b...|\n+00000050  b8 bf 2d 47 a0 d2 eb f4  30 09 06 07 2a 86 48 ce  |..-G....0...*.H.|\n+00000060  3d 04 01 30 45 31 0b 30  09 06 03 55 04 06 13 02  |=..0E1.0...U....|\n+00000070  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+00000080  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000090  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+000000a0  74 73 20 50 74 79 20 4c  74 64 30 1e 17 0d 31 32  |ts Pty Ltd0...12|\n+000000b0  31 31 32 32 31 35 30 36  33 32 5a 17 0d 32 32 31  |1122150632Z..221|\n+000000c0  31 32 30 31 35 30 36 33  32 5a 30 45 31 0b 30 09  |120150632Z0E1.0.|\n+000000d0  06 03 55 04 06 13 02 41  55 31 13 30 11 06 03 55  |..U....AU1.0...U|\n+000000e0  04 08 13 0a 53 6f 6d 65  2d 53 74 61 74 65 31 21  |....Some-State1!|\n+000000f0  30 1f 06 03 55 04 0a 13  18 49 6e 74 65 72 6e 65  |0...U....Interne|\n+00000100  74 20 57 69 64 67 69 74  73 20 50 74 79 20 4c 74  |t Widgits Pty Lt|\n+00000110  64 30 81 9b 30 10 06 07  2a 86 48 ce 3d 02 01 06  |d0..0...*.H.=...|\n+00000120  05 2b 81 04 00 23 03 81  86 00 04 00 c4 a1 ed be  |.+...#..........|\n+00000130  98 f9 0b 48 73 36 7e c3  16 56 11 22 f2 3d 53 c3  |...Hs6~..V.\".=S.|\n+00000140  3b 4d 21 3d cd 6b 75 e6  f6 b0 dc 9a df 26 c1 bc  |;M!=.ku......&..|\n+00000150  b2 87 f0 72 32 7c b3 64  2f 1c 90 bc ea 68 23 10  |...r2|.d/....h#.|\n+00000160  7e fe e3 25 c0 48 3a 69  e0 28 6d d3 37 00 ef 04  |~..%.H:i.(m.7...|\n+00000170  62 dd 0d a0 9c 70 62 83  d8 81 d3 64 31 aa 9e 97  |b....pb....d1...|\n+00000180  31 bd 96 b0 68 c0 9b 23  de 76 64 3f 1a 5c 7f e9  |1...h..#.vd?.\\..|\n+00000190  12 0e 58 58 b6 5f 70 dd  9b d8 ea d5 d7 f5 d5 cc  |..XX._p.........|\n+000001a0  b9 b6 9f 30 66 5b 66 9a  20 e2 27 e5 bf fe 3b 30  |...0f[f. .'...;0|\n+000001b0  09 06 07 2a 86 48 ce 3d  04 01 03 81 8c 00 30 81  |...*.H.=......0.|\n+000001c0  88 02 42 01 88 a2 4f eb  e2 45 c5 48 7d 1b ac f5  |..B...O..E.H}...|\n+000001d0  ed 98 9d ae 47 70 c0 5e  1b b6 2f bd f1 b6 4d b7  |....Gp.^../...M.|\n+000001e0  61 40 d3 11 a2 ce ee 0b  7e 92 7e ff 76 9d c3 3b  |a@......~.~.v..;|\n+000001f0  7e a5 3f ce fa 10 e2 59  ec 47 2d 7c ac da 4e 97  |~.?....Y.G-|..N.|\n+00000200  0e 15 a0 6f d0 02 42 01  4d fc be 67 13 9c 2d 05  |...o..B.M..g..-.|\n+00000210  0e bd 3f a3 8c 25 c1 33  13 83 0d 94 06 bb d4 37  |..?..%.3.......7|\n+00000220  7a f6 ec 7a c9 86 2e dd  d7 11 69 7f 85 7c 56 de  |z..z......i..|V.|\n+00000230  fb 31 78 2b e4 c7 78 0d  ae cb be 9e 4e 36 24 31  |.1x+..x.....N6$1|\n+00000240  7b 6a 0f 39 95 12 07 8f  2a 16 03 03 01 1c 0c 00  |{j.9....*.......|\n+00000250  01 18 03 00 19 85 04 01  39 dc ee 44 17 5e db d7  |........9..D.^..|\n+00000260  27 af b6 56 d9 b4 43 5a  99 cf aa 31 37 0c 6f 3a  |'..V..CZ...17.o:|\n+00000270  a0 f8 53 c4 74 d1 91 0a  46 f5 38 3b 5c 09 d8 97  |..S.t...F.8;\\...|\n+00000280  dc 4b aa 70 26 48 f2 d6  0b 31 c9 f8 d4 98 43 e1  |.K.p&H...1....C.|\n+00000290  6c d5 c7 b2 8e 0b 01 e6  b6 00 28 80 7b fc 96 8f  |l.........(.{...|\n+000002a0  0d a2 4f b0 79 af dc 61  28 63 33 78 f6 31 39 fd  |..O.y..a(c3x.19.|\n+000002b0  8a f4 15 18 11 fe db d5  07 da 2c ed 49 a0 23 bf  |..........,.I.#.|\n+000002c0  d0 3a 38 1d 54 ae 1c 7b  ea 29 ee d0 38 c1 76 a7  |.:8.T..{.)..8.v.|\n+000002d0  7f 2a f4 ce 1e ac cc 94  79 90 33 04 03 00 8b 30  |.*......y.3....0|\n+000002e0  81 88 02 42 00 c6 85 8e  06 b7 04 04 e9 cd 9e 3e  |...B...........>|\n+000002f0  cb 66 23 95 b4 42 9c 64  81 39 05 3f b5 21 f8 28  |.f#..B.d.9.?.!.(|\n+00000300  af 60 6b 4d 3d ba a1 4b  5e 77 ef e7 59 28 fe 1d  |.`kM=..K^w..Y(..|\n+00000310  c1 27 a2 ff a8 de 33 48  b3 c1 85 6a 42 9b f9 7e  |.'....3H...jB..~|\n+00000320  7e 31 c2 e5 bd 66 02 42  00 ad 7d 06 35 ab ec 8d  |~1...f.B..}.5...|\n+00000330  ac d4 ba 1b 49 5e 05 5f  f0 97 93 82 b8 2b 8d 91  |....I^._.....+..|\n+00000340  98 63 8e b4 14 62 db 1e  c9 2b eb 95 36 9b 44 c6  |.c...b...+..6.D.|\n+00000350  a6 89 58 50 f9 30 94 89  ef 0f 71 ed c0 42 59 11  |..XP.0....q..BY.|\n+00000360  68 e7 ac 52 2c 1e ed 70  b1 f8 16 03 03 00 04 0e  |h..R,..p........|\n+00000370  00 00 00                                          |...|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 8a 10 00 00  86 85 04 00 c6 26 3b 69  |.............&;i|\n-00000010  8e 54 b7 33 1f be ba 55  54 2d 37 79 d2 69 b9 ff  |.T.3...UT-7y.i..|\n-00000020  2f 18 4f e4 64 94 84 37  d3 34 5b 51 cd cd 62 45  |/.O.d..7.4[Q..bE|\n-00000030  6f b6 78 46 ed 2e 7d 75  93 d7 b9 e3 18 d2 80 1e  |o.xF..}u........|\n-00000040  55 09 57 13 6d 74 04 c6  f2 18 85 d2 44 01 7e 0a  |U.W.mt......D.~.|\n-00000050  d7 31 93 51 45 47 74 11  a9 db b1 1b 93 d0 64 75  |.1.QEGt.......du|\n-00000060  e1 be 61 88 5c 26 c3 a6  82 b0 04 ad b2 39 26 c7  |..a.\\&.......9&.|\n-00000070  75 fe ac 50 cd f4 87 8d  02 3a b4 06 9d 93 d5 09  |u..P.....:......|\n-00000080  2c 8a fd 20 1c 34 73 8f  47 96 85 ce 80 fc b1 14  |,.. .4s.G.......|\n-00000090  03 03 00 01 01 16 03 03  00 40 f2 63 f6 c1 21 89  |.........@.c..!.|\n-000000a0  34 a9 cc a3 ff 71 a0 c5  9e b7 f9 32 80 8f 60 cc  |4....q.....2..`.|\n-000000b0  bf 58 43 7c 5e d5 52 f1  d4 ea a3 50 ac 0d b5 ce  |.XC|^.R....P....|\n-000000c0  80 82 f7 91 9b 07 f6 38  a8 90 b2 15 77 f5 b6 7c  |.......8....w..||\n-000000d0  f9 df 62 f1 dc 15 21 04  dc 89                    |..b...!...|\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 7d 90 e6 a1  |............}...|\n+00000010  06 d6 a9 32 e9 ba 42 d5  05 11 e7 69 7c 5e 6e b6  |...2..B....i|^n.|\n+00000020  ad 51 bc 25 12 89 93 e0  bf 3c 2f ce a8 83 29 0e  |.Q.%.....</...).|\n+00000030  eb 06 89 10 f4 de ce d9  16 6c 95 dc 61 66 84 87  |.........l..af..|\n+00000040  84 6b 47 77 01 55 79 a2  0d e0 e8 d0 bd 00 7e d7  |.kGw.Uy.......~.|\n+00000050  34 a4 75 e4 c8 ac e4 a3  4b df 27 52 7a f7 1b 0f  |4.u.....K.'Rz...|\n+00000060  73 af 26 66 2c c9 29 56  b9 e2 1b b8 02 21 80 74  |s.&f,.)V.....!.t|\n+00000070  db c8 d4 99 31 8f 6c 41  a6 b2 ac 60 82 13 85 08  |....1.lA...`....|\n+00000080  4d 34 f2 77 ba 22 ec 05  92 9c 9b ca 2d 8e dc 14  |M4.w.\"......-...|\n+00000090  03 03 00 01 01 16 03 03  00 40 19 4c 60 51 51 ed  |.........@.L`QQ.|\n+000000a0  03 16 fe 05 a4 88 17 91  f0 0a 50 0d e4 a8 82 9a  |..........P.....|\n+000000b0  4d 4b ef 2a 3d 57 29 60  e7 36 70 9c 41 e2 93 89  |MK.*=W)`.6p.A...|\n+000000c0  b7 b0 f6 76 fc 19 93 7b  ac 8e 39 d1 7c 90 73 62  |...v...{..9.|.sb|\n+000000d0  88 bf 0b 20 f9 fd 49 b4  d9 3c                    |... ..I..<|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n-00000010  00 00 00 00 00 00 00 00  00 00 00 3c d0 01 76 c9  |...........<..v.|\n-00000020  0a 55 3f 92 47 ec 04 22  d8 79 3e 0c 7d f9 fe 12  |.U?.G..\".y>.}...|\n-00000030  c1 21 ce 50 d9 f1 2d 21  38 1a 74 44 e2 0d d0 e6  |.!.P..-!8.tD....|\n-00000040  e5 e1 e2 a0 0e 20 59 7b  2c 62 57 17 03 03 00 40  |..... Y{,bW....@|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 f1 df 07 dd 3f  |...............?|\n+00000020  92 27 96 9a 5c 98 4a 3b  39 0b 5d 2e 5f 12 55 11  |.'..\\.J;9.]._.U.|\n+00000030  32 4d 14 39 31 02 1b 02  ee b0 ae 2c 19 8d c2 31  |2M.91......,...1|\n+00000040  52 cc e9 c3 d6 34 ac 4d  7f e6 6e 17 03 03 00 40  |R....4.M..n....@|\n 00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000060  c7 92 46 7e 19 ca ca a3  39 e5 11 de 06 bd a8 ab  |..F~....9.......|\n-00000070  68 75 b7 32 0b 8c a9 80  42 9c a2 ae a4 98 f1 5b  |hu.2....B......[|\n-00000080  35 7b 05 63 2d a0 58 ae  01 9f b1 24 12 06 00 c5  |5{.c-.X....$....|\n+00000060  6b 1e 9a b5 a8 89 3c d0  05 08 cf 81 a7 02 b4 ed  |k.....<.........|\n+00000070  fa 21 e2 15 87 d0 78 ac  4b 8e fc d0 c5 0e b2 5c  |.!....x.K......\\|\n+00000080  bb c6 49 2a 80 00 67 93  37 4c a6 38 a7 24 f3 05  |..I*..g.7L.8.$..|\n 00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-000000a0  00 00 00 00 00 74 9c 20  9a ab fb 26 4b cd da 86  |.....t. ...&K...|\n-000000b0  ad 35 0a ff 33 2f 49 59  47 f0 bd ac cf 77 b3 2e  |.5..3/IYG....w..|\n-000000c0  0f 20 91 6b ed                                    |. .k.|\n+000000a0  00 00 00 00 00 50 ea de  de b1 ba e4 da b1 d2 3e  |.....P.........>|\n+000000b0  b3 ed 03 2f 8e 30 d5 20  f8 2a 65 d4 4c 1c b9 7f  |.../.0. .*e.L...|\n+000000c0  4c 0c 8f cf 5a                                    |L...Z|"}, {"sha": "e3e62f224230e339870153e8ecbbdc5f976dfb31", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-IssueTicket", "status": "modified", "additions": 79, "deletions": 79, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicket", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicket", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicket?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,87 +1,87 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 61 01 00 00  5d 03 03 52 ac 77 f8 de  |....a...]..R.w..|\n-00000010  80 6f ff 1d 84 ca 82 41  2c 64 aa 9f a8 d3 85 c0  |.o.....A,d......|\n-00000020  11 58 e0 72 b1 e7 98 03  00 cc 89 00 00 04 00 05  |.X.r............|\n-00000030  00 ff 02 01 00 00 2f 00  23 00 00 00 0d 00 22 00  |....../.#.....\".|\n-00000040  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n-00000050  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n-00000060  01 00 0f 00 01 01                                 |......|\n+00000000  16 03 01 00 60 01 00 00  5c 03 03 52 cc 57 59 7e  |....`...\\..R.WY~|\n+00000010  43 5c 3b fd 50 ab 61 3f  64 a4 f9 bd ba 8c 28 e1  |C\\;.P.a?d.....(.|\n+00000020  f9 a1 45 7e 48 9e 62 af  25 de 0e 00 00 04 00 05  |..E~H.b.%.......|\n+00000030  00 ff 01 00 00 2f 00 23  00 00 00 0d 00 22 00 20  |...../.#.....\". |\n+00000040  06 01 06 02 06 03 05 01  05 02 05 03 04 01 04 02  |................|\n+00000050  04 03 03 01 03 02 03 03  02 01 02 02 02 03 01 01  |................|\n+00000060  00 0f 00 01 01                                    |.....|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 30 02 00 00  2c 03 03 00 00 00 00 00  |....0...,.......|\n+00000000  16 03 03 00 35 02 00 00  31 03 03 00 00 00 00 00  |....5...1.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n 00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n-00000030  04 00 23 00 00 16 03 03  02 be 0b 00 02 ba 00 02  |..#.............|\n-00000040  b7 00 02 b4 30 82 02 b0  30 82 02 19 a0 03 02 01  |....0...0.......|\n-00000050  02 02 09 00 85 b0 bb a4  8a 7f b8 ca 30 0d 06 09  |............0...|\n-00000060  2a 86 48 86 f7 0d 01 01  05 05 00 30 45 31 0b 30  |*.H........0E1.0|\n-00000070  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n-00000080  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n-00000090  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n-000000a0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n-000000b0  74 64 30 1e 17 0d 31 30  30 34 32 34 30 39 30 39  |td0...1004240909|\n-000000c0  33 38 5a 17 0d 31 31 30  34 32 34 30 39 30 39 33  |38Z..11042409093|\n-000000d0  38 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |8Z0E1.0...U....A|\n-000000e0  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n-000000f0  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n-00000100  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n-00000110  73 20 50 74 79 20 4c 74  64 30 81 9f 30 0d 06 09  |s Pty Ltd0..0...|\n-00000120  2a 86 48 86 f7 0d 01 01  01 05 00 03 81 8d 00 30  |*.H............0|\n-00000130  81 89 02 81 81 00 bb 79  d6 f5 17 b5 e5 bf 46 10  |.......y......F.|\n-00000140  d0 dc 69 be e6 2b 07 43  5a d0 03 2d 8a 7a 43 85  |..i..+.CZ..-.zC.|\n-00000150  b7 14 52 e7 a5 65 4c 2c  78 b8 23 8c b5 b4 82 e5  |..R..eL,x.#.....|\n-00000160  de 1f 95 3b 7e 62 a5 2c  a5 33 d6 fe 12 5c 7a 56  |...;~b.,.3...\\zV|\n-00000170  fc f5 06 bf fa 58 7b 26  3f b5 cd 04 d3 d0 c9 21  |.....X{&?......!|\n-00000180  96 4a c7 f4 54 9f 5a bf  ef 42 71 00 fe 18 99 07  |.J..T.Z..Bq.....|\n-00000190  7f 7e 88 7d 7d f1 04 39  c4 a2 2e db 51 c9 7c e3  |.~.}}..9....Q.|.|\n-000001a0  c0 4c 3b 32 66 01 cf af  b1 1d b8 71 9a 1d db db  |.L;2f......q....|\n-000001b0  89 6b ae da 2d 79 02 03  01 00 01 a3 81 a7 30 81  |.k..-y........0.|\n-000001c0  a4 30 1d 06 03 55 1d 0e  04 16 04 14 b1 ad e2 85  |.0...U..........|\n-000001d0  5a cf cb 28 db 69 ce 23  69 de d3 26 8e 18 88 39  |Z..(.i.#i..&...9|\n-000001e0  30 75 06 03 55 1d 23 04  6e 30 6c 80 14 b1 ad e2  |0u..U.#.n0l.....|\n-000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n-00000200  39 a1 49 a4 47 30 45 31  0b 30 09 06 03 55 04 06  |9.I.G0E1.0...U..|\n-00000210  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000220  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000230  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-00000240  67 69 74 73 20 50 74 79  20 4c 74 64 82 09 00 85  |gits Pty Ltd....|\n-00000250  b0 bb a4 8a 7f b8 ca 30  0c 06 03 55 1d 13 04 05  |.......0...U....|\n-00000260  30 03 01 01 ff 30 0d 06  09 2a 86 48 86 f7 0d 01  |0....0...*.H....|\n-00000270  01 05 05 00 03 81 81 00  08 6c 45 24 c7 6b b1 59  |.........lE$.k.Y|\n-00000280  ab 0c 52 cc f2 b0 14 d7  87 9d 7a 64 75 b5 5a 95  |..R.......zdu.Z.|\n-00000290  66 e4 c5 2b 8e ae 12 66  1f eb 4f 38 b3 6e 60 d3  |f..+...f..O8.n`.|\n-000002a0  92 fd f7 41 08 b5 25 13  b1 18 7a 24 fb 30 1d ba  |...A..%...z$.0..|\n-000002b0  ed 98 b9 17 ec e7 d7 31  59 db 95 d3 1d 78 ea 50  |.......1Y....x.P|\n-000002c0  56 5c d5 82 5a 2d 5a 5f  33 c4 b6 d8 c9 75 90 96  |V\\..Z-Z_3....u..|\n-000002d0  8c 0f 52 98 b5 cd 98 1f  89 20 5f f2 a0 1c a3 1b  |..R...... _.....|\n-000002e0  96 94 dd a9 fd 57 e9 70  e8 26 6d 71 99 9b 26 6e  |.....W.p.&mq..&n|\n-000002f0  38 50 29 6c 90 a7 bd d9  16 03 03 00 04 0e 00 00  |8P)l............|\n-00000300  00                                                |.|\n+00000030  09 00 23 00 00 ff 01 00  01 00 16 03 03 02 be 0b  |..#.............|\n+00000040  00 02 ba 00 02 b7 00 02  b4 30 82 02 b0 30 82 02  |.........0...0..|\n+00000050  19 a0 03 02 01 02 02 09  00 85 b0 bb a4 8a 7f b8  |................|\n+00000060  ca 30 0d 06 09 2a 86 48  86 f7 0d 01 01 05 05 00  |.0...*.H........|\n+00000070  30 45 31 0b 30 09 06 03  55 04 06 13 02 41 55 31  |0E1.0...U....AU1|\n+00000080  13 30 11 06 03 55 04 08  13 0a 53 6f 6d 65 2d 53  |.0...U....Some-S|\n+00000090  74 61 74 65 31 21 30 1f  06 03 55 04 0a 13 18 49  |tate1!0...U....I|\n+000000a0  6e 74 65 72 6e 65 74 20  57 69 64 67 69 74 73 20  |nternet Widgits |\n+000000b0  50 74 79 20 4c 74 64 30  1e 17 0d 31 30 30 34 32  |Pty Ltd0...10042|\n+000000c0  34 30 39 30 39 33 38 5a  17 0d 31 31 30 34 32 34  |4090938Z..110424|\n+000000d0  30 39 30 39 33 38 5a 30  45 31 0b 30 09 06 03 55  |090938Z0E1.0...U|\n+000000e0  04 06 13 02 41 55 31 13  30 11 06 03 55 04 08 13  |....AU1.0...U...|\n+000000f0  0a 53 6f 6d 65 2d 53 74  61 74 65 31 21 30 1f 06  |.Some-State1!0..|\n+00000100  03 55 04 0a 13 18 49 6e  74 65 72 6e 65 74 20 57  |.U....Internet W|\n+00000110  69 64 67 69 74 73 20 50  74 79 20 4c 74 64 30 81  |idgits Pty Ltd0.|\n+00000120  9f 30 0d 06 09 2a 86 48  86 f7 0d 01 01 01 05 00  |.0...*.H........|\n+00000130  03 81 8d 00 30 81 89 02  81 81 00 bb 79 d6 f5 17  |....0.......y...|\n+00000140  b5 e5 bf 46 10 d0 dc 69  be e6 2b 07 43 5a d0 03  |...F...i..+.CZ..|\n+00000150  2d 8a 7a 43 85 b7 14 52  e7 a5 65 4c 2c 78 b8 23  |-.zC...R..eL,x.#|\n+00000160  8c b5 b4 82 e5 de 1f 95  3b 7e 62 a5 2c a5 33 d6  |........;~b.,.3.|\n+00000170  fe 12 5c 7a 56 fc f5 06  bf fa 58 7b 26 3f b5 cd  |..\\zV.....X{&?..|\n+00000180  04 d3 d0 c9 21 96 4a c7  f4 54 9f 5a bf ef 42 71  |....!.J..T.Z..Bq|\n+00000190  00 fe 18 99 07 7f 7e 88  7d 7d f1 04 39 c4 a2 2e  |......~.}}..9...|\n+000001a0  db 51 c9 7c e3 c0 4c 3b  32 66 01 cf af b1 1d b8  |.Q.|..L;2f......|\n+000001b0  71 9a 1d db db 89 6b ae  da 2d 79 02 03 01 00 01  |q.....k..-y.....|\n+000001c0  a3 81 a7 30 81 a4 30 1d  06 03 55 1d 0e 04 16 04  |...0..0...U.....|\n+000001d0  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n+000001e0  26 8e 18 88 39 30 75 06  03 55 1d 23 04 6e 30 6c  |&...90u..U.#.n0l|\n+000001f0  80 14 b1 ad e2 85 5a cf  cb 28 db 69 ce 23 69 de  |......Z..(.i.#i.|\n+00000200  d3 26 8e 18 88 39 a1 49  a4 47 30 45 31 0b 30 09  |.&...9.I.G0E1.0.|\n+00000210  06 03 55 04 06 13 02 41  55 31 13 30 11 06 03 55  |..U....AU1.0...U|\n+00000220  04 08 13 0a 53 6f 6d 65  2d 53 74 61 74 65 31 21  |....Some-State1!|\n+00000230  30 1f 06 03 55 04 0a 13  18 49 6e 74 65 72 6e 65  |0...U....Interne|\n+00000240  74 20 57 69 64 67 69 74  73 20 50 74 79 20 4c 74  |t Widgits Pty Lt|\n+00000250  64 82 09 00 85 b0 bb a4  8a 7f b8 ca 30 0c 06 03  |d...........0...|\n+00000260  55 1d 13 04 05 30 03 01  01 ff 30 0d 06 09 2a 86  |U....0....0...*.|\n+00000270  48 86 f7 0d 01 01 05 05  00 03 81 81 00 08 6c 45  |H.............lE|\n+00000280  24 c7 6b b1 59 ab 0c 52  cc f2 b0 14 d7 87 9d 7a  |$.k.Y..R.......z|\n+00000290  64 75 b5 5a 95 66 e4 c5  2b 8e ae 12 66 1f eb 4f  |du.Z.f..+...f..O|\n+000002a0  38 b3 6e 60 d3 92 fd f7  41 08 b5 25 13 b1 18 7a  |8.n`....A..%...z|\n+000002b0  24 fb 30 1d ba ed 98 b9  17 ec e7 d7 31 59 db 95  |$.0.........1Y..|\n+000002c0  d3 1d 78 ea 50 56 5c d5  82 5a 2d 5a 5f 33 c4 b6  |..x.PV\\..Z-Z_3..|\n+000002d0  d8 c9 75 90 96 8c 0f 52  98 b5 cd 98 1f 89 20 5f  |..u....R...... _|\n+000002e0  f2 a0 1c a3 1b 96 94 dd  a9 fd 57 e9 70 e8 26 6d  |..........W.p.&m|\n+000002f0  71 99 9b 26 6e 38 50 29  6c 90 a7 bd d9 16 03 03  |q..&n8P)l.......|\n+00000300  00 04 0e 00 00 00                                 |......|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 86 10 00 00  82 00 80 01 0a 69 54 c5  |.............iT.|\n-00000010  b8 a7 ab 91 53 42 ff c9  2b 27 49 12 df 7d 4d 65  |....SB..+'I..}Me|\n-00000020  d1 5a 36 a0 47 ad f6 42  59 36 99 d0 d6 92 9e 16  |.Z6.G..BY6......|\n-00000030  9d 8c 0c ad ee f9 7b b1  96 91 01 1e b1 b5 04 a9  |......{.........|\n-00000040  0d fe 0b 88 b8 25 4f 70  f8 51 7e 6f c9 cd 7a 60  |.....%Op.Q~o..z`|\n-00000050  2c 58 b4 50 36 28 01 e8  71 86 08 7e 75 b3 76 31  |,X.P6(..q..~u.v1|\n-00000060  69 50 3a bb 21 95 f8 75  64 7f 0b 78 29 da 82 6b  |iP:.!..ud..x)..k|\n-00000070  e1 b9 cd ca 2c f0 57 f9  e3 d0 09 df fd 51 bc fa  |....,.W......Q..|\n-00000080  ef f1 68 07 4b 21 6e 52  7a 5f dc 14 03 03 00 01  |..h.K!nRz_......|\n-00000090  01 16 03 03 00 24 ca a5  ab ab 2f 12 1e a8 3c 33  |.....$..../...<3|\n-000000a0  24 e8 ef c9 b2 bb 58 61  c0 eb 97 66 fb e0 72 4a  |$.....Xa...f..rJ|\n-000000b0  82 9e e7 d1 0f fa be aa  d0 d3                    |..........|\n+00000000  16 03 03 00 86 10 00 00  82 00 80 6e 2e 79 82 3a  |...........n.y.:|\n+00000010  c4 68 72 f5 a2 42 3d 71  f9 ec 22 8c 0b fa f0 82  |.hr..B=q..\".....|\n+00000020  82 c0 cb fc 52 0a 51 03  04 8c eb 4a 4e 4f b6 49  |....R.Q....JNO.I|\n+00000030  ef 94 65 21 3c f7 9d 46  85 6e 35 d5 17 6b ff a3  |..e!<..F.n5..k..|\n+00000040  5e 4d c1 36 1a 2f 68 f5  06 d4 2d 73 4f 1c 3b 7b  |^M.6./h...-sO.;{|\n+00000050  c1 fa 4e 7e 7c f9 6c 13  a6 f4 3a 43 e9 aa be 22  |..N~|.l...:C...\"|\n+00000060  85 6f 2f 7c 5b b0 08 e2  86 b2 ae cb a9 12 d8 32  |.o/|[..........2|\n+00000070  80 1d e4 2e 5d c3 66 d1  19 e5 89 33 2a 88 24 40  |....].f....3*.$@|\n+00000080  2a 6d 6b b5 f1 92 4b 66  06 b8 49 14 03 03 00 01  |*mk...Kf..I.....|\n+00000090  01 16 03 03 00 24 16 49  e2 a0 67 31 cf 0d 72 cb  |.....$.I..g1..r.|\n+000000a0  ac 16 2c 80 37 71 69 f7  5f c4 d3 00 19 b7 4b fb  |..,.7qi._.....K.|\n+000000b0  e5 e9 74 8e 30 b3 1c c5  ae e6                    |..t.0.....|\n >>> Flow 4 (server to client)\n 00000000  16 03 03 00 72 04 00 00  6e 00 00 00 00 00 68 00  |....r...n.....h.|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 65  |...............e|\n-00000020  ea 4b d1 ef ba 11 a0 88  48 34 0d 3b 22 38 1e 62  |.K......H4.;\"8.b|\n-00000030  c5 0a 33 b3 f0 65 ff fa  c4 f3 a8 2d 24 75 55 e4  |..3..e.....-$uU.|\n-00000040  47 cc d2 6b 8d 26 c6 d1  10 cc a2 48 29 c0 a1 a5  |G..k.&.....H)...|\n-00000050  52 66 dc ec 0b 59 23 02  5b 66 c3 af 88 27 f0 65  |Rf...Y#.[f...'.e|\n-00000060  c0 72 de 1a db cf 9b 5f  e7 fe e8 2d 27 6f 67 fb  |.r....._...-'og.|\n-00000070  91 a1 46 70 b1 ce 29 14  03 03 00 01 01 16 03 03  |..Fp..).........|\n-00000080  00 24 de 3d 06 39 fa fe  ad 47 50 1e 3d 38 ff 1d  |.$.=.9...GP.=8..|\n-00000090  15 7f 11 4a 90 52 de 7d  0b d3 8b f4 f8 60 a9 78  |...J.R.}.....`.x|\n-000000a0  6a db e2 a7 5b b7 17 03  03 00 21 66 6f 29 59 68  |j...[.....!fo)Yh|\n-000000b0  e0 64 a1 87 c8 f2 63 86  c6 5c c8 dc 05 de 6f d2  |.d....c..\\....o.|\n-000000c0  db 53 72 f1 ae 22 61 4e  a1 b8 c9 25 15 03 03 00  |.Sr..\"aN...%....|\n-000000d0  16 70 ad 3d dc 66 ab 57  2e 75 ab 1f 07 9e 70 77  |.p.=.f.W.u....pw|\n-000000e0  c2 2b 88 05 34 cf da                              |.+..4..|\n+00000020  ea 4b d1 ef ba 06 38 1e  e1 88 82 3a cd 03 ac 3b  |.K....8....:...;|\n+00000030  39 0a e0 19 fd af 6c 57  30 df 31 6e f7 92 38 4b  |9.....lW0.1n..8K|\n+00000040  5d 77 90 39 ff 32 51 f5  ed 12 d7 b0 7c 4d 6c c5  |]w.9.2Q.....|Ml.|\n+00000050  76 e4 72 48 3e 59 23 fe  0d 15 df f4 ba ea b9 67  |v.rH>Y#........g|\n+00000060  16 23 8f 7d 15 b6 11 f1  ab d7 d4 cd a3 21 82 92  |.#.}.........!..|\n+00000070  2a 12 cf 95 f3 60 b2 14  03 03 00 01 01 16 03 03  |*....`..........|\n+00000080  00 24 89 ad 87 04 4f 08  dc 2a 71 37 fb f1 95 d1  |.$....O..*q7....|\n+00000090  2e 3c c2 6e 0f 38 5d e4  0e c3 f7 27 d0 46 a3 c1  |.<.n.8]....'.F..|\n+000000a0  a8 3b 06 ed 96 ec 17 03  03 00 21 30 d4 9f 0b 49  |.;........!0...I|\n+000000b0  9f a2 a8 a1 2c 0a 79 93  56 2d 8a ee 85 ed 62 42  |....,.y.V-....bB|\n+000000c0  8c 18 fe 7a 09 3a 24 c4  5e ed 7d 2a 15 03 03 00  |...z.:$.^.}*....|\n+000000d0  16 a0 24 0a 8b 90 4c fc  99 ba 67 bb 04 1e 59 69  |..$...L...g...Yi|\n+000000e0  c2 98 49 b5 00 0b e0                              |..I....|"}, {"sha": "5995b3314c420da8ede5b73791b2d487498a5b60", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-3DES", "status": "modified", "additions": 77, "deletions": 76, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-3DES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-3DES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-3DES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,82 +1,83 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 94  |....]...Y..R.w..|\n-00000010  1b 92 d4 0b 16 00 df 59  3d 0e 9b 20 4a 9a 37 b5  |.......Y=.. J.7.|\n-00000020  8c 96 96 f9 a0 d4 4f b2  20 9e 22 00 00 04 00 0a  |......O. .\".....|\n-00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n-00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-00000060  01 01                                             |..|\n+00000000  16 03 01 00 5c 01 00 00  58 03 03 52 cc 57 59 68  |....\\...X..R.WYh|\n+00000010  11 72 a6 ec 6b 0a 47 1d  10 06 ec 75 af 07 38 a0  |.r..k.G....u..8.|\n+00000020  30 9e 91 12 e1 9b 19 46  0d d4 45 00 00 04 00 0a  |0......F..E.....|\n+00000030  00 ff 01 00 00 2b 00 0d  00 22 00 20 06 01 06 02  |.....+...\". ....|\n+00000040  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000050  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+00000060  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 16  |................|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 86 10 00 00  82 00 80 49 e0 e1 1c 2f  |...........I.../|\n-00000010  7a 73 f4 a2 af 83 23 1d  4a 49 2b 6d d8 95 c7 48  |zs....#.JI+m...H|\n-00000020  ea 32 03 0d f8 72 06 73  92 90 67 10 d7 c5 12 b3  |.2...r.s..g.....|\n-00000030  52 56 1e e9 14 d5 1b 67  68 93 9f 9f 0c 53 bf 73  |RV.....gh....S.s|\n-00000040  80 09 0f 67 05 d6 de 59  4b 76 0e 8f 8d a2 6e 09  |...g...YKv....n.|\n-00000050  3d 86 a4 d8 f9 af a0 89  73 5a 1a 58 9b 80 a6 28  |=.......sZ.X...(|\n-00000060  4b 6b 79 af de 02 56 1e  2b d3 ec 3f 67 43 1e 45  |Kky...V.+..?gC.E|\n-00000070  cd d0 69 db 88 f3 6b d8  cd cd 89 82 7a cf 5a 76  |..i...k.....z.Zv|\n-00000080  5f 1e b3 ae 01 34 7c 2b  3c fa 82 14 03 03 00 01  |_....4|+<.......|\n-00000090  01 16 03 03 00 30 ce 2c  83 c5 74 8b ab 3c 6b 54  |.....0.,..t..<kT|\n-000000a0  73 7a d2 5e e6 db 7c c7  c1 c0 8e da 13 d3 a3 d8  |sz.^..|.........|\n-000000b0  de 53 be b9 0b 45 cf 40  35 fa 77 6a 95 83 4f 26  |.S...E.@5.wj..O&|\n-000000c0  74 33 5b a3 5d f8                                 |t3[.].|\n+00000000  16 03 03 00 86 10 00 00  82 00 80 7a c0 73 ec cb  |...........z.s..|\n+00000010  cf c2 a8 86 c0 7e 03 63  57 a1 ce 42 37 6d 78 54  |.....~.cW..B7mxT|\n+00000020  29 f5 3e cc 57 c7 0d d9  69 e1 52 5c 3b 6b c4 c7  |).>.W...i.R\\;k..|\n+00000030  20 6d 59 ee c0 07 81 74  74 9f 62 41 64 f0 4d c8  | mY....tt.bAd.M.|\n+00000040  9b aa 1a b9 da 56 07 f5  6c 1c 59 8c d3 f9 08 d9  |.....V..l.Y.....|\n+00000050  08 f4 16 93 5d 9a e5 6f  fb 9f ba 3d 3c d6 81 ad  |....]..o...=<...|\n+00000060  02 12 a7 28 b6 81 6a 77  c3 e9 d7 c7 54 d6 77 83  |...(..jw....T.w.|\n+00000070  77 de 71 fb b3 f3 2d c4  a5 b1 e5 de aa 0e 21 bd  |w.q...-.......!.|\n+00000080  91 a2 dc 7f f7 6f 90 82  54 b1 e7 14 03 03 00 01  |.....o..T.......|\n+00000090  01 16 03 03 00 30 8f ee  bf fb c8 5c 54 f5 29 23  |.....0.....\\T.)#|\n+000000a0  d4 55 f6 98 a1 6e d5 43  e7 81 b2 36 f2 98 d8 1b  |.U...n.C...6....|\n+000000b0  0d 76 cb 14 ba 32 d7 36  30 e6 ab 42 80 95 f6 8a  |.v...2.60..B....|\n+000000c0  60 64 a0 6b 90 81                                 |`d.k..|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 30 00 00 00 00 00  |..........0.....|\n-00000010  00 00 00 fa 71 b5 6e 06  4f ba 9e 8d 44 85 b1 58  |....q.n.O...D..X|\n-00000020  dc 6e 13 a7 f4 26 96 cd  9d 58 41 c3 d7 14 7c 20  |.n...&...XA...| |\n-00000030  0d 77 83 e0 8c 43 a7 74  8b 7d 60 17 03 03 00 30  |.w...C.t.}`....0|\n-00000040  00 00 00 00 00 00 00 00  55 f4 03 c0 00 95 bb 6d  |........U......m|\n-00000050  52 29 35 7b ba 5d d5 e4  4d 8b 2a 5a 21 25 af 43  |R)5{.]..M.*Z!%.C|\n-00000060  0d e5 ad 97 ba 70 4d b2  79 78 58 1d c4 d3 c9 8b  |.....pM.yxX.....|\n-00000070  15 03 03 00 20 00 00 00  00 00 00 00 00 d4 54 36  |.... .........T6|\n-00000080  41 07 5d e0 de 65 80 ad  b8 0f 61 22 a8 0f 87 2f  |A.]..e....a\".../|\n-00000090  59 91 0a de 60                                    |Y...`|\n+00000010  00 00 00 2c 21 52 34 63  ac e3 a3 66 45 00 41 0c  |...,!R4c...fE.A.|\n+00000020  93 5d 6a 74 5a 25 dc 69  1d 76 73 0c f4 42 6a 18  |.]jtZ%.i.vs..Bj.|\n+00000030  5b 62 23 e7 fe 41 cf d4  9b 86 35 17 03 03 00 30  |[b#..A....5....0|\n+00000040  00 00 00 00 00 00 00 00  7d 5d ce 43 85 5c 6b 89  |........}].C.\\k.|\n+00000050  c9 a5 0e 22 69 8e b9 4a  77 4c c0 4e cc 79 d9 7e  |...\"i..JwL.N.y.~|\n+00000060  a3 c8 d3 db 5c 53 f8 92  4d c4 5a 88 72 58 05 11  |....\\S..M.Z.rX..|\n+00000070  15 03 03 00 20 00 00 00  00 00 00 00 00 1d 63 8b  |.... .........c.|\n+00000080  a7 74 fb 76 1d 47 31 93  1f ec 8c e2 18 8e 21 dd  |.t.v.G1.......!.|\n+00000090  87 97 9f 1c ca                                    |.....|"}, {"sha": "a152a96a849adf550c46f7d838faae3cf9f96501", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-AES", "status": "modified", "additions": 79, "deletions": 78, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,86 +1,87 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 f2  |....]...Y..R.w..|\n-00000010  28 d7 4f 30 1c 37 0e be  ff 22 60 a4 4a b4 14 11  |(.O0.7...\"`.J...|\n-00000020  47 2d 7b 91 55 d6 c3 58  51 c3 f1 00 00 04 00 2f  |G-{.U..XQ....../|\n-00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n-00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-00000060  01 01                                             |..|\n+00000000  16 03 01 00 5c 01 00 00  58 03 03 52 cc 57 59 d0  |....\\...X..R.WY.|\n+00000010  38 05 36 7e e3 1e 93 2a  5a bf dc c2 f8 0a 03 6f  |8.6~...*Z......o|\n+00000020  1a fc 21 74 e5 8b 2a c3  9e 2c 26 00 00 04 00 2f  |..!t..*..,&..../|\n+00000030  00 ff 01 00 00 2b 00 0d  00 22 00 20 06 01 06 02  |.....+...\". ....|\n+00000040  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000050  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+00000060  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 00  |............./..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 86 10 00 00  82 00 80 67 83 ea ad 9c  |...........g....|\n-00000010  e6 e0 e6 39 39 8a f4 1d  b0 da 2e a0 de 44 b1 92  |...99........D..|\n-00000020  2a ca 64 cb e5 d2 d4 40  f9 a6 ec 12 fc 00 97 8a  |*.d....@........|\n-00000030  9c bb b6 e3 55 06 93 af  3f 70 53 2a c8 93 fe 08  |....U...?pS*....|\n-00000040  1a bf 92 a9 64 71 36 55  f4 7b a3 08 59 05 8d 69  |....dq6U.{..Y..i|\n-00000050  e2 6d 1a d8 97 2e b9 f1  f4 16 63 6e c4 28 59 44  |.m........cn.(YD|\n-00000060  5b 53 84 11 2b f6 bd 41  21 9e cc 3e c3 9a 17 8e  |[S..+..A!..>....|\n-00000070  53 92 b7 cf 45 dc f3 0c  2d f2 dd 0b a2 6c 34 ab  |S...E...-....l4.|\n-00000080  05 e2 48 1a 83 60 dc 8e  f7 bc 3a 14 03 03 00 01  |..H..`....:.....|\n-00000090  01 16 03 03 00 40 c8 19  88 56 0b fd 75 d9 e9 7a  |.....@...V..u..z|\n-000000a0  38 04 37 e3 74 fc af 7b  b6 2b d8 93 da 25 ba 14  |8.7.t..{.+...%..|\n-000000b0  3b 5e ef 19 c5 45 fd cf  b4 f5 ce a5 ee 8a 9b cc  |;^...E..........|\n-000000c0  52 17 87 3c c7 9f 56 72  f3 e1 03 e4 db d5 24 6a  |R..<..Vr......$j|\n-000000d0  08 de 9b fd a5 2c                                 |.....,|\n+00000000  16 03 03 00 86 10 00 00  82 00 80 4b b4 28 bc 78  |...........K.(.x|\n+00000010  41 34 f3 49 e8 74 07 74  42 ae 2e 55 9e 9a ce e5  |A4.I.t.tB..U....|\n+00000020  4a 1b e7 55 c7 64 c4 9c  b3 dd 20 d6 f8 8e 67 b3  |J..U.d.... ...g.|\n+00000030  7a 5c 3b 34 e4 1a f6 bd  65 fc 21 cd 9a de 64 77  |z\\;4....e.!...dw|\n+00000040  09 a5 92 e5 a4 f5 18 7b  23 5b 8b c1 95 23 97 6f  |.......{#[...#.o|\n+00000050  76 55 04 34 22 7d 43 71  db cd eb f8 36 36 44 4b  |vU.4\"}Cq....66DK|\n+00000060  ae e3 cc ec 64 88 7b e1  ea d6 ab 49 35 94 a5 04  |....d.{....I5...|\n+00000070  1e 83 c5 cf 21 bb ca 33  5f d4 bf 1d d3 4d 07 59  |....!..3_....M.Y|\n+00000080  b4 39 b2 4b 7b 05 43 70  0d ba 7a 14 03 03 00 01  |.9.K{.Cp..z.....|\n+00000090  01 16 03 03 00 40 74 4b  7d b2 53 49 ea 86 90 c3  |.....@tK}.SI....|\n+000000a0  64 6b 64 31 1a 2a 3f 1a  37 1e 56 b8 dd 12 6d 56  |dkd1.*?.7.V...mV|\n+000000b0  2a 61 92 5b 39 e7 e1 be  71 70 4b 9b b3 f0 71 e7  |*a.[9...qpK...q.|\n+000000c0  47 2e 2e 17 c3 0a 66 9f  69 74 30 2d f0 a0 7f 84  |G.....f.it0-....|\n+000000d0  25 db c1 81 ee cf                                 |%.....|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n-00000010  00 00 00 00 00 00 00 00  00 00 00 c9 7d ec 45 ce  |............}.E.|\n-00000020  b9 e1 3b 11 02 44 56 cf  86 61 44 64 0c 00 5a 9e  |..;..DV..aDd..Z.|\n-00000030  f0 37 cc 56 6a 13 f7 81  67 f3 78 a2 53 a6 5c b5  |.7.Vj...g.x.S.\\.|\n-00000040  0f cc 5b f0 c3 6c 2d cb  48 e1 e4 17 03 03 00 40  |..[..l-.H......@|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 f3 4d 5a fc 21  |............MZ.!|\n+00000020  30 b5 a1 86 9d e2 ea 38  ac 54 57 fa 5a 54 97 b8  |0......8.TW.ZT..|\n+00000030  bb 4d 64 09 ef ce a1 75  0c 50 8d ff 5c c2 e9 47  |.Md....u.P..\\..G|\n+00000040  95 93 53 c0 bd dc c5 9c  e0 59 17 17 03 03 00 40  |..S......Y.....@|\n 00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000060  6d 27 67 8e 44 ed c2 6b  e7 a8 f5 ab c9 5d a5 a6  |m'g.D..k.....]..|\n-00000070  da f0 ae 72 2c 95 75 00  fb e3 94 6e b7 8f e7 44  |...r,.u....n...D|\n-00000080  69 37 8c aa 7f 8d 63 5b  03 1d 8e 64 1a 75 72 cb  |i7....c[...d.ur.|\n+00000060  69 c5 48 6e 45 cf 98 1b  2c 23 40 d1 ab a3 c2 e2  |i.HnE...,#@.....|\n+00000070  10 7b b1 c8 21 3c f0 eb  96 bd 4f 78 b2 4a 7b 18  |.{..!<....Ox.J{.|\n+00000080  4c b1 a6 67 bf 06 40 01  d0 8d 91 be 17 d8 0c 71  |L..g..@........q|\n 00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-000000a0  00 00 00 00 00 5e f4 e5  ae 1f f9 37 b7 14 26 cc  |.....^.....7..&.|\n-000000b0  b0 07 f4 61 60 03 2d e3  ff f2 85 bf 1c 74 74 e2  |...a`.-......tt.|\n-000000c0  db 0b e3 5f 62                                    |..._b|\n+000000a0  00 00 00 00 00 20 84 80  3d 70 fe ae ee d7 2f e9  |..... ..=p..../.|\n+000000b0  bf 65 30 bf 0b dd 98 ea  bb ba 12 14 98 53 7f d5  |.e0..........S..|\n+000000c0  56 ce 06 3c d0                                    |V..<.|"}, {"sha": "6f7e0e40ab1c1b68c8789cc22bfb0da53abbb5f9", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-AES-GCM", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES-GCM", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES-GCM", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES-GCM?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,102 +1,102 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 9d 01 00 00  99 03 03 52 ac 77 f8 7a  |...........R.w.z|\n-00000010  f5 85 72 ff ef a8 58 b7  be 86 38 82 c7 dd 79 f7  |..r...X...8...y.|\n-00000020  78 20 05 9d cf 1b 44 71  92 ab b8 00 00 04 c0 2f  |x ....Dq......./|\n-00000030  00 ff 02 01 00 00 6b 00  0b 00 04 03 00 01 02 00  |......k.........|\n-00000040  0a 00 34 00 32 00 0e 00  0d 00 19 00 0b 00 0c 00  |..4.2...........|\n-00000050  18 00 09 00 0a 00 16 00  17 00 08 00 06 00 07 00  |................|\n-00000060  14 00 15 00 04 00 05 00  12 00 13 00 01 00 02 00  |................|\n-00000070  03 00 0f 00 10 00 11 00  0d 00 22 00 20 06 01 06  |..........\". ...|\n-00000080  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000090  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-000000a0  01 01                                             |..|\n+00000000  16 03 01 00 9c 01 00 00  98 03 03 52 cc 57 59 d3  |...........R.WY.|\n+00000010  91 67 1b de 52 be 25 1d  61 3b 45 29 43 aa 8a e9  |.g..R.%.a;E)C...|\n+00000020  fc 29 19 d5 59 aa 48 0d  21 8a eb 00 00 04 c0 2f  |.)..Y.H.!....../|\n+00000030  00 ff 01 00 00 6b 00 0b  00 04 03 00 01 02 00 0a  |.....k..........|\n+00000040  00 34 00 32 00 0e 00 0d  00 19 00 0b 00 0c 00 18  |.4.2............|\n+00000050  00 09 00 0a 00 16 00 17  00 08 00 06 00 07 00 14  |................|\n+00000060  00 15 00 04 00 05 00 12  00 13 00 01 00 02 00 03  |................|\n+00000070  00 0f 00 10 00 11 00 0d  00 22 00 20 06 01 06 02  |.........\". ....|\n+00000080  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000090  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+000000a0  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 2f 00 16  |............./..|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 01 11 0c  00 01 0d 03 00 19 85 04  |................|\n-00000300  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n-00000310  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n-00000320  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n-00000330  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n-00000340  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n-00000350  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n-00000360  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n-00000370  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n-00000380  94 79 90 33 04 01 00 80  11 d6 f6 f9 49 4c ad d6  |.y.3........IL..|\n-00000390  c6 50 3f 8d 28 d2 9b 32  8c c8 14 b4 75 22 81 8f  |.P?.(..2....u\"..|\n-000003a0  b9 dc 0b 5e 71 7a eb 15  1a 8e 50 fb 03 f0 42 de  |...^qz....P...B.|\n-000003b0  06 bb d7 28 c7 b3 c5 23  2d 29 11 01 5e 03 3b 2f  |...(...#-)..^.;/|\n-000003c0  3c e0 5c 26 b2 15 95 e3  30 35 1f 79 9b de a5 ee  |<.\\&....05.y....|\n-000003d0  01 35 14 22 c3 7f 0f 30  75 9d ec 94 bd 17 08 1a  |.5.\"...0u.......|\n-000003e0  96 b5 7a 16 39 58 ce 96  aa 90 06 19 1b d5 64 13  |..z.9X........d.|\n-000003f0  49 9f c6 84 e8 22 5c 5c  cc f9 90 75 75 ef 33 94  |I....\"\\\\...uu.3.|\n-00000400  6b 76 8a b7 c0 9a 34 aa  16 03 03 00 04 0e 00 00  |kv....4.........|\n-00000410  00                                                |.|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 2f 00 00  |............./..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 01 11 0c 00  |n8P)l...........|\n+00000300  01 0d 03 00 19 85 04 01  39 dc ee 44 17 5e db d7  |........9..D.^..|\n+00000310  27 af b6 56 d9 b4 43 5a  99 cf aa 31 37 0c 6f 3a  |'..V..CZ...17.o:|\n+00000320  a0 f8 53 c4 74 d1 91 0a  46 f5 38 3b 5c 09 d8 97  |..S.t...F.8;\\...|\n+00000330  dc 4b aa 70 26 48 f2 d6  0b 31 c9 f8 d4 98 43 e1  |.K.p&H...1....C.|\n+00000340  6c d5 c7 b2 8e 0b 01 e6  b6 00 28 80 7b fc 96 8f  |l.........(.{...|\n+00000350  0d a2 4f b0 79 af dc 61  28 63 33 78 f6 31 39 fd  |..O.y..a(c3x.19.|\n+00000360  8a f4 15 18 11 fe db d5  07 da 2c ed 49 a0 23 bf  |..........,.I.#.|\n+00000370  d0 3a 38 1d 54 ae 1c 7b  ea 29 ee d0 38 c1 76 a7  |.:8.T..{.)..8.v.|\n+00000380  7f 2a f4 ce 1e ac cc 94  79 90 33 04 01 00 80 5f  |.*......y.3...._|\n+00000390  c6 9e 6d 87 97 04 b5 c2  12 73 75 ff a5 40 d0 0f  |..m......su..@..|\n+000003a0  39 74 98 e5 1f 62 4c e8  9a af a0 d4 08 61 d4 53  |9t...bL......a.S|\n+000003b0  67 ee f6 27 45 1a ee 52  35 7a 5f 5b 54 4a de 9b  |g..'E..R5z_[TJ..|\n+000003c0  fb 9a a2 61 e1 db be b0  08 5d 4f fc b5 5d d3 bc  |...a.....]O..]..|\n+000003d0  c9 49 e2 b9 d8 52 52 79  d1 a3 8e da 7d 35 12 19  |.I...RRy....}5..|\n+000003e0  45 30 fb fd e7 e2 f4 00  43 78 64 ca 2b 6c 65 28  |E0......Cxd.+le(|\n+000003f0  8a 8d 83 4f cf 44 9a 19  89 4d 08 d8 85 b3 65 95  |...O.D...M....e.|\n+00000400  e8 47 4d 86 25 48 09 5c  77 7d 73 0c 6b 22 22 16  |.GM.%H.\\w}s.k\"\".|\n+00000410  03 03 00 04 0e 00 00 00                           |........|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 8a 10 00 00  86 85 04 01 bf 6a c6 3e  |.............j.>|\n-00000010  39 bb 08 d0 2a 07 fd d9  9a 61 5d 0f ca e5 26 80  |9...*....a]...&.|\n-00000020  09 45 b9 34 2d e8 1b 8f  9c 6f b3 c0 2b a3 48 46  |.E.4-....o..+.HF|\n-00000030  ce a5 6c b9 16 0f 26 ca  65 00 11 e3 6d ff 18 89  |..l...&.e...m...|\n-00000040  5d 0d 4a 94 1b a5 c7 35  59 72 a8 2d 08 01 e2 5e  |].J....5Yr.-...^|\n-00000050  d8 12 2d f6 6c d2 0a b1  df d2 5a 13 5c 29 fb 59  |..-.l.....Z.\\).Y|\n-00000060  fc 2a 77 81 73 dd 86 4a  00 8c 61 a0 e4 b3 ae 6e  |.*w.s..J..a....n|\n-00000070  7a 59 bf a2 61 7d 10 ca  4b a0 b3 70 b0 0b 77 09  |zY..a}..K..p..w.|\n-00000080  6c 6c 3c b5 b0 65 4a 35  de c5 88 f0 17 b1 4a 14  |ll<..eJ5......J.|\n-00000090  03 03 00 01 01 16 03 03  00 28 4a d7 fe 68 74 b5  |.........(J..ht.|\n-000000a0  3d 9d 40 33 2a 96 4e 60  d6 d0 ae 2a c5 c8 51 f5  |=.@3*.N`...*..Q.|\n-000000b0  aa 54 9b b4 99 56 a4 fe  06 5b 94 6a be 9b aa fa  |.T...V...[.j....|\n-000000c0  15 83                                             |..|\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 4e f2 1d 1f  |............N...|\n+00000010  c0 23 cf 00 58 0b 25 ee  6b e1 5f 50 7b c9 15 9d  |.#..X.%.k._P{...|\n+00000020  d9 2f 8a f1 b8 7b 62 d2  6d d0 46 b8 6f 3f 2d 6f  |./...{b.m.F.o?-o|\n+00000030  ba 68 74 7e a3 b5 12 1c  93 d1 0a 13 e1 50 d7 82  |.ht~.........P..|\n+00000040  1b 4c 54 b5 73 a9 9e 72  80 4e bc 75 17 00 e1 f3  |.LT.s..r.N.u....|\n+00000050  70 03 80 1f d3 1f 2a 53  52 6a ee 4e 93 f4 10 1c  |p.....*SRj.N....|\n+00000060  2d ff 5f 6c a4 3b fa a1  7f 87 93 5d 76 b3 35 62  |-._l.;.....]v.5b|\n+00000070  0b 48 41 42 f9 57 65 4a  42 9e 53 7d 2c 09 37 02  |.HAB.WeJB.S},.7.|\n+00000080  55 bd 6f 0e 4d 05 17 8d  c5 df ff 54 da 94 d6 14  |U.o.M......T....|\n+00000090  03 03 00 01 01 16 03 03  00 28 38 e3 ad 08 8e e3  |.........(8.....|\n+000000a0  b8 bc 6d a2 15 35 b1 b2  28 47 82 63 30 9e b6 5c  |..m..5..(G.c0..\\|\n+000000b0  26 47 38 20 a0 77 e3 b2  38 8f 8b c4 96 ac f4 5c  |&G8 .w..8......\\|\n+000000c0  10 9f                                             |..|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 28 00 00 00 00 00  |..........(.....|\n-00000010  00 00 00 dc 64 82 fd 0e  fc b5 a4 e0 7b 8d 62 69  |....d.......{.bi|\n-00000020  6e 03 35 a6 6b 0e 19 53  7e 87 e5 fe 7b 78 e6 27  |n.5.k..S~...{x.'|\n-00000030  fa 31 7d 17 03 03 00 25  00 00 00 00 00 00 00 01  |.1}....%........|\n-00000040  8e 5d 8d 1c a1 07 a4 ed  d1 e2 35 28 d3 8d 47 ec  |.]........5(..G.|\n-00000050  d2 67 31 c2 88 5c 23 f8  6b d1 bd a9 0b 15 03 03  |.g1..\\#.k.......|\n-00000060  00 1a 00 00 00 00 00 00  00 02 3e 14 30 85 89 e0  |..........>.0...|\n-00000070  19 3c 0a dc 80 3f c1 28  65 12 f7 38              |.<...?.(e..8|\n+00000010  00 00 00 30 ae 4d 36 49  d1 d6 4d 1a 71 87 eb ed  |...0.M6I..M.q...|\n+00000020  d2 6f 66 3f 25 03 a5 69  04 5d ca e6 71 eb c2 06  |.of?%..i.]..q...|\n+00000030  b4 15 b7 17 03 03 00 25  00 00 00 00 00 00 00 01  |.......%........|\n+00000040  8d a6 27 08 34 77 a2 a7  f5 e6 c3 ca 49 25 db 9a  |..'.4w......I%..|\n+00000050  19 44 42 d1 0b c1 3a d6  73 b2 11 df 52 15 03 03  |.DB...:.s...R...|\n+00000060  00 1a 00 00 00 00 00 00  00 02 42 63 43 f7 98 69  |..........BcC..i|\n+00000070  d9 2b 38 6b 88 9d bf a2  8a 31 5d 54              |.+8k.....1]T|"}, {"sha": "b703a8f766c28ebc11b8d4a563b439206eba2eee", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-RC4", "status": "modified", "additions": 74, "deletions": 73, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-RC4?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,78 +1,79 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 36  |....]...Y..R.w.6|\n-00000010  6c 14 4d a5 96 7f 9f 63  56 81 2f ef 2b e8 4c 9d  |l.M....cV./.+.L.|\n-00000020  04 92 ba 6c 99 29 47 f3  b5 22 46 00 00 04 00 05  |...l.)G..\"F.....|\n-00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n-00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n-00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n-00000060  01 01                                             |..|\n+00000000  16 03 01 00 5c 01 00 00  58 03 03 52 cc 57 59 c9  |....\\...X..R.WY.|\n+00000010  c3 13 fc 18 8a ee c2 0e  88 ff fb 4a 16 f2 eb eb  |...........J....|\n+00000020  d4 f8 b3 5b cd bb 25 0e  0b cb 48 00 00 04 00 05  |...[..%...H.....|\n+00000030  00 ff 01 00 00 2b 00 0d  00 22 00 20 06 01 06 02  |.....+...\". ....|\n+00000040  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01  |................|\n+00000050  03 02 03 03 02 01 02 02  02 03 01 01 00 0f 00 01  |................|\n+00000060  01                                                |.|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n-00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n-00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n-00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n-00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n-00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n-00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n-00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n-000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n-000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n-000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n-000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n-000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n-000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n-00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n-00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n-00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n-00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n-00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n-00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n-00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n-00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n-00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n-00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n-000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n-000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n-000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n-000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n-000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n-000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n-00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n-00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n-00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n-00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n-00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n-00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n-00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n-00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n-00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n-00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n-000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n-000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n-000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n-000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n-000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n-000002f0  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 86 10 00 00  82 00 80 91 75 8a cc 25  |............u..%|\n-00000010  6e 5e c5 ce 1b a8 1d fc  ed 80 08 1a e2 fb 04 12  |n^..............|\n-00000020  00 fb 52 d2 92 b0 0b 42  8a f2 66 11 fc 31 91 1c  |..R....B..f..1..|\n-00000030  28 5a 9a 62 12 84 f8 fb  8b 08 18 03 58 ec 5a 5c  |(Z.b........X.Z\\|\n-00000040  aa 71 69 e5 c2 a9 5d c3  06 d4 cb e5 58 01 be 6e  |.qi...].....X..n|\n-00000050  41 22 02 b2 71 52 d5 67  a2 fc 7c f2 f6 38 67 a3  |A\"..qR.g..|..8g.|\n-00000060  23 e0 21 7f b8 59 2c ca  7b 3f 8a ee 47 b2 ed 51  |#.!..Y,.{?..G..Q|\n-00000070  63 cd 04 8e 19 ac ca 97  13 fb c0 b8 30 82 58 22  |c...........0.X\"|\n-00000080  a8 30 31 7a ed 64 8e fc  10 53 f1 14 03 03 00 01  |.01z.d...S......|\n-00000090  01 16 03 03 00 24 7c 40  76 86 a1 2d 7a 0d 6a e0  |.....$|@v..-z.j.|\n-000000a0  be 52 1e a4 5c 8a 8a 41  b7 65 b8 98 09 fd 84 28  |.R..\\..A.e.....(|\n-000000b0  31 2c b2 5f 25 dc fd 72  df 26                    |1,._%..r.&|\n+00000000  16 03 03 00 86 10 00 00  82 00 80 35 b3 60 ba 14  |...........5.`..|\n+00000010  5f 19 24 a0 24 de 4e 85  a9 64 78 3a 51 24 64 70  |_.$.$.N..dx:Q$dp|\n+00000020  88 55 6d c3 11 b8 d3 9f  bc 7a 33 f8 3c 48 93 2f  |.Um......z3.<H./|\n+00000030  66 69 11 33 39 37 7a 36  a3 1c ef b0 81 71 7d 25  |fi.397z6.....q}%|\n+00000040  35 da 2c 42 e2 ab d3 b7  07 8b 4a 0d 6d 77 bd ae  |5.,B......J.mw..|\n+00000050  02 51 7c a5 0d a6 03 4c  3c d0 ce 89 2c 83 6c de  |.Q|....L<...,.l.|\n+00000060  40 15 cc 72 c7 95 c8 6d  ee 05 86 da 3e c6 7c d4  |@..r...m....>.|.|\n+00000070  44 82 f4 24 03 22 40 00  64 27 53 15 41 8c 01 e9  |D..$.\"@.d'S.A...|\n+00000080  39 32 fa 8e 2d f9 b4 89  34 15 d6 14 03 03 00 01  |92..-...4.......|\n+00000090  01 16 03 03 00 24 f5 61  8b 24 bf b4 82 3a cf 49  |.....$.a.$...:.I|\n+000000a0  99 a0 b1 1b a7 a7 a3 92  7c 84 85 e0 64 a3 3d bd  |........|...d.=.|\n+000000b0  38 98 7d 97 a8 b9 2a 35  a9 09                    |8.}...*5..|\n >>> Flow 4 (server to client)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 6c 98 e2 1b ad  |..........$l....|\n-00000010  22 8b 5a 5a b7 95 5c be  2f 29 97 7f 05 54 59 6f  |\".ZZ..\\./)...TYo|\n-00000020  c6 91 98 ed 7a 81 eb 7f  5c 34 b8 f8 6d a4 da 17  |....z...\\4..m...|\n-00000030  03 03 00 21 4f d9 55 62  2a 4e fa 4e 28 8f 92 e2  |...!O.Ub*N.N(...|\n-00000040  22 50 14 21 ca 48 ba 71  2c 36 77 b6 92 eb 67 e2  |\"P.!.H.q,6w...g.|\n-00000050  ba 31 f4 4c 00 15 03 03  00 16 3f a2 64 b0 a9 ed  |.1.L......?.d...|\n-00000060  cf 5e b3 25 07 97 d9 1b  a5 04 e7 ff 8a 08 4f ff  |.^.%..........O.|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 c9 0b 84 e6 39  |..........$....9|\n+00000010  f2 e0 f3 ac 9f 0f 17 92  5f 6d de 94 18 c4 60 d9  |........_m....`.|\n+00000020  66 c3 0d 1a ae c2 8f 46  8f 7f f0 58 0e 4a 9b 17  |f......F...X.J..|\n+00000030  03 03 00 21 8b 73 a1 6a  7e d9 7e 4f 1d cc b2 7d  |...!.s.j~.~O...}|\n+00000040  3c 83 3f 52 f8 08 77 01  4c 65 11 6d 50 25 9a cc  |<.?R..w.Le.mP%..|\n+00000050  e3 54 27 72 59 15 03 03  00 16 3d c8 ab 14 51 fa  |.T'rY.....=...Q.|\n+00000060  97 f1 ef 5f b4 4f 44 58  d4 93 3b ae e5 61 1f a3  |..._.ODX..;..a..|"}, {"sha": "c495d4adc60f8bfd13103c6436dddd8498fee9d9", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-Resume", "status": "modified", "additions": 31, "deletions": 30, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-Resume", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-Resume", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-Resume?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,35 +1,36 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 e9 01 00 00  e5 03 03 52 ac 77 f8 65  |...........R.w.e|\n-00000010  60 65 1c ac 85 b1 4c d1  e0 5f 02 b0 22 80 c9 98  |`e....L.._..\"...|\n-00000020  af d9 43 87 0a e8 26 a3  d9 59 cc 20 76 ef 21 5d  |..C...&..Y. v.!]|\n-00000030  53 6c 8b 2e 11 a0 43 a8  af 74 8a 58 40 a5 95 ee  |Sl....C..t.X@...|\n-00000040  6d a9 ff e8 e4 d8 ba d2  88 ca 7f 0a 00 04 00 05  |m...............|\n-00000050  00 ff 02 01 00 00 97 00  23 00 68 00 00 00 00 00  |........#.h.....|\n-00000060  00 00 00 00 00 00 00 00  00 00 00 65 ea 4b d1 ef  |...........e.K..|\n-00000070  ba 11 a0 88 48 34 0d 3b  22 38 1e 62 c5 0a 33 b3  |....H4.;\"8.b..3.|\n-00000080  f0 65 ff fa c4 f3 a8 2d  24 75 55 e4 47 cc d2 6b  |.e.....-$uU.G..k|\n-00000090  8d 26 c6 d1 10 cc a2 48  29 c0 a1 a5 52 66 dc ec  |.&.....H)...Rf..|\n-000000a0  0b 59 23 02 5b 66 c3 af  88 27 f0 65 c0 72 de 1a  |.Y#.[f...'.e.r..|\n-000000b0  db cf 9b 5f e7 fe e8 2d  27 6f 67 fb 91 a1 46 70  |..._...-'og...Fp|\n-000000c0  b1 ce 29 00 0d 00 22 00  20 06 01 06 02 06 03 05  |..)...\". .......|\n-000000d0  01 05 02 05 03 04 01 04  02 04 03 03 01 03 02 03  |................|\n-000000e0  03 02 01 02 02 02 03 01  01 00 0f 00 01 01        |..............|\n+00000000  16 03 01 00 e8 01 00 00  e4 03 03 52 cc 57 59 c3  |...........R.WY.|\n+00000010  8b df 97 05 d8 5f 16 22  b4 b1 e7 cb 7d 2f 9b 58  |....._.\"....}/.X|\n+00000020  a3 f4 d7 2c a4 c1 9d 49  ed 4b ba 20 90 da 90 3e  |...,...I.K. ...>|\n+00000030  36 19 7a db 56 43 26 f7  dc 42 57 33 22 ed 9d a4  |6.z.VC&..BW3\"...|\n+00000040  9d 53 da f8 9d 4e 60 66  71 a0 2e 2e 00 04 00 05  |.S...N`fq.......|\n+00000050  00 ff 01 00 00 97 00 23  00 68 00 00 00 00 00 00  |.......#.h......|\n+00000060  00 00 00 00 00 00 00 00  00 00 65 ea 4b d1 ef ba  |..........e.K...|\n+00000070  06 38 1e e1 88 82 3a cd  03 ac 3b 39 0a e0 19 fd  |.8....:...;9....|\n+00000080  af 6c 57 30 df 31 6e f7  92 38 4b 5d 77 90 39 ff  |.lW0.1n..8K]w.9.|\n+00000090  32 51 f5 ed 12 d7 b0 7c  4d 6c c5 76 e4 72 48 3e  |2Q.....|Ml.v.rH>|\n+000000a0  59 23 fe 0d 15 df f4 ba  ea b9 67 16 23 8f 7d 15  |Y#........g.#.}.|\n+000000b0  b6 11 f1 ab d7 d4 cd a3  21 82 92 2a 12 cf 95 f3  |........!..*....|\n+000000c0  60 b2 00 0d 00 22 00 20  06 01 06 02 06 03 05 01  |`....\". ........|\n+000000d0  05 02 05 03 04 01 04 02  04 03 03 01 03 02 03 03  |................|\n+000000e0  02 01 02 02 02 03 01 01  00 0f 00 01 01           |.............|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 4a 02 00 00  46 03 03 00 00 00 00 00  |....J...F.......|\n+00000000  16 03 03 00 51 02 00 00  4d 03 03 00 00 00 00 00  |....Q...M.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 20 76 ef 21 5d  |........... v.!]|\n-00000030  53 6c 8b 2e 11 a0 43 a8  af 74 8a 58 40 a5 95 ee  |Sl....C..t.X@...|\n-00000040  6d a9 ff e8 e4 d8 ba d2  88 ca 7f 0a 00 05 00 14  |m...............|\n-00000050  03 03 00 01 01 16 03 03  00 24 37 d8 ed 9b cc 6d  |.........$7....m|\n-00000060  5f ce c0 40 68 4b 1f 45  ff 94 3a 98 ec c7 69 1c  |_..@hK.E..:...i.|\n-00000070  26 50 9e 3c 54 e6 da b6  5c 2e 48 66 1d 65        |&P.<T...\\.Hf.e|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 20 90 da 90 3e  |........... ...>|\n+00000030  36 19 7a db 56 43 26 f7  dc 42 57 33 22 ed 9d a4  |6.z.VC&..BW3\"...|\n+00000040  9d 53 da f8 9d 4e 60 66  71 a0 2e 2e 00 05 00 00  |.S...N`fq.......|\n+00000050  05 ff 01 00 01 00 14 03  03 00 01 01 16 03 03 00  |................|\n+00000060  24 11 12 ff 28 10 14 4c  e5 0e ad a7 fa f3 92 fb  |$...(..L........|\n+00000070  13 7d ae f2 b2 4a 6b a1  9e 67 cf a8 f7 8c 6f a0  |.}...Jk..g....o.|\n+00000080  6c 30 0e 18 55                                    |l0..U|\n >>> Flow 3 (client to server)\n-00000000  14 03 03 00 01 01 16 03  03 00 24 de 72 a3 15 54  |..........$.r..T|\n-00000010  7e 6d a0 ce 5c 38 5c f3  6f 49 00 ba fb c0 c2 cc  |~m..\\8\\.oI......|\n-00000020  6f 29 00 39 f9 bf 77 07  57 f1 e4 cf 6e 0c a3     |o).9..w.W...n..|\n+00000000  14 03 03 00 01 01 16 03  03 00 24 0d 46 41 8b 24  |..........$.FA.$|\n+00000010  36 01 a9 fd 8b ec fc e6  b1 83 96 df 0d 3e 53 54  |6............>ST|\n+00000020  58 b8 43 f2 a6 25 5e 1a  ae 19 9e d2 28 44 92     |X.C..%^.....(D.|\n >>> Flow 4 (server to client)\n-00000000  17 03 03 00 21 b0 e7 1c  af 33 cd 5e ad 24 cf a4  |....!....3.^.$..|\n-00000010  51 99 1a f6 65 1e f3 28  ec 83 93 25 3d 8f f9 57  |Q...e..(...%=..W|\n-00000020  cb ec 1f 4a 47 77 15 03  03 00 16 2b 87 cb 08 f7  |...JGw.....+....|\n-00000030  51 08 3b c9 73 f4 1f 22  ac 8c 7c 1a 2e 43 84 d7  |Q.;.s..\"..|..C..|\n-00000040  ef                                                |.|\n+00000000  17 03 03 00 21 c4 fb f6  53 bb 3e 04 cc 0b a0 03  |....!...S.>.....|\n+00000010  fa 49 96 da b5 8d b2 f2  e5 d8 f3 5c 27 57 4f 9c  |.I.........\\'WO.|\n+00000020  30 00 34 fc 52 92 15 03  03 00 16 a3 02 7a 50 d2  |0.4.R........zP.|\n+00000030  c6 b3 fc 69 8f e4 94 ae  ab 22 ad 05 1d 15 69 b9  |...i.....\"....i.|\n+00000040  a5                                                |.|"}, {"sha": "61b17a11da2b2e63f8e83b4e628134001b57d9e3", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-SNI", "status": "modified", "additions": 68, "deletions": 67, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-SNI", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-SNI", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-SNI?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1,75 +1,76 @@\n >>> Flow 1 (client to server)\n-00000000  16 03 01 00 71 01 00 00  6d 03 03 52 ac 77 f8 8f  |....q...m..R.w..|\n-00000010  99 4f 1f b2 b1 8e c1 fe  52 04 d7 2f 45 db 34 55  |.O......R../E.4U|\n-00000020  ca d1 ae 94 68 05 5d ae  7f 34 ae 00 00 04 00 2f  |....h.]..4...../|\n-00000030  00 ff 02 01 00 00 3f 00  00 00 10 00 0e 00 00 0b  |......?.........|\n-00000040  73 6e 69 74 65 73 74 2e  63 6f 6d 00 0d 00 22 00  |snitest.com...\".|\n-00000050  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n-00000060  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n-00000070  01 00 0f 00 01 01                                 |......|\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 52 cc 57 59 2d  |....p...l..R.WY-|\n+00000010  77 aa 75 35 fa ff 2a a2  bf 91 5e e3 7f 38 7d 7a  |w.u5..*...^..8}z|\n+00000020  e3 93 d3 e8 8b 09 bb 06  c8 6d 91 00 00 04 00 2f  |.........m...../|\n+00000030  00 ff 01 00 00 3f 00 00  00 10 00 0e 00 00 0b 73  |.....?.........s|\n+00000040  6e 69 74 65 73 74 2e 63  6f 6d 00 0d 00 22 00 20  |nitest.com...\". |\n+00000050  06 01 06 02 06 03 05 01  05 02 05 03 04 01 04 02  |................|\n+00000060  04 03 03 01 03 02 03 03  02 01 02 02 02 03 01 01  |................|\n+00000070  00 0f 00 01 01                                    |.....|\n >>> Flow 2 (server to client)\n-00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n-00000030  03 03 02 00 0b 00 01 fc  00 01 f9 00 01 f6 30 82  |..............0.|\n-00000040  01 f2 30 82 01 5d a0 03  02 01 02 02 01 00 30 0b  |..0..]........0.|\n-00000050  06 09 2a 86 48 86 f7 0d  01 01 05 30 28 31 10 30  |..*.H......0(1.0|\n-00000060  0e 06 03 55 04 0a 13 07  41 63 6d 65 20 43 6f 31  |...U....Acme Co1|\n-00000070  14 30 12 06 03 55 04 03  13 0b 73 6e 69 74 65 73  |.0...U....snites|\n-00000080  74 2e 63 6f 6d 30 1e 17  0d 31 32 30 34 31 31 31  |t.com0...1204111|\n-00000090  37 34 30 33 35 5a 17 0d  31 33 30 34 31 31 31 37  |74035Z..13041117|\n-000000a0  34 35 33 35 5a 30 28 31  10 30 0e 06 03 55 04 0a  |4535Z0(1.0...U..|\n-000000b0  13 07 41 63 6d 65 20 43  6f 31 14 30 12 06 03 55  |..Acme Co1.0...U|\n-000000c0  04 03 13 0b 73 6e 69 74  65 73 74 2e 63 6f 6d 30  |....snitest.com0|\n-000000d0  81 9d 30 0b 06 09 2a 86  48 86 f7 0d 01 01 01 03  |..0...*.H.......|\n-000000e0  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n-000000f0  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n-00000100  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n-00000110  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n-00000120  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n-00000130  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n-00000140  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n-00000150  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n-00000160  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n-00000170  32 30 30 30 0e 06 03 55  1d 0f 01 01 ff 04 04 03  |2000...U........|\n-00000180  02 00 a0 30 0d 06 03 55  1d 0e 04 06 04 04 01 02  |...0...U........|\n-00000190  03 04 30 0f 06 03 55 1d  23 04 08 30 06 80 04 01  |..0...U.#..0....|\n-000001a0  02 03 04 30 0b 06 09 2a  86 48 86 f7 0d 01 01 05  |...0...*.H......|\n-000001b0  03 81 81 00 89 c6 45 5f  1c 1f 5e f8 eb 1a b1 74  |......E_..^....t|\n-000001c0  ee 24 39 05 9f 5c 42 59  bb 1a 8d 86 cd b1 d0 56  |.$9..\\BY.......V|\n-000001d0  f5 6a 71 7d a4 0e 95 ab  90 f5 9e 8d ea f6 27 c1  |.jq}..........'.|\n-000001e0  57 99 50 94 db 08 02 26  6e b3 4f c6 84 2d ea 8a  |W.P....&n.O..-..|\n-000001f0  4b 68 d9 c1 38 91 03 ab  84 fb 9e 1f 85 d9 b5 d2  |Kh..8...........|\n-00000200  3f f2 31 2c 86 70 fb b5  40 14 82 45 a4 eb af e2  |?.1,.p..@..E....|\n-00000210  64 d9 0c 8a 4c f4 f8 5b  0f ac 12 ac 2f c4 a3 15  |d...L..[..../...|\n-00000220  4b ad 52 46 28 68 af 96  c6 2c 65 25 d6 52 b6 e3  |K.RF(h...,e%.R..|\n-00000230  18 45 bd cc 16 03 03 00  04 0e 00 00 00           |.E...........|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 00  |............./..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 00 0b 00 01 fc 00  |................|\n+00000040  01 f9 00 01 f6 30 82 01  f2 30 82 01 5d a0 03 02  |.....0...0..]...|\n+00000050  01 02 02 01 00 30 0b 06  09 2a 86 48 86 f7 0d 01  |.....0...*.H....|\n+00000060  01 05 30 28 31 10 30 0e  06 03 55 04 0a 13 07 41  |..0(1.0...U....A|\n+00000070  63 6d 65 20 43 6f 31 14  30 12 06 03 55 04 03 13  |cme Co1.0...U...|\n+00000080  0b 73 6e 69 74 65 73 74  2e 63 6f 6d 30 1e 17 0d  |.snitest.com0...|\n+00000090  31 32 30 34 31 31 31 37  34 30 33 35 5a 17 0d 31  |120411174035Z..1|\n+000000a0  33 30 34 31 31 31 37 34  35 33 35 5a 30 28 31 10  |30411174535Z0(1.|\n+000000b0  30 0e 06 03 55 04 0a 13  07 41 63 6d 65 20 43 6f  |0...U....Acme Co|\n+000000c0  31 14 30 12 06 03 55 04  03 13 0b 73 6e 69 74 65  |1.0...U....snite|\n+000000d0  73 74 2e 63 6f 6d 30 81  9d 30 0b 06 09 2a 86 48  |st.com0..0...*.H|\n+000000e0  86 f7 0d 01 01 01 03 81  8d 00 30 81 89 02 81 81  |..........0.....|\n+000000f0  00 bb 79 d6 f5 17 b5 e5  bf 46 10 d0 dc 69 be e6  |..y......F...i..|\n+00000100  2b 07 43 5a d0 03 2d 8a  7a 43 85 b7 14 52 e7 a5  |+.CZ..-.zC...R..|\n+00000110  65 4c 2c 78 b8 23 8c b5  b4 82 e5 de 1f 95 3b 7e  |eL,x.#........;~|\n+00000120  62 a5 2c a5 33 d6 fe 12  5c 7a 56 fc f5 06 bf fa  |b.,.3...\\zV.....|\n+00000130  58 7b 26 3f b5 cd 04 d3  d0 c9 21 96 4a c7 f4 54  |X{&?......!.J..T|\n+00000140  9f 5a bf ef 42 71 00 fe  18 99 07 7f 7e 88 7d 7d  |.Z..Bq......~.}}|\n+00000150  f1 04 39 c4 a2 2e db 51  c9 7c e3 c0 4c 3b 32 66  |..9....Q.|..L;2f|\n+00000160  01 cf af b1 1d b8 71 9a  1d db db 89 6b ae da 2d  |......q.....k..-|\n+00000170  79 02 03 01 00 01 a3 32  30 30 30 0e 06 03 55 1d  |y......2000...U.|\n+00000180  0f 01 01 ff 04 04 03 02  00 a0 30 0d 06 03 55 1d  |..........0...U.|\n+00000190  0e 04 06 04 04 01 02 03  04 30 0f 06 03 55 1d 23  |.........0...U.#|\n+000001a0  04 08 30 06 80 04 01 02  03 04 30 0b 06 09 2a 86  |..0.......0...*.|\n+000001b0  48 86 f7 0d 01 01 05 03  81 81 00 89 c6 45 5f 1c  |H............E_.|\n+000001c0  1f 5e f8 eb 1a b1 74 ee  24 39 05 9f 5c 42 59 bb  |.^....t.$9..\\BY.|\n+000001d0  1a 8d 86 cd b1 d0 56 f5  6a 71 7d a4 0e 95 ab 90  |......V.jq}.....|\n+000001e0  f5 9e 8d ea f6 27 c1 57  99 50 94 db 08 02 26 6e  |.....'.W.P....&n|\n+000001f0  b3 4f c6 84 2d ea 8a 4b  68 d9 c1 38 91 03 ab 84  |.O..-..Kh..8....|\n+00000200  fb 9e 1f 85 d9 b5 d2 3f  f2 31 2c 86 70 fb b5 40  |.......?.1,.p..@|\n+00000210  14 82 45 a4 eb af e2 64  d9 0c 8a 4c f4 f8 5b 0f  |..E....d...L..[.|\n+00000220  ac 12 ac 2f c4 a3 15 4b  ad 52 46 28 68 af 96 c6  |.../...K.RF(h...|\n+00000230  2c 65 25 d6 52 b6 e3 18  45 bd cc 16 03 03 00 04  |,e%.R...E.......|\n+00000240  0e 00 00 00                                       |....|\n >>> Flow 3 (client to server)\n-00000000  16 03 03 00 86 10 00 00  82 00 80 53 d9 f6 6b 66  |...........S..kf|\n-00000010  c8 ef e0 90 72 b4 57 ab  a0 21 1f 2b d1 da 50 6d  |....r.W..!.+..Pm|\n-00000020  fc 0b bb 45 1b 5c f3 44  d3 a3 45 7f 2f ef 5c 46  |...E.\\.D..E./.\\F|\n-00000030  d5 39 eb 28 1d bb 25 af  34 f3 f8 d3 0d c3 6f a2  |.9.(..%.4.....o.|\n-00000040  c9 fc 2c 87 9e 9e 1e 73  6f 9f f2 bc 9d 03 c3 80  |..,....so.......|\n-00000050  fa c5 52 70 5a 5e 64 89  bb 90 ba c3 e5 93 bc 65  |..RpZ^d........e|\n-00000060  47 f6 7e f2 9c 0e 4c 8d  a7 b9 d0 51 09 b3 51 53  |G.~...L....Q..QS|\n-00000070  39 12 4e f4 ed a0 39 27  d5 5f a3 cc f2 d3 05 73  |9.N...9'._.....s|\n-00000080  49 d8 09 c3 1d 03 c8 1f  13 12 75 14 03 03 00 01  |I.........u.....|\n-00000090  01 16 03 03 00 40 c4 16  cc fe ae db 1c dd eb 8e  |.....@..........|\n-000000a0  97 ca ce 6d 88 de 64 81  91 4f 92 fe 77 50 03 77  |...m..d..O..wP.w|\n-000000b0  86 31 4c b7 e7 ed 10 7a  61 b3 b0 06 7b 01 70 e4  |.1L....za...{.p.|\n-000000c0  7f 04 37 f1 24 14 4f b3  32 0c 04 0d e0 90 aa ec  |..7.$.O.2.......|\n-000000d0  47 8f 2d 3e cf c8                                 |G.->..|\n+00000000  16 03 03 00 86 10 00 00  82 00 80 0d f2 bf 75 a9  |..............u.|\n+00000010  aa db f3 25 55 d4 20 59  63 54 d1 70 82 f9 61 c5  |...%U. YcT.p..a.|\n+00000020  b7 ae 3f 75 71 75 9d c5  01 a1 ed b1 07 66 9f 3f  |..?uqu.......f.?|\n+00000030  cf c6 e6 ad 44 03 fd 18  6f 53 24 ce 76 01 bd fe  |....D...oS$.v...|\n+00000040  e2 51 f7 df 8a 23 3a 21  c4 00 15 ff d0 e0 ff c8  |.Q...#:!........|\n+00000050  8b 89 33 c6 8e e0 ce 97  ef b4 c6 f9 b0 ea 38 89  |..3...........8.|\n+00000060  79 98 34 9e f7 bc c6 fd  d2 5d 56 84 5c d2 9a ce  |y.4......]V.\\...|\n+00000070  ae de 09 bc 24 25 fc 09  0c bc 0e 91 0d 6b 36 ae  |....$%.......k6.|\n+00000080  ce 6b cd 14 ec b6 3c fa  d6 df fc 14 03 03 00 01  |.k....<.........|\n+00000090  01 16 03 03 00 40 ad 21  13 2b 33 7a 4a 0d fb 0f  |.....@.!.+3zJ...|\n+000000a0  eb d2 b6 85 29 1f 59 79  ba 86 53 5c 68 b4 c7 e3  |....).Yy..S\\h...|\n+000000b0  8a 6c 5c 18 04 4d e4 76  19 30 ba 92 b4 79 8c 64  |.l\\..M.v.0...y.d|\n+000000c0  00 a0 2e 13 96 45 9f e7  a9 e4 23 9e 9f 89 23 26  |.....E....#...#&|\n+000000d0  36 20 82 fc 75 fe                                 |6 ..u.|\n >>> Flow 4 (server to client)\n 00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n-00000010  00 00 00 00 00 00 00 00  00 00 00 f7 24 2c f6 09  |............$,..|\n-00000020  46 72 c8 41 83 e4 1b fe  6b 6e 5d b1 a0 40 07 9f  |Fr.A....kn]..@..|\n-00000030  f5 45 a2 bc 12 1c cd 0c  da ac 13 c0 3d 72 fb 02  |.E..........=r..|\n-00000040  70 d6 cd 6e 5b 43 16 c4  c4 cd 6b 17 03 03 00 40  |p..n[C....k....@|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 b7 87 61 10 03  |.............a..|\n+00000020  b8 a4 42 d4 8b 49 bc 40  80 70 92 c8 25 b0 c6 7f  |..B..I.@.p..%...|\n+00000030  b3 87 76 50 5a 59 b3 3c  d8 3e 23 24 aa 1a f3 36  |..vPZY.<.>#$...6|\n+00000040  c9 2c 87 c1 22 d2 94 f8  2c fd ef 17 03 03 00 40  |.,..\"...,......@|\n 00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n-00000060  73 ec e3 ba 42 c5 3f 17  9a 04 98 78 23 3e 8a d2  |s...B.?....x#>..|\n-00000070  5c b2 6a 0b 4a 1d 6a db  4d 98 89 ba 99 36 51 bc  |\\.j.J.j.M....6Q.|\n-00000080  7b 12 83 28 62 c7 26 dc  04 d4 79 49 f3 08 2a 1d  |{..(b.&...yI..*.|\n+00000060  e5 7f bd 3e ff 9f d4 1b  91 02 f8 69 6f 70 9d 51  |...>.......iop.Q|\n+00000070  a5 ec ef 5b 10 3f 4e 3f  44 e5 9a 39 68 7c 3a b9  |...[.?N?D..9h|:.|\n+00000080  69 38 31 ec 9c 45 bf 19  d1 5c 5e 2e 06 00 ca 19  |i81..E...\\^.....|\n 00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n-000000a0  00 00 00 00 00 72 b0 8e  3b 7d 3f 74 fd 65 7a 32  |.....r..;}?t.ez2|\n-000000b0  6a 3b 7f e9 75 84 a9 87  81 2f f6 08 ea 42 31 55  |j;..u..../...B1U|\n-000000c0  78 82 f0 cc 89                                    |x....|\n+000000a0  00 00 00 00 00 63 5e 79  2c f2 05 dc 2b d7 5b ac  |.....c^y,...+.[.|\n+000000b0  9d fc 75 94 03 16 ca 1f  b2 75 58 2d f1 2f f1 1e  |..u......uX-./..|\n+000000c0  d2 f6 84 8f 2e                                    |.....|"}, {"sha": "40156a0013bc9fb982d2cd143d57c2759232f6e7", "filename": "libgo/go/crypto/tls/tls.go", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftls.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Ftls%2Ftls.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftls.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -27,9 +27,8 @@ func Server(conn net.Conn, config *Config) *Conn {\n \n // Client returns a new TLS client side connection\n // using conn as the underlying transport.\n-// Client interprets a nil configuration as equivalent to\n-// the zero configuration; see the documentation of Config\n-// for the defaults.\n+// The config cannot be nil: users must set either ServerHostname or\n+// InsecureSkipVerify in the config.\n func Client(conn net.Conn, config *Config) *Conn {\n \treturn &Conn{conn: conn, config: config, isClient: true}\n }"}, {"sha": "58c1e54d1004cc5b6a1ee40d1e2c1c45cb76d93c", "filename": "libgo/go/crypto/x509/pkix/pkix.go", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Fpkix%2Fpkix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Fpkix%2Fpkix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fpkix%2Fpkix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -30,6 +30,13 @@ type AttributeTypeAndValue struct {\n \tValue interface{}\n }\n \n+// AttributeTypeAndValueSET represents a set of ASN.1 sequences of\n+// AttributeTypeAndValue sequences from RFC 2986 (PKCS #10).\n+type AttributeTypeAndValueSET struct {\n+\tType  asn1.ObjectIdentifier\n+\tValue [][]AttributeTypeAndValue `asn1:\"set\"`\n+}\n+\n // Extension represents the ASN.1 structure of the same name. See RFC\n // 5280, section 4.2.\n type Extension struct {"}, {"sha": "a5bd19e821695d6352a00f2ecf2d428b6f6a129b", "filename": "libgo/go/crypto/x509/root_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build dragonfly freebsd linux openbsd netbsd\n+// +build dragonfly freebsd linux openbsd netbsd solaris\n \n package x509\n "}, {"sha": "3570e02359e804bce6b3c77350e467ef749b4dff", "filename": "libgo/go/crypto/x509/x509.go", "status": "modified", "additions": 454, "deletions": 113, "changes": 567, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -790,6 +790,58 @@ func parsePublicKey(algo PublicKeyAlgorithm, keyData *publicKeyInfo) (interface{\n \t}\n }\n \n+func parseSANExtension(value []byte) (dnsNames, emailAddresses []string, ipAddresses []net.IP, err error) {\n+\t// RFC 5280, 4.2.1.6\n+\n+\t// SubjectAltName ::= GeneralNames\n+\t//\n+\t// GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n+\t//\n+\t// GeneralName ::= CHOICE {\n+\t//      otherName                       [0]     OtherName,\n+\t//      rfc822Name                      [1]     IA5String,\n+\t//      dNSName                         [2]     IA5String,\n+\t//      x400Address                     [3]     ORAddress,\n+\t//      directoryName                   [4]     Name,\n+\t//      ediPartyName                    [5]     EDIPartyName,\n+\t//      uniformResourceIdentifier       [6]     IA5String,\n+\t//      iPAddress                       [7]     OCTET STRING,\n+\t//      registeredID                    [8]     OBJECT IDENTIFIER }\n+\tvar seq asn1.RawValue\n+\tif _, err = asn1.Unmarshal(value, &seq); err != nil {\n+\t\treturn\n+\t}\n+\tif !seq.IsCompound || seq.Tag != 16 || seq.Class != 0 {\n+\t\terr = asn1.StructuralError{Msg: \"bad SAN sequence\"}\n+\t\treturn\n+\t}\n+\n+\trest := seq.Bytes\n+\tfor len(rest) > 0 {\n+\t\tvar v asn1.RawValue\n+\t\trest, err = asn1.Unmarshal(rest, &v)\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\tswitch v.Tag {\n+\t\tcase 1:\n+\t\t\temailAddresses = append(emailAddresses, string(v.Bytes))\n+\t\tcase 2:\n+\t\t\tdnsNames = append(dnsNames, string(v.Bytes))\n+\t\tcase 7:\n+\t\t\tswitch len(v.Bytes) {\n+\t\t\tcase net.IPv4len, net.IPv6len:\n+\t\t\t\tipAddresses = append(ipAddresses, v.Bytes)\n+\t\t\tdefault:\n+\t\t\t\terr = errors.New(\"x509: certificate contained IP address of length \" + strconv.Itoa(len(v.Bytes)))\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn\n+}\n+\n func parseCertificate(in *certificate) (*Certificate, error) {\n \tout := new(Certificate)\n \tout.Raw = in.Raw\n@@ -863,58 +915,12 @@ func parseCertificate(in *certificate) (*Certificate, error) {\n \t\t\t\t\tcontinue\n \t\t\t\t}\n \t\t\tcase 17:\n-\t\t\t\t// RFC 5280, 4.2.1.6\n-\n-\t\t\t\t// SubjectAltName ::= GeneralNames\n-\t\t\t\t//\n-\t\t\t\t// GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n-\t\t\t\t//\n-\t\t\t\t// GeneralName ::= CHOICE {\n-\t\t\t\t//      otherName                       [0]     OtherName,\n-\t\t\t\t//      rfc822Name                      [1]     IA5String,\n-\t\t\t\t//      dNSName                         [2]     IA5String,\n-\t\t\t\t//      x400Address                     [3]     ORAddress,\n-\t\t\t\t//      directoryName                   [4]     Name,\n-\t\t\t\t//      ediPartyName                    [5]     EDIPartyName,\n-\t\t\t\t//      uniformResourceIdentifier       [6]     IA5String,\n-\t\t\t\t//      iPAddress                       [7]     OCTET STRING,\n-\t\t\t\t//      registeredID                    [8]     OBJECT IDENTIFIER }\n-\t\t\t\tvar seq asn1.RawValue\n-\t\t\t\t_, err := asn1.Unmarshal(e.Value, &seq)\n+\t\t\t\tout.DNSNames, out.EmailAddresses, out.IPAddresses, err = parseSANExtension(e.Value)\n \t\t\t\tif err != nil {\n \t\t\t\t\treturn nil, err\n \t\t\t\t}\n-\t\t\t\tif !seq.IsCompound || seq.Tag != 16 || seq.Class != 0 {\n-\t\t\t\t\treturn nil, asn1.StructuralError{Msg: \"bad SAN sequence\"}\n-\t\t\t\t}\n-\n-\t\t\t\tparsedName := false\n \n-\t\t\t\trest := seq.Bytes\n-\t\t\t\tfor len(rest) > 0 {\n-\t\t\t\t\tvar v asn1.RawValue\n-\t\t\t\t\trest, err = asn1.Unmarshal(rest, &v)\n-\t\t\t\t\tif err != nil {\n-\t\t\t\t\t\treturn nil, err\n-\t\t\t\t\t}\n-\t\t\t\t\tswitch v.Tag {\n-\t\t\t\t\tcase 1:\n-\t\t\t\t\t\tout.EmailAddresses = append(out.EmailAddresses, string(v.Bytes))\n-\t\t\t\t\t\tparsedName = true\n-\t\t\t\t\tcase 2:\n-\t\t\t\t\t\tout.DNSNames = append(out.DNSNames, string(v.Bytes))\n-\t\t\t\t\t\tparsedName = true\n-\t\t\t\t\tcase 7:\n-\t\t\t\t\t\tswitch len(v.Bytes) {\n-\t\t\t\t\t\tcase net.IPv4len, net.IPv6len:\n-\t\t\t\t\t\t\tout.IPAddresses = append(out.IPAddresses, v.Bytes)\n-\t\t\t\t\t\tdefault:\n-\t\t\t\t\t\t\treturn nil, errors.New(\"x509: certificate contained IP address of length \" + strconv.Itoa(len(v.Bytes)))\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\n-\t\t\t\tif parsedName {\n+\t\t\t\tif len(out.DNSNames) > 0 || len(out.EmailAddresses) > 0 || len(out.IPAddresses) > 0 {\n \t\t\t\t\tcontinue\n \t\t\t\t}\n \t\t\t\t// If we didn't parse any of the names then we\n@@ -1151,6 +1157,27 @@ func oidInExtensions(oid asn1.ObjectIdentifier, extensions []pkix.Extension) boo\n \treturn false\n }\n \n+// marshalSANs marshals a list of addresses into a the contents of an X.509\n+// SubjectAlternativeName extension.\n+func marshalSANs(dnsNames, emailAddresses []string, ipAddresses []net.IP) (derBytes []byte, err error) {\n+\tvar rawValues []asn1.RawValue\n+\tfor _, name := range dnsNames {\n+\t\trawValues = append(rawValues, asn1.RawValue{Tag: 2, Class: 2, Bytes: []byte(name)})\n+\t}\n+\tfor _, email := range emailAddresses {\n+\t\trawValues = append(rawValues, asn1.RawValue{Tag: 1, Class: 2, Bytes: []byte(email)})\n+\t}\n+\tfor _, rawIP := range ipAddresses {\n+\t\t// If possible, we always want to encode IPv4 addresses in 4 bytes.\n+\t\tip := rawIP.To4()\n+\t\tif ip == nil {\n+\t\t\tip = rawIP\n+\t\t}\n+\t\trawValues = append(rawValues, asn1.RawValue{Tag: 7, Class: 2, Bytes: ip})\n+\t}\n+\treturn asn1.Marshal(rawValues)\n+}\n+\n func buildExtensions(template *Certificate) (ret []pkix.Extension, err error) {\n \tret = make([]pkix.Extension, 10 /* maximum number of elements. */)\n \tn := 0\n@@ -1252,22 +1279,7 @@ func buildExtensions(template *Certificate) (ret []pkix.Extension, err error) {\n \tif (len(template.DNSNames) > 0 || len(template.EmailAddresses) > 0 || len(template.IPAddresses) > 0) &&\n \t\t!oidInExtensions(oidExtensionSubjectAltName, template.ExtraExtensions) {\n \t\tret[n].Id = oidExtensionSubjectAltName\n-\t\tvar rawValues []asn1.RawValue\n-\t\tfor _, name := range template.DNSNames {\n-\t\t\trawValues = append(rawValues, asn1.RawValue{Tag: 2, Class: 2, Bytes: []byte(name)})\n-\t\t}\n-\t\tfor _, email := range template.EmailAddresses {\n-\t\t\trawValues = append(rawValues, asn1.RawValue{Tag: 1, Class: 2, Bytes: []byte(email)})\n-\t\t}\n-\t\tfor _, rawIP := range template.IPAddresses {\n-\t\t\t// If possible, we always want to encode IPv4 addresses in 4 bytes.\n-\t\t\tip := rawIP.To4()\n-\t\t\tif ip == nil {\n-\t\t\t\tip = rawIP\n-\t\t\t}\n-\t\t\trawValues = append(rawValues, asn1.RawValue{Tag: 7, Class: 2, Bytes: ip})\n-\t\t}\n-\t\tret[n].Value, err = asn1.Marshal(rawValues)\n+\t\tret[n].Value, err = marshalSANs(template.DNSNames, template.EmailAddresses, template.IPAddresses)\n \t\tif err != nil {\n \t\t\treturn\n \t\t}\n@@ -1342,75 +1354,94 @@ func subjectBytes(cert *Certificate) ([]byte, error) {\n \treturn asn1.Marshal(cert.Subject.ToRDNSequence())\n }\n \n-// CreateCertificate creates a new certificate based on a template. The\n-// following members of template are used: SerialNumber, Subject, NotBefore,\n-// NotAfter, KeyUsage, ExtKeyUsage, UnknownExtKeyUsage, BasicConstraintsValid,\n-// IsCA, MaxPathLen, SubjectKeyId, DNSNames, PermittedDNSDomainsCritical,\n-// PermittedDNSDomains, SignatureAlgorithm.\n-//\n-// The certificate is signed by parent. If parent is equal to template then the\n-// certificate is self-signed. The parameter pub is the public key of the\n-// signee and priv is the private key of the signer.\n-//\n-// The returned slice is the certificate in DER encoding.\n-//\n-// The only supported key types are RSA and ECDSA (*rsa.PublicKey or\n-// *ecdsa.PublicKey for pub, *rsa.PrivateKey or *ecdsa.PrivateKey for priv).\n-func CreateCertificate(rand io.Reader, template, parent *Certificate, pub interface{}, priv interface{}) (cert []byte, err error) {\n-\tvar publicKeyBytes []byte\n-\tvar publicKeyAlgorithm pkix.AlgorithmIdentifier\n-\n-\tif publicKeyBytes, publicKeyAlgorithm, err = marshalPublicKey(pub); err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\tvar signatureAlgorithm pkix.AlgorithmIdentifier\n-\tvar hashFunc crypto.Hash\n-\tvar privType PublicKeyAlgorithm\n+// signingParamsForPrivateKey returns the parameters to use for signing with\n+// priv. If requestedSigAlgo is not zero then it overrides the default\n+// signature algorithm.\n+func signingParamsForPrivateKey(priv interface{}, requestedSigAlgo SignatureAlgorithm) (hashFunc crypto.Hash, sigAlgo pkix.AlgorithmIdentifier, err error) {\n+\tvar pubType PublicKeyAlgorithm\n \n \tswitch priv := priv.(type) {\n \tcase *rsa.PrivateKey:\n-\t\tprivType = RSA\n-\t\tsignatureAlgorithm.Algorithm = oidSignatureSHA256WithRSA\n+\t\tpubType = RSA\n+\t\tsigAlgo.Algorithm = oidSignatureSHA256WithRSA\n \t\thashFunc = crypto.SHA256\n+\n \tcase *ecdsa.PrivateKey:\n-\t\tprivType = ECDSA\n+\t\tpubType = ECDSA\n \n \t\tswitch priv.Curve {\n \t\tcase elliptic.P224(), elliptic.P256():\n \t\t\thashFunc = crypto.SHA256\n-\t\t\tsignatureAlgorithm.Algorithm = oidSignatureECDSAWithSHA256\n+\t\t\tsigAlgo.Algorithm = oidSignatureECDSAWithSHA256\n \t\tcase elliptic.P384():\n \t\t\thashFunc = crypto.SHA384\n-\t\t\tsignatureAlgorithm.Algorithm = oidSignatureECDSAWithSHA384\n+\t\t\tsigAlgo.Algorithm = oidSignatureECDSAWithSHA384\n \t\tcase elliptic.P521():\n \t\t\thashFunc = crypto.SHA512\n-\t\t\tsignatureAlgorithm.Algorithm = oidSignatureECDSAWithSHA512\n+\t\t\tsigAlgo.Algorithm = oidSignatureECDSAWithSHA512\n \t\tdefault:\n-\t\t\treturn nil, errors.New(\"x509: unknown elliptic curve\")\n+\t\t\terr = errors.New(\"x509: unknown elliptic curve\")\n \t\t}\n+\n \tdefault:\n-\t\treturn nil, errors.New(\"x509: only RSA and ECDSA private keys supported\")\n+\t\terr = errors.New(\"x509: only RSA and ECDSA private keys supported\")\n \t}\n \n-\tif template.SignatureAlgorithm != 0 {\n-\t\tfound := false\n-\t\tfor _, details := range signatureAlgorithmDetails {\n-\t\t\tif details.algo == template.SignatureAlgorithm {\n-\t\t\t\tif details.pubKeyAlgo != privType {\n-\t\t\t\t\treturn nil, errors.New(\"x509: requested SignatureAlgorithm does not match private key type\")\n-\t\t\t\t}\n-\t\t\t\tsignatureAlgorithm.Algorithm, hashFunc = details.oid, details.hash\n-\t\t\t\tif hashFunc == 0 {\n-\t\t\t\t\treturn nil, errors.New(\"x509: cannot sign with hash function requested\")\n-\t\t\t\t}\n-\t\t\t\tfound = true\n-\t\t\t\tbreak\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\n+\tif requestedSigAlgo == 0 {\n+\t\treturn\n+\t}\n+\n+\tfound := false\n+\tfor _, details := range signatureAlgorithmDetails {\n+\t\tif details.algo == requestedSigAlgo {\n+\t\t\tif details.pubKeyAlgo != pubType {\n+\t\t\t\terr = errors.New(\"x509: requested SignatureAlgorithm does not match private key type\")\n+\t\t\t\treturn\n \t\t\t}\n+\t\t\tsigAlgo.Algorithm, hashFunc = details.oid, details.hash\n+\t\t\tif hashFunc == 0 {\n+\t\t\t\terr = errors.New(\"x509: cannot sign with hash function requested\")\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tfound = true\n+\t\t\tbreak\n \t\t}\n-\t\tif !found {\n-\t\t\treturn nil, errors.New(\"x509: unknown SignatureAlgorithm\")\n-\t\t}\n+\t}\n+\n+\tif !found {\n+\t\terr = errors.New(\"x509: unknown SignatureAlgorithm\")\n+\t}\n+\n+\treturn\n+}\n+\n+// CreateCertificate creates a new certificate based on a template. The\n+// following members of template are used: SerialNumber, Subject, NotBefore,\n+// NotAfter, KeyUsage, ExtKeyUsage, UnknownExtKeyUsage, BasicConstraintsValid,\n+// IsCA, MaxPathLen, SubjectKeyId, DNSNames, PermittedDNSDomainsCritical,\n+// PermittedDNSDomains, SignatureAlgorithm.\n+//\n+// The certificate is signed by parent. If parent is equal to template then the\n+// certificate is self-signed. The parameter pub is the public key of the\n+// signee and priv is the private key of the signer.\n+//\n+// The returned slice is the certificate in DER encoding.\n+//\n+// The only supported key types are RSA and ECDSA (*rsa.PublicKey or\n+// *ecdsa.PublicKey for pub, *rsa.PrivateKey or *ecdsa.PrivateKey for priv).\n+func CreateCertificate(rand io.Reader, template, parent *Certificate, pub interface{}, priv interface{}) (cert []byte, err error) {\n+\thashFunc, signatureAlgorithm, err := signingParamsForPrivateKey(priv, template.SignatureAlgorithm)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tpublicKeyBytes, publicKeyAlgorithm, err := marshalPublicKey(pub)\n+\tif err != nil {\n+\t\treturn nil, err\n \t}\n \n \tif err != nil {\n@@ -1559,3 +1590,313 @@ func (c *Certificate) CreateCRL(rand io.Reader, priv interface{}, revokedCerts [\n \t\tSignatureValue: asn1.BitString{Bytes: signature, BitLength: len(signature) * 8},\n \t})\n }\n+\n+// CertificateRequest represents a PKCS #10, certificate signature request.\n+type CertificateRequest struct {\n+\tRaw                      []byte // Complete ASN.1 DER content (CSR, signature algorithm and signature).\n+\tRawTBSCertificateRequest []byte // Certificate request info part of raw ASN.1 DER content.\n+\tRawSubjectPublicKeyInfo  []byte // DER encoded SubjectPublicKeyInfo.\n+\tRawSubject               []byte // DER encoded Subject.\n+\n+\tVersion            int\n+\tSignature          []byte\n+\tSignatureAlgorithm SignatureAlgorithm\n+\n+\tPublicKeyAlgorithm PublicKeyAlgorithm\n+\tPublicKey          interface{}\n+\n+\tSubject pkix.Name\n+\n+\t// Attributes is a collection of attributes providing\n+\t// additional information about the subject of the certificate.\n+\t// See RFC 2986 section 4.1.\n+\tAttributes []pkix.AttributeTypeAndValueSET\n+\n+\t// Extensions contains raw X.509 extensions. When parsing CSRs, this\n+\t// can be used to extract extensions that are not parsed by this\n+\t// package.\n+\tExtensions []pkix.Extension\n+\n+\t// ExtraExtensions contains extensions to be copied, raw, into any\n+\t// marshaled CSR. Values override any extensions that would otherwise\n+\t// be produced based on the other fields but are overridden by any\n+\t// extensions specified in Attributes.\n+\t//\n+\t// The ExtraExtensions field is not populated when parsing CSRs, see\n+\t// Extensions.\n+\tExtraExtensions []pkix.Extension\n+\n+\t// Subject Alternate Name values.\n+\tDNSNames       []string\n+\tEmailAddresses []string\n+\tIPAddresses    []net.IP\n+}\n+\n+// These structures reflect the ASN.1 structure of X.509 certificate\n+// signature requests (see RFC 2986):\n+\n+type tbsCertificateRequest struct {\n+\tRaw        asn1.RawContent\n+\tVersion    int\n+\tSubject    asn1.RawValue\n+\tPublicKey  publicKeyInfo\n+\tAttributes []pkix.AttributeTypeAndValueSET `asn1:\"tag:0\"`\n+}\n+\n+type certificateRequest struct {\n+\tRaw                asn1.RawContent\n+\tTBSCSR             tbsCertificateRequest\n+\tSignatureAlgorithm pkix.AlgorithmIdentifier\n+\tSignatureValue     asn1.BitString\n+}\n+\n+// oidExtensionRequest is a PKCS#9 OBJECT IDENTIFIER that indicates requested\n+// extensions in a CSR.\n+var oidExtensionRequest = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 9, 14}\n+\n+// CreateCertificateRequest creates a new certificate based on a template. The\n+// following members of template are used: Subject, Attributes,\n+// SignatureAlgorithm, Extension, DNSNames, EmailAddresses, and IPAddresses.\n+// The private key is the private key of the signer.\n+//\n+// The returned slice is the certificate request in DER encoding.\n+//\n+// The only supported key types are RSA (*rsa.PrivateKey) and ECDSA\n+// (*ecdsa.PrivateKey).\n+func CreateCertificateRequest(rand io.Reader, template *CertificateRequest, priv interface{}) (csr []byte, err error) {\n+\thashFunc, sigAlgo, err := signingParamsForPrivateKey(priv, template.SignatureAlgorithm)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tvar publicKeyBytes []byte\n+\tvar publicKeyAlgorithm pkix.AlgorithmIdentifier\n+\n+\tswitch priv := priv.(type) {\n+\tcase *rsa.PrivateKey:\n+\t\tpublicKeyBytes, publicKeyAlgorithm, err = marshalPublicKey(&priv.PublicKey)\n+\tcase *ecdsa.PrivateKey:\n+\t\tpublicKeyBytes, publicKeyAlgorithm, err = marshalPublicKey(&priv.PublicKey)\n+\tdefault:\n+\t\tpanic(\"internal error\")\n+\t}\n+\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tvar extensions []pkix.Extension\n+\n+\tif (len(template.DNSNames) > 0 || len(template.EmailAddresses) > 0 || len(template.IPAddresses) > 0) &&\n+\t\t!oidInExtensions(oidExtensionSubjectAltName, template.ExtraExtensions) {\n+\t\tsanBytes, err := marshalSANs(template.DNSNames, template.EmailAddresses, template.IPAddresses)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\n+\t\textensions = append(extensions, pkix.Extension{\n+\t\t\tId:    oidExtensionSubjectAltName,\n+\t\t\tValue: sanBytes,\n+\t\t})\n+\t}\n+\n+\textensions = append(extensions, template.ExtraExtensions...)\n+\n+\tvar attributes []pkix.AttributeTypeAndValueSET\n+\tattributes = append(attributes, template.Attributes...)\n+\n+\tif len(extensions) > 0 {\n+\t\t// specifiedExtensions contains all the extensions that we\n+\t\t// found specified via template.Attributes.\n+\t\tspecifiedExtensions := make(map[string]bool)\n+\n+\t\tfor _, atvSet := range template.Attributes {\n+\t\t\tif !atvSet.Type.Equal(oidExtensionRequest) {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\n+\t\t\tfor _, atvs := range atvSet.Value {\n+\t\t\t\tfor _, atv := range atvs {\n+\t\t\t\t\tspecifiedExtensions[atv.Type.String()] = true\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tatvs := make([]pkix.AttributeTypeAndValue, 0, len(extensions))\n+\t\tfor _, e := range extensions {\n+\t\t\tif specifiedExtensions[e.Id.String()] {\n+\t\t\t\t// Attributes already contained a value for\n+\t\t\t\t// this extension and it takes priority.\n+\t\t\t\tcontinue\n+\t\t\t}\n+\n+\t\t\tatvs = append(atvs, pkix.AttributeTypeAndValue{\n+\t\t\t\t// There is no place for the critical flag in a CSR.\n+\t\t\t\tType:  e.Id,\n+\t\t\t\tValue: e.Value,\n+\t\t\t})\n+\t\t}\n+\n+\t\t// Append the extensions to an existing attribute if possible.\n+\t\tappended := false\n+\t\tfor _, atvSet := range attributes {\n+\t\t\tif !atvSet.Type.Equal(oidExtensionRequest) || len(atvSet.Value) == 0 {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\n+\t\t\tatvSet.Value[0] = append(atvSet.Value[0], atvs...)\n+\t\t\tappended = true\n+\t\t\tbreak\n+\t\t}\n+\n+\t\t// Otherwise, add a new attribute for the extensions.\n+\t\tif !appended {\n+\t\t\tattributes = append(attributes, pkix.AttributeTypeAndValueSET{\n+\t\t\t\tType: oidExtensionRequest,\n+\t\t\t\tValue: [][]pkix.AttributeTypeAndValue{\n+\t\t\t\t\tatvs,\n+\t\t\t\t},\n+\t\t\t})\n+\t\t}\n+\t}\n+\n+\tasn1Subject := template.RawSubject\n+\tif len(asn1Subject) == 0 {\n+\t\tasn1Subject, err = asn1.Marshal(template.Subject.ToRDNSequence())\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t}\n+\n+\ttbsCSR := tbsCertificateRequest{\n+\t\tVersion: 0, // PKCS #10, RFC 2986\n+\t\tSubject: asn1.RawValue{FullBytes: asn1Subject},\n+\t\tPublicKey: publicKeyInfo{\n+\t\t\tAlgorithm: publicKeyAlgorithm,\n+\t\t\tPublicKey: asn1.BitString{\n+\t\t\t\tBytes:     publicKeyBytes,\n+\t\t\t\tBitLength: len(publicKeyBytes) * 8,\n+\t\t\t},\n+\t\t},\n+\t\tAttributes: attributes,\n+\t}\n+\n+\ttbsCSRContents, err := asn1.Marshal(tbsCSR)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\ttbsCSR.Raw = tbsCSRContents\n+\n+\th := hashFunc.New()\n+\th.Write(tbsCSRContents)\n+\tdigest := h.Sum(nil)\n+\n+\tvar signature []byte\n+\tswitch priv := priv.(type) {\n+\tcase *rsa.PrivateKey:\n+\t\tsignature, err = rsa.SignPKCS1v15(rand, priv, hashFunc, digest)\n+\tcase *ecdsa.PrivateKey:\n+\t\tvar r, s *big.Int\n+\t\tif r, s, err = ecdsa.Sign(rand, priv, digest); err == nil {\n+\t\t\tsignature, err = asn1.Marshal(ecdsaSignature{r, s})\n+\t\t}\n+\tdefault:\n+\t\tpanic(\"internal error\")\n+\t}\n+\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\n+\treturn asn1.Marshal(certificateRequest{\n+\t\tTBSCSR:             tbsCSR,\n+\t\tSignatureAlgorithm: sigAlgo,\n+\t\tSignatureValue: asn1.BitString{\n+\t\t\tBytes:     signature,\n+\t\t\tBitLength: len(signature) * 8,\n+\t\t},\n+\t})\n+}\n+\n+// ParseCertificateRequest parses a single certificate request from the\n+// given ASN.1 DER data.\n+func ParseCertificateRequest(asn1Data []byte) (*CertificateRequest, error) {\n+\tvar csr certificateRequest\n+\n+\trest, err := asn1.Unmarshal(asn1Data, &csr)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t} else if len(rest) != 0 {\n+\t\treturn nil, asn1.SyntaxError{Msg: \"trailing data\"}\n+\t}\n+\n+\treturn parseCertificateRequest(&csr)\n+}\n+\n+func parseCertificateRequest(in *certificateRequest) (*CertificateRequest, error) {\n+\tout := &CertificateRequest{\n+\t\tRaw: in.Raw,\n+\t\tRawTBSCertificateRequest: in.TBSCSR.Raw,\n+\t\tRawSubjectPublicKeyInfo:  in.TBSCSR.PublicKey.Raw,\n+\t\tRawSubject:               in.TBSCSR.Subject.FullBytes,\n+\n+\t\tSignature:          in.SignatureValue.RightAlign(),\n+\t\tSignatureAlgorithm: getSignatureAlgorithmFromOID(in.SignatureAlgorithm.Algorithm),\n+\n+\t\tPublicKeyAlgorithm: getPublicKeyAlgorithmFromOID(in.TBSCSR.PublicKey.Algorithm.Algorithm),\n+\n+\t\tVersion:    in.TBSCSR.Version,\n+\t\tAttributes: in.TBSCSR.Attributes,\n+\t}\n+\n+\tvar err error\n+\tout.PublicKey, err = parsePublicKey(out.PublicKeyAlgorithm, &in.TBSCSR.PublicKey)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tvar subject pkix.RDNSequence\n+\tif _, err := asn1.Unmarshal(in.TBSCSR.Subject.FullBytes, &subject); err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tout.Subject.FillFromRDNSequence(&subject)\n+\n+\tvar extensions []pkix.AttributeTypeAndValue\n+\n+\tfor _, atvSet := range in.TBSCSR.Attributes {\n+\t\tif !atvSet.Type.Equal(oidExtensionRequest) {\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tfor _, atvs := range atvSet.Value {\n+\t\t\textensions = append(extensions, atvs...)\n+\t\t}\n+\t}\n+\n+\tout.Extensions = make([]pkix.Extension, 0, len(extensions))\n+\n+\tfor _, e := range extensions {\n+\t\tvalue, ok := e.Value.([]byte)\n+\t\tif !ok {\n+\t\t\treturn nil, errors.New(\"x509: extension attribute contained non-OCTET STRING data\")\n+\t\t}\n+\n+\t\tout.Extensions = append(out.Extensions, pkix.Extension{\n+\t\t\tId:    e.Type,\n+\t\t\tValue: value,\n+\t\t})\n+\n+\t\tif len(e.Type) == 4 && e.Type[0] == 2 && e.Type[1] == 5 && e.Type[2] == 29 {\n+\t\t\tswitch e.Type[3] {\n+\t\t\tcase 17:\n+\t\t\t\tout.DNSNames, out.EmailAddresses, out.IPAddresses, err = parseSANExtension(value)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn nil, err\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn out, nil\n+}"}, {"sha": "d158a9d86310871fcf8eadf92153acdab1bf42fe", "filename": "libgo/go/crypto/x509/x509_test.go", "status": "modified", "additions": 213, "deletions": 2, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -679,11 +679,11 @@ func TestCRLCreation(t *testing.T) {\n \n func fromBase64(in string) []byte {\n \tout := make([]byte, base64.StdEncoding.DecodedLen(len(in)))\n-\t_, err := base64.StdEncoding.Decode(out, []byte(in))\n+\tn, err := base64.StdEncoding.Decode(out, []byte(in))\n \tif err != nil {\n \t\tpanic(\"failed to base64 decode\")\n \t}\n-\treturn out\n+\treturn out[:n]\n }\n \n func TestParseDERCRL(t *testing.T) {\n@@ -727,6 +727,7 @@ func TestParsePEMCRL(t *testing.T) {\n }\n \n func TestImports(t *testing.T) {\n+\tt.Skip(\"gccgo does not have a go command\")\n \tif err := exec.Command(\"go\", \"run\", \"x509_test_import.go\").Run(); err != nil {\n \t\tt.Errorf(\"failed to run x509_test_import.go: %s\", err)\n \t}\n@@ -735,3 +736,213 @@ func TestImports(t *testing.T) {\n const derCRLBase64 = \"MIINqzCCDJMCAQEwDQYJKoZIhvcNAQEFBQAwVjEZMBcGA1UEAxMQUEtJIEZJTk1FQ0NBTklDQTEVMBMGA1UEChMMRklOTUVDQ0FOSUNBMRUwEwYDVQQLEwxGSU5NRUNDQU5JQ0ExCzAJBgNVBAYTAklUFw0xMTA1MDQxNjU3NDJaFw0xMTA1MDQyMDU3NDJaMIIMBzAhAg4Ze1od49Lt1qIXBydAzhcNMDkwNzE2MDg0MzIyWjAAMCECDl0HSL9bcZ1Ci/UHJ0DPFw0wOTA3MTYwODQzMTNaMAAwIQIOESB9tVAmX3cY7QcnQNAXDTA5MDcxNjA4NDUyMlowADAhAg4S1tGAQ3mHt8uVBydA1RcNMDkwODA0MTUyNTIyWjAAMCECDlQ249Y7vtC25ScHJ0DWFw0wOTA4MDQxNTI1MzdaMAAwIQIOISMop3NkA4PfYwcnQNkXDTA5MDgwNDExMDAzNFowADAhAg56/BMoS29KEShTBydA2hcNMDkwODA0MTEwMTAzWjAAMCECDnBp/22HPH5CSWoHJ0DbFw0wOTA4MDQxMDU0NDlaMAAwIQIOV9IP+8CD8bK+XAcnQNwXDTA5MDgwNDEwNTcxN1owADAhAg4v5aRz0IxWqYiXBydA3RcNMDkwODA0MTA1NzQ1WjAAMCECDlOU34VzvZAybQwHJ0DeFw0wOTA4MDQxMDU4MjFaMAAwIAINO4CD9lluIxcwBydBAxcNMDkwNzIyMTUzMTU5WjAAMCECDgOllfO8Y1QA7/wHJ0ExFw0wOTA3MjQxMTQxNDNaMAAwIQIOJBX7jbiCdRdyjgcnQUQXDTA5MDkxNjA5MzAwOFowADAhAg5iYSAgmDrlH/RZBydBRRcNMDkwOTE2MDkzMDE3WjAAMCECDmu6k6srP3jcMaQHJ0FRFw0wOTA4MDQxMDU2NDBaMAAwIQIOX8aHlO0V+WVH4QcnQVMXDTA5MDgwNDEwNTcyOVowADAhAg5flK2rg3NnsRgDBydBzhcNMTEwMjAxMTUzMzQ2WjAAMCECDg35yJDL1jOPTgoHJ0HPFw0xMTAyMDExNTM0MjZaMAAwIQIOMyFJ6+e9iiGVBQcnQdAXDTA5MDkxODEzMjAwNVowADAhAg5Emb/Oykucmn8fBydB1xcNMDkwOTIxMTAxMDQ3WjAAMCECDjQKCncV+MnUavMHJ0HaFw0wOTA5MjIwODE1MjZaMAAwIQIOaxiFUt3dpd+tPwcnQfQXDTEwMDYxODA4NDI1MVowADAhAg5G7P8nO0tkrMt7BydB9RcNMTAwNjE4MDg0MjMwWjAAMCECDmTCC3SXhmDRst4HJ0H2Fw0wOTA5MjgxMjA3MjBaMAAwIQIOHoGhUr/pRwzTKgcnQfcXDTA5MDkyODEyMDcyNFowADAhAg50wrcrCiw8mQmPBydCBBcNMTAwMjE2MTMwMTA2WjAAMCECDifWmkvwyhEqwEcHJ0IFFw0xMDAyMTYxMzAxMjBaMAAwIQIOfgPmlW9fg+osNgcnQhwXDTEwMDQxMzA5NTIwMFowADAhAg4YHAGuA6LgCk7tBydCHRcNMTAwNDEzMDk1MTM4WjAAMCECDi1zH1bxkNJhokAHJ0IsFw0xMDA0MTMwOTU5MzBaMAAwIQIOMipNccsb/wo2fwcnQi0XDTEwMDQxMzA5NTkwMFowADAhAg46lCmvPl4GpP6ABydCShcNMTAwMTE5MDk1MjE3WjAAMCECDjaTcaj+wBpcGAsHJ0JLFw0xMDAxMTkwOTUyMzRaMAAwIQIOOMC13EOrBuxIOQcnQloXDTEwMDIwMTA5NDcwNVowADAhAg5KmZl+krz4RsmrBydCWxcNMTAwMjAxMDk0NjQwWjAAMCECDmLG3zQJ/fzdSsUHJ0JiFw0xMDAzMDEwOTUxNDBaMAAwIQIOP39ksgHdojf4owcnQmMXDTEwMDMwMTA5NTExN1owADAhAg4LDQzvWNRlD6v9BydCZBcNMTAwMzAxMDk0NjIyWjAAMCECDkmNfeclaFhIaaUHJ0JlFw0xMDAzMDEwOTQ2MDVaMAAwIQIOT/qWWfpH/m8NTwcnQpQXDTEwMDUxMTA5MTgyMVowADAhAg5m/ksYxvCEgJSvBydClRcNMTAwNTExMDkxODAxWjAAMCECDgvf3Ohq6JOPU9AHJ0KWFw0xMDA1MTEwOTIxMjNaMAAwIQIOKSPas10z4jNVIQcnQpcXDTEwMDUxMTA5MjEwMlowADAhAg4mCWmhoZ3lyKCDBydCohcNMTEwNDI4MTEwMjI1WjAAMCECDkeiyRsBMK0Gvr4HJ0KjFw0xMTA0MjgxMTAyMDdaMAAwIQIOa09b/nH2+55SSwcnQq4XDTExMDQwMTA4Mjk0NlowADAhAg5O7M7iq7gGplr1BydCrxcNMTEwNDAxMDgzMDE3WjAAMCECDjlT6mJxUjTvyogHJ0K1Fw0xMTAxMjcxNTQ4NTJaMAAwIQIODS/l4UUFLe21NAcnQrYXDTExMDEyNzE1NDgyOFowADAhAg5lPRA0XdOUF6lSBydDHhcNMTEwMTI4MTQzNTA1WjAAMCECDixKX4fFGGpENwgHJ0MfFw0xMTAxMjgxNDM1MzBaMAAwIQIORNBkqsPnpKTtbAcnQ08XDTEwMDkwOTA4NDg0MlowADAhAg5QL+EMM3lohedEBydDUBcNMTAwOTA5MDg0ODE5WjAAMCECDlhDnHK+HiTRAXcHJ0NUFw0xMDEwMTkxNjIxNDBaMAAwIQIOdBFqAzq/INz53gcnQ1UXDTEwMTAxOTE2MjA0NFowADAhAg4OjR7s8MgKles1BydDWhcNMTEwMTI3MTY1MzM2WjAAMCECDmfR/elHee+d0SoHJ0NbFw0xMTAxMjcxNjUzNTZaMAAwIQIOBTKv2ui+KFMI+wcnQ5YXDTEwMDkxNTEwMjE1N1owADAhAg49F3c/GSah+oRUBydDmxcNMTEwMTI3MTczMjMzWjAAMCECDggv4I61WwpKFMMHJ0OcFw0xMTAxMjcxNzMyNTVaMAAwIQIOXx/Y8sEvwS10LAcnQ6UXDTExMDEyODExMjkzN1owADAhAg5LSLbnVrSKaw/9BydDphcNMTEwMTI4MTEyOTIwWjAAMCECDmFFoCuhKUeACQQHJ0PfFw0xMTAxMTExMDE3MzdaMAAwIQIOQTDdFh2fSPF6AAcnQ+AXDTExMDExMTEwMTcxMFowADAhAg5B8AOXX61FpvbbBydD5RcNMTAxMDA2MTAxNDM2WjAAMCECDh41P2Gmi7PkwI4HJ0PmFw0xMDEwMDYxMDE2MjVaMAAwIQIOWUHGLQCd+Ale9gcnQ/0XDTExMDUwMjA3NTYxMFowADAhAg5Z2c9AYkikmgWOBydD/hcNMTEwNTAyMDc1NjM0WjAAMCECDmf/UD+/h8nf+74HJ0QVFw0xMTA0MTUwNzI4MzNaMAAwIQIOICvj4epy3MrqfwcnRBYXDTExMDQxNTA3Mjg1NlowADAhAg4bouRMfOYqgv4xBydEHxcNMTEwMzA4MTYyNDI1WjAAMCECDhebWHGoKiTp7pEHJ0QgFw0xMTAzMDgxNjI0NDhaMAAwIQIOX+qnxxAqJ8LtawcnRDcXDTExMDEzMTE1MTIyOFowADAhAg4j0fICqZ+wkOdqBydEOBcNMTEwMTMxMTUxMTQxWjAAMCECDhmXjsV4SUpWtAMHJ0RLFw0xMTAxMjgxMTI0MTJaMAAwIQIODno/w+zG43kkTwcnREwXDTExMDEyODExMjM1MlowADAhAg4b1gc88767Fr+LBydETxcNMTEwMTI4MTEwMjA4WjAAMCECDn+M3Pa1w2nyFeUHJ0RQFw0xMTAxMjgxMDU4NDVaMAAwIQIOaduoyIH61tqybAcnRJUXDTEwMTIxNTA5NDMyMlowADAhAg4nLqQPkyi3ESAKBydElhcNMTAxMjE1MDk0MzM2WjAAMCECDi504NIMH8578gQHJ0SbFw0xMTAyMTQxNDA1NDFaMAAwIQIOGuaM8PDaC5u1egcnRJwXDTExMDIxNDE0MDYwNFowADAhAg4ehYq/BXGnB5PWBydEnxcNMTEwMjA0MDgwOTUxWjAAMCECDkSD4eS4FxW5H20HJ0SgFw0xMTAyMDQwODA5MjVaMAAwIQIOOCcb6ilYObt1egcnRKEXDTExMDEyNjEwNDEyOVowADAhAg58tISWCCwFnKGnBydEohcNMTEwMjA0MDgxMzQyWjAAMCECDn5rjtabY/L/WL0HJ0TJFw0xMTAyMDQxMTAzNDFaMAAwDQYJKoZIhvcNAQEFBQADggEBAGnF2Gs0+LNiYCW1Ipm83OXQYP/bd5tFFRzyz3iepFqNfYs4D68/QihjFoRHQoXEB0OEe1tvaVnnPGnEOpi6krwekquMxo4H88B5SlyiFIqemCOIss0SxlCFs69LmfRYvPPvPEhoXtQ3ZThe0UvKG83GOklhvGl6OaiRf4Mt+m8zOT4Wox/j6aOBK6cw6qKCdmD+Yj1rrNqFGg1CnSWMoD6S6mwNgkzwdBUJZ22BwrzAAo4RHa2Uy3ef1FjwD0XtU5N3uDSxGGBEDvOe5z82rps3E22FpAA8eYl8kaXtmWqyvYU0epp4brGuTxCuBMCAsxt/OjIjeNNQbBGkwxgfYA0=\"\n \n const pemCRLBase64 = \"LS0tLS1CRUdJTiBYNTA5IENSTC0tLS0tDQpNSUlCOWpDQ0FWOENBUUV3RFFZSktvWklodmNOQVFFRkJRQXdiREVhTUJnR0ExVUVDaE1SVWxOQklGTmxZM1Z5DQphWFI1SUVsdVl5NHhIakFjQmdOVkJBTVRGVkpUUVNCUWRXSnNhV01nVW05dmRDQkRRU0IyTVRFdU1Dd0dDU3FHDQpTSWIzRFFFSkFSWWZjbk5oYTJWdmJuSnZiM1J6YVdkdVFISnpZWE5sWTNWeWFYUjVMbU52YlJjTk1URXdNakl6DQpNVGt5T0RNd1doY05NVEV3T0RJeU1Ua3lPRE13V2pDQmpEQktBaEVBckRxb2g5RkhKSFhUN09QZ3V1bjQrQmNODQpNRGt4TVRBeU1UUXlOekE1V2pBbU1Bb0dBMVVkRlFRRENnRUpNQmdHQTFVZEdBUVJHQTh5TURBNU1URXdNakUwDQpNalExTlZvd1BnSVJBTEd6blowOTVQQjVhQU9MUGc1N2ZNTVhEVEF5TVRBeU16RTBOVEF4TkZvd0dqQVlCZ05WDQpIUmdFRVJnUE1qQXdNakV3TWpNeE5EVXdNVFJhb0RBd0xqQWZCZ05WSFNNRUdEQVdnQlQxVERGNlVRTS9MTmVMDQpsNWx2cUhHUXEzZzltekFMQmdOVkhSUUVCQUlDQUlRd0RRWUpLb1pJaHZjTkFRRUZCUUFEZ1lFQUZVNUFzNk16DQpxNVBSc2lmYW9iUVBHaDFhSkx5QytNczVBZ2MwYld5QTNHQWR4dXI1U3BQWmVSV0NCamlQL01FSEJXSkNsQkhQDQpHUmNxNXlJZDNFakRrYUV5eFJhK2k2N0x6dmhJNmMyOUVlNks5cFNZd2ppLzdSVWhtbW5Qclh0VHhsTDBsckxyDQptUVFKNnhoRFJhNUczUUE0Q21VZHNITnZicnpnbUNZcHZWRT0NCi0tLS0tRU5EIFg1MDkgQ1JMLS0tLS0NCg0K\"\n+\n+func TestCreateCertificateRequest(t *testing.T) {\n+\trandom := rand.Reader\n+\n+\tblock, _ := pem.Decode([]byte(pemPrivateKey))\n+\trsaPriv, err := ParsePKCS1PrivateKey(block.Bytes)\n+\tif err != nil {\n+\t\tt.Fatalf(\"Failed to parse private key: %s\", err)\n+\t}\n+\n+\tecdsa256Priv, err := ecdsa.GenerateKey(elliptic.P256(), rand.Reader)\n+\tif err != nil {\n+\t\tt.Fatalf(\"Failed to generate ECDSA key: %s\", err)\n+\t}\n+\n+\tecdsa384Priv, err := ecdsa.GenerateKey(elliptic.P384(), rand.Reader)\n+\tif err != nil {\n+\t\tt.Fatalf(\"Failed to generate ECDSA key: %s\", err)\n+\t}\n+\n+\tecdsa521Priv, err := ecdsa.GenerateKey(elliptic.P521(), rand.Reader)\n+\tif err != nil {\n+\t\tt.Fatalf(\"Failed to generate ECDSA key: %s\", err)\n+\t}\n+\n+\ttests := []struct {\n+\t\tname    string\n+\t\tpriv    interface{}\n+\t\tsigAlgo SignatureAlgorithm\n+\t}{\n+\t\t{\"RSA\", rsaPriv, SHA1WithRSA},\n+\t\t{\"ECDSA-256\", ecdsa256Priv, ECDSAWithSHA1},\n+\t\t{\"ECDSA-384\", ecdsa384Priv, ECDSAWithSHA1},\n+\t\t{\"ECDSA-521\", ecdsa521Priv, ECDSAWithSHA1},\n+\t}\n+\n+\tfor _, test := range tests {\n+\t\ttemplate := CertificateRequest{\n+\t\t\tSubject: pkix.Name{\n+\t\t\t\tCommonName:   \"test.example.com\",\n+\t\t\t\tOrganization: []string{\"\u03a3 Acme Co\"},\n+\t\t\t},\n+\t\t\tSignatureAlgorithm: test.sigAlgo,\n+\t\t\tDNSNames:           []string{\"test.example.com\"},\n+\t\t\tEmailAddresses:     []string{\"gopher@golang.org\"},\n+\t\t\tIPAddresses:        []net.IP{net.IPv4(127, 0, 0, 1).To4(), net.ParseIP(\"2001:4860:0:2001::68\")},\n+\t\t}\n+\n+\t\tderBytes, err := CreateCertificateRequest(random, &template, test.priv)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"%s: failed to create certificate request: %s\", test.name, err)\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tout, err := ParseCertificateRequest(derBytes)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"%s: failed to create certificate request: %s\", test.name, err)\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tif out.Subject.CommonName != template.Subject.CommonName {\n+\t\t\tt.Errorf(\"%s: output subject common name and template subject common name don't match\", test.name)\n+\t\t} else if len(out.Subject.Organization) != len(template.Subject.Organization) {\n+\t\t\tt.Errorf(\"%s: output subject organisation and template subject organisation don't match\", test.name)\n+\t\t} else if len(out.DNSNames) != len(template.DNSNames) {\n+\t\t\tt.Errorf(\"%s: output DNS names and template DNS names don't match\", test.name)\n+\t\t} else if len(out.EmailAddresses) != len(template.EmailAddresses) {\n+\t\t\tt.Errorf(\"%s: output email addresses and template email addresses don't match\", test.name)\n+\t\t} else if len(out.IPAddresses) != len(template.IPAddresses) {\n+\t\t\tt.Errorf(\"%s: output IP addresses and template IP addresses names don't match\", test.name)\n+\t\t}\n+\t}\n+}\n+\n+func marshalAndParseCSR(t *testing.T, template *CertificateRequest) *CertificateRequest {\n+\tblock, _ := pem.Decode([]byte(pemPrivateKey))\n+\trsaPriv, err := ParsePKCS1PrivateKey(block.Bytes)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tderBytes, err := CreateCertificateRequest(rand.Reader, template, rsaPriv)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tcsr, err := ParseCertificateRequest(derBytes)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\treturn csr\n+}\n+\n+func TestCertificateRequestOverrides(t *testing.T) {\n+\tsanContents, err := marshalSANs([]string{\"foo.example.com\"}, nil, nil)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\ttemplate := CertificateRequest{\n+\t\tSubject: pkix.Name{\n+\t\t\tCommonName:   \"test.example.com\",\n+\t\t\tOrganization: []string{\"\u03a3 Acme Co\"},\n+\t\t},\n+\t\tDNSNames: []string{\"test.example.com\"},\n+\n+\t\t// An explicit extension should override the DNSNames from the\n+\t\t// template.\n+\t\tExtraExtensions: []pkix.Extension{\n+\t\t\tpkix.Extension{\n+\t\t\t\tId:    oidExtensionSubjectAltName,\n+\t\t\t\tValue: sanContents,\n+\t\t\t},\n+\t\t},\n+\t}\n+\n+\tcsr := marshalAndParseCSR(t, &template)\n+\n+\tif len(csr.DNSNames) != 1 || csr.DNSNames[0] != \"foo.example.com\" {\n+\t\tt.Errorf(\"Extension did not override template. Got %v\\n\", csr.DNSNames)\n+\t}\n+\n+\t// If there is already an attribute with X.509 extensions then the\n+\t// extra extensions should be added to it rather than creating a CSR\n+\t// with two extension attributes.\n+\n+\ttemplate.Attributes = []pkix.AttributeTypeAndValueSET{\n+\t\tpkix.AttributeTypeAndValueSET{\n+\t\t\tType: oidExtensionRequest,\n+\t\t\tValue: [][]pkix.AttributeTypeAndValue{\n+\t\t\t\t[]pkix.AttributeTypeAndValue{\n+\t\t\t\t\tpkix.AttributeTypeAndValue{\n+\t\t\t\t\t\tType:  oidExtensionAuthorityInfoAccess,\n+\t\t\t\t\t\tValue: []byte(\"foo\"),\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t}\n+\n+\tcsr = marshalAndParseCSR(t, &template)\n+\tif l := len(csr.Attributes); l != 1 {\n+\t\tt.Errorf(\"incorrect number of attributes: %d\\n\", l)\n+\t}\n+\n+\tif !csr.Attributes[0].Type.Equal(oidExtensionRequest) ||\n+\t\tlen(csr.Attributes[0].Value) != 1 ||\n+\t\tlen(csr.Attributes[0].Value[0]) != 2 {\n+\t\tt.Errorf(\"bad attributes: %#v\\n\", csr.Attributes)\n+\t}\n+\n+\tsanContents2, err := marshalSANs([]string{\"foo2.example.com\"}, nil, nil)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\t// Extensions in Attributes should override those in ExtraExtensions.\n+\ttemplate.Attributes[0].Value[0] = append(template.Attributes[0].Value[0], pkix.AttributeTypeAndValue{\n+\t\tType:  oidExtensionSubjectAltName,\n+\t\tValue: sanContents2,\n+\t})\n+\n+\tcsr = marshalAndParseCSR(t, &template)\n+\n+\tif len(csr.DNSNames) != 1 || csr.DNSNames[0] != \"foo2.example.com\" {\n+\t\tt.Errorf(\"Attributes did not override ExtraExtensions. Got %v\\n\", csr.DNSNames)\n+\t}\n+}\n+\n+func TestParseCertificateRequest(t *testing.T) {\n+\tcsrBytes := fromBase64(csrBase64)\n+\tcsr, err := ParseCertificateRequest(csrBytes)\n+\tif err != nil {\n+\t\tt.Fatalf(\"failed to parse CSR: %s\", err)\n+\t}\n+\n+\tif len(csr.EmailAddresses) != 1 || csr.EmailAddresses[0] != \"gopher@golang.org\" {\n+\t\tt.Errorf(\"incorrect email addresses found: %v\", csr.EmailAddresses)\n+\t}\n+\n+\tif len(csr.DNSNames) != 1 || csr.DNSNames[0] != \"test.example.com\" {\n+\t\tt.Errorf(\"incorrect DNS names found: %v\", csr.DNSNames)\n+\t}\n+\n+\tif len(csr.Subject.Country) != 1 || csr.Subject.Country[0] != \"AU\" {\n+\t\tt.Errorf(\"incorrect Subject name: %v\", csr.Subject)\n+\t}\n+\n+\tfound := false\n+\tfor _, e := range csr.Extensions {\n+\t\tif e.Id.Equal(oidExtensionBasicConstraints) {\n+\t\t\tfound = true\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\tif !found {\n+\t\tt.Errorf(\"basic constraints extension not found in CSR\")\n+\t}\n+}\n+\n+// This CSR was generated with OpenSSL:\n+//  openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout privateKey.key -config openssl.cnf\n+//\n+// The openssl.cnf needs to include this section:\n+//   [ v3_req ]\n+//   basicConstraints = CA:FALSE\n+//   keyUsage = nonRepudiation, digitalSignature, keyEncipherment\n+//   subjectAltName = email:gopher@golang.org,DNS:test.example.com\n+const csrBase64 = \"MIIC4zCCAcsCAQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOY+MVedRg2JEnyeLcSzcsMv2VcsTfkB5+Etd6hihAh6MrGezNyASMMKuQN6YhCX1icQDiQtGsDLTtheNnSXK06tAhHjAP/hGlszRJp+5+rP2M58fDBAkUBEhskbCUWwpY14jFtVuGNJ8vF8h8IeczdolvQhX9lVai9G0EUXJMliMKdjA899H0mRs9PzHyidyrXFNiZlQXfD8Kg7gETn2Ny965iyI6ujAIYSCvam6TnxRHYH2MBKyVGvsYGbPYUQJCsgdgyajEg6ekihvQY3SzO1HSAlZAd7d1QYO4VeWJ2mY6Wu3Jpmh+AmG19S9CcHqGjd0bhuAX9cpPOKgnEmqn0CAwEAAaBZMFcGCSqGSIb3DQEJDjFKMEgwCQYDVR0TBAIwADALBgNVHQ8EBAMCBeAwLgYDVR0RBCcwJYERZ29waGVyQGdvbGFuZy5vcmeCEHRlc3QuZXhhbXBsZS5jb20wDQYJKoZIhvcNAQEFBQADggEBAC9+QpKfdabxwCWwf4IEe1cKjdXLS1ScSuw27a3kZzQiPV78WJMa6dB8dqhdH5BRwGZ/qsgLrO6ZHlNeIv2Ib41Ccq71ecHW/nXc94A1BzJ/bVdI9LZcmTUvR1/m1jCpN7UqQ0ml1u9VihK7Pe762hEYxuWDQzYEU0l15S/bXmqeq3eF1A59XT/2jwe5+NV0Wwf4UQlkTXsAQMsJ+KzrQafd8Qv2A49o048uRvmjeJDrXLawGVianZ7D5A6Fpd1rZh6XcjqBpmgLw41DRQWENOdzhy+HyphKRv1MlY8OLkNqpGMhu8DdgJVGoT16DGiickoEa7Z3UCPVNgdTkT9jq7U=\""}, {"sha": "c0b38a24940fcade4452df0b5cdae6369420d3df", "filename": "libgo/go/database/sql/convert.go", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdatabase%2Fsql%2Fconvert.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdatabase%2Fsql%2Fconvert.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fconvert.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -160,27 +160,19 @@ func convertAssign(dest, src interface{}) error {\n \t\t\treflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64,\n \t\t\treflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64,\n \t\t\treflect.Float32, reflect.Float64:\n-\t\t\t*d = fmt.Sprintf(\"%v\", src)\n+\t\t\t*d = asString(src)\n \t\t\treturn nil\n \t\t}\n \tcase *[]byte:\n \t\tsv = reflect.ValueOf(src)\n-\t\tswitch sv.Kind() {\n-\t\tcase reflect.Bool,\n-\t\t\treflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64,\n-\t\t\treflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64,\n-\t\t\treflect.Float32, reflect.Float64:\n-\t\t\t*d = []byte(fmt.Sprintf(\"%v\", src))\n+\t\tif b, ok := asBytes(nil, sv); ok {\n+\t\t\t*d = b\n \t\t\treturn nil\n \t\t}\n \tcase *RawBytes:\n \t\tsv = reflect.ValueOf(src)\n-\t\tswitch sv.Kind() {\n-\t\tcase reflect.Bool,\n-\t\t\treflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64,\n-\t\t\treflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64,\n-\t\t\treflect.Float32, reflect.Float64:\n-\t\t\t*d = RawBytes(fmt.Sprintf(\"%v\", src))\n+\t\tif b, ok := asBytes([]byte(*d)[:0], sv); ok {\n+\t\t\t*d = RawBytes(b)\n \t\t\treturn nil\n \t\t}\n \tcase *bool:\n@@ -271,5 +263,37 @@ func asString(src interface{}) string {\n \tcase []byte:\n \t\treturn string(v)\n \t}\n+\trv := reflect.ValueOf(src)\n+\tswitch rv.Kind() {\n+\tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:\n+\t\treturn strconv.FormatInt(rv.Int(), 10)\n+\tcase reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:\n+\t\treturn strconv.FormatUint(rv.Uint(), 10)\n+\tcase reflect.Float64:\n+\t\treturn strconv.FormatFloat(rv.Float(), 'g', -1, 64)\n+\tcase reflect.Float32:\n+\t\treturn strconv.FormatFloat(rv.Float(), 'g', -1, 32)\n+\tcase reflect.Bool:\n+\t\treturn strconv.FormatBool(rv.Bool())\n+\t}\n \treturn fmt.Sprintf(\"%v\", src)\n }\n+\n+func asBytes(buf []byte, rv reflect.Value) (b []byte, ok bool) {\n+\tswitch rv.Kind() {\n+\tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:\n+\t\treturn strconv.AppendInt(buf, rv.Int(), 10), true\n+\tcase reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:\n+\t\treturn strconv.AppendUint(buf, rv.Uint(), 10), true\n+\tcase reflect.Float32:\n+\t\treturn strconv.AppendFloat(buf, rv.Float(), 'g', -1, 32), true\n+\tcase reflect.Float64:\n+\t\treturn strconv.AppendFloat(buf, rv.Float(), 'g', -1, 64), true\n+\tcase reflect.Bool:\n+\t\treturn strconv.AppendBool(buf, rv.Bool()), true\n+\tcase reflect.String:\n+\t\ts := rv.String()\n+\t\treturn append(buf, s...), true\n+\t}\n+\treturn\n+}"}, {"sha": "6e248301283f9613afc43db8e7f6a8316d1e52de", "filename": "libgo/go/database/sql/convert_test.go", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdatabase%2Fsql%2Fconvert_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdatabase%2Fsql%2Fconvert_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fconvert_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -8,6 +8,7 @@ import (\n \t\"database/sql/driver\"\n \t\"fmt\"\n \t\"reflect\"\n+\t\"runtime\"\n \t\"testing\"\n \t\"time\"\n )\n@@ -279,3 +280,58 @@ func TestValueConverters(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+// Tests that assigning to RawBytes doesn't allocate (and also works).\n+func TestRawBytesAllocs(t *testing.T) {\n+\tbuf := make(RawBytes, 10)\n+\ttest := func(name string, in interface{}, want string) {\n+\t\tif err := convertAssign(&buf, in); err != nil {\n+\t\t\tt.Fatalf(\"%s: convertAssign = %v\", name, err)\n+\t\t}\n+\t\tmatch := len(buf) == len(want)\n+\t\tif match {\n+\t\t\tfor i, b := range buf {\n+\t\t\t\tif want[i] != b {\n+\t\t\t\t\tmatch = false\n+\t\t\t\t\tbreak\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif !match {\n+\t\t\tt.Fatalf(\"%s: got %q (len %d); want %q (len %d)\", name, buf, len(buf), want, len(want))\n+\t\t}\n+\t}\n+\tn := testing.AllocsPerRun(100, func() {\n+\t\ttest(\"uint64\", uint64(12345678), \"12345678\")\n+\t\ttest(\"uint32\", uint32(1234), \"1234\")\n+\t\ttest(\"uint16\", uint16(12), \"12\")\n+\t\ttest(\"uint8\", uint8(1), \"1\")\n+\t\ttest(\"uint\", uint(123), \"123\")\n+\t\ttest(\"int\", int(123), \"123\")\n+\t\ttest(\"int8\", int8(1), \"1\")\n+\t\ttest(\"int16\", int16(12), \"12\")\n+\t\ttest(\"int32\", int32(1234), \"1234\")\n+\t\ttest(\"int64\", int64(12345678), \"12345678\")\n+\t\ttest(\"float32\", float32(1.5), \"1.5\")\n+\t\ttest(\"float64\", float64(64), \"64\")\n+\t\ttest(\"bool\", false, \"false\")\n+\t})\n+\n+\t// The numbers below are only valid for 64-bit interface word sizes,\n+\t// and gc. With 32-bit words there are more convT2E allocs, and\n+\t// with gccgo, only pointers currently go in interface data.\n+\t// So only care on amd64 gc for now.\n+\tmeasureAllocs := runtime.GOARCH == \"amd64\" && runtime.Compiler == \"gc\"\n+\n+\tif n > 0.5 && measureAllocs {\n+\t\tt.Fatalf(\"allocs = %v; want 0\", n)\n+\t}\n+\n+\t// This one involves a convT2E allocation, string -> interface{}\n+\tn = testing.AllocsPerRun(100, func() {\n+\t\ttest(\"string\", \"foo\", \"foo\")\n+\t})\n+\tif n > 1.5 && measureAllocs {\n+\t\tt.Fatalf(\"allocs = %v; want max 1\", n)\n+\t}\n+}"}, {"sha": "2aa0c270ff2509b67954fd101df039166a1fb963", "filename": "libgo/go/debug/dwarf/const.go", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Fconst.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Fconst.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Fconst.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -207,6 +207,7 @@ const (\n \tformRef8        format = 0x14\n \tformRefUdata    format = 0x15\n \tformIndirect    format = 0x16\n+\t// The following are new in DWARF 4.\n \tformSecOffset   format = 0x17\n \tformExprloc     format = 0x18\n \tformFlagPresent format = 0x19\n@@ -264,15 +265,22 @@ const (\n \tTagVariantPart            Tag = 0x33\n \tTagVariable               Tag = 0x34\n \tTagVolatileType           Tag = 0x35\n-\tTagDwarfProcedure         Tag = 0x36\n-\tTagRestrictType           Tag = 0x37\n-\tTagInterfaceType          Tag = 0x38\n-\tTagNamespace              Tag = 0x39\n-\tTagImportedModule         Tag = 0x3A\n-\tTagUnspecifiedType        Tag = 0x3B\n-\tTagPartialUnit            Tag = 0x3C\n-\tTagImportedUnit           Tag = 0x3D\n-\tTagMutableType            Tag = 0x3E\n+\t// The following are new in DWARF 3.\n+\tTagDwarfProcedure  Tag = 0x36\n+\tTagRestrictType    Tag = 0x37\n+\tTagInterfaceType   Tag = 0x38\n+\tTagNamespace       Tag = 0x39\n+\tTagImportedModule  Tag = 0x3A\n+\tTagUnspecifiedType Tag = 0x3B\n+\tTagPartialUnit     Tag = 0x3C\n+\tTagImportedUnit    Tag = 0x3D\n+\tTagMutableType     Tag = 0x3E // Later removed from DWARF.\n+\tTagCondition       Tag = 0x3F\n+\tTagSharedType      Tag = 0x40\n+\t// The following are new in DWARF 4.\n+\tTagTypeUnit            Tag = 0x41\n+\tTagRvalueReferenceType Tag = 0x42\n+\tTagTemplateAlias       Tag = 0x43\n )\n \n var tagNames = [...]string{\n@@ -332,6 +340,11 @@ var tagNames = [...]string{\n \tTagPartialUnit:            \"PartialUnit\",\n \tTagImportedUnit:           \"ImportedUnit\",\n \tTagMutableType:            \"MutableType\",\n+\tTagCondition:              \"Condition\",\n+\tTagSharedType:             \"SharedType\",\n+\tTagTypeUnit:               \"TypeUnit\",\n+\tTagRvalueReferenceType:    \"RvalueReferenceType\",\n+\tTagTemplateAlias:          \"TemplateAlias\",\n }\n \n func (t Tag) String() string {"}, {"sha": "1772221633f11d963e5e1731603689879aa68fd3", "filename": "libgo/go/debug/dwarf/entry.go", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Fentry.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Fentry.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Fentry.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -396,3 +396,15 @@ func (r *Reader) SkipChildren() {\n \t\t}\n \t}\n }\n+\n+// clone returns a copy of the reader.  This is used by the typeReader\n+// interface.\n+func (r *Reader) clone() typeReader {\n+\treturn r.d.Reader()\n+}\n+\n+// offset returns the current buffer offset.  This is used by the\n+// typeReader interface.\n+func (r *Reader) offset() Offset {\n+\treturn r.b.off\n+}"}, {"sha": "c1b3f37aca9618ebbf5aa1f07eb691abeba9cfaa", "filename": "libgo/go/debug/dwarf/open.go", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Fopen.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Fopen.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Fopen.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -26,6 +26,7 @@ type Data struct {\n \tabbrevCache map[uint32]abbrevTable\n \torder       binary.ByteOrder\n \ttypeCache   map[Offset]Type\n+\ttypeSigs    map[uint64]*typeUnit\n \tunit        []unit\n }\n \n@@ -49,6 +50,7 @@ func New(abbrev, aranges, frame, info, line, pubnames, ranges, str []byte) (*Dat\n \t\tstr:         str,\n \t\tabbrevCache: make(map[uint32]abbrevTable),\n \t\ttypeCache:   make(map[Offset]Type),\n+\t\ttypeSigs:    make(map[uint64]*typeUnit),\n \t}\n \n \t// Sniff .debug_info to figure out byte order.\n@@ -75,3 +77,11 @@ func New(abbrev, aranges, frame, info, line, pubnames, ranges, str []byte) (*Dat\n \td.unit = u\n \treturn d, nil\n }\n+\n+// AddTypes will add one .debug_types section to the DWARF data.  A\n+// typical object with DWARF version 4 debug info will have multiple\n+// .debug_types sections.  The name is used for error reporting only,\n+// and serves to distinguish one .debug_types section from another.\n+func (d *Data) AddTypes(name string, types []byte) error {\n+\treturn d.parseTypes(name, types)\n+}"}, {"sha": "3d5a5a1b1620badce20ec4ea8c630f3bfd58c4d2", "filename": "libgo/go/debug/dwarf/testdata/typedef.elf4", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftestdata%2Ftypedef.elf4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftestdata%2Ftypedef.elf4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftestdata%2Ftypedef.elf4?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "68866d0b7bfbbf4cd3e44aa1431f6bd01ea07c90", "filename": "libgo/go/debug/dwarf/type.go", "status": "modified", "additions": 49, "deletions": 26, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftype.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftype.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftype.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -251,23 +251,37 @@ func (t *TypedefType) String() string { return t.Name }\n \n func (t *TypedefType) Size() int64 { return t.Type.Size() }\n \n+// typeReader is used to read from either the info section or the\n+// types section.\n+type typeReader interface {\n+\tSeek(Offset)\n+\tNext() (*Entry, error)\n+\tclone() typeReader\n+\toffset() Offset\n+}\n+\n+// Type reads the type at off in the DWARF ``info'' section.\n func (d *Data) Type(off Offset) (Type, error) {\n-\tif t, ok := d.typeCache[off]; ok {\n+\treturn d.readType(\"info\", d.Reader(), off, d.typeCache)\n+}\n+\n+// readType reads a type from r at off of name using and updating a\n+// type cache.\n+func (d *Data) readType(name string, r typeReader, off Offset, typeCache map[Offset]Type) (Type, error) {\n+\tif t, ok := typeCache[off]; ok {\n \t\treturn t, nil\n \t}\n-\n-\tr := d.Reader()\n \tr.Seek(off)\n \te, err := r.Next()\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \tif e == nil || e.Offset != off {\n-\t\treturn nil, DecodeError{\"info\", off, \"no type at offset\"}\n+\t\treturn nil, DecodeError{name, off, \"no type at offset\"}\n \t}\n \n \t// Parse type from Entry.\n-\t// Must always set d.typeCache[off] before calling\n+\t// Must always set typeCache[off] before calling\n \t// d.Type recursively, to handle circular types correctly.\n \tvar typ Type\n \n@@ -290,7 +304,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t\t\treturn nil\n \t\t\t}\n \t\t\tif kid == nil {\n-\t\t\t\terr = DecodeError{\"info\", r.b.off, \"unexpected end of DWARF entries\"}\n+\t\t\t\terr = DecodeError{name, r.offset(), \"unexpected end of DWARF entries\"}\n \t\t\t\treturn nil\n \t\t\t}\n \t\t\tif kid.Tag == 0 {\n@@ -313,15 +327,21 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t// Get Type referred to by Entry's AttrType field.\n \t// Set err if error happens.  Not having a type is an error.\n \ttypeOf := func(e *Entry) Type {\n-\t\ttoff, ok := e.Val(AttrType).(Offset)\n-\t\tif !ok {\n+\t\ttval := e.Val(AttrType)\n+\t\tvar t Type\n+\t\tswitch toff := tval.(type) {\n+\t\tcase Offset:\n+\t\t\tif t, err = d.readType(name, r.clone(), toff, typeCache); err != nil {\n+\t\t\t\treturn nil\n+\t\t\t}\n+\t\tcase uint64:\n+\t\t\tif t, err = d.sigToType(toff); err != nil {\n+\t\t\t\treturn nil\n+\t\t\t}\n+\t\tdefault:\n \t\t\t// It appears that no Type means \"void\".\n \t\t\treturn new(VoidType)\n \t\t}\n-\t\tvar t Type\n-\t\tif t, err = d.Type(toff); err != nil {\n-\t\t\treturn nil\n-\t\t}\n \t\treturn t\n \t}\n \n@@ -337,7 +357,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t//\tdimensions are in left to right order.\n \t\tt := new(ArrayType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tif t.Type = typeOf(e); err != nil {\n \t\t\tgoto Error\n \t\t}\n@@ -363,7 +383,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t\t\t}\n \t\t\t\tndim++\n \t\t\tcase TagEnumerationType:\n-\t\t\t\terr = DecodeError{\"info\", kid.Offset, \"cannot handle enumeration type as array bound\"}\n+\t\t\t\terr = DecodeError{name, kid.Offset, \"cannot handle enumeration type as array bound\"}\n \t\t\t\tgoto Error\n \t\t\t}\n \t\t}\n@@ -383,12 +403,12 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\tname, _ := e.Val(AttrName).(string)\n \t\tenc, ok := e.Val(AttrEncoding).(int64)\n \t\tif !ok {\n-\t\t\terr = DecodeError{\"info\", e.Offset, \"missing encoding attribute for \" + name}\n+\t\t\terr = DecodeError{name, e.Offset, \"missing encoding attribute for \" + name}\n \t\t\tgoto Error\n \t\t}\n \t\tswitch enc {\n \t\tdefault:\n-\t\t\terr = DecodeError{\"info\", e.Offset, \"unrecognized encoding attribute value\"}\n+\t\t\terr = DecodeError{name, e.Offset, \"unrecognized encoding attribute value\"}\n \t\t\tgoto Error\n \n \t\tcase encAddress:\n@@ -408,7 +428,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\tcase encUnsignedChar:\n \t\t\ttyp = new(UcharType)\n \t\t}\n-\t\td.typeCache[off] = typ\n+\t\ttypeCache[off] = typ\n \t\tt := typ.(interface {\n \t\t\tBasic() *BasicType\n \t\t}).Basic()\n@@ -433,7 +453,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t// There is much more to handle C++, all ignored for now.\n \t\tt := new(StructType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tswitch e.Tag {\n \t\tcase TagClassType:\n \t\t\tt.Kind = \"class\"\n@@ -453,19 +473,22 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t\t\tif f.Type = typeOf(kid); err != nil {\n \t\t\t\t\tgoto Error\n \t\t\t\t}\n-\t\t\t\tif loc, ok := kid.Val(AttrDataMemberLoc).([]byte); ok {\n+\t\t\t\tswitch loc := kid.Val(AttrDataMemberLoc).(type) {\n+\t\t\t\tcase []byte:\n \t\t\t\t\t// TODO: Should have original compilation\n \t\t\t\t\t// unit here, not unknownFormat.\n \t\t\t\t\tb := makeBuf(d, unknownFormat{}, \"location\", 0, loc)\n \t\t\t\t\tif b.uint8() != opPlusUconst {\n-\t\t\t\t\t\terr = DecodeError{\"info\", kid.Offset, \"unexpected opcode\"}\n+\t\t\t\t\t\terr = DecodeError{name, kid.Offset, \"unexpected opcode\"}\n \t\t\t\t\t\tgoto Error\n \t\t\t\t\t}\n \t\t\t\t\tf.ByteOffset = int64(b.uint())\n \t\t\t\t\tif b.err != nil {\n \t\t\t\t\t\terr = b.err\n \t\t\t\t\t\tgoto Error\n \t\t\t\t\t}\n+\t\t\t\tcase int64:\n+\t\t\t\t\tf.ByteOffset = loc\n \t\t\t\t}\n \n \t\t\t\thaveBitOffset := false\n@@ -502,7 +525,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t//\tAttrType: subtype\n \t\tt := new(QualType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tif t.Type = typeOf(e); err != nil {\n \t\t\tgoto Error\n \t\t}\n@@ -526,7 +549,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t//\t\tAttrConstValue: value of constant\n \t\tt := new(EnumType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tt.EnumName, _ = e.Val(AttrName).(string)\n \t\tt.Val = make([]*EnumValue, 0, 8)\n \t\tfor kid := next(); kid != nil; kid = next() {\n@@ -552,7 +575,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t//\tAttrAddrClass: address class [ignored]\n \t\tt := new(PtrType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tif e.Val(AttrType) == nil {\n \t\t\tt.Type = &VoidType{}\n \t\t\tbreak\n@@ -571,7 +594,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t//\tTagUnspecifiedParameter: final ...\n \t\tt := new(FuncType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tif t.ReturnType = typeOf(e); err != nil {\n \t\t\tgoto Error\n \t\t}\n@@ -598,7 +621,7 @@ func (d *Data) Type(off Offset) (Type, error) {\n \t\t//\tAttrType: type definition [required]\n \t\tt := new(TypedefType)\n \t\ttyp = t\n-\t\td.typeCache[off] = t\n+\t\ttypeCache[off] = t\n \t\tt.Name, _ = e.Val(AttrName).(string)\n \t\tt.Type = typeOf(e)\n \t}\n@@ -620,7 +643,7 @@ Error:\n \t// If the parse fails, take the type out of the cache\n \t// so that the next call with this offset doesn't hit\n \t// the cache and return success.\n-\tdelete(d.typeCache, off)\n+\tdelete(typeCache, off)\n \treturn nil, err\n }\n "}, {"sha": "2cb85e74bb23a76a81817f6bdafd0b327a838c43", "filename": "libgo/go/debug/dwarf/type_test.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftype_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftype_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftype_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -73,6 +73,8 @@ func TestTypedefsMachO(t *testing.T) {\n \ttestTypedefs(t, machoData(t, \"testdata/typedef.macho\"), \"macho\")\n }\n \n+func TestTypedefsELFDwarf4(t *testing.T) { testTypedefs(t, elfData(t, \"testdata/typedef.elf4\"), \"elf\") }\n+\n func testTypedefs(t *testing.T, d *Data, kind string) {\n \tr := d.Reader()\n \tseen := make(map[string]bool)"}, {"sha": "3fd1c9973e54a4dfe6c167f2a769854bc9204326", "filename": "libgo/go/debug/dwarf/typeunit.go", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftypeunit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftypeunit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Ftypeunit.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,166 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package dwarf\n+\n+import (\n+\t\"fmt\"\n+\t\"strconv\"\n+)\n+\n+// Parse the type units stored in a DWARF4 .debug_types section.  Each\n+// type unit defines a single primary type and an 8-byte signature.\n+// Other sections may then use formRefSig8 to refer to the type.\n+\n+// The typeUnit format is a single type with a signature.  It holds\n+// the same data as a compilation unit.\n+type typeUnit struct {\n+\tunit\n+\ttoff  Offset // Offset to signature type within data.\n+\tname  string // Name of .debug_type section.\n+\tcache Type   // Cache the type, nil to start.\n+}\n+\n+// Parse a .debug_types section.\n+func (d *Data) parseTypes(name string, types []byte) error {\n+\tb := makeBuf(d, unknownFormat{}, name, 0, types)\n+\tfor len(b.data) > 0 {\n+\t\tbase := b.off\n+\t\tdwarf64 := false\n+\t\tn := b.uint32()\n+\t\tif n == 0xffffffff {\n+\t\t\tn64 := b.uint64()\n+\t\t\tif n64 != uint64(uint32(n64)) {\n+\t\t\t\tb.error(\"type unit length overflow\")\n+\t\t\t\treturn b.err\n+\t\t\t}\n+\t\t\tn = uint32(n64)\n+\t\t\tdwarf64 = true\n+\t\t}\n+\t\thdroff := b.off\n+\t\tvers := b.uint16()\n+\t\tif vers != 4 {\n+\t\t\tb.error(\"unsupported DWARF version \" + strconv.Itoa(int(vers)))\n+\t\t\treturn b.err\n+\t\t}\n+\t\tvar ao uint32\n+\t\tif !dwarf64 {\n+\t\t\tao = b.uint32()\n+\t\t} else {\n+\t\t\tao64 := b.uint64()\n+\t\t\tif ao64 != uint64(uint32(ao64)) {\n+\t\t\t\tb.error(\"type unit abbrev offset overflow\")\n+\t\t\t\treturn b.err\n+\t\t\t}\n+\t\t\tao = uint32(ao64)\n+\t\t}\n+\t\tatable, err := d.parseAbbrev(ao)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tasize := b.uint8()\n+\t\tsig := b.uint64()\n+\n+\t\tvar toff uint32\n+\t\tif !dwarf64 {\n+\t\t\ttoff = b.uint32()\n+\t\t} else {\n+\t\t\tto64 := b.uint64()\n+\t\t\tif to64 != uint64(uint32(to64)) {\n+\t\t\t\tb.error(\"type unit type offset overflow\")\n+\t\t\t\treturn b.err\n+\t\t\t}\n+\t\t\ttoff = uint32(to64)\n+\t\t}\n+\n+\t\tboff := b.off\n+\t\td.typeSigs[sig] = &typeUnit{\n+\t\t\tunit: unit{\n+\t\t\t\tbase:   base,\n+\t\t\t\toff:    boff,\n+\t\t\t\tdata:   b.bytes(int(Offset(n) - (b.off - hdroff))),\n+\t\t\t\tatable: atable,\n+\t\t\t\tasize:  int(asize),\n+\t\t\t\tvers:   int(vers),\n+\t\t\t\tis64:   dwarf64,\n+\t\t\t},\n+\t\t\ttoff: Offset(toff),\n+\t\t\tname: name,\n+\t\t}\n+\t\tif b.err != nil {\n+\t\t\treturn b.err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// Return the type for a type signature.\n+func (d *Data) sigToType(sig uint64) (Type, error) {\n+\ttu := d.typeSigs[sig]\n+\tif tu == nil {\n+\t\treturn nil, fmt.Errorf(\"no type unit with signature %v\", sig)\n+\t}\n+\tif tu.cache != nil {\n+\t\treturn tu.cache, nil\n+\t}\n+\n+\tb := makeBuf(d, tu, tu.name, tu.off, tu.data)\n+\tr := &typeUnitReader{d: d, tu: tu, b: b}\n+\tt, err := d.readType(tu.name, r, Offset(tu.toff), make(map[Offset]Type))\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\ttu.cache = t\n+\treturn t, nil\n+}\n+\n+// typeUnitReader is a typeReader for a tagTypeUnit.\n+type typeUnitReader struct {\n+\td   *Data\n+\ttu  *typeUnit\n+\tb   buf\n+\terr error\n+}\n+\n+// Seek to a new position in the type unit.\n+func (tur *typeUnitReader) Seek(off Offset) {\n+\ttur.err = nil\n+\tdoff := off - tur.tu.off\n+\tif doff < 0 || doff >= Offset(len(tur.tu.data)) {\n+\t\ttur.err = fmt.Errorf(\"%s: offset %d out of range; max %d\", tur.tu.name, doff, len(tur.tu.data))\n+\t\treturn\n+\t}\n+\ttur.b = makeBuf(tur.d, tur.tu, tur.tu.name, off, tur.tu.data[doff:])\n+}\n+\n+// Next reads the next Entry from the type unit.\n+func (tur *typeUnitReader) Next() (*Entry, error) {\n+\tif tur.err != nil {\n+\t\treturn nil, tur.err\n+\t}\n+\tif len(tur.tu.data) == 0 {\n+\t\treturn nil, nil\n+\t}\n+\te := tur.b.entry(tur.tu.atable, tur.tu.base)\n+\tif tur.b.err != nil {\n+\t\ttur.err = tur.b.err\n+\t\treturn nil, tur.err\n+\t}\n+\treturn e, nil\n+}\n+\n+// clone returns a new reader for the type unit.\n+func (tur *typeUnitReader) clone() typeReader {\n+\treturn &typeUnitReader{\n+\t\td:  tur.d,\n+\t\ttu: tur.tu,\n+\t\tb:  makeBuf(tur.d, tur.tu, tur.tu.name, tur.tu.off, tur.tu.data),\n+\t}\n+}\n+\n+// offset returns the current offset.\n+func (tur *typeUnitReader) offset() Offset {\n+\treturn tur.b.off\n+}"}, {"sha": "be6093519d5efaa49e8ccafd42a896cca1fc8235", "filename": "libgo/go/debug/dwarf/unit.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Funit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fdwarf%2Funit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fdwarf%2Funit.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -76,7 +76,7 @@ func (d *Data) parseUnits() ([]unit, error) {\n \t\t\tn = uint32(b.uint64())\n \t\t}\n \t\tvers := b.uint16()\n-\t\tif vers < 2 || vers > 4 {\n+\t\tif vers != 2 && vers != 3 && vers != 4 {\n \t\t\tb.error(\"unsupported DWARF version \" + strconv.Itoa(int(vers)))\n \t\t\tbreak\n \t\t}"}, {"sha": "e3c51bb717b20661cc69e7b77fc1f7892e79b980", "filename": "libgo/go/debug/elf/elf_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Felf%2Felf_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Felf%2Felf_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Felf%2Felf_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -43,7 +43,7 @@ func TestNames(t *testing.T) {\n \tfor i, tt := range nameTests {\n \t\ts := fmt.Sprint(tt.val)\n \t\tif s != tt.str {\n-\t\t\tt.Errorf(\"#%d: want %q have %q\", i, s, tt.str)\n+\t\t\tt.Errorf(\"#%d: Sprint(%d) = %q, want %q\", i, tt.val, s, tt.str)\n \t\t}\n \t}\n }"}, {"sha": "a98b469b33036ae97c7bdee6399f98ae13bf6953", "filename": "libgo/go/debug/elf/file.go", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Felf%2Ffile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Felf%2Ffile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Felf%2Ffile.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -76,6 +76,9 @@ type Section struct {\n func (s *Section) Data() ([]byte, error) {\n \tdat := make([]byte, s.sr.Size())\n \tn, err := s.sr.ReadAt(dat, 0)\n+\tif n == len(dat) {\n+\t\terr = nil\n+\t}\n \treturn dat[0:n], err\n }\n \n@@ -412,7 +415,7 @@ func (f *File) getSymbols32(typ SectionType) ([]Symbol, []byte, error) {\n \tif err != nil {\n \t\treturn nil, nil, errors.New(\"cannot load symbol section\")\n \t}\n-\tsymtab := bytes.NewBuffer(data)\n+\tsymtab := bytes.NewReader(data)\n \tif symtab.Len()%Sym32Size != 0 {\n \t\treturn nil, nil, errors.New(\"length of symbol section is not a multiple of SymSize\")\n \t}\n@@ -455,7 +458,7 @@ func (f *File) getSymbols64(typ SectionType) ([]Symbol, []byte, error) {\n \tif err != nil {\n \t\treturn nil, nil, errors.New(\"cannot load symbol section\")\n \t}\n-\tsymtab := bytes.NewBuffer(data)\n+\tsymtab := bytes.NewReader(data)\n \tif symtab.Len()%Sym64Size != 0 {\n \t\treturn nil, nil, errors.New(\"length of symbol section is not a multiple of Sym64Size\")\n \t}\n@@ -533,7 +536,7 @@ func (f *File) applyRelocationsAMD64(dst []byte, rels []byte) error {\n \t\treturn err\n \t}\n \n-\tb := bytes.NewBuffer(rels)\n+\tb := bytes.NewReader(rels)\n \tvar rela Rela64\n \n \tfor b.Len() > 0 {\n@@ -601,7 +604,44 @@ func (f *File) DWARF() (*dwarf.Data, error) {\n \t}\n \n \tabbrev, info, line, ranges, str := dat[0], dat[1], dat[2], dat[3], dat[4]\n-\treturn dwarf.New(abbrev, nil, nil, info, line, nil, ranges, str)\n+\td, err := dwarf.New(abbrev, nil, nil, info, line, nil, ranges, str)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\t// Look for DWARF4 .debug_types sections.\n+\tfor i, s := range f.Sections {\n+\t\tif s.Name == \".debug_types\" {\n+\t\t\tb, err := s.Data()\n+\t\t\tif err != nil && uint64(len(b)) < s.Size {\n+\t\t\t\treturn nil, err\n+\t\t\t}\n+\n+\t\t\tfor _, r := range f.Sections {\n+\t\t\t\tif r.Type != SHT_RELA && r.Type != SHT_REL {\n+\t\t\t\t\tcontinue\n+\t\t\t\t}\n+\t\t\t\tif int(r.Info) != i {\n+\t\t\t\t\tcontinue\n+\t\t\t\t}\n+\t\t\t\trd, err := r.Data()\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn nil, err\n+\t\t\t\t}\n+\t\t\t\terr = f.applyRelocations(b, rd)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn nil, err\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\terr = d.AddTypes(fmt.Sprintf(\"types-%d\", i), b)\n+\t\t\tif err != nil {\n+\t\t\t\treturn nil, err\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn d, nil\n }\n \n // Symbols returns the symbol table for f."}, {"sha": "34d9ee79234ef29ea03feeb69d220b0796295636", "filename": "libgo/go/debug/elf/testdata/hello.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Felf%2Ftestdata%2Fhello.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Felf%2Ftestdata%2Fhello.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Felf%2Ftestdata%2Fhello.c?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,7 @@\n+#include <stdio.h>\n+\n+void\n+main(int argc, char *argv[])\n+{\n+\tprintf(\"hello, world\\n\");\n+}"}, {"sha": "f65abb6c27399e253c0612dd16c80c6a9a9a9b14", "filename": "libgo/go/debug/goobj/read.go", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -72,6 +72,49 @@ const (\n \tSHOSTOBJ\n )\n \n+var symKindStrings = []string{\n+\tSBSS:              \"SBSS\",\n+\tSCONST:            \"SCONST\",\n+\tSDATA:             \"SDATA\",\n+\tSDYNIMPORT:        \"SDYNIMPORT\",\n+\tSELFROSECT:        \"SELFROSECT\",\n+\tSELFRXSECT:        \"SELFRXSECT\",\n+\tSELFSECT:          \"SELFSECT\",\n+\tSFILE:             \"SFILE\",\n+\tSFILEPATH:         \"SFILEPATH\",\n+\tSFUNCTAB:          \"SFUNCTAB\",\n+\tSGOFUNC:           \"SGOFUNC\",\n+\tSGOSTRING:         \"SGOSTRING\",\n+\tSHOSTOBJ:          \"SHOSTOBJ\",\n+\tSINITARR:          \"SINITARR\",\n+\tSMACHO:            \"SMACHO\",\n+\tSMACHOGOT:         \"SMACHOGOT\",\n+\tSMACHOINDIRECTGOT: \"SMACHOINDIRECTGOT\",\n+\tSMACHOINDIRECTPLT: \"SMACHOINDIRECTPLT\",\n+\tSMACHOPLT:         \"SMACHOPLT\",\n+\tSMACHOSYMSTR:      \"SMACHOSYMSTR\",\n+\tSMACHOSYMTAB:      \"SMACHOSYMTAB\",\n+\tSNOPTRBSS:         \"SNOPTRBSS\",\n+\tSNOPTRDATA:        \"SNOPTRDATA\",\n+\tSPCLNTAB:          \"SPCLNTAB\",\n+\tSRODATA:           \"SRODATA\",\n+\tSSTRING:           \"SSTRING\",\n+\tSSYMTAB:           \"SSYMTAB\",\n+\tSTEXT:             \"STEXT\",\n+\tSTLSBSS:           \"STLSBSS\",\n+\tSTYPE:             \"STYPE\",\n+\tSTYPELINK:         \"STYPELINK\",\n+\tSWINDOWS:          \"SWINDOWS\",\n+\tSXREF:             \"SXREF\",\n+}\n+\n+func (k SymKind) String() string {\n+\tif k < 0 || int(k) >= len(symKindStrings) {\n+\t\treturn fmt.Sprintf(\"SymKind(%d)\", k)\n+\t}\n+\treturn symKindStrings[k]\n+}\n+\n // A Sym is a named symbol in an object file.\n type Sym struct {\n \tSymID         // symbol identifier (name and version)\n@@ -98,6 +141,13 @@ type SymID struct {\n \tVersion int\n }\n \n+func (s SymID) String() string {\n+\tif s.Version == 0 {\n+\t\treturn s.Name\n+\t}\n+\treturn fmt.Sprintf(\"%s<%d>\", s.Name, s.Version)\n+}\n+\n // A Data is a reference to data stored in an object file.\n // It records the offset and size of the data, so that a client can\n // read the data only if necessary."}, {"sha": "6620aefb053ceab0bb20b4a8cd5900adab4e091c", "filename": "libgo/go/debug/gosym/pclntab.go", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fgosym%2Fpclntab.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fgosym%2Fpclntab.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fgosym%2Fpclntab.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -196,6 +196,33 @@ func (t *LineTable) go12Init() {\n \tt.go12 = 1 // so far so good\n }\n \n+// go12Funcs returns a slice of Funcs derived from the Go 1.2 pcln table.\n+func (t *LineTable) go12Funcs() []Func {\n+\t// Assume it is malformed and return nil on error.\n+\tdefer func() {\n+\t\trecover()\n+\t}()\n+\n+\tn := len(t.functab) / int(t.ptrsize) / 2\n+\tfuncs := make([]Func, n)\n+\tfor i := range funcs {\n+\t\tf := &funcs[i]\n+\t\tf.Entry = uint64(t.uintptr(t.functab[2*i*int(t.ptrsize):]))\n+\t\tf.End = uint64(t.uintptr(t.functab[(2*i+2)*int(t.ptrsize):]))\n+\t\tinfo := t.Data[t.uintptr(t.functab[(2*i+1)*int(t.ptrsize):]):]\n+\t\tf.LineTable = t\n+\t\tf.FrameSize = int(t.binary.Uint32(info[t.ptrsize+2*4:]))\n+\t\tf.Sym = &Sym{\n+\t\t\tValue:  f.Entry,\n+\t\t\tType:   'T',\n+\t\t\tName:   t.string(t.binary.Uint32(info[t.ptrsize:])),\n+\t\t\tGoType: 0,\n+\t\t\tFunc:   f,\n+\t\t}\n+\t}\n+\treturn funcs\n+}\n+\n // findFunc returns the func corresponding to the given program counter.\n func (t *LineTable) findFunc(pc uint64) []byte {\n \tif pc < t.uintptr(t.functab) || pc >= t.uintptr(t.functab[len(t.functab)-int(t.ptrsize):]) {"}, {"sha": "3864e3cb4fa8ff81060e470a5bf4fb11af067f65", "filename": "libgo/go/debug/gosym/symtab.go", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fgosym%2Fsymtab.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fgosym%2Fsymtab.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fgosym%2Fsymtab.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -129,6 +129,9 @@ var (\n )\n \n func walksymtab(data []byte, fn func(sym) error) error {\n+\tif len(data) == 0 { // missing symtab is okay\n+\t\treturn nil\n+\t}\n \tvar order binary.ByteOrder = binary.BigEndian\n \tnewTable := false\n \tswitch {\n@@ -455,6 +458,10 @@ func NewTable(symtab []byte, pcln *LineTable) (*Table, error) {\n \t\t\ti = end - 1 // loop will i++\n \t\t}\n \t}\n+\n+\tif t.go12line != nil && nf == 0 {\n+\t\tt.Funcs = t.go12line.go12Funcs()\n+\t}\n \tif obj != nil {\n \t\tobj.Funcs = t.Funcs[lastf:]\n \t}"}, {"sha": "93b8315263cc9217365e5beefdb46cf10bf348ed", "filename": "libgo/go/debug/macho/fat.go", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ffat.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ffat.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fmacho%2Ffat.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,146 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package macho\n+\n+import (\n+\t\"encoding/binary\"\n+\t\"fmt\"\n+\t\"io\"\n+\t\"os\"\n+)\n+\n+// A FatFile is a Mach-O universal binary that contains at least one architecture.\n+type FatFile struct {\n+\tMagic  uint32\n+\tArches []FatArch\n+\tcloser io.Closer\n+}\n+\n+// A FatArchHeader represents a fat header for a specific image architecture.\n+type FatArchHeader struct {\n+\tCpu    Cpu\n+\tSubCpu uint32\n+\tOffset uint32\n+\tSize   uint32\n+\tAlign  uint32\n+}\n+\n+const fatArchHeaderSize = 5 * 4\n+\n+// A FatArch is a Mach-O File inside a FatFile.\n+type FatArch struct {\n+\tFatArchHeader\n+\t*File\n+}\n+\n+// ErrNotFat is returned from NewFatFile or OpenFat when the file is not a\n+// universal binary but may be a thin binary, based on its magic number.\n+var ErrNotFat = &FormatError{0, \"not a fat Mach-O file\", nil}\n+\n+// NewFatFile creates a new FatFile for accessing all the Mach-O images in a\n+// universal binary. The Mach-O binary is expected to start at position 0 in\n+// the ReaderAt.\n+func NewFatFile(r io.ReaderAt) (*FatFile, error) {\n+\tvar ff FatFile\n+\tsr := io.NewSectionReader(r, 0, 1<<63-1)\n+\n+\t// Read the fat_header struct, which is always in big endian.\n+\t// Start with the magic number.\n+\terr := binary.Read(sr, binary.BigEndian, &ff.Magic)\n+\tif err != nil {\n+\t\treturn nil, &FormatError{0, \"error reading magic number\", nil}\n+\t} else if ff.Magic != MagicFat {\n+\t\t// See if this is a Mach-O file via its magic number. The magic\n+\t\t// must be converted to little endian first though.\n+\t\tvar buf [4]byte\n+\t\tbinary.BigEndian.PutUint32(buf[:], ff.Magic)\n+\t\tleMagic := binary.LittleEndian.Uint32(buf[:])\n+\t\tif leMagic == Magic32 || leMagic == Magic64 {\n+\t\t\treturn nil, ErrNotFat\n+\t\t} else {\n+\t\t\treturn nil, &FormatError{0, \"invalid magic number\", nil}\n+\t\t}\n+\t}\n+\toffset := int64(4)\n+\n+\t// Read the number of FatArchHeaders that come after the fat_header.\n+\tvar narch uint32\n+\terr = binary.Read(sr, binary.BigEndian, &narch)\n+\tif err != nil {\n+\t\treturn nil, &FormatError{offset, \"invalid fat_header\", nil}\n+\t}\n+\toffset += 4\n+\n+\tif narch < 1 {\n+\t\treturn nil, &FormatError{offset, \"file contains no images\", nil}\n+\t}\n+\n+\t// Combine the Cpu and SubCpu (both uint32) into a uint64 to make sure\n+\t// there are not duplicate architectures.\n+\tseenArches := make(map[uint64]bool, narch)\n+\t// Make sure that all images are for the same MH_ type.\n+\tvar machoType Type\n+\n+\t// Following the fat_header comes narch fat_arch structs that index\n+\t// Mach-O images further in the file.\n+\tff.Arches = make([]FatArch, narch)\n+\tfor i := uint32(0); i < narch; i++ {\n+\t\tfa := &ff.Arches[i]\n+\t\terr = binary.Read(sr, binary.BigEndian, &fa.FatArchHeader)\n+\t\tif err != nil {\n+\t\t\treturn nil, &FormatError{offset, \"invalid fat_arch header\", nil}\n+\t\t}\n+\t\toffset += fatArchHeaderSize\n+\n+\t\tfr := io.NewSectionReader(r, int64(fa.Offset), int64(fa.Size))\n+\t\tfa.File, err = NewFile(fr)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\n+\t\t// Make sure the architecture for this image is not duplicate.\n+\t\tseenArch := (uint64(fa.Cpu) << 32) | uint64(fa.SubCpu)\n+\t\tif o, k := seenArches[seenArch]; o || k {\n+\t\t\treturn nil, &FormatError{offset, fmt.Sprintf(\"duplicate architecture cpu=%v, subcpu=%#x\", fa.Cpu, fa.SubCpu), nil}\n+\t\t}\n+\t\tseenArches[seenArch] = true\n+\n+\t\t// Make sure the Mach-O type matches that of the first image.\n+\t\tif i == 0 {\n+\t\t\tmachoType = fa.Type\n+\t\t} else {\n+\t\t\tif fa.Type != machoType {\n+\t\t\t\treturn nil, &FormatError{offset, fmt.Sprintf(\"Mach-O type for architecture #%d (type=%#x) does not match first (type=%#x)\", i, fa.Type, machoType), nil}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn &ff, nil\n+}\n+\n+// OpenFat opens the named file using os.Open and prepares it for use as a Mach-O\n+// universal binary.\n+func OpenFat(name string) (ff *FatFile, err error) {\n+\tf, err := os.Open(name)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tff, err = NewFatFile(f)\n+\tif err != nil {\n+\t\tf.Close()\n+\t\treturn nil, err\n+\t}\n+\tff.closer = f\n+\treturn\n+}\n+\n+func (ff *FatFile) Close() error {\n+\tvar err error\n+\tif ff.closer != nil {\n+\t\terr = ff.closer.Close()\n+\t\tff.closer = nil\n+\t}\n+\treturn err\n+}"}, {"sha": "ed9b2a6912017d0842036ced34fbc66a327e283c", "filename": "libgo/go/debug/macho/file.go", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ffile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ffile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fmacho%2Ffile.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -74,6 +74,9 @@ type Segment struct {\n func (s *Segment) Data() ([]byte, error) {\n \tdat := make([]byte, s.sr.Size())\n \tn, err := s.sr.ReadAt(dat, 0)\n+\tif n == len(dat) {\n+\t\terr = nil\n+\t}\n \treturn dat[0:n], err\n }\n \n@@ -109,6 +112,9 @@ type Section struct {\n func (s *Section) Data() ([]byte, error) {\n \tdat := make([]byte, s.sr.Size())\n \tn, err := s.sr.ReadAt(dat, 0)\n+\tif n == len(dat) {\n+\t\terr = nil\n+\t}\n \treturn dat[0:n], err\n }\n \n@@ -246,7 +252,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \n \t\tcase LoadCmdDylib:\n \t\t\tvar hdr DylibCmd\n-\t\t\tb := bytes.NewBuffer(cmddat)\n+\t\t\tb := bytes.NewReader(cmddat)\n \t\t\tif err := binary.Read(b, bo, &hdr); err != nil {\n \t\t\t\treturn nil, err\n \t\t\t}\n@@ -263,7 +269,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \n \t\tcase LoadCmdSymtab:\n \t\t\tvar hdr SymtabCmd\n-\t\t\tb := bytes.NewBuffer(cmddat)\n+\t\t\tb := bytes.NewReader(cmddat)\n \t\t\tif err := binary.Read(b, bo, &hdr); err != nil {\n \t\t\t\treturn nil, err\n \t\t\t}\n@@ -290,7 +296,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \n \t\tcase LoadCmdDysymtab:\n \t\t\tvar hdr DysymtabCmd\n-\t\t\tb := bytes.NewBuffer(cmddat)\n+\t\t\tb := bytes.NewReader(cmddat)\n \t\t\tif err := binary.Read(b, bo, &hdr); err != nil {\n \t\t\t\treturn nil, err\n \t\t\t}\n@@ -299,7 +305,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \t\t\t\treturn nil, err\n \t\t\t}\n \t\t\tx := make([]uint32, hdr.Nindirectsyms)\n-\t\t\tif err := binary.Read(bytes.NewBuffer(dat), bo, x); err != nil {\n+\t\t\tif err := binary.Read(bytes.NewReader(dat), bo, x); err != nil {\n \t\t\t\treturn nil, err\n \t\t\t}\n \t\t\tst := new(Dysymtab)\n@@ -311,7 +317,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \n \t\tcase LoadCmdSegment:\n \t\t\tvar seg32 Segment32\n-\t\t\tb := bytes.NewBuffer(cmddat)\n+\t\t\tb := bytes.NewReader(cmddat)\n \t\t\tif err := binary.Read(b, bo, &seg32); err != nil {\n \t\t\t\treturn nil, err\n \t\t\t}\n@@ -349,7 +355,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \n \t\tcase LoadCmdSegment64:\n \t\t\tvar seg64 Segment64\n-\t\t\tb := bytes.NewBuffer(cmddat)\n+\t\t\tb := bytes.NewReader(cmddat)\n \t\t\tif err := binary.Read(b, bo, &seg64); err != nil {\n \t\t\t\treturn nil, err\n \t\t\t}\n@@ -396,7 +402,7 @@ func NewFile(r io.ReaderAt) (*File, error) {\n func (f *File) parseSymtab(symdat, strtab, cmddat []byte, hdr *SymtabCmd, offset int64) (*Symtab, error) {\n \tbo := f.ByteOrder\n \tsymtab := make([]Symbol, hdr.Nsyms)\n-\tb := bytes.NewBuffer(symdat)\n+\tb := bytes.NewReader(symdat)\n \tfor i := range symtab {\n \t\tvar n Nlist64\n \t\tif f.Magic == Magic64 {"}, {"sha": "0de9184c22746a22d4e1eb05f8b08b8ec7041b8b", "filename": "libgo/go/debug/macho/file_test.go", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ffile_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ffile_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fmacho%2Ffile_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -165,3 +165,46 @@ func TestOpenFailure(t *testing.T) {\n \t\tt.Errorf(\"open %s: succeeded unexpectedly\", filename)\n \t}\n }\n+\n+func TestOpenFat(t *testing.T) {\n+\tff, err := OpenFat(\"testdata/fat-gcc-386-amd64-darwin-exec\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tif ff.Magic != MagicFat {\n+\t\tt.Errorf(\"OpenFat: got magic number %#x, want %#x\", ff.Magic, MagicFat)\n+\t}\n+\tif len(ff.Arches) != 2 {\n+\t\tt.Errorf(\"OpenFat: got %d architectures, want 2\", len(ff.Arches))\n+\t}\n+\n+\tfor i := range ff.Arches {\n+\t\tarch := &ff.Arches[i]\n+\t\tftArch := &fileTests[i]\n+\n+\t\tif arch.Cpu != ftArch.hdr.Cpu || arch.SubCpu != ftArch.hdr.SubCpu {\n+\t\t\tt.Error(\"OpenFat: architecture #%d got cpu=%#x subtype=%#x, expected cpu=%#x, subtype=%#x\", i, arch.Cpu, arch.SubCpu, ftArch.hdr.Cpu, ftArch.hdr.SubCpu)\n+\t\t}\n+\n+\t\tif !reflect.DeepEqual(arch.FileHeader, ftArch.hdr) {\n+\t\t\tt.Errorf(\"OpenFat header:\\n\\tgot %#v\\n\\twant %#v\\n\", arch.FileHeader, ftArch.hdr)\n+\t\t}\n+\t}\n+}\n+\n+func TestOpenFatFailure(t *testing.T) {\n+\tfilename := \"file.go\" // not a Mach-O file\n+\tif _, err := OpenFat(filename); err == nil {\n+\t\tt.Errorf(\"OpenFat %s: succeeded unexpectedly\", filename)\n+\t}\n+\n+\tfilename = \"testdata/gcc-386-darwin-exec\" // not a fat Mach-O\n+\tff, err := OpenFat(filename)\n+\tif err != ErrNotFat {\n+\t\tt.Errorf(\"OpenFat %s: got %v, want ErrNotFat\", err)\n+\t}\n+\tif ff != nil {\n+\t\tt.Errorf(\"OpenFat %s: got %v, want nil\", ff)\n+\t}\n+}"}, {"sha": "09f4d0ec91c63b7fcf2c8931929aa8aa75847aff", "filename": "libgo/go/debug/macho/macho.go", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Fmacho.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Fmacho.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fmacho%2Fmacho.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -26,16 +26,19 @@ const (\n )\n \n const (\n-\tMagic32 uint32 = 0xfeedface\n-\tMagic64 uint32 = 0xfeedfacf\n+\tMagic32  uint32 = 0xfeedface\n+\tMagic64  uint32 = 0xfeedfacf\n+\tMagicFat uint32 = 0xcafebabe\n )\n \n-// A Type is a Mach-O file type, either an object or an executable.\n+// A Type is the Mach-O file type, e.g. an object file, executable, or dynamic library.\n type Type uint32\n \n const (\n-\tTypeObj  Type = 1\n-\tTypeExec Type = 2\n+\tTypeObj    Type = 1\n+\tTypeExec   Type = 2\n+\tTypeDylib  Type = 6\n+\tTypeBundle Type = 8\n )\n \n // A Cpu is a Mach-O cpu type."}, {"sha": "7efd19300b2899328664e0e0314fac011722724b", "filename": "libgo/go/debug/macho/testdata/fat-gcc-386-amd64-darwin-exec", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ftestdata%2Ffat-gcc-386-amd64-darwin-exec", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fmacho%2Ftestdata%2Ffat-gcc-386-amd64-darwin-exec", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fmacho%2Ftestdata%2Ffat-gcc-386-amd64-darwin-exec?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "d0005bacf383ee9e6ff4107092ba07e3827eb184", "filename": "libgo/go/debug/pe/file.go", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fpe%2Ffile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fpe%2Ffile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fpe%2Ffile.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -72,6 +72,9 @@ type ImportDirectory struct {\n func (s *Section) Data() ([]byte, error) {\n \tdat := make([]byte, s.sr.Size())\n \tn, err := s.sr.ReadAt(dat, 0)\n+\tif n == len(dat) {\n+\t\terr = nil\n+\t}\n \treturn dat[0:n], err\n }\n \n@@ -213,15 +216,15 @@ func NewFile(r io.ReaderAt) (*File, error) {\n \t\ts := new(Section)\n \t\ts.SectionHeader = SectionHeader{\n \t\t\tName:                 name,\n-\t\t\tVirtualSize:          uint32(sh.VirtualSize),\n-\t\t\tVirtualAddress:       uint32(sh.VirtualAddress),\n-\t\t\tSize:                 uint32(sh.SizeOfRawData),\n-\t\t\tOffset:               uint32(sh.PointerToRawData),\n-\t\t\tPointerToRelocations: uint32(sh.PointerToRelocations),\n-\t\t\tPointerToLineNumbers: uint32(sh.PointerToLineNumbers),\n-\t\t\tNumberOfRelocations:  uint16(sh.NumberOfRelocations),\n-\t\t\tNumberOfLineNumbers:  uint16(sh.NumberOfLineNumbers),\n-\t\t\tCharacteristics:      uint32(sh.Characteristics),\n+\t\t\tVirtualSize:          sh.VirtualSize,\n+\t\t\tVirtualAddress:       sh.VirtualAddress,\n+\t\t\tSize:                 sh.SizeOfRawData,\n+\t\t\tOffset:               sh.PointerToRawData,\n+\t\t\tPointerToRelocations: sh.PointerToRelocations,\n+\t\t\tPointerToLineNumbers: sh.PointerToLineNumbers,\n+\t\t\tNumberOfRelocations:  sh.NumberOfRelocations,\n+\t\t\tNumberOfLineNumbers:  sh.NumberOfLineNumbers,\n+\t\t\tCharacteristics:      sh.Characteristics,\n \t\t}\n \t\ts.sr = io.NewSectionReader(r, int64(s.SectionHeader.Offset), int64(s.SectionHeader.Size))\n \t\ts.ReaderAt = s.sr"}, {"sha": "a4c95a92a5c032f29cb9a9198a4b32a884fdae08", "filename": "libgo/go/debug/plan9obj/file.go", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ffile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ffile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ffile.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,346 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Package plan9obj implements access to Plan 9 a.out object files.\n+package plan9obj\n+\n+import (\n+\t\"encoding/binary\"\n+\t\"errors\"\n+\t\"fmt\"\n+\t\"io\"\n+\t\"os\"\n+)\n+\n+// A FileHeader represents an Plan 9 a.out file header.\n+type FileHeader struct {\n+\tPtrsz int\n+}\n+\n+// A File represents an open Plan 9 a.out file.\n+type File struct {\n+\tFileHeader\n+\tSections []*Section\n+\tcloser   io.Closer\n+}\n+\n+type SectionHeader struct {\n+\tName   string\n+\tSize   uint32\n+\tOffset uint32\n+}\n+\n+// A Section represents a single section in an Plan 9 a.out file.\n+type Section struct {\n+\tSectionHeader\n+\n+\t// Embed ReaderAt for ReadAt method.\n+\t// Do not embed SectionReader directly\n+\t// to avoid having Read and Seek.\n+\t// If a client wants Read and Seek it must use\n+\t// Open() to avoid fighting over the seek offset\n+\t// with other clients.\n+\tio.ReaderAt\n+\tsr *io.SectionReader\n+}\n+\n+// Data reads and returns the contents of the Plan 9 a.out section.\n+func (s *Section) Data() ([]byte, error) {\n+\tdat := make([]byte, s.sr.Size())\n+\tn, err := s.sr.ReadAt(dat, 0)\n+\treturn dat[0:n], err\n+}\n+\n+// Open returns a new ReadSeeker reading the Plan 9 a.out section.\n+func (s *Section) Open() io.ReadSeeker { return io.NewSectionReader(s.sr, 0, 1<<63-1) }\n+\n+// A ProgHeader represents a single Plan 9 a.out program header.\n+type ProgHeader struct {\n+\tMagic uint32\n+\tText  uint32\n+\tData  uint32\n+\tBss   uint32\n+\tSyms  uint32\n+\tEntry uint64\n+\tSpsz  uint32\n+\tPcsz  uint32\n+}\n+\n+// A Prog represents the program header in an Plan 9 a.out binary.\n+type Prog struct {\n+\tProgHeader\n+\n+\t// Embed ReaderAt for ReadAt method.\n+\t// Do not embed SectionReader directly\n+\t// to avoid having Read and Seek.\n+\t// If a client wants Read and Seek it must use\n+\t// Open() to avoid fighting over the seek offset\n+\t// with other clients.\n+\tio.ReaderAt\n+\tsr *io.SectionReader\n+}\n+\n+// Open returns a new ReadSeeker reading the Plan 9 a.out program body.\n+func (p *Prog) Open() io.ReadSeeker { return io.NewSectionReader(p.sr, 0, 1<<63-1) }\n+\n+// A Symbol represents an entry in a Plan 9 a.out symbol table section.\n+type Sym struct {\n+\tValue uint64\n+\tType  rune\n+\tName  string\n+}\n+\n+/*\n+ * Plan 9 a.out reader\n+ */\n+\n+type FormatError struct {\n+\toff int\n+\tmsg string\n+\tval interface{}\n+}\n+\n+func (e *FormatError) Error() string {\n+\tmsg := e.msg\n+\tif e.val != nil {\n+\t\tmsg += fmt.Sprintf(\" '%v'\", e.val)\n+\t}\n+\tmsg += fmt.Sprintf(\" in record at byte %#x\", e.off)\n+\treturn msg\n+}\n+\n+// Open opens the named file using os.Open and prepares it for use as an Plan 9 a.out binary.\n+func Open(name string) (*File, error) {\n+\tf, err := os.Open(name)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tff, err := NewFile(f)\n+\tif err != nil {\n+\t\tf.Close()\n+\t\treturn nil, err\n+\t}\n+\tff.closer = f\n+\treturn ff, nil\n+}\n+\n+// Close closes the File.\n+// If the File was created using NewFile directly instead of Open,\n+// Close has no effect.\n+func (f *File) Close() error {\n+\tvar err error\n+\tif f.closer != nil {\n+\t\terr = f.closer.Close()\n+\t\tf.closer = nil\n+\t}\n+\treturn err\n+}\n+\n+func parseMagic(magic [4]byte) (*ExecTable, error) {\n+\tfor _, e := range exectab {\n+\t\tif string(magic[:]) == e.Magic {\n+\t\t\treturn &e, nil\n+\t\t}\n+\t}\n+\treturn nil, &FormatError{0, \"bad magic number\", magic[:]}\n+}\n+\n+// NewFile creates a new File for accessing an Plan 9 binary in an underlying reader.\n+// The Plan 9 binary is expected to start at position 0 in the ReaderAt.\n+func NewFile(r io.ReaderAt) (*File, error) {\n+\tsr := io.NewSectionReader(r, 0, 1<<63-1)\n+\t// Read and decode Plan 9 magic\n+\tvar magic [4]byte\n+\tif _, err := r.ReadAt(magic[:], 0); err != nil {\n+\t\treturn nil, err\n+\t}\n+\tmp, err := parseMagic(magic)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tf := &File{FileHeader{mp.Ptrsz}, nil, nil}\n+\n+\tph := new(prog)\n+\tif err := binary.Read(sr, binary.BigEndian, ph); err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tp := new(Prog)\n+\tp.ProgHeader = ProgHeader{\n+\t\tMagic: ph.Magic,\n+\t\tText:  ph.Text,\n+\t\tData:  ph.Data,\n+\t\tBss:   ph.Bss,\n+\t\tSyms:  ph.Syms,\n+\t\tEntry: uint64(ph.Entry),\n+\t\tSpsz:  ph.Spsz,\n+\t\tPcsz:  ph.Pcsz,\n+\t}\n+\n+\tif mp.Ptrsz == 8 {\n+\t\tif err := binary.Read(sr, binary.BigEndian, &p.Entry); err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t}\n+\n+\tvar sects = []struct {\n+\t\tname string\n+\t\tsize uint32\n+\t}{\n+\t\t{\"text\", ph.Text},\n+\t\t{\"data\", ph.Data},\n+\t\t{\"syms\", ph.Syms},\n+\t\t{\"spsz\", ph.Spsz},\n+\t\t{\"pcsz\", ph.Pcsz},\n+\t}\n+\n+\tf.Sections = make([]*Section, 5)\n+\n+\toff := mp.Hsize\n+\n+\tfor i, sect := range sects {\n+\t\ts := new(Section)\n+\t\ts.SectionHeader = SectionHeader{\n+\t\t\tName:   sect.name,\n+\t\t\tSize:   sect.size,\n+\t\t\tOffset: off,\n+\t\t}\n+\t\toff += sect.size\n+\t\ts.sr = io.NewSectionReader(r, int64(s.SectionHeader.Offset), int64(s.SectionHeader.Size))\n+\t\ts.ReaderAt = s.sr\n+\t\tf.Sections[i] = s\n+\t}\n+\n+\treturn f, nil\n+}\n+\n+func walksymtab(data []byte, ptrsz int, fn func(sym) error) error {\n+\tvar order binary.ByteOrder = binary.BigEndian\n+\tvar s sym\n+\tp := data\n+\tfor len(p) >= 4 {\n+\t\t// Symbol type, value.\n+\t\tif len(p) < ptrsz {\n+\t\t\treturn &FormatError{len(data), \"unexpected EOF\", nil}\n+\t\t}\n+\t\t// fixed-width value\n+\t\tif ptrsz == 8 {\n+\t\t\ts.value = order.Uint64(p[0:8])\n+\t\t\tp = p[8:]\n+\t\t} else {\n+\t\t\ts.value = uint64(order.Uint32(p[0:4]))\n+\t\t\tp = p[4:]\n+\t\t}\n+\n+\t\tvar typ byte\n+\t\ttyp = p[0] & 0x7F\n+\t\ts.typ = typ\n+\t\tp = p[1:]\n+\n+\t\t// Name.\n+\t\tvar i int\n+\t\tvar nnul int\n+\t\tfor i = 0; i < len(p); i++ {\n+\t\t\tif p[i] == 0 {\n+\t\t\t\tnnul = 1\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t\tswitch typ {\n+\t\tcase 'z', 'Z':\n+\t\t\tp = p[i+nnul:]\n+\t\t\tfor i = 0; i+2 <= len(p); i += 2 {\n+\t\t\t\tif p[i] == 0 && p[i+1] == 0 {\n+\t\t\t\t\tnnul = 2\n+\t\t\t\t\tbreak\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif len(p) < i+nnul {\n+\t\t\treturn &FormatError{len(data), \"unexpected EOF\", nil}\n+\t\t}\n+\t\ts.name = p[0:i]\n+\t\ti += nnul\n+\t\tp = p[i:]\n+\n+\t\tfn(s)\n+\t}\n+\treturn nil\n+}\n+\n+// NewTable decodes the Go symbol table in data,\n+// returning an in-memory representation.\n+func newTable(symtab []byte, ptrsz int) ([]Sym, error) {\n+\tvar n int\n+\terr := walksymtab(symtab, ptrsz, func(s sym) error {\n+\t\tn++\n+\t\treturn nil\n+\t})\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tfname := make(map[uint16]string)\n+\tsyms := make([]Sym, 0, n)\n+\terr = walksymtab(symtab, ptrsz, func(s sym) error {\n+\t\tn := len(syms)\n+\t\tsyms = syms[0 : n+1]\n+\t\tts := &syms[n]\n+\t\tts.Type = rune(s.typ)\n+\t\tts.Value = s.value\n+\t\tswitch s.typ {\n+\t\tdefault:\n+\t\t\tts.Name = string(s.name[:])\n+\t\tcase 'z', 'Z':\n+\t\t\tfor i := 0; i < len(s.name); i += 2 {\n+\t\t\t\teltIdx := binary.BigEndian.Uint16(s.name[i : i+2])\n+\t\t\t\telt, ok := fname[eltIdx]\n+\t\t\t\tif !ok {\n+\t\t\t\t\treturn &FormatError{-1, \"bad filename code\", eltIdx}\n+\t\t\t\t}\n+\t\t\t\tif n := len(ts.Name); n > 0 && ts.Name[n-1] != '/' {\n+\t\t\t\t\tts.Name += \"/\"\n+\t\t\t\t}\n+\t\t\t\tts.Name += elt\n+\t\t\t}\n+\t\t}\n+\t\tswitch s.typ {\n+\t\tcase 'f':\n+\t\t\tfname[uint16(s.value)] = ts.Name\n+\t\t}\n+\t\treturn nil\n+\t})\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\treturn syms, nil\n+}\n+\n+// Symbols returns the symbol table for f.\n+func (f *File) Symbols() ([]Sym, error) {\n+\tsymtabSection := f.Section(\"syms\")\n+\tif symtabSection == nil {\n+\t\treturn nil, errors.New(\"no symbol section\")\n+\t}\n+\n+\tsymtab, err := symtabSection.Data()\n+\tif err != nil {\n+\t\treturn nil, errors.New(\"cannot load symbol section\")\n+\t}\n+\n+\treturn newTable(symtab, f.Ptrsz)\n+}\n+\n+// Section returns a section with the given name, or nil if no such\n+// section exists.\n+func (f *File) Section(name string) *Section {\n+\tfor _, s := range f.Sections {\n+\t\tif s.Name == name {\n+\t\t\treturn s\n+\t\t}\n+\t}\n+\treturn nil\n+}"}, {"sha": "cc1db409295a96ebb9080c913c735f34ca194ef6", "filename": "libgo/go/debug/plan9obj/file_test.go", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ffile_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ffile_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ffile_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,81 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package plan9obj\n+\n+import (\n+\t\"reflect\"\n+\t\"testing\"\n+)\n+\n+type fileTest struct {\n+\tfile     string\n+\thdr      FileHeader\n+\tsections []*SectionHeader\n+}\n+\n+var fileTests = []fileTest{\n+\t{\n+\t\t\"testdata/386-plan9-exec\",\n+\t\tFileHeader{4},\n+\t\t[]*SectionHeader{\n+\t\t\t{\"text\", 0x4c5f, 0x20},\n+\t\t\t{\"data\", 0x94c, 0x4c7f},\n+\t\t\t{\"syms\", 0x2c2b, 0x55cb},\n+\t\t\t{\"spsz\", 0x0, 0x81f6},\n+\t\t\t{\"pcsz\", 0xf7a, 0x81f6},\n+\t\t},\n+\t},\n+\t{\n+\t\t\"testdata/amd64-plan9-exec\",\n+\t\tFileHeader{8},\n+\t\t[]*SectionHeader{\n+\t\t\t{\"text\", 0x4213, 0x28},\n+\t\t\t{\"data\", 0xa80, 0x423b},\n+\t\t\t{\"syms\", 0x2c8c, 0x4cbb},\n+\t\t\t{\"spsz\", 0x0, 0x7947},\n+\t\t\t{\"pcsz\", 0xca0, 0x7947},\n+\t\t},\n+\t},\n+}\n+\n+func TestOpen(t *testing.T) {\n+\tfor i := range fileTests {\n+\t\ttt := &fileTests[i]\n+\n+\t\tf, err := Open(tt.file)\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t\tcontinue\n+\t\t}\n+\t\tif !reflect.DeepEqual(f.FileHeader, tt.hdr) {\n+\t\t\tt.Errorf(\"open %s:\\n\\thave %#v\\n\\twant %#v\\n\", tt.file, f.FileHeader, tt.hdr)\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tfor i, sh := range f.Sections {\n+\t\t\tif i >= len(tt.sections) {\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\thave := &sh.SectionHeader\n+\t\t\twant := tt.sections[i]\n+\t\t\tif !reflect.DeepEqual(have, want) {\n+\t\t\t\tt.Errorf(\"open %s, section %d:\\n\\thave %#v\\n\\twant %#v\\n\", tt.file, i, have, want)\n+\t\t\t}\n+\t\t}\n+\t\ttn := len(tt.sections)\n+\t\tfn := len(f.Sections)\n+\t\tif tn != fn {\n+\t\t\tt.Errorf(\"open %s: len(Sections) = %d, want %d\", tt.file, fn, tn)\n+\t\t}\n+\t}\n+}\n+\n+func TestOpenFailure(t *testing.T) {\n+\tfilename := \"file.go\"    // not a Plan 9 a.out file\n+\t_, err := Open(filename) // don't crash\n+\tif err == nil {\n+\t\tt.Errorf(\"open %s: succeeded unexpectedly\", filename)\n+\t}\n+}"}, {"sha": "4e3b08f4164fd7056becf0301b7b68ab6f810d6d", "filename": "libgo/go/debug/plan9obj/plan9obj.go", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Fplan9obj.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Fplan9obj.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fplan9obj%2Fplan9obj.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,91 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+/*\n+ * Plan 9 a.out constants and data structures\n+ */\n+\n+package plan9obj\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/binary\"\n+)\n+\n+// Plan 9 Program header.\n+type prog struct {\n+\tMagic uint32 /* magic number */\n+\tText  uint32 /* size of text segment */\n+\tData  uint32 /* size of initialized data */\n+\tBss   uint32 /* size of uninitialized data */\n+\tSyms  uint32 /* size of symbol table */\n+\tEntry uint32 /* entry point */\n+\tSpsz  uint32 /* size of pc/sp offset table */\n+\tPcsz  uint32 /* size of pc/line number table */\n+}\n+\n+// Plan 9 symbol table entries.\n+type sym struct {\n+\tvalue uint64\n+\ttyp   byte\n+\tname  []byte\n+}\n+\n+const (\n+\thsize      = 4 * 8\n+\t_HDR_MAGIC = 0x00008000 /* header expansion */\n+)\n+\n+func magic(f, b int) string {\n+\tbuf := new(bytes.Buffer)\n+\tvar i uint32 = uint32((f) | ((((4 * (b)) + 0) * (b)) + 7))\n+\tbinary.Write(buf, binary.BigEndian, i)\n+\treturn string(buf.Bytes())\n+}\n+\n+var (\n+\t_A_MAGIC = magic(0, 8)           /* 68020 (retired) */\n+\t_I_MAGIC = magic(0, 11)          /* intel 386 */\n+\t_J_MAGIC = magic(0, 12)          /* intel 960 (retired) */\n+\t_K_MAGIC = magic(0, 13)          /* sparc */\n+\t_V_MAGIC = magic(0, 16)          /* mips 3000 BE */\n+\t_X_MAGIC = magic(0, 17)          /* att dsp 3210 (retired) */\n+\t_M_MAGIC = magic(0, 18)          /* mips 4000 BE */\n+\t_D_MAGIC = magic(0, 19)          /* amd 29000 (retired) */\n+\t_E_MAGIC = magic(0, 20)          /* arm */\n+\t_Q_MAGIC = magic(0, 21)          /* powerpc */\n+\t_N_MAGIC = magic(0, 22)          /* mips 4000 LE */\n+\t_L_MAGIC = magic(0, 23)          /* dec alpha (retired) */\n+\t_P_MAGIC = magic(0, 24)          /* mips 3000 LE */\n+\t_U_MAGIC = magic(0, 25)          /* sparc64 (retired) */\n+\t_S_MAGIC = magic(_HDR_MAGIC, 26) /* amd64 */\n+\t_T_MAGIC = magic(_HDR_MAGIC, 27) /* powerpc64 */\n+\t_R_MAGIC = magic(_HDR_MAGIC, 28) /* arm64 */\n+)\n+\n+type ExecTable struct {\n+\tMagic string\n+\tPtrsz int\n+\tHsize uint32\n+}\n+\n+var exectab = []ExecTable{\n+\t{_A_MAGIC, 4, hsize},\n+\t{_I_MAGIC, 4, hsize},\n+\t{_J_MAGIC, 4, hsize},\n+\t{_K_MAGIC, 4, hsize},\n+\t{_V_MAGIC, 4, hsize},\n+\t{_X_MAGIC, 4, hsize},\n+\t{_M_MAGIC, 4, hsize},\n+\t{_D_MAGIC, 4, hsize},\n+\t{_E_MAGIC, 4, hsize},\n+\t{_Q_MAGIC, 4, hsize},\n+\t{_N_MAGIC, 4, hsize},\n+\t{_L_MAGIC, 4, hsize},\n+\t{_P_MAGIC, 4, hsize},\n+\t{_U_MAGIC, 4, hsize},\n+\t{_S_MAGIC, 8, hsize + 8},\n+\t{_T_MAGIC, 8, hsize + 8},\n+\t{_R_MAGIC, 8, hsize + 8},\n+}"}, {"sha": "748e83f8e6acc310edc5081a27d989c63f0eb2de", "filename": "libgo/go/debug/plan9obj/testdata/386-plan9-exec", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2F386-plan9-exec", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2F386-plan9-exec", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2F386-plan9-exec?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "3e257dd8ffc00ca4a19d9552a10d782134387e8b", "filename": "libgo/go/debug/plan9obj/testdata/amd64-plan9-exec", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2Famd64-plan9-exec", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2Famd64-plan9-exec", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2Famd64-plan9-exec?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "c0d633e29f0b18b13d966f28fd9ed37718a2148f", "filename": "libgo/go/debug/plan9obj/testdata/hello.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2Fhello.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2Fhello.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fplan9obj%2Ftestdata%2Fhello.c?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,8 @@\n+#include <u.h>\n+#include <libc.h>\n+\n+void\n+main(void)\n+{\n+\tprint(\"hello, world\\n\");\n+}"}, {"sha": "77bc465d5949c916df1c6a75c8d244fb53e25aa4", "filename": "libgo/go/encoding/ascii85/ascii85_test.go", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fascii85%2Fascii85_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fascii85%2Fascii85_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fascii85%2Fascii85_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -8,6 +8,7 @@ import (\n \t\"bytes\"\n \t\"io\"\n \t\"io/ioutil\"\n+\t\"strings\"\n \t\"testing\"\n )\n \n@@ -115,7 +116,7 @@ func TestDecode(t *testing.T) {\n \n func TestDecoder(t *testing.T) {\n \tfor _, p := range pairs {\n-\t\tdecoder := NewDecoder(bytes.NewBufferString(p.encoded))\n+\t\tdecoder := NewDecoder(strings.NewReader(p.encoded))\n \t\tdbuf, err := ioutil.ReadAll(decoder)\n \t\tif err != nil {\n \t\t\tt.Fatal(\"Read failed\", err)\n@@ -130,7 +131,7 @@ func TestDecoder(t *testing.T) {\n \n func TestDecoderBuffering(t *testing.T) {\n \tfor bs := 1; bs <= 12; bs++ {\n-\t\tdecoder := NewDecoder(bytes.NewBufferString(bigtest.encoded))\n+\t\tdecoder := NewDecoder(strings.NewReader(bigtest.encoded))\n \t\tbuf := make([]byte, len(bigtest.decoded)+12)\n \t\tvar total int\n \t\tfor total = 0; total < len(bigtest.decoded); {"}, {"sha": "7a3c3797c8bb8240455c133c208f912073315dc5", "filename": "libgo/go/encoding/asn1/asn1.go", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -23,6 +23,7 @@ import (\n \t\"fmt\"\n \t\"math/big\"\n \t\"reflect\"\n+\t\"strconv\"\n \t\"time\"\n )\n \n@@ -197,6 +198,19 @@ func (oi ObjectIdentifier) Equal(other ObjectIdentifier) bool {\n \treturn true\n }\n \n+func (oi ObjectIdentifier) String() string {\n+\tvar s string\n+\n+\tfor i, v := range oi {\n+\t\tif i > 0 {\n+\t\t\ts += \".\"\n+\t\t}\n+\t\ts += strconv.Itoa(v)\n+\t}\n+\n+\treturn s\n+}\n+\n // parseObjectIdentifier parses an OBJECT IDENTIFIER from the given bytes and\n // returns it. An object identifier is a sequence of variable length integers\n // that are assigned in a hierarchy.\n@@ -634,6 +648,10 @@ func parseField(v reflect.Value, bytes []byte, initOffset int, params fieldParam\n \t\tuniversalTag = tagGeneralizedTime\n \t}\n \n+\tif params.set {\n+\t\tuniversalTag = tagSet\n+\t}\n+\n \texpectedClass := classUniversal\n \texpectedTag := universalTag\n \n@@ -854,13 +872,20 @@ func setDefaultValue(v reflect.Value, params fieldParameters) (ok bool) {\n //\n // The following tags on struct fields have special meaning to Unmarshal:\n //\n-//\toptional\t\tmarks the field as ASN.1 OPTIONAL\n-//\t[explicit] tag:x\tspecifies the ASN.1 tag number; implies ASN.1 CONTEXT SPECIFIC\n-//\tdefault:x\t\tsets the default value for optional integer fields\n+//\tapplication\tspecifies that a APPLICATION tag is used\n+//\tdefault:x\tsets the default value for optional integer fields\n+//\texplicit\tspecifies that an additional, explicit tag wraps the implicit one\n+//\toptional\tmarks the field as ASN.1 OPTIONAL\n+//\tset\t\tcauses a SET, rather than a SEQUENCE type to be expected\n+//\ttag:x\t\tspecifies the ASN.1 tag number; implies ASN.1 CONTEXT SPECIFIC\n //\n // If the type of the first field of a structure is RawContent then the raw\n // ASN1 contents of the struct will be stored in it.\n //\n+// If the type name of a slice element ends with \"SET\" then it's treated as if\n+// the \"set\" tag was set on it. This can be used with nested slices where a\n+// struct tag cannot be given.\n+//\n // Other ASN.1 types are not supported; if it encounters them,\n // Unmarshal returns a parse error.\n func Unmarshal(b []byte, val interface{}) (rest []byte, err error) {"}, {"sha": "b553f78e0a6fe659b0f77a541694895976e8c7cd", "filename": "libgo/go/encoding/asn1/asn1_test.go", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -232,6 +232,10 @@ func TestObjectIdentifier(t *testing.T) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\tif s := ObjectIdentifier([]int{1, 2, 3, 4}).String(); s != \"1.2.3.4\" {\n+\t\tt.Errorf(\"bad ObjectIdentifier.String(). Got %s, want 1.2.3.4\", s)\n+\t}\n }\n \n type timeTest struct {\n@@ -397,6 +401,10 @@ type TestBigInt struct {\n \tX *big.Int\n }\n \n+type TestSet struct {\n+\tInts []int `asn1:\"set\"`\n+}\n+\n var unmarshalTestData = []struct {\n \tin  []byte\n \tout interface{}\n@@ -416,6 +424,7 @@ var unmarshalTestData = []struct {\n \t{[]byte{0x01, 0x01, 0xff}, newBool(true)},\n \t{[]byte{0x30, 0x0b, 0x13, 0x03, 0x66, 0x6f, 0x6f, 0x02, 0x01, 0x22, 0x02, 0x01, 0x33}, &TestElementsAfterString{\"foo\", 0x22, 0x33}},\n \t{[]byte{0x30, 0x05, 0x02, 0x03, 0x12, 0x34, 0x56}, &TestBigInt{big.NewInt(0x123456)}},\n+\t{[]byte{0x30, 0x0b, 0x31, 0x09, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x03}, &TestSet{Ints: []int{1, 2, 3}}},\n }\n \n func TestUnmarshal(t *testing.T) {"}, {"sha": "da50cf25e83a7ab5c38a3ed2d3dc6005bf9d780c", "filename": "libgo/go/encoding/asn1/marshal.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fasn1%2Fmarshal.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fasn1%2Fmarshal.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fasn1%2Fmarshal.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -568,6 +568,14 @@ func marshalField(out *forkableWriter, v reflect.Value, params fieldParameters)\n }\n \n // Marshal returns the ASN.1 encoding of val.\n+//\n+// In addition to the struct tags recognised by Unmarshal, the following can be\n+// used:\n+//\n+//\tia5:\t\tcauses strings to be marshaled as ASN.1, IA5 strings\n+//\tomitempty:\tcauses empty slices to be skipped\n+//\tprintable:\tcauses strings to be marshaled as ASN.1, PrintableString strings.\n+//\tutf8:\t\tcauses strings to be marshaled as ASN.1, UTF8 strings\n func Marshal(val interface{}) ([]byte, error) {\n \tvar out bytes.Buffer\n \tv := reflect.ValueOf(val)"}, {"sha": "f56b996faafa9347467def50ad30855e251ce838", "filename": "libgo/go/encoding/base32/base32_test.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbase32%2Fbase32_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbase32%2Fbase32_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fbase32%2Fbase32_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -108,7 +108,7 @@ func TestDecode(t *testing.T) {\n \n func TestDecoder(t *testing.T) {\n \tfor _, p := range pairs {\n-\t\tdecoder := NewDecoder(StdEncoding, bytes.NewBufferString(p.encoded))\n+\t\tdecoder := NewDecoder(StdEncoding, strings.NewReader(p.encoded))\n \t\tdbuf := make([]byte, StdEncoding.DecodedLen(len(p.encoded)))\n \t\tcount, err := decoder.Read(dbuf)\n \t\tif err != nil && err != io.EOF {\n@@ -125,7 +125,7 @@ func TestDecoder(t *testing.T) {\n \n func TestDecoderBuffering(t *testing.T) {\n \tfor bs := 1; bs <= 12; bs++ {\n-\t\tdecoder := NewDecoder(StdEncoding, bytes.NewBufferString(bigtest.encoded))\n+\t\tdecoder := NewDecoder(StdEncoding, strings.NewReader(bigtest.encoded))\n \t\tbuf := make([]byte, len(bigtest.decoded)+12)\n \t\tvar total int\n \t\tfor total = 0; total < len(bigtest.decoded); {\n@@ -267,13 +267,13 @@ LNEBUWIIDFON2CA3DBMJXXE5LNFY==\n ====`\n \tencodedShort := strings.Replace(encoded, \"\\n\", \"\", -1)\n \n-\tdec := NewDecoder(StdEncoding, bytes.NewBufferString(encoded))\n+\tdec := NewDecoder(StdEncoding, strings.NewReader(encoded))\n \tres1, err := ioutil.ReadAll(dec)\n \tif err != nil {\n \t\tt.Errorf(\"ReadAll failed: %v\", err)\n \t}\n \n-\tdec = NewDecoder(StdEncoding, bytes.NewBufferString(encodedShort))\n+\tdec = NewDecoder(StdEncoding, strings.NewReader(encodedShort))\n \tvar res2 []byte\n \tres2, err = ioutil.ReadAll(dec)\n \tif err != nil {"}, {"sha": "6bcc724d9b5702fc4d42e67bd5df2d9a1cef5cb1", "filename": "libgo/go/encoding/base64/base64_test.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbase64%2Fbase64_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbase64%2Fbase64_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fbase64%2Fbase64_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -113,7 +113,7 @@ func TestDecode(t *testing.T) {\n \n func TestDecoder(t *testing.T) {\n \tfor _, p := range pairs {\n-\t\tdecoder := NewDecoder(StdEncoding, bytes.NewBufferString(p.encoded))\n+\t\tdecoder := NewDecoder(StdEncoding, strings.NewReader(p.encoded))\n \t\tdbuf := make([]byte, StdEncoding.DecodedLen(len(p.encoded)))\n \t\tcount, err := decoder.Read(dbuf)\n \t\tif err != nil && err != io.EOF {\n@@ -130,7 +130,7 @@ func TestDecoder(t *testing.T) {\n \n func TestDecoderBuffering(t *testing.T) {\n \tfor bs := 1; bs <= 12; bs++ {\n-\t\tdecoder := NewDecoder(StdEncoding, bytes.NewBufferString(bigtest.encoded))\n+\t\tdecoder := NewDecoder(StdEncoding, strings.NewReader(bigtest.encoded))\n \t\tbuf := make([]byte, len(bigtest.decoded)+12)\n \t\tvar total int\n \t\tfor total = 0; total < len(bigtest.decoded); {\n@@ -308,13 +308,13 @@ bqbPb06551Y4\n `\n \tencodedShort := strings.Replace(encoded, \"\\n\", \"\", -1)\n \n-\tdec := NewDecoder(StdEncoding, bytes.NewBufferString(encoded))\n+\tdec := NewDecoder(StdEncoding, strings.NewReader(encoded))\n \tres1, err := ioutil.ReadAll(dec)\n \tif err != nil {\n \t\tt.Errorf(\"ReadAll failed: %v\", err)\n \t}\n \n-\tdec = NewDecoder(StdEncoding, bytes.NewBufferString(encodedShort))\n+\tdec = NewDecoder(StdEncoding, strings.NewReader(encodedShort))\n \tvar res2 []byte\n \tres2, err = ioutil.ReadAll(dec)\n \tif err != nil {"}, {"sha": "1aa6ecd2486ba007cd565209e49bbd05928bff70", "filename": "libgo/go/encoding/binary/binary_test.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbinary%2Fbinary_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbinary%2Fbinary_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fbinary%2Fbinary_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -111,7 +111,7 @@ func checkResult(t *testing.T, dir string, order ByteOrder, err error, have, wan\n \n func testRead(t *testing.T, order ByteOrder, b []byte, s1 interface{}) {\n \tvar s2 Struct\n-\terr := Read(bytes.NewBuffer(b), order, &s2)\n+\terr := Read(bytes.NewReader(b), order, &s2)\n \tcheckResult(t, \"Read\", order, err, s2, s1)\n }\n \n@@ -131,7 +131,7 @@ func TestBigEndianPtrWrite(t *testing.T) { testWrite(t, BigEndian, big, &s) }\n \n func TestReadSlice(t *testing.T) {\n \tslice := make([]int32, 2)\n-\terr := Read(bytes.NewBuffer(src), BigEndian, slice)\n+\terr := Read(bytes.NewReader(src), BigEndian, slice)\n \tcheckResult(t, \"ReadSlice\", BigEndian, err, slice, res)\n }\n "}, {"sha": "ca411ecbd65e8180d2bfcb0c819a561328d66f06", "filename": "libgo/go/encoding/binary/varint_test.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbinary%2Fvarint_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fbinary%2Fvarint_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fbinary%2Fvarint_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -35,7 +35,7 @@ func testVarint(t *testing.T, x int64) {\n \t\tt.Errorf(\"Varint(%d): got n = %d; want %d\", x, m, n)\n \t}\n \n-\ty, err := ReadVarint(bytes.NewBuffer(buf))\n+\ty, err := ReadVarint(bytes.NewReader(buf))\n \tif err != nil {\n \t\tt.Errorf(\"ReadVarint(%d): %s\", x, err)\n \t}\n@@ -55,7 +55,7 @@ func testUvarint(t *testing.T, x uint64) {\n \t\tt.Errorf(\"Uvarint(%d): got n = %d; want %d\", x, m, n)\n \t}\n \n-\ty, err := ReadUvarint(bytes.NewBuffer(buf))\n+\ty, err := ReadUvarint(bytes.NewReader(buf))\n \tif err != nil {\n \t\tt.Errorf(\"ReadUvarint(%d): %s\", x, err)\n \t}\n@@ -114,7 +114,7 @@ func TestBufferTooSmall(t *testing.T) {\n \t\t\tt.Errorf(\"Uvarint(%v): got x = %d, n = %d\", buf, x, n)\n \t\t}\n \n-\t\tx, err := ReadUvarint(bytes.NewBuffer(buf))\n+\t\tx, err := ReadUvarint(bytes.NewReader(buf))\n \t\tif x != 0 || err != io.EOF {\n \t\t\tt.Errorf(\"ReadUvarint(%v): got x = %d, err = %s\", buf, x, err)\n \t\t}\n@@ -127,7 +127,7 @@ func testOverflow(t *testing.T, buf []byte, n0 int, err0 error) {\n \t\tt.Errorf(\"Uvarint(%v): got x = %d, n = %d; want 0, %d\", buf, x, n, n0)\n \t}\n \n-\tx, err := ReadUvarint(bytes.NewBuffer(buf))\n+\tx, err := ReadUvarint(bytes.NewReader(buf))\n \tif x != 0 || err != err0 {\n \t\tt.Errorf(\"ReadUvarint(%v): got x = %d, err = %s; want 0, %s\", buf, x, err, err0)\n \t}"}, {"sha": "fa57f3761d0d3b9d21a1f607cfcf774b0d64b4f9", "filename": "libgo/go/encoding/gob/codec_test.go", "status": "modified", "additions": 51, "deletions": 5, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fgob%2Fcodec_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fgob%2Fcodec_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fgob%2Fcodec_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1364,11 +1364,7 @@ type DT struct {\n \tS     []string\n }\n \n-func TestDebugStruct(t *testing.T) {\n-\tif debugFunc == nil {\n-\t\treturn\n-\t}\n-\tRegister(OnTheFly{})\n+func newDT() DT {\n \tvar dt DT\n \tdt.A = 17\n \tdt.B = \"hello\"\n@@ -1379,6 +1375,15 @@ func TestDebugStruct(t *testing.T) {\n \tdt.M = map[string]int{\"one\": 1, \"two\": 2}\n \tdt.T = [3]int{11, 22, 33}\n \tdt.S = []string{\"hi\", \"joe\"}\n+\treturn dt\n+}\n+\n+func TestDebugStruct(t *testing.T) {\n+\tif debugFunc == nil {\n+\t\treturn\n+\t}\n+\tRegister(OnTheFly{})\n+\tdt := newDT()\n \tb := new(bytes.Buffer)\n \terr := NewEncoder(b).Encode(dt)\n \tif err != nil {\n@@ -1458,3 +1463,44 @@ func testFuzz(t *testing.T, seed int64, n int, input ...interface{}) {\n \t\t}\n \t}\n }\n+\n+// TestFuzzOneByte tries to decode corrupted input sequences\n+// and checks that no panic occurs.\n+func TestFuzzOneByte(t *testing.T) {\n+\tbuf := new(bytes.Buffer)\n+\tRegister(OnTheFly{})\n+\tdt := newDT()\n+\tif err := NewEncoder(buf).Encode(dt); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\ts := buf.String()\n+\n+\tindices := make([]int, 0, len(s))\n+\tfor i := 0; i < len(s); i++ {\n+\t\tswitch i {\n+\t\tcase 14, 167, 231, 265: // a slice length, corruptions are not handled yet.\n+\t\t\tcontinue\n+\t\t}\n+\t\tindices = append(indices, i)\n+\t}\n+\tif testing.Short() {\n+\t\tindices = []int{1, 111, 178} // known fixed panics\n+\t}\n+\tfor _, i := range indices {\n+\t\tfor j := 0; j < 256; j += 3 {\n+\t\t\tb := []byte(s)\n+\t\t\tb[i] ^= byte(j)\n+\t\t\tvar e DT\n+\t\t\tfunc() {\n+\t\t\t\tdefer func() {\n+\t\t\t\t\tif p := recover(); p != nil {\n+\t\t\t\t\t\tt.Errorf(\"crash for b[%d] ^= 0x%x\", i, j)\n+\t\t\t\t\t\tpanic(p)\n+\t\t\t\t\t}\n+\t\t\t\t}()\n+\t\t\t\terr := NewDecoder(bytes.NewReader(b)).Decode(&e)\n+\t\t\t\t_ = err\n+\t\t\t}()\n+\t\t}\n+\t}\n+}"}, {"sha": "aa186a582e87a906f6101cb294e32c246b244203", "filename": "libgo/go/encoding/gob/decode.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fgob%2Fdecode.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fgob%2Fdecode.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fgob%2Fdecode.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -701,6 +701,9 @@ func (dec *Decoder) decodeInterface(ityp reflect.Type, state *decoderState, p un\n \tif nr < 0 || nr > 1<<31 { // zero is permissible for anonymous types\n \t\terrorf(\"invalid type name length %d\", nr)\n \t}\n+\tif nr > uint64(state.b.Len()) {\n+\t\terrorf(\"invalid type name length %d: exceeds input size\", nr)\n+\t}\n \tb := make([]byte, nr)\n \tstate.b.Read(b)\n \tname := string(b)\n@@ -1237,7 +1240,8 @@ func (dec *Decoder) decodeValue(wireId typeId, val reflect.Value) {\n \t}\n \tengine := *enginePtr\n \tif st := base; st.Kind() == reflect.Struct && ut.externalDec == 0 {\n-\t\tif engine.numInstr == 0 && st.NumField() > 0 && len(dec.wireType[wireId].StructT.Field) > 0 {\n+\t\tif engine.numInstr == 0 && st.NumField() > 0 &&\n+\t\t\tdec.wireType[wireId] != nil && len(dec.wireType[wireId].StructT.Field) > 0 {\n \t\t\tname := base.Name()\n \t\t\terrorf(\"type mismatch: no fields matched compiling decoder for %s\", name)\n \t\t}"}, {"sha": "6445ce10026f0b32dde3d89358cc970497e65b29", "filename": "libgo/go/encoding/gob/encoder_test.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fgob%2Fencoder_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fgob%2Fencoder_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fgob%2Fencoder_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -129,6 +129,8 @@ func TestBadData(t *testing.T) {\n \tcorruptDataCheck(\"\", io.EOF, t)\n \tcorruptDataCheck(\"\\x7Fhi\", io.ErrUnexpectedEOF, t)\n \tcorruptDataCheck(\"\\x03now is the time for all good men\", errBadType, t)\n+\t// issue 6323.\n+\tcorruptDataCheck(\"\\x04\\x24foo\", errRange, t)\n }\n \n // Types not supported at top level by the Encoder.\n@@ -630,7 +632,7 @@ func TestSliceReusesMemory(t *testing.T) {\n // Used to crash: negative count in recvMessage.\n func TestBadCount(t *testing.T) {\n \tb := []byte{0xfb, 0xa5, 0x82, 0x2f, 0xca, 0x1}\n-\tif err := NewDecoder(bytes.NewBuffer(b)).Decode(nil); err == nil {\n+\tif err := NewDecoder(bytes.NewReader(b)).Decode(nil); err == nil {\n \t\tt.Error(\"expected error from bad count\")\n \t} else if err.Error() != errBadCount.Error() {\n \t\tt.Error(\"expected bad count error; got\", err)"}, {"sha": "741ddd89cbe7ca617e334669b4d776963c6006f3", "filename": "libgo/go/encoding/json/encode.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -44,6 +44,7 @@ import (\n // if an invalid UTF-8 sequence is encountered.\n // The angle brackets \"<\" and \">\" are escaped to \"\\u003c\" and \"\\u003e\"\n // to keep some browsers from misinterpreting JSON output as HTML.\n+// Ampersand \"&\" is also escaped to \"\\u0026\" for the same reason.\n //\n // Array and slice values encode as JSON arrays, except that\n // []byte encodes as a base64-encoded string, and a nil slice\n@@ -804,7 +805,7 @@ func (e *encodeState) string(s string) (int, error) {\n \t\t\t\te.WriteByte('r')\n \t\t\tdefault:\n \t\t\t\t// This encodes bytes < 0x20 except for \\n and \\r,\n-\t\t\t\t// as well as < and >. The latter are escaped because they\n+\t\t\t\t// as well as <, > and &. The latter are escaped because they\n \t\t\t\t// can lead to security holes when user-controlled strings\n \t\t\t\t// are rendered into JSON and served to some browsers.\n \t\t\t\te.WriteString(`\\u00`)"}, {"sha": "2e89a78eb9fd01d75631f1b9a7cc1e6002e38009", "filename": "libgo/go/encoding/json/encode_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fjson%2Fencode_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fjson%2Fencode_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fencode_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -93,7 +93,7 @@ func TestStringTag(t *testing.T) {\n \n \t// Verify that it round-trips.\n \tvar s2 StringTag\n-\terr = NewDecoder(bytes.NewBuffer(got)).Decode(&s2)\n+\terr = NewDecoder(bytes.NewReader(got)).Decode(&s2)\n \tif err != nil {\n \t\tt.Fatalf(\"Decode: %v\", err)\n \t}"}, {"sha": "78803429029357322a253ec135c4da90e0170300", "filename": "libgo/go/encoding/json/scanner_test.go", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fjson%2Fscanner_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fjson%2Fscanner_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fscanner_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -239,23 +239,16 @@ func trim(b []byte) []byte {\n \n var jsonBig []byte\n \n-const (\n-\tbig   = 10000\n-\tsmall = 100\n-)\n-\n func initBig() {\n-\tn := big\n+\tn := 10000\n \tif testing.Short() {\n-\t\tn = small\n+\t\tn = 100\n \t}\n-\tif len(jsonBig) != n {\n-\t\tb, err := Marshal(genValue(n))\n-\t\tif err != nil {\n-\t\t\tpanic(err)\n-\t\t}\n-\t\tjsonBig = b\n+\tb, err := Marshal(genValue(n))\n+\tif err != nil {\n+\t\tpanic(err)\n \t}\n+\tjsonBig = b\n }\n \n func genValue(n int) interface{} {\n@@ -296,6 +289,9 @@ func genArray(n int) []interface{} {\n \tif f > n {\n \t\tf = n\n \t}\n+\tif f < 1 {\n+\t\tf = 1\n+\t}\n \tx := make([]interface{}, f)\n \tfor i := range x {\n \t\tx[i] = genValue(((i+1)*n)/f - (i*n)/f)"}, {"sha": "651d13d4d094dd6adba063ac79c82d9117833115", "filename": "libgo/go/encoding/xml/read.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fxml%2Fread.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fencoding%2Fxml%2Fread.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fxml%2Fread.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -112,7 +112,7 @@ import (\n // to a freshly allocated value and then mapping the element to that value.\n //\n func Unmarshal(data []byte, v interface{}) error {\n-\treturn NewDecoder(bytes.NewBuffer(data)).Decode(v)\n+\treturn NewDecoder(bytes.NewReader(data)).Decode(v)\n }\n \n // Decode works like xml.Unmarshal, except it reads the decoder"}, {"sha": "c590782a8d266f0fad192cccfa009d51f248a919", "filename": "libgo/go/expvar/expvar.go", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fexpvar%2Fexpvar.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fexpvar%2Fexpvar.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fexpvar%2Fexpvar.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -29,6 +29,7 @@ import (\n \t\"net/http\"\n \t\"os\"\n \t\"runtime\"\n+\t\"sort\"\n \t\"strconv\"\n \t\"sync\"\n )\n@@ -40,8 +41,8 @@ type Var interface {\n \n // Int is a 64-bit integer variable that satisfies the Var interface.\n type Int struct {\n-\ti  int64\n \tmu sync.RWMutex\n+\ti  int64\n }\n \n func (v *Int) String() string {\n@@ -64,8 +65,8 @@ func (v *Int) Set(value int64) {\n \n // Float is a 64-bit float variable that satisfies the Var interface.\n type Float struct {\n-\tf  float64\n \tmu sync.RWMutex\n+\tf  float64\n }\n \n func (v *Float) String() string {\n@@ -90,8 +91,9 @@ func (v *Float) Set(value float64) {\n \n // Map is a string-to-Var map variable that satisfies the Var interface.\n type Map struct {\n-\tm  map[string]Var\n-\tmu sync.RWMutex\n+\tmu   sync.RWMutex\n+\tm    map[string]Var\n+\tkeys []string // sorted\n }\n \n // KeyValue represents a single entry in a Map.\n@@ -106,13 +108,13 @@ func (v *Map) String() string {\n \tvar b bytes.Buffer\n \tfmt.Fprintf(&b, \"{\")\n \tfirst := true\n-\tfor key, val := range v.m {\n+\tv.Do(func(kv KeyValue) {\n \t\tif !first {\n \t\t\tfmt.Fprintf(&b, \", \")\n \t\t}\n-\t\tfmt.Fprintf(&b, \"\\\"%s\\\": %v\", key, val)\n+\t\tfmt.Fprintf(&b, \"\\\"%s\\\": %v\", kv.Key, kv.Value)\n \t\tfirst = false\n-\t}\n+\t})\n \tfmt.Fprintf(&b, \"}\")\n \treturn b.String()\n }\n@@ -122,6 +124,20 @@ func (v *Map) Init() *Map {\n \treturn v\n }\n \n+// updateKeys updates the sorted list of keys in v.keys.\n+// must be called with v.mu held.\n+func (v *Map) updateKeys() {\n+\tif len(v.m) == len(v.keys) {\n+\t\t// No new key.\n+\t\treturn\n+\t}\n+\tv.keys = v.keys[:0]\n+\tfor k := range v.m {\n+\t\tv.keys = append(v.keys, k)\n+\t}\n+\tsort.Strings(v.keys)\n+}\n+\n func (v *Map) Get(key string) Var {\n \tv.mu.RLock()\n \tdefer v.mu.RUnlock()\n@@ -132,6 +148,7 @@ func (v *Map) Set(key string, av Var) {\n \tv.mu.Lock()\n \tdefer v.mu.Unlock()\n \tv.m[key] = av\n+\tv.updateKeys()\n }\n \n func (v *Map) Add(key string, delta int64) {\n@@ -141,9 +158,11 @@ func (v *Map) Add(key string, delta int64) {\n \tif !ok {\n \t\t// check again under the write lock\n \t\tv.mu.Lock()\n-\t\tif _, ok = v.m[key]; !ok {\n+\t\tav, ok = v.m[key]\n+\t\tif !ok {\n \t\t\tav = new(Int)\n \t\t\tv.m[key] = av\n+\t\t\tv.updateKeys()\n \t\t}\n \t\tv.mu.Unlock()\n \t}\n@@ -162,9 +181,11 @@ func (v *Map) AddFloat(key string, delta float64) {\n \tif !ok {\n \t\t// check again under the write lock\n \t\tv.mu.Lock()\n-\t\tif _, ok = v.m[key]; !ok {\n+\t\tav, ok = v.m[key]\n+\t\tif !ok {\n \t\t\tav = new(Float)\n \t\t\tv.m[key] = av\n+\t\t\tv.updateKeys()\n \t\t}\n \t\tv.mu.Unlock()\n \t}\n@@ -181,15 +202,15 @@ func (v *Map) AddFloat(key string, delta float64) {\n func (v *Map) Do(f func(KeyValue)) {\n \tv.mu.RLock()\n \tdefer v.mu.RUnlock()\n-\tfor k, v := range v.m {\n-\t\tf(KeyValue{k, v})\n+\tfor _, k := range v.keys {\n+\t\tf(KeyValue{k, v.m[k]})\n \t}\n }\n \n // String is a string variable, and satisfies the Var interface.\n type String struct {\n-\ts  string\n \tmu sync.RWMutex\n+\ts  string\n }\n \n func (v *String) String() string {\n@@ -215,8 +236,9 @@ func (f Func) String() string {\n \n // All published variables.\n var (\n-\tmutex sync.RWMutex\n-\tvars  map[string]Var = make(map[string]Var)\n+\tmutex   sync.RWMutex\n+\tvars    = make(map[string]Var)\n+\tvarKeys []string // sorted\n )\n \n // Publish declares a named exported variable. This should be called from a\n@@ -229,6 +251,8 @@ func Publish(name string, v Var) {\n \t\tlog.Panicln(\"Reuse of exported var name:\", name)\n \t}\n \tvars[name] = v\n+\tvarKeys = append(varKeys, name)\n+\tsort.Strings(varKeys)\n }\n \n // Get retrieves a named exported variable.\n@@ -270,8 +294,8 @@ func NewString(name string) *String {\n func Do(f func(KeyValue)) {\n \tmutex.RLock()\n \tdefer mutex.RUnlock()\n-\tfor k, v := range vars {\n-\t\tf(KeyValue{k, v})\n+\tfor _, k := range varKeys {\n+\t\tf(KeyValue{k, vars[k]})\n \t}\n }\n "}, {"sha": "d2ea484935e9c5fe08cb52e4c27c01a26b7cab79", "filename": "libgo/go/expvar/expvar_test.go", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fexpvar%2Fexpvar_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fexpvar%2Fexpvar_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fexpvar%2Fexpvar_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,7 +5,10 @@\n package expvar\n \n import (\n+\t\"bytes\"\n \t\"encoding/json\"\n+\t\"net/http/httptest\"\n+\t\"strconv\"\n \t\"testing\"\n )\n \n@@ -15,6 +18,7 @@ func RemoveAll() {\n \tmutex.Lock()\n \tdefer mutex.Unlock()\n \tvars = make(map[string]Var)\n+\tvarKeys = nil\n }\n \n func TestInt(t *testing.T) {\n@@ -139,3 +143,25 @@ func TestFunc(t *testing.T) {\n \t\tt.Errorf(`f.String() = %q, want %q`, s, exp)\n \t}\n }\n+\n+func TestHandler(t *testing.T) {\n+\tRemoveAll()\n+\tm := NewMap(\"map1\")\n+\tm.Add(\"a\", 1)\n+\tm.Add(\"z\", 2)\n+\tm2 := NewMap(\"map2\")\n+\tfor i := 0; i < 9; i++ {\n+\t\tm2.Add(strconv.Itoa(i), int64(i))\n+\t}\n+\trr := httptest.NewRecorder()\n+\trr.Body = new(bytes.Buffer)\n+\texpvarHandler(rr, nil)\n+\twant := `{\n+\"map1\": {\"a\": 1, \"z\": 2},\n+\"map2\": {\"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8}\n+}\n+`\n+\tif got := rr.Body.String(); got != want {\n+\t\tt.Errorf(\"HTTP handler wrote:\\n%s\\nWant:\\n%s\", got, want)\n+\t}\n+}"}, {"sha": "ce837ba63e81bd2f569f2cabfedb4886084a1464", "filename": "libgo/go/fmt/fmt_test.go", "status": "modified", "additions": 69, "deletions": 21, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ffmt%2Ffmt_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ffmt%2Ffmt_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Ffmt_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -11,6 +11,7 @@ import (\n \t\"math\"\n \t\"runtime\"\n \t\"strings\"\n+\t\"sync/atomic\"\n \t\"testing\"\n \t\"time\"\n \t\"unicode\"\n@@ -497,18 +498,18 @@ var fmtTests = []struct {\n \t{\"%v\", map[float64]int{math.NaN(): 1, math.NaN(): 2}, \"map[NaN:<nil> NaN:<nil>]\"},\n \n \t// Used to crash because nByte didn't allow for a sign.\n-\t{\"%b\", int64(-1 << 63), \"-1000000000000000000000000000000000000000000000000000000000000000\"},\n+\t{\"%b\", int64(-1 << 63), zeroFill(\"-1\", 63, \"\")},\n \n \t// Used to panic.\n-\t{\"%0100d\", 1, \"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\"},\n-\t{\"%0100d\", -1, \"-000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\"},\n-\t{\"%0.100f\", 1.0, \"1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\n-\t{\"%0.100f\", -1.0, \"-1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"},\n+\t{\"%0100d\", 1, zeroFill(\"\", 100, \"1\")},\n+\t{\"%0100d\", -1, zeroFill(\"-\", 99, \"1\")},\n+\t{\"%0.100f\", 1.0, zeroFill(\"1.\", 100, \"\")},\n+\t{\"%0.100f\", -1.0, zeroFill(\"-1.\", 100, \"\")},\n \n \t// Zero padding floats used to put the minus sign in the middle.\n \t{\"%020f\", -1.0, \"-000000000001.000000\"},\n \t{\"%20f\", -1.0, \"           -1.000000\"},\n-\t{\"%0100f\", -1.0, \"-00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001.000000\"},\n+\t{\"%0100f\", -1.0, zeroFill(\"-\", 99, \"1.000000\")},\n \n \t// Complex fmt used to leave the plus flag set for future entries in the array\n \t// causing +2+0i and +3+0i instead of 2+0i and 3+0i.\n@@ -517,6 +518,33 @@ var fmtTests = []struct {\n \n \t// Incomplete format specification caused crash.\n \t{\"%.\", 3, \"%!.(int=3)\"},\n+\n+\t// Used to panic with out-of-bounds for very large numeric representations.\n+\t// nByte is set to handle one bit per uint64 in %b format, with a negative number.\n+\t// See issue 6777.\n+\t{\"%#064x\", 1, zeroFill(\"0x\", 64, \"1\")},\n+\t{\"%#064x\", -1, zeroFill(\"-0x\", 63, \"1\")},\n+\t{\"%#064b\", 1, zeroFill(\"\", 64, \"1\")},\n+\t{\"%#064b\", -1, zeroFill(\"-\", 63, \"1\")},\n+\t{\"%#064o\", 1, zeroFill(\"\", 64, \"1\")},\n+\t{\"%#064o\", -1, zeroFill(\"-\", 63, \"1\")},\n+\t{\"%#064d\", 1, zeroFill(\"\", 64, \"1\")},\n+\t{\"%#064d\", -1, zeroFill(\"-\", 63, \"1\")},\n+\t// Test that we handle the crossover above the size of uint64\n+\t{\"%#072x\", 1, zeroFill(\"0x\", 72, \"1\")},\n+\t{\"%#072x\", -1, zeroFill(\"-0x\", 71, \"1\")},\n+\t{\"%#072b\", 1, zeroFill(\"\", 72, \"1\")},\n+\t{\"%#072b\", -1, zeroFill(\"-\", 71, \"1\")},\n+\t{\"%#072o\", 1, zeroFill(\"\", 72, \"1\")},\n+\t{\"%#072o\", -1, zeroFill(\"-\", 71, \"1\")},\n+\t{\"%#072d\", 1, zeroFill(\"\", 72, \"1\")},\n+\t{\"%#072d\", -1, zeroFill(\"-\", 71, \"1\")},\n+}\n+\n+// zeroFill generates zero-filled strings of the specified width. The length\n+// of the suffix (but not the prefix) is compensated for in the width calculation.\n+func zeroFill(prefix string, width int, suffix string) string {\n+\treturn prefix + strings.Repeat(\"0\", width-len(suffix)) + suffix\n }\n \n func TestSprintf(t *testing.T) {\n@@ -606,46 +634,66 @@ func TestReorder(t *testing.T) {\n }\n \n func BenchmarkSprintfEmpty(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tSprintf(\"\")\n-\t}\n+\t})\n }\n \n func BenchmarkSprintfString(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tSprintf(\"%s\", \"hello\")\n-\t}\n+\t})\n }\n \n func BenchmarkSprintfInt(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tSprintf(\"%d\", 5)\n-\t}\n+\t})\n }\n \n func BenchmarkSprintfIntInt(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tSprintf(\"%d %d\", 5, 6)\n-\t}\n+\t})\n }\n \n func BenchmarkSprintfPrefixedInt(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tSprintf(\"This is some meaningless prefix text that needs to be scanned %d\", 6)\n-\t}\n+\t})\n }\n \n func BenchmarkSprintfFloat(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tSprintf(\"%g\", 5.23184)\n-\t}\n+\t})\n }\n \n func BenchmarkManyArgs(b *testing.B) {\n-\tvar buf bytes.Buffer\n-\tfor i := 0; i < b.N; i++ {\n+\tbenchmarkSprintf(b, func(buf *bytes.Buffer) {\n \t\tbuf.Reset()\n-\t\tFprintf(&buf, \"%2d/%2d/%2d %d:%d:%d %s %s\\n\", 3, 4, 5, 11, 12, 13, \"hello\", \"world\")\n+\t\tFprintf(buf, \"%2d/%2d/%2d %d:%d:%d %s %s\\n\", 3, 4, 5, 11, 12, 13, \"hello\", \"world\")\n+\t})\n+}\n+\n+func benchmarkSprintf(b *testing.B, f func(buf *bytes.Buffer)) {\n+\tconst CallsPerSched = 1000\n+\tprocs := runtime.GOMAXPROCS(-1)\n+\tN := int32(b.N / CallsPerSched)\n+\tc := make(chan bool, procs)\n+\tfor p := 0; p < procs; p++ {\n+\t\tgo func() {\n+\t\t\tvar buf bytes.Buffer\n+\t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n+\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n+\t\t\t\t\tf(&buf)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tc <- true\n+\t\t}()\n+\t}\n+\tfor p := 0; p < procs; p++ {\n+\t\t<-c\n \t}\n }\n "}, {"sha": "3835aa9823a0e0f2f4b1253f64c70328d03c8fcd", "filename": "libgo/go/fmt/format.go", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ffmt%2Fformat.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ffmt%2Fformat.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fformat.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -10,7 +10,9 @@ import (\n )\n \n const (\n-\tnByte = 65 // %b of an int64, plus a sign.\n+\t// %b of an int64, plus a sign.\n+\t// Hex can add 0x and we handle it specially.\n+\tnByte = 65\n \n \tldigits = \"0123456789abcdef\"\n \tudigits = \"0123456789ABCDEF\"\n@@ -160,9 +162,16 @@ func (f *fmt) integer(a int64, base uint64, signedness bool, digits string) {\n \t}\n \n \tvar buf []byte = f.intbuf[0:]\n-\tif f.widPresent && f.wid > nByte {\n-\t\t// We're going to need a bigger boat.\n-\t\tbuf = make([]byte, f.wid)\n+\tif f.widPresent {\n+\t\twidth := f.wid\n+\t\tif base == 16 && f.sharp {\n+\t\t\t// Also adds \"0x\".\n+\t\t\twidth += 2\n+\t\t}\n+\t\tif width > nByte {\n+\t\t\t// We're going to need a bigger boat.\n+\t\t\tbuf = make([]byte, width)\n+\t\t}\n \t}\n \n \tnegative := signedness == signed && a < 0"}, {"sha": "8a337e479d02a22bcc79425372618478d4d967aa", "filename": "libgo/go/fmt/scan.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ffmt%2Fscan.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ffmt%2Fscan.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fscan.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -284,7 +284,6 @@ var space = [][2]uint16{\n \t{0x0085, 0x0085},\n \t{0x00a0, 0x00a0},\n \t{0x1680, 0x1680},\n-\t{0x180e, 0x180e},\n \t{0x2000, 0x200a},\n \t{0x2028, 0x2029},\n \t{0x202f, 0x202f},"}, {"sha": "096028d34c37118cd76f9d639c6e16089b987dca", "filename": "libgo/go/go/build/build.go", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fbuild%2Fbuild.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fbuild%2Fbuild.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fbuild.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -264,7 +264,6 @@ var cgoEnabled = map[string]bool{\n \t\"dragonfly/amd64\": true,\n \t\"freebsd/386\":     true,\n \t\"freebsd/amd64\":   true,\n-\t\"freebsd/arm\":     true,\n \t\"linux/386\":       true,\n \t\"linux/amd64\":     true,\n \t\"linux/arm\":       true,\n@@ -303,8 +302,7 @@ func defaultContext() Context {\n \tcase \"0\":\n \t\tc.CgoEnabled = false\n \tdefault:\n-\t\t// golang.org/issue/5141\n-\t\t// cgo should be disabled for cross compilation builds\n+\t\t// cgo must be explicitly enabled for cross compilation builds\n \t\tif runtime.GOARCH == c.GOARCH && runtime.GOOS == c.GOOS {\n \t\t\tc.CgoEnabled = cgoEnabled[c.GOOS+\"/\"+c.GOARCH]\n \t\t\tbreak\n@@ -358,6 +356,7 @@ type Package struct {\n \tIgnoredGoFiles []string // .go source files ignored for this build\n \tCFiles         []string // .c source files\n \tCXXFiles       []string // .cc, .cpp and .cxx source files\n+\tMFiles         []string // .m (Objective-C) source files\n \tHFiles         []string // .h, .hh, .hpp and .hxx source files\n \tSFiles         []string // .s source files\n \tSwigFiles      []string // .swig files\n@@ -622,6 +621,9 @@ Found:\n \t\tcase \".cc\", \".cpp\", \".cxx\":\n \t\t\tp.CXXFiles = append(p.CXXFiles, name)\n \t\t\tcontinue\n+\t\tcase \".m\":\n+\t\t\tp.MFiles = append(p.MFiles, name)\n+\t\t\tcontinue\n \t\tcase \".h\", \".hh\", \".hpp\", \".hxx\":\n \t\t\tp.HFiles = append(p.HFiles, name)\n \t\t\tcontinue\n@@ -789,7 +791,7 @@ func (ctxt *Context) matchFile(dir, name string, returnImports bool, allTags map\n \t}\n \n \tswitch ext {\n-\tcase \".go\", \".c\", \".cc\", \".cxx\", \".cpp\", \".s\", \".h\", \".hh\", \".hpp\", \".hxx\", \".S\", \".swig\", \".swigcxx\":\n+\tcase \".go\", \".c\", \".cc\", \".cxx\", \".cpp\", \".m\", \".s\", \".h\", \".hh\", \".hpp\", \".hxx\", \".S\", \".swig\", \".swigcxx\":\n \t\t// tentatively okay - read to make sure\n \tcase \".syso\":\n \t\t// binary, no reading"}, {"sha": "d238e96eaa850954720898b5f17d2b57a6d1f175", "filename": "libgo/go/go/build/deps_test.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fbuild%2Fdeps_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fbuild%2Fdeps_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fdeps_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -29,7 +29,7 @@ var pkgDeps = map[string][]string{\n \t\"errors\":      {},\n \t\"io\":          {\"errors\", \"sync\"},\n \t\"runtime\":     {\"unsafe\"},\n-\t\"sync\":        {\"sync/atomic\", \"unsafe\"},\n+\t\"sync\":        {\"runtime\", \"sync/atomic\", \"unsafe\"},\n \t\"sync/atomic\": {\"unsafe\"},\n \t\"unsafe\":      {},\n \n@@ -125,7 +125,7 @@ var pkgDeps = map[string][]string{\n \t\"os\":            {\"L1\", \"os\", \"syscall\", \"time\"},\n \t\"path/filepath\": {\"L2\", \"os\", \"syscall\"},\n \t\"io/ioutil\":     {\"L2\", \"os\", \"path/filepath\", \"time\"},\n-\t\"os/exec\":       {\"L2\", \"os\", \"syscall\"},\n+\t\"os/exec\":       {\"L2\", \"os\", \"path/filepath\", \"syscall\"},\n \t\"os/signal\":     {\"L2\", \"os\", \"syscall\"},\n \n \t// OS enables basic operating system functionality,\n@@ -301,7 +301,7 @@ var pkgDeps = map[string][]string{\n \t// SSL/TLS.\n \t\"crypto/tls\": {\n \t\t\"L4\", \"CRYPTO-MATH\", \"CGO\", \"OS\",\n-\t\t\"crypto/x509\", \"encoding/pem\", \"net\", \"syscall\",\n+\t\t\"container/list\", \"crypto/x509\", \"encoding/pem\", \"net\", \"syscall\",\n \t},\n \t\"crypto/x509\": {\n \t\t\"L4\", \"CRYPTO-MATH\", \"OS\", \"CGO\","}, {"sha": "f4ce9f654154247ed6e16eb3ace05593fe953880", "filename": "libgo/go/go/doc/example.go", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fdoc%2Fexample.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fdoc%2Fexample.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fdoc%2Fexample.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -32,6 +32,17 @@ type Example struct {\n \n // Examples returns the examples found in the files, sorted by Name field.\n // The Order fields record the order in which the examples were encountered.\n+//\n+// Playable Examples must be in a package whose name ends in \"_test\".\n+// An Example is \"playable\" (the Play field is non-nil) in either of these\n+// circumstances:\n+//   - The example function is self-contained: the function references only\n+//     identifiers from other packages (or predeclared identifiers, such as\n+//     \"int\") and the test file does not include a dot import.\n+//   - The entire test file is the example: the file contains exactly one\n+//     example function, zero test or benchmark functions, and at least one\n+//     top-level function, type, variable, or constant declaration other\n+//     than the example function.\n func Examples(files ...*ast.File) []*Example {\n \tvar list []*Example\n \tfor _, file := range files {"}, {"sha": "c3e3ee859ab2f623c47634e0c5296b84054e3198", "filename": "libgo/go/go/parser/parser.go", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fparser%2Fparser.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fparser%2Fparser.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fparser%2Fparser.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -1168,16 +1168,19 @@ func (p *parser) parseIndexOrSlice(x ast.Expr) ast.Expr {\n \t\tdefer un(trace(p, \"IndexOrSlice\"))\n \t}\n \n+\tconst N = 3 // change the 3 to 2 to disable 3-index slices\n \tlbrack := p.expect(token.LBRACK)\n \tp.exprLev++\n-\tvar index [3]ast.Expr // change the 3 to 2 to disable slice expressions w/ cap\n+\tvar index [N]ast.Expr\n+\tvar colons [N - 1]token.Pos\n \tif p.tok != token.COLON {\n \t\tindex[0] = p.parseRhs()\n \t}\n \tncolons := 0\n-\tfor p.tok == token.COLON && ncolons < len(index)-1 {\n-\t\tp.next()\n+\tfor p.tok == token.COLON && ncolons < len(colons) {\n+\t\tcolons[ncolons] = p.pos\n \t\tncolons++\n+\t\tp.next()\n \t\tif p.tok != token.COLON && p.tok != token.RBRACK && p.tok != token.EOF {\n \t\t\tindex[ncolons] = p.parseRhs()\n \t\t}\n@@ -1187,7 +1190,21 @@ func (p *parser) parseIndexOrSlice(x ast.Expr) ast.Expr {\n \n \tif ncolons > 0 {\n \t\t// slice expression\n-\t\treturn &ast.SliceExpr{X: x, Lbrack: lbrack, Low: index[0], High: index[1], Max: index[2], Slice3: ncolons == 2, Rbrack: rbrack}\n+\t\tslice3 := false\n+\t\tif ncolons == 2 {\n+\t\t\tslice3 = true\n+\t\t\t// Check presence of 2nd and 3rd index here rather than during type-checking\n+\t\t\t// to prevent erroneous programs from passing through gofmt (was issue 7305).\n+\t\t\tif index[1] == nil {\n+\t\t\t\tp.error(colons[0], \"2nd index required in 3-index slice\")\n+\t\t\t\tindex[1] = &ast.BadExpr{From: colons[0] + 1, To: colons[1]}\n+\t\t\t}\n+\t\t\tif index[2] == nil {\n+\t\t\t\tp.error(colons[1], \"3rd index required in 3-index slice\")\n+\t\t\t\tindex[2] = &ast.BadExpr{From: colons[1] + 1, To: rbrack}\n+\t\t\t}\n+\t\t}\n+\t\treturn &ast.SliceExpr{X: x, Lbrack: lbrack, Low: index[0], High: index[1], Max: index[2], Slice3: slice3, Rbrack: rbrack}\n \t}\n \n \treturn &ast.IndexExpr{X: x, Lbrack: lbrack, Index: index[0], Rbrack: rbrack}\n@@ -1745,14 +1762,14 @@ func (p *parser) parseBranchStmt(tok token.Token) *ast.BranchStmt {\n \treturn &ast.BranchStmt{TokPos: pos, Tok: tok, Label: label}\n }\n \n-func (p *parser) makeExpr(s ast.Stmt) ast.Expr {\n+func (p *parser) makeExpr(s ast.Stmt, kind string) ast.Expr {\n \tif s == nil {\n \t\treturn nil\n \t}\n \tif es, isExpr := s.(*ast.ExprStmt); isExpr {\n \t\treturn p.checkExpr(es.X)\n \t}\n-\tp.error(s.Pos(), \"expected condition, found simple statement\")\n+\tp.error(s.Pos(), fmt.Sprintf(\"expected %s, found simple statement (missing parentheses around composite literal?)\", kind))\n \treturn &ast.BadExpr{From: s.Pos(), To: s.End()}\n }\n \n@@ -1779,7 +1796,7 @@ func (p *parser) parseIfStmt() *ast.IfStmt {\n \t\t\t\tp.next()\n \t\t\t\tx = p.parseRhs()\n \t\t\t} else {\n-\t\t\t\tx = p.makeExpr(s)\n+\t\t\t\tx = p.makeExpr(s, \"boolean expression\")\n \t\t\t\ts = nil\n \t\t\t}\n \t\t}\n@@ -1910,7 +1927,7 @@ func (p *parser) parseSwitchStmt() ast.Stmt {\n \t\treturn &ast.TypeSwitchStmt{Switch: pos, Init: s1, Assign: s2, Body: body}\n \t}\n \n-\treturn &ast.SwitchStmt{Switch: pos, Init: s1, Tag: p.makeExpr(s2), Body: body}\n+\treturn &ast.SwitchStmt{Switch: pos, Init: s1, Tag: p.makeExpr(s2, \"switch expression\"), Body: body}\n }\n \n func (p *parser) parseCommClause() *ast.CommClause {\n@@ -2055,7 +2072,7 @@ func (p *parser) parseForStmt() ast.Stmt {\n \treturn &ast.ForStmt{\n \t\tFor:  pos,\n \t\tInit: s1,\n-\t\tCond: p.makeExpr(s2),\n+\t\tCond: p.makeExpr(s2, \"boolean or range expression\"),\n \t\tPost: s3,\n \t\tBody: body,\n \t}"}, {"sha": "22f79930b372ef46b856b28912b579d54eceb532", "filename": "libgo/go/go/parser/short_test.go", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fparser%2Fshort_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fparser%2Fshort_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fparser%2Fshort_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -48,14 +48,14 @@ var invalids = []string{\n \t`package p; func f() { if { /* ERROR \"expected operand\" */ } };`,\n \t`package p; func f() { if ; { /* ERROR \"expected operand\" */ } };`,\n \t`package p; func f() { if f(); { /* ERROR \"expected operand\" */ } };`,\n-\t`package p; func f() { if _ /* ERROR \"expected condition\" */ = range x; true {} };`,\n-\t`package p; func f() { switch _ /* ERROR \"expected condition\" */ = range x; true {} };`,\n+\t`package p; func f() { if _ /* ERROR \"expected boolean expression\" */ = range x; true {} };`,\n+\t`package p; func f() { switch _ /* ERROR \"expected switch expression\" */ = range x; true {} };`,\n \t`package p; func f() { for _ = range x ; /* ERROR \"expected '{'\" */ ; {} };`,\n \t`package p; func f() { for ; ; _ = range /* ERROR \"expected operand\" */ x {} };`,\n-\t`package p; func f() { for ; _ /* ERROR \"expected condition\" */ = range x ; {} };`,\n-\t`package p; func f() { switch t /* ERROR \"expected condition\" */ = t.(type) {} };`,\n-\t`package p; func f() { switch t /* ERROR \"expected condition\" */ , t = t.(type) {} };`,\n-\t`package p; func f() { switch t /* ERROR \"expected condition\" */ = t.(type), t {} };`,\n+\t`package p; func f() { for ; _ /* ERROR \"expected boolean or range expression\" */ = range x ; {} };`,\n+\t`package p; func f() { switch t /* ERROR \"expected switch expression\" */ = t.(type) {} };`,\n+\t`package p; func f() { switch t /* ERROR \"expected switch expression\" */ , t = t.(type) {} };`,\n+\t`package p; func f() { switch t /* ERROR \"expected switch expression\" */ = t.(type), t {} };`,\n \t`package p; var a = [ /* ERROR \"expected expression\" */ 1]int;`,\n \t`package p; var a = [ /* ERROR \"expected expression\" */ ...]int;`,\n \t`package p; var a = struct /* ERROR \"expected expression\" */ {}`,\n@@ -76,8 +76,16 @@ var invalids = []string{\n \t`package p; func f() { _ = x = /* ERROR \"expected '=='\" */ 0 {}};`,\n \t`package p; func f() { _ = 1 == func()int { var x bool; x = x = /* ERROR \"expected '=='\" */ true; return x }() };`,\n \t`package p; func f() { var s []int; _ = s[] /* ERROR \"expected operand\" */ };`,\n-\t`package p; func f() { var s []int; _ = s[::: /* ERROR \"expected ']'\" */ ] };`,\n+\t`package p; func f() { var s []int; _ = s[i:j: /* ERROR \"3rd index required\" */ ] };`,\n+\t`package p; func f() { var s []int; _ = s[i: /* ERROR \"2nd index required\" */ :k] };`,\n+\t`package p; func f() { var s []int; _ = s[i: /* ERROR \"2nd index required\" */ :] };`,\n+\t`package p; func f() { var s []int; _ = s[: /* ERROR \"2nd index required\" */ :] };`,\n+\t`package p; func f() { var s []int; _ = s[: /* ERROR \"2nd index required\" */ ::] };`,\n \t`package p; func f() { var s []int; _ = s[i:j:k: /* ERROR \"expected ']'\" */ l] };`,\n+\t`package p; func f() { for x /* ERROR \"boolean or range expression\" */ = []string {} }`,\n+\t`package p; func f() { for x /* ERROR \"boolean or range expression\" */ := []string {} }`,\n+\t`package p; func f() { for i /* ERROR \"boolean or range expression\" */ , x = []string {} }`,\n+\t`package p; func f() { for i /* ERROR \"boolean or range expression\" */ , x := []string {} }`,\n }\n \n func TestInvalid(t *testing.T) {"}, {"sha": "25588ba3b0c0bb166dd518a2adbdb2c5df729501", "filename": "libgo/go/go/scanner/scanner.go", "status": "modified", "additions": 64, "deletions": 41, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fscanner%2Fscanner.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fscanner%2Fscanner.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fscanner%2Fscanner.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -358,73 +358,94 @@ exit:\n \treturn tok, string(s.src[offs:s.offset])\n }\n \n-func (s *Scanner) scanEscape(quote rune) {\n+// scanEscape parses an escape sequence where rune is the accepted\n+// escaped quote. In case of a syntax error, it stops at the offending\n+// character (without consuming it) and returns false. Otherwise\n+// it returns true.\n+func (s *Scanner) scanEscape(quote rune) bool {\n \toffs := s.offset\n \n-\tvar i, base, max uint32\n+\tvar n int\n+\tvar base, max uint32\n \tswitch s.ch {\n \tcase 'a', 'b', 'f', 'n', 'r', 't', 'v', '\\\\', quote:\n \t\ts.next()\n-\t\treturn\n+\t\treturn true\n \tcase '0', '1', '2', '3', '4', '5', '6', '7':\n-\t\ti, base, max = 3, 8, 255\n+\t\tn, base, max = 3, 8, 255\n \tcase 'x':\n \t\ts.next()\n-\t\ti, base, max = 2, 16, 255\n+\t\tn, base, max = 2, 16, 255\n \tcase 'u':\n \t\ts.next()\n-\t\ti, base, max = 4, 16, unicode.MaxRune\n+\t\tn, base, max = 4, 16, unicode.MaxRune\n \tcase 'U':\n \t\ts.next()\n-\t\ti, base, max = 8, 16, unicode.MaxRune\n+\t\tn, base, max = 8, 16, unicode.MaxRune\n \tdefault:\n-\t\ts.next() // always make progress\n-\t\ts.error(offs, \"unknown escape sequence\")\n-\t\treturn\n+\t\tmsg := \"unknown escape sequence\"\n+\t\tif s.ch < 0 {\n+\t\t\tmsg = \"escape sequence not terminated\"\n+\t\t}\n+\t\ts.error(offs, msg)\n+\t\treturn false\n \t}\n \n \tvar x uint32\n-\tfor ; i > 0 && s.ch != quote && s.ch >= 0; i-- {\n+\tfor n > 0 {\n \t\td := uint32(digitVal(s.ch))\n \t\tif d >= base {\n-\t\t\ts.error(s.offset, \"illegal character in escape sequence\")\n-\t\t\tbreak\n+\t\t\tmsg := fmt.Sprintf(\"illegal character %#U in escape sequence\", s.ch)\n+\t\t\tif s.ch < 0 {\n+\t\t\t\tmsg = \"escape sequence not terminated\"\n+\t\t\t}\n+\t\t\ts.error(s.offset, msg)\n+\t\t\treturn false\n \t\t}\n \t\tx = x*base + d\n \t\ts.next()\n+\t\tn--\n \t}\n-\t// in case of an error, consume remaining chars\n-\tfor ; i > 0 && s.ch != quote && s.ch >= 0; i-- {\n-\t\ts.next()\n-\t}\n+\n \tif x > max || 0xD800 <= x && x < 0xE000 {\n \t\ts.error(offs, \"escape sequence is invalid Unicode code point\")\n+\t\treturn false\n \t}\n+\n+\treturn true\n }\n \n-func (s *Scanner) scanChar() string {\n+func (s *Scanner) scanRune() string {\n \t// '\\'' opening already consumed\n \toffs := s.offset - 1\n \n+\tvalid := true\n \tn := 0\n-\tfor s.ch != '\\'' {\n+\tfor {\n \t\tch := s.ch\n-\t\tn++\n-\t\ts.next()\n \t\tif ch == '\\n' || ch < 0 {\n-\t\t\ts.error(offs, \"character literal not terminated\")\n-\t\t\tn = 1\n+\t\t\t// only report error if we don't have one already\n+\t\t\tif valid {\n+\t\t\t\ts.error(offs, \"rune literal not terminated\")\n+\t\t\t\tvalid = false\n+\t\t\t}\n \t\t\tbreak\n \t\t}\n+\t\ts.next()\n+\t\tif ch == '\\'' {\n+\t\t\tbreak\n+\t\t}\n+\t\tn++\n \t\tif ch == '\\\\' {\n-\t\t\ts.scanEscape('\\'')\n+\t\t\tif !s.scanEscape('\\'') {\n+\t\t\t\tvalid = false\n+\t\t\t}\n+\t\t\t// continue to read to closing quote\n \t\t}\n \t}\n \n-\ts.next()\n-\n-\tif n != 1 {\n-\t\ts.error(offs, \"illegal character literal\")\n+\tif valid && n != 1 {\n+\t\ts.error(offs, \"illegal rune literal\")\n \t}\n \n \treturn string(s.src[offs:s.offset])\n@@ -434,20 +455,21 @@ func (s *Scanner) scanString() string {\n \t// '\"' opening already consumed\n \toffs := s.offset - 1\n \n-\tfor s.ch != '\"' {\n+\tfor {\n \t\tch := s.ch\n-\t\ts.next()\n \t\tif ch == '\\n' || ch < 0 {\n-\t\t\ts.error(offs, \"string not terminated\")\n+\t\t\ts.error(offs, \"string literal not terminated\")\n+\t\t\tbreak\n+\t\t}\n+\t\ts.next()\n+\t\tif ch == '\"' {\n \t\t\tbreak\n \t\t}\n \t\tif ch == '\\\\' {\n \t\t\ts.scanEscape('\"')\n \t\t}\n \t}\n \n-\ts.next()\n-\n \treturn string(s.src[offs:s.offset])\n }\n \n@@ -468,20 +490,21 @@ func (s *Scanner) scanRawString() string {\n \toffs := s.offset - 1\n \n \thasCR := false\n-\tfor s.ch != '`' {\n+\tfor {\n \t\tch := s.ch\n+\t\tif ch < 0 {\n+\t\t\ts.error(offs, \"raw string literal not terminated\")\n+\t\t\tbreak\n+\t\t}\n \t\ts.next()\n+\t\tif ch == '`' {\n+\t\t\tbreak\n+\t\t}\n \t\tif ch == '\\r' {\n \t\t\thasCR = true\n \t\t}\n-\t\tif ch < 0 {\n-\t\t\ts.error(offs, \"string not terminated\")\n-\t\t\tbreak\n-\t\t}\n \t}\n \n-\ts.next()\n-\n \tlit := s.src[offs:s.offset]\n \tif hasCR {\n \t\tlit = stripCR(lit)\n@@ -617,7 +640,7 @@ scanAgain:\n \t\tcase '\\'':\n \t\t\tinsertSemi = true\n \t\t\ttok = token.CHAR\n-\t\t\tlit = s.scanChar()\n+\t\t\tlit = s.scanRune()\n \t\tcase '`':\n \t\t\tinsertSemi = true\n \t\t\ttok = token.STRING"}, {"sha": "e0d0b54f68e6d73d11cf7b05bbc290982613d5b3", "filename": "libgo/go/go/scanner/scanner_test.go", "status": "modified", "additions": 63, "deletions": 36, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fscanner%2Fscanner_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fgo%2Fscanner%2Fscanner_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fscanner%2Fscanner_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -631,7 +631,7 @@ type errorCollector struct {\n \tpos token.Position // last error position encountered\n }\n \n-func checkError(t *testing.T, src string, tok token.Token, pos int, err string) {\n+func checkError(t *testing.T, src string, tok token.Token, pos int, lit, err string) {\n \tvar s Scanner\n \tvar h errorCollector\n \teh := func(pos token.Position, msg string) {\n@@ -640,13 +640,12 @@ func checkError(t *testing.T, src string, tok token.Token, pos int, err string)\n \t\th.pos = pos\n \t}\n \ts.Init(fset.AddFile(\"\", fset.Base(), len(src)), []byte(src), eh, ScanComments|dontInsertSemis)\n-\t_, tok0, _ := s.Scan()\n-\t_, tok1, _ := s.Scan()\n+\t_, tok0, lit0 := s.Scan()\n \tif tok0 != tok {\n \t\tt.Errorf(\"%q: got %s, expected %s\", src, tok0, tok)\n \t}\n-\tif tok1 != token.EOF {\n-\t\tt.Errorf(\"%q: got %s, expected EOF\", src, tok1)\n+\tif tok0 != token.ILLEGAL && lit0 != lit {\n+\t\tt.Errorf(\"%q: got literal %q, expected %q\", src, lit0, lit)\n \t}\n \tcnt := 0\n \tif err != \"\" {\n@@ -667,43 +666,71 @@ var errors = []struct {\n \tsrc string\n \ttok token.Token\n \tpos int\n+\tlit string\n \terr string\n }{\n-\t{\"\\a\", token.ILLEGAL, 0, \"illegal character U+0007\"},\n-\t{`#`, token.ILLEGAL, 0, \"illegal character U+0023 '#'\"},\n-\t{`\u2026`, token.ILLEGAL, 0, \"illegal character U+2026 '\u2026'\"},\n-\t{`' '`, token.CHAR, 0, \"\"},\n-\t{`''`, token.CHAR, 0, \"illegal character literal\"},\n-\t{`'\\8'`, token.CHAR, 2, \"unknown escape sequence\"},\n-\t{`'\\08'`, token.CHAR, 3, \"illegal character in escape sequence\"},\n-\t{`'\\x0g'`, token.CHAR, 4, \"illegal character in escape sequence\"},\n-\t{`'\\Uffffffff'`, token.CHAR, 2, \"escape sequence is invalid Unicode code point\"},\n-\t{`'`, token.CHAR, 0, \"character literal not terminated\"},\n-\t{`\"\"`, token.STRING, 0, \"\"},\n-\t{`\"`, token.STRING, 0, \"string not terminated\"},\n-\t{\"``\", token.STRING, 0, \"\"},\n-\t{\"`\", token.STRING, 0, \"string not terminated\"},\n-\t{\"/**/\", token.COMMENT, 0, \"\"},\n-\t{\"/*\", token.COMMENT, 0, \"comment not terminated\"},\n-\t{\"077\", token.INT, 0, \"\"},\n-\t{\"078.\", token.FLOAT, 0, \"\"},\n-\t{\"07801234567.\", token.FLOAT, 0, \"\"},\n-\t{\"078e0\", token.FLOAT, 0, \"\"},\n-\t{\"078\", token.INT, 0, \"illegal octal number\"},\n-\t{\"07800000009\", token.INT, 0, \"illegal octal number\"},\n-\t{\"0x\", token.INT, 0, \"illegal hexadecimal number\"},\n-\t{\"0X\", token.INT, 0, \"illegal hexadecimal number\"},\n-\t{\"\\\"abc\\x00def\\\"\", token.STRING, 4, \"illegal character NUL\"},\n-\t{\"\\\"abc\\x80def\\\"\", token.STRING, 4, \"illegal UTF-8 encoding\"},\n-\t{\"\\ufeff\\ufeff\", token.ILLEGAL, 3, \"illegal byte order mark\"},            // only first BOM is ignored\n-\t{\"//\\ufeff\", token.COMMENT, 2, \"illegal byte order mark\"},                // only first BOM is ignored\n-\t{\"'\\ufeff\" + `'`, token.CHAR, 1, \"illegal byte order mark\"},              // only first BOM is ignored\n-\t{`\"` + \"abc\\ufeffdef\" + `\"`, token.STRING, 4, \"illegal byte order mark\"}, // only first BOM is ignored\n+\t{\"\\a\", token.ILLEGAL, 0, \"\", \"illegal character U+0007\"},\n+\t{`#`, token.ILLEGAL, 0, \"\", \"illegal character U+0023 '#'\"},\n+\t{`\u2026`, token.ILLEGAL, 0, \"\", \"illegal character U+2026 '\u2026'\"},\n+\t{`' '`, token.CHAR, 0, `' '`, \"\"},\n+\t{`''`, token.CHAR, 0, `''`, \"illegal rune literal\"},\n+\t{`'12'`, token.CHAR, 0, `'12'`, \"illegal rune literal\"},\n+\t{`'123'`, token.CHAR, 0, `'123'`, \"illegal rune literal\"},\n+\t{`'\\0'`, token.CHAR, 3, `'\\0'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\07'`, token.CHAR, 4, `'\\07'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\8'`, token.CHAR, 2, `'\\8'`, \"unknown escape sequence\"},\n+\t{`'\\08'`, token.CHAR, 3, `'\\08'`, \"illegal character U+0038 '8' in escape sequence\"},\n+\t{`'\\x'`, token.CHAR, 3, `'\\x'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\x0'`, token.CHAR, 4, `'\\x0'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\x0g'`, token.CHAR, 4, `'\\x0g'`, \"illegal character U+0067 'g' in escape sequence\"},\n+\t{`'\\u'`, token.CHAR, 3, `'\\u'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\u0'`, token.CHAR, 4, `'\\u0'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\u00'`, token.CHAR, 5, `'\\u00'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\u000'`, token.CHAR, 6, `'\\u000'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\u000`, token.CHAR, 6, `'\\u000`, \"escape sequence not terminated\"},\n+\t{`'\\u0000'`, token.CHAR, 0, `'\\u0000'`, \"\"},\n+\t{`'\\U'`, token.CHAR, 3, `'\\U'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U0'`, token.CHAR, 4, `'\\U0'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U00'`, token.CHAR, 5, `'\\U00'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U000'`, token.CHAR, 6, `'\\U000'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U0000'`, token.CHAR, 7, `'\\U0000'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U00000'`, token.CHAR, 8, `'\\U00000'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U000000'`, token.CHAR, 9, `'\\U000000'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U0000000'`, token.CHAR, 10, `'\\U0000000'`, \"illegal character U+0027 ''' in escape sequence\"},\n+\t{`'\\U0000000`, token.CHAR, 10, `'\\U0000000`, \"escape sequence not terminated\"},\n+\t{`'\\U00000000'`, token.CHAR, 0, `'\\U00000000'`, \"\"},\n+\t{`'\\Uffffffff'`, token.CHAR, 2, `'\\Uffffffff'`, \"escape sequence is invalid Unicode code point\"},\n+\t{`'`, token.CHAR, 0, `'`, \"rune literal not terminated\"},\n+\t{`'\\`, token.CHAR, 2, `'\\`, \"escape sequence not terminated\"},\n+\t{\"'\\n\", token.CHAR, 0, \"'\", \"rune literal not terminated\"},\n+\t{\"'\\n   \", token.CHAR, 0, \"'\", \"rune literal not terminated\"},\n+\t{`\"\"`, token.STRING, 0, `\"\"`, \"\"},\n+\t{`\"abc`, token.STRING, 0, `\"abc`, \"string literal not terminated\"},\n+\t{\"\\\"abc\\n\", token.STRING, 0, `\"abc`, \"string literal not terminated\"},\n+\t{\"\\\"abc\\n   \", token.STRING, 0, `\"abc`, \"string literal not terminated\"},\n+\t{\"``\", token.STRING, 0, \"``\", \"\"},\n+\t{\"`\", token.STRING, 0, \"`\", \"raw string literal not terminated\"},\n+\t{\"/**/\", token.COMMENT, 0, \"/**/\", \"\"},\n+\t{\"/*\", token.COMMENT, 0, \"/*\", \"comment not terminated\"},\n+\t{\"077\", token.INT, 0, \"077\", \"\"},\n+\t{\"078.\", token.FLOAT, 0, \"078.\", \"\"},\n+\t{\"07801234567.\", token.FLOAT, 0, \"07801234567.\", \"\"},\n+\t{\"078e0\", token.FLOAT, 0, \"078e0\", \"\"},\n+\t{\"078\", token.INT, 0, \"078\", \"illegal octal number\"},\n+\t{\"07800000009\", token.INT, 0, \"07800000009\", \"illegal octal number\"},\n+\t{\"0x\", token.INT, 0, \"0x\", \"illegal hexadecimal number\"},\n+\t{\"0X\", token.INT, 0, \"0X\", \"illegal hexadecimal number\"},\n+\t{\"\\\"abc\\x00def\\\"\", token.STRING, 4, \"\\\"abc\\x00def\\\"\", \"illegal character NUL\"},\n+\t{\"\\\"abc\\x80def\\\"\", token.STRING, 4, \"\\\"abc\\x80def\\\"\", \"illegal UTF-8 encoding\"},\n+\t{\"\\ufeff\\ufeff\", token.ILLEGAL, 3, \"\\ufeff\\ufeff\", \"illegal byte order mark\"},                        // only first BOM is ignored\n+\t{\"//\\ufeff\", token.COMMENT, 2, \"//\\ufeff\", \"illegal byte order mark\"},                                // only first BOM is ignored\n+\t{\"'\\ufeff\" + `'`, token.CHAR, 1, \"'\\ufeff\" + `'`, \"illegal byte order mark\"},                         // only first BOM is ignored\n+\t{`\"` + \"abc\\ufeffdef\" + `\"`, token.STRING, 4, `\"` + \"abc\\ufeffdef\" + `\"`, \"illegal byte order mark\"}, // only first BOM is ignored\n }\n \n func TestScanErrors(t *testing.T) {\n \tfor _, e := range errors {\n-\t\tcheckError(t, e.src, e.tok, e.pos, e.err)\n+\t\tcheckError(t, e.src, e.tok, e.pos, e.lit, e.err)\n \t}\n }\n "}, {"sha": "ab8dd5d3b40534e2354846b814d42d3a173ad004", "filename": "libgo/go/io/multi.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fio%2Fmulti.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fio%2Fmulti.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fio%2Fmulti.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -26,7 +26,8 @@ func (mr *multiReader) Read(p []byte) (n int, err error) {\n \n // MultiReader returns a Reader that's the logical concatenation of\n // the provided input readers.  They're read sequentially.  Once all\n-// inputs are drained, Read will return EOF.\n+// inputs have returned EOF, Read will return EOF.  If any of the readers\n+// return a non-nil, non-EOF error, Read will return that error.\n func MultiReader(readers ...Reader) Reader {\n \treturn &multiReader{readers}\n }"}, {"sha": "c5ff4252d50f21492efc7929c7e17aa5c61c1fe9", "filename": "libgo/go/math/big/arith.go", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Farith.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Farith.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Farith.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -136,25 +136,23 @@ func divWW_g(u1, u0, v Word) (q, r Word) {\n \tq1 := un32 / vn1\n \trhat := un32 - q1*vn1\n \n-again1:\n-\tif q1 >= _B2 || q1*vn0 > _B2*rhat+un1 {\n+\tfor q1 >= _B2 || q1*vn0 > _B2*rhat+un1 {\n \t\tq1--\n \t\trhat += vn1\n-\t\tif rhat < _B2 {\n-\t\t\tgoto again1\n+\t\tif rhat >= _B2 {\n+\t\t\tbreak\n \t\t}\n \t}\n \n \tun21 := un32*_B2 + un1 - q1*v\n \tq0 := un21 / vn1\n \trhat = un21 - q0*vn1\n \n-again2:\n-\tif q0 >= _B2 || q0*vn0 > _B2*rhat+un0 {\n+\tfor q0 >= _B2 || q0*vn0 > _B2*rhat+un0 {\n \t\tq0--\n \t\trhat += vn1\n-\t\tif rhat < _B2 {\n-\t\t\tgoto again2\n+\t\tif rhat >= _B2 {\n+\t\t\tbreak\n \t\t}\n \t}\n "}, {"sha": "4591590d409817e6bf8b05af1be5674b6cd06c1a", "filename": "libgo/go/math/big/int.go", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Fint.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Fint.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Fint.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -982,17 +982,29 @@ func (z *Int) GobDecode(buf []byte) error {\n }\n \n // MarshalJSON implements the json.Marshaler interface.\n-func (x *Int) MarshalJSON() ([]byte, error) {\n+func (z *Int) MarshalJSON() ([]byte, error) {\n \t// TODO(gri): get rid of the []byte/string conversions\n-\treturn []byte(x.String()), nil\n+\treturn []byte(z.String()), nil\n }\n \n // UnmarshalJSON implements the json.Unmarshaler interface.\n-func (z *Int) UnmarshalJSON(x []byte) error {\n+func (z *Int) UnmarshalJSON(text []byte) error {\n \t// TODO(gri): get rid of the []byte/string conversions\n-\t_, ok := z.SetString(string(x), 0)\n-\tif !ok {\n-\t\treturn fmt.Errorf(\"math/big: cannot unmarshal %s into a *big.Int\", x)\n+\tif _, ok := z.SetString(string(text), 0); !ok {\n+\t\treturn fmt.Errorf(\"math/big: cannot unmarshal %q into a *big.Int\", text)\n+\t}\n+\treturn nil\n+}\n+\n+// MarshalText implements the encoding.TextMarshaler interface\n+func (z *Int) MarshalText() (text []byte, err error) {\n+\treturn []byte(z.String()), nil\n+}\n+\n+// UnmarshalText implements the encoding.TextUnmarshaler interface\n+func (z *Int) UnmarshalText(text []byte) error {\n+\tif _, ok := z.SetString(string(text), 0); !ok {\n+\t\treturn fmt.Errorf(\"math/big: cannot unmarshal %q into a *big.Int\", text)\n \t}\n \treturn nil\n }"}, {"sha": "3dd9c5b712b72d200d71e5e60846f37cb67a0f12", "filename": "libgo/go/math/big/int_test.go", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Fint_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Fint_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Fint_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -9,6 +9,7 @@ import (\n \t\"encoding/gob\"\n \t\"encoding/hex\"\n \t\"encoding/json\"\n+\t\"encoding/xml\"\n \t\"fmt\"\n \t\"math/rand\"\n \t\"testing\"\n@@ -1528,6 +1529,58 @@ func TestIntJSONEncoding(t *testing.T) {\n \t}\n }\n \n+var intVals = []string{\n+\t\"-141592653589793238462643383279502884197169399375105820974944592307816406286\",\n+\t\"-1415926535897932384626433832795028841971\",\n+\t\"-141592653589793\",\n+\t\"-1\",\n+\t\"0\",\n+\t\"1\",\n+\t\"141592653589793\",\n+\t\"1415926535897932384626433832795028841971\",\n+\t\"141592653589793238462643383279502884197169399375105820974944592307816406286\",\n+}\n+\n+func TestIntJSONEncodingTextMarshaller(t *testing.T) {\n+\tfor _, num := range intVals {\n+\t\tvar tx Int\n+\t\ttx.SetString(num, 0)\n+\t\tb, err := json.Marshal(&tx)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"marshaling of %s failed: %s\", &tx, err)\n+\t\t\tcontinue\n+\t\t}\n+\t\tvar rx Int\n+\t\tif err := json.Unmarshal(b, &rx); err != nil {\n+\t\t\tt.Errorf(\"unmarshaling of %s failed: %s\", &tx, err)\n+\t\t\tcontinue\n+\t\t}\n+\t\tif rx.Cmp(&tx) != 0 {\n+\t\t\tt.Errorf(\"JSON encoding of %s failed: got %s want %s\", &tx, &rx, &tx)\n+\t\t}\n+\t}\n+}\n+\n+func TestIntXMLEncodingTextMarshaller(t *testing.T) {\n+\tfor _, num := range intVals {\n+\t\tvar tx Int\n+\t\ttx.SetString(num, 0)\n+\t\tb, err := xml.Marshal(&tx)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"marshaling of %s failed: %s\", &tx, err)\n+\t\t\tcontinue\n+\t\t}\n+\t\tvar rx Int\n+\t\tif err := xml.Unmarshal(b, &rx); err != nil {\n+\t\t\tt.Errorf(\"unmarshaling of %s failed: %s\", &tx, err)\n+\t\t\tcontinue\n+\t\t}\n+\t\tif rx.Cmp(&tx) != 0 {\n+\t\t\tt.Errorf(\"XML encoding of %s failed: got %s want %s\", &tx, &rx, &tx)\n+\t\t}\n+\t}\n+}\n+\n func TestIssue2607(t *testing.T) {\n \t// This code sequence used to hang.\n \tn := NewInt(10)"}, {"sha": "3cdb1d807f5dc4406eab1b9a70e4013a7396f45f", "filename": "libgo/go/math/big/rat.go", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Frat.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Frat.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Frat.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -585,3 +585,16 @@ func (z *Rat) GobDecode(buf []byte) error {\n \tz.b.abs = z.b.abs.setBytes(buf[i:])\n \treturn nil\n }\n+\n+// MarshalText implements the encoding.TextMarshaler interface\n+func (r *Rat) MarshalText() (text []byte, err error) {\n+\treturn []byte(r.RatString()), nil\n+}\n+\n+// UnmarshalText implements the encoding.TextUnmarshaler interface\n+func (r *Rat) UnmarshalText(text []byte) error {\n+\tif _, ok := r.SetString(string(text)); !ok {\n+\t\treturn fmt.Errorf(\"math/big: cannot unmarshal %q into a *big.Rat\", text)\n+\t}\n+\treturn nil\n+}"}, {"sha": "414a67d419d68383455e5ae09e0785a5f79f2b3b", "filename": "libgo/go/math/big/rat_test.go", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Frat_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmath%2Fbig%2Frat_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Frat_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -7,6 +7,8 @@ package big\n import (\n \t\"bytes\"\n \t\"encoding/gob\"\n+\t\"encoding/json\"\n+\t\"encoding/xml\"\n \t\"fmt\"\n \t\"math\"\n \t\"strconv\"\n@@ -433,6 +435,69 @@ func TestGobEncodingNilRatInSlice(t *testing.T) {\n \t}\n }\n \n+var ratNums = []string{\n+\t\"-141592653589793238462643383279502884197169399375105820974944592307816406286\",\n+\t\"-1415926535897932384626433832795028841971\",\n+\t\"-141592653589793\",\n+\t\"-1\",\n+\t\"0\",\n+\t\"1\",\n+\t\"141592653589793\",\n+\t\"1415926535897932384626433832795028841971\",\n+\t\"141592653589793238462643383279502884197169399375105820974944592307816406286\",\n+}\n+\n+var ratDenoms = []string{\n+\t\"1\",\n+\t\"718281828459045\",\n+\t\"7182818284590452353602874713526624977572\",\n+\t\"718281828459045235360287471352662497757247093699959574966967627724076630353\",\n+}\n+\n+func TestRatJSONEncoding(t *testing.T) {\n+\tfor _, num := range ratNums {\n+\t\tfor _, denom := range ratDenoms {\n+\t\t\tvar tx Rat\n+\t\t\ttx.SetString(num + \"/\" + denom)\n+\t\t\tb, err := json.Marshal(&tx)\n+\t\t\tif err != nil {\n+\t\t\t\tt.Errorf(\"marshaling of %s failed: %s\", &tx, err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tvar rx Rat\n+\t\t\tif err := json.Unmarshal(b, &rx); err != nil {\n+\t\t\t\tt.Errorf(\"unmarshaling of %s failed: %s\", &tx, err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tif rx.Cmp(&tx) != 0 {\n+\t\t\t\tt.Errorf(\"JSON encoding of %s failed: got %s want %s\", &tx, &rx, &tx)\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+func TestRatXMLEncoding(t *testing.T) {\n+\tfor _, num := range ratNums {\n+\t\tfor _, denom := range ratDenoms {\n+\t\t\tvar tx Rat\n+\t\t\ttx.SetString(num + \"/\" + denom)\n+\t\t\tb, err := xml.Marshal(&tx)\n+\t\t\tif err != nil {\n+\t\t\t\tt.Errorf(\"marshaling of %s failed: %s\", &tx, err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tvar rx Rat\n+\t\t\tif err := xml.Unmarshal(b, &rx); err != nil {\n+\t\t\t\tt.Errorf(\"unmarshaling of %s failed: %s\", &tx, err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tif rx.Cmp(&tx) != 0 {\n+\t\t\t\tt.Errorf(\"XML encoding of %s failed: got %s want %s\", &tx, &rx, &tx)\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n func TestIssue2379(t *testing.T) {\n \t// 1) no aliasing\n \tq := NewRat(3, 2)"}, {"sha": "6e2388bafef3363d4d78285503339c0e646ccbed", "filename": "libgo/go/mime/multipart/formdata_test.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmime%2Fmultipart%2Fformdata_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmime%2Fmultipart%2Fformdata_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmime%2Fmultipart%2Fformdata_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -9,12 +9,13 @@ import (\n \t\"io\"\n \t\"os\"\n \t\"regexp\"\n+\t\"strings\"\n \t\"testing\"\n )\n \n func TestReadForm(t *testing.T) {\n \ttestBody := regexp.MustCompile(\"\\n\").ReplaceAllString(message, \"\\r\\n\")\n-\tb := bytes.NewBufferString(testBody)\n+\tb := strings.NewReader(testBody)\n \tr := NewReader(b, boundary)\n \tf, err := r.ReadForm(25)\n \tif err != nil {"}, {"sha": "d949ba3f3e5ece6473337cdb51935a7bb32d39c6", "filename": "libgo/go/mime/type_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmime%2Ftype_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fmime%2Ftype_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmime%2Ftype_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package mime\n "}, {"sha": "7250dcb85ad766d9f8897d776041640bfe6bdb76", "filename": "libgo/go/net/conn_test.go", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fconn_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fconn_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fconn_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -53,7 +53,9 @@ func TestConnAndListener(t *testing.T) {\n \t\t\t\tos.Remove(addr)\n \t\t\t}\n \t\t}(ln, tt.net, addr)\n-\t\tln.Addr()\n+\t\tif ln.Addr().Network() != tt.net {\n+\t\t\tt.Fatalf(\"got %v; expected %v\", ln.Addr().Network(), tt.net)\n+\t\t}\n \n \t\tdone := make(chan int)\n \t\tgo transponder(t, ln, done)\n@@ -63,8 +65,9 @@ func TestConnAndListener(t *testing.T) {\n \t\t\tt.Fatalf(\"Dial failed: %v\", err)\n \t\t}\n \t\tdefer c.Close()\n-\t\tc.LocalAddr()\n-\t\tc.RemoteAddr()\n+\t\tif c.LocalAddr().Network() != tt.net || c.LocalAddr().Network() != tt.net {\n+\t\t\tt.Fatalf(\"got %v->%v; expected %v->%v\", c.LocalAddr().Network(), c.RemoteAddr().Network(), tt.net, tt.net)\n+\t\t}\n \t\tc.SetDeadline(time.Now().Add(someTimeout))\n \t\tc.SetReadDeadline(time.Now().Add(someTimeout))\n \t\tc.SetWriteDeadline(time.Now().Add(someTimeout))\n@@ -96,8 +99,11 @@ func transponder(t *testing.T, ln Listener, done chan<- int) {\n \t\treturn\n \t}\n \tdefer c.Close()\n-\tc.LocalAddr()\n-\tc.RemoteAddr()\n+\tnetwork := ln.Addr().Network()\n+\tif c.LocalAddr().Network() != network || c.LocalAddr().Network() != network {\n+\t\tt.Errorf(\"got %v->%v; expected %v->%v\", c.LocalAddr().Network(), c.RemoteAddr().Network(), network, network)\n+\t\treturn\n+\t}\n \tc.SetDeadline(time.Now().Add(someTimeout))\n \tc.SetReadDeadline(time.Now().Add(someTimeout))\n \tc.SetWriteDeadline(time.Now().Add(someTimeout))"}, {"sha": "08a0567ca762321096073f5878197b7eec3f9bf4", "filename": "libgo/go/net/dial_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fdial_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fdial_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdial_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -58,7 +58,7 @@ func TestDialTimeout(t *testing.T) {\n \t\t\t\terrc <- err\n \t\t\t}()\n \t\t}\n-\tcase \"darwin\", \"windows\":\n+\tcase \"darwin\", \"plan9\", \"windows\":\n \t\t// At least OS X 10.7 seems to accept any number of\n \t\t// connections, ignoring listen's backlog, so resort\n \t\t// to connecting to a hopefully-dead 127/8 address."}, {"sha": "df5895afa74f35cc20d6e4e85c25b73a18587a58", "filename": "libgo/go/net/dialgoogle_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fdialgoogle_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fdialgoogle_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdialgoogle_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -104,7 +104,7 @@ var googleaddrsipv4 = []string{\n \t\"[::ffff:%02x%02x:%02x%02x]:80\",\n \t\"[0:0:0:0:0000:ffff:%d.%d.%d.%d]:80\",\n \t\"[0:0:0:0:000000:ffff:%d.%d.%d.%d]:80\",\n-\t\"[0:0:0:0:0:ffff::%d.%d.%d.%d]:80\",\n+\t\"[0:0:0:0::ffff:%d.%d.%d.%d]:80\",\n }\n \n func TestDialGoogleIPv4(t *testing.T) {"}, {"sha": "4309a87c3a4a69e397286b453bc0e1830b9163f0", "filename": "libgo/go/net/fd_plan9.go", "status": "modified", "additions": 106, "deletions": 5, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffd_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffd_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -13,12 +13,23 @@ import (\n \n // Network file descritor.\n type netFD struct {\n-\tproto, name, dir string\n-\tctl, data        *os.File\n-\tladdr, raddr     Addr\n+\t// locking/lifetime of sysfd + serialize access to Read and Write methods\n+\tfdmu fdMutex\n+\n+\t// immutable until Close\n+\tproto        string\n+\tn            string\n+\tdir          string\n+\tctl, data    *os.File\n+\tladdr, raddr Addr\n }\n \n+var (\n+\tnetdir string // default network\n+)\n+\n func sysInit() {\n+\tnetdir = \"/net\"\n }\n \n func dial(net string, ra Addr, dialer func(time.Time) (Conn, error), deadline time.Time) (Conn, error) {\n@@ -27,16 +38,99 @@ func dial(net string, ra Addr, dialer func(time.Time) (Conn, error), deadline ti\n \treturn dialChannel(net, ra, dialer, deadline)\n }\n \n-func newFD(proto, name string, ctl, data *os.File, laddr, raddr Addr) *netFD {\n-\treturn &netFD{proto, name, \"/net/\" + proto + \"/\" + name, ctl, data, laddr, raddr}\n+func newFD(proto, name string, ctl, data *os.File, laddr, raddr Addr) (*netFD, error) {\n+\treturn &netFD{proto: proto, n: name, dir: netdir + \"/\" + proto + \"/\" + name, ctl: ctl, data: data, laddr: laddr, raddr: raddr}, nil\n+}\n+\n+func (fd *netFD) init() error {\n+\t// stub for future fd.pd.Init(fd)\n+\treturn nil\n+}\n+\n+func (fd *netFD) name() string {\n+\tvar ls, rs string\n+\tif fd.laddr != nil {\n+\t\tls = fd.laddr.String()\n+\t}\n+\tif fd.raddr != nil {\n+\t\trs = fd.raddr.String()\n+\t}\n+\treturn fd.proto + \":\" + ls + \"->\" + rs\n }\n \n func (fd *netFD) ok() bool { return fd != nil && fd.ctl != nil }\n \n+func (fd *netFD) destroy() {\n+\tif !fd.ok() {\n+\t\treturn\n+\t}\n+\terr := fd.ctl.Close()\n+\tif fd.data != nil {\n+\t\tif err1 := fd.data.Close(); err1 != nil && err == nil {\n+\t\t\terr = err1\n+\t\t}\n+\t}\n+\tfd.ctl = nil\n+\tfd.data = nil\n+}\n+\n+// Add a reference to this fd.\n+// Returns an error if the fd cannot be used.\n+func (fd *netFD) incref() error {\n+\tif !fd.fdmu.Incref() {\n+\t\treturn errClosing\n+\t}\n+\treturn nil\n+}\n+\n+// Remove a reference to this FD and close if we've been asked to do so\n+// (and there are no references left).\n+func (fd *netFD) decref() {\n+\tif fd.fdmu.Decref() {\n+\t\tfd.destroy()\n+\t}\n+}\n+\n+// Add a reference to this fd and lock for reading.\n+// Returns an error if the fd cannot be used.\n+func (fd *netFD) readLock() error {\n+\tif !fd.fdmu.RWLock(true) {\n+\t\treturn errClosing\n+\t}\n+\treturn nil\n+}\n+\n+// Unlock for reading and remove a reference to this FD.\n+func (fd *netFD) readUnlock() {\n+\tif fd.fdmu.RWUnlock(true) {\n+\t\tfd.destroy()\n+\t}\n+}\n+\n+// Add a reference to this fd and lock for writing.\n+// Returns an error if the fd cannot be used.\n+func (fd *netFD) writeLock() error {\n+\tif !fd.fdmu.RWLock(false) {\n+\t\treturn errClosing\n+\t}\n+\treturn nil\n+}\n+\n+// Unlock for writing and remove a reference to this FD.\n+func (fd *netFD) writeUnlock() {\n+\tif fd.fdmu.RWUnlock(false) {\n+\t\tfd.destroy()\n+\t}\n+}\n+\n func (fd *netFD) Read(b []byte) (n int, err error) {\n \tif !fd.ok() || fd.data == nil {\n \t\treturn 0, syscall.EINVAL\n \t}\n+\tif err := fd.readLock(); err != nil {\n+\t\treturn 0, err\n+\t}\n+\tdefer fd.readUnlock()\n \tn, err = fd.data.Read(b)\n \tif fd.proto == \"udp\" && err == io.EOF {\n \t\tn = 0\n@@ -49,6 +143,10 @@ func (fd *netFD) Write(b []byte) (n int, err error) {\n \tif !fd.ok() || fd.data == nil {\n \t\treturn 0, syscall.EINVAL\n \t}\n+\tif err := fd.writeLock(); err != nil {\n+\t\treturn 0, err\n+\t}\n+\tdefer fd.writeUnlock()\n \treturn fd.data.Write(b)\n }\n \n@@ -67,6 +165,9 @@ func (fd *netFD) CloseWrite() error {\n }\n \n func (fd *netFD) Close() error {\n+\tif !fd.fdmu.IncrefAndClose() {\n+\t\treturn errClosing\n+\t}\n \tif !fd.ok() {\n \t\treturn syscall.EINVAL\n \t}"}, {"sha": "0f8d6de5b547b3b0f544fd01a99ecd1a5ab633cb", "filename": "libgo/go/net/fd_windows.go", "status": "modified", "additions": 41, "deletions": 9, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffd_windows.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffd_windows.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_windows.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -119,7 +119,7 @@ func (o *operation) InitBuf(buf []byte) {\n \to.buf.Len = uint32(len(buf))\n \to.buf.Buf = nil\n \tif len(buf) != 0 {\n-\t\to.buf.Buf = (*byte)(unsafe.Pointer(&buf[0]))\n+\t\to.buf.Buf = &buf[0]\n \t}\n }\n \n@@ -513,12 +513,7 @@ func (fd *netFD) WriteTo(buf []byte, sa syscall.Sockaddr) (int, error) {\n \t})\n }\n \n-func (fd *netFD) accept(toAddr func(syscall.Sockaddr) Addr) (*netFD, error) {\n-\tif err := fd.readLock(); err != nil {\n-\t\treturn nil, err\n-\t}\n-\tdefer fd.readUnlock()\n-\n+func (fd *netFD) acceptOne(toAddr func(syscall.Sockaddr) Addr, rawsa []syscall.RawSockaddrAny, o *operation) (*netFD, error) {\n \t// Get new socket.\n \ts, err := sysSocket(fd.family, fd.sotype, 0)\n \tif err != nil {\n@@ -537,9 +532,7 @@ func (fd *netFD) accept(toAddr func(syscall.Sockaddr) Addr) (*netFD, error) {\n \t}\n \n \t// Submit accept request.\n-\to := &fd.rop\n \to.handle = s\n-\tvar rawsa [2]syscall.RawSockaddrAny\n \to.rsan = int32(unsafe.Sizeof(rawsa[0]))\n \t_, err = rsrv.ExecIO(o, \"AcceptEx\", func(o *operation) error {\n \t\treturn syscall.AcceptEx(o.fd.sysfd, o.handle, (*byte)(unsafe.Pointer(&rawsa[0])), 0, uint32(o.rsan), uint32(o.rsan), &o.qty, &o.o)\n@@ -556,6 +549,45 @@ func (fd *netFD) accept(toAddr func(syscall.Sockaddr) Addr) (*netFD, error) {\n \t\treturn nil, &OpError{\"Setsockopt\", fd.net, fd.laddr, err}\n \t}\n \n+\treturn netfd, nil\n+}\n+\n+func (fd *netFD) accept(toAddr func(syscall.Sockaddr) Addr) (*netFD, error) {\n+\tif err := fd.readLock(); err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer fd.readUnlock()\n+\n+\to := &fd.rop\n+\tvar netfd *netFD\n+\tvar err error\n+\tvar rawsa [2]syscall.RawSockaddrAny\n+\tfor {\n+\t\tnetfd, err = fd.acceptOne(toAddr, rawsa[:], o)\n+\t\tif err == nil {\n+\t\t\tbreak\n+\t\t}\n+\t\t// Sometimes we see WSAECONNRESET and ERROR_NETNAME_DELETED is\n+\t\t// returned here. These happen if connection reset is received\n+\t\t// before AcceptEx could complete. These errors relate to new\n+\t\t// connection, not to AcceptEx, so ignore broken connection and\n+\t\t// try AcceptEx again for more connections.\n+\t\toperr, ok := err.(*OpError)\n+\t\tif !ok {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\terrno, ok := operr.Err.(syscall.Errno)\n+\t\tif !ok {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\tswitch errno {\n+\t\tcase syscall.ERROR_NETNAME_DELETED, syscall.WSAECONNRESET:\n+\t\t\t// ignore these and try again\n+\t\tdefault:\n+\t\t\treturn nil, err\n+\t\t}\n+\t}\n+\n \t// Get local and peer addr out of AcceptEx buffer.\n \tvar lrsa, rrsa *syscall.RawSockaddrAny\n \tvar llen, rlen int32"}, {"sha": "068f0881dd36dd3f7740d7f24960167a0f16df39", "filename": "libgo/go/net/file_plan9.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffile_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffile_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffile_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -43,7 +43,7 @@ func newFileFD(f *os.File) (net *netFD, err error) {\n \t}\n \tcomp := splitAtBytes(path, \"/\")\n \tn := len(comp)\n-\tif n < 3 || comp[0] != \"net\" {\n+\tif n < 3 || comp[0][0:3] != \"net\" {\n \t\treturn nil, syscall.EPLAN9\n \t}\n \n@@ -58,7 +58,7 @@ func newFileFD(f *os.File) (net *netFD, err error) {\n \t\t}\n \t\tdefer close(fd)\n \n-\t\tdir := \"/net/\" + comp[n-2]\n+\t\tdir := netdir + \"/\" + comp[n-2]\n \t\tctl = os.NewFile(uintptr(fd), dir+\"/\"+file)\n \t\tctl.Seek(0, 0)\n \t\tvar buf [16]byte\n@@ -71,19 +71,19 @@ func newFileFD(f *os.File) (net *netFD, err error) {\n \t\tif len(comp) < 4 {\n \t\t\treturn nil, errors.New(\"could not find control file for connection\")\n \t\t}\n-\t\tdir := \"/net/\" + comp[1] + \"/\" + name\n+\t\tdir := netdir + \"/\" + comp[1] + \"/\" + name\n \t\tctl, err = os.OpenFile(dir+\"/ctl\", os.O_RDWR, 0)\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n \t\tdefer close(int(ctl.Fd()))\n \t}\n-\tdir := \"/net/\" + comp[1] + \"/\" + name\n+\tdir := netdir + \"/\" + comp[1] + \"/\" + name\n \tladdr, err := readPlan9Addr(comp[1], dir+\"/local\")\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\treturn newFD(comp[1], name, ctl, nil, laddr, nil), nil\n+\treturn newFD(comp[1], name, ctl, nil, laddr, nil)\n }\n \n func newFileConn(f *os.File) (c Conn, err error) {"}, {"sha": "e4615b74fc376de976fe9d9e0e95e8348ac5cfb1", "filename": "libgo/go/net/file_test.go", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffile_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffile_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffile_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -174,6 +174,8 @@ var filePacketConnTests = []struct {\n \n \t{net: \"udp6\", addr: \"[::1]\", ipv6: true},\n \n+\t{net: \"ip4:icmp\", addr: \"127.0.0.1\"},\n+\n \t{net: \"unixgram\", addr: \"@gotest3/net\", linux: true},\n }\n \n@@ -187,6 +189,10 @@ func TestFilePacketConn(t *testing.T) {\n \t\tif skipServerTest(tt.net, \"unixgram\", tt.addr, tt.ipv6, false, tt.linux) {\n \t\t\tcontinue\n \t\t}\n+\t\tif os.Getuid() != 0 && tt.net == \"ip4:icmp\" {\n+\t\t\tt.Log(\"skipping test; must be root\")\n+\t\t\tcontinue\n+\t\t}\n \t\ttestFilePacketConnListen(t, tt.net, tt.addr)\n \t\tswitch tt.addr {\n \t\tcase \"\", \"0.0.0.0\", \"[::ffff:0.0.0.0]\", \"[::]\":"}, {"sha": "38ae47f7847d1d3088b8e0d56495f8b0732f079e", "filename": "libgo/go/net/file_unix.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffile_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ffile_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffile_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -129,6 +129,8 @@ func FilePacketConn(f *os.File) (c PacketConn, err error) {\n \tswitch fd.laddr.(type) {\n \tcase *UDPAddr:\n \t\treturn newUDPConn(fd), nil\n+\tcase *IPAddr:\n+\t\treturn newIPConn(fd), nil\n \tcase *UnixAddr:\n \t\treturn newUnixConn(fd), nil\n \t}"}, {"sha": "749f29d326930929939dc2afe4fd33fa5560b696", "filename": "libgo/go/net/http/chunked.go", "status": "modified", "additions": 39, "deletions": 19, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fchunked.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fchunked.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fchunked.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -4,13 +4,14 @@\n \n // The wire protocol for HTTP's \"chunked\" Transfer-Encoding.\n \n-// This code is duplicated in httputil/chunked.go.\n+// This code is duplicated in net/http and net/http/httputil.\n // Please make any changes in both files.\n \n package http\n \n import (\n \t\"bufio\"\n+\t\"bytes\"\n \t\"errors\"\n \t\"fmt\"\n \t\"io\"\n@@ -57,26 +58,45 @@ func (cr *chunkedReader) beginChunk() {\n \t}\n }\n \n-func (cr *chunkedReader) Read(b []uint8) (n int, err error) {\n-\tif cr.err != nil {\n-\t\treturn 0, cr.err\n+func (cr *chunkedReader) chunkHeaderAvailable() bool {\n+\tn := cr.r.Buffered()\n+\tif n > 0 {\n+\t\tpeek, _ := cr.r.Peek(n)\n+\t\treturn bytes.IndexByte(peek, '\\n') >= 0\n \t}\n-\tif cr.n == 0 {\n-\t\tcr.beginChunk()\n-\t\tif cr.err != nil {\n-\t\t\treturn 0, cr.err\n+\treturn false\n+}\n+\n+func (cr *chunkedReader) Read(b []uint8) (n int, err error) {\n+\tfor cr.err == nil {\n+\t\tif cr.n == 0 {\n+\t\t\tif n > 0 && !cr.chunkHeaderAvailable() {\n+\t\t\t\t// We've read enough. Don't potentially block\n+\t\t\t\t// reading a new chunk header.\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\tcr.beginChunk()\n+\t\t\tcontinue\n \t\t}\n-\t}\n-\tif uint64(len(b)) > cr.n {\n-\t\tb = b[0:cr.n]\n-\t}\n-\tn, cr.err = cr.r.Read(b)\n-\tcr.n -= uint64(n)\n-\tif cr.n == 0 && cr.err == nil {\n-\t\t// end of chunk (CRLF)\n-\t\tif _, cr.err = io.ReadFull(cr.r, cr.buf[:]); cr.err == nil {\n-\t\t\tif cr.buf[0] != '\\r' || cr.buf[1] != '\\n' {\n-\t\t\t\tcr.err = errors.New(\"malformed chunked encoding\")\n+\t\tif len(b) == 0 {\n+\t\t\tbreak\n+\t\t}\n+\t\trbuf := b\n+\t\tif uint64(len(rbuf)) > cr.n {\n+\t\t\trbuf = rbuf[:cr.n]\n+\t\t}\n+\t\tvar n0 int\n+\t\tn0, cr.err = cr.r.Read(rbuf)\n+\t\tn += n0\n+\t\tb = b[n0:]\n+\t\tcr.n -= uint64(n0)\n+\t\t// If we're at the end of a chunk, read the next two\n+\t\t// bytes to verify they are \"\\r\\n\".\n+\t\tif cr.n == 0 && cr.err == nil {\n+\t\t\tif _, cr.err = io.ReadFull(cr.r, cr.buf[:2]); cr.err == nil {\n+\t\t\t\tif cr.buf[0] != '\\r' || cr.buf[1] != '\\n' {\n+\t\t\t\t\tcr.err = errors.New(\"malformed chunked encoding\")\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t}"}, {"sha": "34544790aff42e5704c6f543028877ca2cf748a7", "filename": "libgo/go/net/http/chunked_test.go", "status": "modified", "additions": 89, "deletions": 23, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fchunked_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fchunked_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fchunked_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,17 +2,18 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// This code is duplicated in httputil/chunked_test.go.\n+// This code is duplicated in net/http and net/http/httputil.\n // Please make any changes in both files.\n \n package http\n \n import (\n+\t\"bufio\"\n \t\"bytes\"\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n-\t\"runtime\"\n+\t\"strings\"\n \t\"testing\"\n )\n \n@@ -41,9 +42,77 @@ func TestChunk(t *testing.T) {\n \t}\n }\n \n+func TestChunkReadMultiple(t *testing.T) {\n+\t// Bunch of small chunks, all read together.\n+\t{\n+\t\tvar b bytes.Buffer\n+\t\tw := newChunkedWriter(&b)\n+\t\tw.Write([]byte(\"foo\"))\n+\t\tw.Write([]byte(\"bar\"))\n+\t\tw.Close()\n+\n+\t\tr := newChunkedReader(&b)\n+\t\tbuf := make([]byte, 10)\n+\t\tn, err := r.Read(buf)\n+\t\tif n != 6 || err != io.EOF {\n+\t\t\tt.Errorf(\"Read = %d, %v; want 6, EOF\", n, err)\n+\t\t}\n+\t\tbuf = buf[:n]\n+\t\tif string(buf) != \"foobar\" {\n+\t\t\tt.Errorf(\"Read = %q; want %q\", buf, \"foobar\")\n+\t\t}\n+\t}\n+\n+\t// One big chunk followed by a little chunk, but the small bufio.Reader size\n+\t// should prevent the second chunk header from being read.\n+\t{\n+\t\tvar b bytes.Buffer\n+\t\tw := newChunkedWriter(&b)\n+\t\t// fillBufChunk is 11 bytes + 3 bytes header + 2 bytes footer = 16 bytes,\n+\t\t// the same as the bufio ReaderSize below (the minimum), so even\n+\t\t// though we're going to try to Read with a buffer larger enough to also\n+\t\t// receive \"foo\", the second chunk header won't be read yet.\n+\t\tconst fillBufChunk = \"0123456789a\"\n+\t\tconst shortChunk = \"foo\"\n+\t\tw.Write([]byte(fillBufChunk))\n+\t\tw.Write([]byte(shortChunk))\n+\t\tw.Close()\n+\n+\t\tr := newChunkedReader(bufio.NewReaderSize(&b, 16))\n+\t\tbuf := make([]byte, len(fillBufChunk)+len(shortChunk))\n+\t\tn, err := r.Read(buf)\n+\t\tif n != len(fillBufChunk) || err != nil {\n+\t\t\tt.Errorf(\"Read = %d, %v; want %d, nil\", n, err, len(fillBufChunk))\n+\t\t}\n+\t\tbuf = buf[:n]\n+\t\tif string(buf) != fillBufChunk {\n+\t\t\tt.Errorf(\"Read = %q; want %q\", buf, fillBufChunk)\n+\t\t}\n+\n+\t\tn, err = r.Read(buf)\n+\t\tif n != len(shortChunk) || err != io.EOF {\n+\t\t\tt.Errorf(\"Read = %d, %v; want %d, EOF\", n, err, len(shortChunk))\n+\t\t}\n+\t}\n+\n+\t// And test that we see an EOF chunk, even though our buffer is already full:\n+\t{\n+\t\tr := newChunkedReader(bufio.NewReader(strings.NewReader(\"3\\r\\nfoo\\r\\n0\\r\\n\")))\n+\t\tbuf := make([]byte, 3)\n+\t\tn, err := r.Read(buf)\n+\t\tif n != 3 || err != io.EOF {\n+\t\t\tt.Errorf(\"Read = %d, %v; want 3, EOF\", n, err)\n+\t\t}\n+\t\tif string(buf) != \"foo\" {\n+\t\t\tt.Errorf(\"buf = %q; want foo\", buf)\n+\t\t}\n+\t}\n+}\n+\n func TestChunkReaderAllocs(t *testing.T) {\n-\t// temporarily set GOMAXPROCS to 1 as we are testing memory allocations\n-\tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(1))\n+\tif testing.Short() {\n+\t\tt.Skip(\"skipping in short mode\")\n+\t}\n \tvar buf bytes.Buffer\n \tw := newChunkedWriter(&buf)\n \ta, b, c := []byte(\"aaaaaa\"), []byte(\"bbbbbbbbbbbb\"), []byte(\"cccccccccccccccccccccccc\")\n@@ -52,26 +121,23 @@ func TestChunkReaderAllocs(t *testing.T) {\n \tw.Write(c)\n \tw.Close()\n \n-\tr := newChunkedReader(&buf)\n \treadBuf := make([]byte, len(a)+len(b)+len(c)+1)\n-\n-\tvar ms runtime.MemStats\n-\truntime.ReadMemStats(&ms)\n-\tm0 := ms.Mallocs\n-\n-\tn, err := io.ReadFull(r, readBuf)\n-\n-\truntime.ReadMemStats(&ms)\n-\tmallocs := ms.Mallocs - m0\n-\tif mallocs > 1 {\n-\t\tt.Errorf(\"%d mallocs; want <= 1\", mallocs)\n-\t}\n-\n-\tif n != len(readBuf)-1 {\n-\t\tt.Errorf(\"read %d bytes; want %d\", n, len(readBuf)-1)\n-\t}\n-\tif err != io.ErrUnexpectedEOF {\n-\t\tt.Errorf(\"read error = %v; want ErrUnexpectedEOF\", err)\n+\tbyter := bytes.NewReader(buf.Bytes())\n+\tbufr := bufio.NewReader(byter)\n+\tmallocs := testing.AllocsPerRun(100, func() {\n+\t\tbyter.Seek(0, 0)\n+\t\tbufr.Reset(byter)\n+\t\tr := newChunkedReader(bufr)\n+\t\tn, err := io.ReadFull(r, readBuf)\n+\t\tif n != len(readBuf)-1 {\n+\t\t\tt.Fatalf(\"read %d bytes; want %d\", n, len(readBuf)-1)\n+\t\t}\n+\t\tif err != io.ErrUnexpectedEOF {\n+\t\t\tt.Fatalf(\"read error = %v; want ErrUnexpectedEOF\", err)\n+\t\t}\n+\t})\n+\tif mallocs > 1.5 {\n+\t\tt.Errorf(\"mallocs = %v; want 1\", mallocs)\n \t}\n }\n "}, {"sha": "389ab58e4182f5d84c5d0fae15d974748e9cf4ee", "filename": "libgo/go/net/http/cookiejar/jar.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fjar.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fjar.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fjar.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -34,9 +34,9 @@ import (\n type PublicSuffixList interface {\n \t// PublicSuffix returns the public suffix of domain.\n \t//\n-\t// Domain is a lowercase punycoded domain name (not an IP address)\n-\t// without leading or trailing dots. The returned value is in the\n-\t// same form.\n+\t// TODO: specify which of the caller and callee is responsible for IP\n+\t// addresses, for leading and trailing dots, for case sensitivity, and\n+\t// for IDN/Punycode.\n \tPublicSuffix(domain string) string\n \n \t// String returns a description of the source of this public suffix"}, {"sha": "8074df5bbde17f3ffad29dd1f1fe51be3c772d18", "filename": "libgo/go/net/http/export_test.go", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fexport_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fexport_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fexport_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -32,7 +32,7 @@ func (t *Transport) IdleConnKeysForTesting() (keys []string) {\n \t\treturn\n \t}\n \tfor key := range t.idleConn {\n-\t\tkeys = append(keys, key)\n+\t\tkeys = append(keys, key.String())\n \t}\n \treturn\n }\n@@ -43,11 +43,12 @@ func (t *Transport) IdleConnCountForTesting(cacheKey string) int {\n \tif t.idleConn == nil {\n \t\treturn 0\n \t}\n-\tconns, ok := t.idleConn[cacheKey]\n-\tif !ok {\n-\t\treturn 0\n+\tfor k, conns := range t.idleConn {\n+\t\tif k.String() == cacheKey {\n+\t\t\treturn len(conns)\n+\t\t}\n \t}\n-\treturn len(conns)\n+\treturn 0\n }\n \n func (t *Transport) IdleConnChMapSizeForTesting() int {\n@@ -63,4 +64,9 @@ func NewTestTimeoutHandler(handler Handler, ch <-chan time.Time) Handler {\n \treturn &timeoutHandler{handler, f, \"\"}\n }\n \n+func ResetCachedEnvironment() {\n+\thttpProxyEnv.reset()\n+\tnoProxyEnv.reset()\n+}\n+\n var DefaultUserAgent = defaultUserAgent"}, {"sha": "9df5cc481897d98ac628b23252bcee0c0a910510", "filename": "libgo/go/net/http/fs.go", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ffs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ffs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ffs.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -13,6 +13,7 @@ import (\n \t\"mime\"\n \t\"mime/multipart\"\n \t\"net/textproto\"\n+\t\"net/url\"\n \t\"os\"\n \t\"path\"\n \t\"path/filepath\"\n@@ -52,12 +53,14 @@ type FileSystem interface {\n \n // A File is returned by a FileSystem's Open method and can be\n // served by the FileServer implementation.\n+//\n+// The methods should behave the same as those on an *os.File.\n type File interface {\n-\tClose() error\n-\tStat() (os.FileInfo, error)\n+\tio.Closer\n+\tio.Reader\n \tReaddir(count int) ([]os.FileInfo, error)\n-\tRead([]byte) (int, error)\n \tSeek(offset int64, whence int) (int64, error)\n+\tStat() (os.FileInfo, error)\n }\n \n func dirList(w ResponseWriter, f File) {\n@@ -73,8 +76,11 @@ func dirList(w ResponseWriter, f File) {\n \t\t\tif d.IsDir() {\n \t\t\t\tname += \"/\"\n \t\t\t}\n-\t\t\t// TODO htmlescape\n-\t\t\tfmt.Fprintf(w, \"<a href=\\\"%s\\\">%s</a>\\n\", name, name)\n+\t\t\t// name may contain '?' or '#', which must be escaped to remain\n+\t\t\t// part of the URL path, and not indicate the start of a query\n+\t\t\t// string or fragment.\n+\t\t\turl := url.URL{Path: name}\n+\t\t\tfmt.Fprintf(w, \"<a href=\\\"%s\\\">%s</a>\\n\", url.String(), htmlReplacer.Replace(name))\n \t\t}\n \t}\n \tfmt.Fprintf(w, \"</pre>\\n\")"}, {"sha": "c9a77c9f6aaf2187e0c2d4f0a9550ecff9cbc3a8", "filename": "libgo/go/net/http/fs_test.go", "status": "modified", "additions": 64, "deletions": 6, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ffs_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ffs_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ffs_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -227,6 +227,54 @@ func TestFileServerCleans(t *testing.T) {\n \t}\n }\n \n+func TestFileServerEscapesNames(t *testing.T) {\n+\tdefer afterTest(t)\n+\tconst dirListPrefix = \"<pre>\\n\"\n+\tconst dirListSuffix = \"\\n</pre>\\n\"\n+\ttests := []struct {\n+\t\tname, escaped string\n+\t}{\n+\t\t{`simple_name`, `<a href=\"simple_name\">simple_name</a>`},\n+\t\t{`\"'<>&`, `<a href=\"%22%27%3C%3E&\">&#34;&#39;&lt;&gt;&amp;</a>`},\n+\t\t{`?foo=bar#baz`, `<a href=\"%3Ffoo=bar%23baz\">?foo=bar#baz</a>`},\n+\t\t{`<combo>?foo`, `<a href=\"%3Ccombo%3E%3Ffoo\">&lt;combo&gt;?foo</a>`},\n+\t}\n+\n+\t// We put each test file in its own directory in the fakeFS so we can look at it in isolation.\n+\tfs := make(fakeFS)\n+\tfor i, test := range tests {\n+\t\ttestFile := &fakeFileInfo{basename: test.name}\n+\t\tfs[fmt.Sprintf(\"/%d\", i)] = &fakeFileInfo{\n+\t\t\tdir:     true,\n+\t\t\tmodtime: time.Unix(1000000000, 0).UTC(),\n+\t\t\tents:    []*fakeFileInfo{testFile},\n+\t\t}\n+\t\tfs[fmt.Sprintf(\"/%d/%s\", i, test.name)] = testFile\n+\t}\n+\n+\tts := httptest.NewServer(FileServer(&fs))\n+\tdefer ts.Close()\n+\tfor i, test := range tests {\n+\t\turl := fmt.Sprintf(\"%s/%d\", ts.URL, i)\n+\t\tres, err := Get(url)\n+\t\tif err != nil {\n+\t\t\tt.Fatalf(\"test %q: Get: %v\", test.name, err)\n+\t\t}\n+\t\tb, err := ioutil.ReadAll(res.Body)\n+\t\tif err != nil {\n+\t\t\tt.Fatalf(\"test %q: read Body: %v\", test.name, err)\n+\t\t}\n+\t\ts := string(b)\n+\t\tif !strings.HasPrefix(s, dirListPrefix) || !strings.HasSuffix(s, dirListSuffix) {\n+\t\t\tt.Errorf(\"test %q: listing dir, full output is %q, want prefix %q and suffix %q\", test.name, s, dirListPrefix, dirListSuffix)\n+\t\t}\n+\t\tif trimmed := strings.TrimSuffix(strings.TrimPrefix(s, dirListPrefix), dirListSuffix); trimmed != test.escaped {\n+\t\t\tt.Errorf(\"test %q: listing dir, filename escaped to %q, want %q\", test.name, trimmed, test.escaped)\n+\t\t}\n+\t\tres.Body.Close()\n+\t}\n+}\n+\n func mustRemoveAll(dir string) {\n \terr := os.RemoveAll(dir)\n \tif err != nil {\n@@ -457,8 +505,9 @@ func (f *fakeFileInfo) Mode() os.FileMode {\n \n type fakeFile struct {\n \tio.ReadSeeker\n-\tfi   *fakeFileInfo\n-\tpath string // as opened\n+\tfi     *fakeFileInfo\n+\tpath   string // as opened\n+\tentpos int\n }\n \n func (f *fakeFile) Close() error               { return nil }\n@@ -468,10 +517,20 @@ func (f *fakeFile) Readdir(count int) ([]os.FileInfo, error) {\n \t\treturn nil, os.ErrInvalid\n \t}\n \tvar fis []os.FileInfo\n-\tfor _, fi := range f.fi.ents {\n-\t\tfis = append(fis, fi)\n+\n+\tlimit := f.entpos + count\n+\tif count <= 0 || limit > len(f.fi.ents) {\n+\t\tlimit = len(f.fi.ents)\n+\t}\n+\tfor ; f.entpos < limit; f.entpos++ {\n+\t\tfis = append(fis, f.fi.ents[f.entpos])\n+\t}\n+\n+\tif len(fis) == 0 && count > 0 {\n+\t\treturn fis, io.EOF\n+\t} else {\n+\t\treturn fis, nil\n \t}\n-\treturn fis, nil\n }\n \n type fakeFS map[string]*fakeFileInfo\n@@ -480,7 +539,6 @@ func (fs fakeFS) Open(name string) (File, error) {\n \tname = path.Clean(name)\n \tf, ok := fs[name]\n \tif !ok {\n-\t\tprintln(\"fake filesystem didn't find file\", name)\n \t\treturn nil, os.ErrNotExist\n \t}\n \treturn &fakeFile{ReadSeeker: strings.NewReader(f.contents), fi: f, path: name}, nil"}, {"sha": "9632bfd19d5286d181fba0187495c37af68f0469", "filename": "libgo/go/net/http/httputil/chunked.go", "status": "modified", "additions": 46, "deletions": 28, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fchunked.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fchunked.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fchunked.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -4,15 +4,14 @@\n \n // The wire protocol for HTTP's \"chunked\" Transfer-Encoding.\n \n-// This code is a duplicate of ../chunked.go with these edits:\n-//\ts/newChunked/NewChunked/g\n-//\ts/package http/package httputil/\n+// This code is duplicated in net/http and net/http/httputil.\n // Please make any changes in both files.\n \n package httputil\n \n import (\n \t\"bufio\"\n+\t\"bytes\"\n \t\"errors\"\n \t\"fmt\"\n \t\"io\"\n@@ -22,13 +21,13 @@ const maxLineLength = 4096 // assumed <= bufio.defaultBufSize\n \n var ErrLineTooLong = errors.New(\"header line too long\")\n \n-// NewChunkedReader returns a new chunkedReader that translates the data read from r\n+// newChunkedReader returns a new chunkedReader that translates the data read from r\n // out of HTTP \"chunked\" format before returning it.\n // The chunkedReader returns io.EOF when the final 0-length chunk is read.\n //\n-// NewChunkedReader is not needed by normal applications. The http package\n+// newChunkedReader is not needed by normal applications. The http package\n // automatically decodes chunking when reading response bodies.\n-func NewChunkedReader(r io.Reader) io.Reader {\n+func newChunkedReader(r io.Reader) io.Reader {\n \tbr, ok := r.(*bufio.Reader)\n \tif !ok {\n \t\tbr = bufio.NewReader(r)\n@@ -59,26 +58,45 @@ func (cr *chunkedReader) beginChunk() {\n \t}\n }\n \n-func (cr *chunkedReader) Read(b []uint8) (n int, err error) {\n-\tif cr.err != nil {\n-\t\treturn 0, cr.err\n+func (cr *chunkedReader) chunkHeaderAvailable() bool {\n+\tn := cr.r.Buffered()\n+\tif n > 0 {\n+\t\tpeek, _ := cr.r.Peek(n)\n+\t\treturn bytes.IndexByte(peek, '\\n') >= 0\n \t}\n-\tif cr.n == 0 {\n-\t\tcr.beginChunk()\n-\t\tif cr.err != nil {\n-\t\t\treturn 0, cr.err\n+\treturn false\n+}\n+\n+func (cr *chunkedReader) Read(b []uint8) (n int, err error) {\n+\tfor cr.err == nil {\n+\t\tif cr.n == 0 {\n+\t\t\tif n > 0 && !cr.chunkHeaderAvailable() {\n+\t\t\t\t// We've read enough. Don't potentially block\n+\t\t\t\t// reading a new chunk header.\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\tcr.beginChunk()\n+\t\t\tcontinue\n \t\t}\n-\t}\n-\tif uint64(len(b)) > cr.n {\n-\t\tb = b[0:cr.n]\n-\t}\n-\tn, cr.err = cr.r.Read(b)\n-\tcr.n -= uint64(n)\n-\tif cr.n == 0 && cr.err == nil {\n-\t\t// end of chunk (CRLF)\n-\t\tif _, cr.err = io.ReadFull(cr.r, cr.buf[:]); cr.err == nil {\n-\t\t\tif cr.buf[0] != '\\r' || cr.buf[1] != '\\n' {\n-\t\t\t\tcr.err = errors.New(\"malformed chunked encoding\")\n+\t\tif len(b) == 0 {\n+\t\t\tbreak\n+\t\t}\n+\t\trbuf := b\n+\t\tif uint64(len(rbuf)) > cr.n {\n+\t\t\trbuf = rbuf[:cr.n]\n+\t\t}\n+\t\tvar n0 int\n+\t\tn0, cr.err = cr.r.Read(rbuf)\n+\t\tn += n0\n+\t\tb = b[n0:]\n+\t\tcr.n -= uint64(n0)\n+\t\t// If we're at the end of a chunk, read the next two\n+\t\t// bytes to verify they are \"\\r\\n\".\n+\t\tif cr.n == 0 && cr.err == nil {\n+\t\t\tif _, cr.err = io.ReadFull(cr.r, cr.buf[:2]); cr.err == nil {\n+\t\t\t\tif cr.buf[0] != '\\r' || cr.buf[1] != '\\n' {\n+\t\t\t\t\tcr.err = errors.New(\"malformed chunked encoding\")\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n@@ -117,16 +135,16 @@ func isASCIISpace(b byte) bool {\n \treturn b == ' ' || b == '\\t' || b == '\\n' || b == '\\r'\n }\n \n-// NewChunkedWriter returns a new chunkedWriter that translates writes into HTTP\n+// newChunkedWriter returns a new chunkedWriter that translates writes into HTTP\n // \"chunked\" format before writing them to w. Closing the returned chunkedWriter\n // sends the final 0-length chunk that marks the end of the stream.\n //\n-// NewChunkedWriter is not needed by normal applications. The http\n+// newChunkedWriter is not needed by normal applications. The http\n // package adds chunking automatically if handlers don't set a\n-// Content-Length header. Using NewChunkedWriter inside a handler\n+// Content-Length header. Using newChunkedWriter inside a handler\n // would result in double chunking or chunking with a Content-Length\n // length, both of which are wrong.\n-func NewChunkedWriter(w io.Writer) io.WriteCloser {\n+func newChunkedWriter(w io.Writer) io.WriteCloser {\n \treturn &chunkedWriter{w}\n }\n "}, {"sha": "a7a57746885e3dd45e8badd2d2f623922ea020f9", "filename": "libgo/go/net/http/httputil/chunked_test.go", "status": "modified", "additions": 92, "deletions": 28, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fchunked_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fchunked_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fchunked_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,26 +2,25 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// This code is a duplicate of ../chunked_test.go with these edits:\n-//\ts/newChunked/NewChunked/g\n-//\ts/package http/package httputil/\n+// This code is duplicated in net/http and net/http/httputil.\n // Please make any changes in both files.\n \n package httputil\n \n import (\n+\t\"bufio\"\n \t\"bytes\"\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n-\t\"runtime\"\n+\t\"strings\"\n \t\"testing\"\n )\n \n func TestChunk(t *testing.T) {\n \tvar b bytes.Buffer\n \n-\tw := NewChunkedWriter(&b)\n+\tw := newChunkedWriter(&b)\n \tconst chunk1 = \"hello, \"\n \tconst chunk2 = \"world! 0123456789abcdef\"\n \tw.Write([]byte(chunk1))\n@@ -32,7 +31,7 @@ func TestChunk(t *testing.T) {\n \t\tt.Fatalf(\"chunk writer wrote %q; want %q\", g, e)\n \t}\n \n-\tr := NewChunkedReader(&b)\n+\tr := newChunkedReader(&b)\n \tdata, err := ioutil.ReadAll(r)\n \tif err != nil {\n \t\tt.Logf(`data: \"%s\"`, data)\n@@ -43,37 +42,102 @@ func TestChunk(t *testing.T) {\n \t}\n }\n \n+func TestChunkReadMultiple(t *testing.T) {\n+\t// Bunch of small chunks, all read together.\n+\t{\n+\t\tvar b bytes.Buffer\n+\t\tw := newChunkedWriter(&b)\n+\t\tw.Write([]byte(\"foo\"))\n+\t\tw.Write([]byte(\"bar\"))\n+\t\tw.Close()\n+\n+\t\tr := newChunkedReader(&b)\n+\t\tbuf := make([]byte, 10)\n+\t\tn, err := r.Read(buf)\n+\t\tif n != 6 || err != io.EOF {\n+\t\t\tt.Errorf(\"Read = %d, %v; want 6, EOF\", n, err)\n+\t\t}\n+\t\tbuf = buf[:n]\n+\t\tif string(buf) != \"foobar\" {\n+\t\t\tt.Errorf(\"Read = %q; want %q\", buf, \"foobar\")\n+\t\t}\n+\t}\n+\n+\t// One big chunk followed by a little chunk, but the small bufio.Reader size\n+\t// should prevent the second chunk header from being read.\n+\t{\n+\t\tvar b bytes.Buffer\n+\t\tw := newChunkedWriter(&b)\n+\t\t// fillBufChunk is 11 bytes + 3 bytes header + 2 bytes footer = 16 bytes,\n+\t\t// the same as the bufio ReaderSize below (the minimum), so even\n+\t\t// though we're going to try to Read with a buffer larger enough to also\n+\t\t// receive \"foo\", the second chunk header won't be read yet.\n+\t\tconst fillBufChunk = \"0123456789a\"\n+\t\tconst shortChunk = \"foo\"\n+\t\tw.Write([]byte(fillBufChunk))\n+\t\tw.Write([]byte(shortChunk))\n+\t\tw.Close()\n+\n+\t\tr := newChunkedReader(bufio.NewReaderSize(&b, 16))\n+\t\tbuf := make([]byte, len(fillBufChunk)+len(shortChunk))\n+\t\tn, err := r.Read(buf)\n+\t\tif n != len(fillBufChunk) || err != nil {\n+\t\t\tt.Errorf(\"Read = %d, %v; want %d, nil\", n, err, len(fillBufChunk))\n+\t\t}\n+\t\tbuf = buf[:n]\n+\t\tif string(buf) != fillBufChunk {\n+\t\t\tt.Errorf(\"Read = %q; want %q\", buf, fillBufChunk)\n+\t\t}\n+\n+\t\tn, err = r.Read(buf)\n+\t\tif n != len(shortChunk) || err != io.EOF {\n+\t\t\tt.Errorf(\"Read = %d, %v; want %d, EOF\", n, err, len(shortChunk))\n+\t\t}\n+\t}\n+\n+\t// And test that we see an EOF chunk, even though our buffer is already full:\n+\t{\n+\t\tr := newChunkedReader(bufio.NewReader(strings.NewReader(\"3\\r\\nfoo\\r\\n0\\r\\n\")))\n+\t\tbuf := make([]byte, 3)\n+\t\tn, err := r.Read(buf)\n+\t\tif n != 3 || err != io.EOF {\n+\t\t\tt.Errorf(\"Read = %d, %v; want 3, EOF\", n, err)\n+\t\t}\n+\t\tif string(buf) != \"foo\" {\n+\t\t\tt.Errorf(\"buf = %q; want foo\", buf)\n+\t\t}\n+\t}\n+}\n+\n func TestChunkReaderAllocs(t *testing.T) {\n-\t// temporarily set GOMAXPROCS to 1 as we are testing memory allocations\n-\tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(1))\n+\tif testing.Short() {\n+\t\tt.Skip(\"skipping in short mode\")\n+\t}\n \tvar buf bytes.Buffer\n-\tw := NewChunkedWriter(&buf)\n+\tw := newChunkedWriter(&buf)\n \ta, b, c := []byte(\"aaaaaa\"), []byte(\"bbbbbbbbbbbb\"), []byte(\"cccccccccccccccccccccccc\")\n \tw.Write(a)\n \tw.Write(b)\n \tw.Write(c)\n \tw.Close()\n \n-\tr := NewChunkedReader(&buf)\n \treadBuf := make([]byte, len(a)+len(b)+len(c)+1)\n-\n-\tvar ms runtime.MemStats\n-\truntime.ReadMemStats(&ms)\n-\tm0 := ms.Mallocs\n-\n-\tn, err := io.ReadFull(r, readBuf)\n-\n-\truntime.ReadMemStats(&ms)\n-\tmallocs := ms.Mallocs - m0\n-\tif mallocs > 1 {\n-\t\tt.Errorf(\"%d mallocs; want <= 1\", mallocs)\n-\t}\n-\n-\tif n != len(readBuf)-1 {\n-\t\tt.Errorf(\"read %d bytes; want %d\", n, len(readBuf)-1)\n-\t}\n-\tif err != io.ErrUnexpectedEOF {\n-\t\tt.Errorf(\"read error = %v; want ErrUnexpectedEOF\", err)\n+\tbyter := bytes.NewReader(buf.Bytes())\n+\tbufr := bufio.NewReader(byter)\n+\tmallocs := testing.AllocsPerRun(100, func() {\n+\t\tbyter.Seek(0, 0)\n+\t\tbufr.Reset(byter)\n+\t\tr := newChunkedReader(bufr)\n+\t\tn, err := io.ReadFull(r, readBuf)\n+\t\tif n != len(readBuf)-1 {\n+\t\t\tt.Fatalf(\"read %d bytes; want %d\", n, len(readBuf)-1)\n+\t\t}\n+\t\tif err != io.ErrUnexpectedEOF {\n+\t\t\tt.Fatalf(\"read error = %v; want ErrUnexpectedEOF\", err)\n+\t\t}\n+\t})\n+\tif mallocs > 1.5 {\n+\t\tt.Errorf(\"mallocs = %v; want 1\", mallocs)\n \t}\n }\n "}, {"sha": "ab1eab21bc63f44bcf50a30c74240aa35a4d9c58", "filename": "libgo/go/net/http/httputil/dump.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fdump.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fdump.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fdump.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -29,7 +29,7 @@ func drainBody(b io.ReadCloser) (r1, r2 io.ReadCloser, err error) {\n \tif err = b.Close(); err != nil {\n \t\treturn nil, nil, err\n \t}\n-\treturn ioutil.NopCloser(&buf), ioutil.NopCloser(bytes.NewBuffer(buf.Bytes())), nil\n+\treturn ioutil.NopCloser(&buf), ioutil.NopCloser(bytes.NewReader(buf.Bytes())), nil\n }\n \n // dumpConn is a net.Conn which writes to Writer and reads from Reader"}, {"sha": "a1dbfc39d6be446e802a00cf90ee28c535fd71ba", "filename": "libgo/go/net/http/httputil/dump_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fdump_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fdump_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fdump_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -119,7 +119,7 @@ func TestDumpRequest(t *testing.T) {\n \t\t\t}\n \t\t\tswitch b := tt.Body.(type) {\n \t\t\tcase []byte:\n-\t\t\t\ttt.Req.Body = ioutil.NopCloser(bytes.NewBuffer(b))\n+\t\t\t\ttt.Req.Body = ioutil.NopCloser(bytes.NewReader(b))\n \t\t\tcase func() io.ReadCloser:\n \t\t\t\ttt.Req.Body = b()\n \t\t\t}"}, {"sha": "74fb6c6556f8b414139a7beab7a9f6d6b00a7649", "filename": "libgo/go/net/http/httputil/httputil.go", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fhttputil.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fhttputil.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fhttputil.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Package httputil provides HTTP utility functions, complementing the\n+// more common ones in the net/http package.\n+package httputil\n+\n+import \"io\"\n+\n+// NewChunkedReader returns a new chunkedReader that translates the data read from r\n+// out of HTTP \"chunked\" format before returning it.\n+// The chunkedReader returns io.EOF when the final 0-length chunk is read.\n+//\n+// NewChunkedReader is not needed by normal applications. The http package\n+// automatically decodes chunking when reading response bodies.\n+func NewChunkedReader(r io.Reader) io.Reader {\n+\treturn newChunkedReader(r)\n+}\n+\n+// NewChunkedWriter returns a new chunkedWriter that translates writes into HTTP\n+// \"chunked\" format before writing them to w. Closing the returned chunkedWriter\n+// sends the final 0-length chunk that marks the end of the stream.\n+//\n+// NewChunkedWriter is not needed by normal applications. The http\n+// package adds chunking automatically if handlers don't set a\n+// Content-Length header. Using NewChunkedWriter inside a handler\n+// would result in double chunking or chunking with a Content-Length\n+// length, both of which are wrong.\n+func NewChunkedWriter(w io.Writer) io.WriteCloser {\n+\treturn newChunkedWriter(w)\n+}"}, {"sha": "86d23e03706e5ce7ba4b1ab4233835b75ebaa1f7", "filename": "libgo/go/net/http/httputil/persist.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fpersist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fpersist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fpersist.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Package httputil provides HTTP utility functions, complementing the\n-// more common ones in the net/http package.\n package httputil\n \n import ("}, {"sha": "48ada5f5fdbf1774a5895db8f2ecdecf33f974e9", "filename": "libgo/go/net/http/httputil/reverseproxy.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Freverseproxy.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Freverseproxy.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Freverseproxy.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -144,6 +144,10 @@ func (p *ReverseProxy) ServeHTTP(rw http.ResponseWriter, req *http.Request) {\n \t}\n \tdefer res.Body.Close()\n \n+\tfor _, h := range hopHeaders {\n+\t\tres.Header.Del(h)\n+\t}\n+\n \tcopyHeader(rw.Header(), res.Header)\n \n \trw.WriteHeader(res.StatusCode)"}, {"sha": "e9539b44b6ee93c6437d33659bc389d3fddf6c38", "filename": "libgo/go/net/http/httputil/reverseproxy_test.go", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Freverseproxy_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Freverseproxy_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Freverseproxy_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -16,6 +16,12 @@ import (\n \t\"time\"\n )\n \n+const fakeHopHeader = \"X-Fake-Hop-Header-For-Test\"\n+\n+func init() {\n+\thopHeaders = append(hopHeaders, fakeHopHeader)\n+}\n+\n func TestReverseProxy(t *testing.T) {\n \tconst backendResponse = \"I am the backend\"\n \tconst backendStatus = 404\n@@ -36,6 +42,10 @@ func TestReverseProxy(t *testing.T) {\n \t\t\tt.Errorf(\"backend got Host header %q, want %q\", g, e)\n \t\t}\n \t\tw.Header().Set(\"X-Foo\", \"bar\")\n+\t\tw.Header().Set(\"Upgrade\", \"foo\")\n+\t\tw.Header().Set(fakeHopHeader, \"foo\")\n+\t\tw.Header().Add(\"X-Multi-Value\", \"foo\")\n+\t\tw.Header().Add(\"X-Multi-Value\", \"bar\")\n \t\thttp.SetCookie(w, &http.Cookie{Name: \"flavor\", Value: \"chocolateChip\"})\n \t\tw.WriteHeader(backendStatus)\n \t\tw.Write([]byte(backendResponse))\n@@ -64,6 +74,12 @@ func TestReverseProxy(t *testing.T) {\n \tif g, e := res.Header.Get(\"X-Foo\"), \"bar\"; g != e {\n \t\tt.Errorf(\"got X-Foo %q; expected %q\", g, e)\n \t}\n+\tif c := res.Header.Get(fakeHopHeader); c != \"\" {\n+\t\tt.Errorf(\"got %s header value %q\", fakeHopHeader, c)\n+\t}\n+\tif g, e := len(res.Header[\"X-Multi-Value\"]), 2; g != e {\n+\t\tt.Errorf(\"got %d X-Multi-Value header values; expected %d\", g, e)\n+\t}\n \tif g, e := len(res.Header[\"Set-Cookie\"]), 1; g != e {\n \t\tt.Fatalf(\"got %d SetCookies, want %d\", g, e)\n \t}"}, {"sha": "d0726f61f3bf3e64fa21839661a1a23354da724e", "filename": "libgo/go/net/http/proxy_test.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fproxy_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fproxy_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fproxy_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -71,8 +71,8 @@ func TestCacheKeys(t *testing.T) {\n \t\t\tproxy = u\n \t\t}\n \t\tcm := connectMethod{proxy, tt.scheme, tt.addr}\n-\t\tif cm.String() != tt.key {\n-\t\t\tt.Fatalf(\"{%q, %q, %q} cache key %q; want %q\", tt.proxy, tt.scheme, tt.addr, cm.String(), tt.key)\n+\t\tif got := cm.key().String(); got != tt.key {\n+\t\t\tt.Fatalf(\"{%q, %q, %q} cache key = %q; want %q\", tt.proxy, tt.scheme, tt.addr, got, tt.key)\n \t\t}\n \t}\n }"}, {"sha": "68d141398aab3e2420c22112489cec0af6a57999", "filename": "libgo/go/net/http/request_test.go", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Frequest_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Frequest_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Frequest_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -80,7 +80,7 @@ func TestParseFormUnknownContentType(t *testing.T) {\n \t\treq := &Request{\n \t\t\tMethod: \"POST\",\n \t\t\tHeader: Header(test.contentType),\n-\t\t\tBody:   ioutil.NopCloser(bytes.NewBufferString(\"body\")),\n+\t\t\tBody:   ioutil.NopCloser(strings.NewReader(\"body\")),\n \t\t}\n \t\terr := req.ParseForm()\n \t\tswitch {\n@@ -218,6 +218,7 @@ func TestMultipartReaderOrder(t *testing.T) {\n \tif err := req.ParseMultipartForm(25); err != nil {\n \t\tt.Fatalf(\"ParseMultipartForm: %v\", err)\n \t}\n+\tdefer req.MultipartForm.RemoveAll()\n \tif _, err := req.MultipartReader(); err == nil {\n \t\tt.Fatal(\"expected an error from MultipartReader after call to ParseMultipartForm\")\n \t}\n@@ -368,7 +369,7 @@ func testMissingFile(t *testing.T, req *Request) {\n }\n \n func newTestMultipartRequest(t *testing.T) *Request {\n-\tb := bytes.NewBufferString(strings.Replace(message, \"\\n\", \"\\r\\n\", -1))\n+\tb := strings.NewReader(strings.Replace(message, \"\\n\", \"\\r\\n\", -1))\n \treq, err := NewRequest(\"POST\", \"/\", b)\n \tif err != nil {\n \t\tt.Fatal(\"NewRequest:\", err)"}, {"sha": "561eea28e5ab6059eabf34f088c84f9276688ce1", "filename": "libgo/go/net/http/requestwrite_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Frequestwrite_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Frequestwrite_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Frequestwrite_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -427,7 +427,7 @@ func TestRequestWrite(t *testing.T) {\n \t\t\t}\n \t\t\tswitch b := tt.Body.(type) {\n \t\t\tcase []byte:\n-\t\t\t\ttt.Req.Body = ioutil.NopCloser(bytes.NewBuffer(b))\n+\t\t\t\ttt.Req.Body = ioutil.NopCloser(bytes.NewReader(b))\n \t\t\tcase func() io.ReadCloser:\n \t\t\t\ttt.Req.Body = b()\n \t\t\t}"}, {"sha": "0b991c72ef0e462c781778051d7784cea40519fe", "filename": "libgo/go/net/http/response.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -141,6 +141,9 @@ func ReadResponse(r *bufio.Reader, req *Request) (*Response, error) {\n \t// Parse the response headers.\n \tmimeHeader, err := tp.ReadMIMEHeader()\n \tif err != nil {\n+\t\tif err == io.EOF {\n+\t\t\terr = io.ErrUnexpectedEOF\n+\t\t}\n \t\treturn nil, err\n \t}\n \tresp.Header = Header(mimeHeader)"}, {"sha": "d6e77b19c107d195a7dc0492550bd388bf804a46", "filename": "libgo/go/net/http/response_test.go", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -618,6 +618,15 @@ func TestResponseContentLengthShortBody(t *testing.T) {\n \t}\n }\n \n+func TestReadResponseUnexpectedEOF(t *testing.T) {\n+\tbr := bufio.NewReader(strings.NewReader(\"HTTP/1.1 301 Moved Permanently\\r\\n\" +\n+\t\t\"Location: http://example.com\"))\n+\t_, err := ReadResponse(br, nil)\n+\tif err != io.ErrUnexpectedEOF {\n+\t\tt.Errorf(\"ReadResponse = %v; want io.ErrUnexpectedEOF\", err)\n+\t}\n+}\n+\n func TestNeedsSniff(t *testing.T) {\n \t// needsSniff returns true with an empty response.\n \tr := &response{}"}, {"sha": "4799b4792b34cf410b8726f7cc9b7b04519a2e9b", "filename": "libgo/go/net/http/responsewrite_test.go", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fresponsewrite_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fresponsewrite_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fresponsewrite_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -7,6 +7,7 @@ package http\n import (\n \t\"bytes\"\n \t\"io/ioutil\"\n+\t\"strings\"\n \t\"testing\"\n )\n \n@@ -41,7 +42,7 @@ func TestResponseWrite(t *testing.T) {\n \t\t\t\tProtoMinor:    0,\n \t\t\t\tRequest:       dummyReq(\"GET\"),\n \t\t\t\tHeader:        Header{},\n-\t\t\t\tBody:          ioutil.NopCloser(bytes.NewBufferString(\"abcdef\")),\n+\t\t\t\tBody:          ioutil.NopCloser(strings.NewReader(\"abcdef\")),\n \t\t\t\tContentLength: -1,\n \t\t\t},\n \t\t\t\"HTTP/1.0 200 OK\\r\\n\" +\n@@ -56,7 +57,7 @@ func TestResponseWrite(t *testing.T) {\n \t\t\t\tProtoMinor:       1,\n \t\t\t\tRequest:          dummyReq(\"GET\"),\n \t\t\t\tHeader:           Header{},\n-\t\t\t\tBody:             ioutil.NopCloser(bytes.NewBufferString(\"abcdef\")),\n+\t\t\t\tBody:             ioutil.NopCloser(strings.NewReader(\"abcdef\")),\n \t\t\t\tContentLength:    6,\n \t\t\t\tTransferEncoding: []string{\"chunked\"},\n \t\t\t\tClose:            true,"}, {"sha": "e7a3e6ea75f90f6e7b4c29cd220b99ca9217fdc1", "filename": "libgo/go/net/http/serve_test.go", "status": "modified", "additions": 97, "deletions": 25, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fserve_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fserve_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fserve_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -419,7 +419,7 @@ func TestServeMuxHandlerRedirects(t *testing.T) {\n func TestMuxRedirectLeadingSlashes(t *testing.T) {\n \tpaths := []string{\"//foo.txt\", \"///foo.txt\", \"/../../foo.txt\"}\n \tfor _, path := range paths {\n-\t\treq, err := ReadRequest(bufio.NewReader(bytes.NewBufferString(\"GET \" + path + \" HTTP/1.1\\r\\nHost: test\\r\\n\\r\\n\")))\n+\t\treq, err := ReadRequest(bufio.NewReader(strings.NewReader(\"GET \" + path + \" HTTP/1.1\\r\\nHost: test\\r\\n\\r\\n\")))\n \t\tif err != nil {\n \t\t\tt.Errorf(\"%s\", err)\n \t\t}\n@@ -441,6 +441,9 @@ func TestMuxRedirectLeadingSlashes(t *testing.T) {\n }\n \n func TestServerTimeouts(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \treqNum := 0\n \tts := httptest.NewUnstartedServer(HandlerFunc(func(res ResponseWriter, req *Request) {\n@@ -517,6 +520,9 @@ func TestServerTimeouts(t *testing.T) {\n // shouldn't cause a handler to block forever on reads (next HTTP\n // request) that will never happen.\n func TestOnlyWriteTimeout(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tvar conn net.Conn\n \tvar afterTimeoutErrc = make(chan error, 1)\n@@ -840,6 +846,9 @@ func TestHeadResponses(t *testing.T) {\n }\n \n func TestTLSHandshakeTimeout(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tts := httptest.NewUnstartedServer(HandlerFunc(func(w ResponseWriter, r *Request) {}))\n \tts.Config.ReadTimeout = 250 * time.Millisecond\n@@ -1414,6 +1423,9 @@ func TestRequestBodyLimit(t *testing.T) {\n // TestClientWriteShutdown tests that if the client shuts down the write\n // side of their TCP connection, the server doesn't send a 400 Bad Request.\n func TestClientWriteShutdown(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tts := httptest.NewServer(HandlerFunc(func(w ResponseWriter, r *Request) {}))\n \tdefer ts.Close()\n@@ -2062,30 +2074,35 @@ func TestServerReaderFromOrder(t *testing.T) {\n \t}\n }\n \n-// Issue 6157\n-func TestNoContentTypeOnNotModified(t *testing.T) {\n-\tht := newHandlerTest(HandlerFunc(func(w ResponseWriter, r *Request) {\n-\t\tif r.URL.Path == \"/header\" {\n-\t\t\tw.Header().Set(\"Content-Length\", \"123\")\n-\t\t}\n-\t\tw.WriteHeader(StatusNotModified)\n-\t\tif r.URL.Path == \"/more\" {\n-\t\t\tw.Write([]byte(\"stuff\"))\n-\t\t}\n-\t}))\n-\tfor _, req := range []string{\n-\t\t\"GET / HTTP/1.0\",\n-\t\t\"GET /header HTTP/1.0\",\n-\t\t\"GET /more HTTP/1.0\",\n-\t\t\"GET / HTTP/1.1\",\n-\t\t\"GET /header HTTP/1.1\",\n-\t\t\"GET /more HTTP/1.1\",\n-\t} {\n-\t\tgot := ht.rawResponse(req)\n-\t\tif !strings.Contains(got, \"304 Not Modified\") {\n-\t\t\tt.Errorf(\"Non-304 Not Modified for %q: %s\", req, got)\n-\t\t} else if strings.Contains(got, \"Content-Length\") {\n-\t\t\tt.Errorf(\"Got a Content-Length from %q: %s\", req, got)\n+// Issue 6157, Issue 6685\n+func TestCodesPreventingContentTypeAndBody(t *testing.T) {\n+\tfor _, code := range []int{StatusNotModified, StatusNoContent, StatusContinue} {\n+\t\tht := newHandlerTest(HandlerFunc(func(w ResponseWriter, r *Request) {\n+\t\t\tif r.URL.Path == \"/header\" {\n+\t\t\t\tw.Header().Set(\"Content-Length\", \"123\")\n+\t\t\t}\n+\t\t\tw.WriteHeader(code)\n+\t\t\tif r.URL.Path == \"/more\" {\n+\t\t\t\tw.Write([]byte(\"stuff\"))\n+\t\t\t}\n+\t\t}))\n+\t\tfor _, req := range []string{\n+\t\t\t\"GET / HTTP/1.0\",\n+\t\t\t\"GET /header HTTP/1.0\",\n+\t\t\t\"GET /more HTTP/1.0\",\n+\t\t\t\"GET / HTTP/1.1\",\n+\t\t\t\"GET /header HTTP/1.1\",\n+\t\t\t\"GET /more HTTP/1.1\",\n+\t\t} {\n+\t\t\tgot := ht.rawResponse(req)\n+\t\t\twantStatus := fmt.Sprintf(\"%d %s\", code, StatusText(code))\n+\t\t\tif !strings.Contains(got, wantStatus) {\n+\t\t\t\tt.Errorf(\"Code %d: Wanted %q Modified for %q: %s\", code, req, got)\n+\t\t\t} else if strings.Contains(got, \"Content-Length\") {\n+\t\t\t\tt.Errorf(\"Code %d: Got a Content-Length from %q: %s\", code, req, got)\n+\t\t\t} else if strings.Contains(got, \"stuff\") {\n+\t\t\t\tt.Errorf(\"Code %d: Response contains a body from %q: %s\", code, req, got)\n+\t\t\t}\n \t\t}\n \t}\n }\n@@ -2148,6 +2165,57 @@ func TestTransportAndServerSharedBodyRace(t *testing.T) {\n \t(<-backendRespc).Body.Close()\n }\n \n+// Test that a hanging Request.Body.Read from another goroutine can't\n+// cause the Handler goroutine's Request.Body.Close to block.\n+func TestRequestBodyCloseDoesntBlock(t *testing.T) {\n+\tt.Skipf(\"Skipping known issue; see golang.org/issue/7121\")\n+\tif testing.Short() {\n+\t\tt.Skip(\"skipping in -short mode\")\n+\t}\n+\tdefer afterTest(t)\n+\n+\treadErrCh := make(chan error, 1)\n+\terrCh := make(chan error, 2)\n+\n+\tserver := httptest.NewServer(HandlerFunc(func(rw ResponseWriter, req *Request) {\n+\t\tgo func(body io.Reader) {\n+\t\t\t_, err := body.Read(make([]byte, 100))\n+\t\t\treadErrCh <- err\n+\t\t}(req.Body)\n+\t\ttime.Sleep(500 * time.Millisecond)\n+\t}))\n+\tdefer server.Close()\n+\n+\tcloseConn := make(chan bool)\n+\tdefer close(closeConn)\n+\tgo func() {\n+\t\tconn, err := net.Dial(\"tcp\", server.Listener.Addr().String())\n+\t\tif err != nil {\n+\t\t\terrCh <- err\n+\t\t\treturn\n+\t\t}\n+\t\tdefer conn.Close()\n+\t\t_, err = conn.Write([]byte(\"POST / HTTP/1.1\\r\\nConnection: close\\r\\nHost: foo\\r\\nContent-Length: 100000\\r\\n\\r\\n\"))\n+\t\tif err != nil {\n+\t\t\terrCh <- err\n+\t\t\treturn\n+\t\t}\n+\t\t// And now just block, making the server block on our\n+\t\t// 100000 bytes of body that will never arrive.\n+\t\t<-closeConn\n+\t}()\n+\tselect {\n+\tcase err := <-readErrCh:\n+\t\tif err == nil {\n+\t\t\tt.Error(\"Read was nil. Expected error.\")\n+\t\t}\n+\tcase err := <-errCh:\n+\t\tt.Error(err)\n+\tcase <-time.After(5 * time.Second):\n+\t\tt.Error(\"timeout\")\n+\t}\n+}\n+\n func TestResponseWriterWriteStringAllocs(t *testing.T) {\n \tt.Skip(\"allocs test unreliable with gccgo\")\n \tht := newHandlerTest(HandlerFunc(func(w ResponseWriter, r *Request) {\n@@ -2191,7 +2259,9 @@ func BenchmarkClientServer(b *testing.B) {\n \t\tif err != nil {\n \t\t\tb.Fatal(\"Get:\", err)\n \t\t}\n+\t\tdefer res.Body.Close()\n \t\tall, err := ioutil.ReadAll(res.Body)\n+\t\tres.Body.Close()\n \t\tif err != nil {\n \t\t\tb.Fatal(\"ReadAll:\", err)\n \t\t}\n@@ -2234,6 +2304,7 @@ func benchmarkClientServerParallel(b *testing.B, conc int) {\n \t\t\t\t\tcontinue\n \t\t\t\t}\n \t\t\t\tall, err := ioutil.ReadAll(res.Body)\n+\t\t\t\tres.Body.Close()\n \t\t\t\tif err != nil {\n \t\t\t\t\tb.Logf(\"ReadAll: %v\", err)\n \t\t\t\t\tcontinue\n@@ -2271,6 +2342,7 @@ func BenchmarkServer(b *testing.B) {\n \t\t\t\tlog.Panicf(\"Get: %v\", err)\n \t\t\t}\n \t\t\tall, err := ioutil.ReadAll(res.Body)\n+\t\t\tres.Body.Close()\n \t\t\tif err != nil {\n \t\t\t\tlog.Panicf(\"ReadAll: %v\", err)\n \t\t\t}"}, {"sha": "fea1898fd7e794c3e98f973808c931a9f2acb22e", "filename": "libgo/go/net/http/server.go", "status": "modified", "additions": 34, "deletions": 17, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fserver.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Fserver.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fserver.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -735,15 +735,15 @@ func (cw *chunkWriter) writeHeader(p []byte) {\n \t// response header and this is our first (and last) write, set\n \t// it, even to zero. This helps HTTP/1.0 clients keep their\n \t// \"keep-alive\" connections alive.\n-\t// Exceptions: 304 responses never get Content-Length, and if\n+\t// Exceptions: 304/204/1xx responses never get Content-Length, and if\n \t// it was a HEAD request, we don't know the difference between\n \t// 0 actual bytes and 0 bytes because the handler noticed it\n \t// was a HEAD request and chose not to write anything.  So for\n \t// HEAD, the handler should either write the Content-Length or\n \t// write non-zero bytes.  If it's actually 0 bytes and the\n \t// handler never looked at the Request.Method, we just don't\n \t// send a Content-Length header.\n-\tif w.handlerDone && w.status != StatusNotModified && header.get(\"Content-Length\") == \"\" && (!isHEAD || len(p) > 0) {\n+\tif w.handlerDone && bodyAllowedForStatus(w.status) && header.get(\"Content-Length\") == \"\" && (!isHEAD || len(p) > 0) {\n \t\tw.contentLength = int64(len(p))\n \t\tsetHeader.contentLength = strconv.AppendInt(cw.res.clenBuf[:0], int64(len(p)), 10)\n \t}\n@@ -792,7 +792,7 @@ func (cw *chunkWriter) writeHeader(p []byte) {\n \t}\n \n \tcode := w.status\n-\tif code == StatusNotModified {\n+\tif !bodyAllowedForStatus(code) {\n \t\t// Must not have body.\n \t\t// RFC 2616 section 10.3.5: \"the response MUST NOT include other entity-headers\"\n \t\tfor _, k := range []string{\"Content-Type\", \"Content-Length\", \"Transfer-Encoding\"} {\n@@ -821,7 +821,7 @@ func (cw *chunkWriter) writeHeader(p []byte) {\n \t\thasCL = false\n \t}\n \n-\tif w.req.Method == \"HEAD\" || code == StatusNotModified {\n+\tif w.req.Method == \"HEAD\" || !bodyAllowedForStatus(code) {\n \t\t// do nothing\n \t} else if code == StatusNoContent {\n \t\tdelHeader(\"Transfer-Encoding\")\n@@ -915,7 +915,7 @@ func (w *response) bodyAllowed() bool {\n \tif !w.wroteHeader {\n \t\tpanic(\"\")\n \t}\n-\treturn w.status != StatusNotModified\n+\treturn bodyAllowedForStatus(w.status)\n }\n \n // The Life Of A Write is like this:\n@@ -997,11 +997,10 @@ func (w *response) finishRequest() {\n \tw.cw.close()\n \tw.conn.buf.Flush()\n \n-\t// Close the body, unless we're about to close the whole TCP connection\n-\t// anyway.\n-\tif !w.closeAfterReply {\n-\t\tw.req.Body.Close()\n-\t}\n+\t// Close the body (regardless of w.closeAfterReply) so we can\n+\t// re-use its bufio.Reader later safely.\n+\tw.req.Body.Close()\n+\n \tif w.req.MultipartForm != nil {\n \t\tw.req.MultipartForm.RemoveAll()\n \t}\n@@ -1084,7 +1083,7 @@ func validNPN(proto string) bool {\n func (c *conn) serve() {\n \tdefer func() {\n \t\tif err := recover(); err != nil {\n-\t\t\tconst size = 4096\n+\t\t\tconst size = 64 << 10\n \t\t\tbuf := make([]byte, size)\n \t\t\tbuf = buf[:runtime.Stack(buf, false)]\n \t\t\tlog.Printf(\"http: panic serving %v: %v\\n%s\", c.remoteAddr, err, buf)\n@@ -1608,11 +1607,11 @@ func (srv *Server) ListenAndServe() error {\n \tif addr == \"\" {\n \t\taddr = \":http\"\n \t}\n-\tl, e := net.Listen(\"tcp\", addr)\n-\tif e != nil {\n-\t\treturn e\n+\tln, err := net.Listen(\"tcp\", addr)\n+\tif err != nil {\n+\t\treturn err\n \t}\n-\treturn srv.Serve(l)\n+\treturn srv.Serve(tcpKeepAliveListener{ln.(*net.TCPListener)})\n }\n \n // Serve accepts incoming connections on the Listener l, creating a\n@@ -1742,12 +1741,12 @@ func (srv *Server) ListenAndServeTLS(certFile, keyFile string) error {\n \t\treturn err\n \t}\n \n-\tconn, err := net.Listen(\"tcp\", addr)\n+\tln, err := net.Listen(\"tcp\", addr)\n \tif err != nil {\n \t\treturn err\n \t}\n \n-\ttlsListener := tls.NewListener(conn, config)\n+\ttlsListener := tls.NewListener(tcpKeepAliveListener{ln.(*net.TCPListener)}, config)\n \treturn srv.Serve(tlsListener)\n }\n \n@@ -1837,6 +1836,24 @@ func (tw *timeoutWriter) WriteHeader(code int) {\n \ttw.w.WriteHeader(code)\n }\n \n+// tcpKeepAliveListener sets TCP keep-alive timeouts on accepted\n+// connections. It's used by ListenAndServe and ListenAndServeTLS so\n+// dead TCP connections (e.g. closing laptop mid-download) eventually\n+// go away.\n+type tcpKeepAliveListener struct {\n+\t*net.TCPListener\n+}\n+\n+func (ln tcpKeepAliveListener) Accept() (c net.Conn, err error) {\n+\ttc, err := ln.AcceptTCP()\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\ttc.SetKeepAlive(true)\n+\ttc.SetKeepAlivePeriod(3 * time.Minute)\n+\treturn tc, nil\n+}\n+\n // globalOptionsHandler responds to \"OPTIONS *\" requests.\n type globalOptionsHandler struct{}\n "}, {"sha": "2eec9d9abc4788357d636a56d6b5deba79ae6f6b", "filename": "libgo/go/net/http/transfer.go", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -60,7 +60,7 @@ func newTransferWriter(r interface{}) (t *transferWriter, err error) {\n \t\t\t\t\t// Stich the Body back together again, re-attaching our\n \t\t\t\t\t// consumed byte.\n \t\t\t\t\tt.ContentLength = -1\n-\t\t\t\t\tt.Body = io.MultiReader(bytes.NewBuffer(buf[:]), t.Body)\n+\t\t\t\t\tt.Body = io.MultiReader(bytes.NewReader(buf[:]), t.Body)\n \t\t\t\t} else {\n \t\t\t\t\t// Body is actually empty.\n \t\t\t\t\tt.Body = nil\n@@ -559,6 +559,17 @@ func (b *body) readLocked(p []byte) (n int, err error) {\n \t\t}\n \t}\n \n+\t// If we can return an EOF here along with the read data, do\n+\t// so. This is optional per the io.Reader contract, but doing\n+\t// so helps the HTTP transport code recycle its connection\n+\t// earlier (since it will see this EOF itself), even if the\n+\t// client doesn't do future reads or Close.\n+\tif err == nil && n > 0 {\n+\t\tif lr, ok := b.src.(*io.LimitedReader); ok && lr.N == 0 {\n+\t\t\terr = io.EOF\n+\t\t}\n+\t}\n+\n \treturn n, err\n }\n "}, {"sha": "48cd540b9f75ae034319ecae6969baff8af98ce9", "filename": "libgo/go/net/http/transfer_test.go", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -6,6 +6,7 @@ package http\n \n import (\n \t\"bufio\"\n+\t\"io\"\n \t\"strings\"\n \t\"testing\"\n )\n@@ -35,3 +36,29 @@ func TestBodyReadBadTrailer(t *testing.T) {\n \t\tt.Errorf(\"final Read was successful (%q), expected error from trailer read\", got)\n \t}\n }\n+\n+func TestFinalChunkedBodyReadEOF(t *testing.T) {\n+\tres, err := ReadResponse(bufio.NewReader(strings.NewReader(\n+\t\t\"HTTP/1.1 200 OK\\r\\n\"+\n+\t\t\t\"Transfer-Encoding: chunked\\r\\n\"+\n+\t\t\t\"\\r\\n\"+\n+\t\t\t\"0a\\r\\n\"+\n+\t\t\t\"Body here\\n\\r\\n\"+\n+\t\t\t\"09\\r\\n\"+\n+\t\t\t\"continued\\r\\n\"+\n+\t\t\t\"0\\r\\n\"+\n+\t\t\t\"\\r\\n\")), nil)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\twant := \"Body here\\ncontinued\"\n+\tbuf := make([]byte, len(want))\n+\tn, err := res.Body.Read(buf)\n+\tif n != len(want) || err != io.EOF {\n+\t\tt.Logf(\"body = %#v\", res.Body)\n+\t\tt.Errorf(\"Read = %v, %v; want %d, EOF\", n, err, len(want))\n+\t}\n+\tif string(buf) != want {\n+\t\tt.Errorf(\"buf = %q; want %q\", buf, want)\n+\t}\n+}"}, {"sha": "2c312a77a02e1418f6f0d335cf62ee6a56b063b0", "filename": "libgo/go/net/http/transport.go", "status": "modified", "additions": 85, "deletions": 36, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -41,8 +41,8 @@ const DefaultMaxIdleConnsPerHost = 2\n // Transport can also cache connections for future re-use.\n type Transport struct {\n \tidleMu     sync.Mutex\n-\tidleConn   map[string][]*persistConn\n-\tidleConnCh map[string]chan *persistConn\n+\tidleConn   map[connectMethodKey][]*persistConn\n+\tidleConnCh map[connectMethodKey]chan *persistConn\n \treqMu      sync.Mutex\n \treqConn    map[*Request]*persistConn\n \taltMu      sync.RWMutex\n@@ -99,7 +99,7 @@ type Transport struct {\n // A nil URL and nil error are returned if no proxy is defined in the\n // environment, or a proxy should not be used for the given request.\n func ProxyFromEnvironment(req *Request) (*url.URL, error) {\n-\tproxy := getenvEitherCase(\"HTTP_PROXY\")\n+\tproxy := httpProxyEnv.Get()\n \tif proxy == \"\" {\n \t\treturn nil, nil\n \t}\n@@ -243,24 +243,49 @@ func (t *Transport) CancelRequest(req *Request) {\n // Private implementation past this point.\n //\n \n-func getenvEitherCase(k string) string {\n-\tif v := os.Getenv(strings.ToUpper(k)); v != \"\" {\n-\t\treturn v\n+var (\n+\thttpProxyEnv = &envOnce{\n+\t\tnames: []string{\"HTTP_PROXY\", \"http_proxy\"},\n \t}\n-\treturn os.Getenv(strings.ToLower(k))\n+\tnoProxyEnv = &envOnce{\n+\t\tnames: []string{\"NO_PROXY\", \"no_proxy\"},\n+\t}\n+)\n+\n+// envOnce looks up an environment variable (optionally by multiple\n+// names) once. It mitigates expensive lookups on some platforms\n+// (e.g. Windows).\n+type envOnce struct {\n+\tnames []string\n+\tonce  sync.Once\n+\tval   string\n }\n \n-func (t *Transport) connectMethodForRequest(treq *transportRequest) (*connectMethod, error) {\n-\tcm := &connectMethod{\n-\t\ttargetScheme: treq.URL.Scheme,\n-\t\ttargetAddr:   canonicalAddr(treq.URL),\n+func (e *envOnce) Get() string {\n+\te.once.Do(e.init)\n+\treturn e.val\n+}\n+\n+func (e *envOnce) init() {\n+\tfor _, n := range e.names {\n+\t\te.val = os.Getenv(n)\n+\t\tif e.val != \"\" {\n+\t\t\treturn\n+\t\t}\n \t}\n+}\n+\n+// reset is used by tests\n+func (e *envOnce) reset() {\n+\te.once = sync.Once{}\n+\te.val = \"\"\n+}\n+\n+func (t *Transport) connectMethodForRequest(treq *transportRequest) (cm connectMethod, err error) {\n+\tcm.targetScheme = treq.URL.Scheme\n+\tcm.targetAddr = canonicalAddr(treq.URL)\n \tif t.Proxy != nil {\n-\t\tvar err error\n \t\tcm.proxyURL, err = t.Proxy(treq.Request)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n \t}\n \treturn cm, nil\n }\n@@ -316,7 +341,7 @@ func (t *Transport) putIdleConn(pconn *persistConn) bool {\n \t\t}\n \t}\n \tif t.idleConn == nil {\n-\t\tt.idleConn = make(map[string][]*persistConn)\n+\t\tt.idleConn = make(map[connectMethodKey][]*persistConn)\n \t}\n \tif len(t.idleConn[key]) >= max {\n \t\tt.idleMu.Unlock()\n@@ -336,15 +361,15 @@ func (t *Transport) putIdleConn(pconn *persistConn) bool {\n // getIdleConnCh returns a channel to receive and return idle\n // persistent connection for the given connectMethod.\n // It may return nil, if persistent connections are not being used.\n-func (t *Transport) getIdleConnCh(cm *connectMethod) chan *persistConn {\n+func (t *Transport) getIdleConnCh(cm connectMethod) chan *persistConn {\n \tif t.DisableKeepAlives {\n \t\treturn nil\n \t}\n \tkey := cm.key()\n \tt.idleMu.Lock()\n \tdefer t.idleMu.Unlock()\n \tif t.idleConnCh == nil {\n-\t\tt.idleConnCh = make(map[string]chan *persistConn)\n+\t\tt.idleConnCh = make(map[connectMethodKey]chan *persistConn)\n \t}\n \tch, ok := t.idleConnCh[key]\n \tif !ok {\n@@ -354,7 +379,7 @@ func (t *Transport) getIdleConnCh(cm *connectMethod) chan *persistConn {\n \treturn ch\n }\n \n-func (t *Transport) getIdleConn(cm *connectMethod) (pconn *persistConn) {\n+func (t *Transport) getIdleConn(cm connectMethod) (pconn *persistConn) {\n \tkey := cm.key()\n \tt.idleMu.Lock()\n \tdefer t.idleMu.Unlock()\n@@ -373,7 +398,7 @@ func (t *Transport) getIdleConn(cm *connectMethod) (pconn *persistConn) {\n \t\t\t// 2 or more cached connections; pop last\n \t\t\t// TODO: queue?\n \t\t\tpconn = pconns[len(pconns)-1]\n-\t\t\tt.idleConn[key] = pconns[0 : len(pconns)-1]\n+\t\t\tt.idleConn[key] = pconns[:len(pconns)-1]\n \t\t}\n \t\tif !pconn.isBroken() {\n \t\t\treturn\n@@ -405,7 +430,7 @@ func (t *Transport) dial(network, addr string) (c net.Conn, err error) {\n // specified in the connectMethod.  This includes doing a proxy CONNECT\n // and/or setting up TLS.  If this doesn't return an error, the persistConn\n // is ready to write requests to.\n-func (t *Transport) getConn(cm *connectMethod) (*persistConn, error) {\n+func (t *Transport) getConn(cm connectMethod) (*persistConn, error) {\n \tif pc := t.getIdleConn(cm); pc != nil {\n \t\treturn pc, nil\n \t}\n@@ -440,7 +465,7 @@ func (t *Transport) getConn(cm *connectMethod) (*persistConn, error) {\n \t}\n }\n \n-func (t *Transport) dialConn(cm *connectMethod) (*persistConn, error) {\n+func (t *Transport) dialConn(cm connectMethod) (*persistConn, error) {\n \tconn, err := t.dial(\"tcp\", cm.addr())\n \tif err != nil {\n \t\tif cm.proxyURL != nil {\n@@ -550,7 +575,7 @@ func useProxy(addr string) bool {\n \t\t}\n \t}\n \n-\tno_proxy := getenvEitherCase(\"NO_PROXY\")\n+\tno_proxy := noProxyEnv.Get()\n \tif no_proxy == \"*\" {\n \t\treturn false\n \t}\n@@ -603,20 +628,20 @@ type connectMethod struct {\n \ttargetAddr   string   // Not used if proxy + http targetScheme (4th example in table)\n }\n \n-func (ck *connectMethod) key() string {\n-\treturn ck.String() // TODO: use a struct type instead\n-}\n-\n-func (ck *connectMethod) String() string {\n+func (cm *connectMethod) key() connectMethodKey {\n \tproxyStr := \"\"\n-\ttargetAddr := ck.targetAddr\n-\tif ck.proxyURL != nil {\n-\t\tproxyStr = ck.proxyURL.String()\n-\t\tif ck.targetScheme == \"http\" {\n+\ttargetAddr := cm.targetAddr\n+\tif cm.proxyURL != nil {\n+\t\tproxyStr = cm.proxyURL.String()\n+\t\tif cm.targetScheme == \"http\" {\n \t\t\ttargetAddr = \"\"\n \t\t}\n \t}\n-\treturn strings.Join([]string{proxyStr, ck.targetScheme, targetAddr}, \"|\")\n+\treturn connectMethodKey{\n+\t\tproxy:  proxyStr,\n+\t\tscheme: cm.targetScheme,\n+\t\taddr:   targetAddr,\n+\t}\n }\n \n // addr returns the first hop \"host:port\" to which we need to TCP connect.\n@@ -637,11 +662,23 @@ func (cm *connectMethod) tlsHost() string {\n \treturn h\n }\n \n+// connectMethodKey is the map key version of connectMethod, with a\n+// stringified proxy URL (or the empty string) instead of a pointer to\n+// a URL.\n+type connectMethodKey struct {\n+\tproxy, scheme, addr string\n+}\n+\n+func (k connectMethodKey) String() string {\n+\t// Only used by tests.\n+\treturn fmt.Sprintf(\"%s|%s|%s\", k.proxy, k.scheme, k.addr)\n+}\n+\n // persistConn wraps a connection, usually a persistent one\n // (but may be used for non-keep-alive requests as well)\n type persistConn struct {\n \tt        *Transport\n-\tcacheKey string // its connectMethod.String()\n+\tcacheKey connectMethodKey\n \tconn     net.Conn\n \tclosed   bool                // whether conn has been closed\n \tbr       *bufio.Reader       // from conn\n@@ -832,6 +869,18 @@ type writeRequest struct {\n \tch  chan<- error\n }\n \n+type httpError struct {\n+\terr     string\n+\ttimeout bool\n+}\n+\n+func (e *httpError) Error() string   { return e.err }\n+func (e *httpError) Timeout() bool   { return e.timeout }\n+func (e *httpError) Temporary() bool { return true }\n+\n+var errTimeout error = &httpError{err: \"net/http: timeout awaiting response headers\", timeout: true}\n+var errClosed error = &httpError{err: \"net/http: transport closed before response was received\"}\n+\n func (pc *persistConn) roundTrip(req *transportRequest) (resp *Response, err error) {\n \tpc.t.setReqConn(req.Request, pc)\n \tpc.lk.Lock()\n@@ -902,11 +951,11 @@ WaitResponse:\n \t\t\tpconnDeadCh = nil                               // avoid spinning\n \t\t\tfailTicker = time.After(100 * time.Millisecond) // arbitrary time to wait for resc\n \t\tcase <-failTicker:\n-\t\t\tre = responseAndError{err: errors.New(\"net/http: transport closed before response was received\")}\n+\t\t\tre = responseAndError{err: errClosed}\n \t\t\tbreak WaitResponse\n \t\tcase <-respHeaderTimer:\n \t\t\tpc.close()\n-\t\t\tre = responseAndError{err: errors.New(\"net/http: timeout awaiting response headers\")}\n+\t\t\tre = responseAndError{err: errTimeout}\n \t\t\tbreak WaitResponse\n \t\tcase re = <-resc:\n \t\t\tbreak WaitResponse"}, {"sha": "2678d71b1dec19b0e9257ecadd69c61d3648c3ff", "filename": "libgo/go/net/http/transport_test.go", "status": "modified", "additions": 80, "deletions": 1, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -271,6 +271,58 @@ func TestTransportIdleCacheKeys(t *testing.T) {\n \t}\n }\n \n+// Tests that the HTTP transport re-uses connections when a client\n+// reads to the end of a response Body without closing it.\n+func TestTransportReadToEndReusesConn(t *testing.T) {\n+\tdefer afterTest(t)\n+\tconst msg = \"foobar\"\n+\n+\tvar addrSeen map[string]int\n+\tts := httptest.NewServer(HandlerFunc(func(w ResponseWriter, r *Request) {\n+\t\taddrSeen[r.RemoteAddr]++\n+\t\tif r.URL.Path == \"/chunked/\" {\n+\t\t\tw.WriteHeader(200)\n+\t\t\tw.(http.Flusher).Flush()\n+\t\t} else {\n+\t\t\tw.Header().Set(\"Content-Type\", strconv.Itoa(len(msg)))\n+\t\t\tw.WriteHeader(200)\n+\t\t}\n+\t\tw.Write([]byte(msg))\n+\t}))\n+\tdefer ts.Close()\n+\n+\tbuf := make([]byte, len(msg))\n+\n+\tfor pi, path := range []string{\"/content-length/\", \"/chunked/\"} {\n+\t\twantLen := []int{len(msg), -1}[pi]\n+\t\taddrSeen = make(map[string]int)\n+\t\tfor i := 0; i < 3; i++ {\n+\t\t\tres, err := http.Get(ts.URL + path)\n+\t\t\tif err != nil {\n+\t\t\t\tt.Errorf(\"Get %s: %v\", path, err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\t// We want to close this body eventually (before the\n+\t\t\t// defer afterTest at top runs), but not before the\n+\t\t\t// len(addrSeen) check at the bottom of this test,\n+\t\t\t// since Closing this early in the loop would risk\n+\t\t\t// making connections be re-used for the wrong reason.\n+\t\t\tdefer res.Body.Close()\n+\n+\t\t\tif res.ContentLength != int64(wantLen) {\n+\t\t\t\tt.Errorf(\"%s res.ContentLength = %d; want %d\", path, res.ContentLength, wantLen)\n+\t\t\t}\n+\t\t\tn, err := res.Body.Read(buf)\n+\t\t\tif n != len(msg) || err != io.EOF {\n+\t\t\t\tt.Errorf(\"%s Read = %v, %v; want %d, EOF\", path, n, err, len(msg))\n+\t\t\t}\n+\t\t}\n+\t\tif len(addrSeen) != 1 {\n+\t\t\tt.Errorf(\"for %s, server saw %d distinct client addresses; want 1\", path, len(addrSeen))\n+\t\t}\n+\t}\n+}\n+\n func TestTransportMaxPerHostIdleConns(t *testing.T) {\n \tdefer afterTest(t)\n \tresch := make(chan string)\n@@ -741,6 +793,9 @@ func TestTransportGzipRecursive(t *testing.T) {\n \n // tests that persistent goroutine connections shut down when no longer desired.\n func TestTransportPersistConnLeak(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tgotReqCh := make(chan bool)\n \tunblockCh := make(chan bool)\n@@ -807,6 +862,9 @@ func TestTransportPersistConnLeak(t *testing.T) {\n // golang.org/issue/4531: Transport leaks goroutines when\n // request.ContentLength is explicitly short\n func TestTransportPersistConnLeakShortBody(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tts := httptest.NewServer(HandlerFunc(func(w ResponseWriter, r *Request) {\n \t}))\n@@ -1014,6 +1072,9 @@ func TestTransportConcurrency(t *testing.T) {\n }\n \n func TestIssue4191_InfiniteGetTimeout(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tconst debug = false\n \tmux := NewServeMux()\n@@ -1075,6 +1136,9 @@ func TestIssue4191_InfiniteGetTimeout(t *testing.T) {\n }\n \n func TestIssue4191_InfiniteGetToPutTimeout(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping test; see http://golang.org/issue/7237\")\n+\t}\n \tdefer afterTest(t)\n \tconst debug = false\n \tmux := NewServeMux()\n@@ -1173,6 +1237,20 @@ func TestTransportResponseHeaderTimeout(t *testing.T) {\n \tfor i, tt := range tests {\n \t\tres, err := c.Get(ts.URL + tt.path)\n \t\tif err != nil {\n+\t\t\tuerr, ok := err.(*url.Error)\n+\t\t\tif !ok {\n+\t\t\t\tt.Errorf(\"error is not an url.Error; got: %#v\", err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tnerr, ok := uerr.Err.(net.Error)\n+\t\t\tif !ok {\n+\t\t\t\tt.Errorf(\"error does not satisfy net.Error interface; got: %#v\", err)\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tif !nerr.Timeout() {\n+\t\t\t\tt.Errorf(\"want timeout error; got: %q\", nerr)\n+\t\t\t\tcontinue\n+\t\t\t}\n \t\t\tif strings.Contains(err.Error(), tt.wantErr) {\n \t\t\t\tcontinue\n \t\t\t}\n@@ -1283,7 +1361,7 @@ func TestTransportCloseResponseBody(t *testing.T) {\n \t\tt.Fatal(err)\n \t}\n \tif !bytes.Equal(buf, want) {\n-\t\tt.Errorf(\"read %q; want %q\", buf, want)\n+\t\tt.Fatalf(\"read %q; want %q\", buf, want)\n \t}\n \tdidClose := make(chan error, 1)\n \tgo func() {\n@@ -1566,6 +1644,7 @@ func TestProxyFromEnvironment(t *testing.T) {\n \tfor _, tt := range proxyFromEnvTests {\n \t\tos.Setenv(\"HTTP_PROXY\", tt.env)\n \t\tos.Setenv(\"NO_PROXY\", tt.noenv)\n+\t\tResetCachedEnvironment()\n \t\treqURL := tt.req\n \t\tif reqURL == \"\" {\n \t\t\treqURL = \"http://example.com\""}, {"sha": "1115d0fc40b6f366d3002d071feff133c1add70b", "filename": "libgo/go/net/interface_linux.go", "status": "modified", "additions": 48, "deletions": 10, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Finterface_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Finterface_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Finterface_linux.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -45,15 +45,41 @@ loop:\n \treturn ift, nil\n }\n \n+const (\n+\t// See linux/if_arp.h.\n+\t// Note that Linux doesn't support IPv4 over IPv6 tunneling.\n+\tsysARPHardwareIPv4IPv4 = 768 // IPv4 over IPv4 tunneling\n+\tsysARPHardwareIPv6IPv6 = 769 // IPv6 over IPv6 tunneling\n+\tsysARPHardwareIPv6IPv4 = 776 // IPv6 over IPv4 tunneling\n+\tsysARPHardwareGREIPv4  = 778 // any over GRE over IPv4 tunneling\n+\tsysARPHardwareGREIPv6  = 823 // any over GRE over IPv6 tunneling\n+)\n+\n func newLink(ifim *syscall.IfInfomsg, attrs []syscall.NetlinkRouteAttr) *Interface {\n \tifi := &Interface{Index: int(ifim.Index), Flags: linkFlags(ifim.Flags)}\n \tfor _, a := range attrs {\n \t\tswitch a.Attr.Type {\n \t\tcase syscall.IFLA_ADDRESS:\n+\t\t\t// We never return any /32 or /128 IP address\n+\t\t\t// prefix on any IP tunnel interface as the\n+\t\t\t// hardware address.\n+\t\t\tswitch len(a.Value) {\n+\t\t\tcase IPv4len:\n+\t\t\t\tswitch ifim.Type {\n+\t\t\t\tcase sysARPHardwareIPv4IPv4, sysARPHardwareGREIPv4, sysARPHardwareIPv6IPv4:\n+\t\t\t\t\tcontinue\n+\t\t\t\t}\n+\t\t\tcase IPv6len:\n+\t\t\t\tswitch ifim.Type {\n+\t\t\t\tcase sysARPHardwareIPv6IPv6, sysARPHardwareGREIPv6:\n+\t\t\t\t\tcontinue\n+\t\t\t\t}\n+\t\t\t}\n \t\t\tvar nonzero bool\n \t\t\tfor _, b := range a.Value {\n \t\t\t\tif b != 0 {\n \t\t\t\t\tnonzero = true\n+\t\t\t\t\tbreak\n \t\t\t\t}\n \t\t\t}\n \t\t\tif nonzero {\n@@ -147,19 +173,31 @@ loop:\n }\n \n func newAddr(ifi *Interface, ifam *syscall.IfAddrmsg, attrs []syscall.NetlinkRouteAttr) Addr {\n-\tfor _, a := range attrs {\n-\t\tif ifi.Flags&FlagPointToPoint != 0 && a.Attr.Type == syscall.IFA_LOCAL ||\n-\t\t\tifi.Flags&FlagPointToPoint == 0 && a.Attr.Type == syscall.IFA_ADDRESS {\n-\t\t\tswitch ifam.Family {\n-\t\t\tcase syscall.AF_INET:\n-\t\t\t\treturn &IPNet{IP: IPv4(a.Value[0], a.Value[1], a.Value[2], a.Value[3]), Mask: CIDRMask(int(ifam.Prefixlen), 8*IPv4len)}\n-\t\t\tcase syscall.AF_INET6:\n-\t\t\t\tifa := &IPNet{IP: make(IP, IPv6len), Mask: CIDRMask(int(ifam.Prefixlen), 8*IPv6len)}\n-\t\t\t\tcopy(ifa.IP, a.Value[:])\n-\t\t\t\treturn ifa\n+\tvar ipPointToPoint bool\n+\t// Seems like we need to make sure whether the IP interface\n+\t// stack consists of IP point-to-point numbered or unnumbered\n+\t// addressing over point-to-point link encapsulation.\n+\tif ifi.Flags&FlagPointToPoint != 0 {\n+\t\tfor _, a := range attrs {\n+\t\t\tif a.Attr.Type == syscall.IFA_LOCAL {\n+\t\t\t\tipPointToPoint = true\n+\t\t\t\tbreak\n \t\t\t}\n \t\t}\n \t}\n+\tfor _, a := range attrs {\n+\t\tif ipPointToPoint && a.Attr.Type == syscall.IFA_ADDRESS || !ipPointToPoint && a.Attr.Type == syscall.IFA_LOCAL {\n+\t\t\tcontinue\n+\t\t}\n+\t\tswitch ifam.Family {\n+\t\tcase syscall.AF_INET:\n+\t\t\treturn &IPNet{IP: IPv4(a.Value[0], a.Value[1], a.Value[2], a.Value[3]), Mask: CIDRMask(int(ifam.Prefixlen), 8*IPv4len)}\n+\t\tcase syscall.AF_INET6:\n+\t\t\tifa := &IPNet{IP: make(IP, IPv6len), Mask: CIDRMask(int(ifam.Prefixlen), 8*IPv6len)}\n+\t\t\tcopy(ifa.IP, a.Value[:])\n+\t\t\treturn ifa\n+\t\t}\n+\t}\n \treturn nil\n }\n "}, {"sha": "914ed50826f8c402ecb769460d16fe6996c1665a", "filename": "libgo/go/net/ipsock_plan9.go", "status": "modified", "additions": 46, "deletions": 16, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fipsock_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fipsock_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fipsock_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -12,19 +12,45 @@ import (\n \t\"syscall\"\n )\n \n+func probe(filename, query string) bool {\n+\tvar file *file\n+\tvar err error\n+\tif file, err = open(filename); err != nil {\n+\t\treturn false\n+\t}\n+\n+\tr := false\n+\tfor line, ok := file.readLine(); ok && !r; line, ok = file.readLine() {\n+\t\tf := getFields(line)\n+\t\tif len(f) < 3 {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfor i := 0; i < len(f); i++ {\n+\t\t\tif query == f[i] {\n+\t\t\t\tr = true\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t}\n+\tfile.close()\n+\treturn r\n+}\n+\n func probeIPv4Stack() bool {\n-\t// TODO(mikio): implement this when Plan 9 supports IPv6-only\n-\t// kernel.\n-\treturn true\n+\treturn probe(netdir+\"/iproute\", \"4i\")\n }\n \n // probeIPv6Stack returns two boolean values.  If the first boolean\n // value is true, kernel supports basic IPv6 functionality.  If the\n // second boolean value is true, kernel supports IPv6 IPv4-mapping.\n func probeIPv6Stack() (supportsIPv6, supportsIPv4map bool) {\n-\t// TODO(mikio): implement this once Plan 9 gets an IPv6\n-\t// protocol stack implementation.\n-\treturn false, false\n+\t// Plan 9 uses IPv6 natively, see ip(3).\n+\tr := probe(netdir+\"/iproute\", \"6i\")\n+\tv := false\n+\tif r {\n+\t\tv = probe(netdir+\"/iproute\", \"4i\")\n+\t}\n+\treturn r, v\n }\n \n // parsePlan9Addr parses address of the form [ip!]port (e.g. 127.0.0.1!80).\n@@ -133,18 +159,18 @@ func dialPlan9(net string, laddr, raddr Addr) (fd *netFD, err error) {\n \t\tf.Close()\n \t\treturn nil, &OpError{\"dial\", f.Name(), raddr, err}\n \t}\n-\tdata, err := os.OpenFile(\"/net/\"+proto+\"/\"+name+\"/data\", os.O_RDWR, 0)\n+\tdata, err := os.OpenFile(netdir+\"/\"+proto+\"/\"+name+\"/data\", os.O_RDWR, 0)\n \tif err != nil {\n \t\tf.Close()\n \t\treturn nil, &OpError{\"dial\", net, raddr, err}\n \t}\n-\tladdr, err = readPlan9Addr(proto, \"/net/\"+proto+\"/\"+name+\"/local\")\n+\tladdr, err = readPlan9Addr(proto, netdir+\"/\"+proto+\"/\"+name+\"/local\")\n \tif err != nil {\n \t\tdata.Close()\n \t\tf.Close()\n \t\treturn nil, &OpError{\"dial\", proto, raddr, err}\n \t}\n-\treturn newFD(proto, name, f, data, laddr, raddr), nil\n+\treturn newFD(proto, name, f, data, laddr, raddr)\n }\n \n func listenPlan9(net string, laddr Addr) (fd *netFD, err error) {\n@@ -158,20 +184,24 @@ func listenPlan9(net string, laddr Addr) (fd *netFD, err error) {\n \t\tf.Close()\n \t\treturn nil, &OpError{\"announce\", proto, laddr, err}\n \t}\n-\tladdr, err = readPlan9Addr(proto, \"/net/\"+proto+\"/\"+name+\"/local\")\n+\tladdr, err = readPlan9Addr(proto, netdir+\"/\"+proto+\"/\"+name+\"/local\")\n \tif err != nil {\n \t\tf.Close()\n \t\treturn nil, &OpError{Op: \"listen\", Net: net, Err: err}\n \t}\n-\treturn newFD(proto, name, f, nil, laddr, nil), nil\n+\treturn newFD(proto, name, f, nil, laddr, nil)\n }\n \n-func (l *netFD) netFD() *netFD {\n-\treturn newFD(l.proto, l.name, l.ctl, l.data, l.laddr, l.raddr)\n+func (l *netFD) netFD() (*netFD, error) {\n+\treturn newFD(l.proto, l.n, l.ctl, l.data, l.laddr, l.raddr)\n }\n \n func (l *netFD) acceptPlan9() (fd *netFD, err error) {\n \tdefer func() { netErr(err) }()\n+\tif err := l.readLock(); err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer l.readUnlock()\n \tf, err := os.Open(l.dir + \"/listen\")\n \tif err != nil {\n \t\treturn nil, &OpError{\"accept\", l.dir + \"/listen\", l.laddr, err}\n@@ -183,16 +213,16 @@ func (l *netFD) acceptPlan9() (fd *netFD, err error) {\n \t\treturn nil, &OpError{\"accept\", l.dir + \"/listen\", l.laddr, err}\n \t}\n \tname := string(buf[:n])\n-\tdata, err := os.OpenFile(\"/net/\"+l.proto+\"/\"+name+\"/data\", os.O_RDWR, 0)\n+\tdata, err := os.OpenFile(netdir+\"/\"+l.proto+\"/\"+name+\"/data\", os.O_RDWR, 0)\n \tif err != nil {\n \t\tf.Close()\n \t\treturn nil, &OpError{\"accept\", l.proto, l.laddr, err}\n \t}\n-\traddr, err := readPlan9Addr(l.proto, \"/net/\"+l.proto+\"/\"+name+\"/remote\")\n+\traddr, err := readPlan9Addr(l.proto, netdir+\"/\"+l.proto+\"/\"+name+\"/remote\")\n \tif err != nil {\n \t\tdata.Close()\n \t\tf.Close()\n \t\treturn nil, &OpError{\"accept\", l.proto, l.laddr, err}\n \t}\n-\treturn newFD(l.proto, name, f, data, l.laddr, raddr), nil\n+\treturn newFD(l.proto, name, f, data, l.laddr, raddr)\n }"}, {"sha": "2ccd997c2cba1b7efb15a798b6da6f22cebce83d", "filename": "libgo/go/net/lookup_plan9.go", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Flookup_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Flookup_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Flookup_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -16,6 +16,10 @@ func query(filename, query string, bufSize int) (res []string, err error) {\n \t}\n \tdefer file.Close()\n \n+\t_, err = file.Seek(0, 0)\n+\tif err != nil {\n+\t\treturn\n+\t}\n \t_, err = file.WriteString(query)\n \tif err != nil {\n \t\treturn\n@@ -45,7 +49,7 @@ func queryCS(net, host, service string) (res []string, err error) {\n \tif host == \"\" {\n \t\thost = \"*\"\n \t}\n-\treturn query(\"/net/cs\", net+\"!\"+host+\"!\"+service, 128)\n+\treturn query(netdir+\"/cs\", net+\"!\"+host+\"!\"+service, 128)\n }\n \n func queryCS1(net string, ip IP, port int) (clone, dest string, err error) {\n@@ -66,7 +70,7 @@ func queryCS1(net string, ip IP, port int) (clone, dest string, err error) {\n }\n \n func queryDNS(addr string, typ string) (res []string, err error) {\n-\treturn query(\"/net/dns\", addr+\" \"+typ, 1024)\n+\treturn query(netdir+\"/dns\", addr+\" \"+typ, 1024)\n }\n \n // toLower returns a lower-case version of in. Restricting us to\n@@ -93,7 +97,7 @@ func toLower(in string) string {\n // lookupProtocol looks up IP protocol name and returns\n // the corresponding protocol number.\n func lookupProtocol(name string) (proto int, err error) {\n-\tlines, err := query(\"/net/cs\", \"!protocol=\"+toLower(name), 128)\n+\tlines, err := query(netdir+\"/cs\", \"!protocol=\"+toLower(name), 128)\n \tif err != nil {\n \t\treturn 0, err\n \t}\n@@ -113,12 +117,13 @@ func lookupProtocol(name string) (proto int, err error) {\n }\n \n func lookupHost(host string) (addrs []string, err error) {\n-\t// Use /net/cs instead of /net/dns because cs knows about\n+\t// Use netdir/cs instead of netdir/dns because cs knows about\n \t// host names in local network (e.g. from /lib/ndb/local)\n \tlines, err := queryCS(\"net\", host, \"1\")\n \tif err != nil {\n \t\treturn\n \t}\n+loop:\n \tfor _, line := range lines {\n \t\tf := getFields(line)\n \t\tif len(f) < 2 {\n@@ -131,6 +136,12 @@ func lookupHost(host string) (addrs []string, err error) {\n \t\tif ParseIP(addr) == nil {\n \t\t\tcontinue\n \t\t}\n+\t\t// only return unique addresses\n+\t\tfor _, a := range addrs {\n+\t\t\tif a == addr {\n+\t\t\t\tcontinue loop\n+\t\t\t}\n+\t\t}\n \t\taddrs = append(addrs, addr)\n \t}\n \treturn"}, {"sha": "4b332c1b5be6e8ffd2cf95e1eaf1246f341f9ee8", "filename": "libgo/go/net/mail/message.go", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fmail%2Fmessage.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fmail%2Fmessage.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fmail%2Fmessage.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -159,15 +159,17 @@ func (a *Address) String() string {\n \t// If every character is printable ASCII, quoting is simple.\n \tallPrintable := true\n \tfor i := 0; i < len(a.Name); i++ {\n-\t\tif !isVchar(a.Name[i]) {\n+\t\t// isWSP here should actually be isFWS,\n+\t\t// but we don't support folding yet.\n+\t\tif !isVchar(a.Name[i]) && !isWSP(a.Name[i]) {\n \t\t\tallPrintable = false\n \t\t\tbreak\n \t\t}\n \t}\n \tif allPrintable {\n \t\tb := bytes.NewBufferString(`\"`)\n \t\tfor i := 0; i < len(a.Name); i++ {\n-\t\t\tif !isQtext(a.Name[i]) {\n+\t\t\tif !isQtext(a.Name[i]) && !isWSP(a.Name[i]) {\n \t\t\t\tb.WriteByte('\\\\')\n \t\t\t}\n \t\t\tb.WriteByte(a.Name[i])\n@@ -535,3 +537,9 @@ func isVchar(c byte) bool {\n \t// Visible (printing) characters.\n \treturn '!' <= c && c <= '~'\n }\n+\n+// isWSP returns true if c is a WSP (white space).\n+// WSP is a space or horizontal tab (RFC5234 Appendix B).\n+func isWSP(c byte) bool {\n+\treturn c == ' ' || c == '\\t'\n+}"}, {"sha": "1bb4e8bc40137e6c72d9049b03d7b55c1014ea04", "filename": "libgo/go/net/mail/message_test.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fmail%2Fmessage_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fmail%2Fmessage_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fmail%2Fmessage_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -277,6 +277,14 @@ func TestAddressFormatting(t *testing.T) {\n \t\t\t&Address{Name: \"B\u00f6b\", Address: \"bob@example.com\"},\n \t\t\t`=?utf-8?q?B=C3=B6b?= <bob@example.com>`,\n \t\t},\n+\t\t{\n+\t\t\t&Address{Name: \"Bob Jane\", Address: \"bob@example.com\"},\n+\t\t\t`\"Bob Jane\" <bob@example.com>`,\n+\t\t},\n+\t\t{\n+\t\t\t&Address{Name: \"B\u00f6b Jac\u00f6b\", Address: \"bob@example.com\"},\n+\t\t\t`=?utf-8?q?B=C3=B6b_Jac=C3=B6b?= <bob@example.com>`,\n+\t\t},\n \t}\n \tfor _, test := range tests {\n \t\ts := test.addr.String()"}, {"sha": "6b264b46b8e769898c09b08159103a7f449f94af", "filename": "libgo/go/net/rpc/server.go", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Frpc%2Fserver.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Frpc%2Fserver.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Frpc%2Fserver.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -217,10 +217,11 @@ func isExportedOrBuiltinType(t reflect.Type) bool {\n // Register publishes in the server the set of methods of the\n // receiver value that satisfy the following conditions:\n //\t- exported method\n-//\t- two arguments, both pointers to exported structs\n+//\t- two arguments, both of exported type\n+//\t- the second argument is a pointer\n //\t- one return value, of type error\n // It returns an error if the receiver is not an exported type or has\n-// no methods or unsuitable methods. It also logs the error using package log.\n+// no suitable methods. It also logs the error using package log.\n // The client accesses each method using a string of the form \"Type.Method\",\n // where Type is the receiver's concrete type.\n func (server *Server) Register(rcvr interface{}) error {"}, {"sha": "8bc689b6c290511169b2ba1402397d283f6863d7", "filename": "libgo/go/net/sockopt_plan9.go", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fsockopt_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fsockopt_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fsockopt_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package net\n+\n+func setKeepAlive(fd *netFD, keepalive bool) error {\n+\tif keepalive {\n+\t\t_, e := fd.ctl.WriteAt([]byte(\"keepalive\"), 0)\n+\t\treturn e\n+\t}\n+\treturn nil\n+}"}, {"sha": "6e1a8b9a1928f1168364ba43890365af425b87ae", "filename": "libgo/go/net/tcpsock_plan9.go", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ftcpsock_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ftcpsock_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ftcpsock_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -62,12 +62,18 @@ func (c *TCPConn) SetLinger(sec int) error {\n // SetKeepAlive sets whether the operating system should send\n // keepalive messages on the connection.\n func (c *TCPConn) SetKeepAlive(keepalive bool) error {\n-\treturn syscall.EPLAN9\n+\tif !c.ok() {\n+\t\treturn syscall.EPLAN9\n+\t}\n+\treturn setKeepAlive(c.fd, keepalive)\n }\n \n // SetKeepAlivePeriod sets period between keep alives.\n func (c *TCPConn) SetKeepAlivePeriod(d time.Duration) error {\n-\treturn syscall.EPLAN9\n+\tif !c.ok() {\n+\t\treturn syscall.EPLAN9\n+\t}\n+\treturn setKeepAlivePeriod(c.fd, d)\n }\n \n // SetNoDelay controls whether the operating system should delay"}, {"sha": "0e7a6647caf4f84117211438dfe3dc70871db492", "filename": "libgo/go/net/tcpsockopt_plan9.go", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ftcpsockopt_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ftcpsockopt_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ftcpsockopt_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// TCP socket options for plan9\n+\n+package net\n+\n+import (\n+\t\"time\"\n+)\n+\n+// Set keep alive period.\n+func setKeepAlivePeriod(fd *netFD, d time.Duration) error {\n+\tcmd := \"keepalive \" + string(int64(d/time.Millisecond))\n+\t_, e := fd.ctl.WriteAt([]byte(cmd), 0)\n+\treturn e\n+}"}, {"sha": "8ef1407977f5a3839af7ae01ea8a38742090c4ef", "filename": "libgo/go/net/tcpsockopt_windows.go", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ftcpsockopt_windows.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Ftcpsockopt_windows.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ftcpsockopt_windows.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -7,7 +7,10 @@\n package net\n \n import (\n+\t\"os\"\n+\t\"syscall\"\n \t\"time\"\n+\t\"unsafe\"\n )\n \n func setKeepAlivePeriod(fd *netFD, d time.Duration) error {\n@@ -16,6 +19,16 @@ func setKeepAlivePeriod(fd *netFD, d time.Duration) error {\n \t}\n \tdefer fd.decref()\n \n-\t// We can't actually set this per connection.  Act as a noop rather than an error.\n-\treturn nil\n+\t// Windows expects milliseconds so round to next highest millisecond.\n+\td += (time.Millisecond - time.Nanosecond)\n+\tmillis := uint32(d / time.Millisecond)\n+\tka := syscall.TCPKeepalive{\n+\t\tOnOff:    1,\n+\t\tTime:     millis,\n+\t\tInterval: millis,\n+\t}\n+\tret := uint32(0)\n+\tsize := uint32(unsafe.Sizeof(ka))\n+\terr := syscall.WSAIoctl(fd.sysfd, syscall.SIO_KEEPALIVE_VALS, (*byte)(unsafe.Pointer(&ka)), size, nil, 0, &ret, nil, 0)\n+\treturn os.NewSyscallError(\"WSAIoctl\", err)\n }"}, {"sha": "510ac5e4aaa6037b91c32fc084064307680a1fa6", "filename": "libgo/go/net/udpsock_plan9.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fudpsock_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fudpsock_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fudpsock_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -190,7 +190,8 @@ func ListenUDP(net string, laddr *UDPAddr) (*UDPConn, error) {\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\treturn newUDPConn(l.netFD()), nil\n+\tfd, err := l.netFD()\n+\treturn newUDPConn(fd), err\n }\n \n // ListenMulticastUDP listens for incoming multicast UDP packets"}, {"sha": "452ac925428d1ae50453b08e9fbf71172405feda", "filename": "libgo/go/net/unicast_posix_test.go", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Funicast_posix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Funicast_posix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Funicast_posix_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -166,9 +166,12 @@ var dualStackListenerTests = []struct {\n }\n \n // TestDualStackTCPListener tests both single and double listen\n-// to a test listener with various address families, differnet\n+// to a test listener with various address families, different\n // listening address and same port.\n func TestDualStackTCPListener(t *testing.T) {\n+\tif testing.Short() {\n+\t\tt.Skip(\"skipping in -short mode, see issue 5001\")\n+\t}\n \tswitch runtime.GOOS {\n \tcase \"plan9\":\n \t\tt.Skipf(\"skipping test on %q\", runtime.GOOS)\n@@ -178,7 +181,7 @@ func TestDualStackTCPListener(t *testing.T) {\n \t}\n \n \tfor _, tt := range dualStackListenerTests {\n-\t\tif tt.wildcard && (testing.Short() || !*testExternal) {\n+\t\tif tt.wildcard && !*testExternal {\n \t\t\tcontinue\n \t\t}\n \t\tswitch runtime.GOOS {"}, {"sha": "54d9d16c99e69702b534533a440ff4a3f6b96de8", "filename": "libgo/go/net/unixsock_posix.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Funixsock_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Funixsock_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Funixsock_posix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -280,7 +280,11 @@ func (l *UnixListener) AcceptUnix() (*UnixConn, error) {\n \tif l == nil || l.fd == nil {\n \t\treturn nil, syscall.EINVAL\n \t}\n-\tfd, err := l.fd.accept(sockaddrToUnix)\n+\ttoAddr := sockaddrToUnix\n+\tif l.fd.sotype == syscall.SOCK_SEQPACKET {\n+\t\ttoAddr = sockaddrToUnixpacket\n+\t}\n+\tfd, err := l.fd.accept(toAddr)\n \tif err != nil {\n \t\treturn nil, err\n \t}"}, {"sha": "4f6a54a560acab2f44c446983fbbe0702029b7cd", "filename": "libgo/go/net/z_last_test.go", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fz_last_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fnet%2Fz_last_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fz_last_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,13 +5,16 @@\n package net\n \n import (\n+\t\"flag\"\n \t\"fmt\"\n \t\"testing\"\n )\n \n+var testDNSFlood = flag.Bool(\"dnsflood\", false, \"whether to test dns query flooding\")\n+\n func TestDNSThreadLimit(t *testing.T) {\n-\tif testing.Short() || !*testExternal {\n-\t\tt.Skip(\"skipping test to avoid external network\")\n+\tif !*testDNSFlood {\n+\t\tt.Skip(\"test disabled; use -dnsflood to enable\")\n \t}\n \n \tconst N = 10000"}, {"sha": "67c390283c7336349d714bef3c36d13126088a97", "filename": "libgo/go/os/dir_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fdir_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fdir_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fdir_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os\n "}, {"sha": "5ec07ee1b1b68d369c1798b6be27382bc2e9ebb1", "filename": "libgo/go/os/env_unix_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fenv_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fenv_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fenv_unix_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os_test\n "}, {"sha": "f281495e6b8e09ecc4eb144022f1fd4346282e28", "filename": "libgo/go/os/error_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ferror_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ferror_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ferror_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os\n "}, {"sha": "4680036fddcc6eefc19db1cbff5b1bbe59ceb0e9", "filename": "libgo/go/os/exec/exec.go", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Fexec.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Fexec.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec%2Fexec.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -12,6 +12,7 @@ import (\n \t\"errors\"\n \t\"io\"\n \t\"os\"\n+\t\"path/filepath\"\n \t\"strconv\"\n \t\"sync\"\n \t\"syscall\"\n@@ -33,7 +34,8 @@ type Cmd struct {\n \t// Path is the path of the command to run.\n \t//\n \t// This is the only field that must be set to a non-zero\n-\t// value.\n+\t// value. If Path is relative, it is evaluated relative\n+\t// to Dir.\n \tPath string\n \n \t// Args holds command line arguments, including the command as Args[0].\n@@ -84,7 +86,7 @@ type Cmd struct {\n \t// available after a call to Wait or Run.\n \tProcessState *os.ProcessState\n \n-\terr             error // last error (from LookPath, stdin, stdout, stderr)\n+\tlookPathErr     error // LookPath error, if any.\n \tfinished        bool  // when Wait was called\n \tchildFiles      []*os.File\n \tcloseAfterStart []io.Closer\n@@ -96,8 +98,7 @@ type Cmd struct {\n // Command returns the Cmd struct to execute the named program with\n // the given arguments.\n //\n-// It sets Path and Args in the returned structure and zeroes the\n-// other fields.\n+// It sets only the Path and Args in the returned structure.\n //\n // If name contains no path separators, Command uses LookPath to\n // resolve the path to a complete name if possible. Otherwise it uses\n@@ -107,19 +108,22 @@ type Cmd struct {\n // followed by the elements of arg, so arg should not include the\n // command name itself. For example, Command(\"echo\", \"hello\")\n func Command(name string, arg ...string) *Cmd {\n-\taname, err := LookPath(name)\n-\tif err != nil {\n-\t\taname = name\n-\t}\n-\treturn &Cmd{\n-\t\tPath: aname,\n+\tcmd := &Cmd{\n+\t\tPath: name,\n \t\tArgs: append([]string{name}, arg...),\n-\t\terr:  err,\n \t}\n+\tif filepath.Base(name) == name {\n+\t\tif lp, err := LookPath(name); err != nil {\n+\t\t\tcmd.lookPathErr = err\n+\t\t} else {\n+\t\t\tcmd.Path = lp\n+\t\t}\n+\t}\n+\treturn cmd\n }\n \n // interfaceEqual protects against panics from doing equality tests on\n-// two interfaces with non-comparable underlying types\n+// two interfaces with non-comparable underlying types.\n func interfaceEqual(a, b interface{}) bool {\n \tdefer func() {\n \t\trecover()\n@@ -235,10 +239,10 @@ func (c *Cmd) Run() error {\n \n // Start starts the specified command but does not wait for it to complete.\n func (c *Cmd) Start() error {\n-\tif c.err != nil {\n+\tif c.lookPathErr != nil {\n \t\tc.closeDescriptors(c.closeAfterStart)\n \t\tc.closeDescriptors(c.closeAfterWait)\n-\t\treturn c.err\n+\t\treturn c.lookPathErr\n \t}\n \tif c.Process != nil {\n \t\treturn errors.New(\"exec: already started\")"}, {"sha": "06248925da28c3aa422ca71b50f78aa9eb368512", "filename": "libgo/go/os/exec/exec_test.go", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Fexec_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Fexec_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec%2Fexec_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -48,6 +48,33 @@ func TestEcho(t *testing.T) {\n \t}\n }\n \n+func TestCommandRelativeName(t *testing.T) {\n+\t// Run our own binary as a relative path\n+\t// (e.g. \"_test/exec.test\") our parent directory.\n+\tbase := filepath.Base(os.Args[0]) // \"exec.test\"\n+\tdir := filepath.Dir(os.Args[0])   // \"/tmp/go-buildNNNN/os/exec/_test\"\n+\tif dir == \".\" {\n+\t\tt.Skip(\"skipping; running test at root somehow\")\n+\t}\n+\tparentDir := filepath.Dir(dir) // \"/tmp/go-buildNNNN/os/exec\"\n+\tdirBase := filepath.Base(dir)  // \"_test\"\n+\tif dirBase == \".\" {\n+\t\tt.Skipf(\"skipping; unexpected shallow dir of %q\", dir)\n+\t}\n+\n+\tcmd := exec.Command(filepath.Join(dirBase, base), \"-test.run=TestHelperProcess\", \"--\", \"echo\", \"foo\")\n+\tcmd.Dir = parentDir\n+\tcmd.Env = []string{\"GO_WANT_HELPER_PROCESS=1\"}\n+\n+\tout, err := cmd.Output()\n+\tif err != nil {\n+\t\tt.Errorf(\"echo: %v\", err)\n+\t}\n+\tif g, e := string(out), \"foo\\n\"; g != e {\n+\t\tt.Errorf(\"echo: want %q, got %q\", e, g)\n+\t}\n+}\n+\n func TestCatStdin(t *testing.T) {\n \t// Cat, testing stdin and stdout.\n \tinput := \"Input string\\nLine 2\"\n@@ -484,6 +511,8 @@ func TestHelperProcess(*testing.T) {\n \tswitch runtime.GOOS {\n \tcase \"dragonfly\", \"freebsd\", \"netbsd\", \"openbsd\":\n \t\tofcmd = \"fstat\"\n+\tcase \"plan9\":\n+\t\tofcmd = \"/bin/cat\"\n \t}\n \n \targs := os.Args\n@@ -574,6 +603,14 @@ func TestHelperProcess(*testing.T) {\n \t\t\t// the cloned file descriptors that result from opening\n \t\t\t// /dev/urandom.\n \t\t\t// http://golang.org/issue/3955\n+\t\tcase \"plan9\":\n+\t\t\t// TODO(0intro): Determine why Plan 9 is leaking\n+\t\t\t// file descriptors.\n+\t\t\t// http://golang.org/issue/7118\n+\t\tcase \"solaris\":\n+\t\t\t// TODO(aram): This fails on Solaris because libc opens\n+\t\t\t// its own files, as it sees fit. Darwin does the same,\n+\t\t\t// see: http://golang.org/issue/2603\n \t\tdefault:\n \t\t\t// Now verify that there are no other open fds.\n \t\t\tvar files []*os.File\n@@ -585,7 +622,14 @@ func TestHelperProcess(*testing.T) {\n \t\t\t\t}\n \t\t\t\tif got := f.Fd(); got != wantfd {\n \t\t\t\t\tfmt.Printf(\"leaked parent file. fd = %d; want %d\\n\", got, wantfd)\n-\t\t\t\t\tout, _ := exec.Command(ofcmd, \"-p\", fmt.Sprint(os.Getpid())).CombinedOutput()\n+\t\t\t\t\tvar args []string\n+\t\t\t\t\tswitch runtime.GOOS {\n+\t\t\t\t\tcase \"plan9\":\n+\t\t\t\t\t\targs = []string{fmt.Sprintf(\"/proc/%d/fd\", os.Getpid())}\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\targs = []string{\"-p\", fmt.Sprint(os.Getpid())}\n+\t\t\t\t\t}\n+\t\t\t\t\tout, _ := exec.Command(ofcmd, args...).CombinedOutput()\n \t\t\t\t\tfmt.Print(string(out))\n \t\t\t\t\tos.Exit(1)\n \t\t\t\t}"}, {"sha": "7b9dec7e8b50894c4d1a1b0ff9848465c59c7087", "filename": "libgo/go/os/exec/lp_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Flp_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Flp_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec%2Flp_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package exec\n "}, {"sha": "051db664a894de54a5152c975b9572b83e57e46b", "filename": "libgo/go/os/exec/lp_unix_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Flp_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec%2Flp_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec%2Flp_unix_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package exec\n "}, {"sha": "8a4d019d2f748ee4d45a513370b5a59c5a20f628", "filename": "libgo/go/os/exec_posix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec_posix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd windows\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris windows\n \n package os\n "}, {"sha": "3c05b8f080625136d1692f5e4a35b245194afb47", "filename": "libgo/go/os/exec_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fexec_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os\n "}, {"sha": "a804b81973135590061f07cd00db17c7a1a3e12b", "filename": "libgo/go/os/file_plan9.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ffile_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ffile_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -332,6 +332,8 @@ func rename(oldname, newname string) error {\n \tdirname := oldname[:lastIndex(oldname, '/')+1]\n \tif hasPrefix(newname, dirname) {\n \t\tnewname = newname[len(dirname):]\n+\t} else {\n+\t\treturn &LinkError{\"rename\", oldname, newname, ErrInvalid}\n \t}\n \n \t// If newname still contains slashes after removing the oldname"}, {"sha": "441ad5384d70a20d3e75a7566789c69ed3d82d61", "filename": "libgo/go/os/file_posix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ffile_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ffile_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_posix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd windows\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris windows\n \n package os\n "}, {"sha": "33588421dc0df7f647d821ff636abab0ca7558c1", "filename": "libgo/go/os/file_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ffile_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Ffile_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os\n "}, {"sha": "0392b06c4094a8cf7c9e5e5ef6f5c26a22414278", "filename": "libgo/go/os/os_test.go", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fos_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fos_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fos_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -394,11 +394,12 @@ func touch(t *testing.T, name string) {\n }\n \n func TestReaddirStatFailures(t *testing.T) {\n-\tif runtime.GOOS == \"windows\" {\n-\t\t// Windows already does this correctly, but is\n-\t\t// structured with different syscalls such that it\n-\t\t// doesn't use Lstat, so the hook below for testing it\n-\t\t// wouldn't work.\n+\tswitch runtime.GOOS {\n+\tcase \"windows\", \"plan9\":\n+\t\t// Windows and Plan 9 already do this correctly,\n+\t\t// but are structured with different syscalls such\n+\t\t// that they don't use Lstat, so the hook below for\n+\t\t// testing it wouldn't work.\n \t\tt.Skipf(\"skipping test on %v\", runtime.GOOS)\n \t}\n \tdir, err := ioutil.TempDir(\"\", \"\")"}, {"sha": "21d40ccaf848c9b8cfe50a61008a3b0c88afe910", "filename": "libgo/go/os/os_unix_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fos_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fos_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fos_unix_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os_test\n "}, {"sha": "bdf9fe642187b58548a85e414fc8807251faea75", "filename": "libgo/go/os/path_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fpath_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fpath_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fpath_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package os\n "}, {"sha": "0ea8e4b1f83cd531219e1085de4e41bf60e0dc6d", "filename": "libgo/go/os/pipe_bsd.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fpipe_bsd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fpipe_bsd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fpipe_bsd.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd netbsd openbsd\n+// +build darwin dragonfly freebsd netbsd openbsd solaris\n \n package os\n "}, {"sha": "076fe3f93bd1fcd53220e66c8dba75e218d1d071", "filename": "libgo/go/os/signal/signal_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fsignal%2Fsignal_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fsignal%2Fsignal_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fsignal%2Fsignal_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package signal\n "}, {"sha": "80dc4304aaa4d625586ecb0c8f35bca5cf21b0e4", "filename": "libgo/go/os/signal/signal_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fsignal%2Fsignal_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fsignal%2Fsignal_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fsignal%2Fsignal_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd windows\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris windows\n \n package signal\n "}, {"sha": "3e88bd829e656a28d20a1d3b6b5f3f1683d28f62", "filename": "libgo/go/os/stat_solaris.go", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fstat_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fstat_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fstat_solaris.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -24,8 +24,10 @@ func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {\n \t}\n \tfs.mode = FileMode(st.Mode & 0777)\n \tswitch st.Mode & syscall.S_IFMT {\n-\tcase syscall.S_IFBLK, syscall.S_IFCHR:\n+\tcase syscall.S_IFBLK:\n \t\tfs.mode |= ModeDevice\n+\tcase syscall.S_IFCHR:\n+\t\tfs.mode |= ModeDevice | ModeCharDevice\n \tcase syscall.S_IFDIR:\n \t\tfs.mode |= ModeDir\n \tcase syscall.S_IFIFO:\n@@ -43,6 +45,9 @@ func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {\n \tif st.Mode&syscall.S_ISUID != 0 {\n \t\tfs.mode |= ModeSetuid\n \t}\n+\tif st.Mode&syscall.S_ISVTX != 0 {\n+\t\tfs.mode |= ModeSticky\n+\t}\n \treturn fs\n }\n "}, {"sha": "0db08067201f5167067268d5d72ba3ef9579103e", "filename": "libgo/go/os/user/lookup_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fuser%2Flookup_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fos%2Fuser%2Flookup_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fuser%2Flookup_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n // +build cgo\n \n package user"}, {"sha": "2be675c3af1dc0b89765a5787507c67c7394903e", "filename": "libgo/go/path/filepath/path_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package filepath\n "}, {"sha": "b248743de70e247a43d8385ad8c17d99ad7a13af", "filename": "libgo/go/reflect/makefunc.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fmakefunc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fmakefunc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -113,7 +113,7 @@ func makeMethodValue(op string, v Value) Value {\n \t// Cause panic if method is not appropriate.\n \t// The panic would still happen during the call if we omit this,\n \t// but we want Interface() and other operations to fail early.\n-\tt, _, _ := methodReceiver(op, rcvr, int(v.flag)>>flagMethodShift)\n+\tt, _ := methodReceiver(op, rcvr, int(v.flag)>>flagMethodShift)\n \n \tfv := &makeFuncImpl{\n \t\tcode:   code,"}, {"sha": "7809fb01f2326494421f8789ca2d31f039d71413", "filename": "libgo/go/reflect/makefuncgo_386.go", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fmakefuncgo_386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fmakefuncgo_386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefuncgo_386.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -127,17 +127,16 @@ func MakeFuncStubGo(regs *i386Regs, c *makeFuncImpl) {\n \t}\n \n \tv := out[0]\n-\tw := v.iword()\n \tswitch v.Kind() {\n \tcase Ptr, UnsafePointer:\n-\t\tregs.eax = uint32(uintptr(w))\n+\t\tregs.eax = uint32(uintptr(v.pointer()))\n \tcase Float32:\n-\t\tregs.st0 = float64(*(*float32)(unsafe.Pointer(w)))\n+\t\tregs.st0 = float64(*(*float32)(v.ptr))\n \t\tregs.sf = true\n \tcase Float64:\n-\t\tregs.st0 = *(*float64)(unsafe.Pointer(w))\n+\t\tregs.st0 = *(*float64)(v.ptr)\n \t\tregs.sf = true\n \tdefault:\n-\t\tregs.eax = uint32(loadScalar(unsafe.Pointer(w), v.typ.size))\n+\t\tregs.eax = uint32(loadScalar(v.ptr, v.typ.size))\n \t}\n }"}, {"sha": "7118951d1fd98c6624a9bf67cf80bee55b0394cf", "filename": "libgo/go/reflect/makefuncgo_amd64.go", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -363,9 +363,11 @@ argloop:\n \n \tif len(out) == 1 && ret2 == amd64NoClass {\n \t\tv := out[0]\n-\t\tw := v.iword()\n-\t\tif v.Kind() != Ptr && v.Kind() != UnsafePointer {\n-\t\t\tw = iword(loadScalar(unsafe.Pointer(w), v.typ.size))\n+\t\tvar w unsafe.Pointer\n+\t\tif v.Kind() == Ptr || v.Kind() == UnsafePointer {\n+\t\t\tw = v.pointer()\n+\t\t} else {\n+\t\t\tw = unsafe.Pointer(loadScalar(v.ptr, v.typ.size))\n \t\t}\n \t\tswitch ret1 {\n \t\tcase amd64Integer:"}, {"sha": "64081b9ea515567e5bccd4dd7ff931def396561d", "filename": "libgo/go/reflect/value.go", "status": "modified", "additions": 116, "deletions": 102, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fvalue.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Freflect%2Fvalue.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fvalue.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -216,52 +216,11 @@ func methodName() string {\n // bigger than a pointer, its word is a pointer to v's data.\n // Otherwise, its word holds the data stored\n // in its leading bytes (so is not a pointer).\n-// Because the value sometimes holds a pointer, we use\n-// unsafe.Pointer to represent it, so that if iword appears\n-// in a struct, the garbage collector knows that might be\n-// a pointer.\n-// TODO: get rid of all occurrences of iword (except in the interface decls below?)\n-// We want to get rid of the \"feature\" that an unsafe.Pointer is sometimes a pointer\n-// and sometimes a uintptr.\n+// This type is very dangerous for the garbage collector because\n+// it must be treated conservatively.  We try to never expose it\n+// to the GC here so that GC remains precise.\n type iword unsafe.Pointer\n \n-// Get an iword that represents this value.\n-// TODO: this function goes away at some point\n-func (v Value) iword() iword {\n-\tt := v.typ\n-\tif t == nil {\n-\t\treturn iword(nil)\n-\t}\n-\tif v.flag&flagIndir != 0 {\n-\t\tif v.kind() != Ptr && v.kind() != UnsafePointer {\n-\t\t\treturn iword(v.ptr)\n-\t\t}\n-\t\t// Have indirect but want direct word.\n-\t\tif t.pointers() {\n-\t\t\treturn iword(*(*unsafe.Pointer)(v.ptr))\n-\t\t}\n-\t\treturn iword(loadScalar(v.ptr, v.typ.size))\n-\t}\n-\tif t.pointers() {\n-\t\treturn iword(v.ptr)\n-\t}\n-\t// return iword(v.scalar)\n-\tpanic(\"reflect: missing flagIndir\")\n-}\n-\n-// Build a Value from a type/iword pair, plus any extra flags.\n-// TODO: this function goes away at some point\n-func fromIword(t *rtype, w iword, fl flag) Value {\n-\tfl |= flag(t.Kind()) << flagKindShift\n-\tif t.Kind() != Ptr && t.Kind() != UnsafePointer {\n-\t\treturn Value{t, unsafe.Pointer(w) /* 0, */, fl | flagIndir}\n-\t} else if t.pointers() {\n-\t\treturn Value{t, unsafe.Pointer(w) /* 0, */, fl}\n-\t} else {\n-\t\tpanic(\"reflect: can't reach\")\n-\t}\n-}\n-\n // loadScalar loads n bytes at p from memory into a uintptr\n // that forms the second word of an interface.  The data\n // must be non-pointer in nature.\n@@ -473,11 +432,14 @@ func (v Value) call(op string, in []Value) []Value {\n \t// Get function pointer, type.\n \tt := v.typ\n \tvar (\n-\t\tfn   unsafe.Pointer\n-\t\trcvr iword\n+\t\tfn       unsafe.Pointer\n+\t\trcvr     Value\n+\t\trcvrtype *rtype\n \t)\n \tif v.flag&flagMethod != 0 {\n-\t\tt, fn, rcvr = methodReceiver(op, v, int(v.flag)>>flagMethodShift)\n+\t\trcvrtype = t\n+\t\trcvr = v\n+\t\tt, fn = methodReceiver(op, v, int(v.flag)>>flagMethodShift)\n \t} else if v.flag&flagIndir != 0 {\n \t\tfn = *(*unsafe.Pointer)(v.ptr)\n \t} else {\n@@ -564,8 +526,14 @@ func (v Value) call(op string, in []Value) []Value {\n \toff := 0\n \tif v.flag&flagMethod != 0 {\n \t\t// Hard-wired first argument.\n-\t\tp := new(iword)\n-\t\t*p = rcvr\n+\t\tp := new(unsafe.Pointer)\n+\t\tif rcvr.typ.Kind() == Interface {\n+\t\t\t*p = unsafe.Pointer((*nonEmptyInterface)(v.ptr).word)\n+\t\t} else if rcvr.typ.Kind() == Ptr || rcvr.typ.Kind() == UnsafePointer {\n+\t\t\t*p = rcvr.pointer()\n+\t\t} else {\n+\t\t\t*p = rcvr.ptr\n+\t\t}\n \t\tparams[0] = unsafe.Pointer(p)\n \t\toff = 1\n \t}\n@@ -614,7 +582,9 @@ func (v Value) call(op string, in []Value) []Value {\n // described by v. The Value v may or may not have the\n // flagMethod bit set, so the kind cached in v.flag should\n // not be used.\n-func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Pointer, rcvr iword) {\n+// The return value t gives the method type signature (without the receiver).\n+// The return value fn is a pointer to the method code.\n+func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Pointer) {\n \ti := methodIndex\n \tif v.typ.Kind() == Interface {\n \t\ttt := (*interfaceType)(unsafe.Pointer(v.typ))\n@@ -625,13 +595,12 @@ func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Po\n \t\tif m.pkgPath != nil {\n \t\t\tpanic(\"reflect: \" + op + \" of unexported method\")\n \t\t}\n-\t\tt = m.typ\n \t\tiface := (*nonEmptyInterface)(v.ptr)\n \t\tif iface.itab == nil {\n \t\t\tpanic(\"reflect: \" + op + \" of method on nil interface value\")\n \t\t}\n \t\tfn = unsafe.Pointer(&iface.itab.fun[i])\n-\t\trcvr = iface.word\n+\t\tt = m.typ\n \t} else {\n \t\tut := v.typ.uncommon()\n \t\tif ut == nil || i < 0 || i >= len(ut.methods) {\n@@ -643,15 +612,34 @@ func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Po\n \t\t}\n \t\tfn = unsafe.Pointer(&m.tfn)\n \t\tt = m.mtyp\n-\t\t// Can't call iword here, because it checks v.kind,\n-\t\t// and that is always Func.\n-\t\tif v.flag&flagIndir != 0 && (v.typ.Kind() == Ptr || v.typ.Kind() == UnsafePointer) {\n-\t\t\trcvr = iword(loadScalar(v.ptr, v.typ.size))\n+\t}\n+\treturn\n+}\n+\n+// v is a method receiver.  Store at p the word which is used to\n+// encode that receiver at the start of the argument list.\n+// Reflect uses the \"interface\" calling convention for\n+// methods, which always uses one word to record the receiver.\n+func storeRcvr(v Value, p unsafe.Pointer) {\n+\tt := v.typ\n+\tif t.Kind() == Interface {\n+\t\t// the interface data word becomes the receiver word\n+\t\tiface := (*nonEmptyInterface)(v.ptr)\n+\t\t*(*unsafe.Pointer)(p) = unsafe.Pointer(iface.word)\n+\t} else if v.flag&flagIndir != 0 {\n+\t\tif t.size > ptrSize {\n+\t\t\t*(*unsafe.Pointer)(p) = v.ptr\n+\t\t} else if t.pointers() {\n+\t\t\t*(*unsafe.Pointer)(p) = *(*unsafe.Pointer)(v.ptr)\n \t\t} else {\n-\t\t\trcvr = iword(v.ptr)\n+\t\t\t*(*uintptr)(p) = loadScalar(v.ptr, t.size)\n \t\t}\n+\t} else if t.pointers() {\n+\t\t*(*unsafe.Pointer)(p) = v.ptr\n+\t} else {\n+\t\t// *(*uintptr)(p) = v.scalar\n+\t\tpanic(\"reflect: missing flagIndir\")\n \t}\n-\treturn\n }\n \n // align returns the result of rounding x up to a multiple of n.\n@@ -1000,24 +988,6 @@ func valueInterface(v Value, safe bool) interface{} {\n \t\t})(v.ptr)\n \t}\n \n-\t// Non-interface value.\n-\tvar eface emptyInterface\n-\teface.typ = toType(v.typ).common()\n-\teface.word = v.iword()\n-\n-\t// Don't need to allocate if v is not addressable or fits in one word.\n-\tif v.flag&flagAddr != 0 && v.kind() != Ptr && v.kind() != UnsafePointer {\n-\t\t// eface.word is a pointer to the actual data,\n-\t\t// which might be changed.  We need to return\n-\t\t// a pointer to unchanging data, so make a copy.\n-\t\tptr := unsafe_New(v.typ)\n-\t\tmemmove(ptr, unsafe.Pointer(eface.word), v.typ.size)\n-\t\teface.word = iword(ptr)\n-\t}\n-\n-\tif v.flag&flagIndir == 0 && v.kind() != Ptr && v.kind() != UnsafePointer {\n-\t\tpanic(\"missing flagIndir\")\n-\t}\n \t// TODO: pass safe to packEface so we don't need to copy if safe==true?\n \treturn packEface(v)\n }\n@@ -1035,8 +1005,13 @@ func (v Value) InterfaceData() [2]uintptr {\n \treturn *(*[2]uintptr)(v.ptr)\n }\n \n-// IsNil returns true if v is a nil value.\n-// It panics if v's Kind is not Chan, Func, Interface, Map, Ptr, or Slice.\n+// IsNil reports whether its argument v is nil. The argument must be\n+// a chan, func, interface, map, pointer, or slice value; if it is\n+// not, IsNil panics. Note that IsNil is not always equivalent to a\n+// regular comparison with nil in Go. For example, if v was created\n+// by calling ValueOf with an uninitialized interface variable i,\n+// i==nil will be true but v.IsNil will panic as v will be the zero\n+// Value.\n func (v Value) IsNil() bool {\n \tk := v.kind()\n \tswitch k {\n@@ -1366,9 +1341,19 @@ func (v Value) recv(nb bool) (val Value, ok bool) {\n \tif ChanDir(tt.dir)&RecvDir == 0 {\n \t\tpanic(\"reflect: recv on send-only channel\")\n \t}\n-\tword, selected, ok := chanrecv(v.typ, v.pointer(), nb)\n-\tif selected {\n-\t\tval = fromIword(tt.elem, word, 0)\n+\tt := tt.elem\n+\tval = Value{t, nil /* 0, */, flag(t.Kind()) << flagKindShift}\n+\tvar p unsafe.Pointer\n+\tif t.Kind() != Ptr && t.Kind() != UnsafePointer {\n+\t\tp = unsafe_New(t)\n+\t\tval.ptr = p\n+\t\tval.flag |= flagIndir\n+\t} else {\n+\t\tp = unsafe.Pointer(&val.ptr)\n+\t}\n+\tselected, ok := chanrecv(v.typ, v.pointer(), nb, p)\n+\tif !selected {\n+\t\tval = Value{}\n \t}\n \treturn\n }\n@@ -1391,7 +1376,16 @@ func (v Value) send(x Value, nb bool) (selected bool) {\n \t}\n \tx.mustBeExported()\n \tx = x.assignTo(\"reflect.Value.Send\", tt.elem, nil)\n-\treturn chansend(v.typ, v.pointer(), x.iword(), nb)\n+\tvar p unsafe.Pointer\n+\tif x.flag&flagIndir != 0 {\n+\t\tp = x.ptr\n+\t} else if x.typ.pointers() {\n+\t\tp = unsafe.Pointer(&x.ptr)\n+\t} else {\n+\t\t// p = unsafe.Pointer(&x.scalar)\n+\t\tpanic(\"reflect: missing flagIndir\")\n+\t}\n+\treturn chansend(v.typ, v.pointer(), p, nb)\n }\n \n // Set assigns x to the value v.\n@@ -1714,9 +1708,9 @@ func (v Value) String() string {\n \n // TryRecv attempts to receive a value from the channel v but will not block.\n // It panics if v's Kind is not Chan.\n-// If the receive cannot finish without blocking, x is the zero Value.\n-// The boolean ok is true if the value x corresponds to a send\n-// on the channel, false if it is a zero value received because the channel is closed.\n+// If the receive delivers a value, x is the transferred value and ok is true.\n+// If the receive cannot finish without blocking, x is the zero Value and ok is false.\n+// If the channel is closed, x is the zero value for the channel's element type and ok is false.\n func (v Value) TryRecv() (x Value, ok bool) {\n \tv.mustBe(Chan)\n \tv.mustBeExported()\n@@ -1964,17 +1958,18 @@ func Copy(dst, src Value) int {\n // A runtimeSelect is a single case passed to rselect.\n // This must match ../runtime/chan.c:/runtimeSelect\n type runtimeSelect struct {\n-\tdir uintptr // 0, SendDir, or RecvDir\n-\ttyp *rtype  // channel type\n-\tch  iword   // interface word for channel\n-\tval iword   // interface word for value (for SendDir)\n+\tdir uintptr        // 0, SendDir, or RecvDir\n+\ttyp *rtype         // channel type\n+\tch  unsafe.Pointer // channel\n+\tval unsafe.Pointer // ptr to data (SendDir) or ptr to receive buffer (RecvDir)\n }\n \n-// rselect runs a select. It returns the index of the chosen case,\n-// and if the case was a receive, the interface word of the received\n-// value and the conventional OK bool to indicate whether the receive\n-// corresponds to a sent value.\n-func rselect([]runtimeSelect) (chosen int, recv iword, recvOK bool)\n+// rselect runs a select.  It returns the index of the chosen case.\n+// If the case was a receive, val is filled in with the received value.\n+// The conventional OK bool indicates whether the receive corresponds\n+// to a sent value.\n+//go:noescape\n+func rselect([]runtimeSelect) (chosen int, recvOK bool)\n \n // A SelectDir describes the communication direction of a select case.\n type SelectDir int\n@@ -2054,15 +2049,22 @@ func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool) {\n \t\t\tif ChanDir(tt.dir)&SendDir == 0 {\n \t\t\t\tpanic(\"reflect.Select: SendDir case using recv-only channel\")\n \t\t\t}\n-\t\t\trc.ch = *(*iword)(ch.iword())\n+\t\t\trc.ch = ch.pointer()\n \t\t\trc.typ = &tt.rtype\n \t\t\tv := c.Send\n \t\t\tif !v.IsValid() {\n \t\t\t\tpanic(\"reflect.Select: SendDir case missing Send value\")\n \t\t\t}\n \t\t\tv.mustBeExported()\n \t\t\tv = v.assignTo(\"reflect.Select\", tt.elem, nil)\n-\t\t\trc.val = v.iword()\n+\t\t\tif v.flag&flagIndir != 0 {\n+\t\t\t\trc.val = v.ptr\n+\t\t\t} else if v.typ.pointers() {\n+\t\t\t\trc.val = unsafe.Pointer(&v.ptr)\n+\t\t\t} else {\n+\t\t\t\t// rc.val = unsafe.Pointer(&v.scalar)\n+\t\t\t\tpanic(\"reflect: missing flagIndir\")\n+\t\t\t}\n \n \t\tcase SelectRecv:\n \t\t\tif c.Send.IsValid() {\n@@ -2075,18 +2077,26 @@ func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool) {\n \t\t\tch.mustBe(Chan)\n \t\t\tch.mustBeExported()\n \t\t\ttt := (*chanType)(unsafe.Pointer(ch.typ))\n-\t\t\trc.typ = &tt.rtype\n \t\t\tif ChanDir(tt.dir)&RecvDir == 0 {\n \t\t\t\tpanic(\"reflect.Select: RecvDir case using send-only channel\")\n \t\t\t}\n-\t\t\trc.ch = *(*iword)(ch.iword())\n+\t\t\trc.ch = ch.pointer()\n+\t\t\trc.typ = &tt.rtype\n+\t\t\trc.val = unsafe_New(tt.elem)\n \t\t}\n \t}\n \n-\tchosen, word, recvOK := rselect(runcases)\n+\tchosen, recvOK = rselect(runcases)\n \tif runcases[chosen].dir == uintptr(SelectRecv) {\n \t\ttt := (*chanType)(unsafe.Pointer(runcases[chosen].typ))\n-\t\trecv = fromIword(tt.elem, word, 0)\n+\t\tt := tt.elem\n+\t\tp := runcases[chosen].val\n+\t\tfl := flag(t.Kind()) << flagKindShift\n+\t\tif t.Kind() != Ptr && t.Kind() != UnsafePointer {\n+\t\t\trecv = Value{t, p /* 0, */, fl | flagIndir}\n+\t\t} else {\n+\t\t\trecv = Value{t, *(*unsafe.Pointer)(p) /* 0, */, fl}\n+\t\t}\n \t}\n \treturn chosen, recv, recvOK\n }\n@@ -2539,8 +2549,12 @@ func cvtI2I(v Value, typ Type) Value {\n func chancap(ch unsafe.Pointer) int\n func chanclose(ch unsafe.Pointer)\n func chanlen(ch unsafe.Pointer) int\n-func chanrecv(t *rtype, ch unsafe.Pointer, nb bool) (val iword, selected, received bool)\n-func chansend(t *rtype, ch unsafe.Pointer, val iword, nb bool) bool\n+\n+//go:noescape\n+func chanrecv(t *rtype, ch unsafe.Pointer, nb bool, val unsafe.Pointer) (selected, received bool)\n+\n+//go:noescape\n+func chansend(t *rtype, ch unsafe.Pointer, val unsafe.Pointer, nb bool) bool\n \n func makechan(typ *rtype, size uint64) (ch unsafe.Pointer)\n func makemap(t *rtype) (m unsafe.Pointer)"}, {"sha": "6ce5902a5aa1311d5ac31b6ab03af99e4992e5ba", "filename": "libgo/go/regexp/regexp.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fregexp%2Fregexp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fregexp%2Fregexp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fregexp%2Fregexp.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -70,7 +70,6 @@ import (\n var debug = false\n \n // Regexp is the representation of a compiled regular expression.\n-// The public interface is entirely through methods.\n // A Regexp is safe for concurrent use by multiple goroutines.\n type Regexp struct {\n \t// read-only after Compile"}, {"sha": "f3089294c6aa782d2d0acb055fd0476728336988", "filename": "libgo/go/regexp/syntax/parse_test.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fregexp%2Fsyntax%2Fparse_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fregexp%2Fsyntax%2Fparse_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fregexp%2Fsyntax%2Fparse_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -100,12 +100,12 @@ var parseTests = []parseTest{\n \t{`\\P{Braille}`, `cc{0x0-0x27ff 0x2900-0x10ffff}`},\n \t{`\\p{^Braille}`, `cc{0x0-0x27ff 0x2900-0x10ffff}`},\n \t{`\\P{^Braille}`, `cc{0x2800-0x28ff}`},\n-\t{`\\pZ`, `cc{0x20 0xa0 0x1680 0x180e 0x2000-0x200a 0x2028-0x2029 0x202f 0x205f 0x3000}`},\n+\t{`\\pZ`, `cc{0x20 0xa0 0x1680 0x2000-0x200a 0x2028-0x2029 0x202f 0x205f 0x3000}`},\n \t{`[\\p{Braille}]`, `cc{0x2800-0x28ff}`},\n \t{`[\\P{Braille}]`, `cc{0x0-0x27ff 0x2900-0x10ffff}`},\n \t{`[\\p{^Braille}]`, `cc{0x0-0x27ff 0x2900-0x10ffff}`},\n \t{`[\\P{^Braille}]`, `cc{0x2800-0x28ff}`},\n-\t{`[\\pZ]`, `cc{0x20 0xa0 0x1680 0x180e 0x2000-0x200a 0x2028-0x2029 0x202f 0x205f 0x3000}`},\n+\t{`[\\pZ]`, `cc{0x20 0xa0 0x1680 0x2000-0x200a 0x2028-0x2029 0x202f 0x205f 0x3000}`},\n \t{`\\p{Lu}`, mkCharClass(unicode.IsUpper)},\n \t{`[\\p{Lu}]`, mkCharClass(unicode.IsUpper)},\n \t{`(?i)[\\p{Lu}]`, mkCharClass(isUpperFold)},"}, {"sha": "a67dc9b494829fe68b529485d8a1b5e03ca4e528", "filename": "libgo/go/runtime/append_test.go", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fappend_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fappend_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fappend_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -19,6 +19,25 @@ func BenchmarkAppend(b *testing.B) {\n \t}\n }\n \n+func BenchmarkAppendGrowByte(b *testing.B) {\n+\tfor i := 0; i < b.N; i++ {\n+\t\tvar x []byte\n+\t\tfor j := 0; j < 1<<20; j++ {\n+\t\t\tx = append(x, byte(j))\n+\t\t}\n+\t}\n+}\n+\n+func BenchmarkAppendGrowString(b *testing.B) {\n+\tvar s string\n+\tfor i := 0; i < b.N; i++ {\n+\t\tvar x []string\n+\t\tfor j := 0; j < 1<<20; j++ {\n+\t\t\tx = append(x, s)\n+\t\t}\n+\t}\n+}\n+\n func benchmarkAppendBytes(b *testing.B, length int) {\n \tb.StopTimer()\n \tx := make([]byte, 0, N)"}, {"sha": "782176c883639152035cbfe0a8da8c180043c935", "filename": "libgo/go/runtime/chan_test.go", "status": "modified", "additions": 489, "deletions": 136, "changes": 625, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fchan_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fchan_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fchan_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -9,8 +9,327 @@ import (\n \t\"sync\"\n \t\"sync/atomic\"\n \t\"testing\"\n+\t\"time\"\n )\n \n+func TestChan(t *testing.T) {\n+\tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(4))\n+\tN := 200\n+\tif testing.Short() {\n+\t\tN = 20\n+\t}\n+\tfor chanCap := 0; chanCap < N; chanCap++ {\n+\t\t{\n+\t\t\t// Ensure that receive from empty chan blocks.\n+\t\t\tc := make(chan int, chanCap)\n+\t\t\trecv1 := false\n+\t\t\tgo func() {\n+\t\t\t\t_ = <-c\n+\t\t\t\trecv1 = true\n+\t\t\t}()\n+\t\t\trecv2 := false\n+\t\t\tgo func() {\n+\t\t\t\t_, _ = <-c\n+\t\t\t\trecv2 = true\n+\t\t\t}()\n+\t\t\ttime.Sleep(time.Millisecond)\n+\t\t\tif recv1 || recv2 {\n+\t\t\t\tt.Fatalf(\"chan[%d]: receive from empty chan\", chanCap)\n+\t\t\t}\n+\t\t\t// Ensure that non-blocking receive does not block.\n+\t\t\tselect {\n+\t\t\tcase _ = <-c:\n+\t\t\t\tt.Fatalf(\"chan[%d]: receive from empty chan\", chanCap)\n+\t\t\tdefault:\n+\t\t\t}\n+\t\t\tselect {\n+\t\t\tcase _, _ = <-c:\n+\t\t\t\tt.Fatalf(\"chan[%d]: receive from empty chan\", chanCap)\n+\t\t\tdefault:\n+\t\t\t}\n+\t\t\tc <- 0\n+\t\t\tc <- 0\n+\t\t}\n+\n+\t\t{\n+\t\t\t// Ensure that send to full chan blocks.\n+\t\t\tc := make(chan int, chanCap)\n+\t\t\tfor i := 0; i < chanCap; i++ {\n+\t\t\t\tc <- i\n+\t\t\t}\n+\t\t\tsent := uint32(0)\n+\t\t\tgo func() {\n+\t\t\t\tc <- 0\n+\t\t\t\tatomic.StoreUint32(&sent, 1)\n+\t\t\t}()\n+\t\t\ttime.Sleep(time.Millisecond)\n+\t\t\tif atomic.LoadUint32(&sent) != 0 {\n+\t\t\t\tt.Fatalf(\"chan[%d]: send to full chan\", chanCap)\n+\t\t\t}\n+\t\t\t// Ensure that non-blocking send does not block.\n+\t\t\tselect {\n+\t\t\tcase c <- 0:\n+\t\t\t\tt.Fatalf(\"chan[%d]: send to full chan\", chanCap)\n+\t\t\tdefault:\n+\t\t\t}\n+\t\t\t<-c\n+\t\t}\n+\n+\t\t{\n+\t\t\t// Ensure that we receive 0 from closed chan.\n+\t\t\tc := make(chan int, chanCap)\n+\t\t\tfor i := 0; i < chanCap; i++ {\n+\t\t\t\tc <- i\n+\t\t\t}\n+\t\t\tclose(c)\n+\t\t\tfor i := 0; i < chanCap; i++ {\n+\t\t\t\tv := <-c\n+\t\t\t\tif v != i {\n+\t\t\t\t\tt.Fatalf(\"chan[%d]: received %v, expected %v\", chanCap, v, i)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif v := <-c; v != 0 {\n+\t\t\t\tt.Fatalf(\"chan[%d]: received %v, expected %v\", chanCap, v, 0)\n+\t\t\t}\n+\t\t\tif v, ok := <-c; v != 0 || ok {\n+\t\t\t\tt.Fatalf(\"chan[%d]: received %v/%v, expected %v/%v\", chanCap, v, ok, 0, false)\n+\t\t\t}\n+\t\t}\n+\n+\t\t{\n+\t\t\t// Ensure that close unblocks receive.\n+\t\t\tc := make(chan int, chanCap)\n+\t\t\tdone := make(chan bool)\n+\t\t\tgo func() {\n+\t\t\t\tv, ok := <-c\n+\t\t\t\tdone <- v == 0 && ok == false\n+\t\t\t}()\n+\t\t\ttime.Sleep(time.Millisecond)\n+\t\t\tclose(c)\n+\t\t\tif !<-done {\n+\t\t\t\tt.Fatalf(\"chan[%d]: received non zero from closed chan\", chanCap)\n+\t\t\t}\n+\t\t}\n+\n+\t\t{\n+\t\t\t// Send 100 integers,\n+\t\t\t// ensure that we receive them non-corrupted in FIFO order.\n+\t\t\tc := make(chan int, chanCap)\n+\t\t\tgo func() {\n+\t\t\t\tfor i := 0; i < 100; i++ {\n+\t\t\t\t\tc <- i\n+\t\t\t\t}\n+\t\t\t}()\n+\t\t\tfor i := 0; i < 100; i++ {\n+\t\t\t\tv := <-c\n+\t\t\t\tif v != i {\n+\t\t\t\t\tt.Fatalf(\"chan[%d]: received %v, expected %v\", chanCap, v, i)\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// Same, but using recv2.\n+\t\t\tgo func() {\n+\t\t\t\tfor i := 0; i < 100; i++ {\n+\t\t\t\t\tc <- i\n+\t\t\t\t}\n+\t\t\t}()\n+\t\t\tfor i := 0; i < 100; i++ {\n+\t\t\t\tv, ok := <-c\n+\t\t\t\tif !ok {\n+\t\t\t\t\tt.Fatalf(\"chan[%d]: receive failed, expected %v\", chanCap, i)\n+\t\t\t\t}\n+\t\t\t\tif v != i {\n+\t\t\t\t\tt.Fatalf(\"chan[%d]: received %v, expected %v\", chanCap, v, i)\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// Send 1000 integers in 4 goroutines,\n+\t\t\t// ensure that we receive what we send.\n+\t\t\tconst P = 4\n+\t\t\tconst L = 1000\n+\t\t\tfor p := 0; p < P; p++ {\n+\t\t\t\tgo func() {\n+\t\t\t\t\tfor i := 0; i < L; i++ {\n+\t\t\t\t\t\tc <- i\n+\t\t\t\t\t}\n+\t\t\t\t}()\n+\t\t\t}\n+\t\t\tdone := make(chan map[int]int)\n+\t\t\tfor p := 0; p < P; p++ {\n+\t\t\t\tgo func() {\n+\t\t\t\t\trecv := make(map[int]int)\n+\t\t\t\t\tfor i := 0; i < L; i++ {\n+\t\t\t\t\t\tv := <-c\n+\t\t\t\t\t\trecv[v] = recv[v] + 1\n+\t\t\t\t\t}\n+\t\t\t\t\tdone <- recv\n+\t\t\t\t}()\n+\t\t\t}\n+\t\t\trecv := make(map[int]int)\n+\t\t\tfor p := 0; p < P; p++ {\n+\t\t\t\tfor k, v := range <-done {\n+\t\t\t\t\trecv[k] = recv[k] + v\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif len(recv) != L {\n+\t\t\t\tt.Fatalf(\"chan[%d]: received %v values, expected %v\", chanCap, len(recv), L)\n+\t\t\t}\n+\t\t\tfor _, v := range recv {\n+\t\t\t\tif v != P {\n+\t\t\t\t\tt.Fatalf(\"chan[%d]: received %v values, expected %v\", chanCap, v, P)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\t{\n+\t\t\t// Test len/cap.\n+\t\t\tc := make(chan int, chanCap)\n+\t\t\tif len(c) != 0 || cap(c) != chanCap {\n+\t\t\t\tt.Fatalf(\"chan[%d]: bad len/cap, expect %v/%v, got %v/%v\", chanCap, 0, chanCap, len(c), cap(c))\n+\t\t\t}\n+\t\t\tfor i := 0; i < chanCap; i++ {\n+\t\t\t\tc <- i\n+\t\t\t}\n+\t\t\tif len(c) != chanCap || cap(c) != chanCap {\n+\t\t\t\tt.Fatalf(\"chan[%d]: bad len/cap, expect %v/%v, got %v/%v\", chanCap, chanCap, chanCap, len(c), cap(c))\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+}\n+\n+func TestSelfSelect(t *testing.T) {\n+\t// Ensure that send/recv on the same chan in select\n+\t// does not crash nor deadlock.\n+\tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(2))\n+\tfor _, chanCap := range []int{0, 10} {\n+\t\tvar wg sync.WaitGroup\n+\t\twg.Add(2)\n+\t\tc := make(chan int, chanCap)\n+\t\tfor p := 0; p < 2; p++ {\n+\t\t\tp := p\n+\t\t\tgo func() {\n+\t\t\t\tdefer wg.Done()\n+\t\t\t\tfor i := 0; i < 1000; i++ {\n+\t\t\t\t\tif p == 0 || i%2 == 0 {\n+\t\t\t\t\t\tselect {\n+\t\t\t\t\t\tcase c <- p:\n+\t\t\t\t\t\tcase v := <-c:\n+\t\t\t\t\t\t\tif chanCap == 0 && v == p {\n+\t\t\t\t\t\t\t\tt.Fatalf(\"self receive\")\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tselect {\n+\t\t\t\t\t\tcase v := <-c:\n+\t\t\t\t\t\t\tif chanCap == 0 && v == p {\n+\t\t\t\t\t\t\t\tt.Fatalf(\"self receive\")\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\tcase c <- p:\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}()\n+\t\t}\n+\t\twg.Wait()\n+\t}\n+}\n+\n+func TestSelectStress(t *testing.T) {\n+\tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(10))\n+\tvar c [4]chan int\n+\tc[0] = make(chan int)\n+\tc[1] = make(chan int)\n+\tc[2] = make(chan int, 2)\n+\tc[3] = make(chan int, 3)\n+\tN := int(1e5)\n+\tif testing.Short() {\n+\t\tN /= 10\n+\t}\n+\t// There are 4 goroutines that send N values on each of the chans,\n+\t// + 4 goroutines that receive N values on each of the chans,\n+\t// + 1 goroutine that sends N values on each of the chans in a single select,\n+\t// + 1 goroutine that receives N values on each of the chans in a single select.\n+\t// All these sends, receives and selects interact chaotically at runtime,\n+\t// but we are careful that this whole construct does not deadlock.\n+\tvar wg sync.WaitGroup\n+\twg.Add(10)\n+\tfor k := 0; k < 4; k++ {\n+\t\tk := k\n+\t\tgo func() {\n+\t\t\tfor i := 0; i < N; i++ {\n+\t\t\t\tc[k] <- 0\n+\t\t\t}\n+\t\t\twg.Done()\n+\t\t}()\n+\t\tgo func() {\n+\t\t\tfor i := 0; i < N; i++ {\n+\t\t\t\t<-c[k]\n+\t\t\t}\n+\t\t\twg.Done()\n+\t\t}()\n+\t}\n+\tgo func() {\n+\t\tvar n [4]int\n+\t\tc1 := c\n+\t\tfor i := 0; i < 4*N; i++ {\n+\t\t\tselect {\n+\t\t\tcase c1[3] <- 0:\n+\t\t\t\tn[3]++\n+\t\t\t\tif n[3] == N {\n+\t\t\t\t\tc1[3] = nil\n+\t\t\t\t}\n+\t\t\tcase c1[2] <- 0:\n+\t\t\t\tn[2]++\n+\t\t\t\tif n[2] == N {\n+\t\t\t\t\tc1[2] = nil\n+\t\t\t\t}\n+\t\t\tcase c1[0] <- 0:\n+\t\t\t\tn[0]++\n+\t\t\t\tif n[0] == N {\n+\t\t\t\t\tc1[0] = nil\n+\t\t\t\t}\n+\t\t\tcase c1[1] <- 0:\n+\t\t\t\tn[1]++\n+\t\t\t\tif n[1] == N {\n+\t\t\t\t\tc1[1] = nil\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\twg.Done()\n+\t}()\n+\tgo func() {\n+\t\tvar n [4]int\n+\t\tc1 := c\n+\t\tfor i := 0; i < 4*N; i++ {\n+\t\t\tselect {\n+\t\t\tcase <-c1[0]:\n+\t\t\t\tn[0]++\n+\t\t\t\tif n[0] == N {\n+\t\t\t\t\tc1[0] = nil\n+\t\t\t\t}\n+\t\t\tcase <-c1[1]:\n+\t\t\t\tn[1]++\n+\t\t\t\tif n[1] == N {\n+\t\t\t\t\tc1[1] = nil\n+\t\t\t\t}\n+\t\t\tcase <-c1[2]:\n+\t\t\t\tn[2]++\n+\t\t\t\tif n[2] == N {\n+\t\t\t\t\tc1[2] = nil\n+\t\t\t\t}\n+\t\t\tcase <-c1[3]:\n+\t\t\t\tn[3]++\n+\t\t\t\tif n[3] == N {\n+\t\t\t\t\tc1[3] = nil\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\twg.Done()\n+\t}()\n+\twg.Wait()\n+}\n+\n func TestChanSendInterface(t *testing.T) {\n \ttype mt struct{}\n \tm := &mt{}\n@@ -29,34 +348,35 @@ func TestChanSendInterface(t *testing.T) {\n \n func TestPseudoRandomSend(t *testing.T) {\n \tn := 100\n-\tc := make(chan int)\n-\tl := make([]int, n)\n-\tvar m sync.Mutex\n-\tm.Lock()\n-\tgo func() {\n+\tfor _, chanCap := range []int{0, n} {\n+\t\tc := make(chan int, chanCap)\n+\t\tl := make([]int, n)\n+\t\tvar m sync.Mutex\n+\t\tm.Lock()\n+\t\tgo func() {\n+\t\t\tfor i := 0; i < n; i++ {\n+\t\t\t\truntime.Gosched()\n+\t\t\t\tl[i] = <-c\n+\t\t\t}\n+\t\t\tm.Unlock()\n+\t\t}()\n \t\tfor i := 0; i < n; i++ {\n-\t\t\truntime.Gosched()\n-\t\t\tl[i] = <-c\n+\t\t\tselect {\n+\t\t\tcase c <- 1:\n+\t\t\tcase c <- 0:\n+\t\t\t}\n \t\t}\n-\t\tm.Unlock()\n-\t}()\n-\tfor i := 0; i < n; i++ {\n-\t\tselect {\n-\t\tcase c <- 0:\n-\t\tcase c <- 1:\n+\t\tm.Lock() // wait\n+\t\tn0 := 0\n+\t\tn1 := 0\n+\t\tfor _, i := range l {\n+\t\t\tn0 += (i + 1) % 2\n+\t\t\tn1 += i\n \t\t}\n-\t}\n-\tm.Lock() // wait\n-\tn0 := 0\n-\tn1 := 0\n-\tfor _, i := range l {\n-\t\tn0 += (i + 1) % 2\n-\t\tn1 += i\n-\t\tif n0 > n/10 && n1 > n/10 {\n-\t\t\treturn\n+\t\tif n0 <= n/10 || n1 <= n/10 {\n+\t\t\tt.Errorf(\"Want pseudorandom, got %d zeros and %d ones (chan cap %d)\", n0, n1, chanCap)\n \t\t}\n \t}\n-\tt.Errorf(\"Want pseudo random, got %d zeros and %d ones\", n0, n1)\n }\n \n func TestMultiConsumer(t *testing.T) {\n@@ -110,23 +430,19 @@ func TestMultiConsumer(t *testing.T) {\n \t}\n }\n \n-func BenchmarkSelectUncontended(b *testing.B) {\n+func BenchmarkChanNonblocking(b *testing.B) {\n \tconst CallsPerSched = 1000\n \tprocs := runtime.GOMAXPROCS(-1)\n \tN := int32(b.N / CallsPerSched)\n \tc := make(chan bool, procs)\n+\tmyc := make(chan int)\n \tfor p := 0; p < procs; p++ {\n \t\tgo func() {\n-\t\t\tmyc1 := make(chan int, 1)\n-\t\t\tmyc2 := make(chan int, 1)\n-\t\t\tmyc1 <- 0\n \t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n \t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n \t\t\t\t\tselect {\n-\t\t\t\t\tcase <-myc1:\n-\t\t\t\t\t\tmyc2 <- 0\n-\t\t\t\t\tcase <-myc2:\n-\t\t\t\t\t\tmyc1 <- 0\n+\t\t\t\t\tcase <-myc:\n+\t\t\t\t\tdefault:\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n@@ -138,119 +454,94 @@ func BenchmarkSelectUncontended(b *testing.B) {\n \t}\n }\n \n+func BenchmarkSelectUncontended(b *testing.B) {\n+\tb.RunParallel(func(pb *testing.PB) {\n+\t\tmyc1 := make(chan int, 1)\n+\t\tmyc2 := make(chan int, 1)\n+\t\tmyc1 <- 0\n+\t\tfor pb.Next() {\n+\t\t\tselect {\n+\t\t\tcase <-myc1:\n+\t\t\t\tmyc2 <- 0\n+\t\t\tcase <-myc2:\n+\t\t\t\tmyc1 <- 0\n+\t\t\t}\n+\t\t}\n+\t})\n+}\n+\n func BenchmarkSelectContended(b *testing.B) {\n-\tconst CallsPerSched = 1000\n-\tprocs := runtime.GOMAXPROCS(-1)\n-\tN := int32(b.N / CallsPerSched)\n-\tc := make(chan bool, procs)\n+\tprocs := runtime.GOMAXPROCS(0)\n \tmyc1 := make(chan int, procs)\n \tmyc2 := make(chan int, procs)\n-\tfor p := 0; p < procs; p++ {\n+\tb.RunParallel(func(pb *testing.PB) {\n \t\tmyc1 <- 0\n-\t\tgo func() {\n-\t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n-\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\tselect {\n-\t\t\t\t\tcase <-myc1:\n-\t\t\t\t\t\tmyc2 <- 0\n-\t\t\t\t\tcase <-myc2:\n-\t\t\t\t\t\tmyc1 <- 0\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\tfor pb.Next() {\n+\t\t\tselect {\n+\t\t\tcase <-myc1:\n+\t\t\t\tmyc2 <- 0\n+\t\t\tcase <-myc2:\n+\t\t\t\tmyc1 <- 0\n \t\t\t}\n-\t\t\tc <- true\n-\t\t}()\n-\t}\n-\tfor p := 0; p < procs; p++ {\n-\t\t<-c\n-\t}\n+\t\t}\n+\t})\n }\n \n func BenchmarkSelectNonblock(b *testing.B) {\n-\tconst CallsPerSched = 1000\n-\tprocs := runtime.GOMAXPROCS(-1)\n-\tN := int32(b.N / CallsPerSched)\n-\tc := make(chan bool, procs)\n-\tfor p := 0; p < procs; p++ {\n-\t\tgo func() {\n-\t\t\tmyc1 := make(chan int)\n-\t\t\tmyc2 := make(chan int)\n-\t\t\tmyc3 := make(chan int, 1)\n-\t\t\tmyc4 := make(chan int, 1)\n-\t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n-\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\tselect {\n-\t\t\t\t\tcase <-myc1:\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t}\n-\t\t\t\t\tselect {\n-\t\t\t\t\tcase myc2 <- 0:\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t}\n-\t\t\t\t\tselect {\n-\t\t\t\t\tcase <-myc3:\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t}\n-\t\t\t\t\tselect {\n-\t\t\t\t\tcase myc4 <- 0:\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\tb.RunParallel(func(pb *testing.PB) {\n+\t\tmyc1 := make(chan int)\n+\t\tmyc2 := make(chan int)\n+\t\tmyc3 := make(chan int, 1)\n+\t\tmyc4 := make(chan int, 1)\n+\t\tfor pb.Next() {\n+\t\t\tselect {\n+\t\t\tcase <-myc1:\n+\t\t\tdefault:\n \t\t\t}\n-\t\t\tc <- true\n-\t\t}()\n-\t}\n-\tfor p := 0; p < procs; p++ {\n-\t\t<-c\n-\t}\n+\t\t\tselect {\n+\t\t\tcase myc2 <- 0:\n+\t\t\tdefault:\n+\t\t\t}\n+\t\t\tselect {\n+\t\t\tcase <-myc3:\n+\t\t\tdefault:\n+\t\t\t}\n+\t\t\tselect {\n+\t\t\tcase myc4 <- 0:\n+\t\t\tdefault:\n+\t\t\t}\n+\t\t}\n+\t})\n }\n \n func BenchmarkChanUncontended(b *testing.B) {\n-\tconst CallsPerSched = 1000\n-\tprocs := runtime.GOMAXPROCS(-1)\n-\tN := int32(b.N / CallsPerSched)\n-\tc := make(chan bool, procs)\n-\tfor p := 0; p < procs; p++ {\n-\t\tgo func() {\n-\t\t\tmyc := make(chan int, CallsPerSched)\n-\t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n-\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\tmyc <- 0\n-\t\t\t\t}\n-\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\t<-myc\n-\t\t\t\t}\n+\tconst C = 100\n+\tb.RunParallel(func(pb *testing.PB) {\n+\t\tmyc := make(chan int, C)\n+\t\tfor pb.Next() {\n+\t\t\tfor i := 0; i < C; i++ {\n+\t\t\t\tmyc <- 0\n \t\t\t}\n-\t\t\tc <- true\n-\t\t}()\n-\t}\n-\tfor p := 0; p < procs; p++ {\n-\t\t<-c\n-\t}\n+\t\t\tfor i := 0; i < C; i++ {\n+\t\t\t\t<-myc\n+\t\t\t}\n+\t\t}\n+\t})\n }\n \n func BenchmarkChanContended(b *testing.B) {\n-\tconst CallsPerSched = 1000\n-\tprocs := runtime.GOMAXPROCS(-1)\n-\tN := int32(b.N / CallsPerSched)\n-\tc := make(chan bool, procs)\n-\tmyc := make(chan int, procs*CallsPerSched)\n-\tfor p := 0; p < procs; p++ {\n-\t\tgo func() {\n-\t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n-\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\tmyc <- 0\n-\t\t\t\t}\n-\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\t<-myc\n-\t\t\t\t}\n+\tconst C = 100\n+\tmyc := make(chan int, C*runtime.GOMAXPROCS(0))\n+\tb.RunParallel(func(pb *testing.PB) {\n+\t\tfor pb.Next() {\n+\t\t\tfor i := 0; i < C; i++ {\n+\t\t\t\tmyc <- 0\n \t\t\t}\n-\t\t\tc <- true\n-\t\t}()\n-\t}\n-\tfor p := 0; p < procs; p++ {\n-\t\t<-c\n-\t}\n+\t\t\tfor i := 0; i < C; i++ {\n+\t\t\t\t<-myc\n+\t\t\t}\n+\t\t}\n+\t})\n }\n \n func BenchmarkChanSync(b *testing.B) {\n@@ -350,33 +641,95 @@ func BenchmarkChanProdConsWork100(b *testing.B) {\n \tbenchmarkChanProdCons(b, 100, 100)\n }\n \n-func BenchmarkChanCreation(b *testing.B) {\n+func BenchmarkSelectProdCons(b *testing.B) {\n \tconst CallsPerSched = 1000\n \tprocs := runtime.GOMAXPROCS(-1)\n \tN := int32(b.N / CallsPerSched)\n-\tc := make(chan bool, procs)\n+\tc := make(chan bool, 2*procs)\n+\tmyc := make(chan int, 128)\n+\tmyclose := make(chan bool)\n \tfor p := 0; p < procs; p++ {\n \t\tgo func() {\n+\t\t\t// Producer: sends to myc.\n+\t\t\tfoo := 0\n+\t\t\t// Intended to not fire during benchmarking.\n+\t\t\tmytimer := time.After(time.Hour)\n \t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n \t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n-\t\t\t\t\tmyc := make(chan int, 1)\n-\t\t\t\t\tmyc <- 0\n-\t\t\t\t\t<-myc\n+\t\t\t\t\t// Model some local work.\n+\t\t\t\t\tfor i := 0; i < 100; i++ {\n+\t\t\t\t\t\tfoo *= 2\n+\t\t\t\t\t\tfoo /= 2\n+\t\t\t\t\t}\n+\t\t\t\t\tselect {\n+\t\t\t\t\tcase myc <- 1:\n+\t\t\t\t\tcase <-mytimer:\n+\t\t\t\t\tcase <-myclose:\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n-\t\t\tc <- true\n+\t\t\tmyc <- 0\n+\t\t\tc <- foo == 42\n+\t\t}()\n+\t\tgo func() {\n+\t\t\t// Consumer: receives from myc.\n+\t\t\tfoo := 0\n+\t\t\t// Intended to not fire during benchmarking.\n+\t\t\tmytimer := time.After(time.Hour)\n+\t\tloop:\n+\t\t\tfor {\n+\t\t\t\tselect {\n+\t\t\t\tcase v := <-myc:\n+\t\t\t\t\tif v == 0 {\n+\t\t\t\t\t\tbreak loop\n+\t\t\t\t\t}\n+\t\t\t\tcase <-mytimer:\n+\t\t\t\tcase <-myclose:\n+\t\t\t\t}\n+\t\t\t\t// Model some local work.\n+\t\t\t\tfor i := 0; i < 100; i++ {\n+\t\t\t\t\tfoo *= 2\n+\t\t\t\t\tfoo /= 2\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tc <- foo == 42\n \t\t}()\n \t}\n \tfor p := 0; p < procs; p++ {\n \t\t<-c\n+\t\t<-c\n \t}\n }\n \n+func BenchmarkChanCreation(b *testing.B) {\n+\tb.RunParallel(func(pb *testing.PB) {\n+\t\tfor pb.Next() {\n+\t\t\tmyc := make(chan int, 1)\n+\t\t\tmyc <- 0\n+\t\t\t<-myc\n+\t\t}\n+\t})\n+}\n+\n func BenchmarkChanSem(b *testing.B) {\n \ttype Empty struct{}\n-\tc := make(chan Empty, 1)\n-\tfor i := 0; i < b.N; i++ {\n-\t\tc <- Empty{}\n+\tconst CallsPerSched = 1000\n+\tprocs := runtime.GOMAXPROCS(0)\n+\tN := int32(b.N / CallsPerSched)\n+\tc := make(chan bool, procs)\n+\tmyc := make(chan Empty, procs)\n+\tfor p := 0; p < procs; p++ {\n+\t\tgo func() {\n+\t\t\tfor atomic.AddInt32(&N, -1) >= 0 {\n+\t\t\t\tfor g := 0; g < CallsPerSched; g++ {\n+\t\t\t\t\tmyc <- Empty{}\n+\t\t\t\t\t<-myc\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tc <- true\n+\t\t}()\n+\t}\n+\tfor p := 0; p < procs; p++ {\n \t\t<-c\n \t}\n }"}, {"sha": "a724fdf8f605c0d9db6de26472aa4fc95a631cb5", "filename": "libgo/go/runtime/debug/garbage.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fdebug%2Fgarbage.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fdebug%2Fgarbage.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fdebug%2Fgarbage.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -91,7 +91,9 @@ func (x byDuration) Less(i, j int) bool { return x[i] < x[j] }\n // at startup, or 100 if the variable is not set.\n // A negative percentage disables garbage collection.\n func SetGCPercent(percent int) int {\n-\treturn setGCPercent(percent)\n+\told := setGCPercent(percent)\n+\truntime.GC()\n+\treturn old\n }\n \n // FreeOSMemory forces a garbage collection followed by an"}, {"sha": "c29b0a226a2b08c583a2f73827e3a324c14c69c3", "filename": "libgo/go/runtime/debug/stack.go", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fdebug%2Fstack.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fdebug%2Fstack.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fdebug%2Fstack.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -18,6 +18,7 @@ var (\n \tdunno     = []byte(\"???\")\n \tcenterDot = []byte(\"\u00b7\")\n \tdot       = []byte(\".\")\n+\tslash     = []byte(\"/\")\n )\n \n // PrintStack prints to standard error the stack trace returned by Stack.\n@@ -84,6 +85,11 @@ func function(pc uintptr) []byte {\n \t//\truntime/debug.*T\u00b7ptrmethod\n \t// and want\n \t//\t*T.ptrmethod\n+\t// Since the package path might contains dots (e.g. code.google.com/...),\n+\t// we first remove the path prefix if there is one.\n+\tif lastslash := bytes.LastIndex(name, slash); lastslash >= 0 {\n+\t\tname = name[lastslash+1:]\n+\t}\n \tif period := bytes.Index(name, dot); period >= 0 {\n \t\tname = name[period+1:]\n \t}"}, {"sha": "d759a54a51958f2969cb6f020dcf36bee4036913", "filename": "libgo/go/runtime/error.go", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Ferror.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Ferror.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Ferror.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -107,19 +107,20 @@ func NewErrorString(s string, ret *interface{}) {\n }\n \n // An errorCString represents a runtime error described by a single C string.\n-type errorCString uintptr\n+// Not \"type errorCString uintptr\" because of http://golang.org/issue/7084.\n+type errorCString struct{ cstr uintptr }\n \n func (e errorCString) RuntimeError() {}\n \n func cstringToGo(uintptr) string\n \n func (e errorCString) Error() string {\n-\treturn \"runtime error: \" + cstringToGo(uintptr(e))\n+\treturn \"runtime error: \" + cstringToGo(e.cstr)\n }\n \n // For calling from C.\n func NewErrorCString(s uintptr, ret *interface{}) {\n-\t*ret = errorCString(s)\n+\t*ret = errorCString{s}\n }\n \n type stringer interface {"}, {"sha": "436c28deae99790cbb6ddf37ef4a2aebd808a98d", "filename": "libgo/go/runtime/export_test.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fexport_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fexport_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fexport_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -82,3 +82,7 @@ var TestSchedLocalQueueSteal1 = testSchedLocalQueueSteal\n \n var hashLoad float64 // declared in hashmap.c\n var HashLoad = &hashLoad\n+\n+func memclrBytes(b []byte)\n+\n+var MemclrBytes = memclrBytes"}, {"sha": "e51877704538b6b3ff020937be25943661bd1ba4", "filename": "libgo/go/runtime/lfstack_test.go", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Flfstack_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Flfstack_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -71,6 +71,8 @@ func TestLFStack(t *testing.T) {\n \t}\n }\n \n+var stress []*MyNode\n+\n func TestLFStackStress(t *testing.T) {\n \tconst K = 100\n \tP := 4 * GOMAXPROCS(-1)\n@@ -80,14 +82,15 @@ func TestLFStackStress(t *testing.T) {\n \t}\n \t// Create 2 stacks.\n \tstacks := [2]*uint64{new(uint64), new(uint64)}\n-\t// Need to keep additional referenfces to nodes, the stack is not all that type-safe.\n-\tvar nodes []*MyNode\n+\t// Need to keep additional references to nodes,\n+\t// the lock-free stack is not type-safe.\n+\tstress = nil\n \t// Push K elements randomly onto the stacks.\n \tsum := 0\n \tfor i := 0; i < K; i++ {\n \t\tsum += i\n \t\tnode := &MyNode{data: i}\n-\t\tnodes = append(nodes, node)\n+\t\tstress = append(stress, node)\n \t\tLFStackPush(stacks[i%2], fromMyNode(node))\n \t}\n \tc := make(chan bool, P)\n@@ -127,4 +130,7 @@ func TestLFStackStress(t *testing.T) {\n \tif sum2 != sum {\n \t\tt.Fatalf(\"Wrong sum %d/%d\", sum2, sum)\n \t}\n+\n+\t// Let nodes be collected now.\n+\tstress = nil\n }"}, {"sha": "fe5d3ad86c911191f35e3932dc191991de6a9921", "filename": "libgo/go/runtime/map_test.go", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fmap_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fmap_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmap_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -422,8 +422,7 @@ func TestMapIterOrder(t *testing.T) {\n \t\tt.Skip(\"skipping for gccgo\")\n \t}\n \n-\t// TODO: For issue 6719, add 3 and 7 to this list.\n-\tfor _, n := range [...]int{9, 15} {\n+\tfor _, n := range [...]int{3, 7, 9, 15} {\n \t\t// Make m be {0: true, 1: true, ..., n-1: true}.\n \t\tm := make(map[int]bool)\n \t\tfor i := 0; i < n; i++ {"}, {"sha": "fb35535c3a3d0bbeebd5bbbe5c6bda85060930c6", "filename": "libgo/go/runtime/mem.go", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fmem.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fmem.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmem.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -60,11 +60,10 @@ type MemStats struct {\n \n var Sizeof_C_MStats uintptr // filled in by malloc.goc\n \n-var VmemStats MemStats\n-\n func init() {\n-\tif Sizeof_C_MStats != unsafe.Sizeof(VmemStats) {\n-\t\tprintln(Sizeof_C_MStats, unsafe.Sizeof(VmemStats))\n+\tvar memStats MemStats\n+\tif Sizeof_C_MStats != unsafe.Sizeof(memStats) {\n+\t\tprintln(Sizeof_C_MStats, unsafe.Sizeof(memStats))\n \t\tpanic(\"MStats vs MemStatsType size mismatch\")\n \t}\n }"}, {"sha": "5c01aac97a91c9cfd88062d5a40562e580b1b2ee", "filename": "libgo/go/runtime/memmove_test.go", "status": "modified", "additions": 73, "deletions": 26, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fmemmove_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fmemmove_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmemmove_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,6 +5,7 @@\n package runtime_test\n \n import (\n+\t. \"runtime\"\n \t\"testing\"\n )\n \n@@ -80,7 +81,7 @@ func TestMemmoveAlias(t *testing.T) {\n \t}\n }\n \n-func bmMemmove(n int, b *testing.B) {\n+func bmMemmove(b *testing.B, n int) {\n \tx := make([]byte, n)\n \ty := make([]byte, n)\n \tb.SetBytes(int64(n))\n@@ -89,28 +90,74 @@ func bmMemmove(n int, b *testing.B) {\n \t}\n }\n \n-func BenchmarkMemmove0(b *testing.B)    { bmMemmove(0, b) }\n-func BenchmarkMemmove1(b *testing.B)    { bmMemmove(1, b) }\n-func BenchmarkMemmove2(b *testing.B)    { bmMemmove(2, b) }\n-func BenchmarkMemmove3(b *testing.B)    { bmMemmove(3, b) }\n-func BenchmarkMemmove4(b *testing.B)    { bmMemmove(4, b) }\n-func BenchmarkMemmove5(b *testing.B)    { bmMemmove(5, b) }\n-func BenchmarkMemmove6(b *testing.B)    { bmMemmove(6, b) }\n-func BenchmarkMemmove7(b *testing.B)    { bmMemmove(7, b) }\n-func BenchmarkMemmove8(b *testing.B)    { bmMemmove(8, b) }\n-func BenchmarkMemmove9(b *testing.B)    { bmMemmove(9, b) }\n-func BenchmarkMemmove10(b *testing.B)   { bmMemmove(10, b) }\n-func BenchmarkMemmove11(b *testing.B)   { bmMemmove(11, b) }\n-func BenchmarkMemmove12(b *testing.B)   { bmMemmove(12, b) }\n-func BenchmarkMemmove13(b *testing.B)   { bmMemmove(13, b) }\n-func BenchmarkMemmove14(b *testing.B)   { bmMemmove(14, b) }\n-func BenchmarkMemmove15(b *testing.B)   { bmMemmove(15, b) }\n-func BenchmarkMemmove16(b *testing.B)   { bmMemmove(16, b) }\n-func BenchmarkMemmove32(b *testing.B)   { bmMemmove(32, b) }\n-func BenchmarkMemmove64(b *testing.B)   { bmMemmove(64, b) }\n-func BenchmarkMemmove128(b *testing.B)  { bmMemmove(128, b) }\n-func BenchmarkMemmove256(b *testing.B)  { bmMemmove(256, b) }\n-func BenchmarkMemmove512(b *testing.B)  { bmMemmove(512, b) }\n-func BenchmarkMemmove1024(b *testing.B) { bmMemmove(1024, b) }\n-func BenchmarkMemmove2048(b *testing.B) { bmMemmove(2048, b) }\n-func BenchmarkMemmove4096(b *testing.B) { bmMemmove(4096, b) }\n+func BenchmarkMemmove0(b *testing.B)    { bmMemmove(b, 0) }\n+func BenchmarkMemmove1(b *testing.B)    { bmMemmove(b, 1) }\n+func BenchmarkMemmove2(b *testing.B)    { bmMemmove(b, 2) }\n+func BenchmarkMemmove3(b *testing.B)    { bmMemmove(b, 3) }\n+func BenchmarkMemmove4(b *testing.B)    { bmMemmove(b, 4) }\n+func BenchmarkMemmove5(b *testing.B)    { bmMemmove(b, 5) }\n+func BenchmarkMemmove6(b *testing.B)    { bmMemmove(b, 6) }\n+func BenchmarkMemmove7(b *testing.B)    { bmMemmove(b, 7) }\n+func BenchmarkMemmove8(b *testing.B)    { bmMemmove(b, 8) }\n+func BenchmarkMemmove9(b *testing.B)    { bmMemmove(b, 9) }\n+func BenchmarkMemmove10(b *testing.B)   { bmMemmove(b, 10) }\n+func BenchmarkMemmove11(b *testing.B)   { bmMemmove(b, 11) }\n+func BenchmarkMemmove12(b *testing.B)   { bmMemmove(b, 12) }\n+func BenchmarkMemmove13(b *testing.B)   { bmMemmove(b, 13) }\n+func BenchmarkMemmove14(b *testing.B)   { bmMemmove(b, 14) }\n+func BenchmarkMemmove15(b *testing.B)   { bmMemmove(b, 15) }\n+func BenchmarkMemmove16(b *testing.B)   { bmMemmove(b, 16) }\n+func BenchmarkMemmove32(b *testing.B)   { bmMemmove(b, 32) }\n+func BenchmarkMemmove64(b *testing.B)   { bmMemmove(b, 64) }\n+func BenchmarkMemmove128(b *testing.B)  { bmMemmove(b, 128) }\n+func BenchmarkMemmove256(b *testing.B)  { bmMemmove(b, 256) }\n+func BenchmarkMemmove512(b *testing.B)  { bmMemmove(b, 512) }\n+func BenchmarkMemmove1024(b *testing.B) { bmMemmove(b, 1024) }\n+func BenchmarkMemmove2048(b *testing.B) { bmMemmove(b, 2048) }\n+func BenchmarkMemmove4096(b *testing.B) { bmMemmove(b, 4096) }\n+\n+func TestMemclr(t *testing.T) {\n+\tsize := 512\n+\tif testing.Short() {\n+\t\tsize = 128 + 16\n+\t}\n+\tmem := make([]byte, size)\n+\tfor i := 0; i < size; i++ {\n+\t\tmem[i] = 0xee\n+\t}\n+\tfor n := 0; n < size; n++ {\n+\t\tfor x := 0; x <= size-n; x++ { // offset in mem\n+\t\t\tMemclrBytes(mem[x : x+n])\n+\t\t\tfor i := 0; i < x; i++ {\n+\t\t\t\tif mem[i] != 0xee {\n+\t\t\t\t\tt.Fatalf(\"overwrite prefix mem[%d] = %d\", i, mem[i])\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfor i := x; i < x+n; i++ {\n+\t\t\t\tif mem[i] != 0 {\n+\t\t\t\t\tt.Fatalf(\"failed clear mem[%d] = %d\", i, mem[i])\n+\t\t\t\t}\n+\t\t\t\tmem[i] = 0xee\n+\t\t\t}\n+\t\t\tfor i := x + n; i < size; i++ {\n+\t\t\t\tif mem[i] != 0xee {\n+\t\t\t\t\tt.Fatalf(\"overwrite suffix mem[%d] = %d\", i, mem[i])\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+func bmMemclr(b *testing.B, n int) {\n+\tx := make([]byte, n)\n+\tb.SetBytes(int64(n))\n+\tfor i := 0; i < b.N; i++ {\n+\t\tMemclrBytes(x)\n+\t}\n+}\n+func BenchmarkMemclr5(b *testing.B)     { bmMemclr(b, 5) }\n+func BenchmarkMemclr16(b *testing.B)    { bmMemclr(b, 16) }\n+func BenchmarkMemclr64(b *testing.B)    { bmMemclr(b, 64) }\n+func BenchmarkMemclr256(b *testing.B)   { bmMemclr(b, 256) }\n+func BenchmarkMemclr4096(b *testing.B)  { bmMemclr(b, 4096) }\n+func BenchmarkMemclr65536(b *testing.B) { bmMemclr(b, 65536) }"}, {"sha": "98080457cb581e14a3e4b8bbfcb70f0263eb727a", "filename": "libgo/go/runtime/pprof/pprof.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -20,7 +20,7 @@ import (\n \t\"text/tabwriter\"\n )\n \n-// BUG(rsc): Profiles are incomplete and inaccuate on NetBSD, OpenBSD, and OS X.\n+// BUG(rsc): Profiles are incomplete and inaccuate on NetBSD and OS X.\n // See http://golang.org/issue/6047 for details.\n \n // A Profile is a collection of stack traces showing the call sequences"}, {"sha": "923c5b384160bf380d4b21b3e7ce0ccc2f36b353", "filename": "libgo/go/runtime/pprof/pprof_test.go", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -33,10 +33,6 @@ func TestCPUProfile(t *testing.T) {\n }\n \n func TestCPUProfileMultithreaded(t *testing.T) {\n-\t// TODO(brainman): delete when issue 6986 is fixed.\n-\tif runtime.GOOS == \"windows\" && runtime.GOARCH == \"amd64\" {\n-\t\tt.Skip(\"skipping broken test on windows-amd64-race\")\n-\t}\n \tbuf := make([]byte, 100000)\n \tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(2))\n \ttestCPUProfile(t, []string{\"crc32.update\"}, func() {\n@@ -142,7 +138,11 @@ func testCPUProfile(t *testing.T, need []string, f func()) {\n \t\tt.Logf(\"no CPU profile samples collected\")\n \t\tok = false\n \t}\n-\tmin := total / uintptr(len(have)) / 3\n+\t// We'd like to check a reasonable minimum, like\n+\t// total / len(have) / smallconstant, but this test is\n+\t// pretty flaky (see bug 7095).  So we'll just test to\n+\t// make sure we got at least one sample.\n+\tmin := uintptr(1)\n \tfor i, name := range need {\n \t\tif have[i] < min {\n \t\t\tt.Logf(\"%s has %d samples out of %d, want at least %d, ideally %d\", name, have[i], total, min, total/uintptr(len(have)))\n@@ -193,9 +193,6 @@ func TestCPUProfileWithFork(t *testing.T) {\n // If it did, it would see inconsistent state and would either record an incorrect stack\n // or crash because the stack was malformed.\n func TestGoroutineSwitch(t *testing.T) {\n-\tif runtime.GOOS == \"windows\" {\n-\t\tt.Skip(\"flaky test; see http://golang.org/issue/6417\")\n-\t}\n \t// How much to try. These defaults take about 1 seconds\n \t// on a 2012 MacBook Pro. The ones in short mode take\n \t// about 0.1 seconds.\n@@ -221,7 +218,7 @@ func TestGoroutineSwitch(t *testing.T) {\n \t\t\t// exists to record a PC without a traceback. Those are okay.\n \t\t\tif len(stk) == 2 {\n \t\t\t\tf := runtime.FuncForPC(stk[1])\n-\t\t\t\tif f != nil && f.Name() == \"System\" {\n+\t\t\t\tif f != nil && (f.Name() == \"System\" || f.Name() == \"ExternalCode\") {\n \t\t\t\t\treturn\n \t\t\t\t}\n \t\t\t}\n@@ -248,10 +245,6 @@ func TestGoroutineSwitch(t *testing.T) {\n \n // Test that profiling of division operations is okay, especially on ARM. See issue 6681.\n func TestMathBigDivide(t *testing.T) {\n-\t// TODO(brainman): delete when issue 6986 is fixed.\n-\tif runtime.GOOS == \"windows\" && runtime.GOARCH == \"amd64\" {\n-\t\tt.Skip(\"skipping broken test on windows-amd64-race\")\n-\t}\n \ttestCPUProfile(t, nil, func() {\n \t\tt := time.After(5 * time.Second)\n \t\tpi := new(big.Int)\n@@ -272,9 +265,9 @@ func TestMathBigDivide(t *testing.T) {\n \n // Operating systems that are expected to fail the tests. See issue 6047.\n var badOS = map[string]bool{\n-\t\"darwin\":  true,\n-\t\"netbsd\":  true,\n-\t\"openbsd\": true,\n+\t\"darwin\": true,\n+\t\"netbsd\": true,\n+\t\"plan9\":  true,\n }\n \n func TestBlockProfile(t *testing.T) {"}, {"sha": "bdcb199d72782da49ac0401102d85a51865dc341", "filename": "libgo/go/runtime/proc_test.go", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fproc_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fruntime%2Fproc_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fproc_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -246,6 +246,49 @@ func TestPreemptionGC(t *testing.T) {\n \tatomic.StoreUint32(&stop, 1)\n }\n \n+func TestGCFairness(t *testing.T) {\n+\toutput := executeTest(t, testGCFairnessSource, nil)\n+\twant := \"OK\\n\"\n+\tif output != want {\n+\t\tt.Fatalf(\"want %s, got %s\\n\", want, output)\n+\t}\n+}\n+\n+const testGCFairnessSource = `\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"os\"\n+\t\"runtime\"\n+\t\"time\"\n+)\n+\n+func main() {\n+\truntime.GOMAXPROCS(1)\n+\tf, err := os.Open(\"/dev/null\")\n+\tif os.IsNotExist(err) {\n+\t\t// This test tests what it is intended to test only if writes are fast.\n+\t\t// If there is no /dev/null, we just don't execute the test.\n+\t\tfmt.Println(\"OK\")\n+\t\treturn\n+\t}\n+\tif err != nil {\n+\t\tfmt.Println(err)\n+\t\tos.Exit(1)\n+\t}\n+\tfor i := 0; i < 2; i++ {\n+\t\tgo func() {\n+\t\t\tfor {\n+\t\t\t\tf.Write([]byte(\".\"))\n+\t\t\t}\n+\t\t}()\n+\t}\n+\ttime.Sleep(10 * time.Millisecond)\n+\tfmt.Println(\"OK\")\n+}\n+`\n+\n func stackGrowthRecursive(i int) {\n \tvar pad [128]uint64\n \tif i != 0 && pad[0] == 0 {"}, {"sha": "ca49d21a0d1df969b97c29c9bf96290fcd023326", "filename": "libgo/go/sync/pool.go", "status": "modified", "additions": 162, "deletions": 15, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsync%2Fpool.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsync%2Fpool.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsync%2Fpool.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -4,6 +4,18 @@\n \n package sync\n \n+import (\n+\t\"runtime\"\n+\t\"sync/atomic\"\n+\t\"unsafe\"\n+)\n+\n+const (\n+\tcacheLineSize = 128\n+\tpoolLocalSize = 2 * cacheLineSize\n+\tpoolLocalCap  = poolLocalSize/unsafe.Sizeof(*(*interface{})(nil)) - 1\n+)\n+\n // A Pool is a set of temporary objects that may be individually saved\n // and retrieved.\n //\n@@ -26,29 +38,58 @@ package sync\n //\n // This is an experimental type and might not be released.\n type Pool struct {\n-\tnext *Pool         // for use by runtime. must be first.\n-\tlist []interface{} // offset known to runtime\n-\tmu   Mutex         // guards list\n+\t// The following fields are known to runtime.\n+\tnext         *Pool      // for use by runtime\n+\tlocal        *poolLocal // local fixed-size per-P pool, actually an array\n+\tlocalSize    uintptr    // size of the local array\n+\tglobalOffset uintptr    // offset of global\n+\t// The rest is not known to runtime.\n \n \t// New optionally specifies a function to generate\n \t// a value when Get would otherwise return nil.\n \t// It may not be changed concurrently with calls to Get.\n \tNew func() interface{}\n+\n+\tpad [cacheLineSize]byte\n+\t// Read-mostly date above this point, mutable data follows.\n+\tmu     Mutex\n+\tglobal []interface{} // global fallback pool\n }\n \n-func runtime_registerPool(*Pool)\n+// Local per-P Pool appendix.\n+type poolLocal struct {\n+\ttail   int\n+\tunused int\n+\tbuf    [poolLocalCap]interface{}\n+}\n+\n+func init() {\n+\tvar v poolLocal\n+\tif unsafe.Sizeof(v) != poolLocalSize {\n+\t\tpanic(\"sync: incorrect pool size\")\n+\t}\n+}\n \n // Put adds x to the pool.\n func (p *Pool) Put(x interface{}) {\n+\tif raceenabled {\n+\t\t// Under race detector the Pool degenerates into no-op.\n+\t\t// It's conforming, simple and does not introduce excessive\n+\t\t// happens-before edges between unrelated goroutines.\n+\t\treturn\n+\t}\n \tif x == nil {\n \t\treturn\n \t}\n-\tp.mu.Lock()\n-\tif p.list == nil {\n-\t\truntime_registerPool(p)\n+\tl := p.pin()\n+\tt := l.tail\n+\tif t < int(poolLocalCap) {\n+\t\tl.buf[t] = x\n+\t\tl.tail = t + 1\n+\t\truntime_procUnpin()\n+\t\treturn\n \t}\n-\tp.list = append(p.list, x)\n-\tp.mu.Unlock()\n+\tp.putSlow(l, x)\n }\n \n // Get selects an arbitrary item from the Pool, removes it from the\n@@ -60,16 +101,122 @@ func (p *Pool) Put(x interface{}) {\n // If Get would otherwise return nil and p.New is non-nil, Get returns\n // the result of calling p.New.\n func (p *Pool) Get() interface{} {\n+\tif raceenabled {\n+\t\tif p.New != nil {\n+\t\t\treturn p.New()\n+\t\t}\n+\t\treturn nil\n+\t}\n+\tl := p.pin()\n+\tt := l.tail\n+\tif t > 0 {\n+\t\tt -= 1\n+\t\tx := l.buf[t]\n+\t\tl.tail = t\n+\t\truntime_procUnpin()\n+\t\treturn x\n+\t}\n+\treturn p.getSlow()\n+}\n+\n+func (p *Pool) putSlow(l *poolLocal, x interface{}) {\n+\t// Grab half of items from local pool and put to global pool.\n+\t// Can not lock the mutex while pinned.\n+\tconst N = int(poolLocalCap/2 + 1)\n+\tvar buf [N]interface{}\n+\tbuf[0] = x\n+\tfor i := 1; i < N; i++ {\n+\t\tl.tail--\n+\t\tbuf[i] = l.buf[l.tail]\n+\t}\n+\truntime_procUnpin()\n+\n+\tp.mu.Lock()\n+\tp.global = append(p.global, buf[:]...)\n+\tp.mu.Unlock()\n+}\n+\n+func (p *Pool) getSlow() (x interface{}) {\n+\t// Grab a batch of items from global pool and put to local pool.\n+\t// Can not lock the mutex while pinned.\n+\truntime_procUnpin()\n \tp.mu.Lock()\n-\tvar x interface{}\n-\tif n := len(p.list); n > 0 {\n-\t\tx = p.list[n-1]\n-\t\tp.list[n-1] = nil // Just to be safe\n-\t\tp.list = p.list[:n-1]\n+\tpid := runtime_procPin()\n+\ts := p.localSize\n+\tl := p.local\n+\tif uintptr(pid) < s {\n+\t\tl = indexLocal(l, pid)\n+\t\t// Get the item to return.\n+\t\tlast := len(p.global) - 1\n+\t\tif last >= 0 {\n+\t\t\tx = p.global[last]\n+\t\t\tp.global = p.global[:last]\n+\t\t}\n+\t\t// Try to refill local pool, we may have been rescheduled to another P.\n+\t\tif last > 0 && l.tail == 0 {\n+\t\t\tn := int(poolLocalCap / 2)\n+\t\t\tgl := len(p.global)\n+\t\t\tif n > gl {\n+\t\t\t\tn = gl\n+\t\t\t}\n+\t\t\tcopy(l.buf[:], p.global[gl-n:])\n+\t\t\tp.global = p.global[:gl-n]\n+\t\t\tl.tail = n\n+\t\t}\n \t}\n+\truntime_procUnpin()\n \tp.mu.Unlock()\n+\n \tif x == nil && p.New != nil {\n \t\tx = p.New()\n \t}\n-\treturn x\n+\treturn\n }\n+\n+// pin pins current goroutine to P, disables preemption and returns poolLocal pool for the P.\n+// Caller must call runtime_procUnpin() when done with the pool.\n+func (p *Pool) pin() *poolLocal {\n+\tpid := runtime_procPin()\n+\t// In pinSlow we store to localSize and then to local, here we load in opposite order.\n+\t// Since we've disabled preemption, GC can not happen in between.\n+\t// Thus here we must observe local at least as large localSize.\n+\t// We can observe a newer/larger local, it is fine (we must observe its zero-initialized-ness).\n+\ts := atomic.LoadUintptr(&p.localSize) // load-acquire\n+\tl := p.local                          // load-consume\n+\tif uintptr(pid) < s {\n+\t\treturn indexLocal(l, pid)\n+\t}\n+\treturn p.pinSlow()\n+}\n+\n+func (p *Pool) pinSlow() *poolLocal {\n+\t// Retry under the mutex.\n+\truntime_procUnpin()\n+\tp.mu.Lock()\n+\tdefer p.mu.Unlock()\n+\tpid := runtime_procPin()\n+\ts := p.localSize\n+\tl := p.local\n+\tif uintptr(pid) < s {\n+\t\treturn indexLocal(l, pid)\n+\t}\n+\tif p.local == nil {\n+\t\tp.globalOffset = unsafe.Offsetof(p.global)\n+\t\truntime_registerPool(p)\n+\t}\n+\t// If GOMAXPROCS changes between GCs, we re-allocate the array and lose the old one.\n+\tsize := runtime.GOMAXPROCS(0)\n+\tlocal := make([]poolLocal, size)\n+\tatomic.StorePointer((*unsafe.Pointer)(unsafe.Pointer(&p.local)), unsafe.Pointer(&local[0])) // store-release\n+\tatomic.StoreUintptr(&p.localSize, uintptr(size))                                            // store-release\n+\treturn &local[pid]\n+}\n+\n+func indexLocal(l *poolLocal, i int) *poolLocal {\n+\treturn (*poolLocal)(unsafe.Pointer(uintptr(unsafe.Pointer(l)) + unsafe.Sizeof(*l)*uintptr(i))) // uh...\n+}\n+\n+// Implemented in runtime.\n+func runtime_registerPool(*Pool)\n+func runtime_procPin() int\n+func runtime_procUnpin()"}, {"sha": "39ba7a913d3c7aeac94ae1e5871a89f37a8703c4", "filename": "libgo/go/sync/pool_test.go", "status": "modified", "additions": 34, "deletions": 19, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsync%2Fpool_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsync%2Fpool_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsync%2Fpool_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,6 +2,9 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Pool is no-op under race detector, so all these tests do not work.\n+// +build !race\n+\n package sync_test\n \n import (\n@@ -11,7 +14,6 @@ import (\n \t\"sync/atomic\"\n \t\"testing\"\n \t\"time\"\n-\t\"unsafe\"\n )\n \n func TestPool(t *testing.T) {\n@@ -74,8 +76,8 @@ func TestPoolGC(t *testing.T) {\n \tvar fin uint32\n \tconst N = 100\n \tfor i := 0; i < N; i++ {\n-\t\tv := new(int)\n-\t\truntime.SetFinalizer(v, func(vv *int) {\n+\t\tv := new(string)\n+\t\truntime.SetFinalizer(v, func(vv *string) {\n \t\t\tatomic.AddUint32(&fin, 1)\n \t\t})\n \t\tp.Put(v)\n@@ -130,28 +132,41 @@ func TestPoolStress(t *testing.T) {\n }\n \n func BenchmarkPool(b *testing.B) {\n-\tprocs := runtime.GOMAXPROCS(-1)\n-\tvar dec func() bool\n-\tif unsafe.Sizeof(b.N) == 8 {\n-\t\tn := int64(b.N)\n-\t\tdec = func() bool {\n-\t\t\treturn atomic.AddInt64(&n, -1) >= 0\n-\t\t}\n-\t} else {\n-\t\tn := int32(b.N)\n-\t\tdec = func() bool {\n-\t\t\treturn atomic.AddInt32(&n, -1) >= 0\n-\t\t}\n+\tvar p Pool\n+\tvar wg WaitGroup\n+\tn0 := uintptr(b.N)\n+\tn := n0\n+\tfor i := 0; i < runtime.GOMAXPROCS(0); i++ {\n+\t\twg.Add(1)\n+\t\tgo func() {\n+\t\t\tdefer wg.Done()\n+\t\t\tfor atomic.AddUintptr(&n, ^uintptr(0)) < n0 {\n+\t\t\t\tfor b := 0; b < 100; b++ {\n+\t\t\t\t\tp.Put(1)\n+\t\t\t\t\tp.Get()\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}()\n \t}\n+\twg.Wait()\n+}\n+\n+func BenchmarkPoolOverlflow(b *testing.B) {\n \tvar p Pool\n \tvar wg WaitGroup\n-\tfor i := 0; i < procs; i++ {\n+\tn0 := uintptr(b.N)\n+\tn := n0\n+\tfor i := 0; i < runtime.GOMAXPROCS(0); i++ {\n \t\twg.Add(1)\n \t\tgo func() {\n \t\t\tdefer wg.Done()\n-\t\t\tfor dec() {\n-\t\t\t\tp.Put(1)\n-\t\t\t\tp.Get()\n+\t\t\tfor atomic.AddUintptr(&n, ^uintptr(0)) < n0 {\n+\t\t\t\tfor b := 0; b < 100; b++ {\n+\t\t\t\t\tp.Put(1)\n+\t\t\t\t}\n+\t\t\t\tfor b := 0; b < 100; b++ {\n+\t\t\t\t\tp.Get()\n+\t\t\t\t}\n \t\t\t}\n \t\t}()\n \t}"}, {"sha": "6c9fb823560d292b71f989abd0ec861c5c59ab87", "filename": "libgo/go/syscall/consistency_unix_test.go", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fconsistency_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fconsistency_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fconsistency_unix_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -32,3 +32,13 @@ func _() {\n \t\t_ int = syscall.TCOFLUSH\n \t)\n }\n+\n+func _() {\n+\t_ = syscall.Flock_t{\n+\t\tType:   int16(0),\n+\t\tWhence: int16(0),\n+\t\tStart:  int64(0),\n+\t\tLen:    int64(0),\n+\t\tPid:    int32(0),\n+\t}\n+}"}, {"sha": "85f38e08665c4b41edcedbbc58791d64d6ae01ce", "filename": "libgo/go/syscall/libcall_posix.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -208,6 +208,9 @@ func FDZero(set *FdSet) {\n //sys\tfcntl(fd int, cmd int, arg int) (val int, err error)\n //__go_fcntl(fd _C_int, cmd _C_int, arg _C_int) _C_int\n \n+//sys\tFcntlFlock(fd uintptr, cmd int, lk *Flock_t) (err error)\n+//__go_fcntl_flock(fd _C_int, cmd _C_int, arg *Flock_t) _C_int\n+\n //sys\tFdatasync(fd int) (err error)\n //fdatasync(fd _C_int) _C_int\n "}, {"sha": "48ba191c6da928a8ace2ea6f014db72d081f3f54", "filename": "libgo/go/syscall/lsf_linux.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Flsf_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Flsf_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flsf_linux.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -69,10 +69,10 @@ func AttachLsf(fd int, i []SockFilter) error {\n \tvar p SockFprog\n \tp.Len = uint16(len(i))\n \tp.Filter = (*SockFilter)(unsafe.Pointer(&i[0]))\n-\treturn setsockopt(fd, SOL_SOCKET, SO_ATTACH_FILTER, (*byte)(unsafe.Pointer(&p)), Socklen_t(unsafe.Sizeof(p)))\n+\treturn setsockopt(fd, SOL_SOCKET, SO_ATTACH_FILTER, unsafe.Pointer(&p), Socklen_t(unsafe.Sizeof(p)))\n }\n \n func DetachLsf(fd int) error {\n \tvar dummy int\n-\treturn setsockopt(fd, SOL_SOCKET, SO_DETACH_FILTER, (*byte)(unsafe.Pointer(&dummy)), Socklen_t(unsafe.Sizeof(dummy)))\n+\treturn setsockopt(fd, SOL_SOCKET, SO_DETACH_FILTER, unsafe.Pointer(&dummy), Socklen_t(unsafe.Sizeof(dummy)))\n }"}, {"sha": "6fbd2ac8ef32db37e0e10502fae0a6a5d3a9f0c2", "filename": "libgo/go/syscall/mksyscall.awk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -199,6 +199,8 @@ BEGIN {\n \t    args = sprintf(\"%s_p%d, %s(len(%s))\", args, goarg, cparam[2], goname)\n \t} else if (gotype == \"uintptr\" && ctype ~ /^\\*/) {\n \t    args = sprintf(\"%s(%s)(unsafe.Pointer(%s))\", args, ctype, goname)\n+\t} else if (gotype == \"unsafe.Pointer\" && ctype ~ /^\\*/) {\n+\t    args = sprintf(\"%s(%s)(%s)\", args, ctype, goname)\n \t} else {\n \t    args = sprintf(\"%s%s(%s)\", args, ctype, goname)\n \t}"}, {"sha": "fc9b02609cf09ecc63c2aacc3397ef74f37c21fa", "filename": "libgo/go/syscall/rlimit_unix_test.go", "status": "renamed", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Frlimit_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Frlimit_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Frlimit_unix_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,9 +2,12 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// +build darwin dragonfly freebsd linux netbsd openbsd\n+\n package syscall_test\n \n import (\n+\t\"runtime\"\n \t\"syscall\"\n \t\"testing\"\n )\n@@ -32,7 +35,14 @@ func TestRlimit(t *testing.T) {\n \tset = rlimit\n \tset.Cur = set.Max - 1\n \tif set != get {\n-\t\tt.Fatalf(\"Rlimit: change failed: wanted %#v got %#v\", set, get)\n+\t\t// Seems like Darwin requires some privilege to\n+\t\t// increase the soft limit of rlimit sandbox, though\n+\t\t// Setrlimit never reports an error.\n+\t\tswitch runtime.GOOS {\n+\t\tcase \"darwin\":\n+\t\tdefault:\n+\t\t\tt.Fatalf(\"Rlimit: change failed: wanted %#v got %#v\", set, get)\n+\t\t}\n \t}\n \terr = syscall.Setrlimit(syscall.RLIMIT_NOFILE, &rlimit)\n \tif err != nil {", "previous_filename": "libgo/go/syscall/rlimit_linux_test.go"}, {"sha": "491f52c100e30b484b1f539bfe9aa34472ccd1ab", "filename": "libgo/go/syscall/socket.go", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsocket.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsocket.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -213,67 +213,67 @@ func Socketpair(domain, typ, proto int) (fd [2]int, err error) {\n func GetsockoptByte(fd, level, opt int) (value byte, err error) {\n \tvar n byte\n \tvallen := Socklen_t(1)\n-\terr = getsockopt(fd, level, opt, uintptr(unsafe.Pointer(&n)), &vallen)\n+\terr = getsockopt(fd, level, opt, unsafe.Pointer(&n), &vallen)\n \treturn n, err\n }\n \n func GetsockoptInt(fd, level, opt int) (value int, err error) {\n \tvar n int32\n \tvallen := Socklen_t(4)\n-\terr = getsockopt(fd, level, opt, (uintptr)(unsafe.Pointer(&n)), &vallen)\n+\terr = getsockopt(fd, level, opt, unsafe.Pointer(&n), &vallen)\n \treturn int(n), err\n }\n \n func GetsockoptInet4Addr(fd, level, opt int) (value [4]byte, err error) {\n \tvallen := Socklen_t(4)\n-\terr = getsockopt(fd, level, opt, uintptr(unsafe.Pointer(&value[0])), &vallen)\n+\terr = getsockopt(fd, level, opt, unsafe.Pointer(&value[0]), &vallen)\n \treturn value, err\n }\n \n func GetsockoptIPMreq(fd, level, opt int) (*IPMreq, error) {\n \tvar value IPMreq\n \tvallen := Socklen_t(SizeofIPMreq)\n-\terr := getsockopt(fd, level, opt, uintptr(unsafe.Pointer(&value)), &vallen)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value), &vallen)\n \treturn &value, err\n }\n \n func GetsockoptIPMreqn(fd, level, opt int) (*IPMreqn, error) {\n \tvar value IPMreqn\n \tvallen := Socklen_t(SizeofIPMreqn)\n-\terr := getsockopt(fd, level, opt, uintptr(unsafe.Pointer(&value)), &vallen)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value), &vallen)\n \treturn &value, err\n }\n \n func GetsockoptIPv6Mreq(fd, level, opt int) (*IPv6Mreq, error) {\n \tvar value IPv6Mreq\n \tvallen := Socklen_t(SizeofIPv6Mreq)\n-\terr := getsockopt(fd, level, opt, uintptr(unsafe.Pointer(&value)), &vallen)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value), &vallen)\n \treturn &value, err\n }\n \n-//sys\tsetsockopt(s int, level int, name int, val *byte, vallen Socklen_t) (err error)\n+//sys\tsetsockopt(s int, level int, name int, val unsafe.Pointer, vallen Socklen_t) (err error)\n //setsockopt(s _C_int, level _C_int, optname _C_int, val *byte, vallen Socklen_t) _C_int\n \n func SetsockoptByte(fd, level, opt int, value byte) (err error) {\n \tvar n = byte(value)\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(&n)), 1)\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(&n), 1)\n }\n \n func SetsockoptInt(fd, level, opt int, value int) (err error) {\n \tvar n = int32(value)\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(&n)), 4)\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(&n), 4)\n }\n \n func SetsockoptInet4Addr(fd, level, opt int, value [4]byte) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(&value[0])), 4)\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(&value[0]), 4)\n }\n \n func SetsockoptTimeval(fd, level, opt int, tv *Timeval) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(tv)), Socklen_t(unsafe.Sizeof(*tv)))\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(tv), Socklen_t(unsafe.Sizeof(*tv)))\n }\n \n func SetsockoptICMPv6Filter(fd, level, opt int, filter *ICMPv6Filter) error {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(filter)), SizeofICMPv6Filter)\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(filter), SizeofICMPv6Filter)\n }\n \n type Linger struct {\n@@ -282,23 +282,23 @@ type Linger struct {\n }\n \n func SetsockoptLinger(fd, level, opt int, l *Linger) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(l)), Socklen_t(unsafe.Sizeof(*l)))\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(l), Socklen_t(unsafe.Sizeof(*l)))\n }\n \n func SetsockoptIPMreq(fd, level, opt int, mreq *IPMreq) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(mreq)), Socklen_t(unsafe.Sizeof(*mreq)))\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(mreq), Socklen_t(unsafe.Sizeof(*mreq)))\n }\n \n func SetsockoptIPMreqn(fd, level, opt int, mreq *IPMreqn) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(mreq)), Socklen_t(unsafe.Sizeof(*mreq)))\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(mreq), Socklen_t(unsafe.Sizeof(*mreq)))\n }\n \n func SetsockoptIPv6Mreq(fd, level, opt int, mreq *IPv6Mreq) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(mreq)), Socklen_t(unsafe.Sizeof(*mreq)))\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(mreq), Socklen_t(unsafe.Sizeof(*mreq)))\n }\n \n func SetsockoptString(fd, level, opt int, s string) (err error) {\n-\treturn setsockopt(fd, level, opt, (*byte)(unsafe.Pointer(&[]byte(s)[0])), Socklen_t(len(s)))\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(&[]byte(s)[0]), Socklen_t(len(s)))\n }\n \n //sys\trecvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *Socklen_t) (n int, err error)"}, {"sha": "fd96524f13bd87aed1720a6e870f1e08783289d0", "filename": "libgo/go/syscall/socket_posix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsocket_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsocket_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket_posix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -18,7 +18,7 @@ package syscall\n //sysnb\tsocketpair(domain int, typ int, proto int, fd *[2]_C_int) (err error)\n //socketpair(domain _C_int, typ _C_int, protocol _C_int, fd *[2]_C_int) _C_int\n \n-//sys\tgetsockopt(s int, level int, name int, val uintptr, vallen *Socklen_t) (err error)\n+//sys\tgetsockopt(s int, level int, name int, val unsafe.Pointer, vallen *Socklen_t) (err error)\n //getsockopt(s _C_int, level _C_int, name _C_int, val *byte, vallen *Socklen_t) _C_int\n \n //sys\tsendto(s int, buf []byte, flags int, to *RawSockaddrAny, tolen Socklen_t) (err error)"}, {"sha": "04400107d06f69bea46aeb9a6c286967f7358403", "filename": "libgo/go/syscall/socket_xnet.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsocket_xnet.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsocket_xnet.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket_xnet.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -19,7 +19,7 @@ package syscall\n //sysnb\tsocketpair(domain int, typ int, proto int, fd *[2]_C_int) (err error)\n //__xnet_socketpair(domain _C_int, typ _C_int, protocol _C_int, fd *[2]_C_int) _C_int\n \n-//sys\tgetsockopt(s int, level int, name int, val uintptr, vallen *Socklen_t) (err error)\n+//sys\tgetsockopt(s int, level int, name int, val unsafe.Pointer, vallen *Socklen_t) (err error)\n //__xnet_getsockopt(s _C_int, level _C_int, name _C_int, val *byte, vallen *Socklen_t) _C_int\n \n //sys\tsendto(s int, buf []byte, flags int, to *RawSockaddrAny, tolen Socklen_t) (err error)"}, {"sha": "fcb90dbfa753b54879d0b5964c3ded38992c4dbc", "filename": "libgo/go/syscall/syscall_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -124,7 +124,7 @@ func (m *mmapper) Mmap(fd int, offset int64, length int, prot int, flags int) (d\n \t\tcap  int\n \t}{addr, length, length}\n \n-\t// Use unsafe to turn sl into a []byte.\n+\t// Use unsafeto turn sl into a []byte.\n \tb := *(*[]byte)(unsafe.Pointer(&sl))\n \n \t// Register mapping in m and return it."}, {"sha": "e6f3c6d7903214c776d08afa983a56b7252e520d", "filename": "libgo/go/testing/benchmark.go", "status": "modified", "additions": 92, "deletions": 7, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftesting%2Fbenchmark.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftesting%2Fbenchmark.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftesting%2Fbenchmark.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -10,6 +10,7 @@ import (\n \t\"os\"\n \t\"runtime\"\n \t\"sync\"\n+\t\"sync/atomic\"\n \t\"time\"\n )\n \n@@ -34,12 +35,15 @@ type InternalBenchmark struct {\n // timing and to specify the number of iterations to run.\n type B struct {\n \tcommon\n-\tN               int\n-\tbenchmark       InternalBenchmark\n-\tbytes           int64\n-\ttimerOn         bool\n-\tshowAllocResult bool\n-\tresult          BenchmarkResult\n+\tN                int\n+\tpreviousN        int           // number of iterations in the previous run\n+\tpreviousDuration time.Duration // total duration of the previous run\n+\tbenchmark        InternalBenchmark\n+\tbytes            int64\n+\ttimerOn          bool\n+\tshowAllocResult  bool\n+\tresult           BenchmarkResult\n+\tparallelism      int // RunParallel creates parallelism*GOMAXPROCS goroutines\n \t// The initial states of memStats.Mallocs and memStats.TotalAlloc.\n \tstartAllocs uint64\n \tstartBytes  uint64\n@@ -74,7 +78,7 @@ func (b *B) StopTimer() {\n \t}\n }\n \n-// ResetTimer sets the elapsed benchmark time to zero.\n+// ResetTimer zeros the elapsed benchmark time and memory allocation counters.\n // It does not affect whether the timer is running.\n func (b *B) ResetTimer() {\n \tif b.timerOn {\n@@ -114,10 +118,13 @@ func (b *B) runN(n int) {\n \t// by clearing garbage from previous runs.\n \truntime.GC()\n \tb.N = n\n+\tb.parallelism = 1\n \tb.ResetTimer()\n \tb.StartTimer()\n \tb.benchmark.F(b)\n \tb.StopTimer()\n+\tb.previousN = n\n+\tb.previousDuration = b.duration\n }\n \n func min(x, y int) int {\n@@ -343,6 +350,84 @@ func (b *B) trimOutput() {\n \t}\n }\n \n+// A PB is used by RunParallel for running parallel benchmarks.\n+type PB struct {\n+\tglobalN *uint64 // shared between all worker goroutines iteration counter\n+\tgrain   uint64  // acquire that many iterations from globalN at once\n+\tcache   uint64  // local cache of acquired iterations\n+\tbN      uint64  // total number of iterations to execute (b.N)\n+}\n+\n+// Next reports whether there are more iterations to execute.\n+func (pb *PB) Next() bool {\n+\tif pb.cache == 0 {\n+\t\tn := atomic.AddUint64(pb.globalN, pb.grain)\n+\t\tif n <= pb.bN {\n+\t\t\tpb.cache = pb.grain\n+\t\t} else if n < pb.bN+pb.grain {\n+\t\t\tpb.cache = pb.bN + pb.grain - n\n+\t\t} else {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\tpb.cache--\n+\treturn true\n+}\n+\n+// RunParallel runs a benchmark in parallel.\n+// It creates multiple goroutines and distributes b.N iterations among them.\n+// The number of goroutines defaults to GOMAXPROCS. To increase parallelism for\n+// non-CPU-bound benchmarks, call SetParallelism before RunParallel.\n+// RunParallel is usually used with the go test -cpu flag.\n+//\n+// The body function will be run in each goroutine. It should set up any\n+// goroutine-local state and then iterate until pb.Next returns false.\n+// It should not use the StartTimer, StopTimer, or ResetTimer functions,\n+// because they have global effect.\n+func (b *B) RunParallel(body func(*PB)) {\n+\t// Calculate grain size as number of iterations that take ~100\u00b5s.\n+\t// 100\u00b5s is enough to amortize the overhead and provide sufficient\n+\t// dynamic load balancing.\n+\tgrain := uint64(0)\n+\tif b.previousN > 0 && b.previousDuration > 0 {\n+\t\tgrain = 1e5 * uint64(b.previousN) / uint64(b.previousDuration)\n+\t}\n+\tif grain < 1 {\n+\t\tgrain = 1\n+\t}\n+\t// We expect the inner loop and function call to take at least 10ns,\n+\t// so do not do more than 100\u00b5s/10ns=1e4 iterations.\n+\tif grain > 1e4 {\n+\t\tgrain = 1e4\n+\t}\n+\n+\tn := uint64(0)\n+\tnumProcs := b.parallelism * runtime.GOMAXPROCS(0)\n+\tvar wg sync.WaitGroup\n+\twg.Add(numProcs)\n+\tfor p := 0; p < numProcs; p++ {\n+\t\tgo func() {\n+\t\t\tdefer wg.Done()\n+\t\t\tpb := &PB{\n+\t\t\t\tglobalN: &n,\n+\t\t\t\tgrain:   grain,\n+\t\t\t\tbN:      uint64(b.N),\n+\t\t\t}\n+\t\t\tbody(pb)\n+\t\t}()\n+\t}\n+\twg.Wait()\n+}\n+\n+// SetParallelism sets the number of goroutines used by RunParallel to p*GOMAXPROCS.\n+// There is usually no need to call SetParallelism for CPU-bound benchmarks.\n+// If p is less than 1, this call will have no effect.\n+func (b *B) SetParallelism(p int) {\n+\tif p >= 1 {\n+\t\tb.parallelism = p\n+\t}\n+}\n+\n // Benchmark benchmarks a single function. Useful for creating\n // custom benchmarks that do not use the \"go test\" command.\n func Benchmark(f func(b *B)) BenchmarkResult {"}, {"sha": "9997b9920424509670b61166e94fa20406f37e72", "filename": "libgo/go/testing/benchmark_test.go", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftesting%2Fbenchmark_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftesting%2Fbenchmark_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftesting%2Fbenchmark_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -5,7 +5,11 @@\n package testing_test\n \n import (\n+\t\"bytes\"\n+\t\"runtime\"\n+\t\"sync/atomic\"\n \t\"testing\"\n+\t\"text/template\"\n )\n \n var roundDownTests = []struct {\n@@ -56,3 +60,53 @@ func TestRoundUp(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+func TestRunParallel(t *testing.T) {\n+\ttesting.Benchmark(func(b *testing.B) {\n+\t\tprocs := uint32(0)\n+\t\titers := uint64(0)\n+\t\tb.SetParallelism(3)\n+\t\tb.RunParallel(func(pb *testing.PB) {\n+\t\t\tatomic.AddUint32(&procs, 1)\n+\t\t\tfor pb.Next() {\n+\t\t\t\tatomic.AddUint64(&iters, 1)\n+\t\t\t}\n+\t\t})\n+\t\tif want := uint32(3 * runtime.GOMAXPROCS(0)); procs != want {\n+\t\t\tt.Errorf(\"got %v procs, want %v\", procs, want)\n+\t\t}\n+\t\tif iters != uint64(b.N) {\n+\t\t\tt.Errorf(\"got %v iters, want %v\", iters, b.N)\n+\t\t}\n+\t})\n+}\n+\n+func TestRunParallelFail(t *testing.T) {\n+\ttesting.Benchmark(func(b *testing.B) {\n+\t\tb.RunParallel(func(pb *testing.PB) {\n+\t\t\t// The function must be able to log/abort\n+\t\t\t// w/o crashing/deadlocking the whole benchmark.\n+\t\t\tb.Log(\"log\")\n+\t\t\tb.Error(\"error\")\n+\t\t\tb.Fatal(\"fatal\")\n+\t\t})\n+\t})\n+}\n+\n+func ExampleB_RunParallel() {\n+\t// Parallel benchmark for text/template.Template.Execute on a single object.\n+\ttesting.Benchmark(func(b *testing.B) {\n+\t\ttempl := template.Must(template.New(\"test\").Parse(\"Hello, {{.}}!\"))\n+\t\t// RunParallel will create GOMAXPROCS goroutines\n+\t\t// and distribute work among them.\n+\t\tb.RunParallel(func(pb *testing.PB) {\n+\t\t\t// Each goroutine has its own bytes.Buffer.\n+\t\t\tvar buf bytes.Buffer\n+\t\t\tfor pb.Next() {\n+\t\t\t\t// The loop body is executed b.N times total across all goroutines.\n+\t\t\t\tbuf.Reset()\n+\t\t\t\ttempl.Execute(&buf, \"World\")\n+\t\t\t}\n+\t\t})\n+\t})\n+}"}, {"sha": "855f3a9bbe9145e1fd69d2111405adf36dbd47f5", "filename": "libgo/go/testing/testing.go", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftesting%2Ftesting.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftesting%2Ftesting.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftesting%2Ftesting.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -43,6 +43,7 @@\n //\n // If a benchmark needs some expensive setup before running, the timer\n // may be reset:\n+//\n //     func BenchmarkBigLen(b *testing.B) {\n //         big := NewBig()\n //         b.ResetTimer()\n@@ -51,6 +52,21 @@\n //         }\n //     }\n //\n+// If a benchmark needs to test performance in a parallel setting, it may use\n+// the RunParallel helper function; such benchmarks are intended to be used with\n+// the go test -cpu flag:\n+//\n+//     func BenchmarkTemplateParallel(b *testing.B) {\n+//         templ := template.Must(template.New(\"test\").Parse(\"Hello, {{.}}!\"))\n+//         b.RunParallel(func(pb *testing.PB) {\n+//             var buf bytes.Buffer\n+//             for pb.Next() {\n+//                 buf.Reset()\n+//                 templ.Execute(&buf, \"World\")\n+//             }\n+//         })\n+//     }\n+//\n // Examples\n //\n // The package also runs and verifies example code. Example functions may\n@@ -143,10 +159,11 @@ var (\n // common holds the elements common between T and B and\n // captures common methods such as Errorf.\n type common struct {\n-\tmu      sync.RWMutex // guards output and failed\n-\toutput  []byte       // Output generated by test or benchmark.\n-\tfailed  bool         // Test or benchmark has failed.\n-\tskipped bool         // Test of benchmark has been skipped.\n+\tmu       sync.RWMutex // guards output and failed\n+\toutput   []byte       // Output generated by test or benchmark.\n+\tfailed   bool         // Test or benchmark has failed.\n+\tskipped  bool         // Test of benchmark has been skipped.\n+\tfinished bool\n \n \tstart    time.Time // Time test or benchmark started\n \tduration time.Duration\n@@ -275,6 +292,7 @@ func (c *common) FailNow() {\n \t// it would run on a test failure.  Because we send on c.signal during\n \t// a top-of-stack deferred function now, we know that the send\n \t// only happens after any other stacked defers have completed.\n+\tc.finished = true\n \truntime.Goexit()\n }\n \n@@ -338,6 +356,7 @@ func (c *common) Skipf(format string, args ...interface{}) {\n // those other goroutines.\n func (c *common) SkipNow() {\n \tc.skip()\n+\tc.finished = true\n \truntime.Goexit()\n }\n \n@@ -379,7 +398,11 @@ func tRunner(t *T, test *InternalTest) {\n \tdefer func() {\n \t\tt.duration = time.Now().Sub(t.start)\n \t\t// If the test panicked, print any test output before dying.\n-\t\tif err := recover(); err != nil {\n+\t\terr := recover()\n+\t\tif !t.finished && err == nil {\n+\t\t\terr = fmt.Errorf(\"test executed panic(nil) or runtime.Goexit\")\n+\t\t}\n+\t\tif err != nil {\n \t\t\tt.Fail()\n \t\t\tt.report()\n \t\t\tpanic(err)\n@@ -389,6 +412,7 @@ func tRunner(t *T, test *InternalTest) {\n \n \tt.start = time.Now()\n \ttest.F(t)\n+\tt.finished = true\n }\n \n // An internal function but exported because it is cross-package; part of the implementation"}, {"sha": "086ab5660eb935fd0d95eeebda6d4fbe678b34f4", "filename": "libgo/go/text/scanner/scanner_test.go", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Fscanner%2Fscanner_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Fscanner%2Fscanner_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Fscanner%2Fscanner_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -360,7 +360,7 @@ func TestScanSelectedMask(t *testing.T) {\n func TestScanNext(t *testing.T) {\n \tconst BOM = '\\uFEFF'\n \tBOMs := string(BOM)\n-\ts := new(Scanner).Init(bytes.NewBufferString(BOMs + \"if a == bcd /* com\" + BOMs + \"ment */ {\\n\\ta += c\\n}\" + BOMs + \"// line comment ending in eof\"))\n+\ts := new(Scanner).Init(strings.NewReader(BOMs + \"if a == bcd /* com\" + BOMs + \"ment */ {\\n\\ta += c\\n}\" + BOMs + \"// line comment ending in eof\"))\n \tcheckTok(t, s, 1, s.Scan(), Ident, \"if\") // the first BOM is ignored\n \tcheckTok(t, s, 1, s.Scan(), Ident, \"a\")\n \tcheckTok(t, s, 1, s.Scan(), '=', \"=\")\n@@ -402,7 +402,7 @@ func TestScanWhitespace(t *testing.T) {\n }\n \n func testError(t *testing.T, src, pos, msg string, tok rune) {\n-\ts := new(Scanner).Init(bytes.NewBufferString(src))\n+\ts := new(Scanner).Init(strings.NewReader(src))\n \terrorCalled := false\n \ts.Error = func(s *Scanner, m string) {\n \t\tif !errorCalled {\n@@ -491,13 +491,13 @@ func checkScanPos(t *testing.T, s *Scanner, offset, line, column int, char rune)\n \n func TestPos(t *testing.T) {\n \t// corner case: empty source\n-\ts := new(Scanner).Init(bytes.NewBufferString(\"\"))\n+\ts := new(Scanner).Init(strings.NewReader(\"\"))\n \tcheckPos(t, s.Pos(), Position{Offset: 0, Line: 1, Column: 1})\n \ts.Peek() // peek doesn't affect the position\n \tcheckPos(t, s.Pos(), Position{Offset: 0, Line: 1, Column: 1})\n \n \t// corner case: source with only a newline\n-\ts = new(Scanner).Init(bytes.NewBufferString(\"\\n\"))\n+\ts = new(Scanner).Init(strings.NewReader(\"\\n\"))\n \tcheckPos(t, s.Pos(), Position{Offset: 0, Line: 1, Column: 1})\n \tcheckNextPos(t, s, 1, 2, 1, '\\n')\n \t// after EOF position doesn't change\n@@ -509,7 +509,7 @@ func TestPos(t *testing.T) {\n \t}\n \n \t// corner case: source with only a single character\n-\ts = new(Scanner).Init(bytes.NewBufferString(\"\u672c\"))\n+\ts = new(Scanner).Init(strings.NewReader(\"\u672c\"))\n \tcheckPos(t, s.Pos(), Position{Offset: 0, Line: 1, Column: 1})\n \tcheckNextPos(t, s, 3, 1, 2, '\u672c')\n \t// after EOF position doesn't change\n@@ -521,7 +521,7 @@ func TestPos(t *testing.T) {\n \t}\n \n \t// positions after calling Next\n-\ts = new(Scanner).Init(bytes.NewBufferString(\"  foo\u096c\u096a  \\n\\n\u672c\u8a9e\\n\"))\n+\ts = new(Scanner).Init(strings.NewReader(\"  foo\u096c\u096a  \\n\\n\u672c\u8a9e\\n\"))\n \tcheckNextPos(t, s, 1, 1, 2, ' ')\n \ts.Peek() // peek doesn't affect the position\n \tcheckNextPos(t, s, 2, 1, 3, ' ')\n@@ -546,7 +546,7 @@ func TestPos(t *testing.T) {\n \t}\n \n \t// positions after calling Scan\n-\ts = new(Scanner).Init(bytes.NewBufferString(\"abc\\n\u672c\u8a9e\\n\\nx\"))\n+\ts = new(Scanner).Init(strings.NewReader(\"abc\\n\u672c\u8a9e\\n\\nx\"))\n \ts.Mode = 0\n \ts.Whitespace = 0\n \tcheckScanPos(t, s, 0, 1, 1, 'a')"}, {"sha": "c0c32d5deca51d2057b4c4658be67486f2159284", "filename": "libgo/go/text/tabwriter/tabwriter.go", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -434,9 +434,13 @@ func (b *Writer) terminateCell(htab bool) int {\n \treturn len(*line)\n }\n \n-func handlePanic(err *error) {\n+func handlePanic(err *error, op string) {\n \tif e := recover(); e != nil {\n-\t\t*err = e.(osError).err // re-panics if it's not a local osError\n+\t\tif nerr, ok := e.(osError); ok {\n+\t\t\t*err = nerr.err\n+\t\t\treturn\n+\t\t}\n+\t\tpanic(\"tabwriter: panic during \" + op)\n \t}\n }\n \n@@ -447,7 +451,7 @@ func handlePanic(err *error) {\n //\n func (b *Writer) Flush() (err error) {\n \tdefer b.reset() // even in the presence of errors\n-\tdefer handlePanic(&err)\n+\tdefer handlePanic(&err, \"Flush\")\n \n \t// add current cell if not empty\n \tif b.cell.size > 0 {\n@@ -471,7 +475,7 @@ var hbar = []byte(\"---\\n\")\n // while writing to the underlying output stream.\n //\n func (b *Writer) Write(buf []byte) (n int, err error) {\n-\tdefer handlePanic(&err)\n+\tdefer handlePanic(&err, \"Write\")\n \n \t// split text into cells\n \tn = 0"}, {"sha": "9d3111e2c2730502017b5c86696dbbd10558cb74", "filename": "libgo/go/text/tabwriter/tabwriter_test.go", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -613,3 +613,40 @@ func Test(t *testing.T) {\n \t\tcheck(t, e.testname, e.minwidth, e.tabwidth, e.padding, e.padchar, e.flags, e.src, e.expected)\n \t}\n }\n+\n+type panicWriter struct{}\n+\n+func (panicWriter) Write([]byte) (int, error) {\n+\tpanic(\"cannot write\")\n+}\n+\n+func wantPanicString(t *testing.T, want string) {\n+\tif e := recover(); e != nil {\n+\t\tgot, ok := e.(string)\n+\t\tswitch {\n+\t\tcase !ok:\n+\t\t\tt.Errorf(\"got %v (%T), want panic string\", e, e)\n+\t\tcase got != want:\n+\t\t\tt.Errorf(\"wrong panic message: got %q, want %q\", got, want)\n+\t\t}\n+\t}\n+}\n+\n+func TestPanicDuringFlush(t *testing.T) {\n+\tdefer wantPanicString(t, \"tabwriter: panic during Flush\")\n+\tvar p panicWriter\n+\tw := new(Writer)\n+\tw.Init(p, 0, 0, 5, ' ', 0)\n+\tio.WriteString(w, \"a\")\n+\tw.Flush()\n+\tt.Errorf(\"failed to panic during Flush\")\n+}\n+\n+func TestPanicDuringWrite(t *testing.T) {\n+\tdefer wantPanicString(t, \"tabwriter: panic during Write\")\n+\tvar p panicWriter\n+\tw := new(Writer)\n+\tw.Init(p, 0, 0, 5, ' ', 0)\n+\tio.WriteString(w, \"a\\n\\n\") // the second \\n triggers a call to w.Write and thus a panic\n+\tt.Errorf(\"failed to panic during Write\")\n+}"}, {"sha": "6de37a19963f35a3c345b549f979e34babc42d36", "filename": "libgo/go/text/template/exec.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftemplate%2Fexec.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftemplate%2Fexec.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftemplate%2Fexec.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -594,6 +594,9 @@ func (s *state) validateType(value reflect.Value, typ reflect.Type) reflect.Valu\n \t\tswitch {\n \t\tcase value.Kind() == reflect.Ptr && value.Type().Elem().AssignableTo(typ):\n \t\t\tvalue = value.Elem()\n+\t\t\tif !value.IsValid() {\n+\t\t\t\ts.errorf(\"dereference of nil pointer of type %s\", typ)\n+\t\t\t}\n \t\tcase reflect.PtrTo(value.Type()).AssignableTo(typ) && value.CanAddr():\n \t\t\tvalue = value.Addr()\n \t\tdefault:"}, {"sha": "868f2cb94c392d649c6ab907e3d9c28cad8e646c", "filename": "libgo/go/text/template/exec_test.go", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftemplate%2Fexec_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftext%2Ftemplate%2Fexec_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftemplate%2Fexec_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -512,6 +512,8 @@ var execTests = []execTest{\n \t{\"bug9\", \"{{.cause}}\", \"neglect\", map[string]string{\"cause\": \"neglect\"}, true},\n \t// Field chain starting with function did not work.\n \t{\"bug10\", \"{{mapOfThree.three}}-{{(mapOfThree).three}}\", \"3-3\", 0, true},\n+\t// Dereferencing nil pointer while evaluating function arguments should not panic. Issue 7333.\n+\t{\"bug11\", \"{{valueString .PS}}\", \"\", T{}, false},\n }\n \n func zeroArgs() string {\n@@ -546,6 +548,11 @@ func vfunc(V, *V) string {\n \treturn \"vfunc\"\n }\n \n+// valueString takes a string, not a pointer.\n+func valueString(v string) string {\n+\treturn \"value is ignored\"\n+}\n+\n func add(args ...int) int {\n \tsum := 0\n \tfor _, x := range args {\n@@ -580,17 +587,18 @@ func mapOfThree() interface{} {\n func testExecute(execTests []execTest, template *Template, t *testing.T) {\n \tb := new(bytes.Buffer)\n \tfuncs := FuncMap{\n-\t\t\"add\":        add,\n-\t\t\"count\":      count,\n-\t\t\"dddArg\":     dddArg,\n-\t\t\"echo\":       echo,\n-\t\t\"makemap\":    makemap,\n-\t\t\"mapOfThree\": mapOfThree,\n-\t\t\"oneArg\":     oneArg,\n-\t\t\"stringer\":   stringer,\n-\t\t\"typeOf\":     typeOf,\n-\t\t\"vfunc\":      vfunc,\n-\t\t\"zeroArgs\":   zeroArgs,\n+\t\t\"add\":         add,\n+\t\t\"count\":       count,\n+\t\t\"dddArg\":      dddArg,\n+\t\t\"echo\":        echo,\n+\t\t\"makemap\":     makemap,\n+\t\t\"mapOfThree\":  mapOfThree,\n+\t\t\"oneArg\":      oneArg,\n+\t\t\"stringer\":    stringer,\n+\t\t\"typeOf\":      typeOf,\n+\t\t\"valueString\": valueString,\n+\t\t\"vfunc\":       vfunc,\n+\t\t\"zeroArgs\":    zeroArgs,\n \t}\n \tfor _, test := range execTests {\n \t\tvar tmpl *Template"}, {"sha": "93273392e9631ed858cc42ff117003bd08a07125", "filename": "libgo/go/time/format_test.go", "status": "added", "additions": 512, "deletions": 0, "changes": 512, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fformat_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fformat_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fformat_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -0,0 +1,512 @@\n+// Copyright 2009 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package time_test\n+\n+import (\n+\t\"fmt\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"testing\"\n+\t\"testing/quick\"\n+\t. \"time\"\n+)\n+\n+type TimeFormatTest struct {\n+\ttime           Time\n+\tformattedValue string\n+}\n+\n+var rfc3339Formats = []TimeFormatTest{\n+\t{Date(2008, 9, 17, 20, 4, 26, 0, UTC), \"2008-09-17T20:04:26Z\"},\n+\t{Date(1994, 9, 17, 20, 4, 26, 0, FixedZone(\"EST\", -18000)), \"1994-09-17T20:04:26-05:00\"},\n+\t{Date(2000, 12, 26, 1, 15, 6, 0, FixedZone(\"OTO\", 15600)), \"2000-12-26T01:15:06+04:20\"},\n+}\n+\n+func TestRFC3339Conversion(t *testing.T) {\n+\tfor _, f := range rfc3339Formats {\n+\t\tif f.time.Format(RFC3339) != f.formattedValue {\n+\t\t\tt.Error(\"RFC3339:\")\n+\t\t\tt.Errorf(\"  want=%+v\", f.formattedValue)\n+\t\t\tt.Errorf(\"  have=%+v\", f.time.Format(RFC3339))\n+\t\t}\n+\t}\n+}\n+\n+type FormatTest struct {\n+\tname   string\n+\tformat string\n+\tresult string\n+}\n+\n+var formatTests = []FormatTest{\n+\t{\"ANSIC\", ANSIC, \"Wed Feb  4 21:00:57 2009\"},\n+\t{\"UnixDate\", UnixDate, \"Wed Feb  4 21:00:57 PST 2009\"},\n+\t{\"RubyDate\", RubyDate, \"Wed Feb 04 21:00:57 -0800 2009\"},\n+\t{\"RFC822\", RFC822, \"04 Feb 09 21:00 PST\"},\n+\t{\"RFC850\", RFC850, \"Wednesday, 04-Feb-09 21:00:57 PST\"},\n+\t{\"RFC1123\", RFC1123, \"Wed, 04 Feb 2009 21:00:57 PST\"},\n+\t{\"RFC1123Z\", RFC1123Z, \"Wed, 04 Feb 2009 21:00:57 -0800\"},\n+\t{\"RFC3339\", RFC3339, \"2009-02-04T21:00:57-08:00\"},\n+\t{\"RFC3339Nano\", RFC3339Nano, \"2009-02-04T21:00:57.0123456-08:00\"},\n+\t{\"Kitchen\", Kitchen, \"9:00PM\"},\n+\t{\"am/pm\", \"3pm\", \"9pm\"},\n+\t{\"AM/PM\", \"3PM\", \"9PM\"},\n+\t{\"two-digit year\", \"06 01 02\", \"09 02 04\"},\n+\t// Three-letter months and days must not be followed by lower-case letter.\n+\t{\"Janet\", \"Hi Janet, the Month is January\", \"Hi Janet, the Month is February\"},\n+\t// Time stamps, Fractional seconds.\n+\t{\"Stamp\", Stamp, \"Feb  4 21:00:57\"},\n+\t{\"StampMilli\", StampMilli, \"Feb  4 21:00:57.012\"},\n+\t{\"StampMicro\", StampMicro, \"Feb  4 21:00:57.012345\"},\n+\t{\"StampNano\", StampNano, \"Feb  4 21:00:57.012345600\"},\n+}\n+\n+func TestFormat(t *testing.T) {\n+\t// The numeric time represents Thu Feb  4 21:00:57.012345600 PST 2010\n+\ttime := Unix(0, 1233810057012345600)\n+\tfor _, test := range formatTests {\n+\t\tresult := time.Format(test.format)\n+\t\tif result != test.result {\n+\t\t\tt.Errorf(\"%s expected %q got %q\", test.name, test.result, result)\n+\t\t}\n+\t}\n+}\n+\n+func TestFormatShortYear(t *testing.T) {\n+\tyears := []int{\n+\t\t-100001, -100000, -99999,\n+\t\t-10001, -10000, -9999,\n+\t\t-1001, -1000, -999,\n+\t\t-101, -100, -99,\n+\t\t-11, -10, -9,\n+\t\t-1, 0, 1,\n+\t\t9, 10, 11,\n+\t\t99, 100, 101,\n+\t\t999, 1000, 1001,\n+\t\t9999, 10000, 10001,\n+\t\t99999, 100000, 100001,\n+\t}\n+\n+\tfor _, y := range years {\n+\t\ttime := Date(y, January, 1, 0, 0, 0, 0, UTC)\n+\t\tresult := time.Format(\"2006.01.02\")\n+\t\tvar want string\n+\t\tif y < 0 {\n+\t\t\t// The 4 in %04d counts the - sign, so print -y instead\n+\t\t\t// and introduce our own - sign.\n+\t\t\twant = fmt.Sprintf(\"-%04d.%02d.%02d\", -y, 1, 1)\n+\t\t} else {\n+\t\t\twant = fmt.Sprintf(\"%04d.%02d.%02d\", y, 1, 1)\n+\t\t}\n+\t\tif result != want {\n+\t\t\tt.Errorf(\"(jan 1 %d).Format(\\\"2006.01.02\\\") = %q, want %q\", y, result, want)\n+\t\t}\n+\t}\n+}\n+\n+type ParseTest struct {\n+\tname       string\n+\tformat     string\n+\tvalue      string\n+\thasTZ      bool // contains a time zone\n+\thasWD      bool // contains a weekday\n+\tyearSign   int  // sign of year, -1 indicates the year is not present in the format\n+\tfracDigits int  // number of digits of fractional second\n+}\n+\n+var parseTests = []ParseTest{\n+\t{\"ANSIC\", ANSIC, \"Thu Feb  4 21:00:57 2010\", false, true, 1, 0},\n+\t{\"UnixDate\", UnixDate, \"Thu Feb  4 21:00:57 PST 2010\", true, true, 1, 0},\n+\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 -0800 2010\", true, true, 1, 0},\n+\t{\"RFC850\", RFC850, \"Thursday, 04-Feb-10 21:00:57 PST\", true, true, 1, 0},\n+\t{\"RFC1123\", RFC1123, \"Thu, 04 Feb 2010 21:00:57 PST\", true, true, 1, 0},\n+\t{\"RFC1123\", RFC1123, \"Thu, 04 Feb 2010 22:00:57 PDT\", true, true, 1, 0},\n+\t{\"RFC1123Z\", RFC1123Z, \"Thu, 04 Feb 2010 21:00:57 -0800\", true, true, 1, 0},\n+\t{\"RFC3339\", RFC3339, \"2010-02-04T21:00:57-08:00\", true, false, 1, 0},\n+\t{\"custom: \\\"2006-01-02 15:04:05-07\\\"\", \"2006-01-02 15:04:05-07\", \"2010-02-04 21:00:57-08\", true, false, 1, 0},\n+\t// Optional fractional seconds.\n+\t{\"ANSIC\", ANSIC, \"Thu Feb  4 21:00:57.0 2010\", false, true, 1, 1},\n+\t{\"UnixDate\", UnixDate, \"Thu Feb  4 21:00:57.01 PST 2010\", true, true, 1, 2},\n+\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57.012 -0800 2010\", true, true, 1, 3},\n+\t{\"RFC850\", RFC850, \"Thursday, 04-Feb-10 21:00:57.0123 PST\", true, true, 1, 4},\n+\t{\"RFC1123\", RFC1123, \"Thu, 04 Feb 2010 21:00:57.01234 PST\", true, true, 1, 5},\n+\t{\"RFC1123Z\", RFC1123Z, \"Thu, 04 Feb 2010 21:00:57.01234 -0800\", true, true, 1, 5},\n+\t{\"RFC3339\", RFC3339, \"2010-02-04T21:00:57.012345678-08:00\", true, false, 1, 9},\n+\t{\"custom: \\\"2006-01-02 15:04:05\\\"\", \"2006-01-02 15:04:05\", \"2010-02-04 21:00:57.0\", false, false, 1, 0},\n+\t// Amount of white space should not matter.\n+\t{\"ANSIC\", ANSIC, \"Thu Feb 4 21:00:57 2010\", false, true, 1, 0},\n+\t{\"ANSIC\", ANSIC, \"Thu      Feb     4     21:00:57     2010\", false, true, 1, 0},\n+\t// Case should not matter\n+\t{\"ANSIC\", ANSIC, \"THU FEB 4 21:00:57 2010\", false, true, 1, 0},\n+\t{\"ANSIC\", ANSIC, \"thu feb 4 21:00:57 2010\", false, true, 1, 0},\n+\t// Fractional seconds.\n+\t{\"millisecond\", \"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 21:00:57.012 2010\", false, true, 1, 3},\n+\t{\"microsecond\", \"Mon Jan _2 15:04:05.000000 2006\", \"Thu Feb  4 21:00:57.012345 2010\", false, true, 1, 6},\n+\t{\"nanosecond\", \"Mon Jan _2 15:04:05.000000000 2006\", \"Thu Feb  4 21:00:57.012345678 2010\", false, true, 1, 9},\n+\t// Leading zeros in other places should not be taken as fractional seconds.\n+\t{\"zero1\", \"2006.01.02.15.04.05.0\", \"2010.02.04.21.00.57.0\", false, false, 1, 1},\n+\t{\"zero2\", \"2006.01.02.15.04.05.00\", \"2010.02.04.21.00.57.01\", false, false, 1, 2},\n+\t// Month and day names only match when not followed by a lower-case letter.\n+\t{\"Janet\", \"Hi Janet, the Month is January: Jan _2 15:04:05 2006\", \"Hi Janet, the Month is February: Feb  4 21:00:57 2010\", false, true, 1, 0},\n+\n+\t// GMT with offset.\n+\t{\"GMT-8\", UnixDate, \"Fri Feb  5 05:00:57 GMT-8 2010\", true, true, 1, 0},\n+\n+\t// Accept any number of fractional second digits (including none) for .999...\n+\t// In Go 1, .999... was completely ignored in the format, meaning the first two\n+\t// cases would succeed, but the next four would not. Go 1.1 accepts all six.\n+\t{\"\", \"2006-01-02 15:04:05.9999 -0700 MST\", \"2010-02-04 21:00:57 -0800 PST\", true, false, 1, 0},\n+\t{\"\", \"2006-01-02 15:04:05.999999999 -0700 MST\", \"2010-02-04 21:00:57 -0800 PST\", true, false, 1, 0},\n+\t{\"\", \"2006-01-02 15:04:05.9999 -0700 MST\", \"2010-02-04 21:00:57.0123 -0800 PST\", true, false, 1, 4},\n+\t{\"\", \"2006-01-02 15:04:05.999999999 -0700 MST\", \"2010-02-04 21:00:57.0123 -0800 PST\", true, false, 1, 4},\n+\t{\"\", \"2006-01-02 15:04:05.9999 -0700 MST\", \"2010-02-04 21:00:57.012345678 -0800 PST\", true, false, 1, 9},\n+\t{\"\", \"2006-01-02 15:04:05.999999999 -0700 MST\", \"2010-02-04 21:00:57.012345678 -0800 PST\", true, false, 1, 9},\n+\n+\t// issue 4502.\n+\t{\"\", StampNano, \"Feb  4 21:00:57.012345678\", false, false, -1, 9},\n+\t{\"\", \"Jan _2 15:04:05.999\", \"Feb  4 21:00:57.012300000\", false, false, -1, 4},\n+\t{\"\", \"Jan _2 15:04:05.999\", \"Feb  4 21:00:57.012345678\", false, false, -1, 9},\n+\t{\"\", \"Jan _2 15:04:05.999999999\", \"Feb  4 21:00:57.0123\", false, false, -1, 4},\n+\t{\"\", \"Jan _2 15:04:05.999999999\", \"Feb  4 21:00:57.012345678\", false, false, -1, 9},\n+}\n+\n+func TestParse(t *testing.T) {\n+\tfor _, test := range parseTests {\n+\t\ttime, err := Parse(test.format, test.value)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"%s error: %v\", test.name, err)\n+\t\t} else {\n+\t\t\tcheckTime(time, &test, t)\n+\t\t}\n+\t}\n+}\n+\n+func TestParseInSydney(t *testing.T) {\n+\tloc, err := LoadLocation(\"Australia/Sydney\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\t// Check that Parse (and ParseInLocation) understand\n+\t// that Feb EST and Aug EST are different time zones in Sydney\n+\t// even though both are called EST.\n+\tt1, err := ParseInLocation(\"Jan 02 2006 MST\", \"Feb 01 2013 EST\", loc)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tt2 := Date(2013, February, 1, 00, 00, 00, 0, loc)\n+\tif t1 != t2 {\n+\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 EST, Sydney) = %v, want %v\", t1, t2)\n+\t}\n+\t_, offset := t1.Zone()\n+\tif offset != 11*60*60 {\n+\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 EST, Sydney).Zone = _, %d, want _, %d\", offset, 11*60*60)\n+\t}\n+\n+\tt1, err = ParseInLocation(\"Jan 02 2006 MST\", \"Aug 01 2013 EST\", loc)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tt2 = Date(2013, August, 1, 00, 00, 00, 0, loc)\n+\tif t1 != t2 {\n+\t\tt.Fatalf(\"ParseInLocation(Aug 01 2013 EST, Sydney) = %v, want %v\", t1, t2)\n+\t}\n+\t_, offset = t1.Zone()\n+\tif offset != 10*60*60 {\n+\t\tt.Fatalf(\"ParseInLocation(Aug 01 2013 EST, Sydney).Zone = _, %d, want _, %d\", offset, 10*60*60)\n+\t}\n+}\n+\n+func TestLoadLocationZipFile(t *testing.T) {\n+\tt.Skip(\"gccgo does not use the zip file\")\n+\n+\tForceZipFileForTesting(true)\n+\tdefer ForceZipFileForTesting(false)\n+\n+\t_, err := LoadLocation(\"Australia/Sydney\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+}\n+\n+var rubyTests = []ParseTest{\n+\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 -0800 2010\", true, true, 1, 0},\n+\t// Ignore the time zone in the test. If it parses, it'll be OK.\n+\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 -0000 2010\", false, true, 1, 0},\n+\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 +0000 2010\", false, true, 1, 0},\n+\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 +1130 2010\", false, true, 1, 0},\n+}\n+\n+// Problematic time zone format needs special tests.\n+func TestRubyParse(t *testing.T) {\n+\tfor _, test := range rubyTests {\n+\t\ttime, err := Parse(test.format, test.value)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"%s error: %v\", test.name, err)\n+\t\t} else {\n+\t\t\tcheckTime(time, &test, t)\n+\t\t}\n+\t}\n+}\n+\n+func checkTime(time Time, test *ParseTest, t *testing.T) {\n+\t// The time should be Thu Feb  4 21:00:57 PST 2010\n+\tif test.yearSign >= 0 && test.yearSign*time.Year() != 2010 {\n+\t\tt.Errorf(\"%s: bad year: %d not %d\", test.name, time.Year(), 2010)\n+\t}\n+\tif time.Month() != February {\n+\t\tt.Errorf(\"%s: bad month: %s not %s\", test.name, time.Month(), February)\n+\t}\n+\tif time.Day() != 4 {\n+\t\tt.Errorf(\"%s: bad day: %d not %d\", test.name, time.Day(), 4)\n+\t}\n+\tif time.Hour() != 21 {\n+\t\tt.Errorf(\"%s: bad hour: %d not %d\", test.name, time.Hour(), 21)\n+\t}\n+\tif time.Minute() != 0 {\n+\t\tt.Errorf(\"%s: bad minute: %d not %d\", test.name, time.Minute(), 0)\n+\t}\n+\tif time.Second() != 57 {\n+\t\tt.Errorf(\"%s: bad second: %d not %d\", test.name, time.Second(), 57)\n+\t}\n+\t// Nanoseconds must be checked against the precision of the input.\n+\tnanosec, err := strconv.ParseUint(\"012345678\"[:test.fracDigits]+\"000000000\"[:9-test.fracDigits], 10, 0)\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif time.Nanosecond() != int(nanosec) {\n+\t\tt.Errorf(\"%s: bad nanosecond: %d not %d\", test.name, time.Nanosecond(), nanosec)\n+\t}\n+\tname, offset := time.Zone()\n+\tif test.hasTZ && offset != -28800 {\n+\t\tt.Errorf(\"%s: bad tz offset: %s %d not %d\", test.name, name, offset, -28800)\n+\t}\n+\tif test.hasWD && time.Weekday() != Thursday {\n+\t\tt.Errorf(\"%s: bad weekday: %s not %s\", test.name, time.Weekday(), Thursday)\n+\t}\n+}\n+\n+func TestFormatAndParse(t *testing.T) {\n+\tconst fmt = \"Mon MST \" + RFC3339 // all fields\n+\tf := func(sec int64) bool {\n+\t\tt1 := Unix(sec, 0)\n+\t\tif t1.Year() < 1000 || t1.Year() > 9999 {\n+\t\t\t// not required to work\n+\t\t\treturn true\n+\t\t}\n+\t\tt2, err := Parse(fmt, t1.Format(fmt))\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"error: %s\", err)\n+\t\t\treturn false\n+\t\t}\n+\t\tif t1.Unix() != t2.Unix() || t1.Nanosecond() != t2.Nanosecond() {\n+\t\t\tt.Errorf(\"FormatAndParse %d: %q(%d) %q(%d)\", sec, t1, t1.Unix(), t2, t2.Unix())\n+\t\t\treturn false\n+\t\t}\n+\t\treturn true\n+\t}\n+\tf32 := func(sec int32) bool { return f(int64(sec)) }\n+\tcfg := &quick.Config{MaxCount: 10000}\n+\n+\t// Try a reasonable date first, then the huge ones.\n+\tif err := quick.Check(f32, cfg); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif err := quick.Check(f, cfg); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+}\n+\n+type ParseTimeZoneTest struct {\n+\tvalue  string\n+\tlength int\n+\tok     bool\n+}\n+\n+var parseTimeZoneTests = []ParseTimeZoneTest{\n+\t{\"gmt hi there\", 0, false},\n+\t{\"GMT hi there\", 3, true},\n+\t{\"GMT+12 hi there\", 6, true},\n+\t{\"GMT+00 hi there\", 3, true}, // 0 or 00 is not a legal offset.\n+\t{\"GMT-5 hi there\", 5, true},\n+\t{\"GMT-51 hi there\", 3, true},\n+\t{\"ChST hi there\", 4, true},\n+\t{\"MSDx\", 3, true},\n+\t{\"MSDY\", 0, false}, // four letters must end in T.\n+\t{\"ESAST hi\", 5, true},\n+\t{\"ESASTT hi\", 0, false}, // run of upper-case letters too long.\n+\t{\"ESATY hi\", 0, false},  // five letters must end in T.\n+}\n+\n+func TestParseTimeZone(t *testing.T) {\n+\tfor _, test := range parseTimeZoneTests {\n+\t\tlength, ok := ParseTimeZone(test.value)\n+\t\tif ok != test.ok {\n+\t\t\tt.Errorf(\"expected %t for %q got %t\", test.ok, test.value, ok)\n+\t\t} else if length != test.length {\n+\t\t\tt.Errorf(\"expected %d for %q got %d\", test.length, test.value, length)\n+\t\t}\n+\t}\n+}\n+\n+type ParseErrorTest struct {\n+\tformat string\n+\tvalue  string\n+\texpect string // must appear within the error\n+}\n+\n+var parseErrorTests = []ParseErrorTest{\n+\t{ANSIC, \"Feb  4 21:00:60 2010\", \"cannot parse\"}, // cannot parse Feb as Mon\n+\t{ANSIC, \"Thu Feb  4 21:00:57 @2010\", \"cannot parse\"},\n+\t{ANSIC, \"Thu Feb  4 21:00:60 2010\", \"second out of range\"},\n+\t{ANSIC, \"Thu Feb  4 21:61:57 2010\", \"minute out of range\"},\n+\t{ANSIC, \"Thu Feb  4 24:00:60 2010\", \"hour out of range\"},\n+\t{\"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 23:00:59x01 2010\", \"cannot parse\"},\n+\t{\"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 23:00:59.xxx 2010\", \"cannot parse\"},\n+\t{\"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 23:00:59.-123 2010\", \"fractional second out of range\"},\n+\t// issue 4502. StampNano requires exactly 9 digits of precision.\n+\t{StampNano, \"Dec  7 11:22:01.000000\", `cannot parse \".000000\" as \".000000000\"`},\n+\t{StampNano, \"Dec  7 11:22:01.0000000000\", \"extra text: 0\"},\n+\t// issue 4493. Helpful errors.\n+\t{RFC3339, \"2006-01-02T15:04:05Z07:00\", `parsing time \"2006-01-02T15:04:05Z07:00\": extra text: 07:00`},\n+\t{RFC3339, \"2006-01-02T15:04_abc\", `parsing time \"2006-01-02T15:04_abc\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"_abc\" as \":\"`},\n+\t{RFC3339, \"2006-01-02T15:04:05_abc\", `parsing time \"2006-01-02T15:04:05_abc\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"_abc\" as \"Z07:00\"`},\n+\t{RFC3339, \"2006-01-02T15:04:05Z_abc\", `parsing time \"2006-01-02T15:04:05Z_abc\": extra text: _abc`},\n+}\n+\n+func TestParseErrors(t *testing.T) {\n+\tfor _, test := range parseErrorTests {\n+\t\t_, err := Parse(test.format, test.value)\n+\t\tif err == nil {\n+\t\t\tt.Errorf(\"expected error for %q %q\", test.format, test.value)\n+\t\t} else if strings.Index(err.Error(), test.expect) < 0 {\n+\t\t\tt.Errorf(\"expected error with %q for %q %q; got %s\", test.expect, test.format, test.value, err)\n+\t\t}\n+\t}\n+}\n+\n+func TestNoonIs12PM(t *testing.T) {\n+\tnoon := Date(0, January, 1, 12, 0, 0, 0, UTC)\n+\tconst expect = \"12:00PM\"\n+\tgot := noon.Format(\"3:04PM\")\n+\tif got != expect {\n+\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n+\t}\n+\tgot = noon.Format(\"03:04PM\")\n+\tif got != expect {\n+\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n+\t}\n+}\n+\n+func TestMidnightIs12AM(t *testing.T) {\n+\tmidnight := Date(0, January, 1, 0, 0, 0, 0, UTC)\n+\texpect := \"12:00AM\"\n+\tgot := midnight.Format(\"3:04PM\")\n+\tif got != expect {\n+\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n+\t}\n+\tgot = midnight.Format(\"03:04PM\")\n+\tif got != expect {\n+\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n+\t}\n+}\n+\n+func Test12PMIsNoon(t *testing.T) {\n+\tnoon, err := Parse(\"3:04PM\", \"12:00PM\")\n+\tif err != nil {\n+\t\tt.Fatal(\"error parsing date:\", err)\n+\t}\n+\tif noon.Hour() != 12 {\n+\t\tt.Errorf(\"got %d; expect 12\", noon.Hour())\n+\t}\n+\tnoon, err = Parse(\"03:04PM\", \"12:00PM\")\n+\tif err != nil {\n+\t\tt.Fatal(\"error parsing date:\", err)\n+\t}\n+\tif noon.Hour() != 12 {\n+\t\tt.Errorf(\"got %d; expect 12\", noon.Hour())\n+\t}\n+}\n+\n+func Test12AMIsMidnight(t *testing.T) {\n+\tmidnight, err := Parse(\"3:04PM\", \"12:00AM\")\n+\tif err != nil {\n+\t\tt.Fatal(\"error parsing date:\", err)\n+\t}\n+\tif midnight.Hour() != 0 {\n+\t\tt.Errorf(\"got %d; expect 0\", midnight.Hour())\n+\t}\n+\tmidnight, err = Parse(\"03:04PM\", \"12:00AM\")\n+\tif err != nil {\n+\t\tt.Fatal(\"error parsing date:\", err)\n+\t}\n+\tif midnight.Hour() != 0 {\n+\t\tt.Errorf(\"got %d; expect 0\", midnight.Hour())\n+\t}\n+}\n+\n+// Check that a time without a Zone still produces a (numeric) time zone\n+// when formatted with MST as a requested zone.\n+func TestMissingZone(t *testing.T) {\n+\ttime, err := Parse(RubyDate, \"Thu Feb 02 16:10:03 -0500 2006\")\n+\tif err != nil {\n+\t\tt.Fatal(\"error parsing date:\", err)\n+\t}\n+\texpect := \"Thu Feb  2 16:10:03 -0500 2006\" // -0500 not EST\n+\tstr := time.Format(UnixDate)               // uses MST as its time zone\n+\tif str != expect {\n+\t\tt.Errorf(\"got %s; expect %s\", str, expect)\n+\t}\n+}\n+\n+func TestMinutesInTimeZone(t *testing.T) {\n+\ttime, err := Parse(RubyDate, \"Mon Jan 02 15:04:05 +0123 2006\")\n+\tif err != nil {\n+\t\tt.Fatal(\"error parsing date:\", err)\n+\t}\n+\texpected := (1*60 + 23) * 60\n+\t_, offset := time.Zone()\n+\tif offset != expected {\n+\t\tt.Errorf(\"ZoneOffset = %d, want %d\", offset, expected)\n+\t}\n+}\n+\n+type SecondsTimeZoneOffsetTest struct {\n+\tformat         string\n+\tvalue          string\n+\texpectedoffset int\n+}\n+\n+var secondsTimeZoneOffsetTests = []SecondsTimeZoneOffsetTest{\n+\t{\"2006-01-02T15:04:05-070000\", \"1871-01-01T05:33:02-003408\", -(34*60 + 8)},\n+\t{\"2006-01-02T15:04:05-07:00:00\", \"1871-01-01T05:33:02-00:34:08\", -(34*60 + 8)},\n+\t{\"2006-01-02T15:04:05-070000\", \"1871-01-01T05:33:02+003408\", 34*60 + 8},\n+\t{\"2006-01-02T15:04:05-07:00:00\", \"1871-01-01T05:33:02+00:34:08\", 34*60 + 8},\n+\t{\"2006-01-02T15:04:05Z070000\", \"1871-01-01T05:33:02-003408\", -(34*60 + 8)},\n+\t{\"2006-01-02T15:04:05Z07:00:00\", \"1871-01-01T05:33:02+00:34:08\", 34*60 + 8},\n+}\n+\n+func TestParseSecondsInTimeZone(t *testing.T) {\n+\t// should accept timezone offsets with seconds like: Zone America/New_York   -4:56:02 -      LMT     1883 Nov 18 12:03:58\n+\tfor _, test := range secondsTimeZoneOffsetTests {\n+\t\ttime, err := Parse(test.format, test.value)\n+\t\tif err != nil {\n+\t\t\tt.Fatal(\"error parsing date:\", err)\n+\t\t}\n+\t\t_, offset := time.Zone()\n+\t\tif offset != test.expectedoffset {\n+\t\t\tt.Errorf(\"ZoneOffset = %d, want %d\", offset, test.expectedoffset)\n+\t\t}\n+\t}\n+}\n+\n+func TestFormatSecondsInTimeZone(t *testing.T) {\n+\td := Date(1871, 9, 17, 20, 4, 26, 0, FixedZone(\"LMT\", -(34*60+8)))\n+\ttimestr := d.Format(\"2006-01-02T15:04:05Z070000\")\n+\texpected := \"1871-09-17T20:04:26-003408\"\n+\tif timestr != expected {\n+\t\tt.Errorf(\"Got %s, want %s\", timestr, expected)\n+\t}\n+}"}, {"sha": "4ba6d478debac433b4307e657be6251b97bad1a7", "filename": "libgo/go/time/internal_test.go", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Finternal_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Finternal_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Finternal_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -36,9 +36,13 @@ func CheckRuntimeTimerOverflow() error {\n \tstartTimer(r)\n \n \ttimeout := 100 * Millisecond\n-\tif runtime.GOOS == \"windows\" {\n-\t\t// Allow more time for gobuilder to succeed.\n+\tswitch runtime.GOOS {\n+\t// Allow more time for gobuilder to succeed.\n+\tcase \"windows\":\n \t\ttimeout = Second\n+\tcase \"plan9\":\n+\t\t// TODO(0intro): We don't know why it is needed.\n+\t\ttimeout = 3 * Second\n \t}\n \n \t// Start a goroutine that should send on t.C before the timeout.\n@@ -74,7 +78,15 @@ func CheckRuntimeTimerOverflow() error {\n \t\t\tif Now().After(stop) {\n \t\t\t\treturn errors.New(\"runtime timer stuck: overflow in addtimer\")\n \t\t\t}\n-\t\t\truntime.Gosched()\n+\t\t\t// Issue 6874. This test previously called runtime.Gosched to try to yield\n+\t\t\t// to the goroutine servicing t, however the scheduler has a bias towards the\n+\t\t\t// previously running goroutine in an idle system. Combined with high load due\n+\t\t\t// to all CPUs busy running tests t's goroutine could be delayed beyond the\n+\t\t\t// timeout window.\n+\t\t\t//\n+\t\t\t// Calling runtime.GC() reduces the worst case lantency for scheduling t by 20x\n+\t\t\t// under the current Go 1.3 scheduler.\n+\t\t\truntime.GC()\n \t\t}\n \t}\n }"}, {"sha": "e86e294ee7a4aba8f8d74f377fe3dc14bc39080f", "filename": "libgo/go/time/sleep_test.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fsleep_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fsleep_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fsleep_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -399,6 +399,9 @@ func TestIssue5745(t *testing.T) {\n }\n \n func TestOverflowRuntimeTimer(t *testing.T) {\n+\tif testing.Short() {\n+\t\tt.Skip(\"skipping in short mode, see issue 6874\")\n+\t}\n \tif err := CheckRuntimeTimerOverflow(); err != nil {\n \t\tt.Fatalf(err.Error())\n \t}"}, {"sha": "36c214b6b093b99d3df23918807bd654d76eae24", "filename": "libgo/go/time/sys_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fsys_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fsys_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fsys_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd linux netbsd openbsd\n+// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n \n package time\n "}, {"sha": "2615517d9ad13c08188214d2f2418915cb7df644", "filename": "libgo/go/time/time_test.go", "status": "modified", "additions": 2, "deletions": 502, "changes": 504, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Ftime_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Ftime_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Ftime_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -12,8 +12,6 @@ import (\n \t\"math/big\"\n \t\"math/rand\"\n \t\"runtime\"\n-\t\"strconv\"\n-\t\"strings\"\n \t\"testing\"\n \t\"testing/quick\"\n \t. \"time\"\n@@ -372,504 +370,6 @@ func TestTruncateRound(t *testing.T) {\n \tquick.Check(f4, cfg)\n }\n \n-type TimeFormatTest struct {\n-\ttime           Time\n-\tformattedValue string\n-}\n-\n-var rfc3339Formats = []TimeFormatTest{\n-\t{Date(2008, 9, 17, 20, 4, 26, 0, UTC), \"2008-09-17T20:04:26Z\"},\n-\t{Date(1994, 9, 17, 20, 4, 26, 0, FixedZone(\"EST\", -18000)), \"1994-09-17T20:04:26-05:00\"},\n-\t{Date(2000, 12, 26, 1, 15, 6, 0, FixedZone(\"OTO\", 15600)), \"2000-12-26T01:15:06+04:20\"},\n-}\n-\n-func TestRFC3339Conversion(t *testing.T) {\n-\tfor _, f := range rfc3339Formats {\n-\t\tif f.time.Format(RFC3339) != f.formattedValue {\n-\t\t\tt.Error(\"RFC3339:\")\n-\t\t\tt.Errorf(\"  want=%+v\", f.formattedValue)\n-\t\t\tt.Errorf(\"  have=%+v\", f.time.Format(RFC3339))\n-\t\t}\n-\t}\n-}\n-\n-type FormatTest struct {\n-\tname   string\n-\tformat string\n-\tresult string\n-}\n-\n-var formatTests = []FormatTest{\n-\t{\"ANSIC\", ANSIC, \"Wed Feb  4 21:00:57 2009\"},\n-\t{\"UnixDate\", UnixDate, \"Wed Feb  4 21:00:57 PST 2009\"},\n-\t{\"RubyDate\", RubyDate, \"Wed Feb 04 21:00:57 -0800 2009\"},\n-\t{\"RFC822\", RFC822, \"04 Feb 09 21:00 PST\"},\n-\t{\"RFC850\", RFC850, \"Wednesday, 04-Feb-09 21:00:57 PST\"},\n-\t{\"RFC1123\", RFC1123, \"Wed, 04 Feb 2009 21:00:57 PST\"},\n-\t{\"RFC1123Z\", RFC1123Z, \"Wed, 04 Feb 2009 21:00:57 -0800\"},\n-\t{\"RFC3339\", RFC3339, \"2009-02-04T21:00:57-08:00\"},\n-\t{\"RFC3339Nano\", RFC3339Nano, \"2009-02-04T21:00:57.0123456-08:00\"},\n-\t{\"Kitchen\", Kitchen, \"9:00PM\"},\n-\t{\"am/pm\", \"3pm\", \"9pm\"},\n-\t{\"AM/PM\", \"3PM\", \"9PM\"},\n-\t{\"two-digit year\", \"06 01 02\", \"09 02 04\"},\n-\t// Three-letter months and days must not be followed by lower-case letter.\n-\t{\"Janet\", \"Hi Janet, the Month is January\", \"Hi Janet, the Month is February\"},\n-\t// Time stamps, Fractional seconds.\n-\t{\"Stamp\", Stamp, \"Feb  4 21:00:57\"},\n-\t{\"StampMilli\", StampMilli, \"Feb  4 21:00:57.012\"},\n-\t{\"StampMicro\", StampMicro, \"Feb  4 21:00:57.012345\"},\n-\t{\"StampNano\", StampNano, \"Feb  4 21:00:57.012345600\"},\n-}\n-\n-func TestFormat(t *testing.T) {\n-\t// The numeric time represents Thu Feb  4 21:00:57.012345600 PST 2010\n-\ttime := Unix(0, 1233810057012345600)\n-\tfor _, test := range formatTests {\n-\t\tresult := time.Format(test.format)\n-\t\tif result != test.result {\n-\t\t\tt.Errorf(\"%s expected %q got %q\", test.name, test.result, result)\n-\t\t}\n-\t}\n-}\n-\n-func TestFormatShortYear(t *testing.T) {\n-\tyears := []int{\n-\t\t-100001, -100000, -99999,\n-\t\t-10001, -10000, -9999,\n-\t\t-1001, -1000, -999,\n-\t\t-101, -100, -99,\n-\t\t-11, -10, -9,\n-\t\t-1, 0, 1,\n-\t\t9, 10, 11,\n-\t\t99, 100, 101,\n-\t\t999, 1000, 1001,\n-\t\t9999, 10000, 10001,\n-\t\t99999, 100000, 100001,\n-\t}\n-\n-\tfor _, y := range years {\n-\t\ttime := Date(y, January, 1, 0, 0, 0, 0, UTC)\n-\t\tresult := time.Format(\"2006.01.02\")\n-\t\tvar want string\n-\t\tif y < 0 {\n-\t\t\t// The 4 in %04d counts the - sign, so print -y instead\n-\t\t\t// and introduce our own - sign.\n-\t\t\twant = fmt.Sprintf(\"-%04d.%02d.%02d\", -y, 1, 1)\n-\t\t} else {\n-\t\t\twant = fmt.Sprintf(\"%04d.%02d.%02d\", y, 1, 1)\n-\t\t}\n-\t\tif result != want {\n-\t\t\tt.Errorf(\"(jan 1 %d).Format(\\\"2006.01.02\\\") = %q, want %q\", y, result, want)\n-\t\t}\n-\t}\n-}\n-\n-type ParseTest struct {\n-\tname       string\n-\tformat     string\n-\tvalue      string\n-\thasTZ      bool // contains a time zone\n-\thasWD      bool // contains a weekday\n-\tyearSign   int  // sign of year, -1 indicates the year is not present in the format\n-\tfracDigits int  // number of digits of fractional second\n-}\n-\n-var parseTests = []ParseTest{\n-\t{\"ANSIC\", ANSIC, \"Thu Feb  4 21:00:57 2010\", false, true, 1, 0},\n-\t{\"UnixDate\", UnixDate, \"Thu Feb  4 21:00:57 PST 2010\", true, true, 1, 0},\n-\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 -0800 2010\", true, true, 1, 0},\n-\t{\"RFC850\", RFC850, \"Thursday, 04-Feb-10 21:00:57 PST\", true, true, 1, 0},\n-\t{\"RFC1123\", RFC1123, \"Thu, 04 Feb 2010 21:00:57 PST\", true, true, 1, 0},\n-\t{\"RFC1123\", RFC1123, \"Thu, 04 Feb 2010 22:00:57 PDT\", true, true, 1, 0},\n-\t{\"RFC1123Z\", RFC1123Z, \"Thu, 04 Feb 2010 21:00:57 -0800\", true, true, 1, 0},\n-\t{\"RFC3339\", RFC3339, \"2010-02-04T21:00:57-08:00\", true, false, 1, 0},\n-\t{\"custom: \\\"2006-01-02 15:04:05-07\\\"\", \"2006-01-02 15:04:05-07\", \"2010-02-04 21:00:57-08\", true, false, 1, 0},\n-\t// Optional fractional seconds.\n-\t{\"ANSIC\", ANSIC, \"Thu Feb  4 21:00:57.0 2010\", false, true, 1, 1},\n-\t{\"UnixDate\", UnixDate, \"Thu Feb  4 21:00:57.01 PST 2010\", true, true, 1, 2},\n-\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57.012 -0800 2010\", true, true, 1, 3},\n-\t{\"RFC850\", RFC850, \"Thursday, 04-Feb-10 21:00:57.0123 PST\", true, true, 1, 4},\n-\t{\"RFC1123\", RFC1123, \"Thu, 04 Feb 2010 21:00:57.01234 PST\", true, true, 1, 5},\n-\t{\"RFC1123Z\", RFC1123Z, \"Thu, 04 Feb 2010 21:00:57.01234 -0800\", true, true, 1, 5},\n-\t{\"RFC3339\", RFC3339, \"2010-02-04T21:00:57.012345678-08:00\", true, false, 1, 9},\n-\t{\"custom: \\\"2006-01-02 15:04:05\\\"\", \"2006-01-02 15:04:05\", \"2010-02-04 21:00:57.0\", false, false, 1, 0},\n-\t// Amount of white space should not matter.\n-\t{\"ANSIC\", ANSIC, \"Thu Feb 4 21:00:57 2010\", false, true, 1, 0},\n-\t{\"ANSIC\", ANSIC, \"Thu      Feb     4     21:00:57     2010\", false, true, 1, 0},\n-\t// Case should not matter\n-\t{\"ANSIC\", ANSIC, \"THU FEB 4 21:00:57 2010\", false, true, 1, 0},\n-\t{\"ANSIC\", ANSIC, \"thu feb 4 21:00:57 2010\", false, true, 1, 0},\n-\t// Fractional seconds.\n-\t{\"millisecond\", \"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 21:00:57.012 2010\", false, true, 1, 3},\n-\t{\"microsecond\", \"Mon Jan _2 15:04:05.000000 2006\", \"Thu Feb  4 21:00:57.012345 2010\", false, true, 1, 6},\n-\t{\"nanosecond\", \"Mon Jan _2 15:04:05.000000000 2006\", \"Thu Feb  4 21:00:57.012345678 2010\", false, true, 1, 9},\n-\t// Leading zeros in other places should not be taken as fractional seconds.\n-\t{\"zero1\", \"2006.01.02.15.04.05.0\", \"2010.02.04.21.00.57.0\", false, false, 1, 1},\n-\t{\"zero2\", \"2006.01.02.15.04.05.00\", \"2010.02.04.21.00.57.01\", false, false, 1, 2},\n-\t// Month and day names only match when not followed by a lower-case letter.\n-\t{\"Janet\", \"Hi Janet, the Month is January: Jan _2 15:04:05 2006\", \"Hi Janet, the Month is February: Feb  4 21:00:57 2010\", false, true, 1, 0},\n-\n-\t// GMT with offset.\n-\t{\"GMT-8\", UnixDate, \"Fri Feb  5 05:00:57 GMT-8 2010\", true, true, 1, 0},\n-\n-\t// Accept any number of fractional second digits (including none) for .999...\n-\t// In Go 1, .999... was completely ignored in the format, meaning the first two\n-\t// cases would succeed, but the next four would not. Go 1.1 accepts all six.\n-\t{\"\", \"2006-01-02 15:04:05.9999 -0700 MST\", \"2010-02-04 21:00:57 -0800 PST\", true, false, 1, 0},\n-\t{\"\", \"2006-01-02 15:04:05.999999999 -0700 MST\", \"2010-02-04 21:00:57 -0800 PST\", true, false, 1, 0},\n-\t{\"\", \"2006-01-02 15:04:05.9999 -0700 MST\", \"2010-02-04 21:00:57.0123 -0800 PST\", true, false, 1, 4},\n-\t{\"\", \"2006-01-02 15:04:05.999999999 -0700 MST\", \"2010-02-04 21:00:57.0123 -0800 PST\", true, false, 1, 4},\n-\t{\"\", \"2006-01-02 15:04:05.9999 -0700 MST\", \"2010-02-04 21:00:57.012345678 -0800 PST\", true, false, 1, 9},\n-\t{\"\", \"2006-01-02 15:04:05.999999999 -0700 MST\", \"2010-02-04 21:00:57.012345678 -0800 PST\", true, false, 1, 9},\n-\n-\t// issue 4502.\n-\t{\"\", StampNano, \"Feb  4 21:00:57.012345678\", false, false, -1, 9},\n-\t{\"\", \"Jan _2 15:04:05.999\", \"Feb  4 21:00:57.012300000\", false, false, -1, 4},\n-\t{\"\", \"Jan _2 15:04:05.999\", \"Feb  4 21:00:57.012345678\", false, false, -1, 9},\n-\t{\"\", \"Jan _2 15:04:05.999999999\", \"Feb  4 21:00:57.0123\", false, false, -1, 4},\n-\t{\"\", \"Jan _2 15:04:05.999999999\", \"Feb  4 21:00:57.012345678\", false, false, -1, 9},\n-}\n-\n-func TestParse(t *testing.T) {\n-\tfor _, test := range parseTests {\n-\t\ttime, err := Parse(test.format, test.value)\n-\t\tif err != nil {\n-\t\t\tt.Errorf(\"%s error: %v\", test.name, err)\n-\t\t} else {\n-\t\t\tcheckTime(time, &test, t)\n-\t\t}\n-\t}\n-}\n-\n-func TestParseInSydney(t *testing.T) {\n-\tloc, err := LoadLocation(\"Australia/Sydney\")\n-\tif err != nil {\n-\t\tt.Fatal(err)\n-\t}\n-\n-\t// Check that Parse (and ParseInLocation) understand\n-\t// that Feb EST and Aug EST are different time zones in Sydney\n-\t// even though both are called EST.\n-\tt1, err := ParseInLocation(\"Jan 02 2006 MST\", \"Feb 01 2013 EST\", loc)\n-\tif err != nil {\n-\t\tt.Fatal(err)\n-\t}\n-\tt2 := Date(2013, February, 1, 00, 00, 00, 0, loc)\n-\tif t1 != t2 {\n-\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 EST, Sydney) = %v, want %v\", t1, t2)\n-\t}\n-\t_, offset := t1.Zone()\n-\tif offset != 11*60*60 {\n-\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 EST, Sydney).Zone = _, %d, want _, %d\", offset, 11*60*60)\n-\t}\n-\n-\tt1, err = ParseInLocation(\"Jan 02 2006 MST\", \"Aug 01 2013 EST\", loc)\n-\tif err != nil {\n-\t\tt.Fatal(err)\n-\t}\n-\tt2 = Date(2013, August, 1, 00, 00, 00, 0, loc)\n-\tif t1 != t2 {\n-\t\tt.Fatalf(\"ParseInLocation(Aug 01 2013 EST, Sydney) = %v, want %v\", t1, t2)\n-\t}\n-\t_, offset = t1.Zone()\n-\tif offset != 10*60*60 {\n-\t\tt.Fatalf(\"ParseInLocation(Aug 01 2013 EST, Sydney).Zone = _, %d, want _, %d\", offset, 10*60*60)\n-\t}\n-}\n-\n-func TestLoadLocationZipFile(t *testing.T) {\n-\tt.Skip(\"gccgo does not use the zip file\")\n-\n-\tForceZipFileForTesting(true)\n-\tdefer ForceZipFileForTesting(false)\n-\n-\t_, err := LoadLocation(\"Australia/Sydney\")\n-\tif err != nil {\n-\t\tt.Fatal(err)\n-\t}\n-}\n-\n-var rubyTests = []ParseTest{\n-\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 -0800 2010\", true, true, 1, 0},\n-\t// Ignore the time zone in the test. If it parses, it'll be OK.\n-\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 -0000 2010\", false, true, 1, 0},\n-\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 +0000 2010\", false, true, 1, 0},\n-\t{\"RubyDate\", RubyDate, \"Thu Feb 04 21:00:57 +1130 2010\", false, true, 1, 0},\n-}\n-\n-// Problematic time zone format needs special tests.\n-func TestRubyParse(t *testing.T) {\n-\tfor _, test := range rubyTests {\n-\t\ttime, err := Parse(test.format, test.value)\n-\t\tif err != nil {\n-\t\t\tt.Errorf(\"%s error: %v\", test.name, err)\n-\t\t} else {\n-\t\t\tcheckTime(time, &test, t)\n-\t\t}\n-\t}\n-}\n-\n-func checkTime(time Time, test *ParseTest, t *testing.T) {\n-\t// The time should be Thu Feb  4 21:00:57 PST 2010\n-\tif test.yearSign >= 0 && test.yearSign*time.Year() != 2010 {\n-\t\tt.Errorf(\"%s: bad year: %d not %d\", test.name, time.Year(), 2010)\n-\t}\n-\tif time.Month() != February {\n-\t\tt.Errorf(\"%s: bad month: %s not %s\", test.name, time.Month(), February)\n-\t}\n-\tif time.Day() != 4 {\n-\t\tt.Errorf(\"%s: bad day: %d not %d\", test.name, time.Day(), 4)\n-\t}\n-\tif time.Hour() != 21 {\n-\t\tt.Errorf(\"%s: bad hour: %d not %d\", test.name, time.Hour(), 21)\n-\t}\n-\tif time.Minute() != 0 {\n-\t\tt.Errorf(\"%s: bad minute: %d not %d\", test.name, time.Minute(), 0)\n-\t}\n-\tif time.Second() != 57 {\n-\t\tt.Errorf(\"%s: bad second: %d not %d\", test.name, time.Second(), 57)\n-\t}\n-\t// Nanoseconds must be checked against the precision of the input.\n-\tnanosec, err := strconv.ParseUint(\"012345678\"[:test.fracDigits]+\"000000000\"[:9-test.fracDigits], 10, 0)\n-\tif err != nil {\n-\t\tpanic(err)\n-\t}\n-\tif time.Nanosecond() != int(nanosec) {\n-\t\tt.Errorf(\"%s: bad nanosecond: %d not %d\", test.name, time.Nanosecond(), nanosec)\n-\t}\n-\tname, offset := time.Zone()\n-\tif test.hasTZ && offset != -28800 {\n-\t\tt.Errorf(\"%s: bad tz offset: %s %d not %d\", test.name, name, offset, -28800)\n-\t}\n-\tif test.hasWD && time.Weekday() != Thursday {\n-\t\tt.Errorf(\"%s: bad weekday: %s not %s\", test.name, time.Weekday(), Thursday)\n-\t}\n-}\n-\n-func TestFormatAndParse(t *testing.T) {\n-\tconst fmt = \"Mon MST \" + RFC3339 // all fields\n-\tf := func(sec int64) bool {\n-\t\tt1 := Unix(sec, 0)\n-\t\tif t1.Year() < 1000 || t1.Year() > 9999 {\n-\t\t\t// not required to work\n-\t\t\treturn true\n-\t\t}\n-\t\tt2, err := Parse(fmt, t1.Format(fmt))\n-\t\tif err != nil {\n-\t\t\tt.Errorf(\"error: %s\", err)\n-\t\t\treturn false\n-\t\t}\n-\t\tif t1.Unix() != t2.Unix() || t1.Nanosecond() != t2.Nanosecond() {\n-\t\t\tt.Errorf(\"FormatAndParse %d: %q(%d) %q(%d)\", sec, t1, t1.Unix(), t2, t2.Unix())\n-\t\t\treturn false\n-\t\t}\n-\t\treturn true\n-\t}\n-\tf32 := func(sec int32) bool { return f(int64(sec)) }\n-\tcfg := &quick.Config{MaxCount: 10000}\n-\n-\t// Try a reasonable date first, then the huge ones.\n-\tif err := quick.Check(f32, cfg); err != nil {\n-\t\tt.Fatal(err)\n-\t}\n-\tif err := quick.Check(f, cfg); err != nil {\n-\t\tt.Fatal(err)\n-\t}\n-}\n-\n-type ParseTimeZoneTest struct {\n-\tvalue  string\n-\tlength int\n-\tok     bool\n-}\n-\n-var parseTimeZoneTests = []ParseTimeZoneTest{\n-\t{\"gmt hi there\", 0, false},\n-\t{\"GMT hi there\", 3, true},\n-\t{\"GMT+12 hi there\", 6, true},\n-\t{\"GMT+00 hi there\", 3, true}, // 0 or 00 is not a legal offset.\n-\t{\"GMT-5 hi there\", 5, true},\n-\t{\"GMT-51 hi there\", 3, true},\n-\t{\"ChST hi there\", 4, true},\n-\t{\"MSDx\", 3, true},\n-\t{\"MSDY\", 0, false}, // four letters must end in T.\n-\t{\"ESAST hi\", 5, true},\n-\t{\"ESASTT hi\", 0, false}, // run of upper-case letters too long.\n-\t{\"ESATY hi\", 0, false},  // five letters must end in T.\n-}\n-\n-func TestParseTimeZone(t *testing.T) {\n-\tfor _, test := range parseTimeZoneTests {\n-\t\tlength, ok := ParseTimeZone(test.value)\n-\t\tif ok != test.ok {\n-\t\t\tt.Errorf(\"expected %t for %q got %t\", test.ok, test.value, ok)\n-\t\t} else if length != test.length {\n-\t\t\tt.Errorf(\"expected %d for %q got %d\", test.length, test.value, length)\n-\t\t}\n-\t}\n-}\n-\n-type ParseErrorTest struct {\n-\tformat string\n-\tvalue  string\n-\texpect string // must appear within the error\n-}\n-\n-var parseErrorTests = []ParseErrorTest{\n-\t{ANSIC, \"Feb  4 21:00:60 2010\", \"cannot parse\"}, // cannot parse Feb as Mon\n-\t{ANSIC, \"Thu Feb  4 21:00:57 @2010\", \"cannot parse\"},\n-\t{ANSIC, \"Thu Feb  4 21:00:60 2010\", \"second out of range\"},\n-\t{ANSIC, \"Thu Feb  4 21:61:57 2010\", \"minute out of range\"},\n-\t{ANSIC, \"Thu Feb  4 24:00:60 2010\", \"hour out of range\"},\n-\t{\"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 23:00:59x01 2010\", \"cannot parse\"},\n-\t{\"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 23:00:59.xxx 2010\", \"cannot parse\"},\n-\t{\"Mon Jan _2 15:04:05.000 2006\", \"Thu Feb  4 23:00:59.-123 2010\", \"fractional second out of range\"},\n-\t// issue 4502. StampNano requires exactly 9 digits of precision.\n-\t{StampNano, \"Dec  7 11:22:01.000000\", `cannot parse \".000000\" as \".000000000\"`},\n-\t{StampNano, \"Dec  7 11:22:01.0000000000\", \"extra text: 0\"},\n-\t// issue 4493. Helpful errors.\n-\t{RFC3339, \"2006-01-02T15:04:05Z07:00\", `parsing time \"2006-01-02T15:04:05Z07:00\": extra text: 07:00`},\n-\t{RFC3339, \"2006-01-02T15:04_abc\", `parsing time \"2006-01-02T15:04_abc\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"_abc\" as \":\"`},\n-\t{RFC3339, \"2006-01-02T15:04:05_abc\", `parsing time \"2006-01-02T15:04:05_abc\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"_abc\" as \"Z07:00\"`},\n-\t{RFC3339, \"2006-01-02T15:04:05Z_abc\", `parsing time \"2006-01-02T15:04:05Z_abc\": extra text: _abc`},\n-}\n-\n-func TestParseErrors(t *testing.T) {\n-\tfor _, test := range parseErrorTests {\n-\t\t_, err := Parse(test.format, test.value)\n-\t\tif err == nil {\n-\t\t\tt.Errorf(\"expected error for %q %q\", test.format, test.value)\n-\t\t} else if strings.Index(err.Error(), test.expect) < 0 {\n-\t\t\tt.Errorf(\"expected error with %q for %q %q; got %s\", test.expect, test.format, test.value, err)\n-\t\t}\n-\t}\n-}\n-\n-func TestNoonIs12PM(t *testing.T) {\n-\tnoon := Date(0, January, 1, 12, 0, 0, 0, UTC)\n-\tconst expect = \"12:00PM\"\n-\tgot := noon.Format(\"3:04PM\")\n-\tif got != expect {\n-\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n-\t}\n-\tgot = noon.Format(\"03:04PM\")\n-\tif got != expect {\n-\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n-\t}\n-}\n-\n-func TestMidnightIs12AM(t *testing.T) {\n-\tmidnight := Date(0, January, 1, 0, 0, 0, 0, UTC)\n-\texpect := \"12:00AM\"\n-\tgot := midnight.Format(\"3:04PM\")\n-\tif got != expect {\n-\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n-\t}\n-\tgot = midnight.Format(\"03:04PM\")\n-\tif got != expect {\n-\t\tt.Errorf(\"got %q; expect %q\", got, expect)\n-\t}\n-}\n-\n-func Test12PMIsNoon(t *testing.T) {\n-\tnoon, err := Parse(\"3:04PM\", \"12:00PM\")\n-\tif err != nil {\n-\t\tt.Fatal(\"error parsing date:\", err)\n-\t}\n-\tif noon.Hour() != 12 {\n-\t\tt.Errorf(\"got %d; expect 12\", noon.Hour())\n-\t}\n-\tnoon, err = Parse(\"03:04PM\", \"12:00PM\")\n-\tif err != nil {\n-\t\tt.Fatal(\"error parsing date:\", err)\n-\t}\n-\tif noon.Hour() != 12 {\n-\t\tt.Errorf(\"got %d; expect 12\", noon.Hour())\n-\t}\n-}\n-\n-func Test12AMIsMidnight(t *testing.T) {\n-\tmidnight, err := Parse(\"3:04PM\", \"12:00AM\")\n-\tif err != nil {\n-\t\tt.Fatal(\"error parsing date:\", err)\n-\t}\n-\tif midnight.Hour() != 0 {\n-\t\tt.Errorf(\"got %d; expect 0\", midnight.Hour())\n-\t}\n-\tmidnight, err = Parse(\"03:04PM\", \"12:00AM\")\n-\tif err != nil {\n-\t\tt.Fatal(\"error parsing date:\", err)\n-\t}\n-\tif midnight.Hour() != 0 {\n-\t\tt.Errorf(\"got %d; expect 0\", midnight.Hour())\n-\t}\n-}\n-\n-// Check that a time without a Zone still produces a (numeric) time zone\n-// when formatted with MST as a requested zone.\n-func TestMissingZone(t *testing.T) {\n-\ttime, err := Parse(RubyDate, \"Thu Feb 02 16:10:03 -0500 2006\")\n-\tif err != nil {\n-\t\tt.Fatal(\"error parsing date:\", err)\n-\t}\n-\texpect := \"Thu Feb  2 16:10:03 -0500 2006\" // -0500 not EST\n-\tstr := time.Format(UnixDate)               // uses MST as its time zone\n-\tif str != expect {\n-\t\tt.Errorf(\"got %s; expect %s\", str, expect)\n-\t}\n-}\n-\n-func TestMinutesInTimeZone(t *testing.T) {\n-\ttime, err := Parse(RubyDate, \"Mon Jan 02 15:04:05 +0123 2006\")\n-\tif err != nil {\n-\t\tt.Fatal(\"error parsing date:\", err)\n-\t}\n-\texpected := (1*60 + 23) * 60\n-\t_, offset := time.Zone()\n-\tif offset != expected {\n-\t\tt.Errorf(\"ZoneOffset = %d, want %d\", offset, expected)\n-\t}\n-}\n-\n-type SecondsTimeZoneOffsetTest struct {\n-\tformat         string\n-\tvalue          string\n-\texpectedoffset int\n-}\n-\n-var secondsTimeZoneOffsetTests = []SecondsTimeZoneOffsetTest{\n-\t{\"2006-01-02T15:04:05-070000\", \"1871-01-01T05:33:02-003408\", -(34*60 + 8)},\n-\t{\"2006-01-02T15:04:05-07:00:00\", \"1871-01-01T05:33:02-00:34:08\", -(34*60 + 8)},\n-\t{\"2006-01-02T15:04:05-070000\", \"1871-01-01T05:33:02+003408\", 34*60 + 8},\n-\t{\"2006-01-02T15:04:05-07:00:00\", \"1871-01-01T05:33:02+00:34:08\", 34*60 + 8},\n-\t{\"2006-01-02T15:04:05Z070000\", \"1871-01-01T05:33:02-003408\", -(34*60 + 8)},\n-\t{\"2006-01-02T15:04:05Z07:00:00\", \"1871-01-01T05:33:02+00:34:08\", 34*60 + 8},\n-}\n-\n-func TestParseSecondsInTimeZone(t *testing.T) {\n-\t// should accept timezone offsets with seconds like: Zone America/New_York   -4:56:02 -      LMT     1883 Nov 18 12:03:58\n-\tfor _, test := range secondsTimeZoneOffsetTests {\n-\t\ttime, err := Parse(test.format, test.value)\n-\t\tif err != nil {\n-\t\t\tt.Fatal(\"error parsing date:\", err)\n-\t\t}\n-\t\t_, offset := time.Zone()\n-\t\tif offset != test.expectedoffset {\n-\t\t\tt.Errorf(\"ZoneOffset = %d, want %d\", offset, test.expectedoffset)\n-\t\t}\n-\t}\n-}\n-\n-func TestFormatSecondsInTimeZone(t *testing.T) {\n-\td := Date(1871, 9, 17, 20, 4, 26, 0, FixedZone(\"LMT\", -(34*60+8)))\n-\ttimestr := d.Format(\"2006-01-02T15:04:05Z070000\")\n-\texpected := \"1871-09-17T20:04:26-003408\"\n-\tif timestr != expected {\n-\t\tt.Errorf(\"Got %s, want %s\", timestr, expected)\n-\t}\n-}\n-\n type ISOWeekTest struct {\n \tyear       int // year\n \tmonth, day int // month and day\n@@ -1494,7 +994,7 @@ var minDurationTests = []struct {\n func TestDurationMinutes(t *testing.T) {\n \tfor _, tt := range minDurationTests {\n \t\tif got := tt.d.Minutes(); got != tt.want {\n-\t\t\tt.Errorf(\"d.Minutes() = %d; want: %d\", got, tt.want)\n+\t\t\tt.Errorf(\"d.Minutes() = %g; want: %g\", got, tt.want)\n \t\t}\n \t}\n }\n@@ -1512,7 +1012,7 @@ var hourDurationTests = []struct {\n func TestDurationHours(t *testing.T) {\n \tfor _, tt := range hourDurationTests {\n \t\tif got := tt.d.Hours(); got != tt.want {\n-\t\t\tt.Errorf(\"d.Hours() = %d; want: %d\", got, tt.want)\n+\t\t\tt.Errorf(\"d.Hours() = %g; want: %g\", got, tt.want)\n \t\t}\n \t}\n }"}, {"sha": "c8e53a27cf02328ffc8a16909e95dcbea219765d", "filename": "libgo/go/time/zoneinfo.go", "status": "modified", "additions": 80, "deletions": 7, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -45,6 +45,13 @@ type zoneTrans struct {\n \tisstd, isutc bool  // ignored - no idea what these mean\n }\n \n+// alpha and omega are the beginning and end of time for zone\n+// transitions.\n+const (\n+\talpha = -1 << 63  // math.MinInt64\n+\tomega = 1<<63 - 1 // math.MaxInt64\n+)\n+\n // UTC represents Universal Coordinated Time (UTC).\n var UTC *Location = &utcLoc\n \n@@ -83,9 +90,9 @@ func FixedZone(name string, offset int) *Location {\n \tl := &Location{\n \t\tname:       name,\n \t\tzone:       []zone{{name, offset, false}},\n-\t\ttx:         []zoneTrans{{-1 << 63, 0, false, false}},\n-\t\tcacheStart: -1 << 63,\n-\t\tcacheEnd:   1<<63 - 1,\n+\t\ttx:         []zoneTrans{{alpha, 0, false, false}},\n+\t\tcacheStart: alpha,\n+\t\tcacheEnd:   omega,\n \t}\n \tl.cacheZone = &l.zone[0]\n \treturn l\n@@ -101,12 +108,12 @@ func FixedZone(name string, offset int) *Location {\n func (l *Location) lookup(sec int64) (name string, offset int, isDST bool, start, end int64) {\n \tl = l.get()\n \n-\tif len(l.tx) == 0 {\n+\tif len(l.zone) == 0 {\n \t\tname = \"UTC\"\n \t\toffset = 0\n \t\tisDST = false\n-\t\tstart = -1 << 63\n-\t\tend = 1<<63 - 1\n+\t\tstart = alpha\n+\t\tend = omega\n \t\treturn\n \t}\n \n@@ -119,10 +126,24 @@ func (l *Location) lookup(sec int64) (name string, offset int, isDST bool, start\n \t\treturn\n \t}\n \n+\tif len(l.tx) == 0 || sec < l.tx[0].when {\n+\t\tzone := &l.zone[l.lookupFirstZone()]\n+\t\tname = zone.name\n+\t\toffset = zone.offset\n+\t\tisDST = zone.isDST\n+\t\tstart = alpha\n+\t\tif len(l.tx) > 0 {\n+\t\t\tend = l.tx[0].when\n+\t\t} else {\n+\t\t\tend = omega\n+\t\t}\n+\t\treturn\n+\t}\n+\n \t// Binary search for entry with largest time <= sec.\n \t// Not using sort.Search to avoid dependencies.\n \ttx := l.tx\n-\tend = 1<<63 - 1\n+\tend = omega\n \tlo := 0\n \thi := len(tx)\n \tfor hi-lo > 1 {\n@@ -144,6 +165,58 @@ func (l *Location) lookup(sec int64) (name string, offset int, isDST bool, start\n \treturn\n }\n \n+// lookupFirstZone returns the index of the time zone to use for times\n+// before the first transition time, or when there are no transition\n+// times.\n+//\n+// The reference implementation in localtime.c from\n+// http://www.iana.org/time-zones/repository/releases/tzcode2013g.tar.gz\n+// implements the following algorithm for these cases:\n+// 1) If the first zone is unused by the transitions, use it.\n+// 2) Otherwise, if there are transition times, and the first\n+//    transition is to a zone in daylight time, find the first\n+//    non-daylight-time zone before and closest to the first transition\n+//    zone.\n+// 3) Otherwise, use the first zone that is not daylight time, if\n+//    there is one.\n+// 4) Otherwise, use the first zone.\n+func (l *Location) lookupFirstZone() int {\n+\t// Case 1.\n+\tif !l.firstZoneUsed() {\n+\t\treturn 0\n+\t}\n+\n+\t// Case 2.\n+\tif len(l.tx) > 0 && l.zone[l.tx[0].index].isDST {\n+\t\tfor zi := int(l.tx[0].index) - 1; zi >= 0; zi-- {\n+\t\t\tif !l.zone[zi].isDST {\n+\t\t\t\treturn zi\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t// Case 3.\n+\tfor zi := range l.zone {\n+\t\tif !l.zone[zi].isDST {\n+\t\t\treturn zi\n+\t\t}\n+\t}\n+\n+\t// Case 4.\n+\treturn 0\n+}\n+\n+// firstZoneUsed returns whether the first zone is used by some\n+// transition.\n+func (l *Location) firstZoneUsed() bool {\n+\tfor _, tx := range l.tx {\n+\t\tif tx.index == 0 {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n // lookupName returns information about the time zone with\n // the given name (such as \"EST\") at the given pseudo-Unix time\n // (what the given time of day would be in UTC)."}, {"sha": "4bb0cb3909683536e22e8b6c93ab986f079b0b3c", "filename": "libgo/go/time/zoneinfo_plan9.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo_plan9.go?ref=6736ef96eab222e58e6294f42be981a5afb59811", "patch": "@@ -100,7 +100,7 @@ func loadZoneDataPlan9(s string) (l *Location, err error) {\n \tfor i := range tx {\n \t\tif tx[i].when <= sec && (i+1 == len(tx) || sec < tx[i+1].when) {\n \t\t\tl.cacheStart = tx[i].when\n-\t\t\tl.cacheEnd = 1<<63 - 1\n+\t\t\tl.cacheEnd = omega\n \t\t\tif i+1 < len(tx) {\n \t\t\t\tl.cacheEnd = tx[i+1].when\n \t\t\t}"}, {"sha": "4bb4bf665cc23675fd6c39e56e3d1710418cd379", "filename": "libgo/go/time/zoneinfo_read.go", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_read.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_read.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo_read.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "03f54a69360055ac98ed85f6b673016ae2f605d6", "filename": "libgo/go/time/zoneinfo_test.go", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "e70decb36cb5622f8f45169db56f4c7043d0f373", "filename": "libgo/go/time/zoneinfo_unix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo_unix.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "377a892153858016b1a81dec8a7c9f3648516a37", "filename": "libgo/go/time/zoneinfo_windows.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_windows.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Ftime%2Fzoneinfo_windows.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo_windows.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "3b389e93f14914e91df7b84eef323e4476ef8300", "filename": "libgo/go/unicode/letter.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Funicode%2Fletter.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Funicode%2Fletter.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Funicode%2Fletter.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "e2ba0011aca312088a56ef4699d1458455317522", "filename": "libgo/go/unicode/script_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Funicode%2Fscript_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Funicode%2Fscript_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Funicode%2Fscript_test.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "5670d1c5b171b653584fe0ad445b2cd3e442e4b0", "filename": "libgo/go/unicode/tables.go", "status": "modified", "additions": 35, "deletions": 26, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Funicode%2Ftables.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fgo%2Funicode%2Ftables.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Funicode%2Ftables.go?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "8a3693123b126e7edbe3b12b1c7f24f29e17a9e6", "filename": "libgo/merge.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fmerge.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fmerge.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmerge.sh?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "e188155e5faab4ac59859f5d153770c51d9d2759", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "cd3a2c5d173c604222bf4764c7863e5809a6be30", "filename": "libgo/runtime/chan.c", "status": "modified", "additions": 144, "deletions": 190, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fchan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fchan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fchan.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "93f90f54118a49928f77df1a1c16884a66c20052", "filename": "libgo/runtime/env_posix.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fenv_posix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fenv_posix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fenv_posix.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "1b2d49e53c1bc789e3018d4d2cd7351260a21193", "filename": "libgo/runtime/go-append.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-append.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-append.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-append.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "5dd8c3105f73022084091a5bd6d7477caa1c3105", "filename": "libgo/runtime/go-defer.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-defer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-defer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-defer.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "acf2d40c69c2c16564d8d6b869b99b0b6fc7873b", "filename": "libgo/runtime/go-defer.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-defer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-defer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-defer.h?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "77975c6e083a29fa01a890e94bcf591a87940d14", "filename": "libgo/runtime/go-panic.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-panic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-panic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-panic.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "a75d7c412772362341cfc78d7a144a6c03ae8d78", "filename": "libgo/runtime/go-setenv.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-setenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-setenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-setenv.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "a4edb50da5f72b8324684600927c14e0665b1ce8", "filename": "libgo/runtime/go-string-to-byte-array.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-string-to-byte-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-string-to-byte-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-string-to-byte-array.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "554688913101acb0021298c28220da0ff3087328", "filename": "libgo/runtime/go-string-to-int-array.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-string-to-int-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-string-to-int-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-string-to-int-array.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "849256b631fca5fb4d2683ee860a7fa351b34d47", "filename": "libgo/runtime/go-unwind.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-unwind.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-unwind.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-unwind.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "705f55ee20bd4f58dcdcb9e3291c8202fc44d96b", "filename": "libgo/runtime/go-varargs.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-varargs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Fgo-varargs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-varargs.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "33ef073c907e1029a1c92d3c971f0e575b69daba", "filename": "libgo/runtime/lock_futex.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Flock_futex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Flock_futex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Flock_futex.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}, {"sha": "d0d551de874ad0add64453e0d27e97404754284e", "filename": "libgo/runtime/lock_sema.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Flock_sema.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6736ef96eab222e58e6294f42be981a5afb59811/libgo%2Fruntime%2Flock_sema.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Flock_sema.c?ref=6736ef96eab222e58e6294f42be981a5afb59811"}]}