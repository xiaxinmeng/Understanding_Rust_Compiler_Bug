{"sha": "6db828c3c5271d23d037f55824d9d0a6c07497ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiODI4YzNjNTI3MWQyM2QwMzdmNTU4MjRkOWQwYTZjMDc0OTdhYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:48:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:48:25Z"}, "message": "[multiple changes]\n\n2009-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.ads: Minor reformatting\n\n2009-04-24  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnat_ugn.texi (Library Projects): add documentation on gnatmake's\n\tbehavior when the project includes sources from multiple languages\n\n2009-04-24  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb (Has_Foreign_Sources): Returns True in Ada_Only mode if there\n\tis a language other than Ada declared.\n\n\t* makeutl.adb (Linker_Options_Switches): Call For_All_Projects with\n\tImported_First set to True.\n\nFrom-SVN: r146722", "tree": {"sha": "f6dcf1cb6d3f62b29f08f5b32a80437608a4e6a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6dcf1cb6d3f62b29f08f5b32a80437608a4e6a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6db828c3c5271d23d037f55824d9d0a6c07497ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db828c3c5271d23d037f55824d9d0a6c07497ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db828c3c5271d23d037f55824d9d0a6c07497ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db828c3c5271d23d037f55824d9d0a6c07497ab/comments", "author": null, "committer": null, "parents": [{"sha": "ad58aabeb588b6487a4adb8125330dd4abd5af43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad58aabeb588b6487a4adb8125330dd4abd5af43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad58aabeb588b6487a4adb8125330dd4abd5af43"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "ab3a3b7374d99b12d93992992c4819f845587807", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6db828c3c5271d23d037f55824d9d0a6c07497ab", "patch": "@@ -1,3 +1,20 @@\n+2009-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.ads: Minor reformatting\n+\n+2009-04-24  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnat_ugn.texi (Library Projects): add documentation on gnatmake's\n+\tbehavior when the project includes sources from multiple languages\n+\n+2009-04-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.adb (Has_Foreign_Sources): Returns True in Ada_Only mode if there\n+\tis a language other than Ada declared.\n+\n+\t* makeutl.adb (Linker_Options_Switches): Call For_All_Projects with\n+\tImported_First set to True.\n+\n 2009-04-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb: additional optimization to inhibit creation of"}, {"sha": "41daf243babacf8deec84ecfa3a362c04aa42424", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=6db828c3c5271d23d037f55824d9d0a6c07497ab", "patch": "@@ -651,8 +651,8 @@ package Errout is\n    --  suppressed.\n \n    procedure Error_Msg_F (Msg : String; N : Node_Id);\n-   --  Similar to Error_Msg_N except that the message is placed on the\n-   --  first node of the construct N (First_Node (N)).\n+   --  Similar to Error_Msg_N except that the message is placed on the first\n+   --  node of the construct N (First_Node (N)).\n \n    procedure Error_Msg_NE\n      (Msg : String;"}, {"sha": "df66228bb00e46b774af65ff71fbd8eec5996abc", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=6db828c3c5271d23d037f55824d9d0a6c07497ab", "patch": "@@ -13675,6 +13675,15 @@ operating system).\n    for Spec (\"MyPack.MyChild\") use \"mypack.mychild.spec\";\n @end smallexample\n \n+When the source file contains several units, you can indicate at what\n+position the unit occurs in the file, with the following. The first unit\n+in the file has index 1\n+\n+@smallexample @c projectfile\n+  for Body (\"top\") use \"foo.a\" at 1;\n+  for Body (\"foo\") use \"foo.a\" at 2;\n+@end smallexample\n+\n @item @code{Body}\n \n You can use the associative array attribute @code{Body} to\n@@ -13698,7 +13707,20 @@ sensitive or insensitive depending on the operating system).\n \n @noindent\n @emph{Library projects} are projects whose object code is placed in a library.\n-(Note that this facility is not yet supported on all platforms)\n+(Note that this facility is not yet supported on all platforms).\n+\n+@code{gnatmake} or @code{gprbuild} will collect all object files into a\n+single archive, which might either be a shared or a static library. This\n+library can later on be linked with multiple executables, potentially\n+reducing their sizes.\n+\n+If your project file specifies languages other than Ada, but you are still\n+using @code{gnatmake} to compile and link, the latter will not try to\n+compile your sources other than Ada (you should use @code{gprbuild} if that\n+is your intent). However, @code{gnatmake} will automatically link all object\n+files found in the object directory, whether or not they were compiled from\n+an Ada source file. This specific behavior only applies when multiple\n+languages are specified.\n \n To create a library project, you need to define in its project file\n two project-level attributes: @code{Library_Name} and @code{Library_Dir}."}, {"sha": "b1b82398dae9e26a5d3fbee7be445137674ee7a8", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=6db828c3c5271d23d037f55824d9d0a6c07497ab", "patch": "@@ -412,7 +412,7 @@ package body Makeutl is\n    begin\n       Linker_Opts.Init;\n \n-      For_All_Projects (Project, In_Tree, Dummy);\n+      For_All_Projects (Project, In_Tree, Dummy, Imported_First => True);\n \n       Last_Linker_Option := 0;\n "}, {"sha": "dae628b7c5e3a9537b6847497c0aecc39016644c", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db828c3c5271d23d037f55824d9d0a6c07497ab/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=6db828c3c5271d23d037f55824d9d0a6c07497ab", "patch": "@@ -1231,7 +1231,8 @@ package body Prj is\n       Lang := Data.Languages;\n       while Lang /= No_Language_Index loop\n          if Lang.Name /= Name_Ada\n-           and then Lang.First_Source /= No_Source\n+           and then\n+             (Current_Mode = Ada_Only or else Lang.First_Source /= No_Source)\n          then\n             return True;\n          end if;"}]}