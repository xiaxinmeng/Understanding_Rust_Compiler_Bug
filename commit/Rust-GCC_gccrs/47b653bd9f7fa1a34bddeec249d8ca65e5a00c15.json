{"sha": "47b653bd9f7fa1a34bddeec249d8ca65e5a00c15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiNjUzYmQ5ZjdmYTFhMzRiZGRlZWMyNDlkOGNhNjVlNWEwMGMxNQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2015-09-10T14:02:34Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-09-10T14:02:34Z"}, "message": "S/390: Fix mode iterators vmal, vmah, and vmalh.\n\ngcc/ChangeLog:\n\n2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/vx-builtins.md (\"vec_vmal<mode>\", \"vec_vmah<mode>\")\n\t(\"vec_vmalh<mode>\"): Change mode iterator from VI_HW to VI_HW_QHS.\n\nFrom-SVN: r227636", "tree": {"sha": "345cbbf89e6a93cde24077b7708dfcc798b5b6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/345cbbf89e6a93cde24077b7708dfcc798b5b6ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15/comments", "author": null, "committer": null, "parents": [{"sha": "e0654cf2a9016ee964adcaedff5b9b64dc076646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0654cf2a9016ee964adcaedff5b9b64dc076646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0654cf2a9016ee964adcaedff5b9b64dc076646"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "aff3fd976a2da3d1337ed276eeab5b8fa47bdc68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47b653bd9f7fa1a34bddeec249d8ca65e5a00c15", "patch": "@@ -1,3 +1,8 @@\n+2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/vx-builtins.md (\"vec_vmal<mode>\", \"vec_vmah<mode>\")\n+\t(\"vec_vmalh<mode>\"): Change mode iterator from VI_HW to VI_HW_QHS.\n+\n 2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c: Add V1TImode to constant pool modes."}, {"sha": "7e20d2b69865527d03cd8ce4d712ab7b1ac790f4", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b653bd9f7fa1a34bddeec249d8ca65e5a00c15/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=47b653bd9f7fa1a34bddeec249d8ca65e5a00c15", "patch": "@@ -870,11 +870,11 @@\n ; vec_mladd -> vec_vmal\n ; vmalb, vmalh, vmalf, vmalg\n (define_insn \"vec_vmal<mode>\"\n-  [(set (match_operand:VI_HW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI_HW [(match_operand:VI_HW 1 \"register_operand\" \"v\")\n-\t\t       (match_operand:VI_HW 2 \"register_operand\" \"v\")\n-\t\t       (match_operand:VI_HW 3 \"register_operand\" \"v\")]\n-\t\t      UNSPEC_VEC_VMAL))]\n+  [(set (match_operand:VI_HW_QHS 0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\" \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\" \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 3 \"register_operand\" \"v\")]\n+\t\t\t  UNSPEC_VEC_VMAL))]\n   \"TARGET_VX\"\n   \"vmal<bhfgq><w>\\t%v0,%v1,%v2,%v3\"\n   [(set_attr \"op_type\" \"VRR\")])\n@@ -883,22 +883,22 @@\n \n ; vmahb; vmahh, vmahf, vmahg\n (define_insn \"vec_vmah<mode>\"\n-  [(set (match_operand:VI_HW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI_HW [(match_operand:VI_HW 1 \"register_operand\" \"v\")\n-\t\t       (match_operand:VI_HW 2 \"register_operand\" \"v\")\n-\t\t       (match_operand:VI_HW 3 \"register_operand\" \"v\")]\n-\t\t      UNSPEC_VEC_VMAH))]\n+  [(set (match_operand:VI_HW_QHS 0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\" \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\" \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 3 \"register_operand\" \"v\")]\n+\t\t\t  UNSPEC_VEC_VMAH))]\n   \"TARGET_VX\"\n   \"vmah<bhfgq>\\t%v0,%v1,%v2,%v3\"\n   [(set_attr \"op_type\" \"VRR\")])\n \n ; vmalhb; vmalhh, vmalhf, vmalhg\n (define_insn \"vec_vmalh<mode>\"\n-  [(set (match_operand:VI_HW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI_HW [(match_operand:VI_HW 1 \"register_operand\" \"v\")\n-\t\t       (match_operand:VI_HW 2 \"register_operand\" \"v\")\n-\t\t       (match_operand:VI_HW 3 \"register_operand\" \"v\")]\n-\t\t      UNSPEC_VEC_VMALH))]\n+  [(set (match_operand:VI_HW_QHS 0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\" \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\" \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 3 \"register_operand\" \"v\")]\n+\t\t\t  UNSPEC_VEC_VMALH))]\n   \"TARGET_VX\"\n   \"vmalh<bhfgq>\\t%v0,%v1,%v2,%v3\"\n   [(set_attr \"op_type\" \"VRR\")])"}]}