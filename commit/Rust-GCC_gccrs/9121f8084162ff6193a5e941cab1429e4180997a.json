{"sha": "9121f8084162ff6193a5e941cab1429e4180997a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEyMWY4MDg0MTYyZmY2MTkzYTVlOTQxY2FiMTQyOWU0MTgwOTk3YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-07T23:25:43Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-08T01:08:48Z"}, "message": "syscall: don't use AF_LINK on hurd\n\nPatch from Svante Signell.\n\nFixes PR go/98153\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/275939", "tree": {"sha": "7c259bc2380f9c8fccb82f433ab43d1642616c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c259bc2380f9c8fccb82f433ab43d1642616c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9121f8084162ff6193a5e941cab1429e4180997a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9121f8084162ff6193a5e941cab1429e4180997a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9121f8084162ff6193a5e941cab1429e4180997a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9121f8084162ff6193a5e941cab1429e4180997a/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc8a7013802eadc666764eb244eee2441f375954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a7013802eadc666764eb244eee2441f375954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8a7013802eadc666764eb244eee2441f375954"}], "stats": {"total": 105, "additions": 103, "deletions": 2}, "files": [{"sha": "d4c8e30d1b4288a33a48f66b52ac3d965f6b4494", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9121f8084162ff6193a5e941cab1429e4180997a/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9121f8084162ff6193a5e941cab1429e4180997a/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=9121f8084162ff6193a5e941cab1429e4180997a", "patch": "@@ -1,4 +1,4 @@\n-81687fccc568a088fee8f627ddde599e17c648c2\n+3363fc239f642d3c3fb9a138d2833985d85dc083\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "983d554849b820cb6ad76d2bca7794a36e3fb522", "filename": "libgo/go/syscall/socket_bsd.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9121f8084162ff6193a5e941cab1429e4180997a/libgo%2Fgo%2Fsyscall%2Fsocket_bsd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9121f8084162ff6193a5e941cab1429e4180997a/libgo%2Fgo%2Fsyscall%2Fsocket_bsd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket_bsd.go?ref=9121f8084162ff6193a5e941cab1429e4180997a", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build darwin dragonfly freebsd hurd openbsd netbsd\n+// +build darwin dragonfly freebsd openbsd netbsd\n \n package syscall\n "}, {"sha": "fcb239ef1cacacc9215ad1b8f6972557fb7040bf", "filename": "libgo/go/syscall/socket_hurd.go", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9121f8084162ff6193a5e941cab1429e4180997a/libgo%2Fgo%2Fsyscall%2Fsocket_hurd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9121f8084162ff6193a5e941cab1429e4180997a/libgo%2Fgo%2Fsyscall%2Fsocket_hurd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket_hurd.go?ref=9121f8084162ff6193a5e941cab1429e4180997a", "patch": "@@ -0,0 +1,101 @@\n+// socket_hurd.go -- Socket handling specific to GNU/Hurd based systems.\n+// This file is derived from socket_bsd.go without SockaddrDatalink since\n+// AF_LINK is not yet supported on GNU/Hurd.\n+\n+// Copyright 2010 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build hurd\n+\n+package syscall\n+\n+import \"unsafe\"\n+\n+const SizeofSockaddrInet4 = 16\n+const SizeofSockaddrInet6 = 28\n+const SizeofSockaddrUnix = 110\n+\n+type RawSockaddrInet4 struct {\n+\tLen    uint8\n+\tFamily uint8\n+\tPort   uint16\n+\tAddr   [4]byte /* in_addr */\n+\tZero   [8]uint8\n+}\n+\n+func (sa *RawSockaddrInet4) setLen() Socklen_t {\n+\tsa.Len = SizeofSockaddrInet4\n+\treturn SizeofSockaddrInet4\n+}\n+\n+type RawSockaddrInet6 struct {\n+\tLen      uint8\n+\tFamily   uint8\n+\tPort     uint16\n+\tFlowinfo uint32\n+\tAddr     [16]byte /* in6_addr */\n+\tScope_id uint32\n+}\n+\n+func (sa *RawSockaddrInet6) setLen() Socklen_t {\n+\tsa.Len = SizeofSockaddrInet6\n+\treturn SizeofSockaddrInet6\n+}\n+\n+type RawSockaddrUnix struct {\n+\tLen    uint8\n+\tFamily uint8\n+\tPath   [108]int8\n+}\n+\n+func (sa *RawSockaddrUnix) setLen(n int) {\n+\tsa.Len = uint8(3 + n) // 2 for Family, Len; 1 for NUL.\n+}\n+\n+func (sa *RawSockaddrUnix) getLen() (int, error) {\n+\tif sa.Len < 2 || sa.Len > SizeofSockaddrUnix {\n+\t\treturn 0, EINVAL\n+\t}\n+\n+\t// Some BSDs include the trailing NUL in the length, whereas\n+\t// others do not. Work around this by subtracting the leading\n+\t// family and len. The path is then scanned to see if a NUL\n+\t// terminator still exists within the length.\n+\tn := int(sa.Len) - 2 // subtract leading Family, Len\n+\tfor i := 0; i < n; i++ {\n+\t\tif sa.Path[i] == 0 {\n+\t\t\t// found early NUL; assume Len included the NUL\n+\t\t\t// or was overestimating.\n+\t\t\tn = i\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\treturn n, nil\n+}\n+\n+func (sa *RawSockaddrUnix) adjustAbstract(sl Socklen_t) Socklen_t {\n+\treturn sl\n+}\n+\n+type RawSockaddr struct {\n+\tLen    uint8\n+\tFamily uint8\n+\tData   [14]int8\n+}\n+\n+// BindToDevice binds the socket associated with fd to device.\n+func BindToDevice(fd int, device string) (err error) {\n+\treturn ENOSYS\n+}\n+\n+func anyToSockaddrOS(rsa *RawSockaddrAny) (Sockaddr, error) {\n+\treturn nil, EAFNOSUPPORT\n+}\n+\n+func GetsockoptIPv6MTUInfo(fd, level, opt int) (*IPv6MTUInfo, error) {\n+\tvar value IPv6MTUInfo\n+\tvallen := Socklen_t(SizeofIPv6MTUInfo)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value), &vallen)\n+\treturn &value, err\n+}"}]}