{"sha": "a952cc068c5df10333be537e9283e1aebc24c55d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1MmNjMDY4YzVkZjEwMzMzYmU1MzdlOTI4M2UxYWViYzI0YzU1ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-16T13:11:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-16T13:11:01Z"}, "message": "re PR tree-optimization/53364 (Wrong code generation)\n\n2012-05-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53364\n\t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Properly\n\tdetect a view-conversion of the decl.\n\n\t* g++.dg/torture/pr53364.C: New testcase.\n\nFrom-SVN: r187590", "tree": {"sha": "f79d149e202c7c3356f9c21e62c050abce827f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f79d149e202c7c3356f9c21e62c050abce827f2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a952cc068c5df10333be537e9283e1aebc24c55d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a952cc068c5df10333be537e9283e1aebc24c55d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a952cc068c5df10333be537e9283e1aebc24c55d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a952cc068c5df10333be537e9283e1aebc24c55d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "219d42f11a5f65265b8dda0ab4cb354746c3f456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/219d42f11a5f65265b8dda0ab4cb354746c3f456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/219d42f11a5f65265b8dda0ab4cb354746c3f456"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "a7d0b3eb4b61a3f95b65253993927d8177325f5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a952cc068c5df10333be537e9283e1aebc24c55d", "patch": "@@ -1,3 +1,9 @@\n+2012-05-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53364\n+\t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Properly\n+\tdetect a view-conversion of the decl.\n+\n 2012-05-16  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR preprocessor/7263"}, {"sha": "299ece5bb3f557ff4171d416bcdb14535b08e6b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a952cc068c5df10333be537e9283e1aebc24c55d", "patch": "@@ -1,3 +1,8 @@\n+2012-05-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53364\n+\t* g++.dg/torture/pr53364.C: New testcase.\n+\n 2012-05-16  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR testsuite/52641"}, {"sha": "36bb083e828cad5a4d073ac17b63f1fdd790c4ef", "filename": "gcc/testsuite/g++.dg/torture/pr53364.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53364.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53364.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53364.C?ref=a952cc068c5df10333be537e9283e1aebc24c55d", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do run }\n+\n+extern \"C\" void abort (void);\n+\n+template<typename _Tp>\n+inline const _Tp&\n+min(const _Tp& __a, const _Tp& __b)\n+{\n+  if (__b < __a)\n+    return __b;\n+  return __a;\n+}\n+\n+struct A\n+{\n+  int m_x;\n+\n+  explicit A(int x) : m_x(x) {}\n+  operator int() const { return m_x; }\n+};\n+\n+struct B : public A\n+{\n+public:\n+  explicit B(int x) : A(x) {}\n+};\n+\n+int data = 1;\n+\n+int main()\n+{\n+  B b = B(10);\n+  b = min(b, B(data));\n+  if (b != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "540850fc5cb7ab9cd78a838d6697247db2462759", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a952cc068c5df10333be537e9283e1aebc24c55d/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=a952cc068c5df10333be537e9283e1aebc24c55d", "patch": "@@ -850,8 +850,7 @@ indirect_ref_may_alias_decl_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n \n   /* If either reference is view-converted, give up now.  */\n   if (same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) != 1\n-      || same_type_for_tbaa (TREE_TYPE (dbase2),\n-\t\t\t     TREE_TYPE (reference_alias_ptr_type (dbase2))) != 1)\n+      || same_type_for_tbaa (TREE_TYPE (dbase2), TREE_TYPE (base2)) != 1)\n     return true;\n \n   /* If both references are through the same type, they do not alias"}]}