{"sha": "b42ff0a550777b45ca004460ef55f50f8f0e34c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQyZmYwYTU1MDc3N2I0NWNhMDA0NDYwZWY1NWY1MGY4ZjBlMzRjOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-07-19T21:09:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-07-19T21:09:53Z"}, "message": "decl.c (gnat_to_gnu_entity): Try to ensure that an object of CW type initialized to a value is sufficiently...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Try to ensure\n\tthat an object of CW type initialized to a value is sufficiently\n\taligned for this value.\n\nFrom-SVN: r189682", "tree": {"sha": "3ec3b22635fcddef0db081536f221cd82c4dd6f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ec3b22635fcddef0db081536f221cd82c4dd6f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b42ff0a550777b45ca004460ef55f50f8f0e34c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42ff0a550777b45ca004460ef55f50f8f0e34c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b42ff0a550777b45ca004460ef55f50f8f0e34c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42ff0a550777b45ca004460ef55f50f8f0e34c9/comments", "author": null, "committer": null, "parents": [{"sha": "f9fef34989a9d1974943ec3e835a547b56150c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9fef34989a9d1974943ec3e835a547b56150c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9fef34989a9d1974943ec3e835a547b56150c6a"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "fb0272b933953e035c761b495af26ad8083cc7ec", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b42ff0a550777b45ca004460ef55f50f8f0e34c9", "patch": "@@ -1,3 +1,9 @@\n+2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Try to ensure\n+\tthat an object of CW type initialized to a value is sufficiently\n+\taligned for this value.\n+\n 2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Do not"}, {"sha": "9c44329f03853e1c18abee927bb2bd89bcecbfd6", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=b42ff0a550777b45ca004460ef55f50f8f0e34c9", "patch": "@@ -895,6 +895,16 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t\t\tdebug_info_p);\n \t  }\n \n+\t/* ??? If this is an object of CW type initialized to a value, try to\n+\t   ensure that the object is sufficient aligned for this value, but\n+\t   without pessimizing the allocation.  This is a kludge necessary\n+\t   because we don't support dynamic alignment.  */\n+\tif (align == 0\n+\t    && Ekind (Etype (gnat_entity)) == E_Class_Wide_Subtype\n+\t    && No (Renamed_Object (gnat_entity))\n+\t    && No (Address_Clause (gnat_entity)))\n+\t  align = get_target_system_allocator_alignment () * BITS_PER_UNIT;\n+\n #ifdef MINIMUM_ATOMIC_ALIGNMENT\n \t/* If the size is a constant and no alignment is specified, force\n \t   the alignment to be the minimum valid atomic alignment.  The\n@@ -904,7 +914,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t   necessary and can interfere with constant replacement.  Finally,\n \t   do not do it for Out parameters since that creates an\n \t   size inconsistency with In parameters.  */\n-\tif (align == 0 && MINIMUM_ATOMIC_ALIGNMENT > TYPE_ALIGN (gnu_type)\n+\tif (align == 0\n+\t    && MINIMUM_ATOMIC_ALIGNMENT > TYPE_ALIGN (gnu_type)\n \t    && !FLOAT_TYPE_P (gnu_type)\n \t    && !const_flag && No (Renamed_Object (gnat_entity))\n \t    && !imported_p && No (Address_Clause (gnat_entity))"}, {"sha": "79bdd9591321546f02dadf79bc08b79e2d41f2cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b42ff0a550777b45ca004460ef55f50f8f0e34c9", "patch": "@@ -1,3 +1,8 @@\n+2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/derived_type3.adb: New test.\n+\t* gnat.dg/derived_type3_pkg.ad[sb]: New helper.\n+\n 2012-07-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/53942"}, {"sha": "7661feb4f1829f573a6e6805c075fda5c7dca16a", "filename": "gcc/testsuite/gnat.dg/derived_type3.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3.adb?ref=b42ff0a550777b45ca004460ef55f50f8f0e34c9", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do run }\n+\n+with Derived_Type3_Pkg; use Derived_Type3_Pkg;\n+\n+procedure Derived_Type3 is\n+begin\n+   Proc1;\n+   Proc2;\n+end;"}, {"sha": "ef3de83f0183290088c84c3c6f49c1ce5f1b0b7e", "filename": "gcc/testsuite/gnat.dg/derived_type3_pkg.adb", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3_pkg.adb?ref=b42ff0a550777b45ca004460ef55f50f8f0e34c9", "patch": "@@ -0,0 +1,42 @@\n+with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+package body Derived_Type3_Pkg is\n+\n+   type Parent is tagged null record;\n+\n+   type Child is new Parent with\n+      record\n+         Image : Ada.Strings.Unbounded.Unbounded_String;\n+      end record;\n+\n+   function Set_Image return Child'class is\n+      Local_Data : Child;\n+   begin\n+      Local_Data.Image := To_Unbounded_String (\"Hello\");\n+      return Local_Data;\n+   end Set_Image;\n+\n+   procedure Proc1 is\n+      The_Data : Parent'class := Set_Image;\n+   begin\n+      Put_Line (\"Child'Alignment =\" & Child'Alignment'Img);\n+      Put_Line (\"The_Data'Alignment =\" & The_Data'Alignment'Img);\n+   end;\n+\n+   procedure Proc2 is\n+\n+      procedure Nested (X : Parent'Class) is\n+        The_Data : Parent'Class := X;\n+      begin\n+        Put_Line (\"Child'Alignment =\" & Child'Alignment'Img);\n+        Put_Line (\"The_Data'Alignment =\" & The_Data'Alignment'Img);\n+      end;\n+\n+      The_Data : Parent'Class := Set_Image;\n+\n+   begin\n+      Nested (The_Data);\n+   end;\n+\n+end Derived_Type3_Pkg;"}, {"sha": "c3d8297db024749fbea8d0dda962aa1cb2122a99", "filename": "gcc/testsuite/gnat.dg/derived_type3_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42ff0a550777b45ca004460ef55f50f8f0e34c9/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type3_pkg.ads?ref=b42ff0a550777b45ca004460ef55f50f8f0e34c9", "patch": "@@ -0,0 +1,6 @@\n+package Derived_Type3_Pkg is\n+\n+   procedure Proc1;\n+   procedure Proc2;\n+\n+end Derived_Type3_Pkg;"}]}