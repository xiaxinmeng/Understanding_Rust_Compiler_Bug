{"sha": "0701e74c80c96c0b6996c970b21f0f383345ff0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcwMWU3NGM4MGM5NmMwYjY5OTZjOTcwYjIxZjBmMzgzMzQ1ZmYwZQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-02-17T15:26:30Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-02-17T15:26:30Z"}, "message": "2003-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/dnd/DragSourceContext.java\n\t(addDragSourceListener): Added documentation.\n\t* java/awt/dnd/DragSourceDragEvent.java\n\t(serialVersionUID): New member variable.\n\t(getDropAction): Reformated.\n\t* java/awt/dnd/DragSourceDropEvent.java\n\t(serialVersionUID): New member variable.\n\t(dropSuccess): Renamed from success for serialization issues.\n\t* java/awt/dnd/DragSourceEvent.java\n\t(serialVersionUID): New member variable.\n\t* java/awt/dnd/DropTarget.java\n\t(serialVersionUID): New member variable.\n\t(DropTarget): Implemented, documentation reworked.\n\t(setComponent): Documentation added.\n\t(getComponent): Documentation added.\n\t(setDefaultActions): Documentation added.\n\t(getDefaultActions): Documentation added.\n\t(addDropTargetListener): Documentation added.\n\t* java/awt/dnd/DropTargetContext.java\n\t(DropTargetContext): Documentation added.\n\t(TransferableProxy.TransferableProxy): New method.\n\t(dropComplete): Fixed documentation.\n\t(getTransferable): Fixed documentation.\n\t(createTransferableProxy): Implemented.\n\t* java/awt/dnd/DropTargetDragEvent.java\n\t(DropTargetDragEvent): Documentation added.\n\t(serialVersionUID): New member variable.\n\t(DropTargetDragEvent): Throw exceptions, documentation added.\n\t(acceptDrag): Implemented.\n\t(getCurrentDataFlavors): Implemented.3yy\n\t(getCurrentDataFlavorsAsList): Implemented.\n\t(isDataFlavorSupported): Implemented.\n\t(rejectDrag): Implemented.\n\t* java/awt/dnd/DropTargetDropEvent.java\n\t(DropTargetDropEvent): Documentation added.\n\t(serialVersionUID): New member variable.\n\t(actions): Renamed from srcActions for serialization issues.\n\t(isLocalTx): Renamed from isLocalTx for serialization issues.\n\t(DropTargetDropEvent): New implementation, throw exceptions,\n\tdocumentation added.\n\t(getCurrentDataFlavors): Implemented.\n\t(getCurrentDataFlavorsAsList): Implemented.\n\t(isDataFlavorSupported): Implemented.\n\t(getSourceActions): Implemented.\n\t(getDropAction): Implemented.\n\t(getTransferable): Implemented.\n\t(acceptDrop): Implemented.\n\t(rejectDrop): Implemented.\n\t* java/awt/dnd/DropTargetListener.java\n\t(drop): Fixed documentation.\n\t* java/awt/dnd/MouseDragGestureRecognizer.java\n\t(MouseDragGestureRecognizer): Documentation added.\n\n2003-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/font/FontRenderContext.java,\n\tjava/awt/font/ShapeGraphicAttribute.java,\n\tjava/awt/font/MultipleMaster.java,\n\tjava/awt/font/TransformAttribute.java,\n\tjava/awt/font/GlyphJustificationInfo.java,\n\tjava/awt/font/LineBreakMeasurer.java,\n\tjava/awt/font/TextMeasurer.java,\n\tjava/awt/font/TextLayout.java,\n\tjava/awt/font/LineMetrics.java,\n\tjava/awt/font/TextAttribute.java,\n\tjava/awt/font/GlyphMetrics.java,\n\tjava/awt/font/OpenType.java,\n\tjava/awt/font/GlyphVector.java,\n\tjava/awt/font/GraphicAttribute.java,\n\tjava/awt/font/ImageGraphicAttribute.java,\n\tjava/awt/font/NumericShaper.java: New files.\n\t* Makefile.am\n\t(awt_java_source_files): Added the following files:\n\tjava/awt/font/FontRenderContext.java\n\tjava/awt/font/ShapeGraphicAttribute.java\n\tjava/awt/font/MultipleMaster.java\n\tjava/awt/font/TransformAttribute.java\n\tjava/awt/font/GlyphJustificationInfo.java\n\tjava/awt/font/LineBreakMeasurer.java\n\tjava/awt/font/TextMeasurer.java\n\tjava/awt/font/TextLayout.java\n\tjava/awt/font/LineMetrics.java\n\tjava/awt/font/TextAttribute.java\n\tjava/awt/font/GlyphMetrics.java\n\tjava/awt/font/OpenType.java\n\tjava/awt/font/GlyphVector.java\n\tjava/awt/font/GraphicAttribute.java\n\tjava/awt/font/ImageGraphicAttribute.java\n\tjava/awt/font/NumericShaper.java\n\t* Makefile.in: Regenerated.\n\n2003-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/print/Paper.java\n\t(Paper): Implements Cloneable.\n\t* java/awt/print/PrinterJob.java\n\t(setJobName): Return value must be void.\n\t(print): Throws PrinterException.\n\nFrom-SVN: r62999", "tree": {"sha": "02fa4b1f5a6ffb78e1e526cf83da190b6559afbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02fa4b1f5a6ffb78e1e526cf83da190b6559afbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0701e74c80c96c0b6996c970b21f0f383345ff0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0701e74c80c96c0b6996c970b21f0f383345ff0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0701e74c80c96c0b6996c970b21f0f383345ff0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0701e74c80c96c0b6996c970b21f0f383345ff0e/comments", "author": null, "committer": null, "parents": [{"sha": "35a3fa09ad2d51d4f65f9162372dad7a5735e599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a3fa09ad2d51d4f65f9162372dad7a5735e599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a3fa09ad2d51d4f65f9162372dad7a5735e599"}], "stats": {"total": 2258, "additions": 2186, "deletions": 72}, "files": [{"sha": "b5fada9b90c1d4c17276db746bb7246279fe8bf9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -1,3 +1,104 @@\n+2003-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/dnd/DragSourceContext.java\n+\t(addDragSourceListener): Added documentation.\n+\t* java/awt/dnd/DragSourceDragEvent.java\n+\t(serialVersionUID): New member variable.\n+\t(getDropAction): Reformated.\n+\t* java/awt/dnd/DragSourceDropEvent.java\n+\t(serialVersionUID): New member variable.\n+\t(dropSuccess): Renamed from success for serialization issues.\n+\t* java/awt/dnd/DragSourceEvent.java\n+\t(serialVersionUID): New member variable.\n+\t* java/awt/dnd/DropTarget.java\n+\t(serialVersionUID): New member variable.\n+\t(DropTarget): Implemented, documentation reworked.\n+\t(setComponent): Documentation added.\n+\t(getComponent): Documentation added.\n+\t(setDefaultActions): Documentation added.\n+\t(getDefaultActions): Documentation added.\n+\t(addDropTargetListener): Documentation added.\n+\t* java/awt/dnd/DropTargetContext.java\n+\t(DropTargetContext): Documentation added.\n+\t(TransferableProxy.TransferableProxy): New method.\n+\t(dropComplete): Fixed documentation.\n+\t(getTransferable): Fixed documentation.\n+\t(createTransferableProxy): Implemented.\n+\t* java/awt/dnd/DropTargetDragEvent.java\n+\t(DropTargetDragEvent): Documentation added.\n+\t(serialVersionUID): New member variable.\n+\t(DropTargetDragEvent): Throw exceptions, documentation added.\n+\t(acceptDrag): Implemented.\n+\t(getCurrentDataFlavors): Implemented.3yy\n+\t(getCurrentDataFlavorsAsList): Implemented.\n+\t(isDataFlavorSupported): Implemented.\n+\t(rejectDrag): Implemented.\n+\t* java/awt/dnd/DropTargetDropEvent.java\n+\t(DropTargetDropEvent): Documentation added.\n+\t(serialVersionUID): New member variable.\n+\t(actions): Renamed from srcActions for serialization issues.\n+\t(isLocalTx): Renamed from isLocalTx for serialization issues.\n+\t(DropTargetDropEvent): New implementation, throw exceptions,\n+\tdocumentation added.\n+\t(getCurrentDataFlavors): Implemented.\n+\t(getCurrentDataFlavorsAsList): Implemented.\n+\t(isDataFlavorSupported): Implemented.\n+\t(getSourceActions): Implemented.\n+\t(getDropAction): Implemented.\n+\t(getTransferable): Implemented.\n+\t(acceptDrop): Implemented.\n+\t(rejectDrop): Implemented.\n+\t* java/awt/dnd/DropTargetListener.java\n+\t(drop): Fixed documentation.\n+\t* java/awt/dnd/MouseDragGestureRecognizer.java\n+\t(MouseDragGestureRecognizer): Documentation added.\n+\n+2003-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/font/FontRenderContext.java,\n+\tjava/awt/font/ShapeGraphicAttribute.java,\n+\tjava/awt/font/MultipleMaster.java,\n+\tjava/awt/font/TransformAttribute.java,\n+\tjava/awt/font/GlyphJustificationInfo.java,\n+\tjava/awt/font/LineBreakMeasurer.java,\n+\tjava/awt/font/TextMeasurer.java,\n+\tjava/awt/font/TextLayout.java,\n+\tjava/awt/font/LineMetrics.java,\n+\tjava/awt/font/TextAttribute.java,\n+\tjava/awt/font/GlyphMetrics.java,\n+\tjava/awt/font/OpenType.java,\n+\tjava/awt/font/GlyphVector.java,\n+\tjava/awt/font/GraphicAttribute.java,\n+\tjava/awt/font/ImageGraphicAttribute.java,\n+\tjava/awt/font/NumericShaper.java: New files.\n+\t* Makefile.am\n+\t(awt_java_source_files): Added the following files:\n+\tjava/awt/font/FontRenderContext.java\n+\tjava/awt/font/ShapeGraphicAttribute.java\n+\tjava/awt/font/MultipleMaster.java\n+\tjava/awt/font/TransformAttribute.java\n+\tjava/awt/font/GlyphJustificationInfo.java\n+\tjava/awt/font/LineBreakMeasurer.java\n+\tjava/awt/font/TextMeasurer.java\n+\tjava/awt/font/TextLayout.java\n+\tjava/awt/font/LineMetrics.java\n+\tjava/awt/font/TextAttribute.java\n+\tjava/awt/font/GlyphMetrics.java\n+\tjava/awt/font/OpenType.java\n+\tjava/awt/font/GlyphVector.java\n+\tjava/awt/font/GraphicAttribute.java\n+\tjava/awt/font/ImageGraphicAttribute.java\n+\tjava/awt/font/NumericShaper.java\n+\t* Makefile.in: Regenerated.\n+\n+2003-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/print/Paper.java\n+\t(Paper): Implements Cloneable.\n+\t* java/awt/print/PrinterJob.java\n+\t(setJobName): Return value must be void.\n+\t(print): Throws PrinterException.\n+\t\n 2003-02-16  Tom Tromey  <tromey@redhat.com>\n \n \t* verify.cc (_Jv_BytecodeVerifier::pop_jump): Removed unused"}, {"sha": "45191d24365634f3970c93090a570bf90f78ec57", "filename": "libjava/java/awt/dnd/DragSourceContext.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -92,7 +92,13 @@ public Cursor getCursor()\n     return null;\n   }\n \n-  public void addDragSourceListener(DragSourceListener l)\n+  /**\n+   * Adds a <code>DragSourceListener</code>.\n+   *\n+   * @exception TooManyListenersException If a <code>DragSourceListener</code>\n+   * has already been added.\n+   */\n+  public void addDragSourceListener (DragSourceListener dsl)\n     throws TooManyListenersException\n   {\n   }"}, {"sha": "6417492f89e0a05dff4c82bb4adedd108bb0483f", "filename": "libjava/java/awt/dnd/DragSourceDragEvent.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDragEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDragEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDragEvent.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -41,10 +41,16 @@\n import gnu.java.awt.EventModifier;\n \n /**\n- * STUBBED\n+ * @author Michael Koch\n+ * @since 1.2\n  */\n public class DragSourceDragEvent extends DragSourceEvent\n {\n+  /**\n+   * Compatible with JDK 1.2+\n+   */\n+  private static final long serialVersionUID = 481346297933902471L;\n+\n   private final int dropAction;\n   private final int targetActions;\n   private final int gestureModifiers;\n@@ -89,7 +95,8 @@ public int getUserAction()\n \n   public int getDropAction()\n   {\n-    return dropAction & targetActions\n-      & ((DragSourceContext) source).getSourceActions();\n+    return (dropAction\n+            & targetActions\n+            & ((DragSourceContext) source).getSourceActions());\n   }\n } // class DragSourceDragEvent"}, {"sha": "a645814f160c3ff6f5fc4e9cea07db4be0099657", "filename": "libjava/java/awt/dnd/DragSourceDropEvent.java", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDropEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDropEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDropEvent.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -46,30 +46,35 @@\n  */\n public class DragSourceDropEvent extends DragSourceEvent\n {\n+  /**\n+   * Compatible with JDK 1.2+\n+   */\n+  private static final long serialVersionUID = -5571321229470821891L;\n+\n   private final int dropAction;\n-  private final boolean success;\n+  private final boolean dropSuccess;\n \n   public DragSourceDropEvent (DragSourceContext context)\n   {\n     super (context);\n     this.dropAction = 0;\n-    this.success = false;\n+    this.dropSuccess = false;\n   }\n   \n   public DragSourceDropEvent (DragSourceContext context, int dropAction,\n-                              boolean success)\n+                              boolean dropSuccess)\n   {\n     super (context);\n     this.dropAction = dropAction;\n-    this.success = success;\n+    this.dropSuccess = dropSuccess;\n   }\n \n   public DragSourceDropEvent (DragSourceContext context, int dropAction,\n-                              boolean success, int x, int y)\n+                              boolean dropSuccess, int x, int y)\n   {\n     super (context, x, y);\n     this.dropAction = dropAction;\n-    this.success = success;\n+    this.dropSuccess = dropSuccess;\n   }\n \n   public int getDropAction()\n@@ -79,6 +84,6 @@ public int getDropAction()\n \n   public boolean getDropSuccess()\n   {\n-    return success;\n+    return dropSuccess;\n   }\n } // class DragSourceDropEvent"}, {"sha": "60f6eb2f29563074818c4b24fe3e8d7c4a65e6d7", "filename": "libjava/java/awt/dnd/DragSourceEvent.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceEvent.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -41,8 +41,16 @@\n import java.awt.Point;\n import java.util.EventObject;\n \n+/**\n+ * @since 1.2\n+ */\n public class DragSourceEvent extends EventObject\n {\n+  /**\n+   * Compatible with JDK 1.2+\n+   */\n+  private static final long serialVersionUID = -763287114604032641L;\n+  \n   private final boolean locationSpecified;\n   private final int x;\n   private final int y;"}, {"sha": "09c642cf54f68f3a3509d7707bdab8692521ff6c", "filename": "libjava/java/awt/dnd/DropTarget.java", "status": "modified", "additions": 41, "deletions": 12, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -50,6 +50,11 @@\n public class DropTarget\n   implements DropTargetListener, EventListener, Serializable\n {\n+  /**\n+   * Compatible with JDK 1.2+\n+   */\n+  private static final long serialVersionUID = -6283860791671019047L;\n+\n   protected static class DropTargetAutoScroller\n     implements ActionListener\n   {\n@@ -74,64 +79,85 @@ public void actionPerformed (ActionEvent e)\n   private boolean isActive = false;\n     \n   /**\n-   * FIXME\n+   * Creates a <code>DropTarget</code> object.\n    *\n-   * @exception HeadlessException FIXME\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless()\n+   * returns true.\n    */\n   public DropTarget ()\n   {\n+    this (null, 0, null, true, null);\n   }\n   \n   /**\n-   * FIXME\n+   * Creates a <code>DropTarget</code> object.\n    *\n-   * @exception HeadlessException FIXME\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless()\n+   * returns true.\n    */\n   public DropTarget (Component c, DropTargetListener dtl)\n   {\n+    this (c, 0, dtl, true, null);\n   }\n   \n   /**\n-   * FIXME\n+   * Creates a <code>DropTarget</code> object.\n    *\n-   * @exception HeadlessException FIXME\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless()\n+   * returns true.\n    */\n   public DropTarget (Component c, int i, DropTargetListener dtl)\n   {\n+    this (c, i, dtl, true, null);\n   }\n   \n   /**\n-   * FIXME\n+   * Creates a <code>DropTarget</code> object.\n    *\n-   * @exception HeadlessException FIXME\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless()\n+   * returns true.\n    */\n   public DropTarget (Component c, int i, DropTargetListener dtl, boolean b)\n   {\n+    this (c, i, dtl, b, null);\n   }\n   \n   /**\n-   * FIXME\n+   * Creates a <code>DropTarget</code> object.\n    *\n-   * @exception HeadlessException FIXME\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless()\n+   * returns true.\n    */\n   public DropTarget (Component c, int i, DropTargetListener dtl, boolean b,\n-\t\t     FlavorMap fm)\n+                     FlavorMap fm)\n   {\n   }\n \n+  /**\n+   * Sets the component associated with this drop target object.\n+   */\n   public void setComponent (Component c)\n   {\n   }\n \n+  /**\n+   * Returns the component associated with this drop target object.\n+   */\n   public Component getComponent ()\n   {\n     return null;\n   }\n \n+  /**\n+   * Sets the default actions.\n+   */\n   public void setDefaultActions (int ops)\n   {\n   }\n \n+  /**\n+   * Returns the default actions.\n+   */\n   public int getDefaultActions ()\n   {\n     return 0;\n@@ -148,7 +174,10 @@ public boolean isActive()\n   }\n \n   /**\n-   * @exception TooManyListenersException FIXME\n+   * Adds a new <code>DropTargetListener</code>.\n+   * \n+   * @exception TooManyListenersException If there is already a\n+   * <code>DropTargetListener</code>.\n    */\n   public void addDropTargetListener (DropTargetListener dtl)\n     throws TooManyListenersException"}, {"sha": "eca2f6e3763761a6ac149ec2efe9b9325e1cdd84", "filename": "libjava/java/awt/dnd/DropTargetContext.java", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -46,6 +46,10 @@\n import java.awt.datatransfer.UnsupportedFlavorException;\n import java.util.List;\n \n+/**\n+ * @author Michael Koch <konqueror@gmx.de>\n+ * @since 1.2\n+ */\n public class DropTargetContext implements Serializable\n {\n   static final long serialVersionUID = -634158968993743371L;\n@@ -55,6 +59,12 @@ protected class TransferableProxy implements Transferable\n     protected boolean isLocal;\n     protected Transferable transferable;\n \n+    TransferableProxy (Transferable t, boolean local)\n+    {\n+      this.transferable = t;\n+      this.isLocal = local;\n+    }\n+    \n     public DataFlavor[] getTransferDataFlavors ()\n     {\n       // FIXME: implement this\n@@ -110,9 +120,9 @@ protected int getTargetActions()\n   }\n \n   /**\n-   * FIXME\n+   * Signals that the drop is completed.\n    *\n-   * @exception InvalidDnDOperationException FIXME\n+   * @exception InvalidDnDOperationException If a drop is not outstanding.\n    */\n   public void dropComplete (boolean success)\n   {\n@@ -158,9 +168,9 @@ protected boolean isDataFlavorSupported (DataFlavor flavor)\n   }\n \n   /**\n-   * FIXME\n+   * Return the <code>Transferable</code> operandof this operation.\n    *\n-   * @exception InvalidDnDOperationException FIXME\n+   * @exception InvalidDnDOperationException If a drag is not outstanding.\n    */\n   protected Transferable getTransferable() throws InvalidDnDOperationException\n   {\n@@ -170,7 +180,6 @@ protected Transferable getTransferable() throws InvalidDnDOperationException\n \n   protected Transferable createTransferableProxy(Transferable t, boolean local)\n   {\n-    // FIXME: implement this\n-    return null;\n+    return new TransferableProxy (t, local);\n   }\n } // class DropTargetContext"}, {"sha": "e95b2d1ae87d6932f0b27776c6cd9eec0d83dd09", "filename": "libjava/java/awt/dnd/DropTargetDragEvent.java", "status": "modified", "additions": 42, "deletions": 10, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDragEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDragEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDragEvent.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -41,41 +41,74 @@\n import java.awt.Point;\n import java.awt.datatransfer.DataFlavor;\n \n+/**\n+ * @since 1.2\n+ */\n public class DropTargetDragEvent extends DropTargetEvent\n {\n+  /**\n+   * Compatible with 1.2+\n+   */\n+  private static final long serialVersionUID = -8422265619058953682L;\n+\n   private final int dropAction;\n   private final int srcActions;\n   private final Point location;\n \n   /**\n-   * FIXME\n+   * Initializes a <code>DropTargetDragEvent</code>.\n    *\n-   * @exception NullPointerException FIXME\n+   * @exception IllegalArgumentException If dropAction is not one of DnDConstants,\n+   * srcActions is not a bitwise mask of DnDConstants, or dtc is null.\n+   * @exception NullPointerException If location is null.\n    */\n   public DropTargetDragEvent (DropTargetContext context, Point location,\n                               int dropAction, int srcActions)\n   {\n     super (context);\n+\n+    if (location == null)\n+      throw new NullPointerException ();\n+\n+    if (context == null)\n+      throw new IllegalArgumentException ();\n+\n+    if (dropAction != DnDConstants.ACTION_NONE\n+        && dropAction != DnDConstants.ACTION_COPY\n+        && dropAction != DnDConstants.ACTION_MOVE\n+        && dropAction != DnDConstants.ACTION_COPY_OR_MOVE\n+        && dropAction != DnDConstants.ACTION_LINK\n+        && dropAction != DnDConstants.ACTION_REFERENCE)\n+      throw new IllegalArgumentException ();\n+\n+    int srcActionsMask = DnDConstants.ACTION_NONE\n+                         | DnDConstants.ACTION_COPY\n+                         | DnDConstants.ACTION_MOVE\n+                         | DnDConstants.ACTION_COPY_OR_MOVE\n+                         | DnDConstants.ACTION_LINK\n+                         | DnDConstants.ACTION_REFERENCE;\n+    \n+    if (~(srcActions ^ srcActionsMask) != 0)\n+      throw new IllegalArgumentException ();\n+    \n     this.dropAction = dropAction;\n     this.srcActions = srcActions;\n     this.location = location;\n   }\n \n   public void acceptDrag (int dragOperation)\n   {\n-    // FIXME: implement this\n+    context.acceptDrag (dragOperation);\n   }\n \n   public DataFlavor[] getCurrentDataFlavors ()\n   {\n-    // FIXME: implement this\n-    return null;\n+    return context.getCurrentDataFlavors ();\n   }\n   \n   public List getCurrentDataFlavorsAsList ()\n   {\n-    // FIXME: implement this\n-    return null;\n+    return context.getCurrentDataFlavorsAsList ();\n   }\n   \n   public int getDropAction()\n@@ -96,12 +129,11 @@ public int getSourceActions ()\n \n   public boolean isDataFlavorSupported (DataFlavor df)\n   {\n-    // FIXME: implement this\n-    return true;\n+    return context.isDataFlavorSupported (df);\n   }\n \n   public void rejectDrag ()\n   {\n-    // FIXME: implement this\n+    context.rejectDrag ();\n   }\n } // class DropTargetDragEvent"}, {"sha": "bb57f23b08f83ab56db29dce28ac1d2adcfa90ec", "filename": "libjava/java/awt/dnd/DropTargetDropEvent.java", "status": "modified", "additions": 64, "deletions": 26, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDropEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDropEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetDropEvent.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -42,31 +42,75 @@\n import java.awt.datatransfer.Transferable;\n import java.util.List;\n \n+/**\n+ * @since 1.2\n+ */\n public class DropTargetDropEvent extends DropTargetEvent\n {\n+  /**\n+   * Compatible with JDK 1.2+\n+   */\n+  private static final long serialVersionUID = -1721911170440459322L;\n+\n   private final int dropAction;\n-  private final int srcActions;\n+  private final int actions;\n   private final Point location;\n-  private final boolean isLocal;\n+  private final boolean isLocalTx;\n   \n+  /**\n+   * Initializes a <code>DropTargetDropEvent</code>. By default this constructor\n+   * assumes that the target is not int same JVM.\n+   *\n+   * @exception IllegalArgumentException If dropAction is not one of DnDConstants,\n+   * actions is not a bitwise mask of DnDConstants, or dtc is null.\n+   * @exception NullPointerException If location is null.\n+   */\n   public DropTargetDropEvent (DropTargetContext dtc, Point location,\n-                              int dropAction, int srcActions)\n+                              int dropAction, int actions)\n   {\n-    super (dtc);\n-    this.dropAction = dropAction;\n-    this.srcActions = srcActions;\n-    this.location = location;\n-    this.isLocal = false;\n+    this (dtc, location, dropAction, actions, false);\n   }\n \n+  /**\n+   * Initializes a <code>DropTargetDropEvent</code>.\n+   *\n+   * @exception IllegalArgumentException If dropAction is not one of DnDConstants,\n+   * actions is not a bitwise mask of DnDConstants, or dtc is null.\n+   * @exception NullPointerException If location is null.\n+   */\n   public DropTargetDropEvent (DropTargetContext dtc, Point location,\n-                              int dropAction, int srcActions, boolean isLocal)\n+                              int dropAction, int actions, boolean isLocalTx)\n   {\n     super (dtc);\n+\n+    if (location == null)\n+      throw new NullPointerException ();\n+\n+    if (dtc == null)\n+      throw new IllegalArgumentException ();\n+\n+    if (dropAction != DnDConstants.ACTION_NONE\n+        && dropAction != DnDConstants.ACTION_COPY\n+        && dropAction != DnDConstants.ACTION_MOVE\n+        && dropAction != DnDConstants.ACTION_COPY_OR_MOVE\n+        && dropAction != DnDConstants.ACTION_LINK\n+        && dropAction != DnDConstants.ACTION_REFERENCE)\n+      throw new IllegalArgumentException ();\n+\n+    int actionsMask = DnDConstants.ACTION_NONE\n+                      | DnDConstants.ACTION_COPY\n+                      | DnDConstants.ACTION_MOVE\n+                      | DnDConstants.ACTION_COPY_OR_MOVE\n+                      | DnDConstants.ACTION_LINK\n+                      | DnDConstants.ACTION_REFERENCE;\n+    \n+    if (~(actions ^ actionsMask) != 0)\n+      throw new IllegalArgumentException ();\n+    \n     this.dropAction = dropAction;\n-    this.srcActions = srcActions;\n+    this.actions = actions;\n     this.location = location;\n-    this.isLocal = isLocal;\n+    this.isLocalTx = isLocalTx;\n   }\n   \n   public Point getLocation ()\n@@ -76,48 +120,42 @@ public Point getLocation ()\n \n   public DataFlavor[] getCurrentDataFlavors ()\n   {\n-    // FIXME: implement this\n-    return null;\n+    return context.getCurrentDataFlavors ();\n   }\n \n   public List getCurrentDataFlavorsAsList ()\n   {\n-    // FIXME: implement this\n-    return null;\n+    return context.getCurrentDataFlavorsAsList ();\n   }\n \n   public boolean isDataFlavorSupported (DataFlavor flavor)\n   {\n-    // FIXME: implement this\n-    return false;\n+    return context.isDataFlavorSupported (flavor);\n   }\n \n   public int getSourceActions ()\n   {\n-    // FIXME: implement this\n-    return 0;\n+    return actions;\n   }\n \n   public int getDropAction ()\n   {\n-    // FIXME: implement this\n-    return 0;\n+    return dropAction;\n   }\n \n   public Transferable getTransferable ()\n   {\n-    // FIXME: implement this\n-    return null;\n+    return context.getTransferable ();\n   }\n \n   public void acceptDrop (int dropAction)\n   {\n-    // FIXME: implement this\n+    context.acceptDrop (dropAction);\n   }\n \n   public void rejectDrop ()\n   {\n-    // FIXME: implement this\n+    context.rejectDrop ();\n   }\n \n   public void dropComplete (boolean success)\n@@ -127,6 +165,6 @@ public void dropComplete (boolean success)\n \n   public boolean isLocalTransfer()\n   {\n-    return isLocal;\n+    return isLocalTx;\n   }\n } // class DropTargetDropEvent"}, {"sha": "8025ff239208470569bffb5c6fcaa486c7968b5b", "filename": "libjava/java/awt/dnd/DropTargetListener.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetListener.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -81,7 +81,7 @@ public interface DropTargetListener extends EventListener\n   void dragExit (DropTargetEvent e);\n \n   /**\n-   * FIXME\n+   * Called when the drag operation has terminated with a drop.\n    *\n    * @param e the drag source drag event\n    */"}, {"sha": "d01032433c019b32155f7b26734bdaa9b4c67d66", "filename": "libjava/java/awt/dnd/MouseDragGestureRecognizer.java", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FMouseDragGestureRecognizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fdnd%2FMouseDragGestureRecognizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FMouseDragGestureRecognizer.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -45,27 +45,38 @@\n /**\n  * @author Michael Koch <konqueror@gmx.de>\n  */\n-\n public abstract class MouseDragGestureRecognizer \n   extends DragGestureRecognizer\n   implements MouseListener, MouseMotionListener\n {\n+  /**\n+   * Creates a <code>MouseDragGestureRecognizer</code> object.\n+   */\n   protected MouseDragGestureRecognizer (DragSource ds, Component c, int act,\n \t\t                        DragGestureListener dgl)\n   {\n     super (ds, c, act, dgl);\n   }\n \n+  /**\n+   * Creates a <code>MouseDragGestureRecognizer</code> object.\n+   */\n   protected MouseDragGestureRecognizer (DragSource ds, Component c, int act)\n   {\n     super (ds, c, act);\n   }\n \n+  /**\n+   * Creates a <code>MouseDragGestureRecognizer</code> object.\n+   */\n   protected MouseDragGestureRecognizer (DragSource ds, Component c)\n   {\n     super (ds, c);\n   }\n \n+  /**\n+   * Creates a <code>MouseDragGestureRecognizer</code> object.\n+   */\n   protected MouseDragGestureRecognizer (DragSource ds)\n   {\n     super (ds);"}, {"sha": "b8202a8592f1f7b5517044cbf4ce7c9e92755634", "filename": "libjava/java/awt/font/FontRenderContext.java", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FFontRenderContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FFontRenderContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FFontRenderContext.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,115 @@\n+/* FontRenderContext.java\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.geom.AffineTransform;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public class FontRenderContext\n+{\n+  private AffineTransform affineTransform;\n+  private boolean isAntiAliased;\n+  private boolean usesFractionalMetrics;\n+ \n+  /**\n+   * Construct a new <code>FontRenderContext</code>.\n+   */\n+  protected FontRenderContext()\n+  {\n+    // Do nothing here.\n+  }\n+ \n+  /**\n+   * Construct a new <code>FontRenderContext</code>.\n+   */\n+  public FontRenderContext (AffineTransform tx, boolean isAntiAliased,\n+                            boolean usesFractionalMetrics)\n+  {\n+    if (tx != null\n+        && !tx.isIdentity ())\n+      {\n+        this.affineTransform = new AffineTransform (tx);\n+      }\n+    \n+    this.isAntiAliased = isAntiAliased;\n+    this.usesFractionalMetrics = usesFractionalMetrics;\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof FontRenderContext))\n+      return false;\n+\n+    return equals ((FontRenderContext) obj);\n+  }\n+\n+  public boolean equals (FontRenderContext rhs)\n+  {\n+    return (affineTransform.equals (rhs.getTransform ())\n+            && isAntiAliased == rhs.isAntiAliased ()\n+            && usesFractionalMetrics == rhs.usesFractionalMetrics ());\n+  }\n+\n+  public AffineTransform getTransform ()\n+  {\n+    return affineTransform;\n+  }\n+\n+  /**\n+   * Returns the hash code of the font render context.\n+   */\n+  public int hashCode ()\n+  {\n+    // FIXME: check what SUN does here.\n+    return affineTransform == null ? 0 : affineTransform.hashCode ();\n+  }\n+\n+  public boolean isAntiAliased ()\n+  {\n+    return isAntiAliased;\n+  }\n+\n+  public boolean usesFractionalMetrics ()\n+  {\n+    return usesFractionalMetrics;\n+  }\n+}\n+ "}, {"sha": "e95a2c932d84ce7e4db58a68672a7bf49da5821e", "filename": "libjava/java/awt/font/GlyphJustificationInfo.java", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGlyphJustificationInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGlyphJustificationInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FGlyphJustificationInfo.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,77 @@\n+/* GlyphJustificationInfo.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class GlyphJustificationInfo\n+{\n+  public static final int PRIORITY_KASHIDA = 0;\n+  public static final int PRIORITY_WHITESPACE = 1;\n+  public static final int PRIORITY_INTERCHAR = 2;\n+  public static final int PRIORITY_NONE = 3;\n+  \n+  public final float weight;\n+  public final int growPriority;\n+  public final boolean growAbsorb;\n+  public final float growLeftLimit;\n+  public final float growRightLimit;\n+  public final int shrinkPriority;\n+  public final boolean shrinkAbsorb;\n+  public final float shrinkLeftLimit;\n+  public final float shrinkRightLimit;\n+\t\n+  public GlyphJustificationInfo (float weight, boolean growAbsorb,\n+                                 int growPriority, float growLeftLimit,\n+                                 float growRightLimit, boolean shrinkAbsorb,\n+                                 int shrinkPriority, float shrinkLeftLimit,\n+                                 float shrinkRightLimit)\n+  {\n+    this.weight = weight;\n+    this.growAbsorb = growAbsorb;\n+    this.growPriority = growPriority;\n+    this.growLeftLimit = growLeftLimit;\n+    this.growRightLimit = growRightLimit;\n+    this.shrinkAbsorb = shrinkAbsorb;\n+    this.shrinkPriority = shrinkPriority;\n+    this.shrinkLeftLimit = shrinkLeftLimit;\n+    this.shrinkRightLimit = shrinkRightLimit;\n+  }\n+}"}, {"sha": "975f0983b164dd94ac20dbd72615fa44a7252e85", "filename": "libjava/java/awt/font/GlyphMetrics.java", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGlyphMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGlyphMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FGlyphMetrics.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,134 @@\n+/* GlyphMetrics.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.geom.Rectangle2D;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class GlyphMetrics\n+{\n+  public static final byte COMBINING = 2;\n+  public static final byte COMPONENT = 3;\n+  public static final byte LIGATURE = 1;\n+  public static final byte STANDARD = 0;\n+  public static final byte WHITESPACE = 4;\n+ \n+  private boolean horizontal;\n+  private float advanceX;\n+  private float advanceY;\n+  private Rectangle2D bounds;\n+  private byte glyphType;\n+  \n+  public GlyphMetrics (boolean horizontal, float advanceX, float advanceY,\n+                       Rectangle2D bounds, byte glyphType)\n+  {\n+    this.horizontal = horizontal;\n+    this.advanceX = advanceX;\n+    this.advanceY = advanceY;\n+    this.bounds = bounds;\n+    this.glyphType = glyphType;\n+  }\n+  \n+  public GlyphMetrics (float advance, Rectangle2D bounds, byte glyphType)\n+  {\n+    this (true, advance, advance, bounds, glyphType);\n+  }\n+\n+  public float getAdvance ()\n+  {\n+    return horizontal ? advanceX : advanceY;\n+  }\n+\n+  public float getAdvanceX ()\n+  {\n+    return advanceX;\n+  }\n+\n+  public float getAdvanceY ()\n+  {\n+    return advanceY;\n+  }\n+\n+  public Rectangle2D getBounds2D ()\n+  {\n+    return bounds;\n+  }\n+\n+  public float getLSB ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getRSB ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int getType ()\n+  {\n+    return glyphType;\n+  }\n+\n+  public boolean isCombining ()\n+  {\n+    return (glyphType == COMBINING);\n+  }\n+\n+  public boolean isComponent ()\n+  {\n+    return (glyphType == COMPONENT);\n+  }\n+\n+  public boolean isLigature()\n+  {\n+    return (glyphType == LIGATURE);\n+  }\n+\n+  public boolean isStandard()\n+  {\n+    return (glyphType == STANDARD);\n+  }\n+\n+  public boolean isWhitespace()\n+  {\n+    return (glyphType == WHITESPACE);\n+  }\n+}"}, {"sha": "ae103b833918d01cd301e3725c4c563e56534be6", "filename": "libjava/java/awt/font/GlyphVector.java", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FGlyphVector.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,145 @@\n+/* GlyphVector.java\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.Font;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public abstract class GlyphVector implements Cloneable\n+{\n+  public static final int FLAG_COMPLEX_GLYPHS = 8;\n+  public static final int FLAG_HAS_POSITION_ADJUSTMENTS = 2;\n+  public static final int FLAG_HAS_TRANSFORMS = 1;\n+  public static final int FLAG_MASK = 15;\n+  public static final int FLAG_RUN_RTL = 4;\n+\n+  /**\n+   * Constructs a <code>GlyphVector</code> object.\n+   */\n+  public GlyphVector ()\n+  {\n+  }\n+\n+  public abstract boolean equals (GlyphVector set);\n+\n+  public abstract Font getFont ();\n+\n+  public abstract FontRenderContext getFontRenderContext ();\n+    \n+  public int getGlyphCharIndex (int glyphIndex)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+    \n+  public int[] getGlyphCharIndices (int beginGlyphIndex, int numEntries,\n+                                    int[] codeReturn)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+    \n+  public abstract int getGlyphCode (int glyphIndex);\n+\n+  public abstract int[] getGlyphCodes (int beginGlyphIndex, int numEntries,\n+                                       int[] codeReturn);\n+\n+  public abstract GlyphJustificationInfo getGlyphJustificationInfo\n+    (int glyphIndex);\n+\n+  public abstract Shape getGlyphLogicalBounds (int glyphIndex);\n+\n+  public abstract GlyphMetrics getGlyphMetrics (int glyphIndex);\n+\n+  public abstract Shape getGlyphOutline (int glyphIndex);\n+\n+  public Shape getGlyphOutline (int glyphIndex, float x, float y)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Rectangle getGlyphPixelBounds (int index, FontRenderContext renderFRC,\n+                                        float x, float y)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public abstract Point2D getGlyphPosition (int glyphIndex);\n+\n+  public abstract float[] getGlyphPositions (int beginGlyphIndex,\n+                                             int numEntries,\n+                                             float[] positionReturn);\n+\n+  public abstract AffineTransform getGlyphTransform (int glyphIndex);\n+\n+  public abstract Shape getGlyphVisualBounds (int glyphIndex);\n+\n+  public int getLayoutFlags ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public abstract Rectangle2D getLogicalBounds ();\n+\n+  public abstract int getNumGlyphs ();\n+  \n+  public abstract Shape getOutline ();\n+\n+  public abstract Shape getOutline (float x, float y);\n+\n+  public Rectangle getPixelBounds (FontRenderContext renderFRC,\n+                                   float x, float y)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public abstract Rectangle2D getVisualBounds ();\n+\n+  public abstract void performDefaultLayout ();\n+\n+  public abstract void setGlyphPosition (int glyphIndex, Point2D newPos);\n+\n+  public abstract void setGlyphTransform (int glyphIndex,\n+                                          AffineTransform newTX);\n+}"}, {"sha": "377b8da4ccc3e18e47d275426b2ef1a193db57b2", "filename": "libjava/java/awt/font/GraphicAttribute.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGraphicAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FGraphicAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FGraphicAttribute.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,84 @@\n+/* GraphicAttribute.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.Graphics2D;\n+import java.awt.geom.Rectangle2D;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public abstract class GraphicAttribute\n+{\n+  public static final int BOTTOM_ALIGNMENT = -2;\n+  public static final int CENTER_BASELINE = 1;\n+  public static final int HANGING_BASELINE = 2;\n+  public static final int ROMAN_BASELINE = 0;\n+  public static final int TOP_ALIGNMENT = -1;\n+\n+  private int alignment;\n+  \n+  protected GraphicAttribute (int alignment)\n+  {\n+    this.alignment = alignment;\n+  }\n+\n+  public abstract void draw (Graphics2D graphics, float x, float y);\n+\n+  public abstract float getAdvance ();\n+\n+  public int getAlignment ()\n+  {\n+    return alignment;\n+  }\n+\n+  public abstract float getAscent ();\n+\n+  public Rectangle2D getBounds ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public abstract float getDescent ();\n+\n+  public GlyphJustificationInfo getJustificationInfo ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+}"}, {"sha": "ca5b95fc633436f3a724709ab9daefe67dfe1f83", "filename": "libjava/java/awt/font/ImageGraphicAttribute.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FImageGraphicAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FImageGraphicAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FImageGraphicAttribute.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,109 @@\n+/* ImageGraphicAttribute.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.geom.Rectangle2D;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public class ImageGraphicAttribute extends GraphicAttribute\n+{\n+  private Image image;\n+  \n+  public ImageGraphicAttribute (Image image, int alignment)\n+  {\n+    super (alignment);\n+    this.image = image;\n+  }\n+\n+  public ImageGraphicAttribute (Image image, int alignment, float originX,\n+                                float originY)\n+  {\n+    super (alignment);\n+    this.image = image;\n+    \n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public void draw (Graphics2D graphics, float x, float y)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof ImageGraphicAttribute))\n+      return false;\n+\n+    return equals ((ImageGraphicAttribute) obj);\n+  }\n+\n+  public boolean equals (ImageGraphicAttribute rhs)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getAdvance ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getAscent ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Rectangle2D getBounds () \n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getDescent ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int hashCode ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+}"}, {"sha": "19f1525c47631855fc7356bdc31639214243dbdb", "filename": "libjava/java/awt/font/LineBreakMeasurer.java", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FLineBreakMeasurer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FLineBreakMeasurer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FLineBreakMeasurer.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,113 @@\n+/* LineBreakMeasurer.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.text.AttributedCharacterIterator;\n+import java.text.BreakIterator;\n+\n+public final class LineBreakMeasurer\n+{\n+  private AttributedCharacterIterator ci;\n+  private FontRenderContext frc;\n+  private BreakIterator bi;\n+\n+  /**\n+   * Constructs a <code>LineBreakMeasurer</code> object.\n+   */\n+  public LineBreakMeasurer (AttributedCharacterIterator text,\n+                            FontRenderContext frc)\n+  {\n+    this (text, null, frc);\n+  }\n+\n+  /**\n+   * Constructs a <code>LineBreakMeasurer</code> object.\n+   */\n+  public LineBreakMeasurer (AttributedCharacterIterator text,\n+                            BreakIterator breakIter, FontRenderContext frc) \n+  {\n+    this.ci = text;\n+    this.bi = breakIter;\n+    this.frc = frc;\n+  }\n+\n+  public void deleteChar (AttributedCharacterIterator newParagraph,\n+                          int deletePos)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int getPosition ()\n+  {\n+    return ci.getIndex ();\n+  }\n+\n+  public void insertChar (AttributedCharacterIterator newParagraph,\n+                          int insertPos)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextLayout nextLayout (float wrappingWidth)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextLayout nextLayout (float wrappingWidth, int offsetLimit,\n+                                boolean requireNextWord)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int nextOffset (float wrappingWidth)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int nextOffset (float wrappingWidth, int offsetLimit,\n+                         boolean requireNextWord)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public void setPosition (int newPosition)\n+  {\n+    ci.setIndex (newPosition);\n+  }\n+}"}, {"sha": "580de8f92d0d3960095771f2299e933f8a3af57b", "filename": "libjava/java/awt/font/LineMetrics.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FLineMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FLineMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FLineMetrics.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,67 @@\n+/* LineMetrics.java -- Information about about a line display characteristics\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public abstract class LineMetrics\n+{\n+  public abstract float getAscent();\n+  \n+  public abstract int getBaselineIndex();\n+  \n+  public abstract float[] getBaselineOffsets();\n+  \n+  public abstract float getDescent();\n+  \n+  public abstract float getHeight();\n+  \n+  public abstract float getLeading();\n+  \n+  public abstract int getNumChars();\n+  \n+  public abstract float getStrikethroughOffset();\n+  \n+  public abstract float getStrikethroughThickness();\n+  \n+  public abstract float getUnderlineOffset();\n+  \n+  public abstract float getUnderlineThickness();\n+}"}, {"sha": "4fe69160a328b2e0634d40e8c5e15228f30a8073", "filename": "libjava/java/awt/font/MultipleMaster.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FMultipleMaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FMultipleMaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FMultipleMaster.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,61 @@\n+/* MultipleMaster.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.Font;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public interface MultipleMaster\n+{\n+  public Font deriveMMFont (float[] axes);\n+  \n+  public Font deriveMMFont (float[] glyphWidths, float avgStemWidth,\n+                            float typicalCapHeight, float typicalXHeight,\n+                            float italicAngle);\n+  \n+  public float[] getDesignAxisDefaults ();\n+  \n+  public String[] getDesignAxisNames ();\n+  \n+  public float[] getDesignAxisRanges ();\n+  \n+  public int getNumDesignAxes ();\n+}"}, {"sha": "de934f26729fa4053d1077e4491d1d4c606fbb99", "filename": "libjava/java/awt/font/NumericShaper.java", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FNumericShaper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FNumericShaper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FNumericShaper.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,137 @@\n+/* NumericShaper.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * @author Michael Koch\n+ * @since 1.4\n+ */\n+public final class NumericShaper implements Serializable\n+{\n+  private static final long serialVersionUID = -8022764705923730308L;\n+  \n+  public static final int ALL_RANGES  = 524287;\n+  public static final int ARABIC  = 2;\n+  public static final int BENGALI  = 16;\n+  public static final int DEVANAGARI  = 8;\n+  public static final int EASTERN_ARABIC  = 4;\n+  public static final int ETHIOPIC  = 65536;\n+  public static final int EUROPEAN  = 1;\n+  public static final int GUJARATI  = 64;\n+  public static final int GURMUKHI  = 32;\n+  public static final int KANNADA  = 1024;\n+  public static final int KHMER  = 131072;\n+  public static final int LAO  = 8192;\n+  public static final int MALAYALAM  = 2048;\n+  public static final int MONGOLIAN  = 262144;\n+  public static final int MYANMAR  = 32768;\n+  public static final int ORIYA  = 128;\n+  public static final int TAMIL  = 256;\n+  public static final int TELUGU  = 512;\n+  public static final int THAI  = 4096;\n+  public static final int TIBETAN  = 16384;\n+\n+  private int ranges;\n+  private int context;\n+  \n+  private NumericShaper (int ranges, int context)\n+  {\n+    this.ranges = ranges;\n+    this.context = context;\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof NumericShaper))\n+      return false;\n+\n+    NumericShaper tmp = (NumericShaper) obj;\n+    \n+    return (ranges == tmp.ranges\n+            && context == tmp.context);\n+  }\n+\n+  public static NumericShaper getContextualShaper (int ranges)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public static NumericShaper getContextualShaper (int ranges,\n+                                                   int defaultContext)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int getRanges ()\n+  {\n+    return ranges;\n+  }\n+\n+  public static NumericShaper getShaper (int singleRange)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int hashCode ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public boolean isContextual ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public void shape (char[] text, int start, int count)\n+  {\n+    shape (text, start, count, context);\n+  }\n+\n+  public void shape (char[] text, int start, int count, int context)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public String toString ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+}"}, {"sha": "df5ed52cc38b6395261870884bf31148dcbc7379", "filename": "libjava/java/awt/font/OpenType.java", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FOpenType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FOpenType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FOpenType.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,111 @@\n+/* OpenType.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public interface OpenType\n+{\n+  int TAG_ACNT = 1633906292;\n+  int TAG_AVAR = 1635148146;\n+  int TAG_BASE = 1111577413;\n+  int TAG_BDAT = 1650745716;\n+  int TAG_BLOC = 1651273571;\n+  int TAG_BSLN = 1651731566;\n+  int TAG_CFF = 1128678944;\n+  int TAG_CMAP = 1668112752;\n+  int TAG_CVAR = 1668702578;\n+  int TAG_CVT = 1668707360;\n+  int TAG_DSIG = 1146308935;\n+  int TAG_EBDT = 1161970772;\n+  int TAG_EBLC = 1161972803;\n+  int TAG_EBSC = 1161974595;\n+  int TAG_FDSC = 1717859171;\n+  int TAG_FEAT = 1717920116;\n+  int TAG_FMTX = 1718449272;\n+  int TAG_FPGM = 1718642541;\n+  int TAG_FVAR = 1719034226;\n+  int TAG_GASP = 1734439792;\n+  int TAG_GDEF = 1195656518;\n+  int TAG_GLYF = 1735162214;\n+  int TAG_GPOS = 1196445523;\n+  int TAG_GSUB = 1196643650;\n+  int TAG_GVAR = 1735811442;\n+  int TAG_HDMX = 1751412088;\n+  int TAG_HEAD = 1751474532;\n+  int TAG_HHEA = 1751672161;\n+  int TAG_HMTX = 1752003704;\n+  int TAG_JSTF = 1246975046;\n+  int TAG_JUST = 1786082164;\n+  int TAG_KERN = 1801810542;\n+  int TAG_LCAR = 1818452338;\n+  int TAG_LOCA = 1819239265;\n+  int TAG_LTSH = 1280594760;\n+  int TAG_MAXP = 1835104368;\n+  int TAG_MMFX = 1296909912;\n+  int TAG_MMSD = 1296913220;\n+  int TAG_MORT = 1836020340;\n+  int TAG_NAME = 1851878757;\n+  int TAG_OPBD = 1836020340;\n+  int TAG_OS2 = 1330851634;\n+  int TAG_PCLT = 1346587732;\n+  int TAG_POST = 1886352244;\n+  int TAG_PREP = 1886545264;\n+  int TAG_PROP = 1886547824;\n+  int TAG_TRAK = 1953653099;\n+  int TAG_TYP1 = 1954115633;\n+  int TAG_VDMX = 1447316824;\n+  int TAG_VHEA = 1986553185;\n+  int TAG_VMTX = 1986884728;\n+  \n+  public byte[] getFontTable (int sfntTag);\n+  \n+  public byte[] getFontTable (int sfntTag, int offset, int count);\n+  \n+  public byte[] getFontTable (String strSfntTag);\n+  \n+  public byte[] getFontTable (String strSfntTag, int offset, int count);\n+  \n+  public int getFontTableSize (int sfntTag);\n+  \n+  public int getFontTableSize (String strSfntTag);\n+  \n+  public int getVersion ();\n+}"}, {"sha": "12ae9cda0f9c9acdbff56055d31a350190cf008a", "filename": "libjava/java/awt/font/ShapeGraphicAttribute.java", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FShapeGraphicAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FShapeGraphicAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FShapeGraphicAttribute.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,105 @@\n+/* ShapeGraphicAttribute.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.Graphics2D;\n+import java.awt.Shape;\n+import java.awt.geom.Rectangle2D;\n+\n+public final class ShapeGraphicAttribute extends GraphicAttribute\n+{\n+  public static final boolean FILL = false;\n+  public static final boolean STROKE = true;\n+\n+  private Shape shape;\n+  private boolean stroke;\n+  \n+  public ShapeGraphicAttribute (Shape shape, int alignment, boolean stroke)\n+  {\n+    super (alignment);\n+    this.shape = shape;\n+    this.stroke = stroke;\n+  }\n+\n+  public void draw (Graphics2D graphics, float x, float y)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof ShapeGraphicAttribute))\n+      return false;\n+\n+    return equals ((ShapeGraphicAttribute) obj);\n+  }\n+\n+  public boolean equals (ShapeGraphicAttribute rhs)\n+  {\n+    return (shape.equals (rhs.shape)\n+            && getAlignment () == rhs.getAlignment ()\n+            && stroke == rhs.stroke);\n+  }\n+\n+  public float getAdvance ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getAscent ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Rectangle2D getBounds ()\n+  {\n+    return shape.getBounds2D ();\n+  }\n+\n+  public float getDescent ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int hashCode ()\n+  {\n+    // FIXME: Check what SUN does here\n+    return shape.hashCode ();\n+  }\n+}"}, {"sha": "ccc8049c62fb8a35f0dab60e403a1183b27f0f01", "filename": "libjava/java/awt/font/TextAttribute.java", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextAttribute.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,121 @@\n+/* TextAttribute.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.text.AttributedCharacterIterator;\n+\n+public final class TextAttribute extends AttributedCharacterIterator.Attribute\n+{\n+  private static final long serialVersionUID = 7744112784117861702L;\n+  \n+  public static final TextAttribute BACKGROUND =\n+    new TextAttribute (\"BACKGROUND\");\n+  public static final TextAttribute BIDI_EMBEDDING =\n+    new TextAttribute (\"BIDI_EMBEDDING\");\n+  public static final TextAttribute CHAR_REPLACEMENT =\n+    new TextAttribute (\"CHAR_REPLACEMENT\");\n+  public static final TextAttribute FAMILY = new TextAttribute (\"FAMILY\");\n+  public static final TextAttribute FONT = new TextAttribute (\"FONT\");\n+  public static final TextAttribute FOREGROUND =\n+    new TextAttribute (\"FOREGROUND\");\n+  public static final TextAttribute INPUT_METHOD_HIGHLIGHT =\n+    new TextAttribute (\"INPUT_METHOD_HIGHLIGHT\");\n+  public static final TextAttribute INPUT_METHOD_UNDERLINE =\n+    new TextAttribute (\"INPUT_METHOD_UNDERLINE\");\n+  public static final TextAttribute JUSTIFICATION =\n+    new TextAttribute (\"JUSTIFICATION\");\n+  public static final Float JUSTIFICATION_FULL = new Float (1.0);\n+  public static final Float JUSTIFICATION_NONE = new Float (0.0);\n+  public static final TextAttribute NUMERIC_SHAPING =\n+    new TextAttribute (\"NUMERIC_SHAPING\");\n+  public static final TextAttribute POSTURE = new TextAttribute (\"POSTURE\");\n+  public static final Float POSTURE_OBLIQUE = new Float (0.2);\n+  public static final Float POSTURE_REGULAR = new Float (0.0);\n+  public static final TextAttribute RUN_DIRECTION =\n+    new TextAttribute (\"RUN_DIRECTION\");\n+  public static final Boolean RUN_DIRECTION_LTR = new Boolean (true);\n+  public static final Boolean RUN_DIRECTION_RTL = new Boolean (false);\n+  public static final TextAttribute SIZE = new TextAttribute (\"SIZE\");\n+  public static final TextAttribute STRIKETHROUGH =\n+    new TextAttribute (\"STRIKETHROUGH\");\n+  public static final Boolean STRIKETHROUGH_ON = new Boolean (true);\n+  public static final TextAttribute SUPERSCRIPT =\n+    new TextAttribute (\"SUPERSCRIPT\");\n+  public static final Integer SUPERSCRIPT_SUB = new Integer (-1);\n+  public static final Integer SUPERSCRIPT_SUPER = new Integer (1);\n+  public static final TextAttribute SWAP_COLORS =\n+    new TextAttribute (\"SWAP_COLORS\");\n+  public static final Boolean SWAP_COLORS_ON = new Boolean (true);\n+  public static final TextAttribute TRANSFORM = new TextAttribute (\"TRANSFORM\");\n+  public static final TextAttribute UNDERLINE = new TextAttribute (\"UNDERLINE\");\n+  public static final Integer UNDERLINE_LOW_DASHED = new Integer (0);\n+  public static final Integer UNDERLINE_LOW_DOTTED = new Integer (0);\n+  public static final Integer UNDERLINE_LOW_GRAY = new Integer (0);\n+  public static final Integer UNDERLINE_LOW_ONE_PIXEL = new Integer (0);\n+  public static final Integer UNDERLINE_LOW_TWO_PIXEL = new Integer (0);\n+  public static final Integer UNDERLINE_ON = new Integer (0);\n+  public static final TextAttribute WEIGHT = new TextAttribute (\"WEIGHT\");\n+  public static final Float WEIGHT_BOLD = new Float (2.0);\n+  public static final Float WEIGHT_DEMIBOLD = new Float (1.75);\n+  public static final Float WEIGHT_DEMILIGHT = new Float (0.875);\n+  public static final Float WEIGHT_EXTRA_LIGHT = new Float (0.5);\n+  public static final Float WEIGHT_EXTRABOLD = new Float (2.5);\n+  public static final Float WEIGHT_HEAVY = new Float (2.25);\n+  public static final Float WEIGHT_LIGHT = new Float (0.75);\n+  public static final Float WEIGHT_MEDIUM = new Float (1.5);\n+  public static final Float WEIGHT_REGULAR = new Float (1.0);\n+  public static final Float WEIGHT_SEMIBOLD = new Float (1.25);\n+  public static final Float WEIGHT_ULTRABOLD = new Float (2.75);\n+  public static final TextAttribute WIDTH = new TextAttribute (\"\");\n+  public static final Float WIDTH_CONDENSED = new Float (0.75);\n+  public static final Float WIDTH_EXTENDED = new Float (1.5);\n+  public static final Float WIDTH_REGULAR = new Float (1.0);\n+  public static final Float WIDTH_SEMI_CONDENSED = new Float (0.875);\n+  public static final Float WIDTH_SEMI_EXTENDED = new Float (1.25);\n+             \n+  protected TextAttribute (String name)\n+  {\n+    super (name);\n+  }\n+  \n+  protected Object readResolve ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+}"}, {"sha": "60c4966737ac90ddb6a5cf71aa073028e20bd8e1", "filename": "libjava/java/awt/font/TextLayout.java", "status": "added", "additions": 321, "deletions": 0, "changes": 321, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextLayout.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,321 @@\n+/* TextLayout.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Shape;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.text.AttributedCharacterIterator;\n+import java.util.Map;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class TextLayout implements Cloneable\n+{\n+  public static final CaretPolicy DEFAULT_CARET_POLICY = new CaretPolicy ();\n+\n+  public static class CaretPolicy\n+  {\n+    public CaretPolicy ()\n+    {\n+      // Do nothing here.\n+    }\n+\n+    public TextHitInfo getStrongCaret (TextHitInfo hit1, TextHitInfo hit2,\n+                                       TextLayout layout)\n+    {\n+      throw new Error (\"not implemented\");\n+    }\n+  }\n+\n+  private FontRenderContext fontRenderContext;\n+  \n+  public TextLayout (AttributedCharacterIterator text, FontRenderContext frc)\n+  {\n+    // FIXME\n+    this.fontRenderContext = frc;\n+  }\n+\n+  public TextLayout (String string, Font font, FontRenderContext frc) \n+  {\n+    // FIXME\n+    this.fontRenderContext = frc;\n+  }\n+\n+  public TextLayout (String string, Map attributes, FontRenderContext frc) \n+  {\n+    // FIXME\n+    this.fontRenderContext = frc;\n+  }\n+\n+  protected Object clone ()\n+  {\n+    try\n+      {\n+        return super.clone ();\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        // This should never occur\n+        throw new InternalError ();\n+      }\n+  }\n+\n+  public void draw (Graphics2D g2, float x, float y) \n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof TextLayout))\n+      return false;\n+\n+    return equals ((TextLayout) obj);\n+  }\n+\n+  public boolean equals (TextLayout tl)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getAdvance ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getAscent ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public byte getBaseline ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float[] getBaselineOffsets ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getBlackBoxBounds (int firstEndpoint, int secondEndpoint)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Rectangle2D getBounds()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float[] getCaretInfo (TextHitInfo hit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float[] getCaretInfo (TextHitInfo hit, Rectangle2D bounds)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getCaretShape (TextHitInfo hit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getCaretShape (TextHitInfo hit, Rectangle2D bounds)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape[] getCaretShapes (int offset)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape[] getCaretShapes (int offset, Rectangle2D bounds)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape[] getCaretShapes (int offset, Rectangle2D bounds,\n+                                 TextLayout.CaretPolicy policy)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int getCharacterCount ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public byte getCharacterLevel (int index)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getDescent ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextLayout getJustifiedLayout (float justificationWidth)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getLeading ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getLogicalHighlightShape (int firstEndpoint, int secondEndpoint)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getLogicalHighlightShape (int firstEndpoint, int secondEndpoint,\n+                                         Rectangle2D bounds)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int[] getLogicalRangesForVisualSelection (TextHitInfo firstEndpoint,\n+                                                   TextHitInfo secondEndpoint)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getNextLeftHit (int offset)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getNextLeftHit (int offset, TextLayout.CaretPolicy policy)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getNextLeftHit (TextHitInfo hit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getNextRightHit (int offset)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getNextRightHit (int offset, TextLayout.CaretPolicy policy)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getNextRightHit (TextHitInfo hit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getOutline (AffineTransform tx)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getVisibleAdvance ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getVisualHighlightShape (TextHitInfo firstEndpoint,\n+                                        TextHitInfo secondEndpoint)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public Shape getVisualHighlightShape (TextHitInfo firstEndpoint,\n+                                        TextHitInfo secondEndpoint,\n+                                        Rectangle2D bounds)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo getVisualOtherHit (TextHitInfo hit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  protected void handleJustify (float justificationWidth)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int hashCode ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo hitTestChar (float x, float y)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextHitInfo hitTestChar (float x, float y, Rectangle2D bounds)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public boolean isLeftToRight ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public boolean isVertical ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public String toString ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+}"}, {"sha": "2aa5a0768001c6aadcfa46d1a21d266259e4a149", "filename": "libjava/java/awt/font/TextMeasurer.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTextMeasurer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTextMeasurer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextMeasurer.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,97 @@\n+/* TextMeasurer.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.text.AttributedCharacterIterator;\n+\n+/**\n+ * @author Michael Koch\n+ * @since 1.3\n+ */\n+public final class TextMeasurer implements Cloneable\n+{\n+  private AttributedCharacterIterator ci;\n+  private FontRenderContext frc;\n+  \n+  public TextMeasurer (AttributedCharacterIterator text, FontRenderContext frc)\n+  {\n+    this.ci = text;\n+    this.frc = frc;\n+  }\n+\n+  protected Object clone ()\n+  {\n+    try\n+      {\n+        return super.clone ();\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        // This may never occur\n+        throw new InternalError ();\n+      }\n+  }\n+\n+  public void deleteChar (AttributedCharacterIterator newParagraph,\n+                          int deletePos)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public float getAdvanceBetween (int start, int limit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public TextLayout getLayout (int start, int limit)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public int getLineBreakIndex (int start, float maxAdvance)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  public void insertChar (AttributedCharacterIterator newParagraph,\n+                          int insertPos)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+}"}, {"sha": "b24170419619eeba0256669959a0da87f74574f7", "filename": "libjava/java/awt/font/TransformAttribute.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTransformAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Ffont%2FTransformAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTransformAttribute.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -0,0 +1,73 @@\n+/* TransformAttribute.java\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.font;\n+\n+import java.awt.geom.AffineTransform;\n+import java.io.Serializable;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class TransformAttribute implements Serializable\n+{\n+  private static final long serialVersionUID = 3356247357827709530L;\n+\n+  private AffineTransform affineTransform;\n+  \n+  public TransformAttribute (AffineTransform transform) \n+  {\n+    if (transform != null)\n+      {\n+        this.affineTransform = new AffineTransform (transform);\n+      }\n+  }\n+\n+  public AffineTransform getTransform ()\n+  {\n+    return affineTransform;\n+  }\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public boolean isIdentity ()\n+  {\n+    return (affineTransform == null ? false : affineTransform.isIdentity ());\n+  }\n+}"}, {"sha": "e4e8587277b7f3ccdb96e9998f6822e8c90ea8d5", "filename": "libjava/java/awt/print/Paper.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fprint%2FPaper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fprint%2FPaper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPaper.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -43,7 +43,7 @@\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n-public class Paper\n+public class Paper implements Cloneable\n {\n \n /*"}, {"sha": "ccaf5dcb782c8e35759ba77e565afd68852450c9", "filename": "libjava/java/awt/print/PrinterJob.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0701e74c80c96c0b6996c970b21f0f383345ff0e/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java?ref=0701e74c80c96c0b6996c970b21f0f383345ff0e", "patch": "@@ -118,8 +118,7 @@\n   *\n   * @param job_name The name of the print job.\n   */\n-public abstract String\n-setJobName(String job_name);\n+public abstract void setJobName (String job_name);\n \n /*************************************************************************/\n \n@@ -195,8 +194,7 @@\n /**\n   * Prints the pages.\n   */\n-public abstract void\n-print();\n+public abstract void print () throws PrinterException;\n \n /**\n   * Displays a dialog box to the user which allows the print job"}]}