{"sha": "7526f35528640700e63d664cdffbece6591131dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyNmYzNTUyODY0MDcwMGU2M2Q2NjRjZGZmYmVjZTY1OTExMzFkZA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-02-16T19:25:06Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-02-16T19:25:06Z"}, "message": "[multiple changes]\n\n2005-02-16  Mark Wielaard  <mark@klomp.org>\n\n        * Makefile.am (gnu_xml_source_files): Removed\n        gnu/xml/dom/DomCDATA.java, gnu/xml/dom/DomEx.java,\n        gnu/xml/dom/DomFragment.java, gnu/xml/dom/DomPI.java and\n        gnu/xml/dom/ls/DomLSEx.java. Replaced by adding\n        gnu/xml/dom/DomCDATASection.java, gnu/xml/dom/DomDOMException.java,\n        gnu/xml/dom/DomDocumentFragment.java,\n        gnu/xml/dom/DomProcessingInstruction.java and\n        gnu/xml/dom/ls/DomLSException.java.\n        * Makefile.in: Regenerated.\n\n2005-02-16  Tom Tromey  <tromey@redhat.com>\n\n        * gnu/xml/aelfred2/SAXDriver.java: Ensure that null is returned when\n        attribute index is out of bounds.\n\n2005-02-16  Chris Burdess  <dog@gnu.org>\n\n        * gnu/xml/aelfred2/SAXDriver.java: Corrected implementation of\n        isDeclared methods. Improved performance of isSpecified methods.\n\n2005-02-16  Chris Burdess  <dog@gnu.org>\n\n        Fixes bug libgcj/19864\n        * gnu/xml/dom/DomAttr.java,\n        gnu/xml/dom/DomCDATA.java,\n        gnu/xml/dom/DomCDATASection.java,\n        gnu/xml/dom/DomCharacterData.java,\n        gnu/xml/dom/DomDOMException.java,\n        gnu/xml/dom/DomDoctype.java,\n        gnu/xml/dom/DomDocument.java,\n        gnu/xml/dom/DomDocumentConfiguration.java,\n        gnu/xml/dom/DomDocumentFragment.java,\n        gnu/xml/dom/DomElement.java,\n        gnu/xml/dom/DomEx.java,\n        gnu/xml/dom/DomFragment.java,\n        gnu/xml/dom/DomImpl.java,\n        gnu/xml/dom/DomIterator.java,\n        gnu/xml/dom/DomNamedNodeMap.java,\n        gnu/xml/dom/DomNode.java,\n        gnu/xml/dom/DomNsNode.java,\n        gnu/xml/dom/DomPI.java,\n        gnu/xml/dom/DomProcessingInstruction.java,\n        gnu/xml/dom/DomText.java,\n        gnu/xml/dom/DomLSEx.java,\n        gnu/xml/dom/DomLSException.java,\n        gnu/xml/dom/DomLSParser.java,\n        gnu/xml/dom/DomLSSerializer.java: Refactoring of exception and DOM\n        implementation class names to conform to Classpath guidelines.  Make\n        DomLSException use JDK 1.4+ exception chaining.\n        * gnu/xml/util/SAXNullTransformerFactory.java,\n        gnu/xml/xpath/Predicate.java: Use constants relative to\n        declaring class or interface.\n\nFrom-SVN: r95114", "tree": {"sha": "9bf592edb5e5d97375046530a41197207b32f569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bf592edb5e5d97375046530a41197207b32f569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7526f35528640700e63d664cdffbece6591131dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7526f35528640700e63d664cdffbece6591131dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7526f35528640700e63d664cdffbece6591131dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7526f35528640700e63d664cdffbece6591131dd/comments", "author": null, "committer": null, "parents": [{"sha": "3bd09563e1a9d3175876c4964e251068a84da002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd09563e1a9d3175876c4964e251068a84da002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd09563e1a9d3175876c4964e251068a84da002"}], "stats": {"total": 702, "additions": 400, "deletions": 302}, "files": [{"sha": "f15fb2720ad0d8f50987d7fdd0d4f915083e5867", "filename": "libjava/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,3 +1,58 @@\n+2005-02-16  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.am (gnu_xml_source_files): Removed\n+\tgnu/xml/dom/DomCDATA.java, gnu/xml/dom/DomEx.java,\n+\tgnu/xml/dom/DomFragment.java, gnu/xml/dom/DomPI.java and\n+\tgnu/xml/dom/ls/DomLSEx.java. Replaced by adding\n+\tgnu/xml/dom/DomCDATASection.java, gnu/xml/dom/DomDOMException.java,\n+\tgnu/xml/dom/DomDocumentFragment.java,\n+\tgnu/xml/dom/DomProcessingInstruction.java and\n+\tgnu/xml/dom/ls/DomLSException.java.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/xml/aelfred2/SAXDriver.java: Ensure that null is returned when\n+\tattribute index is out of bounds.\n+\n+2005-02-16  Chris Burdess  <dog@gnu.org>\n+\n+\t* gnu/xml/aelfred2/SAXDriver.java: Corrected implementation of\n+\tisDeclared methods. Improved performance of isSpecified methods.\n+\n+2005-02-16  Chris Burdess  <dog@gnu.org>\n+\n+\tFixes bug libgcj/19864\n+\t* gnu/xml/dom/DomAttr.java,\n+\tgnu/xml/dom/DomCDATA.java,\n+\tgnu/xml/dom/DomCDATASection.java,\n+\tgnu/xml/dom/DomCharacterData.java,\n+\tgnu/xml/dom/DomDOMException.java,\n+\tgnu/xml/dom/DomDoctype.java,\n+\tgnu/xml/dom/DomDocument.java,\n+\tgnu/xml/dom/DomDocumentConfiguration.java,\n+\tgnu/xml/dom/DomDocumentFragment.java,\n+\tgnu/xml/dom/DomElement.java,\n+\tgnu/xml/dom/DomEx.java,\n+\tgnu/xml/dom/DomFragment.java,\n+\tgnu/xml/dom/DomImpl.java,\n+\tgnu/xml/dom/DomIterator.java,\n+\tgnu/xml/dom/DomNamedNodeMap.java,\n+\tgnu/xml/dom/DomNode.java,\n+\tgnu/xml/dom/DomNsNode.java,\n+\tgnu/xml/dom/DomPI.java,\n+\tgnu/xml/dom/DomProcessingInstruction.java,\n+\tgnu/xml/dom/DomText.java,\n+\tgnu/xml/dom/DomLSEx.java,\n+\tgnu/xml/dom/DomLSException.java,\n+\tgnu/xml/dom/DomLSParser.java,\n+\tgnu/xml/dom/DomLSSerializer.java: Refactoring of exception and DOM\n+\timplementation class names to conform to Classpath guidelines.  Make\n+\tDomLSException use JDK 1.4+ exception chaining.\n+\t* gnu/xml/util/SAXNullTransformerFactory.java,\n+\tgnu/xml/xpath/Predicate.java: Use constants relative to \n+\tdeclaring class or interface.\n+\n 2005-02-16  Andrew Haley  <aph@redhat.com>\n \n "}, {"sha": "dd499f33237b4381c9159d2a1be583becb7f17f8", "filename": "libjava/Makefile.am", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -2498,10 +2498,9 @@ gnu/xml/util/Resolver.java \\\n gnu/xml/util/DoParse.java \\\n gnu/xml/util/XHTMLWriter.java \\\n gnu/xml/util/SAXNullTransformerFactory.java \\\n-gnu/xml/dom/DomCDATA.java \\\n gnu/xml/dom/DomXPathNSResolver.java \\\n-gnu/xml/dom/ls/DomLSEx.java \\\n gnu/xml/dom/ls/FilteredSAXEventSink.java \\\n+gnu/xml/dom/ls/DomLSException.java \\\n gnu/xml/dom/ls/DomLSSerializer.java \\\n gnu/xml/dom/ls/DomLSInput.java \\\n gnu/xml/dom/ls/DomLSOutput.java\t\\\n@@ -2512,14 +2511,14 @@ gnu/xml/dom/ls/WriterOutputStream.java \\\n gnu/xml/dom/DomElement.java \\\n gnu/xml/dom/DomNsNode.java \\\n gnu/xml/dom/DomAttr.java \\\n-gnu/xml/dom/DomPI.java \\\n gnu/xml/dom/DTDAttributeTypeInfo.java \\\n gnu/xml/dom/DomDocumentBuilder.java \\\n gnu/xml/dom/DTDElementTypeInfo.java \\\n-gnu/xml/dom/DomEx.java \\\n gnu/xml/dom/DomDocument.java \\\n gnu/xml/dom/DomXPathExpression.java \\\n gnu/xml/dom/DomDocumentConfiguration.java \\\n+gnu/xml/dom/DomDocumentFragment.java \\\n+gnu/xml/dom/DomProcessingInstruction.java \\\n gnu/xml/dom/Consumer.java \\\n gnu/xml/dom/DomComment.java \\\n gnu/xml/dom/DomCharacterData.java \\\n@@ -2539,9 +2538,10 @@ gnu/xml/dom/DomNodeIterator.java \\\n gnu/xml/dom/DomNotation.java \\\n gnu/xml/dom/JAXPFactory.java \\\n gnu/xml/dom/DomIterator.java \\\n-gnu/xml/dom/DomFragment.java \\\n gnu/xml/dom/DomEvent.java \\\n gnu/xml/dom/DomEntity.java \\\n+gnu/xml/dom/DomCDATASection.java \\\n+gnu/xml/dom/DomDOMException.java \\\n gnu/xml/transform/GenerateIdFunction.java \\\n gnu/xml/transform/FormatNumberFunction.java \\\n gnu/xml/transform/ValueOfNode.java \\"}, {"sha": "bb42f66420d242c03c7cfefbd6bfadc4b0fcc8c5", "filename": "libjava/Makefile.in", "status": "modified", "additions": 48, "deletions": 44, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -2443,23 +2443,24 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tgnu/xml/util/Resolver.java gnu/xml/util/DoParse.java \\\n \tgnu/xml/util/XHTMLWriter.java \\\n \tgnu/xml/util/SAXNullTransformerFactory.java \\\n-\tgnu/xml/dom/DomCDATA.java gnu/xml/dom/DomXPathNSResolver.java \\\n-\tgnu/xml/dom/ls/DomLSEx.java \\\n+\tgnu/xml/dom/DomXPathNSResolver.java \\\n \tgnu/xml/dom/ls/FilteredSAXEventSink.java \\\n+\tgnu/xml/dom/ls/DomLSException.java \\\n \tgnu/xml/dom/ls/DomLSSerializer.java \\\n \tgnu/xml/dom/ls/DomLSInput.java gnu/xml/dom/ls/DomLSOutput.java \\\n \tgnu/xml/dom/ls/SAXEventSink.java \\\n \tgnu/xml/dom/ls/DomLSParser.java \\\n \tgnu/xml/dom/ls/ReaderInputStream.java \\\n \tgnu/xml/dom/ls/WriterOutputStream.java \\\n \tgnu/xml/dom/DomElement.java gnu/xml/dom/DomNsNode.java \\\n-\tgnu/xml/dom/DomAttr.java gnu/xml/dom/DomPI.java \\\n-\tgnu/xml/dom/DTDAttributeTypeInfo.java \\\n+\tgnu/xml/dom/DomAttr.java gnu/xml/dom/DTDAttributeTypeInfo.java \\\n \tgnu/xml/dom/DomDocumentBuilder.java \\\n-\tgnu/xml/dom/DTDElementTypeInfo.java gnu/xml/dom/DomEx.java \\\n+\tgnu/xml/dom/DTDElementTypeInfo.java \\\n \tgnu/xml/dom/DomDocument.java \\\n \tgnu/xml/dom/DomXPathExpression.java \\\n \tgnu/xml/dom/DomDocumentConfiguration.java \\\n+\tgnu/xml/dom/DomDocumentFragment.java \\\n+\tgnu/xml/dom/DomProcessingInstruction.java \\\n \tgnu/xml/dom/Consumer.java gnu/xml/dom/DomComment.java \\\n \tgnu/xml/dom/DomCharacterData.java gnu/xml/dom/DomExtern.java \\\n \tgnu/xml/dom/DomEntityReference.java \\\n@@ -2472,8 +2473,9 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tgnu/xml/dom/DomText.java gnu/xml/dom/DomNSResolverContext.java \\\n \tgnu/xml/dom/DomNodeIterator.java gnu/xml/dom/DomNotation.java \\\n \tgnu/xml/dom/JAXPFactory.java gnu/xml/dom/DomIterator.java \\\n-\tgnu/xml/dom/DomFragment.java gnu/xml/dom/DomEvent.java \\\n-\tgnu/xml/dom/DomEntity.java \\\n+\tgnu/xml/dom/DomEvent.java gnu/xml/dom/DomEntity.java \\\n+\tgnu/xml/dom/DomCDATASection.java \\\n+\tgnu/xml/dom/DomDOMException.java \\\n \tgnu/xml/transform/GenerateIdFunction.java \\\n \tgnu/xml/transform/FormatNumberFunction.java \\\n \tgnu/xml/transform/ValueOfNode.java \\\n@@ -4502,20 +4504,22 @@ am__objects_17 = gnu/xml/xpath/EqualityExpr.lo \\\n \tgnu/xml/util/Resolver.lo gnu/xml/util/DoParse.lo \\\n \tgnu/xml/util/XHTMLWriter.lo \\\n \tgnu/xml/util/SAXNullTransformerFactory.lo \\\n-\tgnu/xml/dom/DomCDATA.lo gnu/xml/dom/DomXPathNSResolver.lo \\\n-\tgnu/xml/dom/ls/DomLSEx.lo \\\n+\tgnu/xml/dom/DomXPathNSResolver.lo \\\n \tgnu/xml/dom/ls/FilteredSAXEventSink.lo \\\n+\tgnu/xml/dom/ls/DomLSException.lo \\\n \tgnu/xml/dom/ls/DomLSSerializer.lo gnu/xml/dom/ls/DomLSInput.lo \\\n \tgnu/xml/dom/ls/DomLSOutput.lo gnu/xml/dom/ls/SAXEventSink.lo \\\n \tgnu/xml/dom/ls/DomLSParser.lo \\\n \tgnu/xml/dom/ls/ReaderInputStream.lo \\\n \tgnu/xml/dom/ls/WriterOutputStream.lo gnu/xml/dom/DomElement.lo \\\n \tgnu/xml/dom/DomNsNode.lo gnu/xml/dom/DomAttr.lo \\\n-\tgnu/xml/dom/DomPI.lo gnu/xml/dom/DTDAttributeTypeInfo.lo \\\n+\tgnu/xml/dom/DTDAttributeTypeInfo.lo \\\n \tgnu/xml/dom/DomDocumentBuilder.lo \\\n-\tgnu/xml/dom/DTDElementTypeInfo.lo gnu/xml/dom/DomEx.lo \\\n-\tgnu/xml/dom/DomDocument.lo gnu/xml/dom/DomXPathExpression.lo \\\n+\tgnu/xml/dom/DTDElementTypeInfo.lo gnu/xml/dom/DomDocument.lo \\\n+\tgnu/xml/dom/DomXPathExpression.lo \\\n \tgnu/xml/dom/DomDocumentConfiguration.lo \\\n+\tgnu/xml/dom/DomDocumentFragment.lo \\\n+\tgnu/xml/dom/DomProcessingInstruction.lo \\\n \tgnu/xml/dom/Consumer.lo gnu/xml/dom/DomComment.lo \\\n \tgnu/xml/dom/DomCharacterData.lo gnu/xml/dom/DomExtern.lo \\\n \tgnu/xml/dom/DomEntityReference.lo \\\n@@ -4528,8 +4532,8 @@ am__objects_17 = gnu/xml/xpath/EqualityExpr.lo \\\n \tgnu/xml/dom/DomText.lo gnu/xml/dom/DomNSResolverContext.lo \\\n \tgnu/xml/dom/DomNodeIterator.lo gnu/xml/dom/DomNotation.lo \\\n \tgnu/xml/dom/JAXPFactory.lo gnu/xml/dom/DomIterator.lo \\\n-\tgnu/xml/dom/DomFragment.lo gnu/xml/dom/DomEvent.lo \\\n-\tgnu/xml/dom/DomEntity.lo \\\n+\tgnu/xml/dom/DomEvent.lo gnu/xml/dom/DomEntity.lo \\\n+\tgnu/xml/dom/DomCDATASection.lo gnu/xml/dom/DomDOMException.lo \\\n \tgnu/xml/transform/GenerateIdFunction.lo \\\n \tgnu/xml/transform/FormatNumberFunction.lo \\\n \tgnu/xml/transform/ValueOfNode.lo \\\n@@ -6740,10 +6744,9 @@ gnu/xml/util/Resolver.java \\\n gnu/xml/util/DoParse.java \\\n gnu/xml/util/XHTMLWriter.java \\\n gnu/xml/util/SAXNullTransformerFactory.java \\\n-gnu/xml/dom/DomCDATA.java \\\n gnu/xml/dom/DomXPathNSResolver.java \\\n-gnu/xml/dom/ls/DomLSEx.java \\\n gnu/xml/dom/ls/FilteredSAXEventSink.java \\\n+gnu/xml/dom/ls/DomLSException.java \\\n gnu/xml/dom/ls/DomLSSerializer.java \\\n gnu/xml/dom/ls/DomLSInput.java \\\n gnu/xml/dom/ls/DomLSOutput.java\t\\\n@@ -6754,14 +6757,14 @@ gnu/xml/dom/ls/WriterOutputStream.java \\\n gnu/xml/dom/DomElement.java \\\n gnu/xml/dom/DomNsNode.java \\\n gnu/xml/dom/DomAttr.java \\\n-gnu/xml/dom/DomPI.java \\\n gnu/xml/dom/DTDAttributeTypeInfo.java \\\n gnu/xml/dom/DomDocumentBuilder.java \\\n gnu/xml/dom/DTDElementTypeInfo.java \\\n-gnu/xml/dom/DomEx.java \\\n gnu/xml/dom/DomDocument.java \\\n gnu/xml/dom/DomXPathExpression.java \\\n gnu/xml/dom/DomDocumentConfiguration.java \\\n+gnu/xml/dom/DomDocumentFragment.java \\\n+gnu/xml/dom/DomProcessingInstruction.java \\\n gnu/xml/dom/Consumer.java \\\n gnu/xml/dom/DomComment.java \\\n gnu/xml/dom/DomCharacterData.java \\\n@@ -6781,9 +6784,10 @@ gnu/xml/dom/DomNodeIterator.java \\\n gnu/xml/dom/DomNotation.java \\\n gnu/xml/dom/JAXPFactory.java \\\n gnu/xml/dom/DomIterator.java \\\n-gnu/xml/dom/DomFragment.java \\\n gnu/xml/dom/DomEvent.java \\\n gnu/xml/dom/DomEntity.java \\\n+gnu/xml/dom/DomCDATASection.java \\\n+gnu/xml/dom/DomDOMException.java \\\n gnu/xml/transform/GenerateIdFunction.java \\\n gnu/xml/transform/FormatNumberFunction.java \\\n gnu/xml/transform/ValueOfNode.java \\\n@@ -15436,8 +15440,6 @@ gnu/xml/dom/$(am__dirstamp):\n gnu/xml/dom/$(DEPDIR)/$(am__dirstamp):\n \t@$(mkdir_p) gnu/xml/dom/$(DEPDIR)\n \t@: > gnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n-gnu/xml/dom/DomCDATA.lo: gnu/xml/dom/$(am__dirstamp) \\\n-\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomXPathNSResolver.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/ls/$(am__dirstamp):\n@@ -15446,11 +15448,11 @@ gnu/xml/dom/ls/$(am__dirstamp):\n gnu/xml/dom/ls/$(DEPDIR)/$(am__dirstamp):\n \t@$(mkdir_p) gnu/xml/dom/ls/$(DEPDIR)\n \t@: > gnu/xml/dom/ls/$(DEPDIR)/$(am__dirstamp)\n-gnu/xml/dom/ls/DomLSEx.lo: gnu/xml/dom/ls/$(am__dirstamp) \\\n-\tgnu/xml/dom/ls/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/ls/FilteredSAXEventSink.lo:  \\\n \tgnu/xml/dom/ls/$(am__dirstamp) \\\n \tgnu/xml/dom/ls/$(DEPDIR)/$(am__dirstamp)\n+gnu/xml/dom/ls/DomLSException.lo: gnu/xml/dom/ls/$(am__dirstamp) \\\n+\tgnu/xml/dom/ls/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/ls/DomLSSerializer.lo: gnu/xml/dom/ls/$(am__dirstamp) \\\n \tgnu/xml/dom/ls/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/ls/DomLSInput.lo: gnu/xml/dom/ls/$(am__dirstamp) \\\n@@ -15471,22 +15473,22 @@ gnu/xml/dom/DomNsNode.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomAttr.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n-gnu/xml/dom/DomPI.lo: gnu/xml/dom/$(am__dirstamp) \\\n-\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DTDAttributeTypeInfo.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomDocumentBuilder.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DTDElementTypeInfo.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n-gnu/xml/dom/DomEx.lo: gnu/xml/dom/$(am__dirstamp) \\\n-\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomDocument.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomXPathExpression.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomDocumentConfiguration.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n+gnu/xml/dom/DomDocumentFragment.lo: gnu/xml/dom/$(am__dirstamp) \\\n+\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n+gnu/xml/dom/DomProcessingInstruction.lo: gnu/xml/dom/$(am__dirstamp) \\\n+\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/Consumer.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomComment.lo: gnu/xml/dom/$(am__dirstamp) \\\n@@ -15525,12 +15527,14 @@ gnu/xml/dom/JAXPFactory.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomIterator.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n-gnu/xml/dom/DomFragment.lo: gnu/xml/dom/$(am__dirstamp) \\\n-\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomEvent.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/dom/DomEntity.lo: gnu/xml/dom/$(am__dirstamp) \\\n \tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n+gnu/xml/dom/DomCDATASection.lo: gnu/xml/dom/$(am__dirstamp) \\\n+\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n+gnu/xml/dom/DomDOMException.lo: gnu/xml/dom/$(am__dirstamp) \\\n+\tgnu/xml/dom/$(DEPDIR)/$(am__dirstamp)\n gnu/xml/transform/$(am__dirstamp):\n \t@$(mkdir_p) gnu/xml/transform\n \t@: > gnu/xml/transform/$(am__dirstamp)\n@@ -16923,12 +16927,14 @@ mostlyclean-compile:\n \t-rm -f gnu/xml/dom/DTDElementTypeInfo.lo\n \t-rm -f gnu/xml/dom/DomAttr.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomAttr.lo\n-\t-rm -f gnu/xml/dom/DomCDATA.$(OBJEXT)\n-\t-rm -f gnu/xml/dom/DomCDATA.lo\n+\t-rm -f gnu/xml/dom/DomCDATASection.$(OBJEXT)\n+\t-rm -f gnu/xml/dom/DomCDATASection.lo\n \t-rm -f gnu/xml/dom/DomCharacterData.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomCharacterData.lo\n \t-rm -f gnu/xml/dom/DomComment.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomComment.lo\n+\t-rm -f gnu/xml/dom/DomDOMException.$(OBJEXT)\n+\t-rm -f gnu/xml/dom/DomDOMException.lo\n \t-rm -f gnu/xml/dom/DomDoctype.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomDoctype.lo\n \t-rm -f gnu/xml/dom/DomDocument.$(OBJEXT)\n@@ -16939,6 +16945,8 @@ mostlyclean-compile:\n \t-rm -f gnu/xml/dom/DomDocumentBuilderFactory.lo\n \t-rm -f gnu/xml/dom/DomDocumentConfiguration.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomDocumentConfiguration.lo\n+\t-rm -f gnu/xml/dom/DomDocumentFragment.$(OBJEXT)\n+\t-rm -f gnu/xml/dom/DomDocumentFragment.lo\n \t-rm -f gnu/xml/dom/DomElement.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomElement.lo\n \t-rm -f gnu/xml/dom/DomEntity.$(OBJEXT)\n@@ -16947,12 +16955,8 @@ mostlyclean-compile:\n \t-rm -f gnu/xml/dom/DomEntityReference.lo\n \t-rm -f gnu/xml/dom/DomEvent.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomEvent.lo\n-\t-rm -f gnu/xml/dom/DomEx.$(OBJEXT)\n-\t-rm -f gnu/xml/dom/DomEx.lo\n \t-rm -f gnu/xml/dom/DomExtern.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomExtern.lo\n-\t-rm -f gnu/xml/dom/DomFragment.$(OBJEXT)\n-\t-rm -f gnu/xml/dom/DomFragment.lo\n \t-rm -f gnu/xml/dom/DomImpl.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomImpl.lo\n \t-rm -f gnu/xml/dom/DomIterator.$(OBJEXT)\n@@ -16969,8 +16973,8 @@ mostlyclean-compile:\n \t-rm -f gnu/xml/dom/DomNotation.lo\n \t-rm -f gnu/xml/dom/DomNsNode.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomNsNode.lo\n-\t-rm -f gnu/xml/dom/DomPI.$(OBJEXT)\n-\t-rm -f gnu/xml/dom/DomPI.lo\n+\t-rm -f gnu/xml/dom/DomProcessingInstruction.$(OBJEXT)\n+\t-rm -f gnu/xml/dom/DomProcessingInstruction.lo\n \t-rm -f gnu/xml/dom/DomText.$(OBJEXT)\n \t-rm -f gnu/xml/dom/DomText.lo\n \t-rm -f gnu/xml/dom/DomXPathExpression.$(OBJEXT)\n@@ -16985,8 +16989,8 @@ mostlyclean-compile:\n \t-rm -f gnu/xml/dom/ImplementationSource.lo\n \t-rm -f gnu/xml/dom/JAXPFactory.$(OBJEXT)\n \t-rm -f gnu/xml/dom/JAXPFactory.lo\n-\t-rm -f gnu/xml/dom/ls/DomLSEx.$(OBJEXT)\n-\t-rm -f gnu/xml/dom/ls/DomLSEx.lo\n+\t-rm -f gnu/xml/dom/ls/DomLSException.$(OBJEXT)\n+\t-rm -f gnu/xml/dom/ls/DomLSException.lo\n \t-rm -f gnu/xml/dom/ls/DomLSInput.$(OBJEXT)\n \t-rm -f gnu/xml/dom/ls/DomLSInput.lo\n \t-rm -f gnu/xml/dom/ls/DomLSOutput.$(OBJEXT)\n@@ -21884,21 +21888,21 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DTDAttributeTypeInfo.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DTDElementTypeInfo.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomAttr.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomCDATA.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomCDATASection.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomCharacterData.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomComment.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDOMException.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDoctype.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDocument.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDocumentBuilder.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDocumentBuilderFactory.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDocumentConfiguration.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomDocumentFragment.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomElement.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomEntity.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomEntityReference.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomEvent.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomEx.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomExtern.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomFragment.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomImpl.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomIterator.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomNSResolverContext.Plo@am__quote@\n@@ -21907,15 +21911,15 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomNodeIterator.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomNotation.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomNsNode.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomPI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomProcessingInstruction.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomText.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomXPathExpression.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomXPathNSResolver.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/DomXPathResult.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/ImplementationList.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/ImplementationSource.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/$(DEPDIR)/JAXPFactory.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/ls/$(DEPDIR)/DomLSEx.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/ls/$(DEPDIR)/DomLSException.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/ls/$(DEPDIR)/DomLSInput.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/ls/$(DEPDIR)/DomLSOutput.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/xml/dom/ls/$(DEPDIR)/DomLSParser.Plo@am__quote@"}, {"sha": "0e7b3c719a60c825ffc5b1f9b0e701fa6e200754", "filename": "libjava/gnu/xml/aelfred2/SAXDriver.java", "status": "modified", "additions": 88, "deletions": 65, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Faelfred2%2FSAXDriver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Faelfred2%2FSAXDriver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Faelfred2%2FSAXDriver.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -150,10 +150,7 @@\n     private Stack\t\t\tentityStack;\n \n     // one vector (of object/struct): faster, smaller\n-    private List\t\t\tattributesList = Collections.synchronizedList(new ArrayList());\n-  \n-    private boolean\t\t\tattributeSpecified [] = new boolean[10];\n-    private boolean\t\t\tattributeDeclared [] = new boolean[10];\n+    private List\t\t\tattributesList;\n \n     private boolean\t\t\tnamespaces = true;\n     private boolean\t\t\txmlNames = false;\n@@ -183,8 +180,6 @@ private void reset ()\n       elementName = null;\n       entityStack = new Stack ();\n       attributesList = Collections.synchronizedList(new ArrayList());\n-      attributeSpecified = new boolean[10];\n-      attributeDeclared = new boolean[10];\n       attributeCount = 0;\n       attributes = false;\n       nsTemp = new String[3];\n@@ -849,17 +844,10 @@ else if ((index = qname.indexOf (':')) == 5\n   }\n \t// remember this attribute ...\n \n-\tif (attributeCount == attributeSpecified.length) { \t// grow array?\n-\t    boolean temp [] = new boolean [attributeSpecified.length + 5];\n-\t    System.arraycopy (attributeSpecified, 0, temp, 0, attributeCount);\n-\t    attributeSpecified = temp;\n-\t}\n-\tattributeSpecified [attributeCount] = isSpecified;\n-\n \tattributeCount++;\n \t\n \t// attribute type comes from querying parser's DTD records\n-\tattributesList.add(new Attribute(qname, value));\n+\tattributesList.add(new Attribute(qname, value, isSpecified));\n \n     }\n \n@@ -1043,23 +1031,31 @@ void warn (String message)\n      */\n     public int getLength ()\n     {\n-\treturn attributesList.size ();\n+\treturn attributesList.size();\n     }\n \n     /**\n      * <b>SAX2 Attributes</b> method (don't invoke on parser);\n      */\n     public String getURI (int index)\n     {\n-\treturn ((Attribute) attributesList.get (index)).nameSpace;\n+        if (index < 0 || index >= attributesList.size())\n+          {\n+            return null;\n+          }\n+\treturn ((Attribute) attributesList.get(index)).nameSpace;\n     }\n \n     /**\n      * <b>SAX2 Attributes</b> method (don't invoke on parser);\n      */\n     public String getLocalName (int index)\n     {\n-        Attribute attr = (Attribute) attributesList.get (index);\n+        if (index < 0 || index >= attributesList.size())\n+          {\n+            return null;\n+          }\n+        Attribute attr = (Attribute) attributesList.get(index);\n         // FIXME attr.localName is sometimes null, why?\n         if (namespaces && attr.localName == null)\n           {\n@@ -1068,48 +1064,65 @@ public String getLocalName (int index)\n             attr.localName = (ci == -1) ? attr.name :\n               attr.name.substring(ci + 1);\n           }\n-        return attr.localName;\n+        return (attr.localName == null) ? \"\" : attr.localName;\n     }\n \n     /**\n      * <b>SAX2 Attributes</b> method (don't invoke on parser);\n      */\n-    public String getQName (int i)\n+    public String getQName (int index)\n     {\n-    \treturn ((Attribute) attributesList.get (i)).name;\n+        if (index < 0 || index >= attributesList.size())\n+          {\n+            return null;\n+          }\n+        Attribute attr = (Attribute) attributesList.get(index);\n+    \treturn (attr.name == null) ? \"\" : attr.name;\n     }\n \n     /**\n      * <b>SAX1 AttributeList</b> method (don't invoke on parser);\n      */\n-    public String getName (int i)\n+    public String getName (int index)\n     {\n-    \treturn ((Attribute) attributesList.get (i)).name;\n+    \treturn getQName(index);\n     }\n \n     /**\n      * <b>SAX1 AttributeList, SAX2 Attributes</b> method\n      * (don't invoke on parser);\n      */\n-    public String getType (int i)\n+    public String getType (int index)\n     {\n-\tString\ttype = parser.getAttributeType (elementName, getQName (i));\n+        if (index < 0 || index >= attributesList.size())\n+          {\n+            return null;\n+          }\n+\tString\ttype = parser.getAttributeType(elementName, getQName(index));\n \tif (type == null)\n+          {\n \t    return \"CDATA\";\n+          }\n \t// ... use DeclHandler.attributeDecl to see enumerations\n-      if (type == \"ENUMERATION\")\n-        return \"NMTOKEN\";\n-\treturn type;\n+        if (type == \"ENUMERATION\")\n+          {\n+            return \"NMTOKEN\";\n+          }\n+        return type;\n     }\n \n \n     /**\n      * <b>SAX1 AttributeList, SAX2 Attributes</b> method\n      * (don't invoke on parser);\n      */\n-    public String getValue (int i)\n+    public String getValue (int index)\n     {\n-    \treturn ((Attribute) attributesList.get (i)).value;\n+        if (index < 0 || index >= attributesList.size())\n+          {\n+            return null;\n+          }\n+    \treturn ((Attribute) attributesList.get(index)).value;\n     }\n \n \n@@ -1118,14 +1131,19 @@ public String getValue (int i)\n      */\n     public int getIndex (String uri, String local)\n     {\n-\tint length = getLength ();\n+\tint length = getLength();\n \n-\tfor (int i = 0; i < length; i++) {\n-\t    if (!getURI (i).equals (uri))\n+\tfor (int i = 0; i < length; i++)\n+          {\n+            if (!getURI(i).equals(uri))\n+              {\n \t\tcontinue;\n-\t    if (getLocalName (i).equals (local))\n+              }\n+\t    if (getLocalName(i).equals(local))\n+              {\n \t\treturn i;\n-\t}\n+              }\n+          }\n \treturn -1;\n     }\n \n@@ -1135,12 +1153,15 @@ public int getIndex (String uri, String local)\n      */\n     public int getIndex (String xmlName)\n     {\n-\tint length = getLength ();\n+\tint length = getLength();\n \n-\tfor (int i = 0; i < length; i++) {\n-\t    if (getQName (i).equals (xmlName))\n+\tfor (int i = 0; i < length; i++)\n+          {\n+            if (getQName(i).equals(xmlName))\n+              {\n \t\treturn i;\n-\t}\n+              }\n+          }\n \treturn -1;\n     }\n \n@@ -1150,11 +1171,13 @@ public int getIndex (String xmlName)\n      */\n     public String getType (String uri, String local)\n     {\n-\tint index = getIndex (uri, local);\n+\tint index = getIndex(uri, local);\n \n \tif (index < 0)\n+          {\n \t    return null;\n-\treturn getType (index);\n+          }\n+\treturn getType(index);\n     }\n \n \n@@ -1164,11 +1187,13 @@ public String getType (String uri, String local)\n      */\n     public String getType (String xmlName)\n     {\n-\tint index = getIndex (xmlName);\n+\tint index = getIndex(xmlName);\n \n \tif (index < 0)\n+          {\n \t    return null;\n-\treturn getType (index);\n+          }\n+\treturn getType(index);\n     }\n \n \n@@ -1177,11 +1202,13 @@ public String getType (String xmlName)\n      */\n     public String getValue (String uri, String local)\n     {\n-\tint index = getIndex (uri, local);\n+\tint index = getIndex(uri, local);\n \n \tif (index < 0)\n+          {\n \t    return null;\n-\treturn getValue (index);\n+          }\n+\treturn getValue(index);\n     }\n \n \n@@ -1191,11 +1218,13 @@ public String getValue (String uri, String local)\n      */\n     public String getValue (String xmlName)\n     {\n-\tint index = getIndex (xmlName);\n+\tint index = getIndex(xmlName);\n \n \tif (index < 0)\n+          {\n \t    return null;\n-\treturn getValue (index);\n+          }\n+\treturn getValue(index);\n     }\n \n \n@@ -1212,31 +1241,31 @@ public boolean isDeclared (int index)\n     {\n \tif (index < 0 || index >= attributeCount) \n \t    throw new ArrayIndexOutOfBoundsException ();\n-\treturn attributeDeclared [index];\n+        String type = parser.getAttributeType(elementName, getQName(index));\n+        return (type != null);\n     }\n \n     /** @return false unless the attribute was declared in the DTD.\n      * @throws java.lang.IllegalArgumentException\n      *   When the supplied names do not identify an attribute.\n      */\n-    public boolean isDeclared (java.lang.String qName)\n+    public boolean isDeclared (String qName)\n     {\n \tint index = getIndex (qName);\n \tif (index < 0)\n \t    throw new IllegalArgumentException ();\n-\treturn attributeDeclared [index];\n+        String type = parser.getAttributeType(elementName, qName);\n+        return (type != null);\n     }\n \n     /** @return false unless the attribute was declared in the DTD.\n      * @throws java.lang.IllegalArgumentException\n      *   When the supplied names do not identify an attribute.\n      */\n-    public boolean isDeclared (java.lang.String uri, java.lang.String localName)\n+    public boolean isDeclared (String uri, String localName)\n     {\n \tint index = getIndex (uri, localName);\n-\tif (index < 0)\n-\t    throw new IllegalArgumentException ();\n-\treturn attributeDeclared [index];\n+        return isDeclared(index);\n     }\n \n \n@@ -1245,9 +1274,7 @@ public boolean isDeclared (java.lang.String uri, java.lang.String localName)\n      */\n     public boolean isSpecified (int index)\n     {\n-\tif (index < 0 || index >= attributeCount) \n-\t    throw new ArrayIndexOutOfBoundsException ();\n-\treturn attributeSpecified [index];\n+\treturn ((Attribute) attributesList.get(index)).specified;\n     }\n \n     /**\n@@ -1256,10 +1283,7 @@ public boolean isSpecified (int index)\n     public boolean isSpecified (String uri, String local)\n     {\n \tint index = getIndex (uri, local);\n-\n-\tif (index < 0)\n-\t    throw new IllegalArgumentException ();\n-\treturn attributeSpecified [index];\n+        return isSpecified(index);\n     }\n \n     /**\n@@ -1268,10 +1292,7 @@ public boolean isSpecified (String uri, String local)\n     public boolean isSpecified (String xmlName)\n     {\n \tint index = getIndex (xmlName);\n-\n-\tif (index < 0)\n-\t    throw new IllegalArgumentException ();\n-\treturn attributeSpecified [index];\n+        return isSpecified(index);\n     }\n \n \n@@ -1374,12 +1395,14 @@ public void endDocument () throws SAXException\n     String value;\n     String nameSpace;\n     String localName;\n+    boolean specified;\n \n-    Attribute(String name, String value)\n+    Attribute(String name, String value, boolean specified)\n     {\n         this.name = name;\n         this.value = value;\n         this.nameSpace = \"\";\n+        this.specified = specified;\n     }\n }\n "}, {"sha": "555902e3ea3597d5e84c0978efcaa324d82553c2", "filename": "libjava/gnu/xml/dom/DomAttr.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomAttr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomAttr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomAttr.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -38,6 +38,7 @@\n package gnu.xml.dom;\n \n import org.w3c.dom.Attr;\n+import org.w3c.dom.DOMException;\n import org.w3c.dom.Element;\n import org.w3c.dom.Node;\n import org.w3c.dom.TypeInfo;\n@@ -194,7 +195,7 @@ public void setNodeValue(String value)\n   {\n     if (readonly)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     if (value == null)\n       {\n@@ -284,11 +285,11 @@ public final void setOwnerElement(Element e)\n   {\n     if (parent != null)\n       {\n-        throw new DomEx (DomEx.HIERARCHY_REQUEST_ERR);\n+        throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR);\n       }\n     if (!(e instanceof DomElement))\n       {\n-        throw new DomEx(DomEx.WRONG_DOCUMENT_ERR);\n+        throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR);\n       }\n     parent = (DomElement) e;\n     depth = parent.depth + 1;"}, {"sha": "4b4dcb571e5daf22349fb3f91e95c496aa3676cc", "filename": "libjava/gnu/xml/dom/DomCDATASection.java", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomCDATASection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomCDATASection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomCDATASection.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,4 +1,4 @@\n-/* DomCDATA.java -- \n+/* DomCDATASection.java -- \n    Copyright (C) 1999,2000,2001,2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -54,7 +54,7 @@\n  * @author David Brownell\n  * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n  */\n-public class DomCDATA\n+public class DomCDATASection\n   extends DomText\n   implements CDATASection\n {\n@@ -68,12 +68,12 @@\n    * similarly used in a \"Sub-DOM\" style layer.\n    *\n    */\n-  protected DomCDATA(DomDocument owner, String value)\n+  protected DomCDATASection(DomDocument owner, String value)\n   {\n     super(CDATA_SECTION_NODE, owner, value);\n   }\n \n-  protected DomCDATA(DomDocument owner, char buf [], int off, int len)\n+  protected DomCDATASection(DomDocument owner, char buf [], int off, int len)\n   {\n     super(CDATA_SECTION_NODE, owner, buf, off, len);\n   }\n@@ -84,7 +84,7 @@ protected DomCDATA(DomDocument owner, char buf [], int off, int len)\n    */\n   final public String getNodeName()\n   {\n-\treturn \"#cdata-section\";\n+    return \"#cdata-section\";\n   }\n   \n }", "previous_filename": "libjava/gnu/xml/dom/DomCDATA.java"}, {"sha": "fc4313e5fe53160c1d755b96d2b2daaeef942883", "filename": "libjava/gnu/xml/dom/DomCharacterData.java", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomCharacterData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomCharacterData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomCharacterData.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -38,6 +38,7 @@\n package gnu.xml.dom;\n \n import org.w3c.dom.CharacterData;\n+import org.w3c.dom.DOMException;\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n import org.w3c.dom.events.MutationEvent;\n@@ -82,7 +83,7 @@ public void appendData(String arg)\n   {\n     if (isReadonly())\n       {\n-      throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     String value = text + arg;\n     mutating(value);\n@@ -98,12 +99,12 @@ public void deleteData(int offset, int count)\n   {\n     if (isReadonly())\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     char[] raw = text.toCharArray();\n     if (offset < 0 || count < 0 || offset > raw.length)\n       {\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n     if ((offset + count) > raw.length)\n       {\n@@ -125,7 +126,7 @@ public void deleteData(int offset, int count)\n       }\n     catch (IndexOutOfBoundsException x)\n       {\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n   }\n     \n@@ -164,7 +165,7 @@ public void insertData(int offset, String arg)\n   {\n     if (isReadonly())\n       {\n-      throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+      throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     char[] raw = text.toCharArray();\n     char[] tmp = arg.toCharArray ();\n@@ -182,7 +183,7 @@ public void insertData(int offset, String arg)\n       }\n     catch (IndexOutOfBoundsException x)\n       {\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n   }\n     \n@@ -195,14 +196,14 @@ public void replaceData(int offset, int count, String arg)\n   {\n     if (readonly)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     char[] raw = text.toCharArray();\n     \n     // deleteData\n     if (offset < 0 || count < 0 || offset > raw.length)\n       {\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n     if ((offset + count) > raw.length)\n       {\n@@ -228,7 +229,7 @@ public void replaceData(int offset, int count, String arg)\n       }\n     catch (IndexOutOfBoundsException x)\n       {\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n   }\n     \n@@ -241,7 +242,7 @@ public void setNodeValue(String value)\n   {\n     if (isReadonly())\n       {\n-        throw new DomEx (DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     if (value == null)\n       {\n@@ -276,7 +277,7 @@ public String substringData(int offset, int count)\n           {\n             return text.substring(offset);\n           }\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n   }\n "}, {"sha": "a56814cffedba6c9afc052ffdfe44c54afba4746", "filename": "libjava/gnu/xml/dom/DomDOMException.java", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDOMException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDOMException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomDOMException.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,4 +1,4 @@\n-/* DomEx.java -- \n+/* DomDOMException.java -- \n    Copyright (C) 1999,2000,2001,2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -50,7 +50,7 @@\n  *\n  * @author David Brownell \n  */\n-public class DomEx\n+public class DomDOMException\n   extends DOMException\n {\n \n@@ -67,7 +67,7 @@\n    * Constructs an exception, with the diagnostic message\n    * corresponding to the specified code.\n    */\n-  public DomEx(short code)\n+  public DomDOMException(short code)\n   {\n     super(code, diagnostic(code));\n   }\n@@ -77,7 +77,7 @@ public DomEx(short code)\n    * corresponding to the specified code and additional\n    * information as provided.\n    */\n-  public DomEx(short code, String data, Node node, int value)\n+  public DomDOMException(short code, String data, Node node, int value)\n   {\n     super(code, diagnostic(code));\n     this.data = data;", "previous_filename": "libjava/gnu/xml/dom/DomEx.java"}, {"sha": "8c760a5317f87a2bf62346165024804928be63cc", "filename": "libjava/gnu/xml/dom/DomDoctype.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDoctype.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDoctype.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomDoctype.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -39,6 +39,7 @@\n \n import java.util.HashMap;\n import org.w3c.dom.DocumentType;\n+import org.w3c.dom.DOMException;\n import org.w3c.dom.DOMImplementation;\n import org.w3c.dom.Entity;\n import org.w3c.dom.NamedNodeMap;\n@@ -194,7 +195,7 @@ public Entity declareEntity(String name,\n       }\n     if (isReadonly())\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     getEntities();\n     \n@@ -250,7 +251,7 @@ public Notation declareNotation(String name,\n     \n     if (isReadonly())\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     getNotations();\n     "}, {"sha": "90885716836c90ed4154b08625aebe3642958f4c", "filename": "libjava/gnu/xml/dom/DomDocument.java", "status": "modified", "additions": 61, "deletions": 49, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocument.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -292,16 +292,16 @@ private void checkNewChild(Node newChild)\n     if (newChild.getNodeType() == ELEMENT_NODE\n         && getDocumentElement() != null)\n       {\n-        throw new DomEx (DomEx.HIERARCHY_REQUEST_ERR,\n-                         \"document element already present: \" +\n-                         getDocumentElement(), newChild, 0);\n+        throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR,\n+                                  \"document element already present: \" +\n+                                  getDocumentElement(), newChild, 0);\n       }\n     if (newChild.getNodeType() == DOCUMENT_TYPE_NODE\n         && getDoctype() != null)\n       {\n-        throw new DomEx (DomEx.HIERARCHY_REQUEST_ERR,\n-                         \"document type already present: \" +\n-                         getDoctype(), newChild, 0);\n+        throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR,\n+                                  \"document type already present: \" +\n+                                  getDoctype(), newChild, 0);\n       }\n   }\n \n@@ -376,12 +376,12 @@ static void checkName(String name, boolean xml11)\n   {\n     if (name == null)\n       {\n-        throw new DomEx (DomEx.NAMESPACE_ERR, name, null, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR, name, null, 0);\n       }\n     int len = name.length();\n     if (len == 0)\n       {\n-        throw new DomEx (DomEx.NAMESPACE_ERR, name, null, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR, name, null, 0);\n       }\n \n     // dog: rewritten to use the rules for XML 1.0 and 1.1\n@@ -407,7 +407,8 @@ static void checkName(String name, boolean xml11)\n             (c < 0xfdf0 || c > 0xfffd) &&\n             (c < 0x10000 || c > 0xeffff))\n           {\n-            throw new DomEx(DomEx.INVALID_CHARACTER_ERR, name, null, c);\n+            throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR,\n+                                      name, null, c);\n           }\n       }\n     else\n@@ -425,14 +426,16 @@ static void checkName(String name, boolean xml11)\n                 (c >= 0x20dd && c <= 0x20e0))\n               {\n                 // Compatibility area and Unicode 2.0 exclusions\n-                throw new DomEx(DomEx.INVALID_CHARACTER_ERR, name, null, c);\n+                throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR,\n+                                          name, null, c);\n               }\n             break;\n           default:\n             if (c != ':' && c != '_' && (c < 0x02bb || c > 0x02c1) &&\n                 c != 0x0559 && c != 0x06e5 && c != 0x06e6)\n               {\n-                throw new DomEx(DomEx.INVALID_CHARACTER_ERR, name, null, c);\n+                throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR,\n+                                          name, null, c);\n               }\n           }\n       }\n@@ -464,7 +467,8 @@ static void checkName(String name, boolean xml11)\n                 (c < 0x0300 || c > 0x036f) &&\n                 (c < 0x203f || c > 0x2040))\n               {\n-                throw new DomEx(DomEx.INVALID_CHARACTER_ERR, name, null, c);\n+                throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR, name,\n+                                          null, c);\n               }\n           }\n         else\n@@ -487,15 +491,17 @@ static void checkName(String name, boolean xml11)\n                     (c >= 0x20dd && c <= 0x20e0))\n                   {\n                     // Compatibility area and Unicode 2.0 exclusions\n-                    throw new DomEx(DomEx.INVALID_CHARACTER_ERR, name, null, c);\n+                    throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR,\n+                                              name, null, c);\n                   }\n                 break;\n               default:\n                 if (c != '-' && c != '.' && c != ':' && c != '_' &&\n                     c != 0x0387 && (c < 0x02bb || c > 0x02c1) &&\n                     c != 0x0559 && c != 0x06e5 && c != 0x06e6 && c != 0x00b7)\n                   {\n-                    throw new DomEx(DomEx.INVALID_CHARACTER_ERR, name, null, c);\n+                    throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR,\n+                                              name, null, c);\n                   }\n               }\n           }\n@@ -517,7 +523,8 @@ static void checkNCName(String name, boolean xml11)\n         if (index == 0 || index == (len - 1) ||\n             name.lastIndexOf(':') != index)\n           {\n-            throw new DomEx(DomEx.NAMESPACE_ERR, name, null, 0);\n+            throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                      name, null, 0);\n           }\n       }\n   }\n@@ -552,8 +559,8 @@ static void checkChar(char[] buf, int off, int len, boolean xml11)\n                 continue;\n               }\n           }\n-        throw new DomEx(DomEx.INVALID_CHARACTER_ERR,\n-                        new String(buf, off, len), null, c);\n+        throw new DomDOMException(DOMException.INVALID_CHARACTER_ERR,\n+                                  new String(buf, off, len), null, c);\n       }\n   }\n \n@@ -602,22 +609,23 @@ public Element createElementNS(String namespaceURI, String name)\n         if (namespaceURI != null\n             && !XMLConstants.XML_NS_URI.equals(namespaceURI))\n           {\n-            throw new DomEx(DomEx.NAMESPACE_ERR,\n-                            \"xml namespace is always \" +\n-                            XMLConstants.XML_NS_URI, this, 0);\n+            throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                      \"xml namespace is always \" +\n+                                      XMLConstants.XML_NS_URI, this, 0);\n           }\n         namespaceURI = XMLConstants.XML_NS_URI;\n       }\n     else if (XMLConstants.XMLNS_ATTRIBUTE.equals(name) ||\n              name.startsWith(\"xmlns:\"))\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n-                        \"xmlns is reserved\", this, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                  \"xmlns is reserved\", this, 0);\n       }\n     else if (namespaceURI == null && name.indexOf(':') != -1)\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n-                        \"prefixed name '\" + name + \"' needs a URI\", this, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                  \"prefixed name '\" + name +\n+                                  \"' needs a URI\", this, 0);\n       }\n     \n     Element  element = new DomElement(this, namespaceURI, name);\n@@ -660,7 +668,7 @@ private void defaultAttributes(Element element, String name)\n    */\n   public DocumentFragment createDocumentFragment()\n   {\n-    return new DomFragment(this);\n+    return new DomDocumentFragment(this);\n   }\n \n   /**\n@@ -711,7 +719,7 @@ public CDATASection createCDATASection(String value)\n       {\n         checkChar(value, \"1.1\".equals(version));\n       }\n-    return new DomCDATA(this, value);\n+    return new DomCDATASection(this, value);\n   }\n \n   /**\n@@ -723,7 +731,7 @@ public CDATASection createCDATASection(char[] buf, int off, int len)\n       {\n         checkChar(buf, off, len, \"1.1\".equals(version));\n       }\n-    return new DomCDATA(this, buf, off, len);\n+    return new DomCDATASection(this, buf, off, len);\n   }\n \n   /**\n@@ -739,12 +747,13 @@ public ProcessingInstruction createProcessingInstruction(String target,\n         checkName(target, xml11);\n         if (\"xml\".equalsIgnoreCase(target))\n           {\n-            throw new DomEx(DomEx.SYNTAX_ERR,\n-                            \"illegal PI target name\", this, 0);\n+            throw new DomDOMException(DOMException.SYNTAX_ERR,\n+                                      \"illegal PI target name\",\n+                                      this, 0);\n           }\n         checkChar(data, xml11);\n       }\n-    return new DomPI(this, target, data);\n+    return new DomProcessingInstruction(this, target, data);\n   }\n \n   /**\n@@ -796,9 +805,10 @@ public Attr createAttributeNS(String namespaceURI, String name)\n           }\n         else if (!XMLConstants.XML_NS_URI.equals(namespaceURI))\n           {\n-            throw new DomEx(DomEx.NAMESPACE_ERR,\n-                            \"xml namespace is always \" +\n-                            XMLConstants.XML_NS_URI, this, 0);\n+            throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                      \"xml namespace is always \" +\n+                                      XMLConstants.XML_NS_URI,\n+                                      this, 0);\n           }\n       }\n     else if (XMLConstants.XMLNS_ATTRIBUTE.equals(name) ||\n@@ -810,14 +820,15 @@ else if (XMLConstants.XMLNS_ATTRIBUTE.equals(name) ||\n           }\n         else if (!XMLConstants.XMLNS_ATTRIBUTE_NS_URI.equals(namespaceURI))\n           {\n-            throw new DomEx(DomEx.NAMESPACE_ERR,\n-                            \"xmlns namespace must be \" +\n-                            XMLConstants.XMLNS_ATTRIBUTE_NS_URI, this, 0);\n+            throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                      \"xmlns namespace must be \" +\n+                                      XMLConstants.XMLNS_ATTRIBUTE_NS_URI,\n+                                      this, 0);\n           }\n       }\n     else if (namespaceURI == null && name.indexOf(':') != -1)\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n                         \"prefixed name needs a URI: \" + name, this, 0);\n       }\n     return new DomAttr(this, namespaceURI, name);\n@@ -913,7 +924,7 @@ public Node importNode(Node src, boolean deep)\n         dst = createEntityReference(src.getNodeName());\n         break;\n       case DOCUMENT_FRAGMENT_NODE:\n-        dst = new DomFragment(this);\n+        dst = new DomDocumentFragment(this);\n         if (deep)\n           {\n             for (Node ctx = src.getFirstChild(); ctx != null;\n@@ -988,7 +999,7 @@ public Node importNode(Node src, boolean deep)\n         // FALLTHROUGH\n         // can't import unrecognized or nonstandard nodes\n       default:\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR, null, src, 0);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR, null, src, 0);\n       }\n     \n     // FIXME cleanup a bit -- for deep copies, copy those\n@@ -1083,7 +1094,7 @@ public void setXmlVersion(String xmlVersion)\n       }\n     else\n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       }\n   }\n \n@@ -1149,10 +1160,10 @@ public Node adoptNode(Node source)\n       {\n       case DOCUMENT_NODE:\n       case DOCUMENT_TYPE_NODE:\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       case ENTITY_NODE:\n       case NOTATION_NODE:\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     if (source instanceof DomNode)\n       {\n@@ -1284,11 +1295,12 @@ public Node renameNode(Node n, String namespaceURI, String qualifiedName)\n         DomNsNode src = (DomNsNode) n;\n         if (src == null)\n           {\n-            throw new DomEx(DomEx.NOT_FOUND_ERR);\n+            throw new DomDOMException(DOMException.NOT_FOUND_ERR);\n           }\n         if (src.owner != this)\n           {\n-            throw new DomEx(DomEx.WRONG_DOCUMENT_ERR, null, src, 0);\n+            throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR,\n+                                      null, src, 0);\n           }\n         boolean xml11 = \"1.1\".equals(version);\n         checkName(qualifiedName, xml11);\n@@ -1305,7 +1317,7 @@ public Node renameNode(Node n, String namespaceURI, String qualifiedName)\n             if (XMLConstants.XML_NS_PREFIX.equals(prefix) &&\n                 !XMLConstants.XML_NS_URI.equals(namespaceURI))\n               {\n-                throw new DomEx(DomEx.NAMESPACE_ERR,\n+                throw new DomDOMException(DOMException.NAMESPACE_ERR,\n                                 \"xml namespace must be \" +\n                                 XMLConstants.XML_NS_URI, src, 0);\n               }\n@@ -1314,14 +1326,14 @@ else if (src.nodeType == ATTRIBUTE_NODE &&\n                       XMLConstants.XMLNS_ATTRIBUTE.equals(qualifiedName)) &&\n                      !XMLConstants.XMLNS_ATTRIBUTE_NS_URI.equals(namespaceURI))\n               {\n-                throw new DomEx(DomEx.NAMESPACE_ERR,\n+                throw new DomDOMException(DOMException.NAMESPACE_ERR,\n                                 \"xmlns namespace must be \" +\n                                 XMLConstants.XMLNS_ATTRIBUTE_NS_URI, src, 0);\n               }\n             if (XMLConstants.XML_NS_URI.equals(namespaceURI) &&\n                 !XMLConstants.XML_NS_PREFIX.equals(prefix))\n               {\n-                throw new DomEx(DomEx.NAMESPACE_ERR,\n+                throw new DomDOMException(DOMException.NAMESPACE_ERR,\n                                 \"xml namespace must be \" +\n                                 XMLConstants.XML_NS_URI, src, 0);\n               }\n@@ -1330,7 +1342,7 @@ else if (src.nodeType == ATTRIBUTE_NODE &&\n                      !(XMLConstants.XMLNS_ATTRIBUTE.equals(prefix) ||\n                        XMLConstants.XMLNS_ATTRIBUTE.equals(qualifiedName)))\n               {\n-                throw new DomEx(DomEx.NAMESPACE_ERR,\n+                throw new DomDOMException(DOMException.NAMESPACE_ERR,\n                                 \"xmlns namespace must be \" +\n                                 XMLConstants.XMLNS_ATTRIBUTE_NS_URI, src, 0);\n               }\n@@ -1343,7 +1355,7 @@ else if (src.nodeType == ATTRIBUTE_NODE &&\n         // DOMElementNameChanged or DOMAttributeNameChanged\n         return src;\n       }\n-    throw new DomEx(DomEx.NOT_SUPPORTED_ERR, null, n, 0);\n+    throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR, null, n, 0);\n   }\n \n   // -- XPathEvaluator --"}, {"sha": "38d6e6d7bb36f39342df36f4e9bd539468e47b7d", "filename": "libjava/gnu/xml/dom/DomDocumentConfiguration.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocumentConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocumentConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocumentConfiguration.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -99,8 +99,8 @@ else if (\"error-handler\".equals(name))\n           }\n         catch (ClassCastException e)\n           {\n-            throw new DomEx(DomEx.TYPE_MISMATCH_ERR,\n-                            value.getClass().getName(), null, 0);\n+            throw new DomDOMException(DOMException.TYPE_MISMATCH_ERR,\n+                                      value.getClass().getName(), null, 0);\n           }\n       }\n     else if (\"namespace-declarations\".equals(name))\n@@ -140,7 +140,8 @@ else if ((\"namespaces\".equals(name) ||\n       }\n     else\n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR, name, null, 0);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR,\n+                                  name, null, 0);\n       }\n   }\n \n@@ -197,7 +198,7 @@ else if (\"infoset\".equals(name))\n             namespaceDeclarations == true &&\n             comments == true) ? Boolean.TRUE : Boolean.FALSE;\n       }\n-    throw new DomEx(DomEx.NOT_SUPPORTED_ERR, name, null, 0);\n+    throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR, name, null, 0);\n   }\n \n   public boolean canSetParameter(String name, Object value)"}, {"sha": "f54b2a7ebceea49037ded3a45a0f76147f08c35b", "filename": "libjava/gnu/xml/dom/DomDocumentFragment.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocumentFragment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocumentFragment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomDocumentFragment.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,4 +1,4 @@\n-/* DomFragment.java -- \n+/* DomDocumentFragment.java -- \n    Copyright (C) 1999,2000,2001,2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -45,7 +45,7 @@\n  * @author David Brownell \n  * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n  */\n-public class DomFragment\n+public class DomDocumentFragment\n   extends DomNode\n   implements DocumentFragment\n {\n@@ -58,7 +58,7 @@\n    * its createDocumentFragment functionality, or through a subclass which\n    * is similarly used in a \"Sub-DOM\" style layer.\n    */\n-  protected DomFragment(DomDocument owner)\n+  protected DomDocumentFragment(DomDocument owner)\n   {\n     super(DOCUMENT_FRAGMENT_NODE, owner);\n   }", "previous_filename": "libjava/gnu/xml/dom/DomFragment.java"}, {"sha": "535608343f9efba63a7828da3629ed4a475dfa16", "filename": "libjava/gnu/xml/dom/DomElement.java", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomElement.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -42,6 +42,7 @@\n import javax.xml.XMLConstants;\n \n import org.w3c.dom.Attr;\n+import org.w3c.dom.DOMException;\n import org.w3c.dom.Element;\n import org.w3c.dom.NamedNodeMap;\n import org.w3c.dom.Node;\n@@ -262,7 +263,7 @@ public void setAttributeNS(String uri, String aname, String value)\n     if ((\"xmlns\".equals (aname) || aname.startsWith (\"xmlns:\"))\n         && !XMLConstants.XMLNS_ATTRIBUTE_NS_URI.equals (uri))\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n                         \"setting xmlns attribute to illegal value\", this, 0);\n       }\n \n@@ -318,9 +319,9 @@ public void removeAttribute(String name)\n       {\n         attributes.removeNamedItem(name);\n       }\n-    catch (DomEx e)\n+    catch (DomDOMException e)\n       {\n-        if (e.code != DomEx.NOT_FOUND_ERR)\n+        if (e.code != DOMException.NOT_FOUND_ERR)\n           {\n             throw e;\n           }\n@@ -340,7 +341,7 @@ public Attr removeAttributeNode(Attr node)\n   {\n     if (attributes == null)\n       {\n-        throw new DomEx(DomEx.NOT_FOUND_ERR, null, node, 0);\n+        throw new DomDOMException(DOMException.NOT_FOUND_ERR, null, node, 0);\n       }\n     return (Attr) attributes.removeNamedItem(node.getNodeName());\n   }\n@@ -358,7 +359,7 @@ public void removeAttributeNS(String namespace, String localPart)\n   {\n     if (attributes == null)\n       {\n-        throw new DomEx(DomEx.NOT_FOUND_ERR, localPart, null, 0);\n+        throw new DomDOMException(DOMException.NOT_FOUND_ERR, localPart, null, 0);\n       }\n     attributes.removeNamedItemNS (namespace, localPart);\n   }\n@@ -487,11 +488,11 @@ public void setIdAttributeNode(Attr attr, boolean isId)\n   {\n     if (readonly)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     if (attr == null || attr.getOwnerElement() != this)\n       {\n-        throw new DomEx(DomEx.NOT_FOUND_ERR);\n+        throw new DomDOMException(DOMException.NOT_FOUND_ERR);\n       }\n     if (isId)\n       {"}, {"sha": "feb7ea703cc297051c53975cc4e653ae75e2c018", "filename": "libjava/gnu/xml/dom/DomImpl.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomImpl.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -207,7 +207,8 @@ public Document createDocument(String namespaceURI,\n         root = doc.createElementNS(namespaceURI, rootName);\n         if (rootName.startsWith(\"xmlns:\"))\n           {\n-            throw new DomEx(DomEx.NAMESPACE_ERR, \"xmlns is reserved\", null, 0);\n+            throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                      \"xmlns is reserved\", null, 0);\n           }\n       }\n     // Bleech -- L2 seemingly _requires_ omission of xmlns attributes."}, {"sha": "fb05d93084c6a77549d2d58299b34f56de4019f0", "filename": "libjava/gnu/xml/dom/DomIterator.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomIterator.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -39,6 +39,7 @@\n \n import java.util.Vector;\n \n+import org.w3c.dom.DOMException;\n import org.w3c.dom.Node;\n import org.w3c.dom.events.Event;\n import org.w3c.dom.events.EventListener;\n@@ -76,7 +77,7 @@ protected DomIterator(Node root,\n   {\n     if (!root.isSupported(\"MutationEvents\", \"2.0\")) \n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR,\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR,\n                         \"Iterator needs mutation events\", root, 0);\n       }\n \t\n@@ -154,7 +155,7 @@ public Node nextNode()\n   {\n     if (done)\n       {\n-        throw new DomEx(DomEx.INVALID_STATE_ERR);\n+        throw new DomDOMException(DOMException.INVALID_STATE_ERR);\n       }\n     right = true;\n     return walk(true);\n@@ -171,7 +172,7 @@ public Node previousNode()\n   {\n     if (done)\n       {\n-        throw new DomEx(DomEx.INVALID_STATE_ERR);\n+        throw new DomDOMException(DOMException.INVALID_STATE_ERR);\n       }\n     Node previous = reference;\n     right = false;"}, {"sha": "2b1106e64c00d6222c6712e22eff4c7569dad880", "filename": "libjava/gnu/xml/dom/DomNamedNodeMap.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomNamedNodeMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomNamedNodeMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomNamedNodeMap.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -37,6 +37,7 @@\n \n package gnu.xml.dom;\n \n+import org.w3c.dom.DOMException;\n import org.w3c.dom.NamedNodeMap;\n import org.w3c.dom.Node;\n \n@@ -166,24 +167,24 @@ Node setNamedItem(Node arg, boolean ns)\n   {\n     if (readonly)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n \n     DomNode node = (DomNode) arg;\n     if (node.owner != owner.owner)\n       {\n-        throw new DomEx(DomEx.WRONG_DOCUMENT_ERR);\n+        throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR);\n       }\n     if (node.nodeType != type)\n       {\n-        throw new DomEx(DomEx.HIERARCHY_REQUEST_ERR);\n+        throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR);\n       }\n     if (node.nodeType == Node.ATTRIBUTE_NODE)\n       {\n         DomNode element = node.parent;\n         if (element != null && element != owner)\n           {\n-            throw new DomEx(DomEx.INUSE_ATTRIBUTE_ERR);\n+            throw new DomDOMException(DOMException.INUSE_ATTRIBUTE_ERR);\n           }\n         node.parent = owner;\n         node.depth = owner.depth + 1;\n@@ -302,7 +303,7 @@ Node removeNamedItem(String uri, String name, boolean ns)\n   {\n     if (readonly)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n \n     // report attribute REMOVAL event?\n@@ -369,7 +370,7 @@ Node removeNamedItem(String uri, String name, boolean ns)\n             return ctx;\n           }\n       }    \n-    throw new DomEx(DomEx.NOT_FOUND_ERR);\n+    throw new DomDOMException(DOMException.NOT_FOUND_ERR);\n   }\n   \n   String getDefaultValue(String name)"}, {"sha": "74535eef65676a82e82729c55536eec6f6701562", "filename": "libjava/gnu/xml/dom/DomNode.java", "status": "modified", "additions": 38, "deletions": 30, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomNode.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -308,15 +308,16 @@ private void checkMisc(DomNode child)\n   {\n     if (readonly && !owner.building)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR,\n-                        null, this, 0);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR,\n+                                  null, this, 0);\n       }\n     for (DomNode ctx = this; ctx != null; ctx = ctx.parent)\n       {\n         if (child == ctx)\n           {\n-            throw new DomEx(DomEx.HIERARCHY_REQUEST_ERR,\n-                            \"can't make ancestor into a child\", this, 0);\n+            throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR,\n+                                      \"can't make ancestor into a child\",\n+                                      this, 0);\n           }\n       }\n \n@@ -330,8 +331,8 @@ private void checkMisc(DomNode child)\n         // new in DOM L2, this case -- patch it up later, in reparent()\n         if (!(childNodeType == DOCUMENT_TYPE_NODE && childOwner == null))\n           {\n-            throw new DomEx(DomEx.WRONG_DOCUMENT_ERR,\n-                            null, child, 0);\n+            throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR,\n+                                      null, child, 0);\n           }\n       }\n \n@@ -376,10 +377,12 @@ private void checkMisc(DomNode child)\n       }\n     if (owner.checkingWellformedness)\n       {\n-        throw new DomEx(DomEx.HIERARCHY_REQUEST_ERR,\n-                        \"can't append \" + nodeTypeToString(childNodeType) +\n-                        \" to node of type \" + nodeTypeToString(nodeType),\n-                        this, 0);\n+        throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR,\n+                                  \"can't append \" +\n+                                  nodeTypeToString(childNodeType) +\n+                                  \" to node of type \" +\n+                                  nodeTypeToString(nodeType),\n+                                  this, 0);\n       }\n   }\n   \n@@ -578,8 +581,8 @@ public Node appendChild(Node newChild)\n       }\n     catch (ClassCastException e)\n       {\n-        throw new DomEx(DomEx.WRONG_DOCUMENT_ERR,\n-                        null, newChild, 0);\n+        throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR,\n+                                  null, newChild, 0);\n     }\n   }\n \n@@ -630,12 +633,14 @@ public Node insertBefore(Node newChild, Node refChild)\n             checkMisc(child);\n             if (ref == null || ref.parent != this)\n               {\n-                throw new DomEx(DomEx.NOT_FOUND_ERR, null, ref, 0);\n+                throw new DomDOMException(DOMException.NOT_FOUND_ERR,\n+                                          null, ref, 0);\n               }\n             if (ref == child)\n               {\n-                throw new DomEx(DomEx.HIERARCHY_REQUEST_ERR,\n-                                \"can't insert node before itself\", ref, 0);\n+                throw new DomDOMException(DOMException.HIERARCHY_REQUEST_ERR,\n+                                          \"can't insert node before itself\",\n+                                          ref, 0);\n               }\n         \n             if (child.parent != null)\n@@ -672,8 +677,8 @@ public Node insertBefore(Node newChild, Node refChild)\n       }\n     catch (ClassCastException e)\n       {\n-        throw new DomEx(DomEx.WRONG_DOCUMENT_ERR,\n-                        null, newChild, 0);\n+        throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR,\n+                                  null, newChild, 0);\n       }\n   }\n \n@@ -721,7 +726,8 @@ public Node replaceChild(Node newChild, Node refChild)\n               }\n             if (ref == null || ref.parent != this)\n               {\n-                throw new DomEx(DomEx.NOT_FOUND_ERR, null, ref, 0);\n+                throw new DomDOMException(DOMException.NOT_FOUND_ERR,\n+                                          null, ref, 0);\n               }\n             \n             if (reportMutations)\n@@ -784,7 +790,8 @@ public Node replaceChild(Node newChild, Node refChild)\n             checkMisc(child);\n             if (ref == null || ref.parent != this)\n               {\n-                throw new DomEx(DomEx.NOT_FOUND_ERR, null, ref, 0);\n+                throw new DomDOMException(DOMException.NOT_FOUND_ERR,\n+                                          null, ref, 0);\n               }\n         \n             if (reportMutations)\n@@ -837,8 +844,8 @@ public Node replaceChild(Node newChild, Node refChild)\n       }\n     catch (ClassCastException e)\n       {\n-        throw new DomEx(DomEx.WRONG_DOCUMENT_ERR,\n-                        null, newChild, 0);\n+        throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR,\n+                                  null, newChild, 0);\n       }\n   }\n \n@@ -860,12 +867,13 @@ public Node removeChild(Node refChild)\n \n         if (ref == null || ref.parent != this)\n           {\n-            throw new DomEx(DomEx.NOT_FOUND_ERR, null, ref, 0);\n+            throw new DomDOMException(DOMException.NOT_FOUND_ERR,\n+                                      null, ref, 0);\n           }\n         if (readonly && !owner.building)\n           {\n-            throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR,\n-                            null, this, 0);\n+            throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR,\n+                                      null, this, 0);\n           }\n         \n         for (DomNode child = first; child != null; child = child.next)\n@@ -909,13 +917,13 @@ public Node removeChild(Node refChild)\n                 return ref;\n               }\n           }\n-        throw new DomEx(DomEx.NOT_FOUND_ERR,\n-                        \"that's no child of mine\", refChild, 0);\n+        throw new DomDOMException(DOMException.NOT_FOUND_ERR,\n+                                  \"that's no child of mine\", refChild, 0);\n       }\n     catch (ClassCastException e)\n       {\n-        throw new DomEx(DomEx.WRONG_DOCUMENT_ERR,\n-                        null, refChild, 0);\n+        throw new DomDOMException(DOMException.WRONG_DOCUMENT_ERR,\n+                                  null, refChild, 0);\n       }\n   }\n \n@@ -1446,8 +1454,8 @@ public Event createEvent(String eventType)\n \n     // mouse events \n     \n-    throw new DomEx(DomEx.NOT_SUPPORTED_ERR,\n-                    eventType, null, 0);\n+    throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR,\n+                              eventType, null, 0);\n   }\n \n   /**"}, {"sha": "15b2fb542286447f3d377347ae8bf930a77cfb4b", "filename": "libjava/gnu/xml/dom/DomNsNode.java", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomNsNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomNsNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomNsNode.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -38,6 +38,7 @@\n package gnu.xml.dom;\n \n import javax.xml.XMLConstants;\n+import org.w3c.dom.DOMException;\n \n /**\n  * <p> Abstract implemention of namespace support.  This facilitates\n@@ -135,7 +136,7 @@ public final void setPrefix(String prefix)\n   {\n     if (readonly)\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n \n     if (prefix == null)\n@@ -145,40 +146,42 @@ public final void setPrefix(String prefix)\n       }\n     else if (namespace == null)\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n-                        \"can't set prefix, node has no namespace URI\",\n-                        this, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                  \"can't set prefix, node has no namespace URI\",\n+                                  this, 0);\n       }\n \n     DomDocument.checkName(prefix, \"1.1\".equals(owner.getXmlVersion()));\n     if (prefix.indexOf (':') != -1)\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n-                        \"illegal prefix \" + prefix, this, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                  \"illegal prefix \" + prefix, this, 0);\n       }\n \n     if (XMLConstants.XML_NS_PREFIX.equals(prefix)\n         && !XMLConstants.XML_NS_URI.equals(namespace))\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n-                        \"xml namespace is always \" +\n-                        XMLConstants.XML_NS_URI, this, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                  \"xml namespace is always \" +\n+                                  XMLConstants.XML_NS_URI, this, 0);\n       }\n \n     if (XMLConstants.XMLNS_ATTRIBUTE.equals(prefix))\n       {\n         if (namespace != null || getNodeType() != ATTRIBUTE_NODE)\n           {\n-            throw new DomEx(DomEx.NAMESPACE_ERR,\n-                            \"xmlns attribute prefix is reserved\", this, 0);\n+            throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                      \"xmlns attribute prefix is reserved\",\n+                                      this, 0);\n           }\n       }\n     else if (getNodeType () == ATTRIBUTE_NODE\n              && (XMLConstants.XMLNS_ATTRIBUTE.equals(name) ||\n                  name.startsWith(\"xmlns:\")))\n       {\n-        throw new DomEx(DomEx.NAMESPACE_ERR,\n-                        \"namespace declarations can't change names\", this, 0);\n+        throw new DomDOMException(DOMException.NAMESPACE_ERR,\n+                                  \"namespace declarations can't change names\",\n+                                  this, 0);\n       }\n \n     this.prefix = prefix.intern();"}, {"sha": "9697f33f77a2bd604b89683188353dbe5588cde6", "filename": "libjava/gnu/xml/dom/DomProcessingInstruction.java", "status": "renamed", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomProcessingInstruction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomProcessingInstruction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomProcessingInstruction.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,4 +1,4 @@\n-/* DomPI.java -- \n+/* DomProcessingInstruction.java -- \n    Copyright (C) 1999,2000,2001,2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -37,6 +37,7 @@\n \n package gnu.xml.dom;\n \n+import org.w3c.dom.DOMException;\n import org.w3c.dom.ProcessingInstruction;\n \n /**\n@@ -57,7 +58,7 @@\n  * @author David Brownell \n  * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n  */\n-public class DomPI\n+public class DomProcessingInstruction\n   extends DomNode\n   implements ProcessingInstruction\n {\n@@ -73,7 +74,8 @@\n    * part of its createProcessingInstruction functionality, or through\n    * a subclass which is similarly used in a \"Sub-DOM\" style layer. \n    */\n-  protected DomPI(DomDocument owner, String target, String data)\n+  protected DomProcessingInstruction(DomDocument owner,\n+                                     String target, String data)\n   {\n     super(PROCESSING_INSTRUCTION_NODE, owner);\n     this.target = target;\n@@ -136,7 +138,7 @@ public final void setNodeValue(String data)\n   {\n     if (isReadonly())\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     this.data = data;\n   }", "previous_filename": "libjava/gnu/xml/dom/DomPI.java"}, {"sha": "dc2d50a8eb74a3309414ea1053fca75304046a4d", "filename": "libjava/gnu/xml/dom/DomText.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomText.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2FDomText.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2FDomText.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -102,7 +102,7 @@ public Text splitText(int offset)\n   {\n     if (isReadonly())\n       {\n-        throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);\n+        throw new DomDOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR);\n       }\n     try\n       {\n@@ -134,7 +134,7 @@ public Text splitText(int offset)\n       }\n     catch (IndexOutOfBoundsException x)\n       {\n-        throw new DomEx(DomEx.INDEX_SIZE_ERR);\n+        throw new DomDOMException(DOMException.INDEX_SIZE_ERR);\n       }\n   }\n     "}, {"sha": "6701b3e499ffffae574a4e7785228cc8458f094a", "filename": "libjava/gnu/xml/dom/ls/DomLSException.java", "status": "renamed", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSException.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,4 +1,4 @@\n-/* DomLSEx.java -- \n+/* DomLSException.java -- \n    Copyright (C) 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -37,39 +37,21 @@\n \n package gnu.xml.dom.ls;\n \n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n import org.w3c.dom.ls.LSException;\n \n /**\n  * A DOM LS exception incorporating a cause.\n  *\n  * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n  */\n-public class DomLSEx\n+public class DomLSException\n   extends LSException\n {\n \n-  private final Exception cause2;\n-\n-  public DomLSEx(short type, Exception cause)\n+  public DomLSException(short type, Exception cause)\n   {\n-    super(type, cause.getMessage());\n-    cause2 = cause;\n+    super(type, (cause == null) ? null : cause.getMessage());\n+    initCause(cause);\n   }\n \n-  public void printStackTrace(PrintStream out)\n-  {\n-    super.printStackTrace(out);\n-    out.print(\"caused by \");\n-    cause2.printStackTrace(out);\n-  }\n-  \n-  public void printStackTrace(PrintWriter out)\n-  {\n-    super.printStackTrace(out);\n-    out.print(\"caused by \");\n-    cause2.printStackTrace(out);\n-  }\n-  \n }", "previous_filename": "libjava/gnu/xml/dom/ls/DomLSEx.java"}, {"sha": "489777fc913d75da82b458d75b381bd7aeb7496d", "filename": "libjava/gnu/xml/dom/ls/DomLSParser.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSParser.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -65,7 +65,7 @@\n import org.xml.sax.SAXParseException;\n import org.xml.sax.XMLReader;\n import gnu.xml.dom.DomDocument;\n-import gnu.xml.dom.DomEx;\n+import gnu.xml.dom.DomDOMException;\n \n /**\n  * Parser implementation for GNU DOM.\n@@ -117,7 +117,7 @@ public DomLSParser(short mode, String schemaType)\n         async = false;\n         break;\n       default:\n-        throw new DomEx(DOMException.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       }\n     // TODO schemaType\n     this.schemaType = schemaType;\n@@ -307,13 +307,13 @@ private Document doParse(LSInput input)\n       {\n         reader = null;\n         eventSink = null;\n-        throw new DomLSEx(LSException.PARSE_ERR, e);\n+        throw new DomLSException(LSException.PARSE_ERR, e);\n       }\n     catch (IOException e)\n       {\n         reader = null;\n         eventSink = null;\n-        throw new DomLSEx(LSException.PARSE_ERR, e);\n+        throw new DomLSException(LSException.PARSE_ERR, e);\n       }\n     // return document\n     Document ret = eventSink.doc;\n@@ -341,11 +341,11 @@ private XMLReader getXMLReader()\n           }\n         catch (ParserConfigurationException e)\n           {\n-            throw new DomLSEx(LSException.PARSE_ERR, e);\n+            throw new DomLSException(LSException.PARSE_ERR, e);\n           }\n         catch (SAXException e)\n           {\n-            throw new DomLSEx(LSException.PARSE_ERR, e);\n+            throw new DomLSException(LSException.PARSE_ERR, e);\n           }\n       }\n     return reader;\n@@ -371,11 +371,11 @@ private InputSource getInputSource(LSInput input)\n           }\n         catch (SAXException e)\n           {\n-            throw new DomLSEx(LSException.PARSE_ERR, e);\n+            throw new DomLSException(LSException.PARSE_ERR, e);\n           } \n         catch (IOException e)\n           {\n-            throw new DomLSEx(LSException.PARSE_ERR, e);\n+            throw new DomLSException(LSException.PARSE_ERR, e);\n           } \n       }\n     if (source == null)\n@@ -403,7 +403,7 @@ private InputSource getInputSource(LSInput input)\n           }\n         catch (IOException e)\n           {\n-            throw new DomLSEx(LSException.PARSE_ERR, e);\n+            throw new DomLSException(LSException.PARSE_ERR, e);\n           }\n       }\n     return source;\n@@ -457,7 +457,7 @@ else if (\"error-handler\".equals(name))\n       }\n     else\n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       }\n     // invalidate reader, a new one will be created\n     reader = null;\n@@ -509,7 +509,7 @@ else if (\"error-handler\".equals(name))\n       }\n     else\n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       }\n   }\n "}, {"sha": "ec27c5de65bba18ffb8d5184ac5db396c795860c", "filename": "libjava/gnu/xml/dom/ls/DomLSSerializer.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSSerializer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSSerializer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSSerializer.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -58,7 +58,7 @@\n import org.w3c.dom.ls.LSSerializer;\n import org.w3c.dom.ls.LSSerializerFilter;\n import org.w3c.dom.traversal.NodeFilter;\n-import gnu.xml.dom.DomEx;\n+import gnu.xml.dom.DomDOMException;\n import gnu.xml.transform.StreamSerializer;\n \n /**\n@@ -147,7 +147,7 @@ public boolean write(Node node, LSOutput output)\n       }\n     catch (IOException e)\n       {\n-        throw new DomLSEx(LSException.SERIALIZE_ERR, e);\n+        throw new DomLSException(LSException.SERIALIZE_ERR, e);\n       }\n   }\n \n@@ -302,7 +302,7 @@ else if (\"xml-declaration\".equals(name))\n       }\n     else\n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       }\n   }\n \n@@ -319,7 +319,7 @@ else if (\"xml-declaration\".equals(name))\n       }\n     else\n       {\n-        throw new DomEx(DomEx.NOT_SUPPORTED_ERR);\n+        throw new DomDOMException(DOMException.NOT_SUPPORTED_ERR);\n       }\n   }\n "}, {"sha": "ef03d42fc386e123f68f0326433f5eb4aeb04f6a", "filename": "libjava/gnu/xml/util/SAXNullTransformerFactory.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Futil%2FSAXNullTransformerFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Futil%2FSAXNullTransformerFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Futil%2FSAXNullTransformerFactory.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -635,7 +635,8 @@ else if (in instanceof SAXSource)\n           // preserve original namespace prefixes\n           try\n             {\n-              producer.setFeature(handler.FEATURE_URI + \"namespace-prefixes\",\n+              producer.setFeature(EventFilter.FEATURE_URI +\n+                                  \"namespace-prefixes\",\n                                   true);\n             }\n           catch (Exception e)\n@@ -646,7 +647,7 @@ else if (in instanceof SAXSource)\n           \n           // arrange the output\n           handler.setResult (out);\n-          handler.bind (producer, handler);\n+          EventFilter.bind (producer, handler);\n           \n           // then parse ... single element pipeline\n           producer.parse (input);"}, {"sha": "a857c16bbf159bf87fa1026c0d34cf5341302171", "filename": "libjava/gnu/xml/xpath/Predicate.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fxpath%2FPredicate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fxml%2Fxpath%2FPredicate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FPredicate.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -63,7 +63,7 @@ public boolean matches(Node node, int pos, int len)\n         // Same as [position() = x]\n         return ((Double) ret).intValue() == pos;\n       }\n-    return expr._boolean(node, expr.evaluate(node, pos, len));\n+    return Expr._boolean(node, expr.evaluate(node, pos, len));\n   }\n \n   public Test clone(Object context)"}]}