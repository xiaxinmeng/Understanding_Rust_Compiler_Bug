{"sha": "1240212c6b2ad61a9f8f918192fbb67d45405cc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0MDIxMmM2YjJhZDYxYTlmOGY5MTgxOTJmYmI2N2Q0NTQwNWNjMg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2017-04-21T09:01:44Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2017-04-21T09:01:44Z"}, "message": "libiberty: Don't update and remove did_subs field from demangler structs.\n\nThe d_info field did_subs was used for estimating the string output\nsize. It was no longer used when the malloc-less callback interface\nwas introduced in 2007 (svn r121305). But the field was still updated.\nWhen backtracking was introduced in 2013 (svn r205292) did_subs was\nalso added to the d_info_checkpoint struct. But except for updating\nthe field it was still not used.\n\nSince it is never used just stop updating the field and remove it\nfrom the two structs.\n\nlibiberty/ChangeLog:\n\n\t* cp-demangle.h (struct d_info): Remove did_subs field.\n\t* cp-demangle.c (struct d_info_checkpoint): Likewise.\n\t(d_template_param): Don't update did_subs.\n\t(d_substitution): Likewise.\n\t(d_checkpoint): Don't assign did_subs.\n\t(d_backtrack): Likewise.\n\t(cplus_demangle_init_info): Don't initialize did_subs.\n\nFrom-SVN: r247054", "tree": {"sha": "1e54f14b71f855470176ce88958a071f6e5ae310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e54f14b71f855470176ce88958a071f6e5ae310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1240212c6b2ad61a9f8f918192fbb67d45405cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1240212c6b2ad61a9f8f918192fbb67d45405cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1240212c6b2ad61a9f8f918192fbb67d45405cc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1240212c6b2ad61a9f8f918192fbb67d45405cc2/comments", "author": null, "committer": null, "parents": [{"sha": "ad32f0675e6596552ec670ef4afc71f0803be2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad32f0675e6596552ec670ef4afc71f0803be2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad32f0675e6596552ec670ef4afc71f0803be2fa"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "67ba6e7675a5c56e8357856bb78807929d004b4c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240212c6b2ad61a9f8f918192fbb67d45405cc2/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240212c6b2ad61a9f8f918192fbb67d45405cc2/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=1240212c6b2ad61a9f8f918192fbb67d45405cc2", "patch": "@@ -1,3 +1,13 @@\n+2017-04-21  Mark Wielaard  <mark@klomp.org>\n+\n+\t* cp-demangle.h (struct d_info): Remove did_subs field.\n+\t* cp-demangle.c (struct d_info_checkpoint): Likewise.\n+\t(d_template_param): Don't update did_subs.\n+\t(d_substitution): Likewise.\n+\t(d_checkpoint): Don't assign did_subs.\n+\t(d_backtrack): Likewise.\n+\t(cplus_demangle_init_info): Don't initialize did_subs.\n+\n 2017-03-27  Pedro Alves  <palves@redhat.com>\n \n \t* cp-demint.c (cplus_demangle_fill_component): Handle"}, {"sha": "2c7d5c5faabe7a8a77096f0a94480024bdba3011", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240212c6b2ad61a9f8f918192fbb67d45405cc2/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240212c6b2ad61a9f8f918192fbb67d45405cc2/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=1240212c6b2ad61a9f8f918192fbb67d45405cc2", "patch": "@@ -316,7 +316,6 @@ struct d_info_checkpoint\n   const char *n;\n   int next_comp;\n   int next_sub;\n-  int did_subs;\n   int expansion;\n };\n \n@@ -3075,8 +3074,6 @@ d_template_param (struct d_info *di)\n   if (param < 0)\n     return NULL;\n \n-  ++di->did_subs;\n-\n   return d_make_template_param (di, param);\n }\n \n@@ -3846,8 +3843,6 @@ d_substitution (struct d_info *di, int prefix)\n       if (id >= (unsigned int) di->next_sub)\n \treturn NULL;\n \n-      ++di->did_subs;\n-\n       return di->subs[id];\n     }\n   else\n@@ -3912,7 +3907,6 @@ d_checkpoint (struct d_info *di, struct d_info_checkpoint *checkpoint)\n   checkpoint->n = di->n;\n   checkpoint->next_comp = di->next_comp;\n   checkpoint->next_sub = di->next_sub;\n-  checkpoint->did_subs = di->did_subs;\n   checkpoint->expansion = di->expansion;\n }\n \n@@ -3922,7 +3916,6 @@ d_backtrack (struct d_info *di, struct d_info_checkpoint *checkpoint)\n   di->n = checkpoint->n;\n   di->next_comp = checkpoint->next_comp;\n   di->next_sub = checkpoint->next_sub;\n-  di->did_subs = checkpoint->did_subs;\n   di->expansion = checkpoint->expansion;\n }\n \n@@ -6159,7 +6152,6 @@ cplus_demangle_init_info (const char *mangled, int options, size_t len,\n      chars in the mangled string.  */\n   di->num_subs = len;\n   di->next_sub = 0;\n-  di->did_subs = 0;\n \n   di->last_name = NULL;\n "}, {"sha": "d4a4ab604d84bd38d7d7b6724a34a2c3732351e5", "filename": "libiberty/cp-demangle.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240212c6b2ad61a9f8f918192fbb67d45405cc2/libiberty%2Fcp-demangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240212c6b2ad61a9f8f918192fbb67d45405cc2/libiberty%2Fcp-demangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.h?ref=1240212c6b2ad61a9f8f918192fbb67d45405cc2", "patch": "@@ -111,10 +111,6 @@ struct d_info\n   int next_sub;\n   /* The number of available entries in the subs array.  */\n   int num_subs;\n-  /* The number of substitutions which we actually made from the subs\n-     array, plus the number of template parameter references we\n-     saw.  */\n-  int did_subs;\n   /* The last name we saw, for constructors and destructors.  */\n   struct demangle_component *last_name;\n   /* A running total of the length of large expansions from the"}]}