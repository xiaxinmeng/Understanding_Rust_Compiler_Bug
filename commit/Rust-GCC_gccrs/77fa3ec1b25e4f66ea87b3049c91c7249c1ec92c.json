{"sha": "77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmYTNlYzFiMjVlNGY2NmVhODdiMzA0OWM5MWM3MjQ5YzFlYzkyYw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-05T16:50:14Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-05T16:50:14Z"}, "message": "call.c (make_temporary_var_for_ref_to_temp): Push decl into current scope.\n\n\t* call.c (make_temporary_var_for_ref_to_temp): Push decl into\n\tcurrent scope.\n\t* lex.c (unqualified_name_lookup_error): Likewise.\n\nFrom-SVN: r247645", "tree": {"sha": "7b7ae97564417221279c14dffcde2b45b956f0d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b7ae97564417221279c14dffcde2b45b956f0d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7187a6c83a466b582c68b60c33113492ce9ee1e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7187a6c83a466b582c68b60c33113492ce9ee1e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7187a6c83a466b582c68b60c33113492ce9ee1e9"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "eaeddb2f66e82d361154057296885d84552f36c9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "patch": "@@ -1,5 +1,9 @@\n 2017-05-05  Nathan Sidwell  <nathan@acm.org>\n \n+\t* call.c (make_temporary_var_for_ref_to_temp): Push decl into\n+\tcurrent scope.\n+\t* lex.c (unqualified_name_lookup_error): Likewise.\n+\n \t* class.c (alter_class): Use retrofit_lang_decl directly.\n \t* decl.c (push_local_name, dupliate_decls): Likewise.\n \t* semantics.c (omp_privatize_field): Likewise."}, {"sha": "e348f296822912f7b208fbb16af7be7938a7b3fa", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "patch": "@@ -10234,26 +10234,24 @@ perform_direct_initialization_if_possible (tree type,\n tree\n make_temporary_var_for_ref_to_temp (tree decl, tree type)\n {\n-  tree var;\n-\n-  /* Create the variable.  */\n-  var = create_temporary_var (type);\n+  tree var = create_temporary_var (type);\n \n   /* Register the variable.  */\n   if (VAR_P (decl)\n       && (TREE_STATIC (decl) || CP_DECL_THREAD_LOCAL_P (decl)))\n     {\n       /* Namespace-scope or local static; give it a mangled name.  */\n       /* FIXME share comdat with decl?  */\n-      tree name;\n \n       TREE_STATIC (var) = TREE_STATIC (decl);\n       CP_DECL_THREAD_LOCAL_P (var) = CP_DECL_THREAD_LOCAL_P (decl);\n       set_decl_tls_model (var, DECL_TLS_MODEL (decl));\n-      name = mangle_ref_init_variable (decl);\n+\n+      tree name = mangle_ref_init_variable (decl);\n       DECL_NAME (var) = name;\n       SET_DECL_ASSEMBLER_NAME (var, name);\n-      var = pushdecl_top_level (var);\n+\n+      var = pushdecl (var);\n     }\n   else\n     /* Create a new cleanup level if necessary.  */"}, {"sha": "75dc15910b09f959ffe6375b833504b8be35fe7b", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "patch": "@@ -447,13 +447,9 @@ unqualified_name_lookup_error (tree name, location_t loc)\n \t this NAME in the innermost block scope.  */\n       if (local_bindings_p ())\n \t{\n-\t  tree decl;\n-\t  decl = build_decl (loc, VAR_DECL, name, error_mark_node);\n-\t  DECL_CONTEXT (decl) = current_function_decl;\n-\t  push_local_binding (name, decl, 0);\n-\t  /* Mark the variable as used so that we do not get warnings\n-\t     about it being unused later.  */\n-\t  TREE_USED (decl) = 1;\n+\t  tree decl = build_decl (loc, VAR_DECL, name, error_mark_node);\n+\t  TREE_USED (decl) = true;\n+\t  pushdecl (decl);\n \t}\n     }\n "}]}