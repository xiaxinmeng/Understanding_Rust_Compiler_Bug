{"sha": "c20ef9d2338e764a92374a87dc36146a2532780b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIwZWY5ZDIzMzhlNzY0YTkyMzc0YTg3ZGMzNjE0NmEyNTMyNzgwYg==", "commit": {"author": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2016-04-28T17:16:05Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2016-04-28T17:16:05Z"}, "message": "constraints.md (Usd): Convert to define_constraint.\n\n2016-04-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n\n        * config/arc/constraints.md (Usd): Convert to define_constraint.\n        (Us<): Likewise.\n        (Us>): Likewise.\n\nFrom-SVN: r235587", "tree": {"sha": "bc195675a62e0acd1d93fc4c13bc3915917f6beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc195675a62e0acd1d93fc4c13bc3915917f6beb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c20ef9d2338e764a92374a87dc36146a2532780b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c20ef9d2338e764a92374a87dc36146a2532780b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c20ef9d2338e764a92374a87dc36146a2532780b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c20ef9d2338e764a92374a87dc36146a2532780b/comments", "author": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81262dad15795720e197df259bf690967bc57a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81262dad15795720e197df259bf690967bc57a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81262dad15795720e197df259bf690967bc57a2b"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "0c0e1ac0177ff06b992b475bc38095838ebf1869", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c20ef9d2338e764a92374a87dc36146a2532780b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c20ef9d2338e764a92374a87dc36146a2532780b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c20ef9d2338e764a92374a87dc36146a2532780b", "patch": "@@ -1,3 +1,9 @@\n+2016-04-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* config/arc/constraints.md (Usd): Convert to define_constraint.\n+\t(Us<): Likewise.\n+\t(Us>): Likewise.\n+\n 2016-04-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70821"}, {"sha": "b6954ad9456ab91c8672fa3e50ed73f8ee0c5797", "filename": "gcc/config/arc/constraints.md", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c20ef9d2338e764a92374a87dc36146a2532780b/gcc%2Fconfig%2Farc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c20ef9d2338e764a92374a87dc36146a2532780b/gcc%2Fconfig%2Farc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fconstraints.md?ref=c20ef9d2338e764a92374a87dc36146a2532780b", "patch": "@@ -269,11 +269,15 @@\n   (and (match_code \"mem\")\n        (match_test \"compact_store_memory_operand (op, VOIDmode)\")))\n \n-(define_memory_constraint \"Usd\"\n-  \"@internal\n-   A valid _small-data_ memory operand for ARCompact instructions\"\n-  (and (match_code \"mem\")\n-       (match_test \"compact_sda_memory_operand (op, VOIDmode)\")))\n+; Don't use define_memory_constraint here as the relocation patching\n+; for small data symbols only works within a ld/st instruction and\n+; define_memory_constraint may result in the address being calculated\n+; into a register first.\n+(define_constraint \"Usd\"\n+   \"@internal\n+    A valid _small-data_ memory operand for ARCompact instructions\"\n+   (and (match_code \"mem\")\n+        (match_test \"compact_sda_memory_operand (op, VOIDmode)\")))\n \n (define_memory_constraint \"Usc\"\n   \"@internal\n@@ -283,15 +287,15 @@\n ;; ??? the assembler rejects stores of immediates to small data.\n        (match_test \"!compact_sda_memory_operand (op, VOIDmode)\")))\n \n-(define_memory_constraint \"Us<\"\n+(define_constraint \"Us<\"\n   \"@internal\n    Stack pre-decrement\"\n   (and (match_code \"mem\")\n        (match_test \"GET_CODE (XEXP (op, 0)) == PRE_DEC\")\n        (match_test \"REG_P (XEXP (XEXP (op, 0), 0))\")\n        (match_test \"REGNO (XEXP (XEXP (op, 0), 0)) == SP_REG\")))\n \n-(define_memory_constraint \"Us>\"\n+(define_constraint \"Us>\"\n   \"@internal\n    Stack post-increment\"\n   (and (match_code \"mem\")"}]}