{"sha": "b56d6aa18a939327828f0095efbdb8375a2867a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU2ZDZhYTE4YTkzOTMyNzgyOGYwMDk1ZWZiZGI4Mzc1YTI4NjdhOA==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@linaro.org", "date": "2014-11-17T06:07:15Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-11-17T06:07:15Z"}, "message": "constraints.md (Usn, [...]): New constraints.\n\n2014-11-17  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n\n\t* config/aarch64/constraints.md (Usn, aarch64_ccmp_immediate,\n\taarch64_ccmp_operand): New constraints.\n\nFrom-SVN: r217642", "tree": {"sha": "356e2c942a2a5af7725224ae29b31b3ecdba191e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356e2c942a2a5af7725224ae29b31b3ecdba191e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b56d6aa18a939327828f0095efbdb8375a2867a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56d6aa18a939327828f0095efbdb8375a2867a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56d6aa18a939327828f0095efbdb8375a2867a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56d6aa18a939327828f0095efbdb8375a2867a8/comments", "author": null, "committer": null, "parents": [{"sha": "f06cd23dc761a7769f8bdca26a42db59b71dec54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06cd23dc761a7769f8bdca26a42db59b71dec54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06cd23dc761a7769f8bdca26a42db59b71dec54"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "6e3045def0ac1161be6f2655c01caaf50a63993e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56d6aa18a939327828f0095efbdb8375a2867a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56d6aa18a939327828f0095efbdb8375a2867a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b56d6aa18a939327828f0095efbdb8375a2867a8", "patch": "@@ -1,3 +1,8 @@\n+014-11-17  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n+\n+\t* config/aarch64/constraints.md (Usn, aarch64_ccmp_immediate,\n+\taarch64_ccmp_operand): New constraints.\n+\n 2014-11-17  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n \n \t* Makefile.in: Add ccmp.o."}, {"sha": "a5ce66c176a03b7fab8e07d3a61fd334bafd571a", "filename": "gcc/config/aarch64/constraints.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56d6aa18a939327828f0095efbdb8375a2867a8/gcc%2Fconfig%2Faarch64%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56d6aa18a939327828f0095efbdb8375a2867a8/gcc%2Fconfig%2Faarch64%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fconstraints.md?ref=b56d6aa18a939327828f0095efbdb8375a2867a8", "patch": "@@ -89,6 +89,11 @@\n   (and (match_code \"const_int\")\n        (match_test \"(unsigned HOST_WIDE_INT) ival < 32\")))\n \n+(define_constraint \"Usn\"\n+ \"A constant that can be used with a CCMN operation (once negated).\"\n+ (and (match_code \"const_int\")\n+      (match_test \"IN_RANGE (ival, -31, 0)\")))\n+\n (define_constraint \"Usd\"\n   \"@internal\n   A constraint that matches an immediate shift constant in DImode.\""}, {"sha": "aa8f6f61d566f5d5406f6f21b0c6cd1b461b979e", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56d6aa18a939327828f0095efbdb8375a2867a8/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56d6aa18a939327828f0095efbdb8375a2867a8/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=b56d6aa18a939327828f0095efbdb8375a2867a8", "patch": "@@ -30,6 +30,14 @@\n   (ior (match_code \"symbol_ref\")\n        (match_operand 0 \"register_operand\")))\n \n+(define_predicate \"aarch64_ccmp_immediate\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (INTVAL (op), -31, 31)\")))\n+\n+(define_predicate \"aarch64_ccmp_operand\"\n+  (ior (match_operand 0 \"register_operand\")\n+       (match_operand 0 \"aarch64_ccmp_immediate\")))\n+\n (define_predicate \"aarch64_simd_register\"\n   (and (match_code \"reg\")\n        (ior (match_test \"REGNO_REG_CLASS (REGNO (op)) == FP_LO_REGS\")"}]}