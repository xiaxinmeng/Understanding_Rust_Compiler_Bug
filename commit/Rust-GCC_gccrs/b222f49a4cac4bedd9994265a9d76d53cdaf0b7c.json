{"sha": "b222f49a4cac4bedd9994265a9d76d53cdaf0b7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIyMmY0OWE0Y2FjNGJlZGQ5OTk0MjY1YTlkNzZkNTNjZGFmMGI3Yw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@wasabisystems.com", "date": "2003-07-21T11:10:22Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2003-07-21T11:10:22Z"}, "message": "invoke.texi (Optimize Options): Replace \"it's\" with \"its\".\n\n\t* doc/invoke.texi (Optimize Options): Replace \"it's\" with \"its\".\n\t(V850 Options): Spelling fixes.\n\nFrom-SVN: r69627", "tree": {"sha": "8e7ffc3e77d145afab4dc6a7e1df43e29c675044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e7ffc3e77d145afab4dc6a7e1df43e29c675044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c/comments", "author": null, "committer": null, "parents": [{"sha": "cea949a61eb6d79c3c239a8d23d3f7eb93404a2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea949a61eb6d79c3c239a8d23d3f7eb93404a2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea949a61eb6d79c3c239a8d23d3f7eb93404a2d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "b829d19fc80b1660f19fad8d6bbae5bb055d8ed4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b222f49a4cac4bedd9994265a9d76d53cdaf0b7c", "patch": "@@ -1,3 +1,8 @@\n+2003-07-21  Ben Elliston  <bje@wasabisystems.com>\n+\n+\t* doc/invoke.texi (Optimize Options): Replace \"it's\" with \"its\".\n+\t(V850 Options): Spelling fixes.\n+\n 2003-07-20  Lisa M. Goldstein  <opus@gnu.org>\n \n         * doc/invoke.texi: Fixes to style, grammar and diction."}, {"sha": "864f0467a5e2b380813d4ef7ba0927639f3deee2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b222f49a4cac4bedd9994265a9d76d53cdaf0b7c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b222f49a4cac4bedd9994265a9d76d53cdaf0b7c", "patch": "@@ -4724,7 +4724,7 @@ collection to occur at every opportunity.\n @itemx reorder-blocks-duplicate-feedback\n \n Used by basic block reordering pass to decide whether to use unconditional\n-branch or duplicate the code on it's destination.  Code is duplicated when it's\n+branch or duplicate the code on its destination.  Code is duplicated when its\n estimated size is smaller than this value multiplied by the estimated size of\n unconditional jump in the hot spots of the program.\n \n@@ -9573,11 +9573,11 @@ option is on by default if you optimize.\n @itemx -mprolog-function\n @opindex mno-prolog-function\n @opindex mprolog-function\n-Do not use (do use) external functions to save and restore registers at\n-the prolog and epilog of a function.  The external functions are slower,\n-but use less code space if more than one function saves the same number\n-of registers.  The @option{-mprolog-function} option is on by default if\n-you optimize.\n+Do not use (do use) external functions to save and restore registers\n+at the prologue and epilogue of a function.  The external functions\n+are slower, but use less code space if more than one function saves\n+the same number of registers.  The @option{-mprolog-function} option\n+is on by default if you optimize.\n \n @item -mspace\n @opindex mspace"}]}