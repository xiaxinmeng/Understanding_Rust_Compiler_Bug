{"sha": "cd3f1729088b40dfaca41acf2cd238c0a1e81fcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzZjE3MjkwODhiNDBkZmFjYTQxYWNmMmNkMjM4YzBhMWU4MWZjZA==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2009-01-16T13:41:11Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2009-01-16T13:41:11Z"}, "message": "dce.c (delete_unmarked_insns): Reversed the order that insns are examined before deleting them.\n\n2009-01-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* dce.c (delete_unmarked_insns): Reversed the order that insns are\n\texamined before deleting them.\n\nFrom-SVN: r143433", "tree": {"sha": "e9c6d1b1f501cbcbd1dc7656ea9f36030c76be75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9c6d1b1f501cbcbd1dc7656ea9f36030c76be75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c433cb14aed894dabd159e9418fe87358779b121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c433cb14aed894dabd159e9418fe87358779b121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c433cb14aed894dabd159e9418fe87358779b121"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "3a7a72cd1f55c3652027d01ab2b4099f25d345c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd3f1729088b40dfaca41acf2cd238c0a1e81fcd", "patch": "@@ -1,3 +1,8 @@\n+2009-01-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* dce.c (delete_unmarked_insns): Reversed the order that insns are\n+\texamined before deleting them.\n+\t\n 2009-01-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* function.c (aggregate_value_p): Correctly extract the function"}, {"sha": "f6a10d6197e77a3ab06a022b324ce106d21bbc83", "filename": "gcc/dce.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3f1729088b40dfaca41acf2cd238c0a1e81fcd/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=cd3f1729088b40dfaca41acf2cd238c0a1e81fcd", "patch": "@@ -510,8 +510,8 @@ delete_unmarked_insns (void)\n   rtx insn, next;\n   bool must_clean = false;\n \n-  FOR_EACH_BB (bb)\n-    FOR_BB_INSNS_SAFE (bb, insn, next)\n+  FOR_EACH_BB_REVERSE (bb)\n+    FOR_BB_INSNS_REVERSE_SAFE (bb, insn, next)\n       if (INSN_P (insn))\n \t{\n \t  /* Always delete no-op moves.  */\n@@ -522,13 +522,24 @@ delete_unmarked_insns (void)\n \t  else if (marked_insn_p (insn))\n \t    continue;\n \n-\t  /* Beware that reaching a dbg counter limit here can rarely\n-\t     result in miscompiled file.  This occurs when a group of\n-\t     insns must be deleted together.  Currently this only\n-\t     can happen on non-looping pure and constant calls\n-\t     on machines where ACCUMULATE_OUTGOING_ARGS is true.  By\n-\t     using the dbg_cnt, it is possible to remove the call, but\n-\t     leave the argument pushes to the stack.  */\n+\t  /* Beware that reaching a dbg counter limit here can result\n+\t     in miscompiled file.  This occurs when a group of insns\n+\t     must be deleted together, typically because the kept insn\n+\t     depends on the output from the deleted insn.  Deleting\n+\t     this insns in reverse order (both at the bb level and\n+\t     when looking at the blocks) minimizes this, but does not\n+\t     eliminate it, since it is possible for the using insn to\n+\t     be top of a block and the producer to be at the bottom of\n+\t     the block.  However, in most cases this will only result\n+\t     in an uninitialized use of an insn that is dead anyway.\n+\n+\t     However, there is one rare case that will cause a\n+\t     miscompile: deletion of non-looping pure and constant\n+\t     calls on a machine where ACCUMULATE_OUTGOING_ARGS is true.\n+\t     In this case it is possible to remove the call, but leave\n+\t     the argument pushes to the stack.  Because of the changes\n+\t     to the stack pointer, this will almost always lead to a\n+\t     miscompile.  */\n \t  if (!dbg_cnt (dce))\n \t    continue;\n "}]}