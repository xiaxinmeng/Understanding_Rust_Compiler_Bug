{"sha": "6a30d8c0a687baae0cea91ca6b3adbed32e84471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzMGQ4YzBhNjg3YmFhZTBjZWE5MWNhNmIzYWRiZWQzMmU4NDQ3MQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2018-12-18T10:29:42Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2018-12-18T10:29:42Z"}, "message": "combine.c (update_rsp_from_reg_equal): Only look for the nonzero bits of src in nonzero_bits_mode if...\n\n2018-12-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* combine.c (update_rsp_from_reg_equal): Only look for the nonzero bits\n\tof src in nonzero_bits_mode if the mode of src is MODE_INT and\n\tHWI_COMPUTABLE.\n\t(reg_nonzero_bits_for_combine): Add clarification to comment.\n\nFrom-SVN: r267227", "tree": {"sha": "607914228c83b59a14b9a63a326be1978d4bab94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/607914228c83b59a14b9a63a326be1978d4bab94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a30d8c0a687baae0cea91ca6b3adbed32e84471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a30d8c0a687baae0cea91ca6b3adbed32e84471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a30d8c0a687baae0cea91ca6b3adbed32e84471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a30d8c0a687baae0cea91ca6b3adbed32e84471/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d54c79858656d7fe58cd1387f766dbf23fc04be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d54c79858656d7fe58cd1387f766dbf23fc04be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d54c79858656d7fe58cd1387f766dbf23fc04be"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "e24bb94baa0dc84a9f22c2b14bc2e2df35141d9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a30d8c0a687baae0cea91ca6b3adbed32e84471/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a30d8c0a687baae0cea91ca6b3adbed32e84471/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a30d8c0a687baae0cea91ca6b3adbed32e84471", "patch": "@@ -1,3 +1,10 @@\n+2018-12-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* combine.c (update_rsp_from_reg_equal): Only look for the nonzero bits\n+\tof src in nonzero_bits_mode if the mode of src is MODE_INT and\n+\tHWI_COMPUTABLE.\n+\t(reg_nonzero_bits_for_combine): Add clarification to comment.\n+\n 2018-12-18  Wei Xiao  <wei3.xiao@intel.com>\n \n \t* config/i386/driver-i386.c (host_detect_local_cpu): Detect cascadelake."}, {"sha": "a1d6e2dfc99920f647e7fc93719ae50938e1b49a", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a30d8c0a687baae0cea91ca6b3adbed32e84471/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a30d8c0a687baae0cea91ca6b3adbed32e84471/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=6a30d8c0a687baae0cea91ca6b3adbed32e84471", "patch": "@@ -1698,9 +1698,13 @@ update_rsp_from_reg_equal (reg_stat_type *rsp, rtx_insn *insn, const_rtx set,\n   /* Don't call nonzero_bits if it cannot change anything.  */\n   if (rsp->nonzero_bits != HOST_WIDE_INT_M1U)\n     {\n-      bits = nonzero_bits (src, nonzero_bits_mode);\n+      machine_mode mode = GET_MODE (x);\n+      if (GET_MODE_CLASS (mode) == MODE_INT\n+\t  && HWI_COMPUTABLE_MODE_P (mode))\n+\tmode = nonzero_bits_mode;\n+      bits = nonzero_bits (src, mode);\n       if (reg_equal && bits)\n-\tbits &= nonzero_bits (reg_equal, nonzero_bits_mode);\n+\tbits &= nonzero_bits (reg_equal, mode);\n       rsp->nonzero_bits |= bits;\n     }\n \n@@ -10225,6 +10229,7 @@ simplify_and_const_int (rtx x, scalar_int_mode mode, rtx varop,\n \f\n /* Given a REG X of mode XMODE, compute which bits in X can be nonzero.\n    We don't care about bits outside of those defined in MODE.\n+   We DO care about all the bits in MODE, even if XMODE is smaller than MODE.\n \n    For most X this is simply GET_MODE_MASK (GET_MODE (MODE)), but if X is\n    a shift, AND, or zero_extract, we can do better.  */"}]}