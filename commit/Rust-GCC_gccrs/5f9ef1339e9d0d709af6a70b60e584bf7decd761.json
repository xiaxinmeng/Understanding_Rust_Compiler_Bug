{"sha": "5f9ef1339e9d0d709af6a70b60e584bf7decd761", "node_id": "C_kwDOANBUbNoAKDVmOWVmMTMzOWU5ZDBkNzA5YWY2YTcwYjYwZTU4NGJmN2RlY2Q3NjE", "commit": {"author": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2021-10-28T02:22:39Z"}, "committer": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2021-10-28T03:17:33Z"}, "message": "rs6000: Fold xxsel to vsel since they have same semantics\n\nFold xxsel to vsel like xxperm/vperm to avoid duplicate code.\n\ngcc/ChangeLog:\n\n2021-10-28  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\tPR target/94613\n\t* config/rs6000/altivec.md: Add vsx register constraints.\n\t* config/rs6000/vsx.md (vsx_xxsel<mode>): Delete.\n\t(vsx_xxsel<mode>2): Likewise.\n\t(vsx_xxsel<mode>3): Likewise.\n\t(vsx_xxsel<mode>4): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n2021-10-28  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\t* gcc.target/powerpc/builtins-1.c: Adjust.", "tree": {"sha": "f61ac6ed4a23bee4f3d95e0e54dcd591be3cf02c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f61ac6ed4a23bee4f3d95e0e54dcd591be3cf02c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f9ef1339e9d0d709af6a70b60e584bf7decd761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9ef1339e9d0d709af6a70b60e584bf7decd761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f9ef1339e9d0d709af6a70b60e584bf7decd761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9ef1339e9d0d709af6a70b60e584bf7decd761/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9222481ffc69a6c0b73ec81e1bf04289fa3db0ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9222481ffc69a6c0b73ec81e1bf04289fa3db0ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9222481ffc69a6c0b73ec81e1bf04289fa3db0ed"}], "stats": {"total": 119, "additions": 37, "deletions": 82}, "files": [{"sha": "a057218aa2885a12d07efe22642b7cb93b766a45", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ef1339e9d0d709af6a70b60e584bf7decd761/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ef1339e9d0d709af6a70b60e584bf7decd761/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=5f9ef1339e9d0d709af6a70b60e584bf7decd761", "patch": "@@ -682,56 +682,68 @@\n   [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"altivec_vsel<mode>\"\n-  [(set (match_operand:VM 0 \"altivec_register_operand\" \"=v\")\n+  [(set (match_operand:VM 0 \"register_operand\" \"=wa,v\")\n \t(ior:VM\n \t  (and:VM\n-\t    (not:VM (match_operand:VM 3 \"altivec_register_operand\" \"v\"))\n-\t    (match_operand:VM 1 \"altivec_register_operand\" \"v\"))\n+\t    (not:VM (match_operand:VM 3 \"register_operand\" \"wa,v\"))\n+\t    (match_operand:VM 1 \"register_operand\" \"wa,v\"))\n \t  (and:VM\n \t    (match_dup 3)\n-\t    (match_operand:VM 2 \"altivec_register_operand\" \"v\"))))]\n+\t    (match_operand:VM 2 \"register_operand\" \"wa,v\"))))]\n   \"VECTOR_MEM_ALTIVEC_OR_VSX_P (<MODE>mode)\"\n-  \"vsel %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecmove\")])\n+  \"@\n+   xxsel %x0,%x1,%x2,%x3\n+   vsel %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"vecmove\")\n+   (set_attr \"isa\" \"<VSisa>\")])\n \n (define_insn \"altivec_vsel<mode>2\"\n-  [(set (match_operand:VM 0 \"altivec_register_operand\" \"=v\")\n+  [(set (match_operand:VM 0 \"register_operand\" \"=wa,v\")\n \t(ior:VM\n \t  (and:VM\n-\t    (not:VM (match_operand:VM 3 \"altivec_register_operand\" \"v\"))\n-\t    (match_operand:VM 1 \"altivec_register_operand\" \"v\"))\n+\t    (not:VM (match_operand:VM 3 \"register_operand\" \"wa,v\"))\n+\t    (match_operand:VM 1 \"register_operand\" \"wa,v\"))\n \t  (and:VM\n-\t    (match_operand:VM 2 \"altivec_register_operand\" \"v\")\n+\t    (match_operand:VM 2 \"register_operand\" \"wa,v\")\n \t    (match_dup 3))))]\n   \"VECTOR_MEM_ALTIVEC_OR_VSX_P (<MODE>mode)\"\n-  \"vsel %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecmove\")])\n+  \"@\n+   xxsel %x0,%x1,%x2,%x3\n+   vsel %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"vecmove\")\n+   (set_attr \"isa\" \"<VSisa>\")])\n \n (define_insn \"altivec_vsel<mode>3\"\n-  [(set (match_operand:VM 0 \"altivec_register_operand\" \"=v\")\n+  [(set (match_operand:VM 0 \"register_operand\" \"=wa,v\")\n \t(ior:VM\n \t  (and:VM\n-\t    (match_operand:VM 3 \"altivec_register_operand\" \"v\")\n-\t    (match_operand:VM 1 \"altivec_register_operand\" \"v\"))\n+\t    (match_operand:VM 3 \"register_operand\" \"wa,v\")\n+\t    (match_operand:VM 1 \"register_operand\" \"wa,v\"))\n \t  (and:VM\n \t    (not:VM (match_dup 3))\n-\t    (match_operand:VM 2 \"altivec_register_operand\" \"v\"))))]\n+\t    (match_operand:VM 2 \"register_operand\" \"wa,v\"))))]\n   \"VECTOR_MEM_ALTIVEC_OR_VSX_P (<MODE>mode)\"\n-  \"vsel %0,%2,%1,%3\"\n-  [(set_attr \"type\" \"vecmove\")])\n+  \"@\n+   xxsel %x0,%x2,%x1,%x3\n+   vsel %0,%2,%1,%3\"\n+  [(set_attr \"type\" \"vecmove\")\n+   (set_attr \"isa\" \"<VSisa>\")])\n \n (define_insn \"altivec_vsel<mode>4\"\n-  [(set (match_operand:VM 0 \"altivec_register_operand\" \"=v\")\n+  [(set (match_operand:VM 0 \"register_operand\" \"=wa,v\")\n \t(ior:VM\n \t  (and:VM\n-\t    (match_operand:VM 1 \"altivec_register_operand\" \"v\")\n-\t    (match_operand:VM 3 \"altivec_register_operand\" \"v\"))\n+\t    (match_operand:VM 1 \"register_operand\" \"wa,v\")\n+\t    (match_operand:VM 3 \"register_operand\" \"wa,v\"))\n \t  (and:VM\n \t    (not:VM (match_dup 3))\n-\t    (match_operand:VM 2 \"altivec_register_operand\" \"v\"))))]\n+\t    (match_operand:VM 2 \"register_operand\" \"wa,v\"))))]\n   \"VECTOR_MEM_ALTIVEC_OR_VSX_P (<MODE>mode)\"\n-  \"vsel %0,%2,%1,%3\"\n-  [(set_attr \"type\" \"vecmove\")])\n+  \"@\n+   xxsel %x0,%x2,%x1,%x3\n+   vsel %0,%2,%1,%3\"\n+  [(set_attr \"type\" \"vecmove\")\n+   (set_attr \"isa\" \"<VSisa>\")])\n \n ;; Fused multiply add.\n "}, {"sha": "0bf04feb6c4ad52c07c2bddb6033a2bae3707d06", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ef1339e9d0d709af6a70b60e584bf7decd761/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ef1339e9d0d709af6a70b60e584bf7decd761/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=5f9ef1339e9d0d709af6a70b60e584bf7decd761", "patch": "@@ -2184,63 +2184,6 @@\n   \"xvcmpge<sd>p. %x0,%x1,%x2\"\n   [(set_attr \"type\" \"<VStype_simple>\")])\n \n-;; Vector select\n-(define_insn \"vsx_xxsel<mode>\"\n-  [(set (match_operand:VSX_L 0 \"vsx_register_operand\" \"=<VSr>,?wa\")\n-\t(ior:VSX_L\n-\t  (and:VSX_L\n-\t    (not:VSX_L (match_operand:VSX_L 3 \"vsx_register_operand\" \"<VSr>,wa\"))\n-\t    (match_operand:VSX_L 1 \"vsx_register_operand\" \"<VSr>,wa\"))\n-\t  (and:VSX_L\n-\t    (match_dup 3)\n-\t    (match_operand:VSX_L 2 \"vsx_register_operand\" \"<VSr>,wa\"))))]\n-  \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"xxsel %x0,%x1,%x2,%x3\"\n-  [(set_attr \"type\" \"vecmove\")\n-   (set_attr \"isa\" \"<VSisa>\")])\n-\n-(define_insn \"vsx_xxsel<mode>2\"\n-  [(set (match_operand:VSX_L 0 \"vsx_register_operand\" \"=<VSr>,?wa\")\n-\t(ior:VSX_L\n-\t  (and:VSX_L\n-\t    (not:VSX_L (match_operand:VSX_L 3 \"vsx_register_operand\" \"<VSr>,wa\"))\n-\t    (match_operand:VSX_L 1 \"vsx_register_operand\" \"<VSr>,wa\"))\n-\t  (and:VSX_L\n-\t    (match_operand:VSX_L 2 \"vsx_register_operand\" \"<VSr>,wa\")\n-\t    (match_dup 3))))]\n-  \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"xxsel %x0,%x1,%x2,%x3\"\n-  [(set_attr \"type\" \"vecmove\")\n-   (set_attr \"isa\" \"<VSisa>\")])\n-\n-(define_insn \"vsx_xxsel<mode>3\"\n-  [(set (match_operand:VSX_L 0 \"vsx_register_operand\" \"=<VSr>,?wa\")\n-\t(ior:VSX_L\n-\t  (and:VSX_L\n-\t    (match_operand:VSX_L 3 \"vsx_register_operand\" \"<VSr>,wa\")\n-\t    (match_operand:VSX_L 1 \"vsx_register_operand\" \"<VSr>,wa\"))\n-\t  (and:VSX_L\n-\t    (not:VSX_L (match_dup 3))\n-\t    (match_operand:VSX_L 2 \"vsx_register_operand\" \"<VSr>,wa\"))))]\n- \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"xxsel %x0,%x2,%x1,%x3\"\n- [(set_attr \"type\" \"vecmove\")\n- (set_attr \"isa\" \"<VSisa>\")])\n-\n-(define_insn \"vsx_xxsel<mode>4\"\n-  [(set (match_operand:VSX_L 0 \"vsx_register_operand\" \"=<VSr>,?wa\")\n-\t(ior:VSX_L\n-\t  (and:VSX_L\n-\t    (match_operand:VSX_L 1 \"vsx_register_operand\" \"<VSr>,wa\")\n-\t    (match_operand:VSX_L 3 \"vsx_register_operand\" \"<VSr>,wa\"))\n-\t  (and:VSX_L\n-\t    (not:VSX_L (match_dup 3))\n-\t    (match_operand:VSX_L 2 \"vsx_register_operand\" \"<VSr>,wa\"))))]\n- \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n- \"xxsel %x0,%x2,%x1,%x3\"\n- [(set_attr \"type\" \"vecmove\")\n- (set_attr \"isa\" \"<VSisa>\")])\n-\n ;; Copy sign\n (define_insn \"vsx_copysign<mode>3\"\n   [(set (match_operand:VSX_F 0 \"vsx_register_operand\" \"=wa\")"}, {"sha": "63fbd2e3be12d2cf8257e3214b2677b3e85e7323", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ef1339e9d0d709af6a70b60e584bf7decd761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ef1339e9d0d709af6a70b60e584bf7decd761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c?ref=5f9ef1339e9d0d709af6a70b60e584bf7decd761", "patch": "@@ -326,7 +326,7 @@ int main ()\n /* { dg-final { scan-assembler-times {\\mvpkudus\\M} 1 } } */\n /* { dg-final { scan-assembler-times \"vperm\" 4 } } */\n /* { dg-final { scan-assembler-times \"xvrdpi\" 2 } } */\n-/* { dg-final { scan-assembler-times \"xxsel\" 10 } } */\n+/* { dg-final { scan-assembler-times \"xxsel\" 5 } } */\n /* { dg-final { scan-assembler-times \"xxlxor\" 6 } } */\n /* { dg-final { scan-assembler-times \"divd\" 8  { target lp64 } } } */\n /* { dg-final { scan-assembler-times \"divdu\" 2  { target lp64 } } } */"}]}