{"sha": "c7b38a8574b6b442b78e40256022ce419ca2eb04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiMzhhODU3NGI2YjQ0MmI3OGU0MDI1NjAyMmNlNDE5Y2EyZWIwNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-11-17T08:57:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-11-17T08:57:45Z"}, "message": "re PR middle-end/29584 (internal compiler error on optimization)\n\n\tPR middle-end/29584\n\t* tree-ssa-forwprop.c (simplify_switch_expr): Don't\n\toptimize if DEF doesn't have integral type.\n\n\t* gcc.dg/torture/pr29584.c: New test.\n\nFrom-SVN: r118921", "tree": {"sha": "a74503e6f86d8e04679e5342ef0f69498c27063f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a74503e6f86d8e04679e5342ef0f69498c27063f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b38a8574b6b442b78e40256022ce419ca2eb04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b38a8574b6b442b78e40256022ce419ca2eb04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b38a8574b6b442b78e40256022ce419ca2eb04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b38a8574b6b442b78e40256022ce419ca2eb04/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e0a5abd2145b2302d4f3515bbb2e051becdea7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0a5abd2145b2302d4f3515bbb2e051becdea7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e0a5abd2145b2302d4f3515bbb2e051becdea7b"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "968e679b9194f3e276a87e2c9343b55eb353db6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7b38a8574b6b442b78e40256022ce419ca2eb04", "patch": "@@ -1,3 +1,9 @@\n+2006-11-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/29584\n+\t* tree-ssa-forwprop.c (simplify_switch_expr): Don't\n+\toptimize if DEF doesn't have integral type.\n+\n 2006-11-16  Mike Stump  <mrs@apple.com>\n \n \t* config/darwin.h (LINK_COMMAND_SPEC): Don't do dwarf stuff on"}, {"sha": "6ba65d40a585f38c9547e7f7f1ab115c67ddae2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7b38a8574b6b442b78e40256022ce419ca2eb04", "patch": "@@ -1,3 +1,8 @@\n+2006-11-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/29584\n+\t* gcc.dg/torture/pr29584.c: New test.\n+\n 2006-11-17  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/tree-ssa/stdarg-2.c, gcc.dg/tree-ssa/stdarg-4.c:"}, {"sha": "84bfddc5e1eb13ca7a20af58dbc9af8b5bd3bf8e", "filename": "gcc/testsuite/gcc.dg/torture/pr29584.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr29584.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr29584.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr29584.c?ref=c7b38a8574b6b442b78e40256022ce419ca2eb04", "patch": "@@ -0,0 +1,28 @@\n+/* PR middle-end/29584 */\n+/* { dg-do compile } */\n+\n+extern void *foo1 (void);\n+extern void foo2 (void);\n+extern void foo3 (void *, void *);\n+extern int foo4 (void);\n+\n+void\n+bar (void)\n+{\n+  int i;\n+  void *s;\n+  for (i = 1; i < 4; i++)\n+    {\n+      if (foo4 ())\n+\tfoo2 ();\n+      switch (0x8000000UL + i * 0x400)\n+\t{\n+\tcase 0x80000000UL ... 0x80000000UL + 0x3a000000UL - 1:\n+\t  s = 0;\n+\t  break;\n+\tdefault:\n+\t  s = foo1 ();\n+\t}\n+      foo3 ((void *) (0x8000000UL + i * 0x400), s);\n+    }\n+}"}, {"sha": "a3caf235062e8ce6e184bcb2053152737ade011e", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b38a8574b6b442b78e40256022ce419ca2eb04/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=c7b38a8574b6b442b78e40256022ce419ca2eb04", "patch": "@@ -934,7 +934,9 @@ simplify_switch_expr (tree stmt)\n \n \t      need_precision = TYPE_PRECISION (ti);\n \t      fail = false;\n-\t      if (TYPE_UNSIGNED (to) && !TYPE_UNSIGNED (ti))\n+\t      if (! INTEGRAL_TYPE_P (ti))\n+\t\tfail = true;\n+\t      else if (TYPE_UNSIGNED (to) && !TYPE_UNSIGNED (ti))\n \t\tfail = true;\n \t      else if (!TYPE_UNSIGNED (to) && TYPE_UNSIGNED (ti))\n \t\tneed_precision += 1;"}]}