{"sha": "ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzYWQ0NWMzY2JlNTFmZTk1OTM2Yzc2NzZhMWZhMmNiNGYzMGMxYw==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2019-06-27T05:24:00Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2019-06-27T05:24:00Z"}, "message": "Call finite_loop_p in RTL to get better finiteness information.\n\ngcc/ChangeLog\n\n2019-06-27  Kewen Lin  <linkw@gcc.gnu.org>\n\n    PR target/62147\n    * gcc/loop-iv.c (find_simple_exit): Call finite_loop_p to update finiteness.\n\ngcc/testsuite/ChangeLog\n\n2019-06-27  Kewen Lin  <linkw@gcc.gnu.org>\n\n    PR target/62147\n    * gcc.target/powerpc/pr62147.c: New test.\n\nFrom-SVN: r272731", "tree": {"sha": "077539d005e5d079a641204c6df92dab25626d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077539d005e5d079a641204c6df92dab25626d03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08c1638dab9becfafc65064891c1c59f5711c27f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c1638dab9becfafc65064891c1c59f5711c27f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c1638dab9becfafc65064891c1c59f5711c27f"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "4a96eb5a1577c5cfa0dcf783504e00cbfa7966c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "patch": "@@ -1,3 +1,9 @@\n+2019-06-27  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\tPR target/62147\n+\t* gcc/loop-iv.c (find_simple_exit): Call finite_loop_p to update\n+\tfiniteness.\n+\n 2019-06-26  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/90883"}, {"sha": "36f9856f5f688407828ea055ab2813d940488bc7", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "patch": "@@ -61,6 +61,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"dumpfile.h\"\n #include \"rtl-iter.h\"\n+#include \"tree-ssa-loop-niter.h\"\n \n /* Possible return values of iv_get_reaching_def.  */\n \n@@ -2997,6 +2998,19 @@ find_simple_exit (struct loop *loop, struct niter_desc *desc)\n \tfprintf (dump_file, \"Loop %d is not simple.\\n\", loop->num);\n     }\n \n+  /* Fix up the finiteness if possible.  We can only do it for single exit,\n+     since the loop is finite, but it's possible that we predicate one loop\n+     exit to be finite which can not be determined as finite in middle-end as\n+     well.  It results in incorrect predicate information on the exit condition\n+     expression.  For example, if says [(int) _1 + -8, + , -8] != 0 finite,\n+     it means _1 can exactly divide -8.  */\n+  if (single_exit (loop) && finite_loop_p (loop))\n+    {\n+      desc->infinite = NULL_RTX;\n+      if (dump_file)\n+\tfprintf (dump_file, \"  infinite updated to finite.\\n\");\n+    }\n+\n   free (body);\n }\n "}, {"sha": "90dcc34a7858adb3976cbeb4300a697c5bfb4b89", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "patch": "@@ -1,6 +1,11 @@\n+2019-06-27  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\tPR target/62147\n+\t* gcc.target/powerpc/pr62147.c: New test.\n+\n 2019-06-26  Jeff Law  <law@redhat.com>\n \n-        PR tree-optimization/90883\n+\tPR tree-optimization/90883\n \t* g++.dg/tree-ssa/pr90883.C: New test.\n \t* gcc.dg/tree-ssa/ssa-dse-36.c: New test.\n "}, {"sha": "635c73711da153fedd6f83e14f012dffc6e31593", "filename": "gcc/testsuite/gcc.target/powerpc/pr62147.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr62147.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr62147.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr62147.c?ref=ce3ad45c3cbe51fe95936c7676a1fa2cb4f30c1c", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-options \"-O2 -fno-tree-loop-distribute-patterns\" } */\n+\n+/* Note that it's required to disable loop-distribute-patterns, otherwise the\n+   loop will be optimized to memset.  */\n+\n+/* Expect loop_iv can know the loop is finite so the doloop_optimize\n+   can perform the doloop transformation.  */\n+\n+typedef struct {\n+  int l;\n+  int b[258];\n+} S;\n+\n+void clear (S* s )\n+{\n+  int i;\n+  int len = s->l + 1;\n+\n+  for (i = 0; i <= len; i++)\n+    s->b[i] = 0;\n+}\n+\n+/* { dg-final { scan-assembler {\\mbdnz\\M} } } */"}]}