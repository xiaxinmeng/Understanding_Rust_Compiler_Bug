{"sha": "74838de312b5e8abae7c8482d8d7da2268cc9624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ4MzhkZTMxMmI1ZThhYmFlN2M4NDgyZDhkN2RhMjI2OGNjOTYyNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-05-25T13:42:58Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-05-25T13:42:58Z"}, "message": "Implement x86 pause intrinsic.\n\ngcc/\n\n2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_PAUSE.\n\t(bdesc_special_args): Add pause intrinsic.\n\n\t* config/i386/i386.md (UNSPEC_PAUSE): New.\n\t(pause): Likewise.\n\t(*pause): Likewise.\n\t* config/i386/ia32intrin.h (__pause): Likewise.\n\n\t* doc/extend.texi (X86 Built-in Functions): Add documentation for\n\tpause intrinsic.\n\ngcc/testsuite/\n\n2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t * gcc.target/i386/pause-1.c: New.\n\nFrom-SVN: r174197", "tree": {"sha": "76212b8d0661bb78a1a0eb60f0cebf288a991c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76212b8d0661bb78a1a0eb60f0cebf288a991c95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74838de312b5e8abae7c8482d8d7da2268cc9624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74838de312b5e8abae7c8482d8d7da2268cc9624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74838de312b5e8abae7c8482d8d7da2268cc9624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74838de312b5e8abae7c8482d8d7da2268cc9624/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d24ad7d6e9397bc1514fe39e9855b0ac6a5489a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24ad7d6e9397bc1514fe39e9855b0ac6a5489a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24ad7d6e9397bc1514fe39e9855b0ac6a5489a2"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "873de19283131ec5632eb49e53b69621f7ad88af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -1,3 +1,16 @@\n+2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_PAUSE.\n+\t(bdesc_special_args): Add pause intrinsic.\n+\n+\t* config/i386/i386.md (UNSPEC_PAUSE): New.\n+\t(pause): Likewise.\n+\t(*pause): Likewise.\n+\t* config/i386/ia32intrin.h (__pause): Likewise.\n+\n+\t* doc/extend.texi (X86 Built-in Functions): Add documentation for\n+\tpause intrinsic.\n+\n 2011-05-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/46728"}, {"sha": "c7da6d3f26e84ea1c9e5ac0c54ce0acf354948c4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -23912,6 +23912,7 @@ enum ix86_builtins\n   IX86_BUILTIN_CLFLUSH,\n   IX86_BUILTIN_MFENCE,\n   IX86_BUILTIN_LFENCE,\n+  IX86_BUILTIN_PAUSE,\n \n   IX86_BUILTIN_BSRSI,\n   IX86_BUILTIN_BSRDI,\n@@ -24664,6 +24665,7 @@ static const struct builtin_description bdesc_special_args[] =\n {\n   { ~OPTION_MASK_ISA_64BIT, CODE_FOR_rdtsc, \"__builtin_ia32_rdtsc\", IX86_BUILTIN_RDTSC, UNKNOWN, (int) UINT64_FTYPE_VOID },\n   { ~OPTION_MASK_ISA_64BIT, CODE_FOR_rdtscp, \"__builtin_ia32_rdtscp\", IX86_BUILTIN_RDTSCP, UNKNOWN, (int) UINT64_FTYPE_PUNSIGNED },\n+  { ~OPTION_MASK_ISA_64BIT, CODE_FOR_pause, \"__builtin_ia32_pause\", IX86_BUILTIN_PAUSE, UNKNOWN, (int) VOID_FTYPE_VOID },\n \n   /* MMX */\n   { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_emms, \"__builtin_ia32_emms\", IX86_BUILTIN_EMMS, UNKNOWN, (int) VOID_FTYPE_VOID },"}, {"sha": "801573c1e980801b634cb31e2f8b13bfc5e453bc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -108,6 +108,7 @@\n   UNSPEC_TRUNC_NOOP\n   UNSPEC_DIV_ALREADY_SPLIT\n   UNSPEC_CALL_NEEDS_VZEROUPPER\n+  UNSPEC_PAUSE\n \n   ;; For SSE/MMX support:\n   UNSPEC_FIX_NOTRUNC\n@@ -17716,6 +17717,25 @@\n   [(set_attr \"type\" \"other\")\n    (set_attr \"prefix_extra\" \"1\")])\n \n+(define_expand \"pause\"\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_PAUSE))]\n+  \"\"\n+{\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n+  MEM_VOLATILE_P (operands[0]) = 1;\n+})\n+\n+;; Use \"rep; nop\", instead of \"pause\", to support older assemblers.\n+;; They have the same encoding.\n+(define_insn \"*pause\"\n+  [(set (match_operand:BLK 0 \"\" \"\")\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_PAUSE))]\n+  \"\"\n+  \"rep; nop\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"memory\" \"unknown\")])\n+\n (include \"mmx.md\")\n (include \"sse.md\")\n (include \"sync.md\")"}, {"sha": "42ebd17cdbb2525f77d9368df5233b9b965d00b3", "filename": "gcc/config/i386/ia32intrin.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fconfig%2Fi386%2Fia32intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fconfig%2Fi386%2Fia32intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fia32intrin.h?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -153,6 +153,14 @@ __rord (unsigned int __X, int __C)\n   return (__X >> __C) | (__X << (32 - __C));\n }\n \n+/* Pause */\n+extern __inline void\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+__pause (void)\n+{\n+  __builtin_ia32_pause ();\n+}\n+\n #ifdef __x86_64__\n /* 64bit bsf */\n extern __inline int"}, {"sha": "bd2f08023ea1d725f95c6d068ff7d591c6d8e979", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -8695,6 +8695,13 @@ __float128 __builtin_fabsq (__float128)\n __float128 __builtin_copysignq (__float128, __float128)\n @end smallexample\n \n+The following built-in function is always available.\n+\n+@table @code\n+@item void __builtin_ia32_pause (void)\n+Generates the @code{pause} machine instruction with full memory barrier.\n+@end table\n+\n The following floating point built-in functions are made available in the\n 64-bit mode.\n "}, {"sha": "4258b91106cd389d30b01041da0826265b0da000", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -1,3 +1,7 @@\n+2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t * gcc.target/i386/pause-1.c: New.\n+\n 2011-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/stack-usage-1.c: Adjust comment."}, {"sha": "50eb8e7e2fb2be437a69b2cca12a7bad943daa37", "filename": "gcc/testsuite/gcc.target/i386/pause-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpause-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74838de312b5e8abae7c8482d8d7da2268cc9624/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpause-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpause-1.c?ref=74838de312b5e8abae7c8482d8d7da2268cc9624", "patch": "@@ -0,0 +1,11 @@\n+/* Test that we generate pause instruction.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -dp\" } */\n+/* { dg-final { scan-assembler-times \"\\\\*pause\" 1 } } */\n+\n+#include <x86intrin.h>\n+\n+void foo(void)\n+{\n+  __pause();\n+}"}]}