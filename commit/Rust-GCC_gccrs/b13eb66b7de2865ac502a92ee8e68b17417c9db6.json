{"sha": "b13eb66b7de2865ac502a92ee8e68b17417c9db6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEzZWI2NmI3ZGUyODY1YWM1MDJhOTJlZThlNjhiMTc0MTdjOWRiNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-03-31T07:04:37Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-03-31T07:04:37Z"}, "message": "hashtab.h (hashval_t): New type.\n\n\t* hashtab.h (hashval_t): New type.\n\t(htab_find_with_hash): Use it as an argument.\n\t(htab_find_slot_with_hash): Likewise.\n\n\t* hashtab.c (find_empty_slot_for_expand): Use hashval_t for hash\n\tcodes.\n\t(htab_find_with_hash): Likewise.\n\t(htab_find_slot_with_hash): Likewise.\n\nFrom-SVN: r32842", "tree": {"sha": "0bbfb81bb3327866160b992f8c9fb040addd6364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bbfb81bb3327866160b992f8c9fb040addd6364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b13eb66b7de2865ac502a92ee8e68b17417c9db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13eb66b7de2865ac502a92ee8e68b17417c9db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b13eb66b7de2865ac502a92ee8e68b17417c9db6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13eb66b7de2865ac502a92ee8e68b17417c9db6/comments", "author": null, "committer": null, "parents": [{"sha": "d68894a1c80dfc898985c664811134e02946ef3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68894a1c80dfc898985c664811134e02946ef3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68894a1c80dfc898985c664811134e02946ef3a"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "dd2d6673475eda1a17f79c1bd5111c932bb0432f", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13eb66b7de2865ac502a92ee8e68b17417c9db6/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13eb66b7de2865ac502a92ee8e68b17417c9db6/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=b13eb66b7de2865ac502a92ee8e68b17417c9db6", "patch": "@@ -1,3 +1,9 @@\n+2000-03-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* hashtab.h (hashval_t): New type.\n+\t(htab_find_with_hash): Use it as an argument.\n+\t(htab_find_slot_with_hash): Likewise.\n+\n 2000-03-14  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* hashtab.h (htab_trav): Modify type so that first arg is of type"}, {"sha": "2426708e378d28f0d4318904bce97916ee8f6d8b", "filename": "include/hashtab.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13eb66b7de2865ac502a92ee8e68b17417c9db6/include%2Fhashtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13eb66b7de2865ac502a92ee8e68b17417c9db6/include%2Fhashtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fhashtab.h?ref=b13eb66b7de2865ac502a92ee8e68b17417c9db6", "patch": "@@ -1,5 +1,5 @@\n /* An expandable hash tables datatype.  \n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov (vmakarov@cygnus.com).\n \n This program is free software; you can redistribute it and/or modify\n@@ -38,10 +38,13 @@ extern \"C\" {\n \n #include <ansidecl.h>\n \n+/* The type for a hash code.  */\n+typedef unsigned int hashval_t;\n+\n /* Callback function pointer types.  */\n \n /* Calculate hash of a table entry.  */\n-typedef unsigned int (*htab_hash) PARAMS ((const void *));\n+typedef hashval_t (*htab_hash) PARAMS ((const void *));\n \n /* Compare a table entry with a possible entry.  The entry already in\n    the table always comes first, so the second element can be of a\n@@ -109,9 +112,9 @@ extern void\thtab_empty\tPARAMS ((htab_t));\n extern void    *htab_find\tPARAMS ((htab_t, const void *));\n extern void   **htab_find_slot\tPARAMS ((htab_t, const void *, int));\n extern void    *htab_find_with_hash\t\tPARAMS ((htab_t, const void *,\n-\t\t\t\t\t\t\t unsigned int));\n+\t\t\t\t\t\t\t hashval_t));\n extern void   **htab_find_slot_with_hash\tPARAMS ((htab_t, const void *,\n-\t\t\t\t\t\t\t unsigned int, int));\n+\t\t\t\t\t\t\t hashval_t, int));\n extern void\thtab_clear_slot\tPARAMS ((htab_t, void **));\n extern void\thtab_remove_elt\tPARAMS ((htab_t, void *));\n "}, {"sha": "e51cea6d2c84a1c90d03394eb198cba7df2a1b49", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13eb66b7de2865ac502a92ee8e68b17417c9db6/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13eb66b7de2865ac502a92ee8e68b17417c9db6/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=b13eb66b7de2865ac502a92ee8e68b17417c9db6", "patch": "@@ -1,3 +1,10 @@\n+2000-03-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* hashtab.c (find_empty_slot_for_expand): Use hashval_t for hash\n+\tcodes.\n+\t(htab_find_with_hash): Likewise.\n+\t(htab_find_slot_with_hash): Likewise.\n+\t\n 2000-03-29  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* hashtab.c (htab_find_with_hash): Avoid calculating hash2"}, {"sha": "ba897b2b03d1a1e507e7eeeb1c2dbcdd4ab244fa", "filename": "libiberty/hashtab.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13eb66b7de2865ac502a92ee8e68b17417c9db6/libiberty%2Fhashtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13eb66b7de2865ac502a92ee8e68b17417c9db6/libiberty%2Fhashtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhashtab.c?ref=b13eb66b7de2865ac502a92ee8e68b17417c9db6", "patch": "@@ -1,5 +1,5 @@\n /* An expandable hash tables datatype.  \n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov (vmakarov@cygnus.com).\n \n This file is part of the libiberty library.\n@@ -155,10 +155,10 @@ htab_empty (htab)\n static void **\n find_empty_slot_for_expand (htab, hash)\n      htab_t htab;\n-     unsigned int hash;\n+     hashval_t hash;\n {\n   size_t size = htab->size;\n-  unsigned int hash2 = 1 + hash % (size - 2);\n+  hashval_t hash2 = 1 + hash % (size - 2);\n   unsigned int index = hash % size;\n \n   for (;;)\n@@ -221,9 +221,10 @@ void *\n htab_find_with_hash (htab, element, hash)\n      htab_t htab;\n      const void *element;\n-     unsigned int hash;\n+     hashval_t hash;\n {\n-  unsigned int index, hash2;\n+  unsigned int index;\n+  hashval_t hash2;\n   size_t size;\n   void *entry;\n \n@@ -272,11 +273,12 @@ void **\n htab_find_slot_with_hash (htab, element, hash, insert)\n      htab_t htab;\n      const void *element;\n-     unsigned int hash;\n+     hashval_t hash;\n      int insert;\n {\n   void **first_deleted_slot;\n-  unsigned int index, hash2;\n+  unsigned int index;\n+  hashval_t hash2;\n   size_t size;\n \n   if (insert && htab->size * 3 <= htab->n_elements * 4)"}]}