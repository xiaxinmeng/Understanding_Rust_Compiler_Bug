{"sha": "4b342b91f00c9b8a1768c906edea9407ea18f76c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzNDJiOTFmMDBjOWI4YTE3NjhjOTA2ZWRlYTk0MDdlYTE4Zjc2Yw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-11T13:06:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:06:57Z"}, "message": "einfo.ads, [...]: Minor reformatting.\n\n2013-04-11  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, sem_util.adb, exp_ch6.adb, xgnatugn.adb: Minor\n\treformatting.\n\nFrom-SVN: r197788", "tree": {"sha": "67f3107923b6885a39feaae2f216e524297a4105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f3107923b6885a39feaae2f216e524297a4105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b342b91f00c9b8a1768c906edea9407ea18f76c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b342b91f00c9b8a1768c906edea9407ea18f76c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b342b91f00c9b8a1768c906edea9407ea18f76c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b342b91f00c9b8a1768c906edea9407ea18f76c/comments", "author": null, "committer": null, "parents": [{"sha": "da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f"}], "stats": {"total": 86, "additions": 45, "deletions": 41}, "files": [{"sha": "cc11908b17b76b68a51be743c53364f1f4df80f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4b342b91f00c9b8a1768c906edea9407ea18f76c", "patch": "@@ -1,3 +1,8 @@\n+2013-04-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, sem_util.adb, exp_ch6.adb, xgnatugn.adb: Minor\n+\treformatting.\n+\n 2013-04-11  Doug Rupp  <rupp@adacore.com>\n \n \t* gnatlink.adb: Fold program basename to lower case on VMS for"}, {"sha": "9d57278b11b5819194ded585ae914b4098da63c8", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=4b342b91f00c9b8a1768c906edea9407ea18f76c", "patch": "@@ -2843,7 +2843,7 @@ package Einfo is\n --       Applies to all entities. True for task types and subtypes\n \n --    Is_Thunk (Flag225)\n---       Applies to all entities. True for subprograms that are thunks: that is\n+--       Defined in all entities. True for subprograms that are thunks: that is\n --       small subprograms built by the expander for tagged types that cover\n --       interface types. As part of the runtime call to an interface, thunks\n --       displace the pointer to the object (pointer named \"this\" in the C++\n@@ -4831,7 +4831,7 @@ package Einfo is\n    --  non-synthesized attributes, of the corresponding set procedures) are\n    --  in the Einfo body.\n \n-   --  The following attributes apply to all entities\n+   --  The following attributes are defined in all entities\n \n    --    Ekind                               (Ekind)\n \n@@ -4912,6 +4912,7 @@ package Einfo is\n    --    Is_Shared_Passive                   (Flag60)\n    --    Is_Statically_Allocated             (Flag28)\n    --    Is_Tagged_Type                      (Flag55)\n+   --    Is_Thunk                            (Flag225)\n    --    Is_Trivial_Subprogram               (Flag235)\n    --    Is_Unchecked_Union                  (Flag117)\n    --    Is_Visible_Formal                   (Flag206)\n@@ -5388,7 +5389,6 @@ package Einfo is\n    --    Is_Private_Descendant               (Flag53)\n    --    Is_Private_Primitive                (Flag245)  (non-generic case only)\n    --    Is_Pure                             (Flag44)\n-   --    Is_Thunk                            (Flag225)\n    --    Is_Visible_Lib_Unit                 (Flag116)\n    --    Needs_No_Actuals                    (Flag22)\n    --    Requires_Overriding                 (Flag213)  (non-generic case only)\n@@ -5513,7 +5513,6 @@ package Einfo is\n    --    Is_Pure                             (Flag44)\n    --    Is_Intrinsic_Subprogram             (Flag64)\n    --    Is_Primitive                        (Flag218)\n-   --    Is_Thunk                            (Flag225)\n    --    Default_Expressions_Processed       (Flag108)\n    --    Aren't there more flags and fields? seems like this list should be\n    --    more similar to the E_Function list, which is much longer ???\n@@ -5661,7 +5660,6 @@ package Einfo is\n    --    Is_Private_Descendant               (Flag53)\n    --    Is_Private_Primitive                (Flag245)  (non-generic case only)\n    --    Is_Pure                             (Flag44)\n-   --    Is_Thunk                            (Flag225)\n    --    Is_Valued_Procedure                 (Flag127)\n    --    Is_Visible_Lib_Unit                 (Flag116)\n    --    Needs_No_Actuals                    (Flag22)"}, {"sha": "d28510cb0382059223da1a1f525d9c56db97155a", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=4b342b91f00c9b8a1768c906edea9407ea18f76c", "patch": "@@ -7221,9 +7221,7 @@ package body Exp_Ch6 is\n       --  the object is returned by reference and the maximum functionality\n       --  required is just to displace the pointer.\n \n-      elsif Is_Thunk (Current_Scope)\n-        and then Is_Interface (Exptyp)\n-      then\n+      elsif Is_Thunk (Current_Scope) and then Is_Interface (Exptyp) then\n          null;\n \n       elsif not Requires_Transient_Scope (R_Type) then"}, {"sha": "806b6484a50e77988c6ec3a2b781ffc60cc249ae", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4b342b91f00c9b8a1768c906edea9407ea18f76c", "patch": "@@ -7756,9 +7756,7 @@ package body Sem_Util is\n       if Compile_Time_Known_Value (Exp) then\n          return True;\n \n-      elsif Is_Entity_Name (Exp)\n-        and then Present (Entity (Exp))\n-      then\n+      elsif Is_Entity_Name (Exp) and then Present (Entity (Exp)) then\n          return Is_Constant_Object (Entity (Exp))\n            or else Ekind (Entity (Exp)) = E_Enumeration_Literal;\n \n@@ -9582,11 +9580,10 @@ package body Sem_Util is\n       return Ekind (Op) = E_Function\n         and then Is_Intrinsic_Subprogram (Op)\n         and then\n-          ((Present_System_Aux\n-            and then Scope (Op) = System_Aux_Id)\n-           or else\n-           (True_VMS_Target\n-             and then Scope (Scope (Op)) = RTU_Entity (System)));\n+          ((Present_System_Aux and then Scope (Op) = System_Aux_Id)\n+             or else\n+              (True_VMS_Target\n+                and then Scope (Scope (Op)) = RTU_Entity (System)));\n    end Is_VMS_Operator;\n \n    -----------------"}, {"sha": "6ade0742d70d637f195a937149a90df4948bb52a", "filename": "gcc/ada/xgnatugn.adb", "status": "modified", "additions": 31, "deletions": 25, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Fxgnatugn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b342b91f00c9b8a1768c906edea9407ea18f76c/gcc%2Fada%2Fxgnatugn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxgnatugn.adb?ref=4b342b91f00c9b8a1768c906edea9407ea18f76c", "patch": "@@ -181,16 +181,15 @@ procedure Xgnatugn is\n    Target : Target_Type;\n    --  The Target variable is initialized using the command line\n \n-   Valid_Characters : constant Character_Set :=\n-                        To_Set (Span => (' ',  '~'));\n+   Valid_Characters : constant Character_Set := To_Set (Span => (' ',  '~'));\n    --  This array controls which characters are permitted in the input\n    --  file (after line breaks have been removed). Valid characters\n    --  are all printable ASCII characters and the space character.\n \n    Word_Characters : constant Character_Set :=\n                        (To_Set (Ranges =>\n                                   (('0', '9'), ('a', 'z'), ('A', 'Z')))\n-                        or To_Set (\"?-_~\"));\n+                         or To_Set (\"?-_~\"));\n    --  The characters which are permitted in words. Other (valid)\n    --  characters are assumed to be delimiters between words. Note that\n    --  this set has to include all characters of the source words of the\n@@ -432,8 +431,9 @@ procedure Xgnatugn is\n                              Trim (Line (1 .. Split - 1), Both);\n                   Target : constant String :=\n                              Trim (Line (Split + 1 .. Line'Last), Both);\n-                  Two_Spaces : constant Natural :=\n-                                 Index (Source, \"  \");\n+\n+                  Two_Spaces : constant Natural := Index (Source, \"  \");\n+\n                   Non_Word_Character : constant Natural :=\n                                          Index (Source,\n                                                 Word_Characters or\n@@ -469,7 +469,6 @@ procedure Xgnatugn is\n                            declare\n                               Prefix : String renames\n                                          Source (Source'First .. J - 1);\n-\n                            begin\n                               if not Is_Known_Word (Prefix) then\n                                  Error (Dictionary_File,\n@@ -623,7 +622,7 @@ procedure Xgnatugn is\n                          (VMS_Second_Character + 1, VMS_Third_Character - 1));\n                return;\n             end;\n-         end if;                        --  VMS_Alternative\n+         end if;\n \n          --  The Word case. Search for characters not in Word_Characters.\n          --  We have found a word if the first non-word character is not\n@@ -663,7 +662,7 @@ procedure Xgnatugn is\n \n       procedure Rewrite_Word is\n          First_Word : String\n-           renames Line (Token.Span.First .. Token.Span.Last);\n+                        renames Line (Token.Span.First .. Token.Span.Last);\n \n       begin\n          --  We do not perform any error checking below, so we can just skip\n@@ -681,7 +680,7 @@ procedure Xgnatugn is\n             --  longest possible sequence we can rewrite.\n \n             declare\n-               Seq : Token_Span := Token.Span;\n+               Seq        : Token_Span := Token.Span;\n                Lost_Space : Boolean := False;\n \n             begin\n@@ -691,23 +690,25 @@ procedure Xgnatugn is\n                     and then Line (Token.Span.First .. Token.Span.Last) = \" \"\n                   then\n                      Next_Token;\n+\n                      if Token.Kind /= Word\n                        or else not Is_Known_Word (Line (Seq.First\n                                                         .. Token.Span.Last))\n                      then\n-                        --  When we reach this point, the following\n-                        --  conditions are true:\n-                        --\n-                        --  Seq is a known word.\n-                        --  The previous token was a space character.\n-                        --  Seq extended to the current token is not a\n-                        --  known word.\n+                        --  When we reach this point, the following conditions\n+                        --  are true:\n+\n+                        --    Seq is a known word\n+\n+                        --    The previous token was a space character\n+\n+                        --    Seq extended to the current token is not a\n+                        --    known word.\n \n                         Lost_Space := True;\n                         exit;\n \n                      else\n-\n                         --  Extend Seq to cover the current (known) word\n \n                         Seq.Last := Token.Span.Last;\n@@ -717,10 +718,12 @@ procedure Xgnatugn is\n                   else\n                      --  When we reach this point, the following conditions\n                      --  are true:\n-                     --\n-                     --  Seq is a known word.\n-                     --  The previous token was a word.\n-                     --  The current token is not a space character.\n+\n+                     --    Seq is a known word\n+\n+                     --    The previous token was a word\n+\n+                     --    The current token is not a space character.\n \n                      exit;\n                   end if;\n@@ -749,8 +752,8 @@ procedure Xgnatugn is\n \n             Next_Token;\n             if Token.Kind = Word\n-              and then Is_Extension (Line (Token.Span.First\n-                                           .. Token.Span.Last))\n+              and then\n+                Is_Extension (Line (Token.Span.First .. Token.Span.Last))\n             then\n                --  We have discovered a file extension. Convert the file\n                --  name to upper case.\n@@ -793,6 +796,7 @@ procedure Xgnatugn is\n             --  Rewrite_Word would have handled it.\n \n             Next_Token;\n+\n             if Token.Kind = Word\n               and then Is_Extension (Line (Token.Span.First\n                                            .. Token.Span.Last))\n@@ -803,6 +807,7 @@ procedure Xgnatugn is\n             else\n                Append (Rewritten_Line, '.');\n             end if;\n+\n          else\n             Append (Rewritten_Line, Line (Token.Span.First\n                                           .. Token.Span.Last));\n@@ -839,6 +844,7 @@ procedure Xgnatugn is\n                   Append (Rewritten_Line, Line (Token.Non_VMS.First\n                                                 .. Token.Non_VMS.Last));\n                end if;\n+\n                Next_Token;\n \n             when VMS_Error =>\n@@ -859,6 +865,7 @@ procedure Xgnatugn is\n       while not End_Of_File (Source_File.Data) loop\n          declare\n             Line      : constant String := Get_Line (Source_File'Access);\n+\n             Rewritten : constant String := Rewrite_Source_Line (Line);\n             --  We unconditionally rewrite the line so that we can check the\n             --  syntax of all lines, and not only those which are actually\n@@ -884,8 +891,7 @@ procedure Xgnatugn is\n    procedure Initialize_Extensions is\n \n       procedure Add (Extension : String);\n-      --  Adds an extension which is replaced with itself (in upper\n-      --  case).\n+      --  Adds an extension which is replaced with itself (in upper case)\n \n       procedure Add (Extension, Replacement : String);\n       --  Adds an extension with a custom replacement"}]}