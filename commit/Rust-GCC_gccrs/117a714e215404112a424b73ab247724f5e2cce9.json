{"sha": "117a714e215404112a424b73ab247724f5e2cce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE3YTcxNGUyMTU0MDQxMTJhNDI0YjczYWIyNDc3MjRmNWUyY2NlOQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-10-24T16:50:41Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-10-24T16:50:41Z"}, "message": "re PR fortran/41784 ([OOP] ICE in load_derived_extensions)\n\n2009-10-24  Janus Weil  <janus@gcc.gnu.org>\n\t    Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/41784\n\t* module.c (load_derived_extensions): Skip symbols which are not being\n\tloaded.\n\n\n2009-10-24  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41784\n\t* gfortran.dg/extends_8.f03: New test.\n\nCo-Authored-By: Paul Thomas <pault@gcc.gnu.org>\n\nFrom-SVN: r153534", "tree": {"sha": "e1b101c60325bd31e7a11be3d3a69b7ccd19c562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1b101c60325bd31e7a11be3d3a69b7ccd19c562"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/117a714e215404112a424b73ab247724f5e2cce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117a714e215404112a424b73ab247724f5e2cce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/117a714e215404112a424b73ab247724f5e2cce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117a714e215404112a424b73ab247724f5e2cce9/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a8415303ec367026e57548885700c57b923f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a8415303ec367026e57548885700c57b923f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a8415303ec367026e57548885700c57b923f2f"}], "stats": {"total": 58, "additions": 49, "deletions": 9}, "files": [{"sha": "c97733c7c4febd3d7b67ce4509ae8071d5ec1435", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=117a714e215404112a424b73ab247724f5e2cce9", "patch": "@@ -1,3 +1,10 @@\n+2009-10-24  Janus Weil  <janus@gcc.gnu.org>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/41784\n+\t* module.c (load_derived_extensions): Skip symbols which are not being\n+\tloaded.\n+\n 2009-10-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41772"}, {"sha": "b2ad6ecc4778a5a31fee216a8c764abdc423495e", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=117a714e215404112a424b73ab247724f5e2cce9", "patch": "@@ -3994,6 +3994,14 @@ load_derived_extensions (void)\n       info = get_integer (symbol);\n       derived = info->u.rsym.sym;\n \n+      /* This one is not being loaded.  */\n+      if (!info || !derived)\n+\t{\n+\t  while (peek_atom () != ATOM_RPAREN)\n+\t    skip_list ();\n+\t  continue;\n+\t}\n+\n       gcc_assert (derived->attr.flavor == FL_DERIVED);\n       if (derived->f2k_derived == NULL)\n \tderived->f2k_derived = gfc_get_namespace (NULL, 0);\n@@ -4008,16 +4016,19 @@ load_derived_extensions (void)\n \t  nuse = number_use_names (name, false);\n \t  j = 1;\n \t  p = find_use_name_n (name, &j, false);\n-\t  st = gfc_find_symtree (gfc_current_ns->sym_root, p);\n-\t  dt = st->n.sym;\n-\t  st = gfc_find_symtree (derived->f2k_derived->sym_root, name);\n-\t  if (st == NULL)\n+\t  if (p)\n \t    {\n-\t      /* Only use the real name in f2k_derived to ensure a single\n-\t\t symtree.  */\n-\t      st = gfc_new_symtree (&derived->f2k_derived->sym_root, name);\n-\t      st->n.sym = dt;\n-\t      st->n.sym->refs++;\n+\t      st = gfc_find_symtree (gfc_current_ns->sym_root, p);\n+\t      dt = st->n.sym;\n+\t      st = gfc_find_symtree (derived->f2k_derived->sym_root, name);\n+\t      if (st == NULL)\n+\t\t{\n+\t\t  /* Only use the real name in f2k_derived to ensure a single\n+\t\t    symtree.  */\n+\t\t  st = gfc_new_symtree (&derived->f2k_derived->sym_root, name);\n+\t\t  st->n.sym = dt;\n+\t\t  st->n.sym->refs++;\n+\t\t}\n \t    }\n \t  mio_rparen ();\n \t}"}, {"sha": "99c187ead9cc70e25b45c21da99720ea24aecaac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=117a714e215404112a424b73ab247724f5e2cce9", "patch": "@@ -1,3 +1,8 @@\n+2009-10-24  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41784\n+\t* gfortran.dg/extends_8.f03: New test.\n+\n 2009-10-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/pack4.ads: New test."}, {"sha": "4af5ab9327c3c72a35d1217e8014ca51a4b99d04", "filename": "gcc/testsuite/gfortran.dg/extends_8.f03", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_8.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117a714e215404112a424b73ab247724f5e2cce9/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_8.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_8.f03?ref=117a714e215404112a424b73ab247724f5e2cce9", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR 41784: [OOP] ICE in load_derived_extensions\n+!\n+! Contributed by Salvatore Filippone <sfilippone@uniroma2.it>\n+\n+module m\n+  type  :: A\n+  end type\n+  type, extends(A) :: B\n+  end type\n+end module\n+\n+use m, only: A\n+end\n+ \n+! { dg-final { cleanup-modules \"m\" } }"}]}