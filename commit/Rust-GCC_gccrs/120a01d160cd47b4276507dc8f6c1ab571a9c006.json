{"sha": "120a01d160cd47b4276507dc8f6c1ab571a9c006", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwYTAxZDE2MGNkNDdiNDI3NjUwN2RjOGY2YzFhYjU3MWE5YzAwNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-06-15T07:06:19Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-06-15T07:06:19Z"}, "message": "[openacc] Disable pass_thread_jumps for IFN_UNIQUE\n\nIf we compile the openacc testcase with -fopenacc -O2, we run into a SIGSEGV\nor assert.  The root cause for this is that pass_thread_jumps breaks the\ninvariant that OACC_FORK and OACC_JOIN mark the start and end of a\nsingle-entry-single-exit region.\n\nFix this by bailing out when encountering an IFN_UNIQUE in\nthread_jumps::profitable_jump_thread_path.\n\nBootstrapped and reg-tested on x86_64.\nBuild and reg-tested libgomp on x86_64 with nvptx accelerator.\n\n2019-06-15  Tom de Vries  <tdevries@suse.de>\n\n\tPR tree-optimization/90009\n\t* tree-ssa-threadbackward.c (thread_jumps::profitable_jump_thread_path):\n\tReturn NULL if bb contains IFN_UNIQUE.\n\n\t* testsuite/libgomp.oacc-c-c++-common/pr90009.c: New test.\n\nFrom-SVN: r272321", "tree": {"sha": "00e3daa8ac952df48b317271c3370dac780e62c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00e3daa8ac952df48b317271c3370dac780e62c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/120a01d160cd47b4276507dc8f6c1ab571a9c006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120a01d160cd47b4276507dc8f6c1ab571a9c006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120a01d160cd47b4276507dc8f6c1ab571a9c006", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120a01d160cd47b4276507dc8f6c1ab571a9c006/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2789efe3ee85f85ec83139fab6930cf2175be06a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2789efe3ee85f85ec83139fab6930cf2175be06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2789efe3ee85f85ec83139fab6930cf2175be06a"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "4f75fb12e2613221da993e5bd7e729a5148dafc0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a01d160cd47b4276507dc8f6c1ab571a9c006/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a01d160cd47b4276507dc8f6c1ab571a9c006/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=120a01d160cd47b4276507dc8f6c1ab571a9c006", "patch": "@@ -1,3 +1,9 @@\n+2019-06-15  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tree-optimization/90009\n+\t* tree-ssa-threadbackward.c (thread_jumps::profitable_jump_thread_path):\n+\tReturn NULL if bb contains IFN_UNIQUE.\n+\n 2019-06-14  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (CCEITHER): New define_mode_iterator."}, {"sha": "1ff870ad00bc929a3e79a07ac63b4ee1ee476922", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a01d160cd47b4276507dc8f6c1ab571a9c006/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a01d160cd47b4276507dc8f6c1ab571a9c006/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=120a01d160cd47b4276507dc8f6c1ab571a9c006", "patch": "@@ -261,6 +261,11 @@ thread_jumps::profitable_jump_thread_path (basic_block bbi, tree name,\n \t       gsi_next_nondebug (&gsi))\n \t    {\n \t      gimple *stmt = gsi_stmt (gsi);\n+\t      if (gimple_call_internal_p (stmt, IFN_UNIQUE))\n+\t\t{\n+\t\t  m_path.pop ();\n+\t\t  return NULL;\n+\t\t}\n \t      /* Do not count empty statements and labels.  */\n \t      if (gimple_code (stmt) != GIMPLE_NOP\n \t\t  && !(gimple_code (stmt) == GIMPLE_ASSIGN"}, {"sha": "9a1fcff1fa3f63d127c3f6705fa4c5f6b810ff94", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a01d160cd47b4276507dc8f6c1ab571a9c006/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a01d160cd47b4276507dc8f6c1ab571a9c006/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=120a01d160cd47b4276507dc8f6c1ab571a9c006", "patch": "@@ -1,3 +1,8 @@\n+2019-06-15  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tree-optimization/90009\n+\t* testsuite/libgomp.oacc-c-c++-common/pr90009.c: New test.\n+\n 2019-06-13  Feng Xue  <fxue@os.amperecomputing.com>\n \n \tPR tree-optimization/89713"}, {"sha": "58d1039dd8d9984f894084d84a5134887f664480", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr90009.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a01d160cd47b4276507dc8f6c1ab571a9c006/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr90009.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a01d160cd47b4276507dc8f6c1ab571a9c006/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr90009.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr90009.c?ref=120a01d160cd47b4276507dc8f6c1ab571a9c006", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+\n+#include <stdlib.h>\n+\n+#define N 100\n+\n+int data[N];\n+\n+int\n+main (void)\n+{\n+  int n = N, b = 3;\n+#pragma acc parallel num_workers(2)\n+  {\n+    int c;\n+    if (n)\n+      c = 0;\n+    else\n+      c = b;\n+\n+#pragma acc loop worker\n+    for (int i = 0; i < n; i++)\n+      data[i] = 1;\n+\n+    if (c)\n+      data[0] = 2;\n+  }\n+\n+  for (int i = 0; i < n; i++)\n+    if (data[i] != 1)\n+      abort ();\n+\n+  return 0;\n+}"}]}