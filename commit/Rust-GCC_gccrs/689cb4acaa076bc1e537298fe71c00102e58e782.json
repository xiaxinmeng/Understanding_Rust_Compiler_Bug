{"sha": "689cb4acaa076bc1e537298fe71c00102e58e782", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5Y2I0YWNhYTA3NmJjMWU1MzcyOThmZTcxYzAwMTAyZTU4ZTc4Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T12:23:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T12:23:26Z"}, "message": "[multiple changes]\n\n2010-06-14  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Derive_Subprograms): Remove over-restrictive assertion.\n\n2010-06-14  Arnaud Charlet  <charlet@adacore.com>\n\n\t* ali.adb: Fix typo.\n\t* s-auxdec-vms-alpha.adb, scng.ads: Minor reformatting\n\n2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Make Mark_Context transitive, and apply to subprogram\n\tinstances.\n\n\t* sem_ch8.adb (Find_Expanded_Name): If a candidate compilation unit in\n\tthe context does not have a homonym of the selector, emit default\n\terror message.\n\nFrom-SVN: r160728", "tree": {"sha": "2cfaaf84972906981f1f51659b9dda276a7db361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cfaaf84972906981f1f51659b9dda276a7db361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/689cb4acaa076bc1e537298fe71c00102e58e782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689cb4acaa076bc1e537298fe71c00102e58e782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/689cb4acaa076bc1e537298fe71c00102e58e782", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689cb4acaa076bc1e537298fe71c00102e58e782/comments", "author": null, "committer": null, "parents": [{"sha": "c1e822d590c3841514118cc79284e466ac31125f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e822d590c3841514118cc79284e466ac31125f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e822d590c3841514118cc79284e466ac31125f"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "0bd3c49157eaf6ba6a1c10648da444ff58c6f4e0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=689cb4acaa076bc1e537298fe71c00102e58e782", "patch": "@@ -1,3 +1,21 @@\n+2010-06-14  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Derive_Subprograms): Remove over-restrictive assertion.\n+\n+2010-06-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* ali.adb: Fix typo.\n+\t* s-auxdec-vms-alpha.adb, scng.ads: Minor reformatting\n+\n+2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Make Mark_Context transitive, and apply to subprogram\n+\tinstances.\n+\n+\t* sem_ch8.adb (Find_Expanded_Name): If a candidate compilation unit in\n+\tthe context does not have a homonym of the selector, emit default\n+\terror message.\n+\n 2010-06-14  Robert Dewar  <dewar@adacore.com>\n \n \t* sem.adb, sem_ch12.adb, sem_util.adb: Minor reformatting and"}, {"sha": "a004956cbfc56929c09c4efdc13bd3da03e5f7f7", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=689cb4acaa076bc1e537298fe71c00102e58e782", "patch": "@@ -205,7 +205,7 @@ package body ALI is\n       --\n       --    If Ignore_Special is False (normal case), the scan is terminated by\n       --    a typeref bracket or an equal sign except for the special case of\n-      --    an operator name starting with a double quite which is terminated\n+      --    an operator name starting with a double quote which is terminated\n       --    by another double quote.\n       --\n       --  It is an error to set both Ignore_Spaces and Ignore_Special to True."}, {"sha": "1988e26dd23afe56e4a075d548fe439c22bb164d", "filename": "gcc/ada/scng.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fscng.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fscng.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.ads?ref=689cb4acaa076bc1e537298fe71c00102e58e782", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,9 +23,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains a generic lexical analyzer. This is used\n---  for scanning Ada source files or text files with an Ada-like syntax,\n---  such as project files. It is instantiated in Scn and Prj.Err.\n+--  This package contains a generic lexical analyzer. This is used for scanning\n+--  Ada source files or text files with an Ada-like syntax, such as project\n+--  files. It is instantiated in Scn and Prj.Err.\n \n with Casing; use Casing;\n with Styleg;"}, {"sha": "faff561e22b6d988a2afe0403bcaf2ce9cbb1361", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=689cb4acaa076bc1e537298fe71c00102e58e782", "patch": "@@ -8875,6 +8875,7 @@ package body Sem_Ch12 is\n \n       if Present (Gen_Body_Id) then\n          Gen_Body := Unit_Declaration_Node (Gen_Body_Id);\n+         Mark_Context (Inst_Node, Gen_Decl);\n \n          if Nkind (Gen_Body) = N_Subprogram_Body_Stub then\n \n@@ -10410,6 +10411,27 @@ package body Sem_Ch12 is\n \n          Next (Clause);\n       end loop;\n+\n+      --  If the instance appears within another instantiated unit, check\n+      --  whether it appears in the main unit, and indicate the need for\n+      --  the body of the enclosing instance as well.\n+\n+      if In_Extended_Main_Code_Unit (Inst_Decl)\n+        and then Instantiation_Location (Sloc (Inst_Decl)) /= No_Location\n+        and then Present (Library_Unit (Cunit (Main_Unit)))\n+        and then Cunit (Inst_CU) /= Library_Unit (Cunit (Main_Unit))\n+      then\n+         Clause := First (Context_Items (Library_Unit (Cunit (Main_Unit))));\n+         while Present (Clause) loop\n+            if Nkind (Clause) = N_With_Clause\n+              and then  Library_Unit (Clause) = Cunit (Gen_CU)\n+            then\n+               Set_Withed_Body (Clause, Cunit (Gen_CU));\n+            end if;\n+\n+            Next (Clause);\n+         end loop;\n+      end if;\n    end Mark_Context;\n \n    ---------------------"}, {"sha": "eb22cb1a8bdbd48e2f2781d5b9de732de1fa3eb1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=689cb4acaa076bc1e537298fe71c00102e58e782", "patch": "@@ -12814,7 +12814,6 @@ package body Sem_Ch3 is\n                    and then not Primitive_Names_Match (Subp, Act_Subp))\n             then\n                pragma Assert (not Is_Ancestor (Parent_Base, Generic_Actual));\n-               pragma Assert (Is_Interface (Parent_Base));\n \n                --  Remember that we need searching for all the pending\n                --  primitives"}, {"sha": "25f45a2cf27bd754e02521c2b86cfe5fa872c740", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689cb4acaa076bc1e537298fe71c00102e58e782/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=689cb4acaa076bc1e537298fe71c00102e58e782", "patch": "@@ -4785,11 +4785,17 @@ package body Sem_Ch8 is\n                                 (\"\\use fully qualified name starting with\"\n                                   & \" Standard to make& visible\", N, H);\n                               Error_Msg_Qual_Level := 0;\n-                              exit;\n+                              goto Done;\n                            end if;\n \n                            Next_Entity (Id);\n                         end loop;\n+\n+                        --  If not found,  standard error message.\n+\n+                        Error_Msg_NE (\"& not declared in&\", N, Selector);\n+\n+                        <<Done>> null;\n                      end;\n \n                   else"}]}