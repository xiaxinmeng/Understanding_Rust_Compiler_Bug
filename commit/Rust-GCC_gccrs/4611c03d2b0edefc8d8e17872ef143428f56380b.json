{"sha": "4611c03d2b0edefc8d8e17872ef143428f56380b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYxMWMwM2QyYjBlZGVmYzhkOGUxNzg3MmVmMTQzNDI4ZjU2MzgwYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-12-22T20:06:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-12-22T20:06:52Z"}, "message": "tree.c: (obj_type_ref_class): Move to...\n\n\n\t* tree.c: (obj_type_ref_class): Move to...\n\t* ipa-devirt.c (obj_type_ref_class): Move to here; lookup main\n\todr type.\n\t(get_odr_type): Compensate for type simplification.\n\n\t* g++.dg/ipa/devirt-30.C: Add dg-do.\n\t* g++.dg/lto/devirt-1_0.C: New testcase.\n\t* g++.dg/lto/devirt-2_0.C: New testcase.\n\t* g++.dg/lto/devirt-3_0.C: New testcase.\n\t* g++.dg/lto/devirt-4_0.C: New testcase.\n\t* g++.dg/lto/devirt-5_0.C: New testcase.\n\t* g++.dg/lto/devirt-6_0.C: New testcase.\n\t* g++.dg/lto/devirt-13_0.C: New testcase.\n\t* g++.dg/lto/devirt-14_0.C: New testcase.\n\t* g++.dg/lto/devirt-19_0.C: New testcase.\n\t* g++.dg/lto/devirt-22_0.C: New testcase.\n\t* g++.dg/lto/devirt-23_0.C: New testcase.\n\t* g++.dg/lto/devirt-30_0.C: New testcase.\n\t* g++.dg/lto/devirt-34_0.C: New testcase.\n\nFrom-SVN: r267359", "tree": {"sha": "ae0e33447d1fbef7cf93d110ce90a633b543b633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae0e33447d1fbef7cf93d110ce90a633b543b633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4611c03d2b0edefc8d8e17872ef143428f56380b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4611c03d2b0edefc8d8e17872ef143428f56380b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4611c03d2b0edefc8d8e17872ef143428f56380b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4611c03d2b0edefc8d8e17872ef143428f56380b/comments", "author": null, "committer": null, "parents": [{"sha": "b5e1a724542d517b8c6861047141f8c805b6c3f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e1a724542d517b8c6861047141f8c805b6c3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e1a724542d517b8c6861047141f8c805b6c3f9"}], "stats": {"total": 120, "additions": 101, "deletions": 19}, "files": [{"sha": "ac907aa5fd2b2649ec82c0ae72d87f340123779e", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -1985,6 +1985,30 @@ add_type_duplicate (odr_type val, tree type)\n   return build_bases;\n }\n \n+/* REF is OBJ_TYPE_REF, return the class the ref corresponds to.  */\n+\n+tree\n+obj_type_ref_class (const_tree ref)\n+{\n+  gcc_checking_assert (TREE_CODE (ref) == OBJ_TYPE_REF);\n+  ref = TREE_TYPE (ref);\n+  gcc_checking_assert (TREE_CODE (ref) == POINTER_TYPE);\n+  ref = TREE_TYPE (ref);\n+  /* We look for type THIS points to.  ObjC also builds\n+     OBJ_TYPE_REF with non-method calls, Their first parameter\n+     ID however also corresponds to class type. */\n+  gcc_checking_assert (TREE_CODE (ref) == METHOD_TYPE\n+\t\t       || TREE_CODE (ref) == FUNCTION_TYPE);\n+  ref = TREE_VALUE (TYPE_ARG_TYPES (ref));\n+  gcc_checking_assert (TREE_CODE (ref) == POINTER_TYPE);\n+  tree ret = TREE_TYPE (ref);\n+  if (!in_lto_p)\n+    ret = TYPE_CANONICAL (ret);\n+  else\n+    ret = get_odr_type (ret)->type;\n+  return ret;\n+}\n+\n /* Get ODR type hash entry for TYPE.  If INSERT is true, create\n    possibly new entry.  */\n \n@@ -2000,6 +2024,8 @@ get_odr_type (tree type, bool insert)\n   int base_id = -1;\n \n   type = TYPE_MAIN_VARIANT (type);\n+  if (!in_lto_p)\n+    type = TYPE_CANONICAL (type);\n \n   gcc_checking_assert (can_be_name_hashed_p (type)\n \t\t       || can_be_vtable_hashed_p (type));"}, {"sha": "473d0c8bc964804dab8f67f461fa040991c9c2f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -1,3 +1,20 @@\n+2018-12-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* g++.dg/ipa/devirt-30.C: Add dg-do.\n+\t* g++.dg/lto/devirt-1_0.C: New testcase.\n+\t* g++.dg/lto/devirt-2_0.C: New testcase.\n+\t* g++.dg/lto/devirt-3_0.C: New testcase.\n+\t* g++.dg/lto/devirt-4_0.C: New testcase.\n+\t* g++.dg/lto/devirt-5_0.C: New testcase.\n+\t* g++.dg/lto/devirt-6_0.C: New testcase.\n+\t* g++.dg/lto/devirt-13_0.C: New testcase.\n+\t* g++.dg/lto/devirt-14_0.C: New testcase.\n+\t* g++.dg/lto/devirt-19_0.C: New testcase.\n+\t* g++.dg/lto/devirt-22_0.C: New testcase.\n+\t* g++.dg/lto/devirt-23_0.C: New testcase.\n+\t* g++.dg/lto/devirt-30_0.C: New testcase.\n+\t* g++.dg/lto/devirt-34_0.C: New testcase.\n+\n 2018-12-26  Steven G . Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/85798"}, {"sha": "630fb8aef6dccb807e3cdf47c97fd8e8aac8ef39", "filename": "gcc/testsuite/g++.dg/ipa/devirt-30.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-30.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -1,4 +1,5 @@\n // PR c++/58678\n+// { dg-do compile }\n // { dg-options \"-O3 -fdump-ipa-devirt\" }\n \n // We shouldn't speculatively devirtualize to ~B because B is an abstract"}, {"sha": "f9015fd29da7bdc1575e4f3e79186955e66f4269", "filename": "gcc/testsuite/g++.dg/lto/devirt-13_0.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-13_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-13_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-13_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-lto-do run } */\n+/* Call to foo should be devirtualized because there are no derived types of A.  */\n+/* { dg-lto-options \"-O2 -flto -fdump-tree-ssa\"  } */\n+#include \"../ipa/devirt-13.C\"\n+/* { dg-final { scan-tree-dump-times \"OBJ_TYPE_REF\" 0 \"ssa\"} } */"}, {"sha": "c7528f6da9e47d8ea6d6e3dbd4e45197ac85783c", "filename": "gcc/testsuite/g++.dg/lto/devirt-14_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-14_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-14_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-14_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options \"-O2 -fdump-tree-ssa\"  } */\n+#include \"../ipa/devirt-14.C\"\n+/* { dg-final { scan-tree-dump-not \"A.*foo\" \"ssa\"} } */"}, {"sha": "696d8c0fc83cb55156f2e0cc98e7094e5761c073", "filename": "gcc/testsuite/g++.dg/lto/devirt-19_0.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-19_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-19_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-19_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-lto-do link } */\n+/* { dg-lto-options { \"-O2 -fdump-ipa-cp -Wno-return-type -flto -r -nostdlib\" } } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n+#include \"../ipa/devirt-19.C\"\n+/* { dg-final { scan-wpa-ipa-dump-times \"Discovered a virtual call to a known target\" 1 \"cp\"  } } */"}, {"sha": "682c40fdb2535824b8eec3e798d70527b3fd79fa", "filename": "gcc/testsuite/g++.dg/lto/devirt-1_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-1_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-inline -fdump-ipa-cp -fdump-tree-optimized -flto\" } } */\n+#include \"../ipa/devirt-1.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Discovered a virtual call to a known target.*foo\"  \"cp\"  } } */"}, {"sha": "905286565fd550245c739a99e4f2b77719941dd6", "filename": "gcc/testsuite/g++.dg/lto/devirt-22_0.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-22_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-22_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-22_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-lto-do link } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-ipa-sra -fdump-ipa-cp -flto -r -nostdlib\" } } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n+#include \"../ipa/devirt-22.C\"\n+/* { dg-final { scan-wpa-ipa-dump-times \"Discovered a virtual call to a known target\" 2 \"cp\"  } } */"}, {"sha": "760f95f293762822ee96e101c37297dcd137574b", "filename": "gcc/testsuite/g++.dg/lto/devirt-23_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-23_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-23_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-23_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-ipa-sra -flto -fno-devirtualize-speculatively\" } } */\n+#include \"../ipa/devirt-23.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Discovered a virtual call to\" \"cp\" { xfail *-*-* } } } */"}, {"sha": "4e92bb6c2dd050fca7e42bc8f8e03671bed68100", "filename": "gcc/testsuite/g++.dg/lto/devirt-2_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-2_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-inline -fdump-ipa-cp -fdump-tree-optimized -flto\" } } */\n+#include \"../ipa/devirt-2.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Discovered a virtual call to a known target.*foo\"  \"cp\"  } } */"}, {"sha": "3e2118bb04db8eb0d3b3648e0fc8546bba4a48c7", "filename": "gcc/testsuite/g++.dg/lto/devirt-30_0.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-30_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-30_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-30_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-lto-do link } */\n+/* { dg-lto-options { \"-O3 -fdump-ipa-devirt -flto -r -nostdlib\" } } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n+#include \"../ipa/devirt-30.C\"\n+// { dg-final { scan-wpa-ipa-dump-not \"Speculatively devirtualizing\" \"devirt\" } }"}, {"sha": "7ac3a8cd6d829ad089129d98326507f43227fa4c", "filename": "gcc/testsuite/g++.dg/lto/devirt-34_0.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-34_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-34_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-34_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-lto-do link } */\n+/* { dg-lto-options { \"-O2 -fdump-ipa-devirt -flto -r -nostdlib\" } } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n+#include \"../ipa/devirt-34.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Speculative targets\"  \"devirt\"  } } */\n+/* { dg-final { scan-wpa-ipa-dump \"1 speculatively devirtualized\"  \"devirt\"  } } */"}, {"sha": "1ec9d7687ca0e2dd801d833e55933b8cf63043cf", "filename": "gcc/testsuite/g++.dg/lto/devirt-3_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-3_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-3_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-3_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-inline -fdump-ipa-cp -fdump-tree-optimized -flto\" } } */\n+#include \"../ipa/devirt-3.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Discovered a virtual call to a known target.*foo\"  \"cp\"  } } */"}, {"sha": "e44dbfd85e8884c6dcd609ec32a98800cc3c9072", "filename": "gcc/testsuite/g++.dg/lto/devirt-4_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-4_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-4_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-4_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-inline -fdump-ipa-cp -fdump-tree-optimized -flto\" } } */\n+#include \"../ipa/devirt-4.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Discovered a virtual call to a known target.*foo\"  \"cp\"  } } */"}, {"sha": "daf96e80ef880a9a873e694a0334ac86b52ff921", "filename": "gcc/testsuite/g++.dg/lto/devirt-5_0.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-5_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-5_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-5_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -fno-early-inlining -fno-inline -fdump-ipa-cp -fdump-tree-optimized -flto\" } } */\n+#include \"../ipa/devirt-5.C\"\n+/* { dg-final { scan-wpa-ipa-dump \"Discovered a virtual call to a known target.*foo\"  \"cp\"  } } */"}, {"sha": "6765a74993a83eedba1089f370575933a4740421", "filename": "gcc/testsuite/g++.dg/lto/devirt-6_0.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-6_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-6_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fdevirt-6_0.C?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { \"-O3 -flto\" } } */\n+#include \"../ipa/devirt-6.C\""}, {"sha": "c3d4bb8a00a286c2aada4e44ef656ceb552c6d63", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4611c03d2b0edefc8d8e17872ef143428f56380b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=4611c03d2b0edefc8d8e17872ef143428f56380b", "patch": "@@ -12838,25 +12838,6 @@ virtual_method_call_p (const_tree target)\n   return true;\n }\n \n-/* REF is OBJ_TYPE_REF, return the class the ref corresponds to.  */\n-\n-tree\n-obj_type_ref_class (const_tree ref)\n-{\n-  gcc_checking_assert (TREE_CODE (ref) == OBJ_TYPE_REF);\n-  ref = TREE_TYPE (ref);\n-  gcc_checking_assert (TREE_CODE (ref) == POINTER_TYPE);\n-  ref = TREE_TYPE (ref);\n-  /* We look for type THIS points to.  ObjC also builds\n-     OBJ_TYPE_REF with non-method calls, Their first parameter\n-     ID however also corresponds to class type. */\n-  gcc_checking_assert (TREE_CODE (ref) == METHOD_TYPE\n-\t\t       || TREE_CODE (ref) == FUNCTION_TYPE);\n-  ref = TREE_VALUE (TYPE_ARG_TYPES (ref));\n-  gcc_checking_assert (TREE_CODE (ref) == POINTER_TYPE);\n-  return TREE_TYPE (ref);\n-}\n-\n /* Lookup sub-BINFO of BINFO of TYPE at offset POS.  */\n \n static tree"}]}