{"sha": "98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmM2ViMWY5OGY1ZjM3NDk5MjZmMTdjMmIyNTczNmNkN2M2ZmNjYw==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2009-09-17T13:33:37Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2009-09-17T13:33:37Z"}, "message": "graphite-sese-to-poly.c (pdr_add_data_dimensions): Add bounds only for ARRAY_REFs.\n\n2009-09-17  Alexander Monakov  <amonakov@ispras.ru>\n\ngcc:\n\t* graphite-sese-to-poly.c (pdr_add_data_dimensions): Add bounds only\n\tfor ARRAY_REFs.  Use array_ref_{low,up}_bound to determine bounds.\n\nlibgomp:\n\t* testsuite/libgomp.graphite/bounds.c: New test.\n\nFrom-SVN: r151802", "tree": {"sha": "f78e2d3b8eb40141f1c072f1fb40f8648baee409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f78e2d3b8eb40141f1c072f1fb40f8648baee409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07ffa034dd509e6838f565d51ee8b25292f79d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ffa034dd509e6838f565d51ee8b25292f79d1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ffa034dd509e6838f565d51ee8b25292f79d1a"}], "stats": {"total": 77, "additions": 48, "deletions": 29}, "files": [{"sha": "923a9613e8660945d5149d15c711999db19d77f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "patch": "@@ -1,3 +1,8 @@\n+2009-09-17  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* graphite-sese-to-poly.c (pdr_add_data_dimensions): Add bounds only\n+\tfor ARRAY_REFs.  Use array_ref_{low,up}_bound to determine bounds.\n+\n 2009-09-17  Martin Jambor  <mjambor@suse.cz>\n \n \t* common.opt (fipa-sra): New switch."}, {"sha": "ccf539eb0dcf1295ccc212b90f47b2ca53423dd4", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 26, "deletions": 29, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "patch": "@@ -1654,53 +1654,50 @@ pdr_add_data_dimensions (ppl_Polyhedron_t accesses, data_reference_p dr,\n {\n   tree ref = DR_REF (dr);\n   int i, nb_subscripts = DR_NUM_DIMENSIONS (dr);\n-  tree array_size;\n-  HOST_WIDE_INT elt_size;\n \n-  array_size = TYPE_SIZE (TREE_TYPE (ref));\n-  if (array_size == NULL_TREE\n-      || TREE_CODE (array_size) != INTEGER_CST)\n-    return;\n-\n-  elt_size = int_cst_value (array_size);\n-\n-  for (i = nb_subscripts - 1; i >= 0; i--)\n+  for (i = nb_subscripts - 1; i >= 0; i--, ref = TREE_OPERAND (ref, 0))\n     {\n       ppl_Linear_Expression_t expr;\n       ppl_Constraint_t cstr;\n       ppl_dimension_type subscript = dom_nb_dims + 1 + i;\n-      int size;\n-\n-      /* 0 <= subscript */\n-      ppl_new_Linear_Expression_with_dimension (&expr, accessp_nb_dims);\n-      ppl_set_coef (expr, subscript, 1);\n-      ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n-      ppl_Polyhedron_add_constraint (accesses, cstr);\n-      ppl_delete_Linear_Expression (expr);\n-      ppl_delete_Constraint (cstr);\n+      tree low, high;\n \n-      ref = TREE_OPERAND (ref, 0);\n-      array_size = TYPE_SIZE (TREE_TYPE (ref));\n-      if (array_size == NULL_TREE\n-\t  || TREE_CODE (array_size) != INTEGER_CST)\n+      if (TREE_CODE (ref) != ARRAY_REF)\n \tbreak;\n \n-      /* subscript <= array_size */\n-      size = elt_size ? int_cst_value (array_size) / elt_size : 0;\n-      if (size)\n+      low = array_ref_low_bound (ref);\n+\n+      /* subscript - low >= 0 */\n+      if (host_integerp (low, 0))\n \t{\n \t  ppl_new_Linear_Expression_with_dimension (&expr, accessp_nb_dims);\n-\t  ppl_set_coef (expr, subscript, -1);\n+\t  ppl_set_coef (expr, subscript, 1);\n \n-\t  ppl_set_inhomogeneous (expr, size);\n+\t  ppl_set_inhomogeneous (expr, -int_cst_value (low));\n \n \t  ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n \t  ppl_Polyhedron_add_constraint (accesses, cstr);\n \t  ppl_delete_Linear_Expression (expr);\n \t  ppl_delete_Constraint (cstr);\n \t}\n \n-      elt_size = int_cst_value (array_size);\n+      high = array_ref_up_bound (ref);\n+\n+      /* high - subscript >= 0\n+\t XXX: 1-element arrays at end of structures may extend over their\n+\t declared size.  */\n+      if (high && host_integerp (high, 0))\n+\t{\n+\t  ppl_new_Linear_Expression_with_dimension (&expr, accessp_nb_dims);\n+\t  ppl_set_coef (expr, subscript, -1);\n+\n+\t  ppl_set_inhomogeneous (expr, int_cst_value (high));\n+\n+\t  ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n+\t  ppl_Polyhedron_add_constraint (accesses, cstr);\n+\t  ppl_delete_Linear_Expression (expr);\n+\t  ppl_delete_Constraint (cstr);\n+\t}\n     }\n }\n "}, {"sha": "3572d1794de651c3b5847344c6da3546f79cb089", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "patch": "@@ -1,3 +1,7 @@\n+2009-09-17  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* testsuite/libgomp.graphite/bounds.c: New test.\n+\n 2009-09-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.am (libgomp_la_LINK): New."}, {"sha": "bd36c0f8a2260d3574350d0e7d38f3b12357346e", "filename": "libgomp/testsuite/libgomp.graphite/bounds.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fbounds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f3eb1f98f5f3749926f17c2b25736cd7c6fccc/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fbounds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fbounds.c?ref=98f3eb1f98f5f3749926f17c2b25736cd7c6fccc", "patch": "@@ -0,0 +1,13 @@\n+int foo(int *a, int n)\n+{\n+  int i;\n+  for (i = 2; i < n; i++)\n+    a[i] += a[i+1];\n+}\n+\n+/* Check that Graphite dependency checking notes the dependency.  */\n+/* { dg-do compile } */\n+/* { dg-final { scan-tree-dump-times \"0 loops carried no dependency\" 1 \"graphite\" } } */\n+/* { dg-final { cleanup-tree-dump \"graphite\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}