{"sha": "5fb8060d5b57061e6b683aebdd04a915473963f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZiODA2MGQ1YjU3MDYxZTZiNjgzYWViZGQwNGE5MTU0NzM5NjNmNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-11T18:52:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-11T18:52:19Z"}, "message": "* decl2.c (decl_constant_var_p): Use decl_maybe_constant_var_p.\n\nFrom-SVN: r176177", "tree": {"sha": "7ad116e226f3d40de05a19d56a560290ce395cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ad116e226f3d40de05a19d56a560290ce395cdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fb8060d5b57061e6b683aebdd04a915473963f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fb8060d5b57061e6b683aebdd04a915473963f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fb8060d5b57061e6b683aebdd04a915473963f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fb8060d5b57061e6b683aebdd04a915473963f6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4904b64bf7dc5538b06d2ba01fc1c55231c09bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4904b64bf7dc5538b06d2ba01fc1c55231c09bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4904b64bf7dc5538b06d2ba01fc1c55231c09bb8"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "a6df4fb6fac2ae4242e3896223e49c4fbe281299", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb8060d5b57061e6b683aebdd04a915473963f6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb8060d5b57061e6b683aebdd04a915473963f6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5fb8060d5b57061e6b683aebdd04a915473963f6", "patch": "@@ -1,5 +1,7 @@\n 2011-07-11  Jason Merrill  <jason@redhat.com>\n \n+\t* decl2.c (decl_constant_var_p): Use decl_maybe_constant_var_p.\n+\n \tPR c++/44609\n \t* cp-tree.h (struct tinst_level): Add errors field.\n \t* pt.c (neglectable_inst_p, limit_bad_template_recurson): New."}, {"sha": "e1f9562b90c2c3d3ada2ddf367ffefcaeb36f8bb", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb8060d5b57061e6b683aebdd04a915473963f6/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb8060d5b57061e6b683aebdd04a915473963f6/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5fb8060d5b57061e6b683aebdd04a915473963f6", "patch": "@@ -3574,26 +3574,16 @@ decl_defined_p (tree decl)\n bool\n decl_constant_var_p (tree decl)\n {\n-  bool ret;\n-  tree type = TREE_TYPE (decl);\n-  if (TREE_CODE (decl) != VAR_DECL)\n+  if (!decl_maybe_constant_var_p (decl))\n     return false;\n-  if (DECL_DECLARED_CONSTEXPR_P (decl)\n-      || (CP_TYPE_CONST_NON_VOLATILE_P (type)\n-\t  && INTEGRAL_OR_ENUMERATION_TYPE_P (type)))\n-    {\n-      /* We don't know if a template static data member is initialized with\n-\t a constant expression until we instantiate its initializer.  Even\n-\t in the case of a constexpr variable, we can't treat it as a\n-\t constant until its initializer is complete in case it's used in\n-\t its own initializer.  */\n-      mark_used (decl);\n-      ret = DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl);\n-    }\n-  else\n-    ret = false;\n \n-  return ret;\n+  /* We don't know if a template static data member is initialized with\n+     a constant expression until we instantiate its initializer.  Even\n+     in the case of a constexpr variable, we can't treat it as a\n+     constant until its initializer is complete in case it's used in\n+     its own initializer.  */\n+  mark_used (decl);\n+  return DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl);\n }\n \n /* Returns true if DECL could be a symbolic constant variable, depending on"}]}