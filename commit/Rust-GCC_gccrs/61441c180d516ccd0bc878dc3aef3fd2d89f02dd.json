{"sha": "61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0NDFjMTgwZDUxNmNjZDBiYzg3OGRjM2FlZjNmZDJkODlmMDJkZA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2010-06-22T15:37:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T15:37:19Z"}, "message": "exp_aggr.adb (Rewrite_Discriminant): Rewriting must occur only for an expression referring to a discriminal of the...\n\n2010-06-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_aggr.adb (Rewrite_Discriminant): Rewriting must occur only for an\n\texpression referring to a discriminal of the type of the aggregate (not\n\ta discriminal of some other unrelated type), and the prefix in the\n\tgenerated selected component must come from Lhs, not Obj.\n\n2010-06-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): Fix predicate determining\n\twhen to freeze the parent type.\n\nFrom-SVN: r161195", "tree": {"sha": "3edc0ad169e584723e8ba71b0af78101fdbc0a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3edc0ad169e584723e8ba71b0af78101fdbc0a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/comments", "author": null, "committer": null, "parents": [{"sha": "1c612f29199ea74e57bd9872e11ee726703aab2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c612f29199ea74e57bd9872e11ee726703aab2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c612f29199ea74e57bd9872e11ee726703aab2f"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "0af660d9f327e93dce53537dd22dc54bd7718d97", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "patch": "@@ -1,3 +1,15 @@\n+2010-06-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_aggr.adb (Rewrite_Discriminant): Rewriting must occur only for an\n+\texpression referring to a discriminal of the type of the aggregate (not\n+\ta discriminal of some other unrelated type), and the prefix in the\n+\tgenerated selected component must come from Lhs, not Obj.\n+\n+2010-06-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Fix predicate determining\n+\twhen to freeze the parent type.\n+\n 2010-06-22  Robert Dewar  <dewar@adacore.com>\n \n \t* s-rannum.adb, a-nudira.adb, types.ads, freeze.adb, sem_aggr.adb,"}, {"sha": "925a704179826c7ea81495b0c7902096d204e0ce", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "patch": "@@ -93,7 +93,7 @@ package body Exp_Aggr is\n \n    function Has_Default_Init_Comps (N : Node_Id) return Boolean;\n    --  N is an aggregate (record or array). Checks the presence of default\n-   --  initialization (<>) in any component (Ada 2005: AI-287)\n+   --  initialization (<>) in any component (Ada 2005: AI-287).\n \n    function Is_Static_Dispatch_Table_Aggregate (N : Node_Id) return Boolean;\n    --  Returns true if N is an aggregate used to initialize the components\n@@ -2431,10 +2431,12 @@ package body Exp_Aggr is\n            and then Present (Entity (Expr))\n            and then Ekind (Entity (Expr)) = E_In_Parameter\n            and then Present (Discriminal_Link (Entity (Expr)))\n+           and then Scope (Discriminal_Link (Entity (Expr)))\n+                      = Base_Type (Etype (N))\n          then\n             Rewrite (Expr,\n               Make_Selected_Component (Loc,\n-                Prefix        => New_Occurrence_Of (Obj, Loc),\n+                Prefix        => New_Copy_Tree (Lhs),\n                 Selector_Name => Make_Identifier (Loc, Chars (Expr))));\n          end if;\n          return OK;"}, {"sha": "f1aaf61e92f81a7eb24f84794d704d395389b986", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61441c180d516ccd0bc878dc3aef3fd2d89f02dd/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "patch": "@@ -6778,10 +6778,12 @@ package body Sem_Ch3 is\n          Mark_Rewrite_Insertion (New_Decl);\n          Insert_Before (N, New_Decl);\n \n-         --  In the tagged case, make sure ancestor is frozen appropriately\n+         --  In the extension case, make sure ancestor is frozen appropriately\n          --  (see also non-discriminated case below).\n \n-         if not Private_Extension or else Is_Interface (Parent_Base) then\n+         if Present (Record_Extension_Part (Type_Def))\n+              or else Is_Interface (Parent_Base)\n+         then\n             Freeze_Before (New_Decl, Parent_Type);\n          end if;\n \n@@ -16667,10 +16669,9 @@ package body Sem_Ch3 is\n                end loop;\n             end if;\n \n-            --  For the tagged case, the two views can share the same\n-            --  Primitive Operation list and the same class wide type.\n-            --  Update attributes of the class-wide type which depend on\n-            --  the full declaration.\n+            --  For the tagged case, the two views can share the same primitive\n+            --  operations list and the same class-wide type. Update attributes\n+            --  of the class-wide type which depend on the full declaration.\n \n             if Is_Tagged_Type (Priv_T) then\n                Set_Primitive_Operations (Priv_T, Full_List);"}]}