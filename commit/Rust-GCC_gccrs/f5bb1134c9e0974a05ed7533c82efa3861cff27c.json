{"sha": "f5bb1134c9e0974a05ed7533c82efa3861cff27c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjViYjExMzRjOWUwOTc0YTA1ZWQ3NTMzYzgyZWZhMzg2MWNmZjI3Yw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-09-16T12:21:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-16T12:21:10Z"}, "message": "s-oscons-tmplt.c (Target_OS, [...]): New constants.\n\n2009-09-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c (Target_OS, Target_Name): New constants.\n\t* g-expect.adb (Set_Up_Child_Communications): Use\n\tSystem.OS_Constants.Target_OS to determine whether running on Windows.\n\nFrom-SVN: r151747", "tree": {"sha": "29fdbdfcbf397675f40f0b6f3e25fe8e9f03d2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29fdbdfcbf397675f40f0b6f3e25fe8e9f03d2a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5bb1134c9e0974a05ed7533c82efa3861cff27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5bb1134c9e0974a05ed7533c82efa3861cff27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5bb1134c9e0974a05ed7533c82efa3861cff27c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5bb1134c9e0974a05ed7533c82efa3861cff27c/comments", "author": null, "committer": null, "parents": [{"sha": "11b9c936bf663357c37c213a285ad44d5e530264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b9c936bf663357c37c213a285ad44d5e530264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11b9c936bf663357c37c213a285ad44d5e530264"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "6c975b45034f3a561e5a319edd2b96c454b57c8e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5bb1134c9e0974a05ed7533c82efa3861cff27c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5bb1134c9e0974a05ed7533c82efa3861cff27c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f5bb1134c9e0974a05ed7533c82efa3861cff27c", "patch": "@@ -1,3 +1,9 @@\n+2009-09-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c (Target_OS, Target_Name): New constants.\n+\t* g-expect.adb (Set_Up_Child_Communications): Use\n+\tSystem.OS_Constants.Target_OS to determine whether running on Windows.\n+\n 2009-09-14  Richard Henderson  <rth@redhat.com>\n \n \t* gcc-interface/trans.c (Pragma_to_gnu): Use build5 for ASM_EXPR."}, {"sha": "a67696a649d5d73ad27a53e6982b72bd5c6fc2a8", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5bb1134c9e0974a05ed7533c82efa3861cff27c/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5bb1134c9e0974a05ed7533c82efa3861cff27c/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=f5bb1134c9e0974a05ed7533c82efa3861cff27c", "patch": "@@ -31,8 +31,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with System;       use System;\n-with Ada.Calendar; use Ada.Calendar;\n+with System;              use System;\n+with System.OS_Constants; use System.OS_Constants;\n+with Ada.Calendar;        use Ada.Calendar;\n \n with GNAT.IO;\n with GNAT.OS_Lib;  use GNAT.OS_Lib;\n@@ -1195,15 +1196,14 @@ package body GNAT.Expect is\n       pragma Warnings (Off, Pipe2);\n       pragma Warnings (Off, Pipe3);\n \n-      On_Windows : constant Boolean := Directory_Separator = '\\';\n-      --  This is ugly, we need a better way of doing this test ???\n-\n       Input  : File_Descriptor;\n       Output : File_Descriptor;\n       Error  : File_Descriptor;\n \n+      No_Fork_On_Target : constant Boolean := Target_OS = Windows;\n+\n    begin\n-      if On_Windows then\n+      if No_Fork_On_Target then\n \n          --  Since Windows does not have a separate fork/exec, we need to\n          --  perform the following actions:"}, {"sha": "a2ae16e35c3082112ee56fd670da116be8a81782", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5bb1134c9e0974a05ed7533c82efa3861cff27c/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5bb1134c9e0974a05ed7533c82efa3861cff27c/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=f5bb1134c9e0974a05ed7533c82efa3861cff27c", "patch": "@@ -175,6 +175,9 @@ int counter = 0;\n \n #endif\n \n+#define STR(x) STR1(x)\n+#define STR1(x) #x\n+\n #ifdef __MINGW32__\n unsigned int _CRT_fmode = _O_BINARY;\n #endif\n@@ -216,6 +219,25 @@ package System.OS_Constants is\n  **  General constants (all platforms)\n  **/\n \n+/*\n+\n+   -----------------------------\n+   -- Platform identification --\n+   -----------------------------\n+\n+*/\n+TXT(\"   Target_Name : constant String := \" STR(TARGET) \";\")\n+/*\n+   type Target_OS_Type is (Windows, VMS, Other_OS);\n+*/\n+#if defined (__MINGW32__)\n+# define TARGET_OS Windows\n+#elif defined (__VMS)\n+# define TARGET_OS VMS\n+#else\n+# define TARGET_OS Other_OS\n+#endif\n+TXT(\"   Target_OS : constant Target_OS_Type := \" STR(TARGET_OS) \";\")\n /*\n \n    -------------------"}]}