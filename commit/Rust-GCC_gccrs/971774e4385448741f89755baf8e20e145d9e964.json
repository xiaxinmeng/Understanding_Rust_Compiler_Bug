{"sha": "971774e4385448741f89755baf8e20e145d9e964", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxNzc0ZTQzODU0NDg3NDFmODk3NTViYWY4ZTIwZTE0NWQ5ZTk2NA==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2006-06-20T17:10:19Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2006-06-20T17:10:19Z"}, "message": "Backport Windows 9x/ME VirtualQuery() fix from GC 6.7.\n\n\t* os_dep.c (GC_wnt): Define.\n\t(GC_init_win32): Set GC_wnt.\n\t* dyn_load.c (GC_register_dynamic_libraries): Consider MEM_PRIVATE\n\tsections also on Windows 9x/ME.\n\nFrom-SVN: r114818", "tree": {"sha": "f5f09bc8de3372861139eacf0b8c5d60b274c132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f09bc8de3372861139eacf0b8c5d60b274c132"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/971774e4385448741f89755baf8e20e145d9e964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971774e4385448741f89755baf8e20e145d9e964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/971774e4385448741f89755baf8e20e145d9e964", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971774e4385448741f89755baf8e20e145d9e964/comments", "author": null, "committer": null, "parents": [{"sha": "5a6ccafd7d4899ee7942a5f3be359a249c1273ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6ccafd7d4899ee7942a5f3be359a249c1273ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6ccafd7d4899ee7942a5f3be359a249c1273ae"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "ca5f33ce61300d115678d4583b5b392b127942e3", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971774e4385448741f89755baf8e20e145d9e964/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971774e4385448741f89755baf8e20e145d9e964/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=971774e4385448741f89755baf8e20e145d9e964", "patch": "@@ -1,3 +1,11 @@\n+2006-06-20  Ranjit Mathew  <rmathew@gcc.gnu.org>\n+\t\n+\tBackport Windows 9x/ME VirtualQuery() fix from GC 6.7.\n+\t* os_dep.c (GC_wnt): Define.\n+\t(GC_init_win32): Set GC_wnt.\n+\t* dyn_load.c (GC_register_dynamic_libraries): Consider MEM_PRIVATE\n+\tsections also on Windows 9x/ME.\n+\n 2006-06-02  Geoffrey Keating  <geoffk@apple.com>\n \n \t* configure.ac: Define HAS_PPC_THREAD_STATE_R0,"}, {"sha": "3485474bee514605a0ae387039b24d7d25f2dc92", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971774e4385448741f89755baf8e20e145d9e964/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971774e4385448741f89755baf8e20e145d9e964/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=971774e4385448741f89755baf8e20e145d9e964", "patch": "@@ -860,6 +860,9 @@ void GC_register_dynamic_libraries()\n   }\n # endif /* DEBUG_VIRTUALQUERY */\n \n+  extern GC_bool GC_wnt;  /* Is Windows NT derivative.\t\t*/\n+  \t\t\t  /* Defined and set in os_dep.c.\t*/\n+\n   void GC_register_dynamic_libraries()\n   {\n     MEMORY_BASIC_INFORMATION buf;\n@@ -901,7 +904,12 @@ void GC_register_dynamic_libraries()\n \t\t * !is_frame_buffer(p, buf.RegionSize, buf.Type)\n \t\t * instead of just checking for MEM_IMAGE.\n \t\t * If something breaks, change it back. */\n-\t\t&& buf.Type == MEM_IMAGE) {  \n+\t\t/* There is some evidence that we cannot always\n+\t\t * ignore MEM_PRIVATE sections under Windows ME\n+\t\t * and predecessors.  Hence we now also check for\n+\t\t * that case.\t*/\n+\t\t&& (buf.Type == MEM_IMAGE ||\n+\t\t    !GC_wnt && buf.Type == MEM_PRIVATE)) {  \n #\t        ifdef DEBUG_VIRTUALQUERY\n \t          GC_dump_meminfo(&buf);\n #\t        endif"}, {"sha": "13692d9bcd656903830bb36029b9e28b802d725c", "filename": "boehm-gc/os_dep.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971774e4385448741f89755baf8e20e145d9e964/boehm-gc%2Fos_dep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971774e4385448741f89755baf8e20e145d9e964/boehm-gc%2Fos_dep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fos_dep.c?ref=971774e4385448741f89755baf8e20e145d9e964", "patch": "@@ -1181,12 +1181,15 @@ void GC_register_data_segments()\n   \t/* This used to be set for gcc, to avoid dealing with\t\t*/\n   \t/* the structured exception handling issues.  But we now have\t*/\n   \t/* assembly code to do that right.\t\t\t\t*/\n+  GC_bool GC_wnt = FALSE;\n+        /* This is a Windows NT derivative, i.e. NT, W2K, XP or later.  */\n   \n   void GC_init_win32()\n   {\n     /* if we're running under win32s, assume that no DLLs will be loaded */\n     DWORD v = GetVersion();\n-    GC_no_win32_dlls |= ((v & 0x80000000) && (v & 0xff) <= 3);\n+    GC_wnt = !(v & 0x80000000);\n+    GC_no_win32_dlls |= ((!GC_wnt) && (v & 0xff) <= 3);\n   }\n \n   /* Return the smallest address a such that VirtualQuery\t\t*/"}]}