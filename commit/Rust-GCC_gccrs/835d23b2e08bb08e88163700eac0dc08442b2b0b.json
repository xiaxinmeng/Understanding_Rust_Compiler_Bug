{"sha": "835d23b2e08bb08e88163700eac0dc08442b2b0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1ZDIzYjJlMDhiYjA4ZTg4MTYzNzAwZWFjMGRjMDg0NDJiMmIwYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-08-14T08:36:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:36:48Z"}, "message": "uintp.adb, [...]: Minor reformatting.\n\n2007-08-14  Robert Dewar  <dewar@adacore.com>\n\n\t* uintp.adb, a-ztedit.adb, s-wchcon.adb, xnmake.adb, s-wchcon.adb,\n\tpar-ch5.adb, par-ch10.adb, get_targ.adb, a-wtedit.adb, a-teioed.adb,\n\ts-osinte-solaris.adb, s-osinte-solaris.ads,\n\ts-osinte-freebsd.ads, s-osinte-freebsd.adb: Minor reformatting.\n\n\t* styleg.adb, styleg.ads, stylesw.adb, stylesw.ads: implement style\n\tswitch -gnatyS. Enable -gnatyS in GNAT style check mode\n\nFrom-SVN: r127409", "tree": {"sha": "05b5ae79d8bf769dcfc728d032c9a64d115ddfeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05b5ae79d8bf769dcfc728d032c9a64d115ddfeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/835d23b2e08bb08e88163700eac0dc08442b2b0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835d23b2e08bb08e88163700eac0dc08442b2b0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/835d23b2e08bb08e88163700eac0dc08442b2b0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835d23b2e08bb08e88163700eac0dc08442b2b0b/comments", "author": null, "committer": null, "parents": [{"sha": "4a9b6b95df593226fd81c8d2a828e130b9d9a660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9b6b95df593226fd81c8d2a828e130b9d9a660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9b6b95df593226fd81c8d2a828e130b9d9a660"}], "stats": {"total": 774, "additions": 485, "deletions": 289}, "files": [{"sha": "a2887527f14d2a474c91bc824ce39c5a891cc222", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -933,7 +933,9 @@ package body Ada.Text_IO.Editing is\n                               Pic.Contents.Picture.Expanded;\n    begin\n       for J in Temp'Range loop\n-         if Temp (J) = 'b' then Temp (J) := 'B'; end if;\n+         if Temp (J) = 'b' then\n+            Temp (J) := 'B';\n+         end if;\n       end loop;\n \n       return Temp;\n@@ -2448,9 +2450,10 @@ package body Ada.Text_IO.Editing is\n \n       procedure Set_State (L : Legality) is\n       begin\n-         if Debug then Ada.Text_IO.Put_Line\n-            (\"  Set state from \" & Legality'Image (State) &\n-                             \" to \" & Legality'Image (L));\n+         if Debug then\n+            Ada.Text_IO.Put_Line\n+              (\"  Set state from \" & Legality'Image (State)\n+               & \" to \" & Legality'Image (L));\n          end if;\n \n          State := L;\n@@ -2462,8 +2465,8 @@ package body Ada.Text_IO.Editing is\n \n       procedure Skip is\n       begin\n-         if Debug then Ada.Text_IO.Put_Line\n-            (\"  Skip \" & Pic.Picture.Expanded (Index));\n+         if Debug then\n+            Ada.Text_IO.Put_Line (\"  Skip \" & Pic.Picture.Expanded (Index));\n          end if;\n \n          Index := Index + 1;"}, {"sha": "eb72f81d13b3164227417a6478f8b7816addcc5e", "filename": "gcc/ada/a-wtedit.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1100,7 +1100,9 @@ package body Ada.Wide_Text_IO.Editing is\n                               Pic.Contents.Picture.Expanded;\n    begin\n       for J in Temp'Range loop\n-         if Temp (J) = 'b' then Temp (J) := 'B'; end if;\n+         if Temp (J) = 'b' then\n+            Temp (J) := 'B';\n+         end if;\n       end loop;\n \n       return Temp;"}, {"sha": "f7838d098ac45d1bf6dc575994b60fff6f430309", "filename": "gcc/ada/a-ztedit.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1102,7 +1102,9 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                               Pic.Contents.Picture.Expanded;\n    begin\n       for J in Temp'Range loop\n-         if Temp (J) = 'b' then Temp (J) := 'B'; end if;\n+         if Temp (J) = 'b' then\n+            Temp (J) := 'B';\n+         end if;\n       end loop;\n \n       return Temp;"}, {"sha": "ddf30d70bf8d36e34725da952f501b104f7b2ae2", "filename": "gcc/ada/get_targ.adb", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fget_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fget_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,11 +32,16 @@ package body Get_Targ is\n \n    function Digits_From_Size (Size : Pos) return Pos is\n    begin\n-      if    Size =  32 then return  6;\n-      elsif Size =  48 then return  9;\n-      elsif Size =  64 then return 15;\n-      elsif Size =  96 then return 18;\n-      elsif Size = 128 then return 18;\n+      if    Size =  32 then\n+         return  6;\n+      elsif Size =  48 then\n+         return  9;\n+      elsif Size =  64 then\n+         return 15;\n+      elsif Size =  96 then\n+         return 18;\n+      elsif Size = 128 then\n+         return 18;\n       else\n          raise Program_Error;\n       end if;\n@@ -57,10 +62,14 @@ package body Get_Targ is\n \n    function Width_From_Size  (Size : Pos) return Pos is\n    begin\n-      if    Size =  8 then return  4;\n-      elsif Size = 16 then return  6;\n-      elsif Size = 32 then return 11;\n-      elsif Size = 64 then return 21;\n+      if    Size =  8 then\n+         return  4;\n+      elsif Size = 16 then\n+         return  6;\n+      elsif Size = 32 then\n+         return 11;\n+      elsif Size = 64 then\n+         return 21;\n       else\n          raise Program_Error;\n       end if;"}, {"sha": "8a71edf436cfe6602be2d4e4e16e807b3580491e", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -244,7 +244,9 @@ package body Ch10 is\n       if Token = Tok_Private then\n          Private_Sloc := Token_Ptr;\n          Set_Keyword_Casing (Current_Source_File, Determine_Token_Casing);\n-         if Style_Check then Style.Check_Indentation; end if;\n+         if Style_Check then\n+            Style.Check_Indentation;\n+         end if;\n \n          Save_Scan_State (Scan_State); -- at PRIVATE\n          Scan; -- past PRIVATE\n@@ -320,7 +322,9 @@ package body Ch10 is\n       --  it hasn't already been done on seeing a WITH or PRIVATE.\n \n       Set_Keyword_Casing (Current_Source_File, Determine_Token_Casing);\n-      if Style_Check then Style.Check_Indentation; end if;\n+      if Style_Check then\n+         Style.Check_Indentation;\n+      end if;\n \n       --  Remaining processing depends on particular type of compilation unit\n \n@@ -807,7 +811,9 @@ package body Ch10 is\n       --  Loop through context items\n \n       loop\n-         if Style_Check then Style.Check_Indentation; end if;\n+         if Style_Check then\n+            Style.Check_Indentation;\n+         end if;\n \n          --  Gather any pragmas appearing in the context clause\n "}, {"sha": "0073528325d9678b83dc80f4c265cfb5a4e3ea88", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -210,7 +210,9 @@ package body Ch5 is\n          end loop;\n \n          begin\n-            if Style_Check then Style.Check_Indentation; end if;\n+            if Style_Check then\n+               Style.Check_Indentation;\n+            end if;\n \n             --  Deal with reserved identifier (in assignment or call)\n \n@@ -1121,7 +1123,10 @@ package body Ch5 is\n       begin\n          if Token_Is_At_Start_Of_Line and then Token = Tok_Then then\n             Check_If_Column;\n-            if Style_Check then Style.Check_Then (Loc); end if;\n+\n+            if Style_Check then\n+               Style.Check_Then (Loc);\n+            end if;\n          end if;\n       end Check_Then_Column;\n \n@@ -1397,7 +1402,10 @@ package body Ch5 is\n       Case_Alt_Node : Node_Id;\n \n    begin\n-      if Style_Check then Style.Check_Indentation; end if;\n+      if Style_Check then\n+         Style.Check_Indentation;\n+      end if;\n+\n       Case_Alt_Node := New_Node (N_Case_Statement_Alternative, Token_Ptr);\n       T_When; -- past WHEN (or give error in OTHERS case)\n       Set_Discrete_Choices (Case_Alt_Node, P_Discrete_Choice_List);\n@@ -2069,7 +2077,9 @@ package body Ch5 is\n          Set_Declarations (Parent, Decls);\n \n          if Token = Tok_Begin then\n-            if Style_Check then Style.Check_Indentation; end if;\n+            if Style_Check then\n+               Style.Check_Indentation;\n+            end if;\n \n             Error_Msg_Col := Scope.Table (Scope.Last).Ecol;\n "}, {"sha": "fbc12c1803670b36a54a89aadb5f59423ecaf19f", "filename": "gcc/ada/s-osinte-freebsd.adb", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-freebsd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-freebsd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -38,21 +38,34 @@ with Interfaces.C; use Interfaces.C;\n \n package body System.OS_Interface is\n \n+   -----------\n+   -- Errno --\n+   -----------\n+\n    function Errno return int is\n       type int_ptr is access all int;\n \n       function internal_errno return int_ptr;\n       pragma Import (C, internal_errno, \"__error\");\n+\n    begin\n       return (internal_errno.all);\n    end Errno;\n \n+   --------------------\n+   -- Get_Stack_Base --\n+   --------------------\n+\n    function Get_Stack_Base (thread : pthread_t) return Address is\n       pragma Unreferenced (thread);\n    begin\n       return (0);\n    end Get_Stack_Base;\n \n+   ------------------\n+   -- pthread_init --\n+   ------------------\n+\n    procedure pthread_init is\n    begin\n       null;\n@@ -85,15 +98,20 @@ package body System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec is\n       S : time_t;\n       F : Duration;\n+\n    begin\n       S := time_t (Long_Long_Integer (D));\n       F := D - Duration (S);\n \n       --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-      if F < 0.0 then S := S - 1; F := F + 1.0; end if;\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n       return timespec'(ts_sec => S,\n-        ts_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+                       ts_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n end System.OS_Interface;"}, {"sha": "48a4f90c133dee33f616fdead70accc3aa097697", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -7,7 +7,7 @@\n --                                   S p e c                                --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2007, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -235,7 +235,7 @@ package System.OS_Interface is\n \n    function To_Target_Priority\n      (Prio : System.Any_Priority) return Interfaces.C.int;\n-   --  Maps System.Any_Priority to a POSIX priority.\n+   --  Maps System.Any_Priority to a POSIX priority\n \n    -------------\n    -- Process --"}, {"sha": "b9997bfa753c7d704710b238959313a10f07dad6", "filename": "gcc/ada/s-osinte-solaris.adb", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2005, AdaCore                     --\n+--                     Copyright (C) 1995-2007, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Solaris version of this package.\n+--  This is a Solaris version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n@@ -42,6 +42,7 @@ pragma Polling (Off);\n --  tasking operations. It causes infinite loops and other problems.\n \n with Interfaces.C; use Interfaces.C;\n+\n package body System.OS_Interface is\n \n    -----------------\n@@ -60,38 +61,60 @@ package body System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec is\n       S : time_t;\n       F : Duration;\n+\n    begin\n       S := time_t (Long_Long_Integer (D));\n       F := D - Duration (S);\n \n       --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-      if F < 0.0 then S := S - 1; F := F + 1.0; end if;\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n       return timespec'(tv_sec  => S,\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n+   -----------------\n+   -- To_Duration --\n+   -----------------\n+\n    function To_Duration (TV : struct_timeval) return Duration is\n    begin\n       return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n    end To_Duration;\n \n+   ----------------\n+   -- To_Timeval --\n+   ----------------\n+\n    function To_Timeval (D : Duration) return struct_timeval is\n       S : long;\n       F : Duration;\n+\n    begin\n       S := long (Long_Long_Integer (D));\n       F := D - Duration (S);\n \n       --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-      if F < 0.0 then S := S - 1; F := F + 1.0; end if;\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n       return\n         struct_timeval'\n           (tv_sec  => S,\n            tv_usec => long (Long_Long_Integer (F * 10#1#E6)));\n    end To_Timeval;\n \n+   ------------------\n+   -- pthread_init --\n+   ------------------\n+\n    procedure pthread_init is\n    begin\n       null;"}, {"sha": "88b99b735df790be5f3567a82530b2f48518933d", "filename": "gcc/ada/s-osinte-solaris.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-osinte-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris.ads?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2007, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -126,7 +126,7 @@ package System.OS_Interface is\n    Unmasked : constant Signal_Set := (SIGTRAP, SIGLWP, SIGPROF);\n \n    --  Following signals should not be disturbed.\n-   --  See c-posix-signals.c in FLORIST\n+   --  See c-posix-signals.c in FLORIST.\n \n    Reserved : constant Signal_Set :=\n      (SIGKILL, SIGSTOP, SIGWAITING, SIGCANCEL, SIGTRAP, SIGSEGV);\n@@ -451,7 +451,7 @@ package System.OS_Interface is\n    type id_t is new long;\n \n    P_MYID : constant := -1;\n-   --  the specified LWP or process is the current one.\n+   --  The specified LWP or process is the current one\n \n    type struct_pcinfo is record\n       pc_cid    : id_t;\n@@ -485,21 +485,21 @@ package System.OS_Interface is\n    --  Constants for function processor_bind\n \n    PBIND_QUERY : constant processorid_t := -2;\n-   --  the processor bindings are not changed.\n+   --  The processor bindings are not changed\n \n    PBIND_NONE  : constant processorid_t := -1;\n-   --  the processor bindings of the specified LWPs are cleared.\n+   --  The processor bindings of the specified LWPs are cleared\n \n    --  Flags for function p_online\n \n    PR_OFFLINE : constant int := 1;\n-   --  processor is offline, as quiet as possible\n+   --  Processor is offline, as quiet as possible\n \n    PR_ONLINE  : constant int := 2;\n-   --  processor online\n+   --  Processor online\n \n    PR_STATUS  : constant int := 3;\n-   --  value passed to p_online to request status\n+   --  Value passed to p_online to request status\n \n    function p_online (processorid : processorid_t; flag : int) return int;\n    pragma Import (C, p_online, \"p_online\");\n@@ -512,7 +512,7 @@ package System.OS_Interface is\n    pragma Import (C, processor_bind, \"processor_bind\");\n \n    procedure pthread_init;\n-   --  dummy procedure to share s-intman.adb with other Solaris targets.\n+   --  Dummy procedure to share s-intman.adb with other Solaris targets\n \n private\n "}, {"sha": "5a05dd1f2e40dc59ac6da1817b865da630b285e5", "filename": "gcc/ada/s-wchcon.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-wchcon.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fs-wchcon.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2005-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2005-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,12 +50,18 @@ package body System.WCh_Con is\n \n    function Get_WC_Encoding_Method (S : String) return WC_Encoding_Method is\n    begin\n-      if    S = \"hex\"       then return WCEM_Hex;\n-      elsif S = \"upper\"     then return WCEM_Upper;\n-      elsif S = \"shift_jis\" then return WCEM_Shift_JIS;\n-      elsif S = \"euc\"       then return WCEM_EUC;\n-      elsif S = \"utf8\"      then return WCEM_UTF8;\n-      elsif S = \"brackets\"  then return WCEM_Brackets;\n+      if    S = \"hex\"       then\n+         return WCEM_Hex;\n+      elsif S = \"upper\"     then\n+         return WCEM_Upper;\n+      elsif S = \"shift_jis\" then\n+         return WCEM_Shift_JIS;\n+      elsif S = \"euc\"       then\n+         return WCEM_EUC;\n+      elsif S = \"utf8\"      then\n+         return WCEM_UTF8;\n+      elsif S = \"brackets\"  then\n+         return WCEM_Brackets;\n       else\n          raise Constraint_Error;\n       end if;"}, {"sha": "fb8409b62b809577eab9c17b0b1d138cf9ad026e", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 81, "deletions": 1, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,7 +63,11 @@ package body Styleg is\n    --  Check that token is first token on line, or else is not preceded\n    --  by white space. Signal error of space not allowed if not.\n \n+   procedure Check_Separate_Stmt_Lines_Cont;\n+   --  Non-inlined continuation of Check_Separate_Stmt_Lines\n+\n    function Determine_Token_Casing return Casing_Type;\n+   --  Determine casing of current token\n \n    procedure Error_Space_Not_Allowed (S : Source_Ptr);\n    --  Posts an error message indicating that a space is not allowed\n@@ -699,6 +703,82 @@ package body Styleg is\n       end if;\n    end Check_Semicolon;\n \n+   -------------------------------\n+   -- Check_Separate_Stmt_Lines --\n+   -------------------------------\n+\n+   procedure Check_Separate_Stmt_Lines is\n+   begin\n+      if Style_Check_Separate_Stmt_Lines then\n+         Check_Separate_Stmt_Lines_Cont;\n+      end if;\n+   end Check_Separate_Stmt_Lines;\n+\n+   ------------------------------------\n+   -- Check_Separate_Stmt_Lines_Cont --\n+   ------------------------------------\n+\n+   procedure Check_Separate_Stmt_Lines_Cont is\n+      S : Source_Ptr;\n+\n+   begin\n+      --  Skip past white space\n+\n+      S := Scan_Ptr;\n+      while Is_White_Space (Source (S)) loop\n+         S := S + 1;\n+      end loop;\n+\n+      --  Line terminator is OK\n+\n+      if Source (S) in Line_Terminator then\n+         return;\n+\n+      --  Comment is OK\n+\n+      elsif Source (S) = '-' and then Source (S + 1) = '-' then\n+         return;\n+\n+      --  ABORT keyword is OK after THEN (THEN ABORT case)\n+\n+      elsif Token = Tok_Then\n+        and then (Source (S + 0) = 'a' or else Source (S + 0) = 'A')\n+        and then (Source (S + 1) = 'b' or else Source (S + 1) = 'B')\n+        and then (Source (S + 2) = 'o' or else Source (S + 2) = 'O')\n+        and then (Source (S + 3) = 'r' or else Source (S + 3) = 'R')\n+        and then (Source (S + 4) = 't' or else Source (S + 4) = 'T')\n+        and then (Source (S + 5) in Line_Terminator\n+                   or else Is_White_Space (Source (S + 5)))\n+      then\n+         return;\n+\n+      --  PRAGMA keyword is OK after ELSE\n+\n+      elsif Token = Tok_Else\n+        and then (Source (S + 0) = 'p' or else Source (S + 0) = 'P')\n+        and then (Source (S + 1) = 'r' or else Source (S + 1) = 'R')\n+        and then (Source (S + 2) = 'a' or else Source (S + 2) = 'A')\n+        and then (Source (S + 3) = 'g' or else Source (S + 3) = 'G')\n+        and then (Source (S + 4) = 'm' or else Source (S + 4) = 'M')\n+        and then (Source (S + 5) = 'a' or else Source (S + 5) = 'A')\n+        and then (Source (S + 6) in Line_Terminator\n+                   or else Is_White_Space (Source (S + 6)))\n+      then\n+         return;\n+\n+         --  Otherwise we have the style violation we are looking for\n+\n+      else\n+         if Token = Tok_Then then\n+            Error_Msg\n+              (\"(style) no statements may follow THEN on same line\", S);\n+         else\n+            Error_Msg\n+              (\"(style) no statements may follow ELSE on same line\", S);\n+         end if;\n+      end if;\n+   end Check_Separate_Stmt_Lines_Cont;\n+\n    ----------------\n    -- Check_Then --\n    ----------------"}, {"sha": "448755a7bb9540d31b7452c22175e5b83fbcee29", "filename": "gcc/ada/styleg.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstyleg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstyleg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.ads?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -133,6 +133,13 @@ package Styleg is\n    --  procedure is called only if THEN appears at the start of a line with\n    --  Token_Ptr pointing to the THEN keyword.\n \n+   procedure Check_Separate_Stmt_Lines;\n+   pragma Inline (Check_Separate_Stmt_Lines);\n+   --  Called after scanning THEN (not preceded by AND) or ELSE (not preceded\n+   --  by OR). Used to check that no tokens follow on the same line (which\n+   --  would intefere with coverage testing). Handles case of THEN ABORT as\n+   --  an exception, as well as PRAGMA after ELSE.\n+\n    procedure Check_Unary_Plus_Or_Minus;\n    --  Called after scanning a unary plus or minus to check spacing\n "}, {"sha": "5d799786f32d3966415fa562b3f55759e6ecf0de", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -54,6 +54,7 @@ package body Stylesw is\n       Style_Check_Order_Subprograms     := False;\n       Style_Check_Pragma_Casing         := False;\n       Style_Check_References            := False;\n+      Style_Check_Separate_Stmt_Lines   := False;\n       Style_Check_Specs                 := False;\n       Style_Check_Standard              := False;\n       Style_Check_Tokens                := False;\n@@ -65,7 +66,7 @@ package body Stylesw is\n    ------------------------------\n \n    procedure Save_Style_Check_Options (Options : out Style_Check_Options) is\n-      P : Natural   := 0;\n+      P : Natural := 0;\n \n       procedure Add (C : Character; S : Boolean);\n       --  Add given character C to string if switch S is true\n@@ -126,6 +127,7 @@ package body Stylesw is\n       Add ('p', Style_Check_Pragma_Casing);\n       Add ('r', Style_Check_References);\n       Add ('s', Style_Check_Specs);\n+      Add ('S', Style_Check_Separate_Stmt_Lines);\n       Add ('t', Style_Check_Tokens);\n       Add ('u', Style_Check_Blank_Lines);\n       Add ('x', Style_Check_Xtra_Parens);\n@@ -167,7 +169,7 @@ package body Stylesw is\n    procedure Set_GNAT_Style_Check_Options is\n    begin\n       Reset_Style_Check_Options;\n-      Set_Style_Check_Options (\"3aAbcdefhiklmnprstux\");\n+      Set_Style_Check_Options (\"3aAbcdefhiklmnprsStux\");\n    end Set_GNAT_Style_Check_Options;\n \n    -----------------------------\n@@ -359,6 +361,9 @@ package body Stylesw is\n             when 's' =>\n                Style_Check_Specs                 := True;\n \n+            when 'S' =>\n+               Style_Check_Separate_Stmt_Lines   := True;\n+\n             when 't' =>\n                Style_Check_Tokens                := True;\n "}, {"sha": "9b2294f2628ee9900e797dd7f1007b497a8b1a88", "filename": "gcc/ada/stylesw.ads", "status": "modified", "additions": 115, "deletions": 107, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstylesw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fstylesw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.ads?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,14 +38,15 @@ package Stylesw is\n    --------------------------\n \n    --  These flags are used to control the details of the style checking\n-   --  options. The default values shown here correspond to no style\n-   --  checking. If any of these values is set to a non-default value,\n-   --  then Opt.Style_Check is set True to active calls to this package.\n+   --  options. The default values shown here correspond to no style checking.\n \n-   --  The actual mechanism for setting these switches to other than\n-   --  default values is via the Set_Style_Check_Option procedure or\n-   --  through a call to Set_Default_Style_Check_Options. They should\n-   --  not be set directly in any other manner.\n+   --  If any of these values is set to a non-default value, then\n+   --  Opt.Style_Check is set True to active calls to this package.\n+\n+   --  The actual mechanism for setting these switches to other than default\n+   --  values is via the Set_Style_Check_Option procedure or through a call to\n+   --  Set_Default_Style_Check_Options. They should not be set directly in any\n+   --  other manner.\n \n    Style_Check_Array_Attribute_Index : Boolean := False;\n    --  This can be set True by using -gnatg or -gnatyA switches. If it is True\n@@ -54,31 +55,31 @@ package Stylesw is\n    --  array attribute references.\n \n    Style_Check_Attribute_Casing : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatya switches. If\n-   --  it is True, then attribute names (including keywords such as\n-   --  digits used as attribute names) must be in mixed case.\n+   --  This can be set True by using the -gnatg or -gnatya switches. If it is\n+   --  True, then attribute names (including keywords such as digits used as\n+   --  attribute names) must be in mixed case.\n \n    Style_Check_Blanks_At_End : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyb switches. If\n-   --  it is True, then spaces at the end of lines are not permitted.\n+   --  This can be set True by using the -gnatg or -gnatyb switches. If it is\n+   --  True, then spaces at the end of lines are not permitted.\n \n    Style_Check_Blank_Lines : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyu switches. If\n-   --  it is True, then multiple blank lines are not permitted, and there\n-   --  may not be a blank line at the end of the file.\n+   --  This can be set True by using the -gnatg or -gnatyu switches. If it is\n+   --  True, then multiple blank lines are not permitted, and there may not be\n+   --  a blank line at the end of the file.\n \n    Style_Check_Comments : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyc switches. If\n-   --  it is True, then comments are style checked as follows:\n+   --  This can be set True by using the -gnatg or -gnatyc switches. If it is\n+   --  True, then comments are style checked as follows:\n    --\n-   --    All comments must be at the start of the line, or the first\n-   --    minus must be preceded by at least one space.\n+   --    All comments must be at the start of the line, or the first minus must\n+   --    be preceded by at least one space.\n    --\n-   --    For a comment that is not at the start of a line, the only\n-   --    requirement is that a space follow the comment characters.\n+   --    For a comment that is not at the start of a line, the only requirement\n+   --    is that a space follow the comment characters.\n    --\n-   --    For a coment that is at the start of the line, one of the\n-   --    following conditions must hold:\n+   --    For a coment that is at the start of the line, one of the following\n+   --    conditions must hold:\n    --\n    --      The comment characters are the only non-blank characters on the line\n    --\n@@ -89,40 +90,39 @@ package Stylesw is\n    --\n    --      The line consists entirely of minus signs\n    --\n-   --      The comment characters are followed by a single space, and the\n-   --      last two characters on the line are also comment characters.\n+   --      The comment characters are followed by a single space, and the last\n+   --      two characters on the line are also comment characters.\n    --\n    --  Note: the reason for the last two conditions is to allow \"boxed\"\n    --  comments where only a single space separates the comment characters.\n \n    Style_Check_DOS_Line_Terminator : Boolean := False;\n-   --  This can be set true by using the -gnatg or -gnatyd switches. If\n-   --  it is True, then the line terminator must be a single LF, without an\n+   --  This can be set true by using the -gnatg or -gnatyd switches. If it\n+   --  is True, then the line terminator must be a single LF, without an\n    --  associated CR (e.g. DOS line terminator sequence CR/LF not allowed).\n \n    Style_Check_End_Labels : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatye switches. If\n-   --  it is True, then optional END labels must always be present.\n+   --  This can be set True by using the -gnatg or -gnatye switches. If it is\n+   --  True, then optional END labels must always be present.\n \n    Style_Check_Form_Feeds : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyf switches. If\n-   --  it is True, then form feeds and vertical tabs are not allowed in\n-   --  the source text.\n+   --  This can be set True by using the -gnatg or -gnatyf switches. If it is\n+   --  True, then form feeds and vertical tabs are not allowed in the source\n+   --  text.\n \n    Style_Check_Horizontal_Tabs : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyh switches. If\n-   --  it is True, then horizontal tabs are not allowed in source text.\n+   --  This can be set True by using the -gnatg or -gnatyh switches. If it is\n+   --  True, then horizontal tabs are not allowed in source text.\n \n    Style_Check_If_Then_Layout : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyi switches. If\n-   --  it is True, then a THEN keyword may not appear on the line that\n-   --  immediately follows the line containing the corresponding IF.\n+   --  This can be set True by using the -gnatg or -gnatyi switches. If it is\n+   --  True, then a THEN keyword may not appear on the line that immediately\n+   --  follows the line containing the corresponding IF.\n    --\n-   --  This permits one of two styles for IF-THEN layout. Either the\n-   --  IF and THEN keywords are on the same line, where the condition\n-   --  is short enough, or the conditions are continued over to the\n-   --  lines following the IF and the THEN stands on its own. For\n-   --  example:\n+   --  This permits one of two styles for IF-THEN layout. Either the IF and\n+   --  THEN keywords are on the same line, where the condition is short enough,\n+   --  or the conditions are continued over to the lines following the IF and\n+   --  the THEN stands on its own. For example:\n    --\n    --    if X > Y then\n    --\n@@ -139,69 +139,76 @@ package Stylesw is\n \n    Style_Check_Indentation : Column_Number range 0 .. 9 := 0;\n    --  This can be set non-zero by using the -gnatg or -gnatyn (n a digit)\n-   --  switches. If it is non-zero it activates indentation checking with\n-   --  the indicated indentation value. A value of zero turns off checking.\n-   --  The requirement is that any new statement, line comment, declaration\n-   --  or keyword such as END, start on a column that is a multiple of the\n+   --  switches. If it is non-zero it activates indentation checking with the\n+   --  indicated indentation value. A value of zero turns off checking. The\n+   --  requirement is that any new statement, line comment, declaration or\n+   --  keyword such as END, start on a column that is a multiple of the\n    --  indentiation value.\n \n    Style_Check_Keyword_Casing : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyk switches. If\n-   --  it is True, then keywords are required to be in all lower case.\n-   --  This rule does not apply to keywords such as digits appearing as\n-   --  an attribute name.\n+   --  This can be set True by using the -gnatg or -gnatyk switches. If it is\n+   --  True, then keywords are required to be in all lower case. This rule does\n+   --  not apply to keywords such as digits appearing as an attribute name.\n+\n+   Style_Check_Layout : Boolean := False;\n+   --  This can be set True by using the -gnatg or -gnatyl switches. If it is\n+   --  True, it activates checks that constructs are indented as suggested by\n+   --  the examples in the RM syntax, e.g. that the ELSE keyword must line up\n+   --  with the IF keyword.\n \n    Style_Check_Max_Line_Length : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatym/M switches.\n-   --  If it is True, it activates checking for a maximum line length of\n+   --  This can be set True by using the -gnatg or -gnatym/M switches. If\n+   --  it is True, it activates checking for a maximum line length of\n    --  Style_Max_Line_Length characters.\n \n    Style_Check_Max_Nesting_Level : Boolean := False;\n-   --  This can be set True by using -gnatyLnnn with a value other than\n-   --  zero (a value of zero resets it to False). If True, it activates\n-   --  checking the maximum nesting level against Style_Max_Nesting_Level.\n+   --  This can be set True by using -gnatyLnnn with a value other than zero\n+   --  (a value of zero resets it to False). If True, it activates checking\n+   --  the maximum nesting level against Style_Max_Nesting_Level.\n \n    Style_Check_Mode_In : Boolean := False;\n    --  This can be set True by using -gnatyI. If True, it activates checking\n    --  that mode IN is not used on its own (since it is the default).\n \n    Style_Check_Order_Subprograms : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyo switch. If it\n-   --  is True, then names of subprogram bodies must be in alphabetical\n-   --  order (not taking casing into account).\n+   --  This can be set True by using the -gnatg or -gnatyo switch. If it is\n+   --  True, then names of subprogram bodies must be in alphabetical order\n+   --  (not taking casing into account).\n \n    Style_Check_Pragma_Casing : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyp switches. If\n-   --  it is True, then pragma names must use mixed case.\n-\n-   Style_Check_Layout : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyl switches. If\n-   --  it is True, it activates checks that constructs are indented as\n-   --  suggested by the examples in the RM syntax, e.g. that the ELSE\n-   --  keyword must line up with the IF keyword.\n+   --  This can be set True by using the -gnatg or -gnatyp switches. If it is\n+   --  True, then pragma names must use mixed case.\n \n    Style_Check_References : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyr switches. If\n-   --  it is True, then all references to declared identifiers are\n-   --  checked. The requirement is that casing of the reference be the\n-   --  same as the casing of the corresponding declaration.\n+   --  This can be set True by using the -gnatg or -gnatyr switches. If it is\n+   --  True, then all references to declared identifiers are checked. The\n+   --  requirement is that casing of the reference be the same as the casing\n+   --  of the corresponding declaration.\n+\n+   Style_Check_Separate_Stmt_Lines : Boolean := False;\n+   --  This can be set True by using the -gnatg or -gnatyS switches. If it is\n+   --  TRUE, then for the case of keywords THEN (not preceded by AND) or ELSE\n+   --  (not preceded by OR) which introduce a conditionally executed statement\n+   --  sequence, there must be no tokens on the same line as the keyword, so\n+   --  that coverage testing can clearly identify execution of the statement\n+   --  sequence. A comment is permitted, as is THEN ABORT or a PRAGMA keyword\n+   --  after ELSE (a common style to specify the condition for the ELSE).\n \n    Style_Check_Specs : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatys switches. If\n-   --  it is True, then separate specs are required to be present for\n-   --  all procedures except parameterless library level procedures.\n-   --  The exception means that typical main programs do not require\n-   --  separate specs.\n+   --  This can be set True by using the -gnatg or -gnatys switches. If it is\n+   --  True, then separate specs are required to be present for all procedures\n+   --  except parameterless library level procedures. The exception means that\n+   --  typical main programs do not require separate specs.\n \n    Style_Check_Standard : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyn switches. If\n-   --  it is True, then any references to names in Standard have to be\n-   --  in mixed case mode (e.g. Integer, Boolean).\n+   --  This can be set True by using the -gnatg or -gnatyn switches. If it is\n+   --  True, then any references to names in Standard have to be in mixed case\n+   --  mode (e.g. Integer, Boolean).\n \n    Style_Check_Tokens : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyt switches. If\n-   --  it is True, then the style check that requires canonical spacing\n-   --  between various punctuation tokens as follows:\n+   --  This can be set True by using the -gnatg or -gnatyt switches. If it is\n+   --  True, then the style check that requires canonical spacing between\n+   --  various punctuation tokens as follows:\n    --\n    --    ABS and NOT must be followed by a space\n    --\n@@ -210,6 +217,7 @@ package Stylesw is\n    --    <> must be preceded by a space or left paren\n    --\n    --    Binary operators other than ** must be surrounded by spaces.\n+   --\n    --    There is no restriction on the layout of the ** binary operator.\n    --\n    --    Colon must be surrounded by spaces\n@@ -220,36 +228,36 @@ package Stylesw is\n    --    immediately preceded by a non-blank character, and must be followed\n    --    by a blank.\n    --\n-   --    A space must precede a left paren following a digit or letter,\n-   --    and a right paren must not be followed by a space (it can be\n-   --    at the end of the line).\n+   --    A space must precede a left paren following a digit or letter, and a\n+   --    right paren must not be followed by a space (it can be at the end of\n+   --    the line).\n    --\n-   --    A right paren must either be the first non-blank character on\n-   --    a line, or it must be preceded by a non-blank character.\n+   --    A right paren must either be the first non-blank character on a line,\n+   --    or it must be preceded by a non-blank character.\n    --\n-   --    A semicolon must not be preceded by a blank, and must not be\n-   --    followed by a non-blank character.\n+   --    A semicolon must not be preceded by a blank, and must not be followed\n+   --    by a non-blank character.\n    --\n    --    A unary plus or minus may not be followed by a space\n    --\n    --    A vertical bar must be surrounded by spaces\n    --\n-   --  Note that a requirement that a token be preceded by a space is\n-   --  met by placing the token at the start of the line, and similarly\n-   --  a requirement that a token be followed by a space is met by\n-   --  placing the token at the end of the line. Note that in the case\n-   --  where horizontal tabs are permitted, a horizontal tab is acceptable\n-   --  for meeting the requirement for a space.\n+   --  Note that a requirement that a token be preceded by a space is met by\n+   --  placing the token at the start of the line, and similarly a requirement\n+   --  that a token be followed by a space is met by placing the token at\n+   --  the end of the line. Note that in the case where horizontal tabs are\n+   --  permitted, a horizontal tab is acceptable for meeting the requirement\n+   --  for a space.\n \n    Style_Check_Xtra_Parens : Boolean := False;\n    --  This can be set True by using the -gnatg or -gnatyx switch. If true,\n-   --  then it is not allowed to enclose entire conditional expressions\n-   --  in parentheses (C style).\n+   --  then it is not allowed to enclose entire conditional expressions in\n+   --  parentheses (C style).\n \n    Style_Max_Line_Length : Int := 0;\n-   --  Value used to check maximum line length. Gets reset as a result of\n-   --  use of -gnatym or -gnatyMnnn switches (or by use of -gnatg). This\n-   --  value is only read if Style_Check_Max_Line_Length is True.\n+   --  Value used to check maximum line length. Gets reset as a result of use\n+   --  of -gnatym or -gnatyMnnn switches (or by use of -gnatg). This value is\n+   --  only read if Style_Check_Max_Line_Length is True.\n \n    Style_Max_Nesting_Level : Int := 0;\n    --  Value used to check maximum nesting level. Gets reset as a result\n@@ -261,12 +269,12 @@ package Stylesw is\n    -----------------\n \n    procedure Set_Default_Style_Check_Options;\n-   --  This procedure is called to set the default style checking options\n-   --  in response to a -gnaty switch with no suboptions.\n+   --  This procedure is called to set the default style checking options in\n+   --  response to a -gnaty switch with no suboptions.\n \n    procedure Set_GNAT_Style_Check_Options;\n-   --  This procedure is called to set the default style checking options\n-   --  for GNAT units (as set by -gnatg or -gnatyg).\n+   --  This procedure is called to set the default style checking options for\n+   --  GNAT units (as set by -gnatg or -gnatyg).\n \n    Style_Msg_Buf : String (1 .. 80);\n    Style_Msg_Len : Natural;\n@@ -301,8 +309,8 @@ package Stylesw is\n    --  Long enough string to hold all options from Save call below\n \n    procedure Save_Style_Check_Options (Options : out Style_Check_Options);\n-   --  Sets Options to represent current selection of options. This\n-   --  set can be restored by first calling Reset_Style_Check_Options,\n-   --  and then calling Set_Style_Check_Options with the Options string.\n+   --  Sets Options to represent current selection of options. This set can be\n+   --  restored by first calling Reset_Style_Check_Options, and then calling\n+   --  Set_Style_Check_Options with the Options string.\n \n end Stylesw;"}, {"sha": "362d1d03915d972a00ef88a334ea9739648b6df5", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 126, "deletions": 115, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,8 +46,8 @@ package body Uintp is\n    --  Uint value containing Int'First value, set by Initialize. The initial\n    --  value of Uint_0 is used for an assertion check that ensures that this\n    --  value is not used before it is initialized. This value is used in the\n-   --  UI_Is_In_Int_Range predicate, and it is right that this is a host\n-   --  value, since the issue is host representation of integer values.\n+   --  UI_Is_In_Int_Range predicate, and it is right that this is a host value,\n+   --  since the issue is host representation of integer values.\n \n    Uint_Int_Last : Uint;\n    --  Uint value containing Int'Last value set by Initialize\n@@ -70,11 +70,11 @@ package body Uintp is\n \n    Uints_Min   : Uint;\n    Udigits_Min : Int;\n-   --  These values are used to make sure that the mark/release mechanism\n-   --  does not destroy values saved in the U_Power tables or in the hash\n-   --  table used by UI_From_Int. Whenever an entry is made in either of\n-   --  these tabls, Uints_Min and Udigits_Min are updated to protect the\n-   --  entry, and Release never cuts back beyond these minimum values.\n+   --  These values are used to make sure that the mark/release mechanism does\n+   --  not destroy values saved in the U_Power tables or in the hash table used\n+   --  by UI_From_Int. Whenever an entry is made in either of these tabls,\n+   --  Uints_Min and Udigits_Min are updated to protect the entry, and Release\n+   --  never cuts back beyond these minimum values.\n \n    Int_0 : constant Int := 0;\n    Int_1 : constant Int := 1;\n@@ -86,9 +86,9 @@ package body Uintp is\n    -- UI_From_Int Hash Table --\n    ----------------------------\n \n-   --  UI_From_Int uses a hash table to avoid duplicating entries and\n-   --  wasting storage. This is particularly important for complex cases\n-   --  of back annotation.\n+   --  UI_From_Int uses a hash table to avoid duplicating entries and wasting\n+   --  storage. This is particularly important for complex cases of back\n+   --  annotation.\n \n    subtype Hnum is Nat range 0 .. 1022;\n \n@@ -112,8 +112,8 @@ package body Uintp is\n    --  Returns True if U is represented directly\n \n    function Direct_Val (U : Uint) return Int;\n-   --  U is a Uint for is represented directly. The returned result\n-   --  is the value represented.\n+   --  U is a Uint for is represented directly. The returned result is the\n+   --  value represented.\n \n    function GCD (Jin, Kin : Int) return Int;\n    --  Compute GCD of two integers. Assumes that Jin >= Kin >= 0\n@@ -122,46 +122,46 @@ package body Uintp is\n      (Input     : Uint;\n       To_Buffer : Boolean;\n       Format    : UI_Format);\n-   --  Common processing for UI_Image and UI_Write, To_Buffer is set\n-   --  True for UI_Image, and false for UI_Write, and Format is copied\n-   --  from the Format parameter to UI_Image or UI_Write.\n+   --  Common processing for UI_Image and UI_Write, To_Buffer is set True for\n+   --  UI_Image, and false for UI_Write, and Format is copied from the Format\n+   --  parameter to UI_Image or UI_Write.\n \n    procedure Init_Operand (UI : Uint; Vec : out UI_Vector);\n    pragma Inline (Init_Operand);\n    --  This procedure puts the value of UI into the vector in canonical\n-   --  multiple precision format. The parameter should be of the correct\n-   --  size as determined by a previous call to N_Digits (UI). The first\n-   --  digit of Vec contains the sign, all other digits are always non-\n-   --  negative. Note that the input may be directly represented, and in\n-   --  this case Vec will contain the corresponding one or two digit value.\n-   --  The low bound of Vec is always 1.\n+   --  multiple precision format. The parameter should be of the correct size\n+   --  as determined by a previous call to N_Digits (UI). The first digit of\n+   --  Vec contains the sign, all other digits are always non- negative. Note\n+   --  that the input may be directly represented, and in this case Vec will\n+   --  contain the corresponding one or two digit value. The low bound of Vec\n+   --  is always 1.\n \n    function Least_Sig_Digit (Arg : Uint) return Int;\n    pragma Inline (Least_Sig_Digit);\n-   --  Returns the Least Significant Digit of Arg quickly. When the given\n-   --  Uint is less than 2**15, the value returned is the input value, in\n-   --  this case the result may be negative. It is expected that any use\n-   --  will mask off unnecessary bits. This is used for finding Arg mod B\n-   --  where B is a power of two. Hence the actual base is irrelevent as\n-   --  long as it is a power of two.\n+   --  Returns the Least Significant Digit of Arg quickly. When the given Uint\n+   --  is less than 2**15, the value returned is the input value, in this case\n+   --  the result may be negative. It is expected that any use will mask off\n+   --  unnecessary bits. This is used for finding Arg mod B where B is a power\n+   --  of two. Hence the actual base is irrelevent as long as it is a power of\n+   --  two.\n \n    procedure Most_Sig_2_Digits\n      (Left      : Uint;\n       Right     : Uint;\n       Left_Hat  : out Int;\n       Right_Hat : out Int);\n    --  Returns leading two significant digits from the given pair of Uint's.\n-   --  Mathematically: returns Left / (Base ** K) and Right / (Base ** K)\n-   --  where K is as small as possible S.T. Right_Hat < Base * Base.\n-   --  It is required that Left > Right for the algorithm to work.\n+   --  Mathematically: returns Left / (Base ** K) and Right / (Base ** K) where\n+   --  K is as small as possible S.T. Right_Hat < Base * Base. It is required\n+   --  that Left > Right for the algorithm to work.\n \n    function N_Digits (Input : Uint) return Int;\n    pragma Inline (N_Digits);\n    --  Returns number of \"digits\" in a Uint\n \n    function Sum_Digits (Left : Uint; Sign : Int) return Int;\n-   --  If Sign = 1 return the sum of the \"digits\" of Abs (Left). If the\n-   --  total has more then one digit then return Sum_Digits of total.\n+   --  If Sign = 1 return the sum of the \"digits\" of Abs (Left). If the total\n+   --  has more then one digit then return Sum_Digits of total.\n \n    function Sum_Double_Digits (Left : Uint; Sign : Int) return Int;\n    --  Same as above but work in New_Base = Base * Base\n@@ -174,24 +174,25 @@ package body Uintp is\n       Discard_Remainder : Boolean);\n    --  Compute euclidian division of Left by Right, and return Quotient and\n    --  signed Remainder (Left rem Right).\n-   --  If Discard_Quotient is True, Quotient is left unchanged.\n-   --  If Discard_Remainder is True, Remainder is left unchanged.\n+   --\n+   --    If Discard_Quotient is True, Quotient is left unchanged.\n+   --    If Discard_Remainder is True, Remainder is left unchanged.\n \n    function Vector_To_Uint\n      (In_Vec   : UI_Vector;\n       Negative : Boolean) return Uint;\n-   --  Functions that calculate values in UI_Vectors, call this function\n-   --  to create and return the Uint value. In_Vec contains the multiple\n-   --  precision (Base) representation of a non-negative value. Leading\n-   --  zeroes are permitted. Negative is set if the desired result is\n-   --  the negative of the given value. The result will be either the\n-   --  appropriate directly represented value, or a table entry in the\n-   --  proper canonical format is created and returned.\n+   --  Functions that calculate values in UI_Vectors, call this function to\n+   --  create and return the Uint value. In_Vec contains the multiple precision\n+   --  (Base) representation of a non-negative value. Leading zeroes are\n+   --  permitted. Negative is set if the desired result is the negative of the\n+   --  given value. The result will be either the appropriate directly\n+   --  represented value, or a table entry in the proper canonical format is\n+   --  created and returned.\n    --\n-   --  Note that Init_Operand puts a signed value in the result vector,\n-   --  but Vector_To_Uint is always presented with a non-negative value.\n-   --  The processing of signs is something that is done by the caller\n-   --  before calling Vector_To_Uint.\n+   --  Note that Init_Operand puts a signed value in the result vector, but\n+   --  Vector_To_Uint is always presented with a non-negative value. The\n+   --  processing of signs is something that is done by the caller before\n+   --  calling Vector_To_Uint.\n \n    ------------\n    -- Direct --\n@@ -225,7 +226,6 @@ package body Uintp is\n \n       J := Jin;\n       K := Kin;\n-\n       while K /= Uint_0 loop\n          Tmp := J mod K;\n          J := K;\n@@ -276,8 +276,8 @@ package body Uintp is\n       --  Internal procedure to output one character\n \n       procedure Image_Exponent (N : Natural);\n-      --  Output non-zero exponent. Note that we only use the exponent\n-      --  form in the buffer case, so we know that To_Buffer is true.\n+      --  Output non-zero exponent. Note that we only use the exponent form in\n+      --  the buffer case, so we know that To_Buffer is true.\n \n       procedure Image_Uint (U : Uint);\n       --  Internal procedure to output characters of non-negative Uint\n@@ -1094,12 +1094,15 @@ package body Uintp is\n             X_Bigger := True;\n          else\n             Sum_Length := R_Length + 1;\n-            if R_Length > L_Length then Y_Bigger := True; end if;\n+\n+            if R_Length > L_Length then\n+               Y_Bigger := True;\n+            end if;\n          end if;\n \n-         --  Make copies of the absolute values of L_Vec and R_Vec into\n-         --  X and Y both with lengths equal to the maximum possibly\n-         --  needed. This makes looping over the digits much simpler.\n+         --  Make copies of the absolute values of L_Vec and R_Vec into X and Y\n+         --  both with lengths equal to the maximum possibly needed. This makes\n+         --  looping over the digits much simpler.\n \n          declare\n             X      : UI_Vector (1 .. Sum_Length);\n@@ -1162,9 +1165,9 @@ package body Uintp is\n                   end loop;\n                end if;\n \n-               --  If they have identical magnitude, just return 0, else\n-               --  swap if necessary so that X had the bigger magnitude.\n-               --  Determine if result is negative at this time.\n+               --  If they have identical magnitude, just return 0, else swap\n+               --  if necessary so that X had the bigger magnitude. Determine\n+               --  if result is negative at this time.\n \n                Result_Neg := False;\n \n@@ -1216,10 +1219,10 @@ package body Uintp is\n \n    function UI_Decimal_Digits_Hi (U : Uint) return Nat is\n    begin\n-      --  The maximum value of a \"digit\" is 32767, which is 5 decimal\n-      --  digits, so an N_Digit number could take up to 5 times this\n-      --  number of digits. This is certainly too high for large\n-      --  numbers but it is not worth worrying about.\n+      --  The maximum value of a \"digit\" is 32767, which is 5 decimal digits,\n+      --  so an N_Digit number could take up to 5 times this number of digits.\n+      --  This is certainly too high for large numbers but it is not worth\n+      --  worrying about.\n \n       return 5 * N_Digits (U);\n    end UI_Decimal_Digits_Hi;\n@@ -1233,8 +1236,8 @@ package body Uintp is\n       --  The maximum value of a \"digit\" is 32767, which is more than four\n       --  decimal digits, but not a full five digits. The easily computed\n       --  minimum number of decimal digits is thus 1 + 4 * the number of\n-      --  digits. This is certainly too low for large numbers but it is\n-      --  not worth worrying about.\n+      --  digits. This is certainly too low for large numbers but it is not\n+      --  worth worrying about.\n \n       return 1 + 4 * (N_Digits (U) - 1);\n    end UI_Decimal_Digits_Lo;\n@@ -1487,6 +1490,7 @@ package body Uintp is\n                Dividend (J) := Dividend (J) + Carry;\n \n                --  [ TEST REMAINDER ] & [ ADD BACK ] (steps D5 and D6)\n+\n                --  Here there is a slight difference from the book: the last\n                --  carry is always added in above and below (cancelling each\n                --  other). In fact the dividend going negative is used as\n@@ -1695,14 +1699,14 @@ package body Uintp is\n       if Dint (Min_Direct) <= Input and then Input <= Dint (Max_Direct) then\n          return Uint (Dint (Uint_Direct_Bias) + Input);\n \n-      --  For values of larger magnitude, compute digits into a vector and\n-      --  call Vector_To_Uint.\n+      --  For values of larger magnitude, compute digits into a vector and call\n+      --  Vector_To_Uint.\n \n       else\n          declare\n             Max_For_Dint : constant := 5;\n-            --  Base is defined so that 5 Uint digits is sufficient\n-            --  to hold the largest possible Dint value.\n+            --  Base is defined so that 5 Uint digits is sufficient to hold the\n+            --  largest possible Dint value.\n \n             V : UI_Vector (1 .. Max_For_Dint);\n \n@@ -1745,13 +1749,13 @@ package body Uintp is\n          return U;\n       end if;\n \n-      --  For values of larger magnitude, compute digits into a vector and\n-      --  call Vector_To_Uint.\n+      --  For values of larger magnitude, compute digits into a vector and call\n+      --  Vector_To_Uint.\n \n       declare\n          Max_For_Int : constant := 3;\n-         --  Base is defined so that 3 Uint digits is sufficient\n-         --  to hold the largest possible Int value.\n+         --  Base is defined so that 3 Uint digits is sufficient to hold the\n+         --  largest possible Int value.\n \n          V : UI_Vector (1 .. Max_For_Int);\n \n@@ -1841,8 +1845,8 @@ package body Uintp is\n \n             exit when Q /= ((U_Hat + B) / Den2);\n \n-            --  A single precision step Euclid step will give same answer as\n-            --  a multiprecision one.\n+            --  A single precision step Euclid step will give same answer as a\n+            --  multiprecision one.\n \n             T := A - (Q * C);\n             A := C;\n@@ -1871,24 +1875,28 @@ package body Uintp is\n          else\n             --  Use prior single precision steps to compute this Euclid step\n \n-            --  Fixed bug 1415-008 spends 80% of its time working on this\n-            --  step. Perhaps we need a special case Int / Uint dot\n-            --  product to speed things up. ???\n+            --  For constructs such as:\n+            --  sqrt_2: constant :=  1.41421_35623_73095_04880_16887_24209_698;\n+            --  sqrt_eps: constant long_float := long_float( 1.0 / sqrt_2)\n+            --    ** long_float'machine_mantissa;\n+            --\n+            --  we spend 80% of our time working on this step. Perhaps we need\n+            --  a special case Int / Uint dot product to speed things up. ???\n \n-            --  Alternatively we could increase the single precision\n-            --  iterations to handle Uint's of some small size ( <5\n-            --  digits?). Then we would have more iterations on small Uint.\n-            --  Fixed bug 1415-008 only gets 5 (on average) single\n-            --  precision iterations per large iteration. ???\n+            --  Alternatively we could increase the single precision iterations\n+            --  to handle Uint's of some small size ( <5 digits?). Then we\n+            --  would have more iterations on small Uint. On the code above, we\n+            --  only get 5 (on average) single precision iterations per large\n+            --  iteration. ???\n \n             Tmp_UI := (UI_From_Int (A) * U) + (UI_From_Int (B) * V);\n             V := (UI_From_Int (C) * U) + (UI_From_Int (D) * V);\n             U := Tmp_UI;\n          end if;\n \n-         --  If the operands are very different in magnitude, the loop\n-         --  will generate large amounts of short-lived data, which it is\n-         --  worth removing periodically.\n+         --  If the operands are very different in magnitude, the loop will\n+         --  generate large amounts of short-lived data, which it is worth\n+         --  removing periodically.\n \n          if Iterations > 100 then\n             Release_And_Save (Marks, U, V);\n@@ -2368,18 +2376,17 @@ package body Uintp is\n \n    function UI_Negate (Right : Uint) return Uint is\n    begin\n-      --  Case where input is directly represented. Note that since the\n-      --  range of Direct values is non-symmetrical, the result may not\n-      --  be directly represented, this is taken care of in UI_From_Int.\n+      --  Case where input is directly represented. Note that since the range\n+      --  of Direct values is non-symmetrical, the result may not be directly\n+      --  represented, this is taken care of in UI_From_Int.\n \n       if Direct (Right) then\n          return UI_From_Int (-Direct_Val (Right));\n \n-      --  Full processing for multi-digit case. Note that we cannot just\n-      --  copy the value to the end of the table negating the first digit,\n-      --  since the range of Direct values is non-symmetrical, so we can\n-      --  have a negative value that is not Direct whose negation can be\n-      --  represented directly.\n+      --  Full processing for multi-digit case. Note that we cannot just copy\n+      --  the value to the end of the table negating the first digit, since the\n+      --  range of Direct values is non-symmetrical, so we can have a negative\n+      --  value that is not Direct whose negation can be represented directly.\n \n       else\n          declare\n@@ -2438,19 +2445,18 @@ package body Uintp is\n                   Sign := 1;\n                end if;\n \n-               --  All cases are listed, grouped by mathematical method\n-               --  It is not inefficient to do have this case list out\n-               --  of order since GCC sorts the cases we list.\n+               --  All cases are listed, grouped by mathematical method It is\n+               --  not inefficient to do have this case list out of order since\n+               --  GCC sorts the cases we list.\n \n                case Int1_12 (abs (Direct_Val (Right))) is\n \n                   when 1 =>\n                      return Uint_0;\n \n-                  --  Powers of two are simple AND's with LS Left Digit\n-                  --  GCC will recognise these constants as powers of 2\n-                  --  and replace the rem with simpler operations where\n-                  --  possible.\n+                  --  Powers of two are simple AND's with LS Left Digit GCC\n+                  --  will recognise these constants as powers of 2 and replace\n+                  --  the rem with simpler operations where possible.\n \n                   --  Least_Sig_Digit might return Negative numbers\n \n@@ -2484,6 +2490,7 @@ package body Uintp is\n                         Sign * (Sum_Digits (Left, 1) rem Int (7)));\n \n                   --  Note: 2^32 mod 5 = -1\n+\n                   --  Alternating sums might be negative, but rem is always\n                   --  positive hence we must use mod here.\n \n@@ -2492,6 +2499,7 @@ package body Uintp is\n                      return UI_From_Int (Sign * Tmp);\n \n                   --  Note: 2^15 mod 9 = -1\n+\n                   --  Alternating sums might be negative, but rem is always\n                   --  positive hence we must use mod here.\n \n@@ -2500,33 +2508,36 @@ package body Uintp is\n                      return UI_From_Int (Sign * Tmp);\n \n                   --  Note: 2^15 mod 11 = -1\n+\n                   --  Alternating sums might be negative, but rem is always\n                   --  positive hence we must use mod here.\n \n                   when 11 =>\n                      Tmp := Sum_Digits (Left, -1) mod Int (11);\n                      return UI_From_Int (Sign * Tmp);\n \n-                  --  Now resort to Chinese Remainder theorem\n-                  --  to reduce 6, 10, 12 to previous special cases\n+                  --  Now resort to Chinese Remainder theorem to reduce 6, 10,\n+                  --  12 to previous special cases\n \n-                  --  There is no reason we could not add more cases\n-                  --  like these if it proves useful.\n+                  --  There is no reason we could not add more cases like these\n+                  --  if it proves useful.\n \n-                  --  Perhaps we should go up to 16, however\n-                  --  I have no \"trick\" for 13.\n+                  --  Perhaps we should go up to 16, however we have no \"trick\"\n+                  --  for 13.\n \n                   --  To find u mod m we:\n+\n                   --  Pick m1, m2 S.T.\n                   --     GCD(m1, m2) = 1 AND m = (m1 * m2).\n+\n                   --  Next we pick (Basis) M1, M2 small S.T.\n                   --     (M1 mod m1) = (M2 mod m2) = 1 AND\n                   --     (M1 mod m2) = (M2 mod m1) = 0\n \n-                  --  So u mod m  = (u1 * M1 + u2 * M2) mod m\n-                  --  Where u1 = (u mod m1) AND u2 = (u mod m2);\n-                  --  Under typical circumstances the last mod m\n-                  --  can be done with a (possible) single subtraction.\n+                  --  So u mod m = (u1 * M1 + u2 * M2) mod m Where u1 = (u mod\n+                  --  m1) AND u2 = (u mod m2); Under typical circumstances the\n+                  --  last mod m can be done with a (possible) single\n+                  --  subtraction.\n \n                   --  m1 = 2; m2 = 3; M1 = 3; M2 = 4;\n \n@@ -2655,9 +2666,9 @@ package body Uintp is\n             Init_Operand (Input, In_Vec);\n             Ret_Int := 0;\n \n-            --  Calculate -|Input| and then negates if value is positive.\n-            --  This handles our current definition of Int (based on\n-            --  2s complement). Is it secure enough?\n+            --  Calculate -|Input| and then negates if value is positive. This\n+            --  handles our current definition of Int (based on 2s complement).\n+            --  Is it secure enough???\n \n             for Idx in In_Vec'Range loop\n                Ret_Int := Ret_Int * Base - abs In_Vec (Idx);\n@@ -2723,10 +2734,10 @@ package body Uintp is\n                end if;\n             end if;\n \n-            --  The value is outside the direct representation range and\n-            --  must therefore be stored in the table. Expand the table\n-            --  to contain the count and tigis. The index of the new table\n-            --  entry will be returned as the result.\n+            --  The value is outside the direct representation range and must\n+            --  therefore be stored in the table. Expand the table to contain\n+            --  the count and tigis. The index of the new table entry will be\n+            --  returned as the result.\n \n             Uints.Increment_Last;\n             Uints.Table (Uints.Last).Length := Size;"}, {"sha": "40bfa12c2693da8d939c1a532b496225fd1c933d", "filename": "gcc/ada/xnmake.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fxnmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835d23b2e08bb08e88163700eac0dc08442b2b0b/gcc%2Fada%2Fxnmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxnmake.adb?ref=835d23b2e08bb08e88163700eac0dc08442b2b0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -372,12 +372,18 @@ begin\n                then\n                   Match (Field, Get_Field);\n \n-                  if    Field = \"Str\"   then Field := V_String_Id;\n-                  elsif Field = \"Node\"  then Field := V_Node_Id;\n-                  elsif Field = \"Name\"  then Field := V_Name_Id;\n-                  elsif Field = \"List\"  then Field := V_List_Id;\n-                  elsif Field = \"Elist\" then Field := V_Elist_Id;\n-                  elsif Field = \"Flag\"  then Field := V_Boolean;\n+                  if    Field = \"Str\"   then\n+                     Field := V_String_Id;\n+                  elsif Field = \"Node\"  then\n+                     Field := V_Node_Id;\n+                  elsif Field = \"Name\"  then\n+                     Field := V_Name_Id;\n+                  elsif Field = \"List\"  then\n+                     Field := V_List_Id;\n+                  elsif Field = \"Elist\" then\n+                     Field := V_Elist_Id;\n+                  elsif Field = \"Flag\"  then\n+                     Field := V_Boolean;\n                   end if;\n \n                   if Field = \"Boolean\" then"}]}