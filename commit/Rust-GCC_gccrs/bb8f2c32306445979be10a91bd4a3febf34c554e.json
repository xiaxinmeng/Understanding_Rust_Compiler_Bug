{"sha": "bb8f2c32306445979be10a91bd4a3febf34c554e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI4ZjJjMzIzMDY0NDU5NzliZTEwYTkxYmQ0YTNmZWJmMzRjNTU0ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-12T11:42:33Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-12T13:32:32Z"}, "message": "docs: update symver attribute description\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi: Be more precise in documentation\n\tof symver attribute.", "tree": {"sha": "1e6af935d9ea9d0034473bd78a9bc2c53696224a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e6af935d9ea9d0034473bd78a9bc2c53696224a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb8f2c32306445979be10a91bd4a3febf34c554e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8f2c32306445979be10a91bd4a3febf34c554e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8f2c32306445979be10a91bd4a3febf34c554e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8f2c32306445979be10a91bd4a3febf34c554e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7569ce583f540ae22c585cc5159e3b23deedd987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7569ce583f540ae22c585cc5159e3b23deedd987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7569ce583f540ae22c585cc5159e3b23deedd987"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "6542ada6583ca312eb021f7ca5e04669c9a3b7bc", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8f2c32306445979be10a91bd4a3febf34c554e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8f2c32306445979be10a91bd4a3febf34c554e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=bb8f2c32306445979be10a91bd4a3febf34c554e", "patch": "@@ -3848,23 +3848,33 @@ foo_v1 (void)\n Will produce a @code{.symver foo_v1, foo@@VERS_1} directive in the assembler\n output. \n \n-One can also define multiple version for a given symbol.\n+One can also define multiple version for a given symbol\n+(starting from binutils 2.35).\n \n @smallexample\n __attribute__ ((__symver__ (\"foo@@VERS_2\"), __symver__ (\"foo@@VERS_3\")))\n int symver_foo_v1 (void)\n @{\n @}\n-\n-__attribute__ ((__symver__ (\"bar@@VERS_2\")))\n-__attribute__ ((__symver__ (\"bar@@VERS_3\")))\n-int symver_bar_v1 (void)\n-@{\n-@}\n @end smallexample\n \n-This example creates an alias of @code{foo_v1} with symbol name\n-@code{symver_foo_v1} which will be version @code{VERS_2} of @code{foo}.\n+This example creates a symbol name @code{symver_foo_v1}\n+which will be version @code{VERS_2} and @code{VERS_3} of @code{foo}.\n+\n+If you have an older release of binutils, then symbol alias needs to\n+be used:\n+\n+@smallexample\n+__attribute__ ((__symver__ (\"foo@@VERS_2\")))\n+int foo_v1 (void)\n+{\n+  return 0;\n+}\n+\n+__attribute__ ((__symver__ (\"foo@VERS_3\")))\n+__attribute__ ((alias (\"foo_v1\")))\n+int symver_foo_v1 (void);\n+@end smallexample\n \n Finally if the parameter is @code{\"@var{name2}@@@@@var{nodename}\"} then in\n addition to creating a symbol version (as if"}]}