{"sha": "e33477bed718cc3c4377204e6ae5f0ddfc73f90e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzNDc3YmVkNzE4Y2MzYzQzNzcyMDRlNmFlNWYwZGRmYzczZjkwZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-05T21:04:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-05T21:04:32Z"}, "message": "(duplicate_loop_exit_test): Handle SUBREG in SET_DEST of loop exit\ntest statements.\n\nFrom-SVN: r7654", "tree": {"sha": "7836e3058aeed740b9ba97ef823433a33c5985e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7836e3058aeed740b9ba97ef823433a33c5985e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e33477bed718cc3c4377204e6ae5f0ddfc73f90e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33477bed718cc3c4377204e6ae5f0ddfc73f90e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33477bed718cc3c4377204e6ae5f0ddfc73f90e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33477bed718cc3c4377204e6ae5f0ddfc73f90e/comments", "author": null, "committer": null, "parents": [{"sha": "5af9117152b00cbffcaff7b74c2a98536d8de1e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af9117152b00cbffcaff7b74c2a98536d8de1e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af9117152b00cbffcaff7b74c2a98536d8de1e6"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "0792f172660b4b8183d40108a6dc85ce919dd78d", "filename": "gcc/jump.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33477bed718cc3c4377204e6ae5f0ddfc73f90e/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33477bed718cc3c4377204e6ae5f0ddfc73f90e/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=e33477bed718cc3c4377204e6ae5f0ddfc73f90e", "patch": "@@ -2041,7 +2041,7 @@ static int\n duplicate_loop_exit_test (loop_start)\n      rtx loop_start;\n {\n-  rtx insn, set, p, link;\n+  rtx insn, set, reg, p, link;\n   rtx copy = 0;\n   int num_insns = 0;\n   rtx exitcode = NEXT_INSN (JUMP_LABEL (next_nonnote_insn (loop_start)));\n@@ -2098,12 +2098,14 @@ duplicate_loop_exit_test (loop_start)\n   for (insn = exitcode; insn != lastexit; insn = NEXT_INSN (insn))\n     if (GET_CODE (insn) == INSN\n \t&& (set = single_set (insn)) != 0\n-\t&& GET_CODE (SET_DEST (set)) == REG\n-\t&& REGNO (SET_DEST (set)) >= FIRST_PSEUDO_REGISTER\n-\t&& regno_first_uid[REGNO (SET_DEST (set))] == INSN_UID (insn))\n+\t&& ((reg = SET_DEST (set), GET_CODE (reg) == REG)\n+\t    || (GET_CODE (reg) == SUBREG\n+\t\t&& (reg = SUBREG_REG (reg), GET_CODE (reg) == REG)))\n+\t&& REGNO (reg) >= FIRST_PSEUDO_REGISTER\n+\t&& regno_first_uid[REGNO (reg)] == INSN_UID (insn))\n       {\n \tfor (p = NEXT_INSN (insn); p != lastexit; p = NEXT_INSN (p))\n-\t  if (regno_last_uid[REGNO (SET_DEST (set))] == INSN_UID (p))\n+\t  if (regno_last_uid[REGNO (reg)] == INSN_UID (p))\n \t    break;\n \n \tif (p != lastexit)\n@@ -2116,10 +2118,9 @@ duplicate_loop_exit_test (loop_start)\n \t\tbzero ((char *) reg_map, max_reg * sizeof (rtx));\n \t      }\n \n-\t    REG_LOOP_TEST_P (SET_DEST (set)) = 1;\n+\t    REG_LOOP_TEST_P (reg) = 1;\n \n-\t    reg_map[REGNO (SET_DEST (set))]\n-\t      = gen_reg_rtx (GET_MODE (SET_DEST (set)));\n+\t    reg_map[REGNO (reg)] = gen_reg_rtx (GET_MODE (reg));\n \t  }\n       }\n "}]}