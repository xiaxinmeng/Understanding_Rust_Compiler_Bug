{"sha": "22c24ba48a20a4944a50cca06449debed7d1b3f4", "node_id": "C_kwDOANBUbNoAKDIyYzI0YmE0OGEyMGE0OTQ0YTUwY2NhMDY0NDlkZWJlZDdkMWIzZjQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-26T07:17:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-26T07:17:32Z"}, "message": "testsuite: Improve unlimited_polymorphic_3.f03 [PR103662]\n\nOn Mon, Apr 25, 2022 at 01:38:25PM +0200, Mikael Morin wrote:\n> I have just pushed the attached fix for two UNRESOLVED checks at -O0\u00a0that I\n> hadn\u2019t seen.\n\nI don't like forcing of DSE in -O0 compilation, wouldn't it be better\nto just not check the dse dump at -O0 like in the following patch?\n\nEven better would be to check that the z._data = stores are both present\nin *.optimized dump, but that doesn't really work at -O2 or above because\nwe inline the functions and optimize it completely away (both the stores\nand corresponding reads).\n\nThe first hunk is needed so that __OPTIMIZE__ effective target works in\nFortran testsuite, otherwise one gets a pedantic error and __OPTIMIZE__\nis considered not to match at all.\n\n2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR fortran/103662\n\t* lib/target-supports.exp (check_effective_target___OPTIMIZE__): Add\n\ta var definition to avoid pedwarn about empty translation unit.\n\t* gfortran.dg/unlimited_polymorphic_3.f03: Remove -ftree-dse from\n\tdg-additional-options, guard scan-tree-dump-not directives on\n\t__OPTIMIZE__ target.", "tree": {"sha": "c5df1efe401ea2bfeb453f55124203ae29c90325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5df1efe401ea2bfeb453f55124203ae29c90325"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22c24ba48a20a4944a50cca06449debed7d1b3f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c24ba48a20a4944a50cca06449debed7d1b3f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c24ba48a20a4944a50cca06449debed7d1b3f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c24ba48a20a4944a50cca06449debed7d1b3f4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a957cb71c004de80b0fd30c8db3cc67576e0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57a957cb71c004de80b0fd30c8db3cc67576e0ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57a957cb71c004de80b0fd30c8db3cc67576e0ce"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "00dd2ae119960d5c500904df70c05cb7361e9877", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_3.f03", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c24ba48a20a4944a50cca06449debed7d1b3f4/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c24ba48a20a4944a50cca06449debed7d1b3f4/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_3.f03?ref=22c24ba48a20a4944a50cca06449debed7d1b3f4", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do run }\n-! { dg-additional-options \"-ftree-dse -fdump-tree-dse-details\" }\n+! { dg-additional-options \"-fdump-tree-dse-details\" }\n !\n ! Check that pointer assignments allowed by F2003:C717\n ! work and check null initialization of CLASS(*) pointers.\n@@ -71,5 +71,5 @@ end subroutine foo_sq\n ! We used to produce multiple independant types for the unlimited polymorphic\n ! descriptors (types for class(*)) which caused stores to them to be seen as\n ! useless.\n-! { dg-final { scan-tree-dump-not \"Deleted dead store: z._data = &w\" \"dse1\" } }\n-! { dg-final { scan-tree-dump-not \"Deleted dead store: z._data = &x\" \"dse1\" } }\n+! { dg-final { scan-tree-dump-not \"Deleted dead store: z._data = &w\" \"dse1\" { target __OPTIMIZE__ } } }\n+! { dg-final { scan-tree-dump-not \"Deleted dead store: z._data = &x\" \"dse1\" { target __OPTIMIZE__ } } }"}, {"sha": "902bdae8a441b55949c32713d510bfd70a74a14e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c24ba48a20a4944a50cca06449debed7d1b3f4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c24ba48a20a4944a50cca06449debed7d1b3f4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=22c24ba48a20a4944a50cca06449debed7d1b3f4", "patch": "@@ -11770,6 +11770,8 @@ proc check_effective_target___OPTIMIZE__ {} {\n \t#ifndef __OPTIMIZE__\n \t# error nein\n \t#endif\n+\t/* Avoid pedwarn about empty TU.  */\n+\tint dummy;\n     } [current_compiler_flags]]\n }\n "}]}