{"sha": "8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3NWYyOTAyYTJlMmNhNWY3YWNlOGJjNTI2NWJkMWE4MTVkZGEyMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-03-05T19:07:25Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-03-09T13:24:55Z"}, "message": "c++: Fix ABI issue with alignas on armv7hl [PR94050]\n\nThe static_assert in the following test was failing on armv7hl because\nwe were disregarding the alignas specifier on Cell.  BaseShape's data\ntakes up 20B on 32-bit architectures, but we failed to round up its\nTYPE_SIZE.  This happens since the\n<https://gcc.gnu.org/ml/gcc-patches/2019-06/msg01189.html>\npatch: here, in layout_class_type for TenuredCell, we see that the size\nof TenuredCell and its CLASSTYPE_AS_BASE match, so we set\n\n  CLASSTYPE_AS_BASE (t) = t;\n\nWhile TYPE_USER_ALIGN of TenuredCell was 0, because finalize_type_size\ncalled from finish_record_layout reset it, TYPE_USER_ALIGN of its\nCLASSTYPE_AS_BASE still remained 1.  After we replace it, it's no longer\n1.  Then we perform layout_empty_base_or_field for TenuredCell and since\nTYPE_USER_ALIGN of its CLASSTYPE_AS_BASE is now 0, we don't do this\nadjustment:\n\n  if (CLASSTYPE_USER_ALIGN (type))\n    {\n      rli->record_align = MAX (rli->record_align, CLASSTYPE_ALIGN (type));\n      if (warn_packed)\n        rli->unpacked_align = MAX (rli->unpacked_align, CLASSTYPE_ALIGN (type));\n      TYPE_USER_ALIGN (rli->t) = 1;\n    }\n\nwhere rli->t is BaseShape.  Then finalize_record_size won't use the\ncorrect rli->record_align and therefore\n  /* Round the size up to be a multiple of the required alignment.  */\n  TYPE_SIZE (rli->t) = round_up (unpadded_size, TYPE_ALIGN (rli->t));\nafter this we end up with the wrong size.\n\nSince the original fix was to avoid creating extra copies for LTO\npurposes, I think the following fix should be acceptable.\n\n\tPR c++/94050 - ABI issue with alignas on armv7hl.\n\t* class.c (layout_class_type): Don't replace a class's\n\tCLASSTYPE_AS_BASE if their TYPE_USER_ALIGN don't match.\n\n\t* g++.dg/abi/align3.C: New test.", "tree": {"sha": "616f67587661f17ab966cc152b5fd8cd25917fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/616f67587661f17ab966cc152b5fd8cd25917fb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "157e23d8803dda38d7d38404bcc4284ce2dce3b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157e23d8803dda38d7d38404bcc4284ce2dce3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157e23d8803dda38d7d38404bcc4284ce2dce3b5"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "5fc3e7def6bd72717aac6a917fd47c344214cba2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "patch": "@@ -1,3 +1,9 @@\n+2020-03-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94050 - ABI issue with alignas on armv7hl.\n+\t* class.c (layout_class_type): Don't replace a class's\n+\tCLASSTYPE_AS_BASE if their TYPE_USER_ALIGN don't match.\n+\n 2020-03-09  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \t* coroutines.cc (build_actor_fn): Factor out code inserting the"}, {"sha": "5340799fdd3587ee0513120fdbe977c43fa07480", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "patch": "@@ -6705,6 +6705,10 @@ layout_class_type (tree t, tree *virtuals_p)\n \n   /* If we didn't end up needing an as-base type, don't use it.  */\n   if (CLASSTYPE_AS_BASE (t) != t\n+      /* If T's CLASSTYPE_AS_BASE is TYPE_USER_ALIGN, but T is not,\n+\t replacing the as-base type would change CLASSTYPE_USER_ALIGN,\n+\t causing us to lose the user-specified alignment as in PR94050.  */\n+      && TYPE_USER_ALIGN (t) == TYPE_USER_ALIGN (CLASSTYPE_AS_BASE (t))\n       && tree_int_cst_equal (TYPE_SIZE (t),\n \t\t\t     TYPE_SIZE (CLASSTYPE_AS_BASE (t))))\n     CLASSTYPE_AS_BASE (t) = t;"}, {"sha": "6c0fab654201418b54966426e759956872ed9f87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "patch": "@@ -1,3 +1,8 @@\n+2020-03-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94050 - ABI issue with alignas on armv7hl.\n+\t* g++.dg/abi/align3.C: New test.\n+\n 2020-03-09  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/arm/fuse-caller-save.c: Fix DejaGnu typo."}, {"sha": "a56693a34b8f1079a068ebf63f549cf5644b81dd", "filename": "gcc/testsuite/g++.dg/abi/align3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Falign3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8475f2902a2e2ca5f7ace8bc5265bd1a815dda20/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Falign3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Falign3.C?ref=8475f2902a2e2ca5f7ace8bc5265bd1a815dda20", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/94050 - ABI issue with alignas on armv7hl.\n+// { dg-do compile { target c++11 } }\n+\n+struct alignas(8) Cell {};\n+struct TenuredCell : public Cell {};\n+struct BaseShape : public TenuredCell {\n+  void *p;\n+  unsigned q, r;\n+  void *s;\n+  __UINTPTR_TYPE__ t;\n+};\n+static_assert (sizeof (BaseShape) % 8 == 0, \"\");"}]}