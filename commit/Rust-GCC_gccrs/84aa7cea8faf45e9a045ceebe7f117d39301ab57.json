{"sha": "84aa7cea8faf45e9a045ceebe7f117d39301ab57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRhYTdjZWE4ZmFmNDVlOWEwNDVjZWViZTdmMTE3ZDM5MzAxYWI1Nw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2010-07-17T22:51:34Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2010-07-17T22:51:34Z"}, "message": "re PR target/44805 (FAIL: gcc.c-torture/execute/builtins/strpcpy-2.c execution, at -O1 and above)\n\n\tPR target/44805\n\t* config/pa/pa.h (CONSTANT_ALIGNMENT): Align strings to BITS_PER_WORD\n\ton all targets.\n\nFrom-SVN: r162278", "tree": {"sha": "efff6b07524227769e74084b91222e57988f34b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efff6b07524227769e74084b91222e57988f34b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84aa7cea8faf45e9a045ceebe7f117d39301ab57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84aa7cea8faf45e9a045ceebe7f117d39301ab57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84aa7cea8faf45e9a045ceebe7f117d39301ab57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84aa7cea8faf45e9a045ceebe7f117d39301ab57/comments", "author": null, "committer": null, "parents": [{"sha": "fbd4785962aa6959f7487e3592d4b32033334d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd4785962aa6959f7487e3592d4b32033334d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd4785962aa6959f7487e3592d4b32033334d78"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "ddfdc912a479580e8df712dde453c9889a9def77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84aa7cea8faf45e9a045ceebe7f117d39301ab57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84aa7cea8faf45e9a045ceebe7f117d39301ab57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84aa7cea8faf45e9a045ceebe7f117d39301ab57", "patch": "@@ -1,3 +1,25 @@\n+2010-07-17  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/44805\n+\t* config/pa/pa.h (CONSTANT_ALIGNMENT): Align strings to BITS_PER_WORD\n+\ton all targets.\n+\n+Index: config/pa/pa.h\n+===================================================================\n+--- config/pa/pa.h\t(revision 162277)\n++++ config/pa/pa.h\t(working copy)\n+@@ -316,8 +316,9 @@\n+ #define BIGGEST_ALIGNMENT (2 * BITS_PER_WORD)\n+ \n+ /* Get around hp-ux assembler bug, and make strcpy of constants fast.  */\n+-#define CONSTANT_ALIGNMENT(CODE, TYPEALIGN) \\\n+-  ((TYPEALIGN) < 32 ? 32 : (TYPEALIGN))\n++#define CONSTANT_ALIGNMENT(EXP, ALIGN)\t\t\\\n++  (TREE_CODE (EXP) == STRING_CST\t\t\\\n++   && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))\n+ \n+ /* Make arrays of chars word-aligned for the same reasons.  */\n+ #define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\\\n 2010-07-17  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/42235"}, {"sha": "73116c5383e15eb360d3e8a45c0fb94c4feeeeb5", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84aa7cea8faf45e9a045ceebe7f117d39301ab57/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84aa7cea8faf45e9a045ceebe7f117d39301ab57/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=84aa7cea8faf45e9a045ceebe7f117d39301ab57", "patch": "@@ -316,8 +316,9 @@ typedef struct GTY(()) machine_function\n #define BIGGEST_ALIGNMENT (2 * BITS_PER_WORD)\n \n /* Get around hp-ux assembler bug, and make strcpy of constants fast.  */\n-#define CONSTANT_ALIGNMENT(CODE, TYPEALIGN) \\\n-  ((TYPEALIGN) < 32 ? 32 : (TYPEALIGN))\n+#define CONSTANT_ALIGNMENT(EXP, ALIGN)\t\t\\\n+  (TREE_CODE (EXP) == STRING_CST\t\t\\\n+   && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))\n \n /* Make arrays of chars word-aligned for the same reasons.  */\n #define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\\"}]}