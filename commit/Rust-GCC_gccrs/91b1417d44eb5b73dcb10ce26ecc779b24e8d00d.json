{"sha": "91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFiMTQxN2Q0NGViNWI3M2RjYjEwY2UyNmVjYzc3OWIyNGU4ZDAwZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-01-05T15:20:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-01-05T15:20:47Z"}, "message": "[multiple changes]\n\n2004-01-05  Robert Dewar  <dewar@gnat.com>\n\n\t* 1ssecsta.ads: Default_Secondary_Stack is not a constant since it may\n\tbe modified by the binder generated main program if the -D switch is\n\tused.\n\n\t* 4onumaux.ads, 4znumaux.ads: Add Pure_Function pragmas for all\n\timported functions (since now we expect this to be done for imported\n\tfunctions)\n\n\t* 5vtaprop.adb: Add several ??? for sections requiring more comments\n\tMinor reformatting throughout\n\n\t* 5zinit.adb: Minor reformatting\n\tAdd 2004 to copyright date\n\tMinor changes to avoid -gnatwa warnings\n\tCorrect some instances of using OR instead of OR ELSE (noted while\n\tdoing reformatting)\n\n\t* sprint.adb: Minor updates to avoid -gnatwa warnings\n\n\t* s-secsta.ads, s-secsta.adb:\n\t(SS_Get_Max): New function to obtain high water mark for ss stack\n\tDefault_Secondary_Stack is not a constant since it may be modified by\n\tthe binder generated main program if the -D switch is used.\n\n\t* switch-b.adb: New -Dnnn switch for binder\n\n\t* switch-c.adb:\n\tMake -gnatg imply all warnings currently in -gnatwa\n\n\t* vms_conv.adb: Minor reformatting\n\tAdd 2004 to copyright notice\n\tAdd 2004 to printed copyright notice\n\n\t* 3vexpect.adb, 4zsytaco.adb, 3wsocthi.adb, 3zsocthi.adb,\n\t3zsocthi.adb, 56taprop.adb, 56tpopsp.adb, 5amastop.adb,\n\t5aml-tgt.adb, 5ataprop.adb, 5ataprop.adb, 5atpopsp.adb,\n\t5ftaprop.adb, 5ginterr.adb, 5gmastop.adb, 5gml-tgt.adb,\n\t5gtaprop.adb, 5hml-tgt.adb, 5hml-tgt.adb, 5hml-tgt.adb,\n\t5htaprop.adb, 5htraceb.adb, 5itaprop.adb, 5lml-tgt.adb,\n\t5sml-tgt.adb, 5staprop.adb, 5staprop.adb, 5stpopsp.adb,\n\t5vasthan.adb, 5vinmaop.adb, 5vinterr.adb, 5vtaprop.adb,\n\t5vml-tgt.adb, 5vtaprop.adb, 5wosprim.adb, 5wtaprop.adb,\n\t5zinterr.adb, 5zintman.adb, 5zml-tgt.adb, 5ztaprop.adb,\n\t6vcpp.adb, 6vcstrea.adb, 7staprop.adb, 7stpopsp.adb,\n\tvxaddr2line.adb, vxaddr2line.adb, xref_lib.adb, xr_tabls.adb,\n\txr_tabls.ads, s-tasdeb.adb, s-tasdeb.adb, sem_res.ads,\n\tsem_util.adb, sem_util.adb, sem_util.ads, s-interr.adb,\n\tchecks.adb, clean.adb, cstand.adb, einfo.ads,\n\teinfo.adb, exp_aggr.adb, exp_ch11.adb, exp_ch3.adb,\n\texp_ch4.adb, exp_ch5.adb, exp_ch7.adb, exp_ch9.adb,\n\tprj-nmsc.adb, prj-pp.adb, prj-util.adb, sem_attr.adb,\n\tsem_ch10.adb, sem_ch12.adb, sem_ch4.adb, g-dirope.adb,\n\tg-dirope.ads, gnatlbr.adb, i-cstrea.adb, inline.adb,\n\tlib-xref.adb, sem_ch5.adb, sem_ch7.adb, sem_ch8.adb:\n\tMinor reformatting and code clean ups.\n\tMinor changes to prevent -gnatwa warnings\n\n\t* ali.adb: Minor reformatting and cleanup of code\n\tAcquire new SS indication of secondary stack use from ali files\n\n\t* a-numaux.ads: Add Pure_Function pragmas for all imported functions\n\t(since now we expect this to be done for imported functions)\n\n\t* bindgen.adb: Generate call to modify default secondary stack size if\n\t-Dnnn switch given\n\n\t* bindusg.adb: Add line for new -D switch\n\n\t* exp_aggr.adb (Type_May_Have_Bit_Aligned_Components): More appropriate\n\treplacement name for Type_May_Have_Non_Bit_Aligned_Components!\n\tAdd circuitry for both records and arrays to avoid gigi\n\tprocessing if the type involved has non-bit-aligned components\n\n\t* exp_ch5.adb (Expand_Assign_Array): Avoid assumption that\n\tN_String_Literal node always references an E_String_Literal_Subtype\n\tentity. This may not be true in the future.\n\t(Possible_Bit_Aligned_Component): Move processing of\n\tComponent_May_Be_Bit_Aligned from exp_ch5 to exp_util\n\n\t* exp_ch6.adb (Expand_Thread_Body): Pick up\n\tDefault_Secondary_Stack_Size as variable so that we get value modified\n\tby possible -Dnnn binder parameter.\n\n\t* exp_util.adb (Component_May_Be_Bit_Aligned): New function.\n\t(Type_May_Have_Bit_Aligned_Components): New function.\n\n\t* exp_util.ads (Component_May_Be_Bit_Aligned): New function.\n\t(Type_May_Have_Bit_Aligned_Components): New function.\n\n\t* fe.h: (Set_Identifier_Casing): Fix prototype.\n\tAdd declaration for Sem_Elim.Eliminate_Error_Msg.\n\tMinor reformatting.\n\n\t* freeze.adb (Freeze_Entity): Add RM reference to error message about\n\timporting constant atomic/volatile objects.\n\t(Freeze_Subprogram): Reset Is_Pure indication for imported subprogram\n\tunless explicit Pure_Function pragma given, to avoid insidious bug of\n\tcall to non-pure imported function getting eliminated.\n\n\t* gnat1drv.adb, gnatbind.adb, gnatchop.adb, gnatfind.adb,\n\tgnatls.adb, gnatlink.adb, gnatmem.adb, gnatname.adb, gnatsym.adb,\n\tgnatxref.adb, gprcmd.adb, gprep.adb, make.adb: Minor reformatting\n\tAdd 2004 to printed copyright notice\n\n\t* lib-writ.ads, lib-writ.adb: Put new SS flag in ali file if secondary\n\tstack used.\n\n\t* Makefile.rtl: Add entry for g-sestin.o\n\tg-sestin.ads: New file.\n\n\t* mdll.adb: Minor changes to avoid -gnatwa warnings\n\n\t* mlib-tgt.adb: Minor reformatting\n\n\t* opt.ads: New parameter Default_Secondary_Stack_Size (GNATBIND)\n\tNew switch Sec_Stack_Used (GNAT, GNATBIND)\n\tMake Default_Secondary_Stack_Size a variable instead of a constant,\n\tso that it can be modified by the new -Dnnn bind switch.\n\n\t* rtsfind.adb (Load_Fail): Give full error message in configurable\n\trun-time mode if all_errors mode is set. This was not done in the case\n\tof a file not found, which was an oversight.\n\tNote if secondary stack unit is used by compiler.\n\n\t* sem_elab.adb (Check_A_Call): Rewrite to avoid trying to put\n\tineffective elaborate all pragmas on non-visible packages (this\n\thappened when a renamed subprogram was called). Now the elaborate all\n\talways goes on the package containing the renaming rather than the one\n\tcontaining the renamed subprogram.\n\n\t* sem_elim.ads, sem_elim.adb (Eliminate_Error_Msg): New procedure\n\t(Process_Eliminate_Pragma): Add parameter to capture pragma location.\n\n\t* sem_eval.adb (Eval_String_Literal): Do not assume that string literal\n\thas an Etype that references an E_String_Literal.\n\t(Eval_String_Literal): Avoid assumption that N_String_Literal node\n\talways references an E_String_Literal_Subtype entity. This may not\n\tbe true in the future.\n\n\t* sem_prag.adb (Process_Eliminate_Pragma): Add parameter to capture\n\tpragma location.\n\n\t* sem_res.adb (Resolve): Specialize msg for function name used in proc\n\tcall.\n\n2004-01-05  Ed Falis  <falis@gnat.com>\n\n\t* g-debuti.adb: Replaced direct boolean operator with short-circuit\n\tform.\n\n2004-01-05  Vincent Celier  <celier@gnat.com>\n\n\t* bld.adb: Minor comment updates\n\t(Process_Declarative_Items): Correct incorrect name (Index_Name instead\n\tof Item_Name).\n\n\t* make.adb (Gnatmake): Special process for files to compile/check when\n\t-B is specified. Fail when there are only foreign mains in attribute\n\tMain of the project file and -B is not specified. Do not skip bind/link\n\tsteps when -B is specified.\n\n\t* makeusg.adb: Document new switch -B\n\n\t* opt.ads (Build_Bind_And_Link_Full_Project): New Boolean flag\n\n\t* switch-m.adb: (Scan_Make_Switches): Process -B switch\n\n\t* vms_data.ads: Add new GNAT PRETTY qualifier\n\t/FORM_FEED_AFTER_PRAGMA_PAGE for switch -ff\n\n2004-01-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* trans.c (tree_transform, case N_Free_Statement): Handle thin pointer\n\tcase.\n\n\t* misc.c (gnat_printable_name): If VERBOSITY is 2, call\n\tSet_Identifier_Casing.\n\n\t* decl.c (gnat_to_gnu_entity, E_Function): Give error if return type\n\thas size that overflows.\n\n2004-01-05  Gary Dismukes  <dismukes@gnat.com>\n\n\t* exp_ch4.adb (Expand_Array_Comparison): Add Boolean constant to avoid\n\t-gnatwa warning on static condition.\n\n2004-01-05  Doug Rupp  <rupp@gnat.com>\n\n\t* link.c: (shared_libgnat_default) [VMS]: Change to STATIC.\n\n2004-01-05  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* Makefile.in: Install ali files using INSTALL_DATA_DATE to preserve\n\tall attributes, including read-only attribute.\n\n2004-01-05  Pascal Obry  <obry@gnat.com>\n\n\t* bindgen.adb (Gen_Object_Files_Options): Generate the new shared\n\tlibrary naming scheme.\n\n\t* mlib-prj.adb (Build_Library): Generate different names for the static\n\tor dynamic version of the GNAT runtime. This is needed to support the\n\tnew shared library naming scheme.\n\t(Process_Binder_File): Add detection of shared library in binder file\n\tbased on the new naming scheme.\n\n\t* gnatlink.adb (Process_Binder_File): Properly detect the new naming\n\tscheme for the shared runtime libraries.\n\n\t* Makefile.in:\n\t(LIBRARY_VERSION) [VMS]: Convert all . to _ to conform to new naming\n\tscheme.\n\t(install-gnatlib): Do not create symlinks for shared libraries.\n\t(gnatlib-shared-default): Idem.\n\t(gnatlib-shared-dual-win32): New target. Not used for now as the\n\tauto-import feature does not support arrays/records.\n\t(gnatlib-shared-win32): Do not create copy for the shared libraries.\n\t(gnatlib-shared-vms): Fix shared runtime libraries names.\n\n\t* osint.ads, osint.adb (Shared_Lib): New routine, returns the target\n\tdependent runtime shared library name.\n\n2004-01-05  Vasiliy Fofanov  <fofanov@act-europe.fr>\n\n\t* osint.adb (Read_Library_Info): Remove bogus check if ALI is older\n\tthan the object.\n\n2004-01-05  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch4.adb (Analyze_Allocator): Check restriction on dynamic\n\tprotected objects when allocator has a subtype indication, not a\n\tqualified expression. Note that qualified expressions may have to be\n\tchecked when limited aggregates are implemented.\n\n\t* sem_prag.adb (Analyze_Pragma, case Import): If enclosing package is\n\tpure, emit warning.\n\t(Analyze_Pragma, case Pure_Function): If enclosing package is pure and\n\tsubprogram is imported, remove warning.\n\n2004-01-05  Geert Bosch  <bosch@gnat.com>\n\n\t* s-poosiz.adb: Update copyright notice.\n\t(Allocate): Use Task_Lock to protect against concurrent access.\n\t(Deallocate): Likewise.\n\n2004-01-05  Joel Brobecker  <brobecker@gnat.com>\n\n\t* s-stalib.adb (Elab_Final_Code): Add missing year in date inside ???\n\tcomment.\n\nFrom-SVN: r75432", "tree": {"sha": "4e026dfac036b969e00a952b33c9f32df5724609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e026dfac036b969e00a952b33c9f32df5724609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/comments", "author": null, "committer": null, "parents": [{"sha": "1e2d4dc10521dd508ab4b9405e5a14f15343bf8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2d4dc10521dd508ab4b9405e5a14f15343bf8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2d4dc10521dd508ab4b9405e5a14f15343bf8d"}], "stats": {"total": 3884, "additions": 2489, "deletions": 1395}, "files": [{"sha": "1da66e86f2a0dcfad431b177974212ed2a150775", "filename": "gcc/ada/1ssecsta.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F1ssecsta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F1ssecsta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F1ssecsta.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -39,8 +39,8 @@ package System.Secondary_Stack is\n \n    package SSE renames System.Storage_Elements;\n \n-   Default_Secondary_Stack_Size : constant := 10 * 1024;\n-   --  Default size of a secondary stack\n+   Default_Secondary_Stack_Size : Natural := 10 * 1024;\n+   --  Default size of a secondary stack. May be modified by binder -D switch\n \n    procedure SS_Init\n      (Stk  : System.Address;"}, {"sha": "1f18885c813f08b3ccccde871ec36d3fdba24cf2", "filename": "gcc/ada/3vexpect.adb", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F3vexpect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F3vexpect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3vexpect.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -102,8 +102,7 @@ package body GNAT.Expect is\n      (Fds     : System.Address;\n       Num_Fds : Integer;\n       Timeout : Integer;\n-      Is_Set  : System.Address)\n-      return    Integer;\n+      Is_Set  : System.Address) return Integer;\n    pragma Import (C, Poll, \"__gnat_expect_poll\");\n    --  Check whether there is any data waiting on the file descriptor\n    --  Out_fd, and wait if there is none, at most Timeout milliseconds\n@@ -130,8 +129,7 @@ package body GNAT.Expect is\n    ---------\n \n    function \"+\"\n-     (P    : GNAT.Regpat.Pattern_Matcher)\n-      return Pattern_Matcher_Access\n+     (P : GNAT.Regpat.Pattern_Matcher) return Pattern_Matcher_Access\n    is\n    begin\n       return new GNAT.Regpat.Pattern_Matcher'(P);\n@@ -768,8 +766,7 @@ package body GNAT.Expect is\n    ------------------\n \n    function Get_Error_Fd\n-     (Descriptor : Process_Descriptor)\n-      return       GNAT.OS_Lib.File_Descriptor\n+     (Descriptor : Process_Descriptor) return GNAT.OS_Lib.File_Descriptor\n    is\n    begin\n       return Descriptor.Error_Fd;\n@@ -780,8 +777,7 @@ package body GNAT.Expect is\n    ------------------\n \n    function Get_Input_Fd\n-     (Descriptor : Process_Descriptor)\n-      return       GNAT.OS_Lib.File_Descriptor\n+     (Descriptor : Process_Descriptor) return GNAT.OS_Lib.File_Descriptor\n    is\n    begin\n       return Descriptor.Input_Fd;\n@@ -792,8 +788,7 @@ package body GNAT.Expect is\n    -------------------\n \n    function Get_Output_Fd\n-     (Descriptor : Process_Descriptor)\n-      return       GNAT.OS_Lib.File_Descriptor\n+     (Descriptor : Process_Descriptor) return GNAT.OS_Lib.File_Descriptor\n    is\n    begin\n       return Descriptor.Output_Fd;\n@@ -804,8 +799,7 @@ package body GNAT.Expect is\n    -------------\n \n    function Get_Pid\n-     (Descriptor : Process_Descriptor)\n-      return       Process_Id\n+     (Descriptor : Process_Descriptor) return Process_Id\n    is\n    begin\n       return Descriptor.Pid;\n@@ -848,8 +842,8 @@ package body GNAT.Expect is\n       function Get_Vfork_Jmpbuf return System.Address;\n       pragma Import (C, Get_Vfork_Jmpbuf, \"decc$$get_vfork_jmpbuf\");\n \n-      function Get_Current_Invo_Context (Addr : System.Address)\n-        return Process_Id;\n+      function Get_Current_Invo_Context\n+        (Addr : System.Address) return Process_Id;\n       pragma Import (C, Get_Current_Invo_Context,\n         \"LIB$GET_CURRENT_INVO_CONTEXT\");\n \n@@ -1003,21 +997,23 @@ package body GNAT.Expect is\n    ----------\n \n    procedure Send\n-     (Descriptor : in out Process_Descriptor;\n-      Str        : String;\n-      Add_LF     : Boolean := True;\n+     (Descriptor   : in out Process_Descriptor;\n+      Str          : String;\n+      Add_LF       : Boolean := True;\n       Empty_Buffer : Boolean := False)\n    is\n-      N           : Natural;\n       Full_Str    : constant String := Str & ASCII.LF;\n       Last        : Natural;\n       Result      : Expect_Match;\n       Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n \n+      Discard : Natural;\n+      pragma Unreferenced (Discard);\n+\n    begin\n       if Empty_Buffer then\n \n-         --  Force a read on the process if there is anything waiting.\n+         --  Force a read on the process if there is anything waiting\n \n          Expect_Internal (Descriptors, Result,\n                           Timeout => 0, Full_Buffer => False);\n@@ -1036,9 +1032,10 @@ package body GNAT.Expect is\n \n       Call_Filters (Descriptor, Full_Str (Full_Str'First .. Last), Input);\n \n-      N := Write (Descriptor.Input_Fd,\n-                  Full_Str'Address,\n-                  Last - Full_Str'First + 1);\n+      Discard := Write (Descriptor.Input_Fd,\n+                        Full_Str'Address,\n+                        Last - Full_Str'First + 1);\n+      --  Shouldn't we at least have a pragma Assert on the result ???\n    end Send;\n \n    -----------------"}, {"sha": "601c7b529935d67bb8ada3b693aee7cd1f6844ec", "filename": "gcc/ada/3wsocthi.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F3wsocthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F3wsocthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3wsocthi.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -143,8 +143,8 @@ package body GNAT.Sockets.Thin is\n    is\n       pragma Warnings (Off, Exceptfds);\n \n-      RFS  : Fd_Set_Access := Readfds;\n-      WFS  : Fd_Set_Access := Writefds;\n+      RFS  : constant Fd_Set_Access := Readfds;\n+      WFS  : constant Fd_Set_Access := Writefds;\n       WFSC : Fd_Set_Access := No_Fd_Set;\n       EFS  : Fd_Set_Access := Exceptfds;\n       Res  : C.int;\n@@ -190,10 +190,10 @@ package body GNAT.Sockets.Thin is\n \n       if EFS /= No_Fd_Set then\n          declare\n-            EFSC    : Fd_Set_Access := New_Socket_Set (EFS);\n+            EFSC    : constant Fd_Set_Access := New_Socket_Set (EFS);\n+            Flag    : constant C.int := MSG_PEEK + MSG_OOB;\n             Buffer  : Character;\n             Length  : C.int;\n-            Flag    : C.int := MSG_PEEK + MSG_OOB;\n             Fromlen : aliased C.int;\n \n          begin"}, {"sha": "92788e646f7f98ff96fa76b5d9a24442f4c31011", "filename": "gcc/ada/3zsocthi.adb", "status": "modified", "additions": 34, "deletions": 48, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F3zsocthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F3zsocthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3zsocthi.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -45,7 +45,8 @@ with Unchecked_Conversion;\n \n package body GNAT.Sockets.Thin is\n \n-   Non_Blocking_Sockets : Fd_Set_Access := New_Socket_Set (No_Socket_Set);\n+   Non_Blocking_Sockets : constant Fd_Set_Access :=\n+                            New_Socket_Set (No_Socket_Set);\n    --  When this package is initialized with Process_Blocking_IO set\n    --  to True, sockets are set in non-blocking mode to avoid blocking\n    --  the whole process when a thread wants to perform a blocking IO\n@@ -59,24 +60,25 @@ package body GNAT.Sockets.Thin is\n    --  When Thread_Blocking_IO is False, we set sockets in\n    --  non-blocking mode and we spend a period of time Quantum between\n    --  two attempts on a blocking operation.\n+\n    Thread_Blocking_IO : Boolean := True;\n \n    --  The following types and variables are required to create a Hostent\n    --  record \"by hand\".\n \n    type In_Addr_Access_Array_Access is access In_Addr_Access_Array;\n \n-   Alias_Access : Chars_Ptr_Pointers.Pointer :=\n+   Alias_Access : constant Chars_Ptr_Pointers.Pointer :=\n                     new C.Strings.chars_ptr'(C.Strings.Null_Ptr);\n \n-   In_Addr_Access_Array_A : In_Addr_Access_Array_Access :=\n+   In_Addr_Access_Array_A : constant In_Addr_Access_Array_Access :=\n                               new In_Addr_Access_Array'(new In_Addr, null);\n \n-   In_Addr_Access_Ptr : In_Addr_Access_Pointers.Pointer :=\n+   In_Addr_Access_Ptr : constant In_Addr_Access_Pointers.Pointer :=\n                           In_Addr_Access_Array_A\n                             (In_Addr_Access_Array_A'First)'Access;\n \n-   Local_Hostent : Hostent_Access := new Hostent;\n+   Local_Hostent : constant Hostent_Access := new Hostent;\n \n    -----------------------\n    -- Local Subprograms --\n@@ -87,30 +89,26 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Accept\n      (S       : C.int;\n       Addr    : System.Address;\n-      Addrlen : access C.int)\n-      return    C.int;\n+      Addrlen : access C.int) return C.int;\n    pragma Import (C, Syscall_Accept, \"accept\");\n \n    function Syscall_Connect\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n    pragma Import (C, Syscall_Connect, \"connect\");\n \n    function Syscall_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access)\n-      return C.int;\n+      Arg  : Int_Access) return C.int;\n    pragma Import (C, Syscall_Ioctl, \"ioctl\");\n \n    function Syscall_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int;\n+      Flags : C.int) return C.int;\n    pragma Import (C, Syscall_Recv, \"recv\");\n \n    function Syscall_Recvfrom\n@@ -119,16 +117,14 @@ package body GNAT.Sockets.Thin is\n       Len     : C.int;\n       Flags   : C.int;\n       From    : Sockaddr_In_Access;\n-      Fromlen : access C.int)\n-      return    C.int;\n+      Fromlen : access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n    function Syscall_Send\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int;\n+      Flags : C.int) return C.int;\n    pragma Import (C, Syscall_Send, \"send\");\n \n    function Syscall_Sendto\n@@ -137,15 +133,13 @@ package body GNAT.Sockets.Thin is\n       Len   : C.int;\n       Flags : C.int;\n       To    : Sockaddr_In_Access;\n-      Tolen : C.int)\n-      return  C.int;\n+      Tolen : C.int) return C.int;\n    pragma Import (C, Syscall_Sendto, \"sendto\");\n \n    function Syscall_Socket\n      (Domain   : C.int;\n       Typ      : C.int;\n-      Protocol : C.int)\n-      return     C.int;\n+      Protocol : C.int) return C.int;\n    pragma Import (C, Syscall_Socket, \"socket\");\n \n    function  Non_Blocking_Socket (S : C.int) return Boolean;\n@@ -158,12 +152,13 @@ package body GNAT.Sockets.Thin is\n    function C_Accept\n      (S       : C.int;\n       Addr    : System.Address;\n-      Addrlen : access C.int)\n-      return    C.int\n+      Addrlen : access C.int) return C.int\n    is\n       R   : C.int;\n       Val : aliased C.int := 1;\n+\n       Res : C.int;\n+      pragma Unreferenced (Res);\n \n    begin\n       loop\n@@ -184,6 +179,7 @@ package body GNAT.Sockets.Thin is\n \n          Set_Non_Blocking_Socket (R, Non_Blocking_Socket (S));\n          Res := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n+         --  Is it OK to ignore result ???\n       end if;\n \n       return R;\n@@ -196,8 +192,7 @@ package body GNAT.Sockets.Thin is\n    function C_Connect\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int\n+      Namelen : C.int) return C.int\n    is\n       Res : C.int;\n \n@@ -260,8 +255,7 @@ package body GNAT.Sockets.Thin is\n    function C_Gethostbyaddr\n      (Addr : System.Address;\n       Len  : C.int;\n-      Typ  : C.int)\n-      return Hostent_Access\n+      Typ  : C.int) return Hostent_Access\n    is\n       pragma Warnings (Off, Len);\n       pragma Warnings (Off, Typ);\n@@ -290,12 +284,10 @@ package body GNAT.Sockets.Thin is\n    ---------------------\n \n    function C_Gethostbyname\n-     (Name : C.char_array)\n-      return Hostent_Access\n+     (Name : C.char_array) return Hostent_Access\n    is\n       function VxWorks_Gethostbyname\n-        (Name : C.char_array)\n-        return C.int;\n+        (Name : C.char_array) return C.int;\n       pragma Import (C, VxWorks_Gethostbyname, \"hostGetByName\");\n \n       Addr : C.int;\n@@ -315,8 +307,7 @@ package body GNAT.Sockets.Thin is\n \n    function C_Getservbyname\n      (Name  : C.char_array;\n-      Proto : C.char_array)\n-      return  Servent_Access\n+      Proto : C.char_array) return Servent_Access\n    is\n       pragma Warnings (Off, Name);\n       pragma Warnings (Off, Proto);\n@@ -331,8 +322,7 @@ package body GNAT.Sockets.Thin is\n \n    function C_Getservbyport\n      (Port  : C.int;\n-      Proto : C.char_array)\n-      return  Servent_Access\n+      Proto : C.char_array) return Servent_Access\n    is\n       pragma Warnings (Off, Port);\n       pragma Warnings (Off, Proto);\n@@ -348,8 +338,7 @@ package body GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access)\n-      return C.int\n+      Arg  : Int_Access) return C.int\n    is\n    begin\n       if not Thread_Blocking_IO\n@@ -371,8 +360,7 @@ package body GNAT.Sockets.Thin is\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int\n+      Flags : C.int) return C.int\n    is\n       Res : C.int;\n \n@@ -399,8 +387,7 @@ package body GNAT.Sockets.Thin is\n       Len     : C.int;\n       Flags   : C.int;\n       From    : Sockaddr_In_Access;\n-      Fromlen : access C.int)\n-      return    C.int\n+      Fromlen : access C.int) return C.int\n    is\n       Res : C.int;\n \n@@ -425,8 +412,7 @@ package body GNAT.Sockets.Thin is\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int\n+      Flags : C.int) return C.int\n    is\n       Res : C.int;\n \n@@ -453,8 +439,7 @@ package body GNAT.Sockets.Thin is\n       Len   : C.int;\n       Flags : C.int;\n       To    : Sockaddr_In_Access;\n-      Tolen : C.int)\n-      return  C.int\n+      Tolen : C.int) return C.int\n    is\n       Res : C.int;\n \n@@ -478,12 +463,13 @@ package body GNAT.Sockets.Thin is\n    function C_Socket\n      (Domain   : C.int;\n       Typ      : C.int;\n-      Protocol : C.int)\n-      return     C.int\n+      Protocol : C.int) return C.int\n    is\n       R   : C.int;\n       Val : aliased C.int := 1;\n+\n       Res : C.int;\n+      pragma Unreferenced (Res);\n \n    begin\n       R := Syscall_Socket (Domain, Typ, Protocol);\n@@ -495,6 +481,7 @@ package body GNAT.Sockets.Thin is\n          --  in non-blocking mode by user.\n \n          Res := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n+         --  Is it OK to ignore result ???\n          Set_Non_Blocking_Socket (R, False);\n       end if;\n \n@@ -611,7 +598,6 @@ package body GNAT.Sockets.Thin is\n \n       if C_Msg = C.Strings.Null_Ptr then\n          return \"Unknown system error\";\n-\n       else\n          return C.Strings.Value (C_Msg);\n       end if;"}, {"sha": "0f84a9fe053b1abc06afc2e5a6e52054acb0f44c", "filename": "gcc/ada/4onumaux.ads", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F4onumaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F4onumaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4onumaux.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version for x86)                        --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,43 +50,59 @@ pragma Pure (Aux);\n \n    type Double is digits 18;\n \n+   --  We import these functions directly from C. Note that we label them\n+   --  all as pure functions, because indeed all of them are in fact pure!\n+\n    function Sin (X : Double) return Double;\n    pragma Import (C, Sin, \"sinl\");\n+   pragma Pure_Function (Sin);\n \n    function Cos (X : Double) return Double;\n    pragma Import (C, Cos, \"cosl\");\n+   pragma Pure_Function (Cos);\n \n    function Tan (X : Double) return Double;\n    pragma Import (C, Tan, \"tanl\");\n+   pragma Pure_Function (Tan);\n \n    function Exp (X : Double) return Double;\n    pragma Import (C, Exp, \"expl\");\n+   pragma Pure_Function (Exp);\n \n    function Sqrt (X : Double) return Double;\n    pragma Import (C, Sqrt, \"sqrtl\");\n+   pragma Pure_Function (Sqrt);\n \n    function Log (X : Double) return Double;\n    pragma Import (C, Log, \"logl\");\n+   pragma Pure_Function (Log);\n \n    function Acos (X : Double) return Double;\n    pragma Import (C, Acos, \"acosl\");\n+   pragma Pure_Function (Acos);\n \n    function Asin (X : Double) return Double;\n    pragma Import (C, Asin, \"asinl\");\n+   pragma Pure_Function (Asin);\n \n    function Atan (X : Double) return Double;\n    pragma Import (C, Atan, \"atanl\");\n+   pragma Pure_Function (Atan);\n \n    function Sinh (X : Double) return Double;\n    pragma Import (C, Sinh, \"sinhl\");\n+   pragma Pure_Function (Sinh);\n \n    function Cosh (X : Double) return Double;\n    pragma Import (C, Cosh, \"coshl\");\n+   pragma Pure_Function (Cosh);\n \n    function Tanh (X : Double) return Double;\n    pragma Import (C, Tanh, \"tanhl\");\n+   pragma Pure_Function (Tanh);\n \n    function Pow (X, Y : Double) return Double;\n    pragma Import (C, Pow, \"powl\");\n+   pragma Pure_Function (Pow);\n \n end Ada.Numerics.Aux;"}, {"sha": "3a995a12bd1a48cd04d2785462327580e7c1277e", "filename": "gcc/ada/4znumaux.ads", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F4znumaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F4znumaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4znumaux.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version, VxWorks)                       --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,48 +50,61 @@ pragma Pure (Aux);\n    --  no libm.a library for VxWorks.\n \n    type Double is digits 15;\n-   pragma Float_Representation (IEEE_Float, Double);\n-   --  Type Double is the type used to call the C routines. Note that this\n-   --  is IEEE format even when running on VMS with Vax_Float representation\n-   --  since we use the IEEE version of the C library with VMS.\n+   --  Type Double is the type used to call the C routines\n+\n+   --  We import these functions directly from C. Note that we label them\n+   --  all as pure functions, because indeed all of them are in fact pure!\n \n    function Sin (X : Double) return Double;\n    pragma Import (C, Sin, \"sin\");\n+   pragma Pure_Function (Sin);\n \n    function Cos (X : Double) return Double;\n    pragma Import (C, Cos, \"cos\");\n+   pragma Pure_Function (Cos);\n \n    function Tan (X : Double) return Double;\n    pragma Import (C, Tan, \"tan\");\n+   pragma Pure_Function (Tan);\n \n    function Exp (X : Double) return Double;\n    pragma Import (C, Exp, \"exp\");\n+   pragma Pure_Function (Exp);\n \n    function Sqrt (X : Double) return Double;\n    pragma Import (C, Sqrt, \"sqrt\");\n+   pragma Pure_Function (Sqrt);\n \n    function Log (X : Double) return Double;\n    pragma Import (C, Log, \"log\");\n+   pragma Pure_Function (Log);\n \n    function Acos (X : Double) return Double;\n    pragma Import (C, Acos, \"acos\");\n+   pragma Pure_Function (Acos);\n \n    function Asin (X : Double) return Double;\n    pragma Import (C, Asin, \"asin\");\n+   pragma Pure_Function (Asin);\n \n    function Atan (X : Double) return Double;\n    pragma Import (C, Atan, \"atan\");\n+   pragma Pure_Function (Atan);\n \n    function Sinh (X : Double) return Double;\n    pragma Import (C, Sinh, \"sinh\");\n+   pragma Pure_Function (Sinh);\n \n    function Cosh (X : Double) return Double;\n    pragma Import (C, Cosh, \"cosh\");\n+   pragma Pure_Function (Cosh);\n \n    function Tanh (X : Double) return Double;\n    pragma Import (C, Tanh, \"tanh\");\n+   pragma Pure_Function (Tanh);\n \n    function Pow (X, Y : Double) return Double;\n    pragma Import (C, Pow, \"pow\");\n+   pragma Pure_Function (Pow);\n \n end Ada.Numerics.Aux;"}, {"sha": "fcb320a97ecba602aa25728f6a3cc0d3f0a6050f", "filename": "gcc/ada/4zsytaco.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F4zsytaco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F4zsytaco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4zsytaco.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1992-2003 Free Software Foundation, Inc.        --\n+--            Copyright (C) 1992-2004 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,8 +52,9 @@ package body Ada.Synchronous_Task_Control is\n \n       St := semTake (S.Sema, NO_WAIT);\n \n+      --  If we took the semaphore, reset semaphore state to FULL\n+\n       if St = OK then\n-         --  Took the semaphore. Reset semaphore state to FULL\n          Result := True;\n          St := semGive (S.Sema);\n       end if;\n@@ -74,6 +75,7 @@ package body Ada.Synchronous_Task_Control is\n       --  empty (St = OK) or have left it empty.\n \n       St := semTake (S.Sema, NO_WAIT);\n+      pragma Assert (St = OK);\n    end Set_False;\n \n    --------------\n@@ -82,7 +84,7 @@ package body Ada.Synchronous_Task_Control is\n \n    procedure Set_True (S : in out Suspension_Object) is\n       St : STATUS;\n-\n+      pragma Unreferenced (St);\n    begin\n       St := semGive (S.Sema);\n    end Set_True;\n@@ -136,7 +138,7 @@ package body Ada.Synchronous_Task_Control is\n \n    procedure Finalize (S : in out Suspension_Object) is\n       St : STATUS;\n-\n+      pragma Unreferenced (St);\n    begin\n       St := semDelete (S.Sema);\n       St := semDelete (S.Mutex);"}, {"sha": "ffaf40a847089cead7a2cfb6e199e4a7f671ef2d", "filename": "gcc/ada/56taprop.adb", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F56taprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F56taprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56taprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -332,15 +332,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Finalize_Lock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L.Mutex'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n    procedure Finalize_Lock (L : access RTS_Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n@@ -382,7 +380,6 @@ package body System.Task_Primitives.Operations is\n      (L : access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -429,7 +426,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_unlock (L);\n@@ -439,7 +435,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -456,7 +451,6 @@ package body System.Task_Primitives.Operations is\n       Reason   : System.Tasking.Task_States)\n    is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n \n    begin\n@@ -468,7 +462,7 @@ package body System.Task_Primitives.Operations is\n            (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n       end if;\n \n-      --  EINTR is not considered a failure.\n+      --  EINTR is not considered a failure\n \n       pragma Assert (Result = 0 or else Result = EINTR);\n    end Sleep;\n@@ -654,7 +648,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := clock_gettime\n         (clock_id => CLOCK_REALTIME, tp => TS'Unchecked_Access);\n@@ -669,7 +662,6 @@ package body System.Task_Primitives.Operations is\n    function RT_Resolution return Duration is\n       Res    : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := clock_getres\n         (clock_id => CLOCK_REALTIME, Res => Res'Unchecked_Access);\n@@ -683,9 +675,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -697,7 +687,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n-\n+      pragma Unreferenced (Result);\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -923,6 +913,7 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       if Stack_Base_Available then\n+\n          --  If Stack Checking is supported then allocate 2 additional pages:\n          --\n          --  In the worst case, stack is allocated at something like\n@@ -1028,7 +1019,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_kill (T.Common.LL.Thread,\n         Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n@@ -1095,7 +1085,6 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Suspend_Task;\n@@ -1106,12 +1095,10 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Resume_Task;"}, {"sha": "ade612c83874e5208356d89ffed088dd5510c376", "filename": "gcc/ada/56tpopsp.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F56tpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F56tpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56tpopsp.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -92,11 +92,14 @@ package body Specific is\n    --  tasks.\n \n    function Self return Task_ID is\n-      Result : Interfaces.C.int;\n       Value : aliased System.Address;\n \n+      Result : Interfaces.C.int;\n+      pragma Unreferenced (Result);\n+\n    begin\n       Result := st_getspecific (ATCB_Key, Value'Address);\n+      --  Is it OK not to check this result???\n \n       --  If the key value is Null, then it is a non-Ada task.\n "}, {"sha": "956efa4e55374600a1c6686a2c5cb7cb0d759e4e", "filename": "gcc/ada/5amastop.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5amastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5amastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5amastop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Version for Alpha/Dec Unix)                     --\n --                                                                          --\n---           Copyright (C) 1999-2002 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1999-2003 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -105,7 +105,8 @@ package body System.Machine_State_Operations is\n       --  asm instruction takes 4 bytes. So we must remove this value from\n       --  c_get_code_loc to have the call point.\n \n-      Loc : Code_Loc := c_get_code_loc (M);\n+      Loc : constant Code_Loc := c_get_code_loc (M);\n+\n    begin\n       if Loc = 0 then\n          return 0;"}, {"sha": "85bd71549973651adb15912e6aed37efb8efcb28", "filename": "gcc/ada/5aml-tgt.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5aml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5aml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5aml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -189,7 +189,9 @@ package body MLib.Tgt is\n                Success : Boolean;\n                Oldpath : String (1 .. Lib_Version'Length + 1);\n                Newpath : String (1 .. Lib_File'Length + 1);\n-               Result  : Integer;\n+\n+               Result : Integer;\n+               pragma Unreferenced (Result);\n \n                function Symlink\n                  (Oldpath : System.Address;"}, {"sha": "d67490fadd8072b09d6425ab4f5582d9f5646b39", "filename": "gcc/ada/5ataprop.adb", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ataprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ataprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ataprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -626,9 +626,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -640,6 +638,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n+      pragma Unreferenced (Result);\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -972,7 +971,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result :=\n         pthread_kill\n@@ -1038,8 +1036,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Warnings (Off, T);\n       pragma Warnings (Off, Thread_Self);\n@@ -1054,8 +1051,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Warnings (Off, T);\n       pragma Warnings (Off, Thread_Self);\n@@ -1074,12 +1070,11 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set : aliased sigset_t;\n       Result  : Interfaces.C.int;\n \n-      function State (Int : System.Interrupt_Management.Interrupt_ID)\n-                     return Character;\n+      function State\n+        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n-      --  Get interrupt state.  Defined in a-init.c\n-      --  The input argument is the interrupt number,\n-      --  and the result is one of the following:\n+      --  Get interrupt state. Defined in a-init.c. The input argument is\n+      --  the interrupt number, and the result is one of the following:\n \n       Default : constant Character := 's';\n       --    'n'   this interrupt not set by any Interrupt_State pragma"}, {"sha": "68b54c8c3867cf510717a6179666d6a1bc7911b3", "filename": "gcc/ada/5atpopsp.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5atpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5atpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5atpopsp.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -68,7 +68,6 @@ package body Specific is\n \n    procedure Set (Self_Id : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_setspecific (ATCB_Key, To_Address (Self_Id));\n       pragma Assert (Result = 0);"}, {"sha": "acedd7151efca09962c9d75b3afe0b26f261a5c1", "filename": "gcc/ada/5ftaprop.adb", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ftaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ftaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ftaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a IRIX (pthread library) version of this package.\n+--  This is a IRIX (pthread library) version of this package\n \n --  This package contains all the GNULL primitives that interface directly\n --  with the underlying OS.\n@@ -222,7 +222,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n       pragma Unreferenced (On);\n       pragma Unreferenced (T);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -332,15 +331,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Finalize_Lock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n    procedure Finalize_Lock (L : access RTS_Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n@@ -356,13 +353,14 @@ package body System.Task_Primitives.Operations is\n       Result := pthread_mutex_lock (L);\n       Ceiling_Violation := Result = EINVAL;\n \n-      --  assumes the cause of EINVAL is a priority ceiling violation\n+      --  Assumes the cause of EINVAL is a priority ceiling violation\n \n       pragma Assert (Result = 0 or else Result = EINVAL);\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L : access RTS_Lock; Global_Lock : Boolean := False)\n+     (L           : access RTS_Lock;\n+      Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n    begin\n@@ -396,7 +394,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n@@ -584,7 +581,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := clock_gettime (Real_Time_Clock_Id, TS'Unchecked_Access);\n       pragma Assert (Result = 0);\n@@ -614,9 +610,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : ST.Task_ID; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -628,7 +622,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n-\n+      pragma Unreferenced (Result);\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -1069,9 +1063,8 @@ package body System.Task_Primitives.Operations is\n       function State (Int : System.Interrupt_Management.Interrupt_ID)\n                      return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n-      --  Get interrupt state.  Defined in a-init.c\n-      --  The input argument is the interrupt number,\n-      --  and the result is one of the following:\n+      --  Get interrupt state. Defined in a-init.c. The input argument is\n+      --  the interrupt number, and the result is one of the following:\n \n       Default : constant Character := 's';\n       --    'n'   this interrupt not set by any Interrupt_State pragma"}, {"sha": "fd3f9c050134088f156339fa9854d1c6359741bd", "filename": "gcc/ada/5ginterr.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ginterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ginterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ginterr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---              Copyright (C) 1998-2002 Free Software Fundation             --\n+--              Copyright (C) 1998-2003 Free Software Fundation             --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -244,11 +244,9 @@ package body System.Interrupts is\n    -------------------------------------\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Dynamic_Interrupt_Protection)\n-      return   Boolean\n+     (Object : access Dynamic_Interrupt_Protection) return Boolean\n    is\n       pragma Unreferenced (Object);\n-\n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n@@ -279,11 +277,9 @@ package body System.Interrupts is\n    -------------------------------------\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Static_Interrupt_Protection)\n-      return   Boolean\n+     (Object : access Static_Interrupt_Protection) return Boolean\n    is\n       pragma Unreferenced (Object);\n-\n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n@@ -320,8 +316,9 @@ package body System.Interrupts is\n    -- Current_Handler --\n    ---------------------\n \n-   function Current_Handler (Interrupt : Interrupt_ID)\n-     return Parameterless_Handler is\n+   function Current_Handler\n+     (Interrupt : Interrupt_ID) return Parameterless_Handler\n+   is\n    begin\n       if Is_Reserved (Interrupt) then\n          raise Program_Error;\n@@ -466,13 +463,15 @@ package body System.Interrupts is\n    ---------------\n \n    function Reference (Interrupt : Interrupt_ID) return System.Address is\n-      Signal : System.Address :=\n-        System.Storage_Elements.To_Address\n-          (System.Storage_Elements.Integer_Address (Interrupt));\n+      Signal : constant System.Address :=\n+                 System.Storage_Elements.To_Address\n+                   (System.Storage_Elements.Integer_Address (Interrupt));\n \n    begin\n       if Is_Reserved (Interrupt) then\n-      --  Only usable Interrupts can be used for binding it to an Entry.\n+\n+         --  Only usable Interrupts can be used for binding it to an Entry\n+\n          raise Program_Error;\n       end if;\n "}, {"sha": "d05a779a18e294fc17c8d290c668e949df3be475", "filename": "gcc/ada/5gmastop.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5gmastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5gmastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gmastop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -108,18 +108,20 @@ package body System.Machine_State_Operations is\n    -- ABI-Dependent Declarations --\n    --------------------------------\n \n-   o32 : constant Natural := Boolean'Pos (System.Word_Size = 32);\n-   n32 : constant Natural := Boolean'Pos (System.Word_Size = 64);\n+   o32  : constant Boolean := System.Word_Size = 32;\n+   n32  : constant Boolean := System.Word_Size = 64;\n+   o32n : constant Natural := Boolean'Pos (o32);\n+   n32n : constant Natural := Boolean'Pos (n32);\n    --  Flags to indicate which ABI is in effect for this compilation. For the\n    --  purposes of this unit, the n32 and n64 ABI's are identical.\n \n-   LSC : constant Character := Character'Val (o32 * Character'Pos ('w') +\n-                                              n32 * Character'Pos ('d'));\n+   LSC : constant Character := Character'Val (o32n * Character'Pos ('w') +\n+                                              n32n * Character'Pos ('d'));\n    --  This is 'w' for o32, and 'd' for n32/n64, used for constructing the\n    --  load/store instructions used to save/restore machine instructions.\n \n-   Roff : constant Character := Character'Val (o32 * Character'Pos ('4') +\n-                                               n32 * Character'Pos (' '));\n+   Roff : constant Character := Character'Val (o32n * Character'Pos ('4') +\n+                                               n32n * Character'Pos (' '));\n    --  Offset from first byte of a __uint64 register save location where\n    --  the register value is stored.  For n32/64 we store the entire 64\n    --  bit register into the uint64.  For o32, only 32 bits are stored\n@@ -156,7 +158,7 @@ package body System.Machine_State_Operations is\n       function To_I_Type_Ptr is new\n         Unchecked_Conversion (Address_Int, I_Type_Ptr);\n \n-      Ret_Ins : I_Type_Ptr := To_I_Type_Ptr (Address_Int (Scp.SC_PC));\n+      Ret_Ins : constant I_Type_Ptr := To_I_Type_Ptr (Address_Int (Scp.SC_PC));\n       GP_Ptr  : Uns32_Ptr;\n \n    begin\n@@ -311,12 +313,11 @@ package body System.Machine_State_Operations is\n          Scp.SC_PC := 0;\n \n       else\n-\n          --  Set the GP to restore to the caller value (not callee value)\n          --  This is done only in o32 mode. In n32/n64 mode, GP is a normal\n          --  callee save register\n \n-         if o32 = 1 then\n+         if o32 then\n             Update_GP (Scp);\n          end if;\n "}, {"sha": "cc13d372ae68612b1d5b222141037cb7e85ccc2e", "filename": "gcc/ada/5gml-tgt.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5gml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5gml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -172,7 +172,9 @@ package body MLib.Tgt is\n                Success : Boolean;\n                Oldpath : String (1 .. Lib_Version'Length + 1);\n                Newpath : String (1 .. Lib_File'Length + 1);\n-               Result  : Integer;\n+\n+               Result : Integer;\n+               pragma Unreferenced (Result);\n \n                function Symlink\n                  (Oldpath : System.Address;"}, {"sha": "c9041ba1ba053a09dbfc3bfe1a33c037fee36fd5", "filename": "gcc/ada/5gtaprop.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5gtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5gtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -534,7 +534,6 @@ package body System.Task_Primitives.Operations is\n       Reason : System.Tasking.Task_States)\n    is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -878,8 +877,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then\n@@ -895,8 +893,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then"}, {"sha": "a8cbc7972484b3e0b3c4c24186f104ddeacae17c", "filename": "gcc/ada/5hml-tgt.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5hml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5hml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -125,7 +125,8 @@ package body MLib.Tgt is\n \n       Init_Fini : Argument_List_Access := Empty_Argument_List;\n \n-      Common_Options : Argument_List := Options & new String'(PIC_Option);\n+      Common_Options : constant Argument_List :=\n+                         Options & new String'(PIC_Option);\n       --  Common set of options to the gcc command performing the link.\n       --  On HPUX, this command eventually resorts to collect2, which may\n       --  generate a C file and compile it on the fly. This compilation shall\n@@ -177,12 +178,13 @@ package body MLib.Tgt is\n                Success : Boolean;\n                Oldpath : String (1 .. Lib_Version'Length + 1);\n                Newpath : String (1 .. Lib_File'Length + 1);\n-               Result  : Integer;\n+\n+               Result : Integer;\n+               pragma Unreferenced (Result);\n \n                function Symlink\n                  (Oldpath : System.Address;\n-                  Newpath : System.Address)\n-                  return    Integer;\n+                  Newpath : System.Address) return Integer;\n                pragma Import (C, Symlink, \"__gnat_symlink\");\n \n             begin"}, {"sha": "d917dda10706c937954b7a807afb83a0f68eccc2", "filename": "gcc/ada/5htaprop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5htaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5htaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5htaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -600,7 +600,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n-\n+      pragma Unreferenced (Result);\n    begin\n       if Do_Yield then\n          Result := sched_yield;"}, {"sha": "dce251a05a9859cf7d58197a9f32d5f27518256d", "filename": "gcc/ada/5htraceb.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5htraceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5htraceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5htraceb.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -221,8 +221,7 @@ package body System.Traceback is\n      (Pc          : Address;\n       Space       : Address;\n       Table_Start : Address;\n-      Table_End   : Address)\n-      return        Address;\n+      Table_End   : Address) return Address;\n    pragma Import (C, U_get_unwind_entry, \"U_get_unwind_entry\");\n    --  Given the bounds of an unwind table, return the address of the\n    --  unwind descriptor associated with a code location/space. In the case\n@@ -254,8 +253,7 @@ package body System.Traceback is\n    function U_get_previous_frame_x\n      (current_frame  : access CFD;\n       previous_frame : access PFD;\n-      previous_size  : Integer)\n-      return           Integer;\n+      previous_size  : Integer) return Integer;\n    pragma Import (C, U_get_previous_frame_x, \"U_get_previous_frame_x\");\n    --  Fetch the data describing the \"previous\" frame relatively to the\n    --  \"current\" one. \"previous_size\" should be the size of the \"previous\"\n@@ -270,9 +268,8 @@ package body System.Traceback is\n    ------------------\n \n    function C_Call_Chain\n-     (Traceback   : System.Address;\n-      Max_Len     : Natural)\n-      return        Natural\n+     (Traceback : System.Address;\n+      Max_Len   : Natural) return Natural\n    is\n       Val : Natural;\n \n@@ -530,10 +527,12 @@ package body System.Traceback is\n            and then U_is_shared_pc (Frame.cur_rlo, Frame.cur_r19) /= 0\n          then\n             declare\n-               Shlib_UWT   : UWT := U_get_shLib_unwind_table (Frame.cur_r19);\n-               Shlib_Start : Address := U_get_shLib_text_addr (Frame.cur_r19);\n-               Rlo_Offset  : Address := Frame.cur_rlo - Shlib_Start;\n-\n+               Shlib_UWT   : constant UWT     :=\n+                               U_get_shLib_unwind_table (Frame.cur_r19);\n+               Shlib_Start : constant Address :=\n+                               U_get_shLib_text_addr (Frame.cur_r19);\n+               Rlo_Offset  : constant Address :=\n+                               Frame.cur_rlo - Shlib_Start;\n             begin\n                UWD_Address := U_get_unwind_entry (Rlo_Offset,\n                                                   Frame.cur_rls,"}, {"sha": "9fae2de863c85d8e300ebf412300ac6de3bf0ce8", "filename": "gcc/ada/5itaprop.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5itaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5itaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -656,9 +656,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -671,7 +669,6 @@ package body System.Task_Primitives.Operations is\n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n       pragma Unreferenced (Result);\n-\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -988,8 +985,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then\n@@ -1005,8 +1001,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then"}, {"sha": "fbe5054888184ee45609c3b1af4b69e1a0ed2dfa", "filename": "gcc/ada/5lml-tgt.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5lml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5lml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -175,12 +175,13 @@ package body MLib.Tgt is\n                Success : Boolean;\n                Oldpath : String (1 .. Lib_Version'Length + 1);\n                Newpath : String (1 .. Lib_File'Length + 1);\n-               Result  : Integer;\n+\n+               Result : Integer;\n+               pragma Unreferenced (Result);\n \n                function Symlink\n                  (Oldpath : System.Address;\n-                  Newpath : System.Address)\n-                  return    Integer;\n+                  Newpath : System.Address) return Integer;\n                pragma Import (C, Symlink, \"__gnat_symlink\");\n \n             begin"}, {"sha": "f4facc910f1a2148e34035af717b7fd47bf20062", "filename": "gcc/ada/5sml-tgt.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5sml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5sml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -171,7 +171,9 @@ package body MLib.Tgt is\n                Success : Boolean;\n                Oldpath : String (1 .. Lib_Version'Length + 1);\n                Newpath : String (1 .. Lib_File'Length + 1);\n-               Result  : Integer;\n+\n+               Result : Integer;\n+               pragma Unreferenced (Result);\n \n                function Symlink\n                  (Oldpath : System.Address;"}, {"sha": "e555f1fa0f5cbef6a6edfc8d15f28b19e9a3d0f4", "filename": "gcc/ada/5staprop.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5staprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5staprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5staprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -275,14 +275,11 @@ package body System.Task_Primitives.Operations is\n    ------------\n \n    Check_Count  : Integer := 0;\n-   Old_Owner    : Task_ID;\n    Lock_Count   : Integer := 0;\n    Unlock_Count : Integer := 0;\n \n    function To_Lock_Ptr is\n      new Unchecked_Conversion (RTS_Lock_Ptr, Lock_Ptr);\n-   function To_Task_ID is\n-     new Unchecked_Conversion (Owner_ID, Task_ID);\n    function To_Owner_ID is\n      new Unchecked_Conversion (Task_ID, Owner_ID);\n \n@@ -300,9 +297,11 @@ package body System.Task_Primitives.Operations is\n       pragma Unreferenced (Context);\n \n       Self_ID : Task_ID := Self;\n-      Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n \n+      Result : Interfaces.C.int;\n+      pragma Unreferenced (Result);\n+\n    begin\n       --  It is not safe to raise an exception when using ZCX and the GCC\n       --  exception handling mechanism.\n@@ -758,7 +757,9 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Unreferenced (Loss_Of_Inheritance);\n \n-      Result  : Interfaces.C.int;\n+      Result : Interfaces.C.int;\n+      pragma Unreferenced (Result);\n+\n       Param   : aliased struct_pcparms;\n \n       use Task_Info;\n@@ -1605,7 +1606,6 @@ package body System.Task_Primitives.Operations is\n \n       if Unlock_Count - Check_Count > 1000 then\n          Check_Count := Unlock_Count;\n-         Old_Owner   := To_Task_ID (Single_RTS_Lock.Owner);\n       end if;\n \n       --  Check that caller is abort-deferred"}, {"sha": "eb32dd2cb817a39daf1a5b10dab8f8981d64b437", "filename": "gcc/ada/5stpopsp.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5stpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5stpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5stpopsp.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2002, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a version for Solaris native threads.\n+--  This is a version for Solaris native threads\n \n separate (System.Task_Primitives.Operations)\n package body Specific is\n@@ -54,11 +54,9 @@ package body Specific is\n    function Is_Valid_Task return Boolean is\n       Unknown_Task : aliased System.Address;\n       Result       : Interfaces.C.int;\n-\n    begin\n       Result := thr_getspecific (ATCB_Key, Unknown_Task'Unchecked_Access);\n       pragma Assert (Result = 0);\n-\n       return Unknown_Task /= System.Null_Address;\n    end Is_Valid_Task;\n "}, {"sha": "86d04025dbf8b22d70b33b0abd2a6323483505da", "filename": "gcc/ada/5vasthan.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vasthan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vasthan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vasthan.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -320,6 +320,7 @@ package body System.AST_Handling is\n \n    procedure Allocate_New_AST_Server is\n       Dummy : AST_Server_Task_Ptr;\n+      pragma Unreferenced (Dummy);\n \n    begin\n       if Num_AST_Servers = Max_AST_Servers then\n@@ -454,8 +455,7 @@ package body System.AST_Handling is\n \n    function Create_AST_Handler\n      (Taskid  : ATID.Task_Id;\n-      Entryno : Natural)\n-      return    System.Aux_DEC.AST_Handler\n+      Entryno : Natural) return System.Aux_DEC.AST_Handler\n    is\n       Attr_Ref : Attribute_Handle;\n \n@@ -465,7 +465,7 @@ package body System.AST_Handling is\n       function To_Descriptor_Ref is new Ada.Unchecked_Conversion\n         (AST_Handler, Descriptor_Ref);\n \n-      Original_Descriptor_Ref : Descriptor_Ref :=\n+      Original_Descriptor_Ref : constant Descriptor_Ref :=\n                                   To_Descriptor_Ref (Process_AST_Ptr);\n \n    begin"}, {"sha": "3d770f2bed9ee01325013e049e7ae88a7813eb34", "filename": "gcc/ada/5vinmaop.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vinmaop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vinmaop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vinmaop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,7 @@ package body System.Interrupt_Management.Operations is\n    function Interrupt_Wait (Mask : access Interrupt_Mask)\n      return Interrupt_ID\n    is\n-      Self_ID : Task_ID := Self;\n+      Self_ID : constant Task_ID := Self;\n       Iosb    : IO_Status_Block_Type := (0, 0, 0);\n       Status  : Cond_Value_Type;\n "}, {"sha": "f41f6542f9263e19f34e6815f6e0e3a8580c2d8a", "filename": "gcc/ada/5vinterr.adb", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vinterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vinterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vinterr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -219,17 +219,18 @@ package body System.Interrupts is\n    pragma Volatile_Components (User_Entry);\n    --  Holds the task and entry index (if any) for each interrupt\n \n-   Blocked : array (Interrupt_ID'Range) of Boolean := (others => False);\n-   pragma Volatile_Components (Blocked);\n+   Blocked : constant array (Interrupt_ID'Range) of Boolean :=\n+     (others => False);\n+--  ??? pragma Volatile_Components (Blocked);\n    --  True iff the corresponding interrupt is blocked in the process level\n \n    Ignored : array (Interrupt_ID'Range) of Boolean := (others => False);\n    pragma Volatile_Components (Ignored);\n    --  True iff the corresponding interrupt is blocked in the process level\n \n-   Last_Unblocker :\n-     array (Interrupt_ID'Range) of Task_ID := (others => Null_Task);\n-   pragma Volatile_Components (Last_Unblocker);\n+   Last_Unblocker : constant array (Interrupt_ID'Range) of Task_ID :=\n+     (others => Null_Task);\n+--  ??? pragma Volatile_Components (Last_Unblocker);\n    --  Holds the ID of the last Task which Unblocked this Interrupt.\n    --  It contains Null_Task if no tasks have ever requested the\n    --  Unblocking operation or the Interrupt is currently Blocked.\n@@ -324,7 +325,7 @@ package body System.Interrupts is\n \n       Ptr := Registered_Handler_Head;\n \n-      while (Ptr /= null) loop\n+      while Ptr /= null loop\n          if Ptr.H = Fat.Handler_Addr then\n             return True;\n          end if;\n@@ -726,8 +727,6 @@ package body System.Interrupts is\n         (Interrupt   : Interrupt_ID;\n          Static      : Boolean)\n       is\n-         Old_Handler : Parameterless_Handler;\n-\n       begin\n          if User_Entry (Interrupt).T /= Null_Task then\n             --  In case we have an Interrupt Entry installed.\n@@ -754,8 +753,6 @@ package body System.Interrupts is\n \n          Ignored (Interrupt) := False;\n \n-         Old_Handler := User_Handler (Interrupt).H;\n-\n          --  The new handler\n \n          User_Handler (Interrupt).H := null;\n@@ -959,7 +956,6 @@ package body System.Interrupts is\n       Tmp_ID          : Task_ID;\n       Tmp_Entry_Index : Task_Entry_Index;\n       Intwait_Mask    : aliased IMNG.Interrupt_Mask;\n-      Ret_Interrupt   : IMNG.Interrupt_ID;\n \n    begin\n       --  By making this task independent of master, when the process\n@@ -1016,7 +1012,6 @@ package body System.Interrupts is\n \n          else\n             Self_ID.Common.State := Interrupt_Server_Blocked_On_Event_Flag;\n-            Ret_Interrupt := IMOP.Interrupt_Wait (Intwait_Mask'Access);\n             Self_ID.Common.State := Runnable;\n \n             if not (Self_ID.Deferral_Level = 0"}, {"sha": "ecc39114e1c8aaab9607d09a408a5bd1a8a773fb", "filename": "gcc/ada/5vml-tgt.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2003, Ada Core Technologies, Inc.             --\n+--          Copyright (C) 2003-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,10 +25,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n---  This is the VMS version of the body.\n+--  This is the VMS version of the body\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Ada.Text_IO;             use Ada.Text_IO;\n@@ -142,8 +139,6 @@ package body MLib.Tgt is\n       pragma Unreferenced (Lib_Address);\n       pragma Unreferenced (Relocatable);\n \n-\n-\n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n                      Fil.Ext_To (Lib_Filename, DLL_Ext);\n@@ -152,7 +147,8 @@ package body MLib.Tgt is\n       Last_Opt  : Natural       := Opts'Last;\n       Opts2     : Argument_List (Options'Range);\n       Last_Opt2 : Natural       := Opts2'First - 1;\n-      Inter     : Argument_List := Interfaces;\n+\n+      Inter : constant Argument_List := Interfaces;\n \n       function Is_Interface (Obj_File : String) return Boolean;\n       --  For a Stand-Alone Library, returns True if Obj_File is the object\n@@ -172,9 +168,10 @@ package body MLib.Tgt is\n \n       function Is_Interface (Obj_File : String) return Boolean is\n          ALI : constant String :=\n-           Fil.Ext_To\n-             (Filename => To_Lower (Base_Name (Obj_File)),\n-              New_Ext  => \"ali\");\n+                 Fil.Ext_To\n+                  (Filename => To_Lower (Base_Name (Obj_File)),\n+                   New_Ext  => \"ali\");\n+\n       begin\n          if Inter'Length = 0 then\n             return True;\n@@ -203,7 +200,6 @@ package body MLib.Tgt is\n       begin\n          if Symbol_Data.Symbol_File = No_Name then\n             return \"symvec.opt\";\n-\n          else\n             return Get_Name_String (Symbol_Data.Symbol_File);\n          end if;\n@@ -239,9 +235,11 @@ package body MLib.Tgt is\n       end Version_String;\n \n       Opt_File_Name  : constant String := Option_File_Name;\n+      Version        : constant String := Version_String;\n       For_Linker_Opt : constant String_Access :=\n                          new String'(\"--for-linker=\" & Opt_File_Name);\n-      Version : constant String := Version_String;\n+\n+   --  Start of processing for Build_Dynamic_Library\n \n    begin\n       VMS_Options (VMS_Options'First + 1) := For_Linker_Opt;\n@@ -423,6 +421,7 @@ package body MLib.Tgt is\n       declare\n          Index : Natural := Opts'First;\n          Opt   : String_Access;\n+\n       begin\n          while Index <= Last_Opt loop\n             Opt := Opts (Index);"}, {"sha": "8603f8bdf951b6cbefb9c312de6530fce9da5acd", "filename": "gcc/ada/5vtaprop.adb", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5vtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -127,11 +127,11 @@ package body System.Task_Primitives.Operations is\n \n       procedure Set (Self_Id : Task_ID);\n       pragma Inline (Set);\n-      --  Set the self id for the current task.\n+      --  Set the self id for the current task\n \n       function Self return Task_ID;\n       pragma Inline (Self);\n-      --  Return a pointer to the Ada Task Control Block of the calling task.\n+      --  Return a pointer to the Ada Task Control Block of the calling task\n \n    end Specific;\n \n@@ -143,7 +143,7 @@ package body System.Task_Primitives.Operations is\n    ---------------------------------\n \n    function Register_Foreign_Thread (Thread : Thread_Id) return Task_ID;\n-   --  Allocate and Initialize a new ATCB for the current Thread.\n+   --  Allocate and Initialize a new ATCB for the current Thread\n \n    function Register_Foreign_Thread\n      (Thread : Thread_Id) return Task_ID is separate;\n@@ -160,17 +160,17 @@ package body System.Task_Primitives.Operations is\n    --  Signal the condition variable when AST fires.\n \n    procedure Timer_Sleep_AST (ID : Address) is\n-      Result     : Interfaces.C.int;\n-      Self_ID    : Task_ID := To_Task_ID (ID);\n-\n+      Result  : Interfaces.C.int;\n+      Self_ID : Task_ID := To_Task_ID (ID);\n    begin\n       Self_ID.Common.LL.AST_Pending := False;\n       Result := pthread_cond_signal_int_np (Self_ID.Common.LL.CV'Access);\n+      pragma Assert (Result = 0);\n    end Timer_Sleep_AST;\n \n-   -------------------\n-   --  Stack_Guard  --\n-   -------------------\n+   -----------------\n+   -- Stack_Guard --\n+   -----------------\n \n    --  The underlying thread system sets a guard page at the\n    --  bottom of a thread stack, so nothing is needed.\n@@ -179,7 +179,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n       pragma Unreferenced (T);\n       pragma Unreferenced (On);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -281,15 +280,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Finalize_Lock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L.L'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n    procedure Finalize_Lock (L : access RTS_Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n@@ -308,7 +305,7 @@ package body System.Task_Primitives.Operations is\n    begin\n       Current_Prio := Get_Priority (Self_ID);\n \n-      --  If there is no other tasks, no need to check priorities.\n+      --  If there is no other tasks, no need to check priorities\n \n       if All_Tasks_Link /= Null_Task\n         and then L.Prio < Interfaces.C.int (Current_Prio)\n@@ -331,7 +328,6 @@ package body System.Task_Primitives.Operations is\n       Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -341,7 +337,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_lock (T.Common.LL.L'Access);\n@@ -364,15 +359,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_unlock (L.L'Access);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n    procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_unlock (L);\n@@ -382,7 +375,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -410,7 +402,7 @@ package body System.Task_Primitives.Operations is\n            (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n       end if;\n \n-      --  EINTR is not considered a failure.\n+      --  EINTR is not considered a failure\n \n       pragma Assert (Result = 0 or else Result = EINTR);\n \n@@ -440,6 +432,8 @@ package body System.Task_Primitives.Operations is\n       Result     : Interfaces.C.int;\n       Status     : Cond_Value_Type;\n \n+      --  The body below requires more comments ???\n+\n    begin\n       Timedout := False;\n       Yielded := False;\n@@ -465,10 +459,12 @@ package body System.Task_Primitives.Operations is\n       if Single_Lock then\n          Result := pthread_cond_wait\n            (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access);\n+         pragma Assert (Result = 0);\n \n       else\n          Result := pthread_cond_wait\n            (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n+         pragma Assert (Result = 0);\n       end if;\n \n       Yielded := True;\n@@ -504,6 +500,8 @@ package body System.Task_Primitives.Operations is\n          Lock_RTS;\n       end if;\n \n+      --  More comments required in body below ???\n+\n       SSL.Abort_Defer.all;\n       Write_Lock (Self_ID);\n \n@@ -538,9 +536,11 @@ package body System.Task_Primitives.Operations is\n                if Single_Lock then\n                   Result := pthread_cond_wait\n                     (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access);\n+                  pragma Assert (Result = 0);\n                else\n                   Result := pthread_cond_wait\n                     (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n+                  pragma Assert (Result = 0);\n                end if;\n \n                Yielded := True;\n@@ -560,6 +560,7 @@ package body System.Task_Primitives.Operations is\n \n       if not Yielded then\n          Result := sched_yield;\n+         pragma Assert (Result = 0);\n       end if;\n \n       SSL.Abort_Undefer.all;\n@@ -601,7 +602,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n-\n+      pragma Unreferenced (Result);\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -712,11 +713,13 @@ package body System.Task_Primitives.Operations is\n    ----------------------\n \n    procedure Initialize_TCB (Self_ID : Task_ID; Succeeded : out Boolean) is\n-      Mutex_Attr   : aliased pthread_mutexattr_t;\n-      Result       : Interfaces.C.int;\n-      Cond_Attr    : aliased pthread_condattr_t;\n+      Mutex_Attr : aliased pthread_mutexattr_t;\n+      Result     : Interfaces.C.int;\n+      Cond_Attr  : aliased pthread_condattr_t;\n \n    begin\n+      --  More comments required in body below ???\n+\n       if not Single_Lock then\n          Result := pthread_mutexattr_init (Mutex_Attr'Access);\n          pragma Assert (Result = 0 or else Result = ENOMEM);\n@@ -960,8 +963,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n@@ -976,12 +978,10 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Resume_Task;\n@@ -994,7 +994,7 @@ package body System.Task_Primitives.Operations is\n    begin\n       Environment_Task_ID := Environment_Task;\n \n-      --  Initialize the lock used to synchronize chain of all ATCBs.\n+      --  Initialize the lock used to synchronize chain of all ATCBs\n \n       Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n "}, {"sha": "07a8ca79eab21d579b22eaa9fd2f690eab72b3cd", "filename": "gcc/ada/5wosprim.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5wosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5wosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wosprim.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -93,28 +93,28 @@ package body System.OS_Primitives is\n    --  Use to have indirect access to multi-word variables\n \n    Tick_Frequency : aliased LARGE_INTEGER;\n-   TFA : LIA := Tick_Frequency'Access;\n+   TFA : constant LIA := Tick_Frequency'Access;\n    --  Holds frequency of high-performance counter used by Clock\n    --  Windows NT uses a 1_193_182 Hz counter on PCs.\n \n    Base_Ticks : aliased LARGE_INTEGER;\n-   BTA : LIA := Base_Ticks'Access;\n+   BTA : constant LIA := Base_Ticks'Access;\n    --  Holds the Tick count for the base time.\n \n    Base_Monotonic_Ticks : aliased LARGE_INTEGER;\n-   BMTA : LIA := Base_Monotonic_Ticks'Access;\n-   --  Holds the Tick count for the base monotonic time.\n+   BMTA : constant LIA := Base_Monotonic_Ticks'Access;\n+   --  Holds the Tick count for the base monotonic time\n \n    Base_Clock : aliased Duration;\n-   BCA : DA := Base_Clock'Access;\n+   BCA : constant DA := Base_Clock'Access;\n    --  Holds the current clock for the standard clock's base time\n \n    Base_Monotonic_Clock : aliased Duration;\n-   BMCA : DA := Base_Monotonic_Clock'Access;\n+   BMCA : constant DA := Base_Monotonic_Clock'Access;\n    --  Holds the current clock for monotonic clock's base time\n \n    Base_Time : aliased Long_Long_Integer;\n-   BTiA : LLIA := Base_Time'Access;\n+   BTiA : constant LLIA := Base_Time'Access;\n    --  Holds the base time used to check for system time change, used with\n    --  the standard clock.\n "}, {"sha": "bbbb2494112ab0dfdc9c9f409d1320acb66b5bd4", "filename": "gcc/ada/5wtaprop.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5wtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5wtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wtaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -1012,7 +1012,8 @@ package body System.Task_Primitives.Operations is\n    ----------------\n \n    procedure Initialize (Environment_Task : Task_ID) is\n-      Res : BOOL;\n+      Discard : BOOL;\n+      pragma Unreferenced (Discard);\n \n    begin\n       Environment_Task_ID := Environment_Task;\n@@ -1022,7 +1023,7 @@ package body System.Task_Primitives.Operations is\n          --  Here we need Annex E semantics, switch the current process to the\n          --  High_Priority_Class.\n \n-         Res :=\n+         Discard :=\n            OS_Interface.SetPriorityClass\n              (GetCurrentProcess, High_Priority_Class);\n "}, {"sha": "15445696f4d65c3bab61732cba6a2bdd82962fd7", "filename": "gcc/ada/5zinit.adb", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zinit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zinit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zinit.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---           Copyright (C) 2003 Free Software Foundation, Inc.              --\n+--          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,18 +31,16 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the VxWorks version of this package\n+--  This is the Level A cert version of this package for AE653\n \n with Interfaces.C;\n---  used for int and other types\n+--  Used for int and other types\n \n with Ada.Exceptions;\n---  used for Raise_Exception\n+--  Used for Raise_Exception\n \n package body System.Init is\n \n-   --  This unit contains initialization circuits that are system dependent.\n-\n    use Ada.Exceptions;\n    use Interfaces.C;\n \n@@ -52,6 +50,7 @@ package body System.Init is\n \n    NSIG : constant := 32;\n    --  Number of signals on the target OS\n+\n    type Signal is new int range 0 .. Interfaces.C.\"-\" (NSIG, 1);\n \n    SIGILL  : constant :=  4; --  illegal instruction (not reset)\n@@ -137,9 +136,9 @@ package body System.Init is\n    Already_Called : Boolean := False;\n \n    Handler_Installed : Integer := 0;\n+   pragma Export (C, Handler_Installed, \"__gnat_handler_installed\");\n    --  Indication of whether synchronous signal handlers have already been\n    --  installed by a previous call to Install_Handler.\n-   pragma Export (C, Handler_Installed, \"__gnat_handler_installed\");\n \n    ------------------------\n    --  Local procedures  --\n@@ -154,8 +153,10 @@ package body System.Init is\n    ------------------------\n \n    procedure GNAT_Error_Handler (Sig : Signal) is\n-      Mask   : aliased sigset_t;\n+      Mask : aliased sigset_t;\n+\n       Result : int;\n+      pragma Unreferenced (Result);\n \n    begin\n       --  VxWorks will always mask out the signal during the signal\n@@ -210,23 +211,24 @@ package body System.Init is\n       Num_Interrupt_States     : Integer;\n       Unreserve_All_Interrupts : Integer;\n       Exception_Tracebacks     : Integer;\n-      Zero_Cost_Exceptions     : Integer) is\n+      Zero_Cost_Exceptions     : Integer)\n+   is\n    begin\n       --  If this procedure has been already called once, check that the\n       --  arguments in this call are consistent with the ones in the\n       --  previous calls. Otherwise, raise a Program_Error exception.\n-      --\n+\n       --  We do not check for consistency of the wide character encoding\n       --  method. This default affects only Wide_Text_IO where no\n       --  explicit coding method is given, and there is no particular\n       --  reason to let this default be affected by the source\n       --  representation of a library in any case.\n-      --\n+\n       --  We do not check either for the consistency of exception tracebacks,\n       --  because exception tracebacks are not normally set in Stand-Alone\n       --  libraries. If a library or the main program set the exception\n       --  tracebacks, then they are never reset afterwards (see below).\n-      --\n+\n       --  The value of main_priority is meaningful only when we are\n       --  invoked from the main program elaboration routine of an Ada\n       --  application. Checking the consistency of this parameter should\n@@ -238,16 +240,16 @@ package body System.Init is\n       --  that the case where the main program is not written in Ada is\n       --  also properly handled, since the default value will then be\n       --  used for this parameter.\n-      --\n+\n       --  For identical reasons, the consistency of time_slice_val should\n       --  not be checked.\n \n       if Already_Called then\n-         if (Gl_Locking_Policy           /= Locking_Policy) or\n-            (Gl_Queuing_Policy           /= Queuing_Policy) or\n-            (Gl_Task_Dispatching_Policy  /= Task_Dispatching_Policy) or\n-            (Gl_Unreserve_All_Interrupts /= Unreserve_All_Interrupts) or\n-            (Gl_Exception_Tracebacks     /= Exception_Tracebacks) or\n+         if (Gl_Locking_Policy           /= Locking_Policy)           or else\n+            (Gl_Queuing_Policy           /= Queuing_Policy)           or else\n+            (Gl_Task_Dispatching_Policy  /= Task_Dispatching_Policy)  or else\n+            (Gl_Unreserve_All_Interrupts /= Unreserve_All_Interrupts) or else\n+            (Gl_Exception_Tracebacks     /= Exception_Tracebacks)     or else\n             (Gl_Zero_Cost_Exceptions     /= Zero_Cost_Exceptions)\n          then\n             raise Program_Error;\n@@ -285,7 +287,9 @@ package body System.Init is\n    procedure Install_Handler is\n       Mask          : aliased sigset_t;\n       Signal_Action : aliased struct_sigaction;\n-      Result        : Interfaces.C.int;\n+\n+      Result : Interfaces.C.int;\n+      pragma Unreferenced (Result);\n \n    begin\n       --  Set up signal handler to map synchronous signals to appropriate"}, {"sha": "5898e6d7e26c18a6efcb062889e908e8206abe26", "filename": "gcc/ada/5zinterr.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zinterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zinterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zinterr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -422,12 +422,15 @@ package body System.Interrupts is\n    --------------------------------\n \n    --  Restore default handlers for interrupt servers.\n+\n    --  This is called by the Interrupt_Manager task when it receives the abort\n    --  signal during program finalization.\n \n    procedure Finalize_Interrupt_Servers is\n+      HW_Interrupts : constant Boolean := HW_Interrupt'Last >= 0;\n+\n    begin\n-      if HW_Interrupt'Last >= 0 then\n+      if HW_Interrupts then\n          for Int in HW_Interrupt loop\n             if Server_ID (Interrupt_ID (Int)) /= null\n               and then\n@@ -527,11 +530,16 @@ package body System.Interrupts is\n    is\n       use Interfaces.VxWorks;\n \n-      Vec  : constant Interrupt_Vector :=\n-        INUM_TO_IVEC (Interfaces.VxWorks.int (Interrupt));\n+      Vec : constant Interrupt_Vector :=\n+              INUM_TO_IVEC (Interfaces.VxWorks.int (Interrupt));\n+\n       Old_Handler : constant VOIDFUNCPTR :=\n-        intVecGet (INUM_TO_IVEC (Interfaces.VxWorks.int (Interrupt)));\n+                      intVecGet\n+                        (INUM_TO_IVEC (Interfaces.VxWorks.int (Interrupt)));\n+\n       Stat : Interfaces.VxWorks.STATUS;\n+      pragma Unreferenced (Stat);\n+      --  ??? shouldn't we test Stat at least in a pragma Assert?\n \n    begin\n       --  Only install umbrella handler when no Ada handler has already been\n@@ -541,7 +549,7 @@ package body System.Interrupts is\n \n       if Default_Handler (Interrupt) = null then\n          Stat :=\n-           intConnect (Vec, VOIDFUNCPTR (Handler), System.Address (Interrupt));\n+           intConnect (Vec, Handler, System.Address (Interrupt));\n          Default_Handler (Interrupt) := Old_Handler;\n       end if;\n    end Install_Umbrella_Handler;\n@@ -611,7 +619,7 @@ package body System.Interrupts is\n \n       Ptr := Registered_Handler_Head;\n \n-      while (Ptr /= null) loop\n+      while Ptr /= null loop\n          if Ptr.H = Fat.Handler_Addr then\n             return True;\n          end if;\n@@ -653,8 +661,10 @@ package body System.Interrupts is\n    --  server task deletes its semaphore and terminates.\n \n    procedure Notify_Interrupt (Param : System.Address) is\n-      Interrupt      : Interrupt_ID := Interrupt_ID (Param);\n+      Interrupt : constant Interrupt_ID := Interrupt_ID (Param);\n+\n       Discard_Result : STATUS;\n+      pragma Unreferenced (Discard_Result);\n \n    begin\n       Discard_Result := semGive (Semaphore_ID_Map (Interrupt));"}, {"sha": "411d86d0ae067a3682bb219866277234892d1aff", "filename": "gcc/ada/5zintman.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zintman.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -86,9 +86,11 @@ package body System.Interrupt_Management is\n \n    procedure Notify_Exception (signo : Signal) is\n       Mask   : aliased sigset_t;\n-      Result : int;\n       My_Id  : t_id;\n \n+      Result : int;\n+      pragma Unreferenced (Result);\n+\n    begin\n       Result := pthread_sigmask (SIG_SETMASK, null, Mask'Unchecked_Access);\n       Result := sigdelset (Mask'Access, signo);"}, {"sha": "c1ae72475f0a9a05a3b18a54ba9eb37b11017db6", "filename": "gcc/ada/5zml-tgt.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5zml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zml-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -67,7 +67,7 @@ package body MLib.Tgt is\n    -- Archive_Ext --\n    -----------------\n \n-   function Archive_Ext return  String is\n+   function Archive_Ext return String is\n    begin\n       return \"a\";\n    end Archive_Ext;\n@@ -150,11 +150,13 @@ package body MLib.Tgt is\n    -----------------------------\n \n    function Get_Target_Suffix return String is\n-      Target_Name : String_Ptr := Sdefault.Target_Name;\n+      Target_Name : constant String_Ptr := Sdefault.Target_Name;\n       Index       : Positive   := Target_Name'First;\n+\n    begin\n-      while ((Index < Target_Name'Last) and then\n-               (Target_Name (Index + 1) /= '-')) loop\n+      while Index < Target_Name'Last\n+        and then Target_Name (Index + 1) /= '-'\n+      loop\n          Index := Index + 1;\n       end loop;\n "}, {"sha": "8bbbf0e13b043f80159752dfd6147b48791380e5", "filename": "gcc/ada/5ztaprop.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ztaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F5ztaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztaprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -717,9 +717,8 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       pragma Unreferenced (Do_Yield);\n-\n       Result : int;\n-\n+      pragma Unreferenced (Result);\n    begin\n       Result := taskDelay (0);\n    end Yield;"}, {"sha": "a0a8a49962ebab376e5134662273d3a873d08f9d", "filename": "gcc/ada/6vcpp.adb", "status": "modified", "additions": 39, "deletions": 33, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F6vcpp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F6vcpp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F6vcpp.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 2000-2002, Free Software Foundation, Inc.          --\n+--         Copyright (C) 2000-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the OpenVMS/Alpha DEC C++ (cxx) version of this package.\n+--  This is the OpenVMS/Alpha DEC C++ (cxx) version of this package\n \n with Ada.Tags;                use Ada.Tags;\n with System;                  use System;\n@@ -102,14 +102,14 @@ package body Interfaces.CPP is\n    function Displaced_This\n     (Current_This : System.Address;\n      Vptr         : Vtable_Ptr;\n-     Position     : Positive)\n-     return         System.Address\n+     Position     : Positive) return System.Address\n    is\n       pragma Warnings (Off, Vptr);\n       pragma Warnings (Off, Position);\n    begin\n       return Current_This;\n---        + Storage_Offset (Vptr.Prims_Ptr (Position).Delta1);\n+      --        + Storage_Offset (Vptr.Prims_Ptr (Position).Delta1);\n+      --  why is above line commented out ???\n    end Displaced_This;\n \n    -----------------------\n@@ -118,8 +118,7 @@ package body Interfaces.CPP is\n \n    function CPP_CW_Membership\n      (Obj_Tag : Vtable_Ptr;\n-      Typ_Tag : Vtable_Ptr)\n-      return Boolean\n+      Typ_Tag : Vtable_Ptr) return Boolean\n    is\n       Pos : constant Integer := Obj_Tag.TSD.Idepth - Typ_Tag.TSD.Idepth;\n    begin\n@@ -153,14 +152,24 @@ package body Interfaces.CPP is\n       return T.TSD.Idepth;\n    end CPP_Get_Inheritance_Depth;\n \n-   -------------------------\n+   -----------------------\n+   -- CPP_Get_RC_Offset --\n+   -----------------------\n+\n+   function CPP_Get_RC_Offset (T : Vtable_Ptr) return SSE.Storage_Offset is\n+      pragma Warnings (Off, T);\n+   begin\n+      return 0;\n+   end CPP_Get_RC_Offset;\n+\n+   -----------------------------\n    -- CPP_Get_Prim_Op_Address --\n-   -------------------------\n+   -----------------------------\n \n    function CPP_Get_Prim_Op_Address\n      (T        : Vtable_Ptr;\n-      Position : Positive)\n-      return Address is\n+      Position : Positive) return Address\n+   is\n    begin\n       return T.Prims_Ptr (Position).Pfn;\n    end CPP_Get_Prim_Op_Address;\n@@ -189,14 +198,14 @@ package body Interfaces.CPP is\n    --------------------\n \n    procedure CPP_Inherit_DT\n-    (Old_T   : Vtable_Ptr;\n-     New_T   : Vtable_Ptr;\n+    (Old_T       : Vtable_Ptr;\n+     New_T       : Vtable_Ptr;\n      Entry_Count : Natural)\n    is\n    begin\n       if Old_T /= null then\n-         New_T.Prims_Ptr (1 .. Entry_Count)\n-           := Old_T.Prims_Ptr (1 .. Entry_Count);\n+         New_T.Prims_Ptr (1 .. Entry_Count) :=\n+           Old_T.Prims_Ptr (1 .. Entry_Count);\n       end if;\n    end CPP_Inherit_DT;\n \n@@ -208,8 +217,8 @@ package body Interfaces.CPP is\n      (Old_TSD : Address;\n       New_Tag : Vtable_Ptr)\n    is\n-      TSD : constant Type_Specific_Data_Ptr\n-        := To_Type_Specific_Data_Ptr (Old_TSD);\n+      TSD : constant Type_Specific_Data_Ptr :=\n+              To_Type_Specific_Data_Ptr (Old_TSD);\n \n       New_TSD : Type_Specific_Data renames New_Tag.TSD.all;\n \n@@ -268,6 +277,17 @@ package body Interfaces.CPP is\n       T.Prims_Ptr (Position).Pfn := Value;\n    end CPP_Set_Prim_Op_Address;\n \n+   -----------------------\n+   -- CPP_Set_RC_Offset --\n+   -----------------------\n+\n+   procedure CPP_Set_RC_Offset (T : Vtable_Ptr; Value : SSE.Storage_Offset) is\n+      pragma Warnings (Off, T);\n+      pragma Warnings (Off, Value);\n+   begin\n+      null;\n+   end CPP_Set_RC_Offset;\n+\n    -------------------------------\n    -- CPP_Set_Remotely_Callable --\n    -------------------------------\n@@ -293,8 +313,7 @@ package body Interfaces.CPP is\n    -------------------\n \n    function Expanded_Name (T : Vtable_Ptr) return String is\n-      Result : Cstring_Ptr := T.TSD.Expanded_Name;\n-\n+      Result : constant Cstring_Ptr := T.TSD.Expanded_Name;\n    begin\n       return Result (1 .. Length (Result));\n    end Expanded_Name;\n@@ -304,8 +323,7 @@ package body Interfaces.CPP is\n    ------------------\n \n    function External_Tag (T : Vtable_Ptr) return String is\n-      Result : Cstring_Ptr := T.TSD.External_Tag;\n-\n+      Result : constant Cstring_Ptr := T.TSD.External_Tag;\n    begin\n       return Result (1 .. Length (Result));\n    end External_Tag;\n@@ -325,16 +343,4 @@ package body Interfaces.CPP is\n       return Len - 1;\n    end Length;\n \n-   procedure CPP_Set_RC_Offset (T : Vtable_Ptr; Value : SSE.Storage_Offset) is\n-      pragma Warnings (Off, T);\n-      pragma Warnings (Off, Value);\n-   begin\n-      null;\n-   end CPP_Set_RC_Offset;\n-\n-   function CPP_Get_RC_Offset (T : Vtable_Ptr) return SSE.Storage_Offset is\n-      pragma Warnings (Off, T);\n-   begin\n-      return 0;\n-   end CPP_Get_RC_Offset;\n end Interfaces.CPP;"}, {"sha": "ff0f88d42fe655004c44d26a5336b6ebe2fea313", "filename": "gcc/ada/6vcstrea.adb", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F6vcstrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F6vcstrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F6vcstrea.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,14 @@ package body Interfaces.C_Streams is\n \n    use type System.CRTL.size_t;\n \n+   --  Substantial rewriting is needed here. These functions are far too\n+   --  long to be inlined. They should be rewritten to be small helper\n+   --  functions that are inlined, and then call the real routines.???\n+\n+   --  Alternatively, provide a separate spec for VMS, in which case we\n+   --  could reduce the amount of junk bodies in the other cases by\n+   --  interfacing directly in the spec.???\n+\n    ------------\n    -- fread --\n    ------------\n@@ -46,31 +54,36 @@ package body Interfaces.C_Streams is\n      (buffer : voids;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t\n+      stream : FILEs) return size_t\n    is\n       Get_Count : size_t := 0;\n+\n       type Buffer_Type is array (size_t range 1 .. count,\n                                  size_t range 1 .. size) of Character;\n       type Buffer_Access is access Buffer_Type;\n       function To_BA is new Unchecked_Conversion (voids, Buffer_Access);\n-      BA : Buffer_Access := To_BA (buffer);\n+\n+      BA : constant Buffer_Access := To_BA (buffer);\n       Ch : int;\n-   begin\n \n+   begin\n       --  This Fread goes with the Fwrite below.\n       --  The C library fread sometimes can't read fputc generated files.\n \n       for C in 1 .. count loop\n          for S in 1 .. size loop\n             Ch := fgetc (stream);\n+\n             if Ch = EOF then\n                return Get_Count;\n             end if;\n+\n             BA.all (C, S) := Character'Val (Ch);\n          end loop;\n+\n          Get_Count := Get_Count + 1;\n       end loop;\n+\n       return Get_Count;\n    end fread;\n \n@@ -83,31 +96,36 @@ package body Interfaces.C_Streams is\n       index  : size_t;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t\n+      stream : FILEs) return size_t\n    is\n       Get_Count : size_t := 0;\n+\n       type Buffer_Type is array (size_t range 1 .. count,\n                                  size_t range 1 .. size) of Character;\n       type Buffer_Access is access Buffer_Type;\n       function To_BA is new Unchecked_Conversion (voids, Buffer_Access);\n-      BA : Buffer_Access := To_BA (buffer);\n+\n+      BA : constant Buffer_Access := To_BA (buffer);\n       Ch : int;\n-   begin\n \n+   begin\n       --  This Fread goes with the Fwrite below.\n       --  The C library fread sometimes can't read fputc generated files.\n \n       for C in 1 + index .. count + index loop\n          for S in 1 .. size loop\n             Ch := fgetc (stream);\n+\n             if Ch = EOF then\n                return Get_Count;\n             end if;\n+\n             BA.all (C, S) := Character'Val (Ch);\n          end loop;\n+\n          Get_Count := Get_Count + 1;\n       end loop;\n+\n       return Get_Count;\n    end fread;\n \n@@ -119,17 +137,18 @@ package body Interfaces.C_Streams is\n      (buffer : voids;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t\n+      stream : FILEs) return size_t\n    is\n       Put_Count : size_t := 0;\n+\n       type Buffer_Type is array (size_t range 1 .. count,\n                                  size_t range 1 .. size) of Character;\n       type Buffer_Access is access Buffer_Type;\n       function To_BA is new Unchecked_Conversion (voids, Buffer_Access);\n-      BA : Buffer_Access := To_BA (buffer);\n-   begin\n \n+      BA : constant Buffer_Access := To_BA (buffer);\n+\n+   begin\n       --  Fwrite on VMS has the undesirable effect of always generating at\n       --  least one record of output per call, regardless of buffering.  To\n       --  get around this, we do multiple fputc calls instead.\n@@ -140,8 +159,10 @@ package body Interfaces.C_Streams is\n                return Put_Count;\n             end if;\n          end loop;\n+\n          Put_Count := Put_Count + 1;\n       end loop;\n+\n       return Put_Count;\n    end fwrite;\n \n@@ -153,12 +174,11 @@ package body Interfaces.C_Streams is\n      (stream : FILEs;\n       buffer : chars;\n       mode   : int;\n-      size   : size_t)\n-      return   int\n+      size   : size_t) return int\n    is\n       use type System.Address;\n-   begin\n \n+   begin\n       --  In order for the above fwrite hack to work, we must always buffer\n       --  stdout and stderr. Is_regular_file on VMS cannot detect when\n       --  these are redirected to a file, so checking for that condition"}, {"sha": "6e71f45152e99a72d2b716c482616a2f7f188231", "filename": "gcc/ada/7staprop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F7staprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F7staprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7staprop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -725,7 +725,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n-\n+      pragma Unreferenced (Result);\n    begin\n       if Do_Yield then\n          Result := sched_yield;"}, {"sha": "fb8d731435327e718a13a96a3219374bb63cb275", "filename": "gcc/ada/7stpopsp.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F7stpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2F7stpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7stpopsp.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1992-2002, Free Software Fundation, Inc.        --\n+--            Copyright (C) 1992-2003, Free Software Fundation, Inc.        --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,6 @@ package body Specific is\n    procedure Initialize (Environment_Task : Task_ID) is\n       pragma Warnings (Off, Environment_Task);\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_key_create (ATCB_Key'Access, null);\n       pragma Assert (Result = 0);\n@@ -64,7 +63,6 @@ package body Specific is\n \n    procedure Set (Self_Id : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_setspecific (ATCB_Key, To_Address (Self_Id));\n       pragma Assert (Result = 0);"}, {"sha": "c554b7110aa133367a33e67a760c72c47d959af4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 252, "deletions": 0, "changes": 252, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -1,3 +1,255 @@\n+2004-01-05  Robert Dewar  <dewar@gnat.com>\n+\n+\t* 1ssecsta.ads: Default_Secondary_Stack is not a constant since it may\n+\tbe modified by the binder generated main program if the -D switch is\n+\tused.\n+\n+\t* 4onumaux.ads, 4znumaux.ads: Add Pure_Function pragmas for all\n+\timported functions (since now we expect this to be done for imported\n+\tfunctions)\n+\n+\t* 5vtaprop.adb: Add several ??? for sections requiring more comments\n+\tMinor reformatting throughout\n+\n+\t* 5zinit.adb: Minor reformatting\n+\tAdd 2004 to copyright date\n+\tMinor changes to avoid -gnatwa warnings\n+\tCorrect some instances of using OR instead of OR ELSE (noted while\n+\tdoing reformatting)\n+\n+\t* sprint.adb: Minor updates to avoid -gnatwa warnings\n+\n+\t* s-secsta.ads, s-secsta.adb: \n+\t(SS_Get_Max): New function to obtain high water mark for ss stack\n+\tDefault_Secondary_Stack is not a constant since it may be modified by\n+\tthe binder generated main program if the -D switch is used.\n+\n+\t* switch-b.adb: New -Dnnn switch for binder\n+\n+\t* switch-c.adb: \n+\tMake -gnatg imply all warnings currently in -gnatwa\n+\n+\t* vms_conv.adb: Minor reformatting\n+\tAdd 2004 to copyright notice\n+\tAdd 2004 to printed copyright notice\n+\n+\t* 3vexpect.adb, 4zsytaco.adb, 3wsocthi.adb, 3zsocthi.adb,\n+\t3zsocthi.adb, 56taprop.adb, 56tpopsp.adb, 5amastop.adb,\n+\t5aml-tgt.adb, 5ataprop.adb, 5ataprop.adb, 5atpopsp.adb,\n+\t5ftaprop.adb, 5ginterr.adb, 5gmastop.adb, 5gml-tgt.adb,\n+\t5gtaprop.adb, 5hml-tgt.adb, 5hml-tgt.adb, 5hml-tgt.adb,\n+\t5htaprop.adb, 5htraceb.adb, 5itaprop.adb, 5lml-tgt.adb,\n+\t5sml-tgt.adb, 5staprop.adb, 5staprop.adb, 5stpopsp.adb,\n+\t5vasthan.adb, 5vinmaop.adb, 5vinterr.adb, 5vtaprop.adb,\n+\t5vml-tgt.adb, 5vtaprop.adb, 5wosprim.adb, 5wtaprop.adb,\n+\t5zinterr.adb, 5zintman.adb, 5zml-tgt.adb, 5ztaprop.adb,\n+\t6vcpp.adb, 6vcstrea.adb, 7staprop.adb, 7stpopsp.adb,\n+\tvxaddr2line.adb, vxaddr2line.adb, xref_lib.adb, xr_tabls.adb,\n+\txr_tabls.ads, s-tasdeb.adb, s-tasdeb.adb, sem_res.ads,\n+\tsem_util.adb, sem_util.adb, sem_util.ads, s-interr.adb,\n+\tchecks.adb, clean.adb, cstand.adb, einfo.ads,\n+\teinfo.adb, exp_aggr.adb, exp_ch11.adb, exp_ch3.adb,\n+\texp_ch4.adb, exp_ch5.adb, exp_ch7.adb, exp_ch9.adb,\n+\tprj-nmsc.adb, prj-pp.adb, prj-util.adb, sem_attr.adb,\n+\tsem_ch10.adb, sem_ch12.adb, sem_ch4.adb, g-dirope.adb,\n+\tg-dirope.ads, gnatlbr.adb, i-cstrea.adb, inline.adb,\n+\tlib-xref.adb, sem_ch5.adb, sem_ch7.adb, sem_ch8.adb:\n+\tMinor reformatting and code clean ups.\n+\tMinor changes to prevent -gnatwa warnings\n+\n+\t* ali.adb: Minor reformatting and cleanup of code\n+\tAcquire new SS indication of secondary stack use from ali files\n+\n+\t* a-numaux.ads: Add Pure_Function pragmas for all imported functions\n+\t(since now we expect this to be done for imported functions)\n+\n+\t* bindgen.adb: Generate call to modify default secondary stack size if\n+\t-Dnnn switch given\n+\n+\t* bindusg.adb: Add line for new -D switch\n+\n+\t* exp_aggr.adb (Type_May_Have_Bit_Aligned_Components): More appropriate\n+\treplacement name for Type_May_Have_Non_Bit_Aligned_Components!\n+\tAdd circuitry for both records and arrays to avoid gigi\n+\tprocessing if the type involved has non-bit-aligned components\n+\n+\t* exp_ch5.adb (Expand_Assign_Array): Avoid assumption that\n+\tN_String_Literal node always references an E_String_Literal_Subtype\n+\tentity. This may not be true in the future.\n+\t(Possible_Bit_Aligned_Component): Move processing of\n+\tComponent_May_Be_Bit_Aligned from exp_ch5 to exp_util\n+\n+\t* exp_ch6.adb (Expand_Thread_Body): Pick up\n+\tDefault_Secondary_Stack_Size as variable so that we get value modified\n+\tby possible -Dnnn binder parameter.\n+\n+\t* exp_util.adb (Component_May_Be_Bit_Aligned): New function.\n+\t(Type_May_Have_Bit_Aligned_Components): New function.\n+\n+\t* exp_util.ads (Component_May_Be_Bit_Aligned): New function.\n+\t(Type_May_Have_Bit_Aligned_Components): New function.\n+\n+\t* fe.h: (Set_Identifier_Casing): Fix prototype.\n+\tAdd declaration for Sem_Elim.Eliminate_Error_Msg.\n+\tMinor reformatting.\n+\n+\t* freeze.adb (Freeze_Entity): Add RM reference to error message about\n+\timporting constant atomic/volatile objects.\n+\t(Freeze_Subprogram): Reset Is_Pure indication for imported subprogram\n+\tunless explicit Pure_Function pragma given, to avoid insidious bug of\n+\tcall to non-pure imported function getting eliminated.\n+\n+\t* gnat1drv.adb, gnatbind.adb, gnatchop.adb, gnatfind.adb,\n+\tgnatls.adb, gnatlink.adb, gnatmem.adb, gnatname.adb, gnatsym.adb,\n+\tgnatxref.adb, gprcmd.adb, gprep.adb, make.adb: Minor reformatting\n+\tAdd 2004 to printed copyright notice\n+\n+\t* lib-writ.ads, lib-writ.adb: Put new SS flag in ali file if secondary\n+\tstack used.\n+\n+\t* Makefile.rtl: Add entry for g-sestin.o\n+\tg-sestin.ads: New file.\n+\n+\t* mdll.adb: Minor changes to avoid -gnatwa warnings\n+\n+\t* mlib-tgt.adb: Minor reformatting\n+\n+\t* opt.ads: New parameter Default_Secondary_Stack_Size (GNATBIND)\n+\tNew switch Sec_Stack_Used (GNAT, GNATBIND)\n+\tMake Default_Secondary_Stack_Size a variable instead of a constant,\n+\tso that it can be modified by the new -Dnnn bind switch.\n+\n+\t* rtsfind.adb (Load_Fail): Give full error message in configurable\n+\trun-time mode if all_errors mode is set. This was not done in the case\n+\tof a file not found, which was an oversight.\n+\tNote if secondary stack unit is used by compiler.\n+\n+\t* sem_elab.adb (Check_A_Call): Rewrite to avoid trying to put\n+\tineffective elaborate all pragmas on non-visible packages (this\n+\thappened when a renamed subprogram was called). Now the elaborate all\n+\talways goes on the package containing the renaming rather than the one\n+\tcontaining the renamed subprogram.\n+\n+\t* sem_elim.ads, sem_elim.adb (Eliminate_Error_Msg): New procedure\n+\t(Process_Eliminate_Pragma): Add parameter to capture pragma location.\n+\n+\t* sem_eval.adb (Eval_String_Literal): Do not assume that string literal\n+\thas an Etype that references an E_String_Literal.\n+\t(Eval_String_Literal): Avoid assumption that N_String_Literal node\n+\talways references an E_String_Literal_Subtype entity. This may not\n+\tbe true in the future.\n+\n+\t* sem_prag.adb (Process_Eliminate_Pragma): Add parameter to capture\n+\tpragma location.\n+\n+\t* sem_res.adb (Resolve): Specialize msg for function name used in proc\n+\tcall.\n+\n+2004-01-05  Ed Falis  <falis@gnat.com>\n+\n+\t* g-debuti.adb: Replaced direct boolean operator with short-circuit\n+\tform.\n+\n+2004-01-05  Vincent Celier  <celier@gnat.com>\n+\n+\t* bld.adb: Minor comment updates\n+\t(Process_Declarative_Items): Correct incorrect name (Index_Name instead\n+\tof Item_Name).\n+\n+\t* make.adb (Gnatmake): Special process for files to compile/check when\n+\t-B is specified. Fail when there are only foreign mains in attribute\n+\tMain of the project file and -B is not specified. Do not skip bind/link\n+\tsteps when -B is specified.\n+\n+\t* makeusg.adb: Document new switch -B\n+\n+\t* opt.ads (Build_Bind_And_Link_Full_Project): New Boolean flag\n+\n+\t* switch-m.adb: (Scan_Make_Switches): Process -B switch\n+\n+\t* vms_data.ads: Add new GNAT PRETTY qualifier\n+\t/FORM_FEED_AFTER_PRAGMA_PAGE for switch -ff\n+\n+2004-01-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* trans.c (tree_transform, case N_Free_Statement): Handle thin pointer\n+\tcase.\n+\n+\t* misc.c (gnat_printable_name): If VERBOSITY is 2, call\n+\tSet_Identifier_Casing.\n+\n+\t* decl.c (gnat_to_gnu_entity, E_Function): Give error if return type\n+\thas size that overflows.\n+\n+2004-01-05  Gary Dismukes  <dismukes@gnat.com>\n+\n+\t* exp_ch4.adb (Expand_Array_Comparison): Add Boolean constant to avoid\n+\t-gnatwa warning on static condition.\n+\n+2004-01-05  Doug Rupp  <rupp@gnat.com>\n+\n+\t* link.c: (shared_libgnat_default) [VMS]: Change to STATIC.\n+\n+2004-01-05  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* Makefile.in: Install ali files using INSTALL_DATA_DATE to preserve\n+\tall attributes, including read-only attribute.\n+\n+2004-01-05  Pascal Obry  <obry@gnat.com>\n+\n+\t* bindgen.adb (Gen_Object_Files_Options): Generate the new shared\n+\tlibrary naming scheme.\n+\n+\t* mlib-prj.adb (Build_Library): Generate different names for the static\n+\tor dynamic version of the GNAT runtime. This is needed to support the\n+\tnew shared library naming scheme.\n+\t(Process_Binder_File): Add detection of shared library in binder file\n+\tbased on the new naming scheme.\n+\n+\t* gnatlink.adb (Process_Binder_File): Properly detect the new naming\n+\tscheme for the shared runtime libraries.\n+\n+\t* Makefile.in:\n+\t(LIBRARY_VERSION) [VMS]: Convert all . to _ to conform to new naming\n+\tscheme.\n+\t(install-gnatlib): Do not create symlinks for shared libraries.\n+\t(gnatlib-shared-default): Idem.\n+\t(gnatlib-shared-dual-win32): New target. Not used for now as the\n+\tauto-import feature does not support arrays/records.\n+\t(gnatlib-shared-win32): Do not create copy for the shared libraries.\n+\t(gnatlib-shared-vms): Fix shared runtime libraries names.\n+\n+\t* osint.ads, osint.adb (Shared_Lib): New routine, returns the target\n+\tdependent runtime shared library name.\n+\n+2004-01-05  Vasiliy Fofanov  <fofanov@act-europe.fr>\n+\n+\t* osint.adb (Read_Library_Info): Remove bogus check if ALI is older\n+\tthan the object.\n+\n+2004-01-05  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch4.adb (Analyze_Allocator): Check restriction on dynamic\n+\tprotected objects when allocator has a subtype indication, not a\n+\tqualified expression. Note that qualified expressions may have to be\n+\tchecked when limited aggregates are implemented.\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Import): If enclosing package is\n+\tpure, emit warning.\n+\t(Analyze_Pragma, case Pure_Function): If enclosing package is pure and\n+\tsubprogram is imported, remove warning.\n+\n+2004-01-05  Geert Bosch  <bosch@gnat.com>\n+\n+\t* s-poosiz.adb: Update copyright notice.\n+\t(Allocate): Use Task_Lock to protect against concurrent access.\n+\t(Deallocate): Likewise.\n+\n+2004-01-05  Joel Brobecker  <brobecker@gnat.com>\n+\n+\t* s-stalib.adb (Elab_Final_Code): Add missing year in date inside ???\n+\tcomment.\n+\n 2003-12-23  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* gnat_ug.texi: Force a CVS commit by updating copyright."}, {"sha": "79b4fc2691580f33f9e85457752f4e5e54c5fb26", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -1207,6 +1207,7 @@ endif\n   # This command transforms (YYYYMMDD) into YY,MMDD\n   GSMATCH_VERSION := $(shell grep \"^ *Gnat_Static_Version_String\" $(fsrcpfx)gnatvsn.ads | sed -e 's/.*(\\(.*\\)).*/\\1/' -e 's/\\(..\\)\\(..\\)\\(....\\)/\\2,\\3/')\n   TOOLS_LIBS_LO := --for-linker=sys\\\\$$\\$$library:trace.exe\n+  LIBRARY_VERSION := $(subst .,_,$(LIB_VERSION))\n endif\n \n ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n@@ -1241,6 +1242,8 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   EXTRA_GNATMAKE_OBJS = mdll.o mdll-utl.o mdll-fil.o\n   EXTRA_GNATRTL_NONTASKING_OBJS = g-regist.o\n   soext = .dll\n+# ??? This will be replaced by gnatlib-shared-dual-win32 when GNAT auto-import\n+# support for array/record will be done.\n   GNATLIB_SHARED = gnatlib-shared-win32\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n@@ -1688,7 +1691,7 @@ install-gnatlib: ../stamp-gnatlib\n \t-$(INSTALL_DATA) rts/Makefile.prolog $(DESTDIR)$(ADA_SHARE_MAKE_DIR)\n \t-$(INSTALL_DATA) rts/Makefile.generic $(DESTDIR)$(ADA_SHARE_MAKE_DIR)\n \tfor file in rts/*.ali; do \\\n-\t    $(INSTALL_DATA) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n+\t    $(INSTALL_DATA_DATE) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \tdone\n \t-$(INSTALL_DATA) rts/g-trasym$(objext) $(DESTDIR)$(ADA_RTL_OBJ_DIR)\n \t-for file in rts/*$(arext);do \\\n@@ -1707,11 +1710,6 @@ else\n \t    $(INSTALL) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \tdone\n endif\n-\tif [ -f rts/libgnat-*$(soext) ]; then \\\n-\t   (cd $(DESTDIR)$(ADA_RTL_OBJ_DIR) && \\\n-\t    $(LN_S) libgnat-*$(soext) libgnat$(soext) && \\\n-\t    $(LN_S) libgnarl-*$(soext) libgnarl$(soext)) \\\n-\tfi\n # This copy must be done preserving the date on the original file.\n \tfor file in rts/*.adb rts/*.ads; do \\\n \t    $(INSTALL_DATA_DATE) $$file $(DESTDIR)$(ADA_INCLUDE_DIR); \\\n@@ -1898,8 +1896,6 @@ gnatlib-shared-default:\n \t\t-o libgnarl-$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl-$(LIBRARY_VERSION)$(soext) $(THREADSLIB)\n-\tcd rts; $(LN_S) libgnat-$(LIBRARY_VERSION)$(soext) libgnat$(soext)\n-\tcd rts; $(LN_S) libgnarl-$(LIBRARY_VERSION)$(soext) libgnarl$(soext)\n \n gnatlib-shared-dual:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n@@ -1916,10 +1912,25 @@ gnatlib-shared-dual:\n              gnatlib\n \t$(MV) libgna*$(soext) rts\n \n-# Note that on Win32 the auto-import does not work for DLL, so on the\n-# platform we have a specific setup. The libgnat.dll contains only\n-# non-tasking objects and libgnarl.dll contains tasking and non-tasking\n-# objects. A tasking program must be linked with libgnarl.dll only.\n+gnatlib-shared-dual-win32:\n+\t$(MAKE) $(FLAGS_TO_PASS) \\\n+             GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n+\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n+             gnatlib-shared-win32\n+\t$(MV) rts/libgna*$(soext) .\n+\t$(RM) ../stamp-gnatlib2\n+\t$(MAKE) $(FLAGS_TO_PASS) \\\n+             GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n+\t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n+             gnatlib\n+\t$(MV) libgna*$(soext) rts\n+\n+# ??? we need to add the option to support auto-import of arrays/records to\n+# the GNATLIBFLAGS when this will be supported by GNAT. At this point we will\n+# use the gnatlib-shared-dual-win32 target to build the GNAT runtimes on\n+# Windows.\n gnatlib-shared-win32:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n@@ -1936,8 +1947,6 @@ gnatlib-shared-win32:\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl-$(LIBRARY_VERSION)$(soext) \\\n \t\t$(THREADSLIB) -Wl,libgnat-$(LIBRARY_VERSION)$(soext)\n-\tcd rts; $(LN_S) libgnat-$(LIBRARY_VERSION)$(soext) libgnat$(soext)\n-\tcd rts; $(LN_S) libgnarl-$(LIBRARY_VERSION)$(soext) libgnarl$(soext)\n \n gnatlib-shared-vms:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n@@ -1951,7 +1960,7 @@ gnatlib-shared-vms:\n \t$(SHLIB_SYMVEC) >> SYMVEC_$$$$.opt && \\\n \techo \"case_sensitive=NO\" >> SYMVEC_$$$$.opt && \\\n \t../../xgcc -g -B../../ -nostartfiles -shared -shared-libgcc \\\n-\t   -o libgnat_s$(soext) libgnat.a \\\n+\t   -o libgnat_$(LIBRARY_VERSION)$(soext) libgnat.a \\\n \t   sys\\$$library:trace.exe \\\n \t   --for-linker=/noinform \\\n \t   --for-linker=SYMVEC_$$$$.opt \\\n@@ -1961,8 +1970,8 @@ gnatlib-shared-vms:\n \t$(SHLIB_SYMVEC) >> SYMVEC_$$$$.opt && \\\n \techo \"case_sensitive=NO\" >> SYMVEC_$$$$.opt && \\\n \t../../xgcc -g -B../../ -nostartfiles -shared -shared-libgcc \\\n-\t   -o libgnarl_s$(soext) \\\n-\t   libgnarl.a libgnat_s$(soext) \\\n+\t   -o libgnarl_$(LIBRARY_VERSION)$(soext) \\\n+\t   libgnarl.a libgnat_$(LIBRARY_VERSION)$(soext) \\\n \t   sys\\$$library:trace.exe \\\n \t   --for-linker=/noinform \\\n \t   --for-linker=SYMVEC_$$$$.opt \\"}, {"sha": "9be0d727293fbcd88445f3e9890d45e4c5505efe", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -18,7 +18,7 @@\n #the Free Software Foundation, 59 Temple Place - Suite 330,\n #Boston, MA 02111-1307, USA.\n \n-# This makefile fragment is included into the ada Makefile (both Unix\n+# This makefile fragment is included in the ada Makefile (both Unix\n # and NT and VMS versions).\n \n # It's purpose is to allow the separate maintainence of the list of\n@@ -236,6 +236,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   g-pehage$(objext) \\\n   g-regexp$(objext) \\\n   g-regpat$(objext) \\\n+  g-sestin$(objext) \\\n   g-soccon$(objext) \\\n   g-socket$(objext) \\\n   g-socthi$(objext) \\"}, {"sha": "61d2dfa5e273287bf856d942658e0933be23be49", "filename": "gcc/ada/a-numaux.ads", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fa-numaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fa-numaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version, non-x86)                       --\n --                                                                          --\n---          Copyright (C) 1992-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,58 +39,73 @@\n --  One advantage of using this package is that it will interface directly to\n --  hardware instructions, such as the those provided on the Intel x86.\n \n---  Note: there are two versions of this package. One using the normal IEEE\n---  64-bit double format (which is this version), and one using 80-bit x86\n---  long double (see file 4onumaux.ads).\n+--  This version is for use with normal Unix math functions. Alternative\n+--  packages are used on OpenVMS (different import names), VxWorks (no\n+--  need for the -lm Linker_Options), and on the x86 (where we have two\n+--  versions one using inline ASM, and one importing from the C long\n+--  routines that take 80-bit arguments).\n \n package Ada.Numerics.Aux is\n pragma Pure (Aux);\n \n    pragma Linker_Options (\"-lm\");\n \n    type Double is digits 15;\n-   pragma Float_Representation (IEEE_Float, Double);\n-   --  Type Double is the type used to call the C routines. Note that this\n-   --  is IEEE format even when running on VMS with Vax_Float representation\n-   --  since we use the IEEE version of the C library with VMS.\n+   --  Type Double is the type used to call the C routines\n+\n+   --  We import these functions directly from C. Note that we label them\n+   --  all as pure functions, because indeed all of them are in fact pure!\n \n    function Sin (X : Double) return Double;\n    pragma Import (C, Sin, \"sin\");\n+   pragma Pure_Function (Sin);\n \n    function Cos (X : Double) return Double;\n    pragma Import (C, Cos, \"cos\");\n+   pragma Pure_Function (Cos);\n \n    function Tan (X : Double) return Double;\n    pragma Import (C, Tan, \"tan\");\n+   pragma Pure_Function (Tan);\n \n    function Exp (X : Double) return Double;\n    pragma Import (C, Exp, \"exp\");\n+   pragma Pure_Function (Exp);\n \n    function Sqrt (X : Double) return Double;\n    pragma Import (C, Sqrt, \"sqrt\");\n+   pragma Pure_Function (Sqrt);\n \n    function Log (X : Double) return Double;\n    pragma Import (C, Log, \"log\");\n+   pragma Pure_Function (Log);\n \n    function Acos (X : Double) return Double;\n    pragma Import (C, Acos, \"acos\");\n+   pragma Pure_Function (Acos);\n \n    function Asin (X : Double) return Double;\n    pragma Import (C, Asin, \"asin\");\n+   pragma Pure_Function (Asin);\n \n    function Atan (X : Double) return Double;\n    pragma Import (C, Atan, \"atan\");\n+   pragma Pure_Function (Atan);\n \n    function Sinh (X : Double) return Double;\n    pragma Import (C, Sinh, \"sinh\");\n+   pragma Pure_Function (Sinh);\n \n    function Cosh (X : Double) return Double;\n    pragma Import (C, Cosh, \"cosh\");\n+   pragma Pure_Function (Cosh);\n \n    function Tanh (X : Double) return Double;\n    pragma Import (C, Tanh, \"tanh\");\n+   pragma Pure_Function (Tanh);\n \n    function Pow (X, Y : Double) return Double;\n    pragma Import (C, Pow, \"pow\");\n+   pragma Pure_Function (Pow);\n \n end Ada.Numerics.Aux;"}, {"sha": "37e62de53bd7281d84303ce80155553538ffee40", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 52, "deletions": 18, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -92,7 +92,6 @@ package body ALI is\n       Task_Dispatching_Policy_Specified    := ' ';\n       Unreserve_All_Interrupts_Specified   := False;\n       Zero_Cost_Exceptions_Specified       := False;\n-\n    end Initialize_ALI;\n \n    --------------\n@@ -143,8 +142,9 @@ package body ALI is\n       function Getc return Character;\n       --  Get next character, bumping P past the character obtained\n \n-      function Get_Name (Lower : Boolean := False;\n-                         Ignore_Spaces : Boolean := False) return Name_Id;\n+      function Get_Name\n+        (Lower         : Boolean := False;\n+         Ignore_Spaces : Boolean := False) return Name_Id;\n       --  Skip blanks, then scan out a name (name is left in Name_Buffer with\n       --  length in Name_Len, as well as being returned in Name_Id form).\n       --  If Lower is set to True then the Name_Buffer will be converted to\n@@ -175,6 +175,10 @@ package body ALI is\n       procedure Skip_Space;\n       --  Skip past white space (blanks or horizontal tab)\n \n+      procedure Skipc;\n+      --  Skip past next character, does not affect value in C. This call\n+      --  is like calling Getc and ignoring the returned result.\n+\n       ---------------------\n       -- At_End_Of_Field --\n       ---------------------\n@@ -480,6 +484,17 @@ package body ALI is\n          end loop;\n       end Skip_Space;\n \n+      -----------\n+      -- Skipc --\n+      -----------\n+\n+      procedure Skipc is\n+      begin\n+         if P /= T'Last then\n+            P := P + 1;\n+         end if;\n+      end Skipc;\n+\n    --  Start of processing for Scan_ALI\n \n    begin\n@@ -706,6 +721,8 @@ package body ALI is\n                   Normalize_Scalars_Specified := True;\n                   NS_Found := True;\n \n+               --  Invalid switch starting with N\n+\n                else\n                   Fatal_Error;\n                end if;\n@@ -716,11 +733,26 @@ package body ALI is\n                Queuing_Policy_Specified := Getc;\n                ALIs.Table (Id).Queuing_Policy := Queuing_Policy_Specified;\n \n-            --  Processing for SL\n+            --  Processing fir flags starting with S\n \n             elsif C = 'S' then\n-               Checkc ('L');\n-               ALIs.Table (Id).Interface := True;\n+               C := Getc;\n+\n+               --  Processing for SL\n+\n+               if C = 'L' then\n+                  ALIs.Table (Id).Interface := True;\n+\n+               --  Processing for SS\n+\n+               elsif C = 'S' then\n+                  Opt.Sec_Stack_Used := True;\n+\n+               --  Invalid switch starting with S\n+\n+               else\n+                  Fatal_Error;\n+               end if;\n \n             --  Processing for Tx\n \n@@ -729,18 +761,25 @@ package body ALI is\n                ALIs.Table (Id).Task_Dispatching_Policy :=\n                  Task_Dispatching_Policy_Specified;\n \n-            --  Processing for UA\n+            --  Processing for switch starting with U\n \n             elsif C = 'U' then\n-               if Nextc = 'A' then\n+               C := Getc;\n+\n+               --  Processing for UA\n+\n+               if C  = 'A' then\n                   Unreserve_All_Interrupts_Specified := True;\n-                  C := Getc;\n \n                --  Processing for UX\n \n-               else\n-                  Checkc ('X');\n+               elsif C = 'X' then\n                   ALIs.Table (Id).Unit_Exception_Table := True;\n+\n+               --  Invalid switches starting with U\n+\n+               else\n+                  Fatal_Error;\n                end if;\n \n             --  Processing for ZX\n@@ -1487,11 +1526,9 @@ package body ALI is\n                Xref_Entity.Increment_Last;\n \n                Read_Refs_For_One_Entity : declare\n-\n                   XE : Xref_Entity_Record renames\n                          Xref_Entity.Table (Xref_Entity.Last);\n-\n-                  N : Nat;\n+                  N  : Nat;\n \n                   procedure Read_Instantiation_Reference;\n                   --  Acquire instantiation reference. Caller has checked\n@@ -1621,7 +1658,6 @@ package body ALI is\n \n                      declare\n                         Nested_Brackets : Natural := 0;\n-                        C               : Character;\n \n                      begin\n                         loop\n@@ -1636,7 +1672,7 @@ package body ALI is\n                                  end if;\n                            end case;\n \n-                           C := Getc;\n+                           Skipc;\n                         end loop;\n                      end;\n \n@@ -1680,7 +1716,6 @@ package body ALI is\n                            Current_File_Num := XR.File_Num;\n                            P := P + 1;\n                            N := Get_Nat;\n-\n                         else\n                            XR.File_Num := Current_File_Num;\n                         end if;\n@@ -1710,7 +1745,6 @@ package body ALI is\n \n                   XE.Last_Xref := Xref.Last;\n                   C := Nextc;\n-\n                end Read_Refs_For_One_Entity;\n             end loop;\n "}, {"sha": "ec983760f29337d46c0c96107de4ef2ad2744e75", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 58, "deletions": 6, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -518,9 +518,10 @@ package body Bindgen is\n          Write_Statement_Buffer;\n \n          --  Generate call to Install_Handler\n+\n          WBI (\"\");\n          WBI (\"      if Handler_Installed = 0 then\");\n-         WBI (\"        Install_Handler;\");\n+         WBI (\"         Install_Handler;\");\n          WBI (\"      end if;\");\n       end if;\n \n@@ -536,6 +537,17 @@ package body Bindgen is\n          Write_Statement_Buffer;\n       end if;\n \n+      --  Generate assignment of default secondary stack size if set\n+\n+      if Sec_Stack_Used and then Default_Sec_Stack_Size /= -1 then\n+         WBI (\"\");\n+         Set_String (\"      System.Secondary_Stack.\");\n+         Set_String (\"Default_Secondary_Stack_Size := \");\n+         Set_Int (Opt.Default_Sec_Stack_Size);\n+         Set_Char (';');\n+         Write_Statement_Buffer;\n+      end if;\n+\n       --  Generate elaboration calls\n \n       WBI (\"\");\n@@ -613,6 +625,13 @@ package body Bindgen is\n          Set_String (\"\"\";\");\n          Write_Statement_Buffer;\n \n+         --  Generate declaration for secondary stack default if needed\n+\n+         if Sec_Stack_Used and then Default_Sec_Stack_Size /= -1 then\n+            WBI (\"   extern int system__secondary_stack__\" &\n+                 \"default_secondary_stack_size;\");\n+         end if;\n+\n          WBI (\"\");\n \n          --  Code for normal case (standard library not suppressed)\n@@ -742,6 +761,17 @@ package body Bindgen is\n          Write_Statement_Buffer;\n       end if;\n \n+      --  Generate assignment of default secondary stack size if set\n+\n+      if Sec_Stack_Used and then Default_Sec_Stack_Size /= -1 then\n+         WBI (\"\");\n+         Set_String (\"   system__secondary_stack__\");\n+         Set_String (\"default_secondary_stack_size = \");\n+         Set_Int (Opt.Default_Sec_Stack_Size);\n+         Set_Char (';');\n+         Write_Statement_Buffer;\n+      end if;\n+\n       --  Generate elaboration calls\n \n       WBI (\"\");\n@@ -1862,12 +1892,24 @@ package body Bindgen is\n \n          if With_GNARL then\n             Name_Len := 0;\n-            Add_Str_To_Name_Buffer (\"-lgnarl\");\n+\n+            if Opt.Shared_Libgnat then\n+               Add_Str_To_Name_Buffer (Shared_Lib (\"gnarl\"));\n+            else\n+               Add_Str_To_Name_Buffer (\"-lgnarl\");\n+            end if;\n+\n             Write_Linker_Option;\n          end if;\n \n          Name_Len := 0;\n-         Add_Str_To_Name_Buffer (\"-lgnat\");\n+\n+         if Opt.Shared_Libgnat then\n+            Add_Str_To_Name_Buffer (Shared_Lib (\"gnat\"));\n+         else\n+            Add_Str_To_Name_Buffer (\"-lgnat\");\n+         end if;\n+\n          Write_Linker_Option;\n       end if;\n \n@@ -1983,6 +2025,12 @@ package body Bindgen is\n          WBI (\"with System.Scalar_Values;\");\n       end if;\n \n+      --  Generate with of System.Secondary_Stack if active\n+\n+      if Sec_Stack_Used and then Default_Sec_Stack_Size /= -1 then\n+         WBI (\"with System.Secondary_Stack;\");\n+      end if;\n+\n       Resolve_Binder_Options;\n \n       if not Suppress_Standard_Library_On_Target then\n@@ -2698,7 +2746,6 @@ package body Bindgen is\n    ----------------------------\n \n    procedure Public_Version_Warning is\n-\n       Time : constant Int := Time_From_Last_Bind;\n \n       --  Constants to help defining periods\n@@ -2738,13 +2785,18 @@ package body Bindgen is\n       --  Do not emit the message if the last message was emitted in the\n       --  specified period taking into account the number of units.\n \n+      pragma Warnings (Off);\n+      --  Turn off warning of constant condition, which may happen here\n+      --  depending on the choice of constants in the above declarations.\n+\n       if Nb_Unit < Large and then Time <= Period_Small then\n          return;\n-\n       elsif Time <= Period_Large then\n          return;\n       end if;\n \n+      pragma Warnings (On);\n+\n       Write_Eol;\n       Write_Str (\"IMPORTANT NOTICE:\");\n       Write_Eol;"}, {"sha": "e5bae217018812ed43504b54fb5257384b9e5b1f", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,6 +73,11 @@ begin\n    Write_Str (\"  -C        Generate binder program in C\");\n    Write_Eol;\n \n+   --  Line for D switch\n+\n+   Write_Str (\"  -Dnnn     Default secondary stack size = nnn bytes\");\n+   Write_Eol;\n+\n    --  Line for -e switch\n \n    Write_Str (\"  -e        Output complete list of elabor\");"}, {"sha": "4cecd56653f4600c6541152265f536e267bfb28c", "filename": "gcc/ada/bld.adb", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fbld.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fbld.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbld.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,12 +66,12 @@ package body Bld is\n    Copyright_Displayed : Boolean := False;\n    --  To avoid displaying the Copyright line several times\n \n-   Usage_Displayed     : Boolean := False;\n+   Usage_Displayed : Boolean := False;\n    --  To avoid displaying the usage several times\n \n    type Expression_Kind_Type is (Undecided, Static_String, Other);\n \n-   Expression_Kind   : Expression_Kind_Type := Undecided;\n+   Expression_Kind : Expression_Kind_Type := Undecided;\n    --  After procedure Expression has been called, this global variable\n    --  indicates if the expression is a static string or not.\n    --  If it is a static string, then Expression_Value (1 .. Expression_Last)\n@@ -110,16 +110,14 @@ package body Bld is\n    --  The following variables are used to controlled what attributes\n    --  Default_Switches and Switches are allowed in expressions.\n \n-   Default_Switches_Project  : Project_Node_Id  := Empty_Node;\n-   Default_Switches_Package  : Name_Id          := No_Name;\n-   Default_Switches_Language : Name_Id        := No_Name;\n-\n-   Switches_Project          : Project_Node_Id  := Empty_Node;\n+   Default_Switches_Package  : Name_Id := No_Name;\n+   Default_Switches_Language : Name_Id := No_Name;\n    Switches_Package          : Name_Id          := No_Name;\n    Switches_Language         : Source_Kind_Type := Unknown;\n \n    --  Other attribute references are only allowed in attribute declarations\n    --  of the same package and of the same name.\n+\n    --  Other_Attribute is True only during attribute declarations other than\n    --  Switches or Default_Switches.\n \n@@ -383,8 +381,7 @@ package body Bld is\n      (Static  : Boolean;\n       Value   : String_Access;\n       Last    : Natural;\n-      Default : String)\n-      return    String;\n+      Default : String) return String;\n    --  Returns the current suffix, if it is statically known, or \"\"\n    --  if it is not statically known. Used on C_Suffix, Cxx_Suffix,\n    --  Ada_Body_Suffix and Ada_Spec_Suffix.\n@@ -435,7 +432,7 @@ package body Bld is\n          Copyright_Displayed := True;\n          Write_Str (\"GPR2MAKE \");\n          Write_Str (Gnatvsn.Gnat_Version_String);\n-         Write_Str (\" Copyright 2002-2003 Free Software Foundation, Inc.\");\n+         Write_Str (\" Copyright 2002-2004 Free Software Foundation, Inc.\");\n          Write_Eol;\n          Write_Eol;\n       end if;\n@@ -1175,12 +1172,10 @@ package body Bld is\n          Current_Declarative_Item := Next_Declarative_Item\n                                             (Current_Declarative_Item);\n \n-         --  By default, indicate that Default_Switches and Switches\n-         --  attribute references are not allowed in expressions.\n+         --  By default, indicate that we are not declaring attribute\n+         --  Default_Switches or Switches.\n \n-         Default_Switches_Project := Empty_Node;\n-         Switches_Project         := Empty_Node;\n-         Other_Attribute          := False;\n+         Other_Attribute := False;\n \n          --  Write_Line (Project_Node_Kind'Image (Kind_Of (Current_Item)));\n \n@@ -1345,7 +1340,6 @@ package body Bld is\n                   --  in expressions.\n \n                   if Item_Name = Snames.Name_Default_Switches then\n-                     Default_Switches_Project  := Project;\n                      Default_Switches_Package  := Pkg;\n                      Default_Switches_Language := Index;\n \n@@ -1354,7 +1348,6 @@ package body Bld is\n                   --  Switches attribute references are allowed in expressions.\n \n                   elsif Item_Name = Snames.Name_Switches then\n-                     Switches_Project  := Project;\n                      Switches_Package  := Pkg;\n                      Switches_Language := Source_Kind_Of (Index);\n \n@@ -1862,7 +1855,7 @@ package body Bld is\n                                     end if;\n                                  end if;\n \n-                              elsif Item_Name = Snames.Name_Ada then\n+                              elsif Index_Name = Snames.Name_Ada then\n \n                                  --  For \"Ada\", we set the variable ADA_BODY\n \n@@ -1897,9 +1890,9 @@ package body Bld is\n                                     else\n                                        Ada_Body_Suffix_Static :=\n                                          Expression_Value\n-                                         (1 .. Expression_Last) =\n-                                         Ada_Body_Suffix\n-                                         (1 .. Ada_Body_Suffix_Last);\n+                                           (1 .. Expression_Last) =\n+                                           Ada_Body_Suffix\n+                                             (1 .. Ada_Body_Suffix_Last);\n                                     end if;\n                                  end if;\n                               end if;\n@@ -3511,8 +3504,7 @@ package body Bld is\n      (Static  : Boolean;\n       Value   : String_Access;\n       Last    : Natural;\n-      Default : String)\n-      return    String\n+      Default : String) return String\n    is\n    begin\n       if Static then"}, {"sha": "acd0510b4eee53063159a3635926960ff623cd2b", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -463,13 +463,16 @@ package body Checks is\n       Expr : Node_Id;\n       Loc  : Source_Ptr;\n \n+      Alignment_Required : constant Boolean := Maximum_Alignment > 1;\n+      --  Constant to show whether target requires alignment checks\n+\n    begin\n       --  See if check needed. Note that we never need a check if the\n       --  maximum alignment is one, since the check will always succeed\n \n       if No (AC)\n         or else not Check_Address_Alignment (AC)\n-        or else Maximum_Alignment = 1\n+        or else not Alignment_Required\n       then\n          return;\n       end if;\n@@ -1191,7 +1194,7 @@ package body Checks is\n                  N_Full_Type_Declaration\n                then\n                   declare\n-                     Type_Def : Node_Id :=\n+                     Type_Def : constant Node_Id :=\n                                  Type_Definition\n                                    (Original_Node (Parent (T_Typ)));\n                   begin"}, {"sha": "7759bbb82e2007dea7e56bdd25147fd99bd8e36a", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2003-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -370,9 +370,6 @@ package body Clean is\n       Source_File : File_Name_Type;\n       --  Current source file\n \n-      Full_Source_File : File_Name_Type;\n-      --  Full name of the current source file\n-\n       Lib_File : File_Name_Type;\n       --  Current library file\n \n@@ -401,9 +398,8 @@ package body Clean is\n          while not Empty_Q loop\n             Sources.Set_Last (0);\n             Extract_From_Q (Source_File);\n-            Full_Source_File := Osint.Full_Source_Name (Source_File);\n-            Lib_File         := Osint.Lib_File_Name (Source_File);\n-            Full_Lib_File    := Osint.Full_Lib_File_Name (Lib_File);\n+            Lib_File      := Osint.Lib_File_Name (Source_File);\n+            Full_Lib_File := Osint.Full_Lib_File_Name (Lib_File);\n \n             --  If we have an existing ALI file that is not read-only,\n             --  process it.\n@@ -925,7 +921,7 @@ package body Clean is\n       if not Copyright_Displayed then\n          Copyright_Displayed := True;\n          Put_Line (\"GNATCLEAN \" & Gnatvsn.Gnat_Version_String\n-                   & \" Copyright 2003 Free Software Foundation, Inc.\");\n+                   & \" Copyright 2003-2004 Free Software Foundation, Inc.\");\n       end if;\n    end Display_Copyright;\n \n@@ -1156,9 +1152,7 @@ package body Clean is\n    -- Insert_Q --\n    --------------\n \n-   procedure Insert_Q\n-     (Source_File : File_Name_Type)\n-   is\n+   procedure Insert_Q (Source_File : File_Name_Type) is\n    begin\n       --  Do not insert an empty name or an already marked source\n \n@@ -1180,6 +1174,7 @@ package body Clean is\n \n    function Object_File_Name (Source : Name_Id) return String is\n       Src : constant String := Get_Name_String (Source);\n+\n    begin\n       --  If the source name has an extension, then replace it with\n       --  the Object suffix."}, {"sha": "61ac93e1f8227a52015152ef6178b5b4b752c3cc", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -258,10 +258,10 @@ package body CStand is\n    --  by Initialize_Standard in the semantics module.\n \n    procedure Create_Standard is\n-      Decl_S : List_Id := New_List;\n+      Decl_S : constant List_Id := New_List;\n       --  List of declarations in Standard\n \n-      Decl_A : List_Id := New_List;\n+      Decl_A : constant List_Id := New_List;\n       --  List of declarations in ASCII\n \n       Decl       : Node_Id;"}, {"sha": "2de25fcd8af9fb70a3411dd2d5246a6b2a7126ae", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -3255,6 +3255,21 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t   each.  While doing this, build a copy-out structure if\n \t   we need one.  */\n \n+\t/* If the return type has a size that overflows, we cannot have\n+\t   a function that returns that type.  This usage doesn't make\n+\t   sense anyway, so give an error here.  */\n+\tif (TYPE_SIZE_UNIT (gnu_return_type)\n+\t    && TREE_OVERFLOW (TYPE_SIZE_UNIT (gnu_return_type)))\n+\t  {\n+\t    post_error (\"cannot return type whose size overflows\",\n+\t\t\tgnat_entity);\n+\t    gnu_return_type = copy_node (gnu_return_type);\n+\t    TYPE_SIZE (gnu_return_type) = bitsize_zero_node;\n+\t    TYPE_SIZE_UNIT (gnu_return_type) = size_zero_node;\n+\t    TYPE_MAIN_VARIANT (gnu_return_type) = gnu_return_type;\n+\t    TYPE_NEXT_VARIANT (gnu_return_type) = 0;\n+\t  }\n+\n \tfor (gnat_param = First_Formal (gnat_entity), parmnum = 0;\n \t     Present (gnat_param);\n \t     gnat_param = Next_Formal_With_Extras (gnat_param), parmnum++)"}, {"sha": "12651a3f6603696f209f963652cfa460a0054ff1", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -4660,7 +4660,7 @@ package body Einfo is\n    end Entry_Index_Type;\n \n    ---------------------\n-   -- First_Component --\n+   -- 1 --\n    ---------------------\n \n    function First_Component (Id : E) return E is\n@@ -4671,7 +4671,6 @@ package body Einfo is\n         (Is_Record_Type (Id) or else Is_Incomplete_Or_Private_Type (Id));\n \n       Comp_Id := First_Entity (Id);\n-\n       while Present (Comp_Id) loop\n          exit when Ekind (Comp_Id) = E_Component;\n          Comp_Id := Next_Entity (Comp_Id);"}, {"sha": "cff7039b23f66a9a39651be4fb00996b1891764d", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -521,7 +521,7 @@ package Einfo is\n --       representation clause is present for the corresponding record\n --       type a that specifies a position for the component, then the\n --       Component_Clause field of the E_Component entity points to the\n---       N_Component_Claue node. Set to Empty if no record representation\n+--       N_Component_Clause node. Set to Empty if no record representation\n --       clause was present, or if there was no specification for this\n --       component.\n \n@@ -2581,6 +2581,7 @@ package Einfo is\n --       Present in components and discriminants. Indicates the normalized\n --       value of First_Bit for the component, i.e. the offset within the\n --       lowest addressed storage unit containing part or all of the field.\n+--       Set to No_Uint if no first bit position is assigned yet.\n \n --    Normalized_Position (Uint14)\n --       Present in components and discriminants. Indicates the normalized"}, {"sha": "10c35d37f01ab01abe97799b554f3b198d872ba3", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -264,6 +264,8 @@ package body Exp_Aggr is\n    --    5. The array component type is tagged, which may necessitate\n    --       reassignment of proper tags.\n \n+   --    6. The array component type might have unaligned bit components\n+\n    function Backend_Processing_Possible (N : Node_Id) return Boolean is\n       Typ : constant Entity_Id := Etype (N);\n       --  Typ is the correct constrained array subtype of the aggregate.\n@@ -317,7 +319,7 @@ package body Exp_Aggr is\n          return False;\n       end if;\n \n-      --  Checks 4  (array must not be multi-dimensional Fortran case)\n+      --  Checks 4 (array must not be multi-dimensional Fortran case)\n \n       if Convention (Typ) = Convention_Fortran\n         and then Number_Dimensions (Typ) > 1\n@@ -350,6 +352,12 @@ package body Exp_Aggr is\n          return False;\n       end if;\n \n+      --  Checks 6 (component type must not have bit aligned components)\n+\n+      if Type_May_Have_Bit_Aligned_Components (Component_Type (Typ)) then\n+         return False;\n+      end if;\n+\n       --  Backend processing is possible\n \n       Set_Compile_Time_Known_Aggregate (N, True);\n@@ -1924,7 +1932,7 @@ package body Exp_Aggr is\n             --  by Build_Task_Allocate_Block_With_Init_Stmts)\n \n             declare\n-               Ctype            : Entity_Id := Etype (Selector);\n+               Ctype            : constant Entity_Id := Etype (Selector);\n                Inside_Allocator : Boolean   := False;\n                P                : Node_Id   := Parent (N);\n \n@@ -3520,7 +3528,8 @@ package body Exp_Aggr is\n \n       function Must_Slide (N : Node_Id; Typ : Entity_Id) return Boolean\n       is\n-         Obj_Type : Entity_Id := Etype (Defining_Identifier (Parent (N)));\n+         Obj_Type : constant Entity_Id :=\n+                      Etype (Defining_Identifier (Parent (N)));\n \n          L1, L2, H1, H2 : Node_Id;\n \n@@ -4343,6 +4352,12 @@ package body Exp_Aggr is\n       elsif Has_Mutable_Components (Typ) then\n          Convert_To_Assignments (N, Typ);\n \n+      --  If the type involved has any non-bit aligned components, then\n+      --  we are not sure that the back end can handle this case correctly.\n+\n+      elsif Type_May_Have_Bit_Aligned_Components (Typ) then\n+         Convert_To_Assignments (N, Typ);\n+\n       --  In all other cases we generate a proper aggregate that\n       --  can be handled by gigi.\n "}, {"sha": "511923b5ba1669c1dc95afdc4b7383499044df42", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -721,7 +721,7 @@ package body Exp_Ch11 is\n \n          if Debug_Flag_Dot_X and then Comes_From_Source (Handler) then\n             declare\n-               H : Node_Id := Handler;\n+               H : constant Node_Id := Handler;\n             begin\n                Next_Non_Pragma (Handler);\n                Remove (H);"}, {"sha": "bac09db7abf1b51da1f5f82fe1dce4fd4114ec1a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -2882,7 +2882,7 @@ package body Exp_Ch3 is\n \n    begin\n       --  Don't do anything for deferred constants. All proper actions will\n-      --  be expanded during the redeclaration.\n+      --  be expanded during the full declaration.\n \n       if No (Expr) and Constant_Present (N) then\n          return;\n@@ -3018,7 +3018,7 @@ package body Exp_Ch3 is\n          --  When we have the appropriate type of aggregate in the\n          --  expression (it has been determined during analysis of the\n          --  aggregate by setting the delay flag), let's perform in\n-         --  place assignment and thus avoid creating a temporay.\n+         --  place assignment and thus avoid creating a temporary.\n \n          if Is_Delayed_Aggregate (Expr_Q) then\n             Convert_Aggr_In_Object_Decl (N);"}, {"sha": "cc78eef25ce4f7dccb6f82db95180aecabeec89f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -654,6 +654,8 @@ package body Exp_Ch4 is\n \n       Comp : RE_Id;\n \n+      Stg_Unit_Is_Byte : constant Boolean := System_Storage_Unit = Byte'Size;\n+\n       function Length_Less_Than_4 (Opnd : Node_Id) return Boolean;\n       --  Returns True if the length of the given operand is known to be\n       --  less than 4. Returns False if this length is known to be four\n@@ -705,7 +707,7 @@ package body Exp_Ch4 is\n       --  addressing of array components.\n \n       if not Is_Bit_Packed_Array (Typ1)\n-        and then System_Storage_Unit = Byte'Size\n+        and then Stg_Unit_Is_Byte\n         and then not Java_VM\n       then\n          --  The call we generate is:\n@@ -5471,8 +5473,8 @@ package body Exp_Ch4 is\n       then\n          return;\n \n-      elsif (Nkind (Parent (N)) = N_Attribute_Reference\n-        and then Attribute_Name (Parent (N)) = Name_Address)\n+      elsif Nkind (Parent (N)) = N_Attribute_Reference\n+        and then Attribute_Name (Parent (N)) = Name_Address\n       then\n          return;\n "}, {"sha": "7c08b2ab9639caf2e310756fdbe304604973b0f2", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 20, "deletions": 68, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -48,6 +48,7 @@ with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Snames;   use Snames;\n with Stand;    use Stand;\n+with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n with Uintp;    use Uintp;\n@@ -75,8 +76,7 @@ package body Exp_Ch5 is\n       L_Type : Entity_Id;\n       R_Type : Entity_Id;\n       Ndim   : Pos;\n-      Rev    : Boolean)\n-      return   Node_Id;\n+      Rev    : Boolean) return Node_Id;\n    --  N is an assignment statement which assigns an array value. This routine\n    --  expands the assignment into a loop (or nested loops for the case of a\n    --  multi-dimensional array) to do the assignment component by component.\n@@ -104,32 +104,11 @@ package body Exp_Ch5 is\n \n    function Possible_Bit_Aligned_Component (N : Node_Id) return Boolean;\n    --  This function is used in processing the assignment of a record or\n-   --  indexed component. The back end can handle such assignments fine\n-   --  if the objects involved are small (64-bits or less) records or\n-   --  scalar items (including bit-packed arrays represented with modular\n-   --  types) or are both aligned on a byte boundary (starting on a byte\n-   --  boundary, and occupying an integral number of bytes).\n-   --\n-   --  However, problems arise for records larger than 64 bits, or for\n-   --  arrays (other than bit-packed arrays represented with a modular\n-   --  type) if the component starts on a non-byte boundary, or does\n-   --  not occupy an integral number of bytes (i.e. there are some bits\n-   --  possibly shared with fields at the start or beginning of the\n-   --  component). The back end cannot handle loading and storing such\n-   --  components in a single operation.\n-   --\n-   --  This function is used to detect the troublesome situation. it is\n-   --  conservative in the sense that it produces True unless it knows\n-   --  for sure that the component is safe (as outlined in the first\n-   --  paragraph above). The code generation for record and array\n-   --  assignment checks for trouble using this function, and if so\n-   --  the assignment is generated component-wise, which the back end\n-   --  is required to handle correctly.\n-   --\n-   --  Note that in GNAT 3, the back end will reject such components\n-   --  anyway, so the hard work in checking for this case is wasted\n-   --  in GNAT 3, but it's harmless, so it is easier to do it in\n-   --  all cases, rather than conditionalize it in GNAT 5 or beyond.\n+   --  indexed component. The argument N is either the left hand or right\n+   --  hand side of an assignment, and this function determines if there\n+   --  is a record component reference where the record may be bit aligned\n+   --  in a manner that causes trouble for the back end (see description\n+   --  of Sem_Util.Component_May_Be_Bit_Aligned for further details).\n \n    ------------------------------\n    -- Change_Of_Representation --\n@@ -508,9 +487,12 @@ package body Exp_Ch5 is\n       --  statement, a length check has already been emitted to verify that\n       --  the range of the left-hand side is empty.\n \n+      --  Note that this code is not executed if we had an assignment of\n+      --  a string literal to a non-bit aligned component of a record, a\n+      --  case which cannot be handled by the backend\n+\n       elsif Nkind (Rhs) = N_String_Literal then\n-         if Ekind (R_Type) = E_String_Literal_Subtype\n-           and then String_Literal_Length (R_Type) = 0\n+         if String_Length (Strval (Rhs)) = 0\n            and then Is_Bit_Packed_Array (L_Type)\n          then\n             Rewrite (N, Make_Null_Statement (Loc));\n@@ -731,8 +713,8 @@ package body Exp_Ch5 is\n \n          elsif Restrictions (No_Implicit_Conditionals) then\n             declare\n-               T : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                           Chars => Name_T);\n+                  T : constant Entity_Id :=\n+                        Make_Defining_Identifier (Loc, Chars => Name_T);\n \n             begin\n                Rewrite (N,\n@@ -881,8 +863,7 @@ package body Exp_Ch5 is\n       L_Type : Entity_Id;\n       R_Type : Entity_Id;\n       Ndim   : Pos;\n-      Rev    : Boolean)\n-      return   Node_Id\n+      Rev    : Boolean) return Node_Id\n    is\n       Loc  : constant Source_Ptr := Sloc (N);\n \n@@ -2244,8 +2225,8 @@ package body Exp_Ch5 is\n          and then List_Length (Else_Statements (N)) = 1\n       then\n          declare\n-            Then_Stm : Node_Id := First (Then_Statements (N));\n-            Else_Stm : Node_Id := First (Else_Statements (N));\n+            Then_Stm : constant Node_Id := First (Then_Statements (N));\n+            Else_Stm : constant Node_Id := First (Else_Statements (N));\n \n          begin\n             if Nkind (Then_Stm) = N_Return_Statement\n@@ -3277,39 +3258,10 @@ package body Exp_Ch5 is\n                --  unless it is forced to do so. In the clear means we need\n                --  only the recursive test on the prefix.\n \n-               if No (Component_Clause (Comp)) then\n-                  return Possible_Bit_Aligned_Component (P);\n-\n-               --  Otherwise we have a component clause, which means that\n-               --  the Esize and Normalized_First_Bit fields are set and\n-               --  contain static values known at compile time.\n-\n+               if Component_May_Be_Bit_Aligned (Comp) then\n+                  return True;\n                else\n-                  --  If we know that we have a small (64 bits or less) record\n-                  --  or bit-packed array, then everything is fine, since the\n-                  --  back end can handle these cases correctly.\n-\n-                  if Esize (Comp) <= 64\n-                    and then (Is_Record_Type (Etype (Comp))\n-                               or else\n-                              Is_Bit_Packed_Array (Etype (Comp)))\n-                  then\n-                     return False;\n-\n-                  --  Otherwise if the component is not byte aligned, we\n-                  --  know we have the nasty unaligned case.\n-\n-                  elsif Normalized_First_Bit (Comp) /= Uint_0\n-                    or else Esize (Comp) mod System_Storage_Unit /= Uint_0\n-                  then\n-                     return True;\n-\n-                  --  If we are large and byte aligned, then OK at this level\n-                  --  but we still need to test our prefix recursively.\n-\n-                  else\n-                     return Possible_Bit_Aligned_Component (P);\n-                  end if;\n+                  return Possible_Bit_Aligned_Component (P);\n                end if;\n             end;\n "}, {"sha": "fb73a0b4970d56834c3bb9ab8a325f035a0ed57e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -59,7 +59,6 @@ with Sem_Ch12; use Sem_Ch12;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Disp; use Sem_Disp;\n with Sem_Dist; use Sem_Dist;\n-with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n@@ -2989,10 +2988,7 @@ package body Exp_Ch6 is\n               Expression (Last (Pragma_Argument_Associations (TB_Pragma)));\n          else\n             Sec_Stack_Len :=\n-              Make_Integer_Literal (Loc,\n-                Intval =>\n-                  Expr_Value\n-                   (Constant_Value (RTE (RE_Default_Secondary_Stack_Size))));\n+              New_Occurrence_Of (RTE (RE_Default_Secondary_Stack_Size), Loc);\n          end if;\n \n          Sec_Stack_Len := Convert_To (RTE (RE_Storage_Offset), Sec_Stack_Len);\n@@ -3120,7 +3116,16 @@ package body Exp_Ch6 is\n \n       --  If this is a Pure function which has any parameters whose root\n       --  type is System.Address, reset the Pure indication, since it will\n-      --  likely cause incorrect code to be generated.\n+      --  likely cause incorrect code to be generated as the parameter is\n+      --  probably a pointer, and the fact that the same pointer is passed\n+      --  does not mean that the same value is being referenced.\n+\n+      --  Note that if the programmer gave an explicit Pure_Function pragma,\n+      --  then we believe the programmer, and leave the subprogram Pure.\n+\n+      --  This code should probably be at the freeze point, so that it\n+      --  happens even on a -gnatc (or more importantly -gnatt) compile\n+      --  so that the semantic tree has Is_Pure set properly ???\n \n       if Is_Pure (Spec_Id)\n         and then Is_Subprogram (Spec_Id)"}, {"sha": "7ec79180af0968ec44c68fd931a69d3f31aa9030", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -508,7 +508,7 @@ package body Exp_Ch7 is\n       return List_Id\n    is\n       Loc        : constant Source_Ptr := Sloc (N);\n-      Index_List : List_Id := New_List;\n+      Index_List : constant List_Id := New_List;\n \n       function Free_Component return List_Id;\n       --  Generate the code to finalize the task or protected  subcomponents\n@@ -524,7 +524,7 @@ package body Exp_Ch7 is\n       function Free_Component return List_Id is\n          Stmts : List_Id := New_List;\n          Tsk   : Node_Id;\n-         C_Typ : Entity_Id := Component_Type (Typ);\n+         C_Typ : constant Entity_Id := Component_Type (Typ);\n \n       begin\n          --  Component type is known to contain tasks or protected objects\n@@ -608,8 +608,8 @@ package body Exp_Ch7 is\n       Loc   : constant Source_Ptr := Sloc (N);\n       Tsk   : Node_Id;\n       Comp  : Entity_Id;\n-      Stmts : List_Id := New_List;\n-      U_Typ : constant Entity_Id := Underlying_Type (Typ);\n+      Stmts : constant List_Id    := New_List;\n+      U_Typ : constant Entity_Id  := Underlying_Type (Typ);\n \n    begin\n       if Has_Discriminants (U_Typ)\n@@ -696,13 +696,12 @@ package body Exp_Ch7 is\n    ------------------------------------\n \n    procedure Clean_Simple_Protected_Objects (N : Node_Id) is\n+      Stmts : constant List_Id := Statements (Handled_Statement_Sequence (N));\n+      Stmt  : Node_Id          := Last (Stmts);\n       E     : Entity_Id;\n-      Stmts : List_Id := Statements (Handled_Statement_Sequence (N));\n-      Stmt  : Node_Id := Last (Stmts);\n \n    begin\n       E := First_Entity (Current_Scope);\n-\n       while Present (E) loop\n          if (Ekind (E) = E_Variable\n               or else Ekind (E) = E_Constant)"}, {"sha": "e77b3cd60c77eafcf0f504a82b65c811c66cf5b9", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -8211,14 +8211,13 @@ package body Exp_Ch9 is\n                  and then Chars (Ritem) = Name_Attach_Handler\n                then\n                   declare\n-                     Handler   : constant Node_Id :=\n-                       First (Pragma_Argument_Associations (Ritem));\n-                     Interrupt : constant Node_Id :=\n-                       Next (Handler);\n-                     Expr :  Node_Id := Expression (Interrupt);\n+                     Handler : constant Node_Id :=\n+                                 First (Pragma_Argument_Associations (Ritem));\n \n-                  begin\n+                     Interrupt : constant Node_Id  := Next (Handler);\n+                     Expr      : constant  Node_Id := Expression (Interrupt);\n \n+                  begin\n                      Append_To (Table,\n                        Make_Aggregate (Loc, Expressions => New_List (\n                          Unchecked_Convert_To"}, {"sha": "5ad0618a16a10ca41cfe3687f5bcd353c5e827c9", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -898,6 +898,52 @@ package body Exp_Util is\n       return Build_Task_Image_Function (Loc, Decls, Stats, Res);\n    end Build_Task_Record_Image;\n \n+   ----------------------------------\n+   -- Component_May_Be_Bit_Aligned --\n+   ----------------------------------\n+\n+   function Component_May_Be_Bit_Aligned (Comp : Entity_Id) return Boolean is\n+   begin\n+      --  If no component clause, then everything is fine, since the\n+      --  back end never bit-misaligns by default, even if there is\n+      --  a pragma Packed for the record.\n+\n+      if No (Component_Clause (Comp)) then\n+         return False;\n+      end if;\n+\n+      --  It is only array and record types that cause trouble\n+\n+      if not Is_Record_Type (Etype (Comp))\n+        and then not Is_Array_Type (Etype (Comp))\n+      then\n+         return False;\n+\n+      --  If we know that we have a small (64 bits or less) record\n+      --  or bit-packed array, then everything is fine, since the\n+      --  back end can handle these cases correctly.\n+\n+      elsif Esize (Comp) <= 64\n+        and then (Is_Record_Type (Etype (Comp))\n+                   or else Is_Bit_Packed_Array (Etype (Comp)))\n+      then\n+         return False;\n+\n+      --  Otherwise if the component is not byte aligned, we\n+      --  know we have the nasty unaligned case.\n+\n+      elsif Normalized_First_Bit (Comp) /= Uint_0\n+        or else Esize (Comp) mod System_Storage_Unit /= Uint_0\n+      then\n+         return True;\n+\n+      --  If we are large and byte aligned, then OK at this level\n+\n+      else\n+         return False;\n+      end if;\n+   end Component_May_Be_Bit_Aligned;\n+\n    -------------------------------\n    -- Convert_To_Actual_Subtype --\n    -------------------------------\n@@ -3877,6 +3923,53 @@ package body Exp_Util is\n         and then Esize (Left_Typ) = Esize (Result_Typ);\n    end Target_Has_Fixed_Ops;\n \n+   ------------------------------------------\n+   -- Type_May_Have_Bit_Aligned_Components --\n+   ------------------------------------------\n+\n+   function Type_May_Have_Bit_Aligned_Components\n+     (Typ : Entity_Id) return Boolean\n+   is\n+   begin\n+      --  Array type, check component type\n+\n+      if Is_Array_Type (Typ) then\n+         return\n+           Type_May_Have_Bit_Aligned_Components (Component_Type (Typ));\n+\n+      --  Record type, check components\n+\n+      elsif Is_Record_Type (Typ) then\n+         declare\n+            E : Entity_Id;\n+\n+         begin\n+            E := First_Entity (Typ);\n+            while Present (E) loop\n+               if Ekind (E) = E_Component\n+                 or else Ekind (E) = E_Discriminant\n+               then\n+                  if Component_May_Be_Bit_Aligned (E)\n+                    or else\n+                      Type_May_Have_Bit_Aligned_Components (Etype (E))\n+                  then\n+                     return True;\n+                  end if;\n+               end if;\n+\n+               Next_Entity (E);\n+            end loop;\n+\n+            return False;\n+         end;\n+\n+      --  Type other than array or record is always OK\n+\n+      else\n+         return False;\n+      end if;\n+   end Type_May_Have_Bit_Aligned_Components;\n+\n    ----------------------------\n    -- Wrap_Cleanup_Procedure --\n    ----------------------------"}, {"sha": "8dc14b7b51f071ca87fe8b596f968ae300a84d7e", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -208,6 +208,36 @@ package Exp_Util is\n    --  computes the image without using concatenation, and one for the\n    --  variable that holds the result.\n \n+   function Component_May_Be_Bit_Aligned (Comp : Entity_Id) return Boolean;\n+   --  This function is in charge of detecting record components that may\n+   --  cause trouble in the back end if an attempt is made to assign the\n+   --  component. The back end can handle such assignments with no problem\n+   --  if the components involved are small (64-bits or less) records or\n+   --  scalar items (including bit-packed arrays represented with modular\n+   --  types) or are both aligned on a byte boundary (starting on a byte\n+   --  boundary, and occupying an integral number of bytes).\n+   --\n+   --  However, problems arise for records larger than 64 bits, or for\n+   --  arrays (other than bit-packed arrays represented with a modular\n+   --  type) if the component starts on a non-byte boundary, or does\n+   --  not occupy an integral number of bytes (i.e. there are some bits\n+   --  possibly shared with fields at the start or beginning of the\n+   --  component). The back end cannot handle loading and storing such\n+   --  components in a single operation.\n+   --\n+   --  This function is used to detect the troublesome situation. it is\n+   --  conservative in the sense that it produces True unless it knows\n+   --  for sure that the component is safe (as outlined in the first\n+   --  paragraph above). The code generation for record and array\n+   --  assignment checks for trouble using this function, and if so\n+   --  the assignment is generated component-wise, which the back end\n+   --  is required to handle correctly.\n+   --\n+   --  Note that in GNAT 3, the back end will reject such components\n+   --  anyway, so the hard work in checking for this case is wasted\n+   --  in GNAT 3, but it's harmless, so it is easier to do it in\n+   --  all cases, rather than conditionalize it in GNAT 5 or beyond.\n+\n    procedure Convert_To_Actual_Subtype (Exp : Node_Id);\n    --  The Etype of an expression is the nominal type of the expression,\n    --  not the actual subtype. Often these are the same, but not always.\n@@ -512,6 +542,14 @@ package Exp_Util is\n    --  operand and result types. This is called in package Exp_Fixd to\n    --  determine whether to expand such operations.\n \n+   function Type_May_Have_Bit_Aligned_Components\n+     (Typ : Entity_Id) return Boolean;\n+   --  Determines if Typ is a composite type that has within it (looking\n+   --  down recursively at any subcomponents), a record type which has a\n+   --  component that may be bit aligned (see Possible_Bit_Aligned_Component).\n+   --  The result is conservative, in that a result of False is decisive.\n+   --  A result of True means that such a component may or may not be present.\n+\n    procedure Wrap_Cleanup_Procedure (N : Node_Id);\n    --  Given an N_Subprogram_Body node, this procedure adds an Abort_Defer\n    --  call at the start of the statement sequence, and an Abort_Undefer call"}, {"sha": "ecdcf191fb0635dbbd20d9a96fa90f030b8f7219", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2003 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2004 Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -86,7 +86,7 @@ extern Node_Id Get_Attribute_Definition_Clause (Entity_Id, char);\n \n extern void Error_Msg_N\t          (Fat_Pointer, Node_Id);\n extern void Error_Msg_NE          (Fat_Pointer, Node_Id, Entity_Id);\n-extern void Set_Identifier_Casing (Char, Char);\n+extern void Set_Identifier_Casing (Char *, Char *);\n \n /* err_vars: */\n \n@@ -98,7 +98,6 @@ extern Entity_Id             Error_Msg_Node_2;\n extern Uint                  Error_Msg_Uint_1;\n extern Uint                  Error_Msg_Uint_2;\n \n-\n /* exp_code:  */\n \n #define Asm_Input_Constraint exp_code__asm_input_constraint\n@@ -169,6 +168,12 @@ extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n extern void Check_Elaboration_Code_Allowed (Node_Id);\n extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n \n+/* sem_elim: */\n+\n+#define Eliminate_Error_Msg    sem_elim__eliminate_error_msg\n+\n+extern void Eliminate_Error_Msg (Node_Id, Entity_Id);\n+\n /* sem_eval: */\n \n #define Compile_Time_Known_Value\tsem_eval__compile_time_known_value"}, {"sha": "5e135b7157efebe189b82df9e9f6defbc1b6c70c", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2130,14 +2130,21 @@ package body Freeze is\n                --  inherited the indication from elsewhere (e.g. an address\n                --  clause, which is not good enough in RM terms!)\n \n-               if Present (Get_Rep_Pragma (E, Name_Atomic))            or else\n-                  Present (Get_Rep_Pragma (E, Name_Atomic_Components)) or else\n-                  Present (Get_Rep_Pragma (E, Name_Volatile))          or else\n-                  Present (Get_Rep_Pragma (E, Name_Volatile_Components))\n+               if Present (Get_Rep_Pragma (E, Name_Atomic))\n+                    or else\n+                  Present (Get_Rep_Pragma (E, Name_Atomic_Components))\n                then\n                   Error_Msg_N\n-                    (\"stand alone atomic/volatile constant must be imported\",\n-                     E);\n+                    (\"stand alone atomic constant must be \" &\n+                     \"imported ('R'M 'C.6(13))\", E);\n+\n+               elsif Present (Get_Rep_Pragma (E, Name_Volatile))\n+                       or else\n+                     Present (Get_Rep_Pragma (E, Name_Volatile_Components))\n+               then\n+                  Error_Msg_N\n+                    (\"stand alone volatile constant must be \" &\n+                     \"imported ('R'M 'C.6(13))\", E);\n                end if;\n             end if;\n \n@@ -4173,6 +4180,20 @@ package body Freeze is\n          end if;\n       end if;\n \n+      --  Reset the Pure indication on an imported subprogram unless an\n+      --  explicit Pure_Function pragma was present. We do this because\n+      --  otherwise it is an insidious error to call a non-pure function\n+      --  from a pure unit and have calls mysteriously optimized away.\n+      --  What happens here is that the Import can bypass the normal\n+      --  check to ensure that pure units call only pure subprograms.\n+\n+      if Is_Imported (E)\n+        and then Is_Pure (E)\n+        and then not Has_Pragma_Pure_Function (E)\n+      then\n+         Set_Is_Pure (E, False);\n+      end if;\n+\n       --  For non-foreign convention subprograms, this is where we create\n       --  the extra formals (for accessibility level and constrained bit\n       --  information). We delay this till the freeze point precisely so"}, {"sha": "627985c20bdc21f76c6c9b26b814dc7e0b067c3e", "filename": "gcc/ada/g-debuti.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-debuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-debuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debuti.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1997-2003 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1997-2004 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -153,7 +153,7 @@ package body GNAT.Debug_Utilities is\n \n          --  Ada form based literal\n \n-         elsif C = '#' or C = ':' then\n+         elsif C = '#' or else C = ':' then\n             Base := Res;\n             Res  := 0;\n "}, {"sha": "40a181a708793d3ad19870c625c0c35bbc1956e8", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -60,8 +60,7 @@ package body GNAT.Directory_Operations is\n \n    function Base_Name\n      (Path   : Path_Name;\n-      Suffix : String    := \"\")\n-      return   String\n+      Suffix : String := \"\") return String\n    is\n       function Get_File_Names_Case_Sensitive return Integer;\n       pragma Import\n@@ -73,8 +72,7 @@ package body GNAT.Directory_Operations is\n \n       function Basename\n         (Path   : Path_Name;\n-         Suffix : String    := \"\")\n-         return String;\n+         Suffix : String := \"\") return String;\n       --  This function does the job. The only difference between Basename\n       --  and Base_Name (the parent function) is that the former is case\n       --  sensitive, while the latter is not. Path and Suffix are adjusted\n@@ -87,8 +85,7 @@ package body GNAT.Directory_Operations is\n \n       function Basename\n         (Path   : Path_Name;\n-         Suffix : String    := \"\")\n-         return   String\n+         Suffix : String    := \"\") return String\n       is\n          Cut_Start : Natural :=\n                        Strings.Fixed.Index\n@@ -227,8 +224,7 @@ package body GNAT.Directory_Operations is\n \n    function Expand_Path\n      (Path : Path_Name;\n-      Mode : Environment_Style := System_Default)\n-      return Path_Name\n+      Mode : Environment_Style := System_Default) return Path_Name\n    is\n       Environment_Variable_Char : Character;\n       pragma Import (C, Environment_Variable_Char, \"__gnat_environment_char\");\n@@ -519,8 +515,7 @@ package body GNAT.Directory_Operations is\n \n    function Format_Pathname\n      (Path  : Path_Name;\n-      Style : Path_Style := System_Default)\n-      return  String\n+      Style : Path_Style := System_Default) return String\n    is\n       N_Path       : String   := Path;\n       K            : Positive := N_Path'First;\n@@ -636,8 +631,7 @@ package body GNAT.Directory_Operations is\n       C_File_Name : constant String := Dir_Name & ASCII.NUL;\n \n       function opendir\n-        (File_Name : String)\n-         return      Dir_Type_Value;\n+        (File_Name : String) return Dir_Type_Value;\n       pragma Import (C, opendir, \"opendir\");\n \n    begin\n@@ -668,8 +662,7 @@ package body GNAT.Directory_Operations is\n \n       function readdir_gnat\n         (Directory : System.Address;\n-         Buffer    : System.Address)\n-         return      System.Address;\n+         Buffer    : System.Address) return System.Address;\n       pragma Import (C, readdir_gnat, \"__gnat_readdir\");\n \n       function strlen (S : Address) return Integer;"}, {"sha": "c6c561d01cf9cc695e3484f49d446d5fed09f21b", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -122,8 +122,7 @@ package GNAT.Directory_Operations is\n \n    function Base_Name\n      (Path   : Path_Name;\n-      Suffix : String    := \"\")\n-      return   String;\n+      Suffix : String := \"\") return String;\n    --  Any directory prefix is removed. If Suffix is non-empty and is a\n    --  suffix of Path, it is removed. This is equivalent to the UNIX basename\n    --  command. The following rule is always true:\n@@ -158,8 +157,7 @@ package GNAT.Directory_Operations is\n \n    function Format_Pathname\n      (Path  : Path_Name;\n-      Style : Path_Style := System_Default)\n-      return  Path_Name;\n+      Style : Path_Style := System_Default) return Path_Name;\n    --  Removes all double directory separator and converts all '\\' to '/' if\n    --  Style is UNIX and converts all '/' to '\\' if Style is set to DOS. This\n    --  function will help to provide a consistent naming scheme running for\n@@ -187,8 +185,7 @@ package GNAT.Directory_Operations is\n \n    function Expand_Path\n      (Path : Path_Name;\n-      Mode : Environment_Style := System_Default)\n-      return Path_Name;\n+      Mode : Environment_Style := System_Default) return Path_Name;\n    --  Returns Path with environment variables (or logical names on OpenVMS)\n    --  replaced by the current environment variable value. For example,\n    --  $HOME/mydir will be replaced by /home/joe/mydir if $HOME environment"}, {"sha": "328436b5dbcb48093565c0a80780312d17201b72", "filename": "gcc/ada/g-sestin.ads", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-sestin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fg-sestin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sestin.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -0,0 +1,50 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUNTIME COMPONENTS                          --\n+--                                                                          --\n+--            G N A T . S E C O N D A R Y _ S T A C K _ I N F O             --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--              Copyright (C) 2004 Ada Core Technologies, Inc.              --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides facilities for obtaining information on secondary\n+--  stack usage.\n+\n+with System.Secondary_Stack;\n+\n+package GNAT.Secondary_Stack_Info is\n+\n+   function SS_Get_Max return Long_Long_Integer\n+     renames System.Secondary_Stack.SS_Get_Max;\n+   --  Return maximum used space in storage units for the current secondary\n+   --  stack. For a dynamically allocated secondary stack, the returned\n+   --  result is always -1. For a statically allocated secondary stack,\n+   --  the returned value shows the largest amount of space allocated so\n+   --  far during execution of the program to the current secondary stack,\n+   --  i.e. the secondary stack for the current task.\n+\n+end GNAT.Secondary_Stack_Info;"}, {"sha": "f809c282a83811fe12a3940385794b32d827e92a", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,9 +78,6 @@ procedure Gnat1drv is\n    Main_Unit_Node : Node_Id;\n    --  Compilation unit node for main unit\n \n-   Main_Unit_Entity : Node_Id;\n-   --  Compilation unit entity for main unit\n-\n    Main_Kind : Node_Kind;\n    --  Kind of main compilation unit node.\n \n@@ -193,7 +190,7 @@ begin\n          Write_Eol;\n          Write_Str (\"GNAT \");\n          Write_Str (Gnat_Version_String);\n-         Write_Str (\" Copyright 1992-2003 Free Software Foundation, Inc.\");\n+         Write_Str (\" Copyright 1992-2004 Free Software Foundation, Inc.\");\n          Write_Eol;\n       end if;\n \n@@ -277,7 +274,6 @@ begin\n       Original_Operating_Mode := Operating_Mode;\n       Frontend;\n       Main_Unit_Node := Cunit (Main_Unit);\n-      Main_Unit_Entity := Cunit_Entity (Main_Unit);\n       Main_Kind := Nkind (Unit (Main_Unit_Node));\n \n       --  Check for suspicious or incorrect body present if we are doing"}, {"sha": "c35c87e87edc384378851134fef5659dfb0bd8b8", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -379,7 +379,7 @@ begin\n       Write_Eol;\n       Write_Str (\"GNATBIND \");\n       Write_Str (Gnat_Version_String);\n-      Write_Str (\" Copyright 1995-2003 Free Software Foundation, Inc.\");\n+      Write_Str (\" Copyright 1995-2004 Free Software Foundation, Inc.\");\n       Write_Eol;\n    end if;\n "}, {"sha": "509a6f3b2379e44179ff1ec9fa227f6c48bc6ebe", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1998-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1998-2004 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -375,7 +375,8 @@ procedure Gnatchop is\n \n          if not Is_Duplicated (SNum) then\n             declare\n-               Info : Unit_Info := Unit.Table (Sorted_Units.Table (SNum));\n+               Info : constant Unit_Info :=\n+                        Unit.Table (Sorted_Units.Table (SNum));\n \n             begin\n                if Is_Writable_File (Info.File_Name.all) then\n@@ -587,10 +588,10 @@ procedure Gnatchop is\n    ----------------\n \n    function Parse_File (Num : File_Num) return Boolean is\n-      Chop_Name   : constant String_Access := File.Table (Num).Name;\n+      Chop_Name   : constant String_Access   := File.Table (Num).Name;\n+      Save_Stdout : constant File_Descriptor := dup (Standout);\n       Offset_Name : Temp_File_Name;\n       Offset_FD   : File_Descriptor;\n-      Save_Stdout : File_Descriptor := dup (Standout);\n       Buffer      : String_Access;\n       Success     : Boolean;\n       Failure     : exception;\n@@ -690,9 +691,9 @@ procedure Gnatchop is\n      (Chop_File : File_Num;\n       Source    : access String)\n    is\n-      First_Unit : Unit_Num      := Unit.Last + 1;\n-      Bufferg    : String_Access := null;\n-      Parse_Ptr  : File_Offset   := Source'First;\n+      First_Unit : constant Unit_Num := Unit.Last + 1;\n+      Bufferg    : String_Access     := null;\n+      Parse_Ptr  : File_Offset       := Source'First;\n       Token_Ptr  : File_Offset;\n       Info       : Unit_Info;\n \n@@ -1147,7 +1148,7 @@ procedure Gnatchop is\n                Put (Standard_Error, Gnatvsn.Gnat_Version_String);\n                Put_Line\n                  (Standard_Error,\n-                  \" Copyright 1998-2000, Ada Core Technologies Inc.\");\n+                  \" Copyright 1998-2004, Ada Core Technologies Inc.\");\n \n             when 'w' =>\n                Overwrite_Files := True;\n@@ -1736,7 +1737,7 @@ begin\n \n    if Warning_Count > 0 then\n       declare\n-         Warnings_Msg : String := Warning_Count'Img & \" warning(s)\";\n+         Warnings_Msg : constant String := Warning_Count'Img & \" warning(s)\";\n       begin\n          Error_Msg (Warnings_Msg (2 .. Warnings_Msg'Last), Warning => True);\n       end;"}, {"sha": "c59ae499106e7f3c14e2d96eeff3d570d0de7577", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1998-2003 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2004 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,10 +24,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Xr_Tabls;     use Xr_Tabls;\n-with Xref_Lib;     use Xref_Lib;\n-with Osint;        use Osint;\n-with Types;        use Types;\n+with Xr_Tabls; use Xr_Tabls;\n+with Xref_Lib; use Xref_Lib;\n+with Osint;    use Osint;\n+with Types;    use Types;\n \n with Gnatvsn;\n with Opt;\n@@ -41,7 +41,6 @@ with GNAT.Strings;      use GNAT.Strings;\n ---------------\n \n procedure Gnatfind is\n-\n    Output_Ref      : Boolean := False;\n    Pattern         : Xref_Lib.Search_Pattern;\n    Local_Symbols   : Boolean := True;\n@@ -240,7 +239,7 @@ procedure Gnatfind is\n    procedure Write_Usage is\n    begin\n       Put_Line (\"GNATFIND \" & Gnatvsn.Gnat_Version_String\n-                & \" Copyright 1998-2003, Ada Core Technologies Inc.\");\n+                & \" Copyright 1998-2004, Ada Core Technologies Inc.\");\n       Put_Line (\"Usage: gnatfind pattern[:sourcefile[:line[:column]]] \"\n                 & \"[file1 file2 ...]\");\n       New_Line;"}, {"sha": "3dd2d4dba2942af7821dc9c601ee3d6d448424d8", "filename": "gcc/ada/gnatlbr.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatlbr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatlbr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlbr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,10 +77,9 @@ begin\n       exit when Next_Arg > Argument_Count;\n \n       Process_One_Arg : declare\n-         Arg : String := Argument (Next_Arg);\n+         Arg : constant String := Argument (Next_Arg);\n \n       begin\n-\n          if Arg'Length > 9 and then Arg (1 .. 9) = \"--create=\" then\n             if Mode = None then\n                Mode := Create;\n@@ -192,28 +191,29 @@ begin\n             --\n             Include_Dirs := 0;\n             Include_Dir_Name := new String'(Include_Dir_Default_Prefix);\n-            Get_Next_Dir_In_Path_Init (String_Access (Include_Dir_Name));\n+            Get_Next_Dir_In_Path_Init (Include_Dir_Name);\n \n             loop\n                declare\n-                  Dir : String_Access := String_Access\n-                    (Get_Next_Dir_In_Path (String_Access (Include_Dir_Name)));\n+                  Dir : constant String_Access := String_Access\n+                    (Get_Next_Dir_In_Path (Include_Dir_Name));\n                begin\n                   exit when Dir = null;\n                   Include_Dirs := Include_Dirs + 1;\n-                  Include_Dir (Include_Dirs)\n-                    := String_Access (Normalize_Directory_Name (Dir.all));\n+                  Include_Dir (Include_Dirs) :=\n+                    String_Access (Normalize_Directory_Name (Dir.all));\n                end;\n             end loop;\n \n             Object_Dirs := 0;\n             Object_Dir_Name := new String'(Object_Dir_Default_Prefix);\n-            Get_Next_Dir_In_Path_Init (String_Access (Object_Dir_Name));\n+            Get_Next_Dir_In_Path_Init (Object_Dir_Name);\n \n             loop\n                declare\n-                  Dir : String_Access := String_Access\n-                    (Get_Next_Dir_In_Path (String_Access (Object_Dir_Name)));\n+                  Dir : constant String_Access :=\n+                          String_Access\n+                            (Get_Next_Dir_In_Path (Object_Dir_Name));\n                begin\n                   exit when Dir = null;\n                   Object_Dirs := Object_Dirs + 1;\n@@ -225,7 +225,6 @@ begin\n             --  \"Make\" an alternate sublibrary for each default sublibrary.\n \n             for Dirs in 1 .. Object_Dirs loop\n-\n                Make_Args (1) :=\n                  new String'(\"-C\");\n \n@@ -269,13 +268,14 @@ begin\n                Make_Path := Locate_Exec_On_Path (Make);\n                Put (Make);\n \n-               for I in 1 .. Make_Args'Last loop\n+               for J in 1 .. Make_Args'Last loop\n                   Put (\" \");\n-                  Put (Make_Args (I).all);\n+                  Put (Make_Args (J).all);\n                end loop;\n \n                New_Line;\n                Spawn (Make_Path.all, Make_Args, Success);\n+\n                if not Success then\n                   Put_Line (Standard_Error, \"Error: Make failed\");\n                   Exit_Program (E_Fatal);\n@@ -285,7 +285,7 @@ begin\n \n       when Set =>\n \n-         --  Validate arguments.\n+         --  Validate arguments\n \n          if Lib_Dir = null then\n             Put_Line (Standard_Error,\n@@ -311,7 +311,7 @@ begin\n             Exit_Program (E_Fatal);\n          end if;\n \n-         --  Give instructions.\n+         --  Give instructions\n \n          Put_Line (\"Copy the contents of \"\n            & ADC_File.all & \" into your GNAT.ADC file\");\n@@ -332,7 +332,7 @@ begin\n \n       when Delete =>\n \n-         --  Give instructions.\n+         --  Give instructions\n \n          Put_Line (\"GNAT Librarian DELETE not yet implemented.\");\n          Put_Line (\"Use appropriate system tools to remove library\");"}, {"sha": "c1b11ba597ca2b30d7d37377dc0a32464a2be96f", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,7 +26,6 @@\n \n --  Gnatlink usage: please consult the gnat documentation\n \n-with Ada.Exceptions; use Ada.Exceptions;\n with ALI;      use ALI;\n with Gnatvsn;  use Gnatvsn;\n with Hostparm;\n@@ -40,6 +39,7 @@ with Table;\n with Types;\n \n with Ada.Command_Line;     use Ada.Command_Line;\n+with Ada.Exceptions;       use Ada.Exceptions;\n with GNAT.OS_Lib;          use GNAT.OS_Lib;\n with Interfaces.C_Streams; use Interfaces.C_Streams;\n with System.CRTL;\n@@ -234,9 +234,10 @@ procedure Gnatlink is\n \n    procedure Delete (Name : in String) is\n       Status : int;\n-\n+      pragma Unreferenced (Status);\n    begin\n       Status := unlink (Name'Address);\n+      --  Is it really right to ignore an error here ???\n    end Delete;\n \n    ---------------\n@@ -602,6 +603,9 @@ procedure Gnatlink is\n       Nfirst : Integer;\n       --  Current line slice (the slice does not contain line terminator)\n \n+      Last : Integer;\n+      --  Current line last character for shared libraries (without version)\n+\n       Objs_Begin : Integer := 0;\n       --  First object file index in Linker_Objects table\n \n@@ -986,20 +990,45 @@ procedure Gnatlink is\n                elsif Next_Line (Nfirst .. Nlast) = \"-ldecgnat\"\n                  or else Next_Line (Nfirst .. Nlast) = \"-lgnarl\"\n                  or else Next_Line (Nfirst .. Nlast) = \"-lgnat\"\n+                 or else Next_Line\n+                     (1 .. Natural'Min (Nlast, 8 + Library_Version'Length)) =\n+                       Shared_Lib (\"gnarl\")\n+                 or else Next_Line\n+                     (1 .. Natural'Min (Nlast, 7 + Library_Version'Length)) =\n+                       Shared_Lib (\"gnat\")\n                then\n+                  --  If it is a shared library, remove the library version.\n+                  --  We will be looking for the static version of the library\n+                  --  as it is in the same directory as the shared version.\n+\n+                  if Next_Line (Nlast - Library_Version'Length + 1 .. Nlast)\n+                       = Library_Version\n+                  then\n+                     --  Set Last to point to last character before the\n+                     --  library version.\n+\n+                     Last := Nlast - Library_Version'Length - 1;\n+                  else\n+                     Last := Nlast;\n+                  end if;\n+\n                   --  Given a Gnat standard library, search the\n                   --  library path to find the library location\n \n                   declare\n                      File_Path : String_Access;\n+\n                      Object_Lib_Extension : constant String :=\n-                       Value (Object_Library_Ext_Ptr);\n+                                              Value (Object_Library_Ext_Ptr);\n+\n                      File_Name : constant String := \"lib\" &\n-                                   Next_Line (Nfirst + 2 .. Nlast) &\n-                                                  Object_Lib_Extension;\n+                                   Next_Line (Nfirst + 2 .. Last) &\n+                                   Object_Lib_Extension;\n+\n                      Run_Path_Opt : constant String :=\n                        Value (Run_Path_Option_Ptr);\n-                     GCC_Index    : Natural;\n+\n+                     GCC_Index          : Natural;\n                      Run_Path_Opt_Index : Natural := 0;\n \n                   begin\n@@ -1189,7 +1218,7 @@ procedure Gnatlink is\n          Write_Eol;\n          Write_Str (\"GNATLINK \");\n          Write_Str (Gnat_Version_String);\n-         Write_Str (\" Copyright 1995-2003 Free Software Foundation, Inc\");\n+         Write_Str (\" Copyright 1995-2004 Free Software Foundation, Inc\");\n          Write_Eol;\n       end if;\n    end Write_Header;\n@@ -1586,7 +1615,7 @@ begin\n                --  Remove duplicate IDENTIFICATION directives (VMS)\n \n                if Linker_Options.Table (J)'Length > 27\n-                 and then Linker_Options.Table (J) (1 .. 27)\n+                 and then Linker_Options.Table (J) (1 .. 28)\n                           = \"--for-linker=IDENTIFICATION=\"\n                then\n                   if IDENT_Op then"}, {"sha": "d1f8d9a13c1f3bedfb02331a6ade43f2741e1a96", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1992-2003 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1992-2004 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,11 +75,8 @@ procedure Gnatls is\n \n    Main_File : File_Name_Type;\n    Ali_File  : File_Name_Type;\n-\n-   Text : Text_Buffer_Ptr;\n-   Id   : ALI_Id;\n-\n-   Next_Arg : Positive;\n+   Text      : Text_Buffer_Ptr;\n+   Next_Arg  : Positive;\n \n    Too_Long : Boolean := False;\n    --  When True, lines are too long for multi-column output and each\n@@ -219,9 +216,8 @@ procedure Gnatls is\n    ------------------------------\n \n    function Corresponding_Sdep_Entry\n-     (A     : ALI_Id;\n-      U     : Unit_Id)\n-      return  Sdep_Id\n+     (A : ALI_Id;\n+      U : Unit_Id) return Sdep_Id\n    is\n    begin\n       for D in ALIs.Table (A).First_Sdep .. ALIs.Table (A).Last_Sdep loop\n@@ -253,7 +249,6 @@ procedure Gnatls is\n       --  Compute maximum of each column\n \n       for Id in ALIs.First .. ALIs.Last loop\n-\n          Get_Name_String (Units.Table (ALIs.Table (Id).First_Unit).Uname);\n          if Also_Predef or else not Is_Internal_Unit then\n \n@@ -829,7 +824,6 @@ begin\n    Scan_Args : while Next_Arg < Arg_Count loop\n       declare\n          Next_Argv : String (1 .. Len_Arg (Next_Arg));\n-\n       begin\n          Fill_Arg (Next_Argv'Address, Next_Arg);\n          Scan_Ls_Arg (Next_Argv, And_Save => True);\n@@ -866,7 +860,7 @@ begin\n       Write_Eol;\n       Write_Str (\"GNATLS \");\n       Write_Str (Gnat_Version_String);\n-      Write_Str (\" Copyright 1997-2003 Free Software Foundation, Inc.\");\n+      Write_Str (\" Copyright 1997-2004 Free Software Foundation, Inc.\");\n       Write_Eol;\n       Write_Eol;\n       Write_Str (\"Source Search Path:\");\n@@ -942,9 +936,16 @@ begin\n \n          if Get_Name_Table_Info (Ali_File) = 0 then\n             Text := Read_Library_Info (Ali_File, True);\n-            Id :=\n-              Scan_ALI\n-                (Ali_File, Text, Ignore_ED => False, Err => False);\n+\n+            declare\n+               Discard : ALI_Id;\n+               pragma Unreferenced (Discard);\n+            begin\n+               Discard :=\n+                 Scan_ALI\n+                   (Ali_File, Text, Ignore_ED => False, Err => False);\n+            end;\n+\n             Free (Text);\n          end if;\n       end if;\n@@ -1029,9 +1030,8 @@ begin\n       end;\n    end loop;\n \n-   --  All done. Set proper exit status.\n+   --  All done. Set proper exit status\n \n    Namet.Finalize;\n    Exit_Program (E_Success);\n-\n end Gnatls;"}, {"sha": "21246b05f108b5a16e086ee4617bd38b04b07359", "filename": "gcc/ada/gnatmem.adb", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatmem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatmem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmem.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1997-2003, Ada Core Technologies, Inc.           --\n+--           Copyright (C) 1997-2004, Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,14 +53,18 @@\n --   execution generating memory allocation where data is collected (such as\n --   number of allocations, amount of memory allocated, high water mark, etc.)\n \n-with GNAT.Command_Line;       use GNAT.Command_Line;\n+with Gnatvsn; use Gnatvsn;\n+\n+\n with Ada.Text_IO;             use Ada.Text_IO;\n with Ada.Float_Text_IO;\n with Ada.Integer_Text_IO;\n-with Gnatvsn;                 use Gnatvsn;\n+\n+with GNAT.Command_Line;       use GNAT.Command_Line;\n with GNAT.Heap_Sort_G;\n with GNAT.OS_Lib;             use GNAT.OS_Lib;\n with GNAT.HTable;             use GNAT.HTable;\n+\n with System;                  use System;\n with System.Storage_Elements; use System.Storage_Elements;\n \n@@ -230,7 +234,7 @@ procedure Gnatmem is\n       New_Line;\n       Put (\"GNATMEM \");\n       Put (Gnat_Version_String);\n-      Put_Line (\" Copyright 1997-2003 Free Software Foundation, Inc.\");\n+      Put_Line (\" Copyright 1997-2004 Free Software Foundation, Inc.\");\n       New_Line;\n \n       Put_Line (\"Usage: gnatmem switches [depth] exename\");\n@@ -287,20 +291,20 @@ procedure Gnatmem is\n \n             when 's' =>\n                declare\n-                  S : String (Sort_Order'Range) := Parameter;\n+                  S : constant String (Sort_Order'Range) := Parameter;\n+\n                begin\n                   for J in Sort_Order'Range loop\n-                     if S (J) = 'n' or else S (J) = 'w'\n-                       or else S (J) = 'h' then\n+                     if S (J) = 'n' or else\n+                        S (J) = 'w' or else\n+                        S (J) = 'h'\n+                     then\n                         Sort_Order (J) := S (J);\n                      else\n-                        raise Constraint_Error;\n+                        Put_Line (\"Invalid sort criteria string.\");\n+                        GNAT.OS_Lib.OS_Exit (1);\n                      end if;\n                   end loop;\n-               exception\n-                  when Constraint_Error =>\n-                     Put_Line (\"Invalid sort criteria string.\");\n-                     GNAT.OS_Lib.OS_Exit (1);\n                end;\n \n             when others =>\n@@ -607,6 +611,8 @@ begin\n \n          Result : Integer;\n \n+      --  Start of processing for Lt\n+\n       begin\n          for S in Sort_Order'Range loop\n             Result := Apply_Sort_Criterion (Sort_Order (S));"}, {"sha": "fb35abb388a225cca97863d5e4bff3a32530c4e8", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2001-2003 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2001-2004 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,7 +66,7 @@ procedure Gnatname is\n       Table_Initial        => 10,\n       Table_Increment      => 10,\n       Table_Name           => \"Gnatname.Excluded_Patterns\");\n-   --  Table to accumulate the negative patterns.\n+   --  Table to accumulate the negative patterns\n \n    package Foreign_Patterns is new Table.Table\n      (Table_Component_Type => String_Access,\n@@ -75,7 +75,7 @@ procedure Gnatname is\n       Table_Initial        => 10,\n       Table_Increment      => 10,\n       Table_Name           => \"Gnatname.Foreign_Patterns\");\n-   --  Table to accumulate the foreign patterns.\n+   --  Table to accumulate the foreign patterns\n \n    package Patterns is new Table.Table\n      (Table_Component_Type => String_Access,\n@@ -84,7 +84,7 @@ procedure Gnatname is\n       Table_Initial        => 10,\n       Table_Increment      => 10,\n       Table_Name           => \"Gnatname.Patterns\");\n-   --  Table to accumulate the name patterns.\n+   --  Table to accumulate the name patterns\n \n    package Source_Directories is new Table.Table\n      (Table_Component_Type => String_Access,\n@@ -170,7 +170,7 @@ procedure Gnatname is\n          Output.Write_Str (\"GNATNAME \");\n          Output.Write_Str (Gnatvsn.Gnat_Version_String);\n          Output.Write_Line\n-           (\" Copyright 2001-2003 Free Software Foundation, Inc.\");\n+           (\" Copyright 2001-2004 Free Software Foundation, Inc.\");\n       end if;\n    end Output_Version;\n \n@@ -261,7 +261,6 @@ procedure Gnatname is\n    exception\n       when Invalid_Switch =>\n          Fail (\"invalid switch \" & Full_Switch);\n-\n    end Scan_Args;\n \n    -----------"}, {"sha": "6b1dd4d3499854db87e59614e7e7ee8e94ffb0c9", "filename": "gcc/ada/gnatsym.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatsym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatsym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatsym.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ with Table;\n procedure Gnatsym is\n \n    Empty_String : aliased String := \"\";\n-   Empty : constant String_Access := Empty_String'Unchecked_Access;\n+   Empty        : constant String_Access := Empty_String'Unchecked_Access;\n    --  To initialize variables Reference and Version_String\n \n    Copyright_Displayed : Boolean := False;\n@@ -111,7 +111,7 @@ procedure Gnatsym is\n          Write_Eol;\n          Write_Str (\"GNATSYMB \");\n          Write_Str (Gnat_Version_String);\n-         Write_Str (\" Copyright 2003 Free Software Foundation, Inc\");\n+         Write_Str (\" Copyright 2003-2004 Free Software Foundation, Inc\");\n          Write_Eol;\n          Copyright_Displayed := True;\n       end if;\n@@ -224,8 +224,7 @@ begin\n          Write_Line (\"\"\"\");\n       end if;\n \n-      --  Initialize the symbol file and, if specified, read the reference\n-      --  file.\n+      --  Initialize symbol file and, if specified, read reference file\n \n       Symbols.Initialize\n         (Symbol_File   => Symbol_File_Name.all,"}, {"sha": "d7b668d9bf530cf524a8caf23702dc92177af570", "filename": "gcc/ada/gnatxref.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatxref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgnatxref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatxref.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1998-2003 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2004 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -72,7 +72,7 @@ procedure Gnatxref is\n             when ASCII.NUL =>\n                exit;\n \n-            when 'a'    =>\n+            when 'a' =>\n                if GNAT.Command_Line.Full_Switch = \"a\" then\n                   Read_Only := True;\n \n@@ -83,49 +83,49 @@ procedure Gnatxref is\n                   Osint.Add_Lib_Search_Dir (GNAT.Command_Line.Parameter);\n                end if;\n \n-            when 'd'    =>\n+            when 'd' =>\n                Der_Info := True;\n \n-            when 'f'    =>\n+            when 'f' =>\n                Full_Path_Name := True;\n \n-            when 'g'    =>\n+            when 'g' =>\n                Local_Symbols := False;\n \n-            when 'h'    =>\n+            when 'h' =>\n                Write_Usage;\n \n-            when 'I'    =>\n+            when 'I' =>\n                Osint.Add_Src_Search_Dir (GNAT.Command_Line.Parameter);\n                Osint.Add_Lib_Search_Dir (GNAT.Command_Line.Parameter);\n \n-            when 'n'    =>\n+            when 'n' =>\n                if GNAT.Command_Line.Full_Switch = \"nostdinc\" then\n                   Opt.No_Stdinc := True;\n                elsif GNAT.Command_Line.Full_Switch = \"nostlib\" then\n                   Opt.No_Stdlib := True;\n                end if;\n \n-            when 'p'    =>\n+            when 'p' =>\n                declare\n                   S : constant String := GNAT.Command_Line.Parameter;\n-\n                begin\n                   Prj_File_Length := S'Length;\n                   Prj_File (1 .. Prj_File_Length) := S;\n                end;\n \n-            when 'u'    =>\n+            when 'u' =>\n                Search_Unused := True;\n                Vi_Mode := False;\n \n-            when 'v'    =>\n+            when 'v' =>\n                Vi_Mode := True;\n                Search_Unused := False;\n \n             --  The only switch starting with -- recognized is --RTS\n \n-            when '-'    =>\n+            when '-' =>\n+\n                --  Check that it is the first time we see this switch\n \n                if RTS_Specified = null then\n@@ -210,7 +210,7 @@ procedure Gnatxref is\n    procedure Write_Usage is\n    begin\n       Put_Line (\"GNATXREF \" & Gnatvsn.Gnat_Version_String\n-                & \" Copyright 1998-2003, Ada Core Technologies Inc.\");\n+                & \" Copyright 1998-2004, Ada Core Technologies Inc.\");\n       Put_Line (\"Usage: gnatxref [switches] file1 file2 ...\");\n       New_Line;\n       Put_Line (\"  file ... list of source files to xref, \" &"}, {"sha": "9a033a29c380fec6fe7f3d321583e8233a36be9e", "filename": "gcc/ada/gprcmd.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgprcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgprcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprcmd.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 2002-2003 Free Software Foundation, Inc.           --\n+--         Copyright (C) 2002-2004 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -249,7 +249,7 @@ procedure Gprcmd is\n    procedure Extend (Dir : String) is\n \n       procedure Recursive_Extend (D : String);\n-      --  Recursively display all subdirectories of D.\n+      --  Recursively display all subdirectories of D\n \n       ----------------------\n       -- Recursive_Extend --\n@@ -355,7 +355,7 @@ begin\n          Put (Standard_Error, \"GPRCMD \");\n          Put (Standard_Error, Gnatvsn.Gnat_Version_String);\n          Put_Line (Standard_Error,\n-                   \" Copyright 2002-2003, Free Software Fundation, Inc.\");\n+                   \" Copyright 2002-2004, Free Software Fundation, Inc.\");\n          Usage;\n \n       elsif Cmd = \"pwd\" then\n@@ -437,8 +437,8 @@ begin\n          Find_Program_Name;\n \n          declare\n-            Path : String_Access :=\n-                     Locate_Exec_On_Path (Name_Buffer (1 .. Name_Len));\n+            Path  : constant String_Access :=\n+                      Locate_Exec_On_Path (Name_Buffer (1 .. Name_Len));\n             Index : Natural;\n \n          begin\n@@ -454,7 +454,7 @@ begin\n                  and then Path (Index - 3 .. Index - 1) = \"bin\"\n                  and then Path (Index - 4) = Directory_Separator\n                then\n-                  --  We have found the <prefix>, return it.\n+                  --  We have found the <prefix>, return it\n \n                   Put (Path (Path'First .. Index - 5));\n                end if;"}, {"sha": "015f9644e7ec4f38a36333ee959a4f88863d0aed", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,8 +24,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Text_IO; use Ada.Text_IO;\n-\n with Csets;\n with Err_Vars; use Err_Vars;\n with Errutil;\n@@ -41,8 +39,9 @@ with Snames;\n with Stringt;  use Stringt;\n with Types;    use Types;\n \n+with Ada.Text_IO;       use Ada.Text_IO;\n with GNAT.Command_Line;\n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n+with GNAT.OS_Lib;       use GNAT.OS_Lib;\n \n package body GPrep is\n \n@@ -57,11 +56,11 @@ package body GPrep is\n    Outfile_Name : String_Access;\n    Deffile_Name : String_Access;\n \n-   Source_Ref_Pragma         : Boolean := False;  -- Set if -r switch set\n-   --  Record command line options\n+   Source_Ref_Pragma : Boolean := False;\n+   --  Record command line options (set if -r switch set)\n \n    Text_Outfile : aliased Ada.Text_IO.File_Type;\n-   Outfile      : File_Access := Text_Outfile'Access;\n+   Outfile      : constant File_Access := Text_Outfile'Access;\n \n    -----------------\n    -- Subprograms --\n@@ -87,11 +86,11 @@ package body GPrep is\n \n    procedure Put_Char_To_Outfile (C : Character);\n    --  Output one character to the output file.\n-   --  Used to initialize the preprocessor..\n+   --  Used to initialize the preprocessor.\n \n    procedure New_EOL_To_Outfile;\n    --  Output a new line to the output file.\n-   --  used to initialize the preprocessor.\n+   --  Used to initialize the preprocessor.\n \n    procedure Scan_Command_Line;\n    --  Scan the switches and the file names\n@@ -108,7 +107,7 @@ package body GPrep is\n       if not Copyright_Displayed then\n          Write_Line (\"GNAT Preprocessor \" &\n                      Gnatvsn.Gnat_Version_String &\n-                     \" Copyright 1996-2003 Free Software Foundation, Inc.\");\n+                     \" Copyright 1996-2004 Free Software Foundation, Inc.\");\n          Copyright_Displayed := True;\n       end if;\n    end Display_Copyright;"}, {"sha": "c133ddf14f6336c7d6772cddc01fcf5343ffb3e9", "filename": "gcc/ada/i-cstrea.adb", "status": "modified", "additions": 41, "deletions": 49, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fi-cstrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fi-cstrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -41,6 +41,31 @@ package body Interfaces.C_Streams is\n \n    use type System.CRTL.size_t;\n \n+   ----------------------------\n+   -- Interfaced C functions --\n+   ----------------------------\n+\n+   function C_fread\n+     (buffer : voids;\n+      size   : size_t;\n+      count  : size_t;\n+      stream : FILEs) return size_t;\n+   pragma Import (C, C_fread, \"fread\");\n+\n+   function C_fwrite\n+     (buffer : voids;\n+      size   : size_t;\n+      count  : size_t;\n+      stream : FILEs) return size_t;\n+   pragma Import (C, C_fwrite, \"fwrite\");\n+\n+   function C_setvbuf\n+     (stream : FILEs;\n+      buffer : chars;\n+      mode   : int;\n+      size   : size_t) return int;\n+   pragma Import (C, C_setvbuf, \"setvbuf\");\n+\n    ------------\n    -- fread --\n    ------------\n@@ -49,17 +74,8 @@ package body Interfaces.C_Streams is\n      (buffer : voids;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t\n+      stream : FILEs) return size_t\n    is\n-      function C_fread\n-        (buffer : voids;\n-         size   : size_t;\n-         count  : size_t;\n-         stream : FILEs)\n-         return   size_t;\n-      pragma Import (C, C_fread, \"fread\");\n-\n    begin\n       return C_fread (buffer, size, count, stream);\n    end fread;\n@@ -68,31 +84,25 @@ package body Interfaces.C_Streams is\n    -- fread --\n    ------------\n \n+   --  The following declarations should really be nested within fread, but\n+   --  limitations in front end inlining make this undesirable right now ???\n+\n+   type Byte_Buffer is array (0 .. size_t'Last / 2 - 1) of Unsigned_8;\n+   --  This should really be 0 .. size_t'last, but there is a problem\n+   --  in gigi in handling such types (introduced in GCC 3 Sep 2001)\n+   --  since the size in bytes of this array overflows ???\n+\n+   type Acc_Bytes is access all Byte_Buffer;\n+\n+   function To_Acc_Bytes is new Unchecked_Conversion (voids, Acc_Bytes);\n+\n    function fread\n      (buffer : voids;\n       index  : size_t;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t\n+      stream : FILEs) return size_t\n    is\n-      function C_fread\n-        (buffer : voids;\n-         size   : size_t;\n-         count  : size_t;\n-         stream : FILEs)\n-         return   size_t;\n-      pragma Import (C, C_fread, \"fread\");\n-\n-      type Byte_Buffer is array (0 .. size_t'Last / 2 - 1) of Unsigned_8;\n-      --  This should really be 0 .. size_t'last, but there is a problem\n-      --  in gigi in handling such types (introduced in GCC 3 Sep 2001)\n-      --  since the size in bytes of this array overflows ???\n-\n-      type Acc_Bytes is access all Byte_Buffer;\n-\n-      function To_Acc_Bytes is new Unchecked_Conversion (voids, Acc_Bytes);\n-\n    begin\n       return C_fread\n         (To_Acc_Bytes (buffer) (index * size)'Address, size, count, stream);\n@@ -106,17 +116,8 @@ package body Interfaces.C_Streams is\n      (buffer : voids;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t\n+      stream : FILEs) return size_t\n    is\n-      function C_fwrite\n-        (buffer : voids;\n-         size   : size_t;\n-         count  : size_t;\n-         stream : FILEs)\n-         return   size_t;\n-      pragma Import (C, C_fwrite, \"fwrite\");\n-\n    begin\n       return C_fwrite (buffer, size, count, stream);\n    end fwrite;\n@@ -129,17 +130,8 @@ package body Interfaces.C_Streams is\n      (stream : FILEs;\n       buffer : chars;\n       mode   : int;\n-      size   : size_t)\n-      return   int\n+      size   : size_t) return int\n    is\n-      function C_setvbuf\n-        (stream : FILEs;\n-         buffer : chars;\n-         mode   : int;\n-         size   : size_t)\n-         return   int;\n-      pragma Import (C, C_setvbuf, \"setvbuf\");\n-\n    begin\n       return C_setvbuf (stream, buffer, mode, size);\n    end setvbuf;"}, {"sha": "b96da453496e5b349a9d61f77ff55b527d88fc81", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -370,7 +370,7 @@ package body Inline is\n       ----------------------------\n \n       function Back_End_Cannot_Inline (Subp : Entity_Id) return Boolean is\n-         Decl     : Node_Id := Unit_Declaration_Node (Subp);\n+         Decl     : constant Node_Id := Unit_Declaration_Node (Subp);\n          Body_Ent : Entity_Id;\n          Ent      : Entity_Id;\n "}, {"sha": "8314bd9c79e05a0109c1f47c46e99ae024644fc6", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -881,6 +881,10 @@ package body Lib.Writ is\n          Write_Info_Str (\" NS\");\n       end if;\n \n+      if Sec_Stack_Used then\n+         Write_Info_Str (\" SS\");\n+      end if;\n+\n       if Unreserve_All_Interrupts then\n          Write_Info_Str (\" UA\");\n       end if;"}, {"sha": "977b4b38205acf6eda00d6e09c8c0ca42fa1ba52", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -176,6 +176,9 @@ package Lib.Writ is\n    --              compiler, but is added by the Project Manager in gnatmake\n    --              when an Interface ALI file is copied to the library\n    --              directory.\n+\n+   --         SS   This unit references System.Secondary_Stack (that is,\n+   --              the unit makes use of the secondary stack facilities).\n    --\n    --         Tx   A valid Task_Dispatching_Policy pragma applies to all\n    --              the units in this file, where x is the first character"}, {"sha": "bc663a1a93c1a2a4d8941daa29e0d02f2fad3a35", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -776,9 +776,8 @@ package body Lib.Xref is\n               and then Ent = Base_Type (Ent)\n               and then In_Extended_Main_Source_Unit (Ent)\n             then\n-\n                declare\n-                  Op_List : Elist_Id := Primitive_Operations (Ent);\n+                  Op_List : constant Elist_Id := Primitive_Operations (Ent);\n                   Op      : Elmt_Id;\n                   Prim    : Entity_Id;\n \n@@ -787,11 +786,10 @@ package body Lib.Xref is\n                   --  through several derivations.\n \n                   function Parent_Op (E : Entity_Id) return Entity_Id is\n-                     Orig_Op : Entity_Id := Alias (E);\n+                     Orig_Op : constant Entity_Id := Alias (E);\n                   begin\n                      if No (Orig_Op) then\n                         return Empty;\n-\n                      elsif not Comes_From_Source (E)\n                        and then not Has_Xref_Entry (Orig_Op)\n                        and then Comes_From_Source (Orig_Op)\n@@ -804,9 +802,7 @@ package body Lib.Xref is\n \n                begin\n                   Op := First_Elmt (Op_List);\n-\n                   while Present (Op) loop\n-\n                      Prim := Parent_Op (Node (Op));\n \n                      if Present (Prim) then"}, {"sha": "c31db939cf0316fb104a2bfb0d34526e9e2e7aa2", "filename": "gcc/ada/link.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -139,7 +139,7 @@ const char *object_library_extension = \".a\";\n #elif defined (VMS)\n const char *object_file_option = \"\";\n const char *run_path_option = \"\";\n-char shared_libgnat_default = SHARED;\n+char shared_libgnat_default = STATIC;\n int link_max = 2147483647;\n unsigned char objlist_file_supported = 0;\n unsigned char using_gnu_linker = 0;"}, {"sha": "ed7c188bc53f704cfcdd3ec8969d4897f7ec3790", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 65, "deletions": 33, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,16 +55,17 @@ with Sinput.P;\n with Snames;   use Snames;\n with Switch;   use Switch;\n with Switch.M; use Switch.M;\n-with System.HTable;\n with Targparm;\n with Tempdir;\n \n-with Ada.Exceptions;   use Ada.Exceptions;\n-with Ada.Command_Line; use Ada.Command_Line;\n+with Ada.Exceptions;            use Ada.Exceptions;\n+with Ada.Command_Line;          use Ada.Command_Line;\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.Case_Util;            use GNAT.Case_Util;\n \n+with System.HTable;\n+\n package body Make is\n \n    use ASCII;\n@@ -3265,7 +3266,7 @@ package body Make is\n    --------------------------\n \n    procedure Enter_Into_Obsoleted (F : Name_Id) is\n-      Name  : String := Get_Name_String (F);\n+      Name  : constant String := Get_Name_String (F);\n       First : Natural := Name'Last;\n       F2    : Name_Id := F;\n \n@@ -3398,7 +3399,55 @@ package body Make is\n          Opt.Check_Object_Consistency := False;\n       end if;\n \n-      if Main_Project /= No_Project then\n+      --  Special case when switch -B was specified\n+\n+      if Build_Bind_And_Link_Full_Project then\n+\n+         --  When switch -B is specified, there must be a project file\n+\n+         if Main_Project = No_Project then\n+            Make_Failed (\"-B cannot be used without a project file\");\n+\n+         --  No main program may be specified on the command line\n+\n+         elsif Osint.Number_Of_Files /= 0 then\n+            Make_Failed (\"-B cannot be used with a main specified on \" &\n+                         \"the command line\");\n+\n+         --  And the project file cannot be a library project file\n+\n+         elsif Projects.Table (Main_Project).Library then\n+            Make_Failed (\"-B cannot be used for a library project file\");\n+\n+         else\n+            Insert_Project_Sources\n+              (The_Project  => Main_Project,\n+               All_Projects => Unique_Compile_All_Projects,\n+               Into_Q       => False);\n+\n+            --  If there are no sources to compile, we fail\n+\n+            if Osint.Number_Of_Files = 0 then\n+               Make_Failed (\"no sources to compile\");\n+            end if;\n+\n+            --  Specify -n for gnatbind and add the ALI files of all the\n+            --  sources, except the one which is a fake main subprogram:\n+            --  this is the one for the binder generated file and it will be\n+            --  transmitted to gnatlink. These sources are those that are\n+            --  in the queue.\n+\n+            Add_Switch (\"-n\", Binder, And_Save => True);\n+\n+            for J in Q.First .. Q.Last - 1 loop\n+               Add_Switch\n+                 (Get_Name_String\n+                    (Lib_File_Name (Q.Table (J).File)),\n+                  Binder, And_Save => True);\n+            end loop;\n+         end if;\n+\n+      elsif Main_Project /= No_Project then\n \n          --  If the main project file is a library project file, main(s)\n          --  cannot be specified on the command line.\n@@ -3602,9 +3651,10 @@ package body Make is\n                   --  all the sources of the project.\n \n                   declare\n-                     Data : Project_Data := Projects.Table (Main_Project);\n+                     Data : constant Project_Data :=\n+                              Projects.Table (Main_Project);\n \n-                     Languages : Variable_Value :=\n+                     Languages : constant Variable_Value :=\n                                    Prj.Util.Value_Of\n                                      (Name_Languages, Data.Decl.Attributes);\n \n@@ -3661,31 +3711,12 @@ package body Make is\n                      end loop;\n \n                      --  If we did not get any main, it means that all mains\n-                     --  in attribute Mains are in a foreign language. So,\n-                     --  we put all sources of the main project in the Q.\n+                     --  in attribute Mains are in a foreign language and -B\n+                     --  was not specified to gnatmake; so, we fail.\n \n                      if not At_Least_One_Main then\n-\n-                        --  First make sure that the binder and the linker\n-                        --  will not be invoked if -z is not used.\n-\n-                        if not No_Main_Subprogram then\n-                           Do_Bind_Step := False;\n-                           Do_Link_Step := False;\n-                        end if;\n-\n-                        --  Put all the sources in the queue\n-\n-                        Insert_Project_Sources\n-                          (The_Project  => Main_Project,\n-                           All_Projects => Unique_Compile_All_Projects,\n-                           Into_Q       => False);\n-\n-                        --  If there are no sources to compile, we fail\n-\n-                        if Osint.Number_Of_Files = 0 then\n-                           Make_Failed (\"no sources to compile\");\n-                        end if;\n+                        Make_Failed\n+                          (\"no Ada mains; use -B to build foreign main\");\n                      end if;\n                   end;\n \n@@ -3698,7 +3729,7 @@ package body Make is\n          Write_Eol;\n          Write_Str (\"GNATMAKE \");\n          Write_Str (Gnatvsn.Gnat_Version_String);\n-         Write_Str (\" Copyright 1995-2003 Free Software Foundation, Inc.\");\n+         Write_Str (\" Copyright 1995-2004 Free Software Foundation, Inc.\");\n          Write_Eol;\n       end if;\n \n@@ -4563,6 +4594,7 @@ package body Make is\n                    or not Do_Bind_Step\n                    or not Is_Main_Unit)\n                  and then not No_Main_Subprogram\n+                 and then not Build_Bind_And_Link_Full_Project\n                then\n                   if Osint.Number_Of_Files = 1 then\n                      exit Multiple_Main_Loop;\n@@ -5995,7 +6027,7 @@ package body Make is\n \n       else\n          declare\n-            Name  : String := Get_Name_String (F);\n+            Name  : constant String := Get_Name_String (F);\n             First : Natural := Name'Last;\n             F2    : Name_Id := F;\n "}, {"sha": "73e91f12cfbed85a77bf5f22c686052f01b23f8c", "filename": "gcc/ada/makeusg.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmakeusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmakeusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeusg.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -61,6 +61,11 @@ begin\n    Write_Str (\"  -b       Bind only\");\n    Write_Eol;\n \n+   --  Line for -B\n+\n+   Write_Str (\"  -B       Build, bind and link full project\");\n+   Write_Eol;\n+\n    --  Line for -c\n \n    Write_Str (\"  -c       Compile only\");"}, {"sha": "a6c9b23c3667e80d3a98a57dc0fde85c72db4a3b", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 37, "deletions": 31, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -59,12 +59,12 @@ package body MDLL is\n \n       Base_Filename : constant String := MDLL.Fil.Ext_To (Lib_Filename);\n \n-      Def_File : aliased String := Def_Filename;\n-      Jnk_File : aliased String := Base_Filename & \".jnk\";\n-      Bas_File : aliased String := Base_Filename & \".base\";\n-      Dll_File : aliased String := Base_Filename & \".dll\";\n-      Exp_File : aliased String := Base_Filename & \".exp\";\n-      Lib_File : aliased String := \"lib\" & Base_Filename & \".a\";\n+      Def_File : aliased constant String := Def_Filename;\n+      Jnk_File : aliased          String := Base_Filename & \".jnk\";\n+      Bas_File : aliased constant String := Base_Filename & \".base\";\n+      Dll_File : aliased          String := Base_Filename & \".dll\";\n+      Exp_File : aliased          String := Base_Filename & \".exp\";\n+      Lib_File : aliased constant String := \"lib\" & Base_Filename & \".a\";\n \n       Bas_Opt  : aliased String := \"-Wl,--base-file,\" & Bas_File;\n       Lib_Opt  : aliased String := \"-mdll\";\n@@ -187,10 +187,13 @@ package body MDLL is\n          Utl.Gnatbind (L_Afiles, Options & Bargs_Options);\n \n          declare\n-            Params : OS_Lib.Argument_List :=\n-              Out_Opt'Unchecked_Access & Jnk_File'Unchecked_Access &\n-              Lib_Opt'Unchecked_Access &\n-              Bas_Opt'Unchecked_Access & Ofiles & All_Options;\n+            Params : constant OS_Lib.Argument_List :=\n+                       Out_Opt'Unchecked_Access &\n+                       Jnk_File'Unchecked_Access &\n+                       Lib_Opt'Unchecked_Access &\n+                       Bas_Opt'Unchecked_Access &\n+                       Ofiles &\n+                       All_Options;\n          begin\n             Utl.Gnatlink (L_Afiles (L_Afiles'Last).all, Params);\n          end;\n@@ -207,13 +210,14 @@ package body MDLL is\n          Utl.Gnatbind (L_Afiles, Options & Bargs_Options);\n \n          declare\n-            Params : OS_Lib.Argument_List :=\n-              Out_Opt'Unchecked_Access & Jnk_File'Unchecked_Access &\n-              Lib_Opt'Unchecked_Access &\n-              Bas_Opt'Unchecked_Access &\n-              Exp_File'Unchecked_Access &\n-              Ofiles &\n-              All_Options;\n+            Params : constant OS_Lib.Argument_List :=\n+                       Out_Opt'Unchecked_Access &\n+                       Jnk_File'Unchecked_Access &\n+                       Lib_Opt'Unchecked_Access &\n+                       Bas_Opt'Unchecked_Access &\n+                       Exp_File'Unchecked_Access &\n+                       Ofiles &\n+                       All_Options;\n          begin\n             Utl.Gnatlink (L_Afiles (L_Afiles'Last).all, Params);\n          end;\n@@ -230,13 +234,14 @@ package body MDLL is\n          Utl.Gnatbind (L_Afiles, Options & Bargs_Options);\n \n          declare\n-            Params : OS_Lib.Argument_List :=\n-              Out_Opt'Unchecked_Access & Dll_File'Unchecked_Access &\n-              Lib_Opt'Unchecked_Access &\n-              Exp_File'Unchecked_Access &\n-              Adr_Opt'Unchecked_Access &\n-              Ofiles &\n-              All_Options;\n+            Params : constant OS_Lib.Argument_List :=\n+                       Out_Opt'Unchecked_Access &\n+                       Dll_File'Unchecked_Access &\n+                       Lib_Opt'Unchecked_Access &\n+                       Exp_File'Unchecked_Access &\n+                       Adr_Opt'Unchecked_Access &\n+                       Ofiles &\n+                       All_Options;\n          begin\n             Utl.Gnatlink (L_Afiles (L_Afiles'Last).all, Params);\n          end;\n@@ -325,13 +330,14 @@ package body MDLL is\n          Utl.Gnatbind (L_Afiles, Options & Bargs_Options);\n \n          declare\n-            Params : OS_Lib.Argument_List :=\n-              Out_Opt'Unchecked_Access & Dll_File'Unchecked_Access &\n-              Lib_Opt'Unchecked_Access &\n-              Exp_File'Unchecked_Access &\n-              Adr_Opt'Unchecked_Access &\n-              Ofiles &\n-              All_Options;\n+            Params : constant OS_Lib.Argument_List :=\n+                       Out_Opt'Unchecked_Access &\n+                       Dll_File'Unchecked_Access &\n+                       Lib_Opt'Unchecked_Access &\n+                       Exp_File'Unchecked_Access &\n+                       Adr_Opt'Unchecked_Access &\n+                       Ofiles &\n+                       All_Options;\n          begin\n             Utl.Gnatlink (L_Afiles (L_Afiles'Last).all, Params);\n          end;"}, {"sha": "e9f2690df38faa6b657aa3a22e5b93dea218e1dc", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -530,13 +530,19 @@ gnat_print_type (FILE *file, tree node, int indent)\n }\n \n static const char *\n-gnat_printable_name (tree decl, int verbosity ATTRIBUTE_UNUSED)\n+gnat_printable_name (tree decl, int verbosity)\n {\n   const char *coded_name = IDENTIFIER_POINTER (DECL_NAME (decl));\n-  char *ada_name = (char *) ggc_alloc (strlen (coded_name) * 2 + 60);\n+  char *ada_name = (char *) ggc_alloc (strlen (coded_name) * 2 + 60);    \n \n   __gnat_decode (coded_name, ada_name, 0);\n \n+  if (verbosity == 2)\n+    {\n+      Set_Identifier_Casing (ada_name, (char *) DECL_SOURCE_FILE (decl));\n+      ada_name = Name_Buffer;\n+    }\n+\n   return (const char *) ada_name;\n }\n "}, {"sha": "19149c0b99a6c327c1694e5c7a55e20107fa39a4", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -25,12 +25,14 @@\n ------------------------------------------------------------------------------\n \n with ALI;      use ALI;\n+with Gnatvsn;  use Gnatvsn;\n with Hostparm;\n with MLib.Fil; use MLib.Fil;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl; use MLib.Utl;\n with Namet;    use Namet;\n with Opt;\n+with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Com;  use Prj.Com;\n with Prj.Env;  use Prj.Env;\n@@ -1165,7 +1167,12 @@ package body MLib.Prj is\n \n          if Libgnarl_Needed then\n             Opts.Increment_Last;\n-            Opts.Table (Opts.Last) := new String'(\"-lgnarl\");\n+\n+            if The_Build_Mode = Static then\n+               Opts.Table (Opts.Last) := new String'(\"-lgnarl\");\n+            else\n+               Opts.Table (Opts.Last) := new String'(Shared_Lib (\"gnarl\"));\n+            end if;\n          end if;\n \n          if Libdecgnat_Needed then\n@@ -1177,7 +1184,12 @@ package body MLib.Prj is\n          end if;\n \n          Opts.Increment_Last;\n-         Opts.Table (Opts.Last) := new String'(\"-lgnat\");\n+\n+         if The_Build_Mode = Static then\n+            Opts.Table (Opts.Last) := new String'(\"-lgnat\");\n+         else\n+            Opts.Table (Opts.Last) := new String'(Shared_Lib (\"gnat\"));\n+         end if;\n \n          --  If Path Option is supported, add the necessary switch with the\n          --  content of Rpath. As Rpath contains at least libgnat directory\n@@ -1717,10 +1729,11 @@ package body MLib.Prj is\n       --  For fopen\n \n       Status : Interfaces.C_Streams.int;\n+      pragma Unreferenced (Status);\n       --  For fclose\n \n-      Begin_Info : String := \"--  BEGIN Object file/option list\";\n-      End_Info   : String := \"--  END Object file/option list   \";\n+      Begin_Info : constant String := \"--  BEGIN Object file/option list\";\n+      End_Info   : constant String := \"--  END Object file/option list   \";\n \n       Next_Line : String (1 .. 1000);\n       --  Current line value\n@@ -1793,18 +1806,30 @@ package body MLib.Prj is\n \n       if Next_Line (1 .. Nlast) /= End_Info then\n          loop\n-            --  Disregard -static and -shared, as -shared will be used\n+            --  Ignore -static and -shared, since -shared will be used\n             --  in any case.\n \n-            --  Disregard -lgnat, -lgnarl and -ldecgnat as they will be added\n+            --  Ignore -lgnat, -lgnarl and -ldecgnat as they will be added\n             --  later, because they are also needed for non Stand-Alone shared\n             --  libraries.\n \n+            --  Also ignore the shared libraries which are :\n+\n+            --  UNIX / Windows    VMS\n+            --  -lgnat-<version>  -lgnat_<version>  (7 + version'length chars)\n+            --  -lgnarl-<version> -lgnarl_<version> (8 + version'length chars)\n+\n             if Next_Line (1 .. Nlast) /= \"-static\" and then\n                Next_Line (1 .. Nlast) /= \"-shared\" and then\n                Next_Line (1 .. Nlast) /= \"-ldecgnat\" and then\n                Next_Line (1 .. Nlast) /= \"-lgnarl\" and then\n-               Next_Line (1 .. Nlast) /= \"-lgnat\"\n+               Next_Line (1 .. Nlast) /= \"-lgnat\" and then\n+               Next_Line\n+                 (1 .. Natural'Min (Nlast, 8 + Library_Version'Length)) /=\n+                   Shared_Lib (\"gnarl\") and then\n+               Next_Line\n+                 (1 .. Natural'Min (Nlast, 7 + Library_Version'Length)) /=\n+                   Shared_Lib (\"gnat\")\n             then\n                if Next_Line (1) /= '-' then\n \n@@ -1838,6 +1863,7 @@ package body MLib.Prj is\n       end if;\n \n       Status := fclose (Fd);\n+      --  Is it really right to ignore any close error ???\n    end Process_Binder_File;\n \n    ------------------"}, {"sha": "6cebb5cd442704cf0167716f20653684b457bdcd", "filename": "gcc/ada/mlib-tgt.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmlib-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fmlib-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -137,7 +137,6 @@ package body MLib.Tgt is\n \n    function Is_Object_Ext (Ext : String) return Boolean is\n       pragma Unreferenced (Ext);\n-\n    begin\n       return False;\n    end Is_Object_Ext;\n@@ -148,7 +147,6 @@ package body MLib.Tgt is\n \n    function Is_C_Ext (Ext : String) return Boolean is\n       pragma Unreferenced (Ext);\n-\n    begin\n       return False;\n    end Is_C_Ext;\n@@ -159,7 +157,6 @@ package body MLib.Tgt is\n \n    function Is_Archive_Ext (Ext : String) return Boolean is\n       pragma Unreferenced (Ext);\n-\n    begin\n       return False;\n    end Is_Archive_Ext;\n@@ -179,7 +176,6 @@ package body MLib.Tgt is\n \n    function Library_Exists_For (Project : Project_Id) return Boolean is\n       pragma Unreferenced (Project);\n-\n    begin\n       return False;\n    end Library_Exists_For;\n@@ -190,7 +186,6 @@ package body MLib.Tgt is\n \n    function Library_File_Name_For (Project : Project_Id) return Name_Id is\n       pragma Unreferenced (Project);\n-\n    begin\n       return No_Name;\n    end Library_File_Name_For;"}, {"sha": "6c6fb3e083147a6d4f641c8ba97a934c6e1bf3ee", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -165,6 +165,11 @@ package Opt is\n    --  Force brief error messages to standard error, even if verbose mode is\n    --  set (so that main error messages go to standard output).\n \n+   Build_Bind_And_Link_Full_Project : Boolean := False;\n+   --  GNATMAKE\n+   --  Set to True to build, bind and link all the sources of a project file\n+   --  (switch -B)\n+\n    Check_Object_Consistency : Boolean := False;\n    --  GNATBIND, GNATMAKE\n    --  Set to True to check whether every object file is consistent with\n@@ -260,6 +265,13 @@ package Opt is\n    --  of the original source code. Causes debugging information to be\n    --  written with respect to the generated code file that is written.\n \n+   Default_Sec_Stack_Size : Int := -1;\n+   --  GNATBIND\n+   --  Set to default secondary stack size in units of kilobytes. Set by\n+   --  the -Dnnn switch for the binder. A value of -1 indicates that no\n+   --  default was set by the binder, and that the default should be the\n+   --  initial value of System.Secondary_Stack.Default_Secondary_Stack_Size.\n+\n    Display_Compilation_Progress : Boolean := False;\n    --  GNATMAKE\n    --  Set True (-d switch) to display information on progress while compiling\n@@ -767,6 +779,11 @@ package Opt is\n    --  GNATMAKE, GNATLINK\n    --  Set to False when no run_path_option should be issued to the linker\n \n+   Sec_Stack_Used : Boolean := False;\n+   --  GNAT, GBATBIND\n+   --  Set True if generated code uses the System.Secondary_Stack package.\n+   --  For the binder, set if any unit uses the secondary stack package.\n+\n    Shared_Libgnat : Boolean;\n    --  GNATBIND\n    --  Set to True if a shared libgnat is requested by using the -shared"}, {"sha": "ac2a5275d15b4fe4666da85ccf9ce756886ba813", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 46, "deletions": 34, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -24,15 +24,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Fmap;             use Fmap;\n+with Fmap;     use Fmap;\n+with Gnatvsn;  use Gnatvsn;\n with Hostparm;\n-with Namet;            use Namet;\n-with Opt;              use Opt;\n-with Output;           use Output;\n-with Sdefault;         use Sdefault;\n-with System.Case_Util; use System.Case_Util;\n+with Namet;    use Namet;\n+with Opt;      use Opt;\n+with Output;   use Output;\n+with Sdefault; use Sdefault;\n with Table;\n \n+with System.Case_Util; use System.Case_Util;\n+\n with Unchecked_Conversion;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n@@ -610,7 +612,6 @@ package body Osint is\n    function C_String_Length (S : Address) return Integer is\n       function Strlen (S : Address) return Integer;\n       pragma Import (C, Strlen, \"strlen\");\n-\n    begin\n       if S = Null_Address then\n          return 0;\n@@ -646,7 +647,6 @@ package body Osint is\n \n    function Concat (String_One : String; String_Two : String) return String is\n       Buffer : String (1 .. String_One'Length + String_Two'Length);\n-\n    begin\n       Buffer (1 .. String_One'Length) := String_One;\n       Buffer (String_One'Length + 1 .. Buffer'Last) := String_Two;\n@@ -814,13 +814,14 @@ package body Osint is\n    procedure Exit_Program (Exit_Code : Exit_Code_Type) is\n    begin\n       --  The program will exit with the following status:\n+\n       --    0 if the object file has been generated (with or without warnings)\n       --    1 if recompilation was not needed (smart recompilation)\n       --    2 if gnat1 has been killed by a signal (detected by GCC)\n       --    4 for a fatal error\n       --    5 if there were errors\n       --    6 if no code has been generated (spec)\n-      --\n+\n       --  Note that exit code 3 is not used and must not be used as this is\n       --  the code returned by a program aborted via C abort() routine on\n       --  Windows. GCC checks for that case and thinks that the child process\n@@ -1205,9 +1206,9 @@ package body Osint is\n             return null;\n          end if;\n \n-      else\n-         --  Search in the current directory\n+      --  Search in the current directory\n \n+      else\n          --  Get the current directory\n \n          declare\n@@ -1845,7 +1846,7 @@ package body Osint is\n    --  Start of processing for Read_Default_Search_Dirs\n \n    begin\n-      --  Construct a C compatible character string buffer.\n+      --  Construct a C compatible character string buffer\n \n       Buffer (1 .. Search_Dir_Prefix.all'Length)\n         := Search_Dir_Prefix.all;\n@@ -1940,7 +1941,7 @@ package body Osint is\n       --  indicates failure to open the specified source file.\n \n       Text : Text_Buffer_Ptr;\n-      --  Allocated text buffer.\n+      --  Allocated text buffer\n \n       Status : Boolean;\n       --  For the calls to Close\n@@ -2001,23 +2002,7 @@ package body Osint is\n             else\n                Current_Full_Obj_Stamp := Empty_Time_Stamp;\n                Close (Lib_FD, Status);\n-               --  No need to check the status, we return null anyway\n \n-               return null;\n-            end if;\n-         end if;\n-\n-         --  Object file exists, compare object and ALI time stamps\n-\n-         if Current_Full_Lib_Stamp > Current_Full_Obj_Stamp then\n-            if Fatal_Err then\n-               Get_Name_String (Current_Full_Obj_Name);\n-               Close (Lib_FD, Status);\n-               --  No need to check the status, we fail anyway\n-               Fail (\"Bad time stamp: \", Name_Buffer (1 .. Name_Len));\n-            else\n-               Current_Full_Obj_Stamp := Empty_Time_Stamp;\n-               Close (Lib_FD, Status);\n                --  No need to check the status, we return null anyway\n \n                return null;\n@@ -2183,6 +2168,7 @@ package body Osint is\n       --  Read is complete, get time stamp and close file and we are done\n \n       Close (Source_File_FD, Status);\n+\n       --  The status should never be False. But, if it is, what can we do?\n       --  So, we don't test it.\n \n@@ -2206,6 +2192,7 @@ package body Osint is\n          Std_Prefix := Executable_Prefix;\n \n          if Std_Prefix.all /= \"\" then\n+\n             --  Remove trailing directory separator when calling set_std_prefix\n \n             set_std_prefix (Std_Prefix.all, Std_Prefix'Length - 1);\n@@ -2240,6 +2227,31 @@ package body Osint is\n       Running_Program := P;\n    end Set_Program;\n \n+   ----------------\n+   -- Shared_Lib --\n+   ----------------\n+\n+   function Shared_Lib (Name : String) return String is\n+      Library : String (1 .. Name'Length + Library_Version'Length + 3);\n+      --  3 = 2 for \"-l\" + 1 for \"-\" before lib version\n+\n+   begin\n+      Library (1 .. 2)                          := \"-l\";\n+      Library (3 .. 2 + Name'Length)            := Name;\n+      Library (3 + Name'Length)                 := '-';\n+      Library (4 + Name'Length .. Library'Last) := Library_Version;\n+\n+      if Hostparm.OpenVMS then\n+         for K in Library'First + 2 .. Library'Last loop\n+            if Library (K) = '.' or else Library (K) = '-' then\n+               Library (K) := '_';\n+            end if;\n+         end loop;\n+      end if;\n+\n+      return Library;\n+   end Shared_Lib;\n+\n    ----------------------\n    -- Smart_File_Stamp --\n    ----------------------\n@@ -2317,9 +2329,11 @@ package body Osint is\n       Get_Name_String (Name);\n \n       for J in reverse 1 .. Name_Len - 1 loop\n+\n          --  If we find the last directory separator\n \n          if Is_Directory_Separator (Name_Buffer (J)) then\n+\n             --  Return the part of Name that follows this last directory\n             --  separator.\n \n@@ -2344,8 +2358,7 @@ package body Osint is\n \n       for J in reverse 2 .. Name_Len loop\n \n-         --  If we found the last '.', return the part of Name that precedes\n-         --  this '.'.\n+         --  If we found the last '.', return part of Name that precedes it\n \n          if Name_Buffer (J) = '.' then\n             Name_Len := J - 1;\n@@ -2595,7 +2608,7 @@ package body Osint is\n       Path_Len  : Integer) return String_Access\n    is\n       subtype Path_String is String (1 .. Path_Len);\n-      type    Path_String_Access is access Path_String;\n+      type Path_String_Access is access Path_String;\n \n       function Address_To_Access is new\n         Unchecked_Conversion (Source => Address,\n@@ -2604,7 +2617,7 @@ package body Osint is\n       Path_Access : constant Path_String_Access :=\n                       Address_To_Access (Path_Addr);\n \n-      Return_Val  : String_Access;\n+      Return_Val : String_Access;\n \n    begin\n       Return_Val := new String (1 .. Path_Len);\n@@ -2669,7 +2682,6 @@ package body Osint is\n                       Name_Buffer (1 .. Name_Len);\n \n    begin\n-\n       Find_Program_Name;\n \n       --  Convert the name to lower case so error messages are the same on"}, {"sha": "a1c37be828e5fb24d22af605259e43b61306457e", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -213,6 +213,12 @@ package Osint is\n    --  If the above computation fails, return Path.\n    --  This function assumes that Prefix'First = Path'First\n \n+   function Shared_Lib (Name : String) return String;\n+   --  Returns the runtime shared library in the form -l<name>-<version> where\n+   --  version is the GNAT runtime library option for the platform. For example\n+   --  this routine called with Name set to \"gnat\" will return \"-lgnat-5.02\"\n+   --  on UNIX and Windows and -lgnat_5_02 on VMS.\n+\n    -------------------------\n    -- Search Dir Routines --\n    -------------------------"}, {"sha": "3f3250243a205ea1a1f04415035f5b269dd78a07", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -125,8 +125,7 @@ package body Prj.Nmsc is\n \n    function Is_Illegal_Suffix\n      (Suffix                          : String;\n-      Dot_Replacement_Is_A_Single_Dot : Boolean)\n-      return                            Boolean;\n+      Dot_Replacement_Is_A_Single_Dot : Boolean) return Boolean;\n    --  Returns True if the string Suffix cannot be used as\n    --  a spec suffix, a body suffix or a separate suffix.\n \n@@ -154,15 +153,13 @@ package body Prj.Nmsc is\n \n    function Path_Name_Of\n      (File_Name : Name_Id;\n-      Directory : Name_Id)\n-      return      String;\n+      Directory : Name_Id) return String;\n    --  Returns the path name of a (non project) file.\n    --  Returns an empty string if file cannot be found.\n \n    function Project_Extends\n      (Extending : Project_Id;\n-      Extended  : Project_Id)\n-      return      Boolean;\n+      Extended  : Project_Id) return Boolean;\n    --  Returns True if Extending is extending directly or indirectly Extended.\n \n    procedure Check_Naming_Scheme\n@@ -2522,8 +2519,7 @@ package body Prj.Nmsc is\n \n    function Is_Illegal_Suffix\n      (Suffix                          : String;\n-      Dot_Replacement_Is_A_Single_Dot : Boolean)\n-      return                            Boolean\n+      Dot_Replacement_Is_A_Single_Dot : Boolean) return Boolean\n    is\n    begin\n       if Suffix'Length = 0 or else Index (Suffix, \".\") = 0 then\n@@ -2574,14 +2570,16 @@ package body Prj.Nmsc is\n       ----------------------\n \n       procedure Find_Source_Dirs (From : Name_Id; Location : Source_Ptr) is\n-         Directory    : constant String := Get_Name_String (From);\n+         Directory : constant String := Get_Name_String (From);\n+         Element   : String_Element;\n+\n          Canonical_Directory_Id : Name_Id;\n-         Element      : String_Element;\n+         pragma Unreferenced (Canonical_Directory_Id);\n+         --  Is this in fact being used for anything useful ???\n \n          procedure Recursive_Find_Dirs (Path : Name_Id);\n-         --  Find all the subdirectories (recursively) of Path\n-         --  and add them to the list of source directories\n-         --  of the project.\n+         --  Find all the subdirectories (recursively) of Path and add them\n+         --  to the list of source directories of the project.\n \n          -------------------------\n          -- Recursive_Find_Dirs --\n@@ -2602,12 +2600,14 @@ package body Prj.Nmsc is\n             Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n \n             declare\n-               The_Path : String :=\n+               The_Path : constant String :=\n                             Normalize_Pathname\n                               (Name => Name_Buffer (1 .. Name_Len)) &\n-                            Directory_Separator;\n+                               Directory_Separator;\n+\n                The_Path_Last : constant Natural :=\n                                  Compute_Directory_Last (The_Path);\n+\n             begin\n                Name_Len := The_Path_Last - The_Path'First + 1;\n                Name_Buffer (1 .. Name_Len) :=\n@@ -2738,8 +2738,13 @@ package body Prj.Nmsc is\n \n          Get_Name_String (From);\n          Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n+\n          --  Directory    := Name_Buffer (1 .. Name_Len);\n+         --  Why is above line commented out ???\n+\n          Canonical_Directory_Id := Name_Find;\n+         --  What is purpose of above assignment ???\n+         --  Are we sure it is being used ???\n \n          if Current_Verbosity = High then\n             Write_Str (Directory);\n@@ -3609,8 +3614,7 @@ package body Prj.Nmsc is\n \n    function Path_Name_Of\n      (File_Name : Name_Id;\n-      Directory : Name_Id)\n-      return      String\n+      Directory : Name_Id) return String\n    is\n       Result : String_Access;\n       The_Directory : constant String := Get_Name_String (Directory);\n@@ -3635,8 +3639,7 @@ package body Prj.Nmsc is\n \n    function Project_Extends\n      (Extending : Project_Id;\n-      Extended  : Project_Id)\n-      return      Boolean\n+      Extended  : Project_Id) return Boolean\n    is\n       Current : Project_Id := Extending;\n    begin"}, {"sha": "965939db193553718af3683786a84d90c8f5932b", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -254,7 +254,8 @@ package body Prj.PP is\n       -------------------------------\n \n       procedure Write_End_Of_Line_Comment (Node : Project_Node_Id) is\n-         Value : Name_Id := End_Of_Line_Comment (Node);\n+         Value : constant Name_Id := End_Of_Line_Comment (Node);\n+\n       begin\n          if Value /= No_Name then\n             Write_String (\" --\");"}, {"sha": "15f893a7ac8359779f202ef7a6cd0520882a1dac", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -92,7 +92,7 @@ package body Prj.Util is\n                         Attribute_Or_Array_Name => Name_Executable,\n                         In_Package              => Builder_Package);\n \n-      Executable_Suffix : Variable_Value :=\n+      Executable_Suffix : constant Variable_Value :=\n                             Prj.Util.Value_Of\n                               (Name                    => Main,\n                                Attribute_Or_Array_Name =>\n@@ -118,7 +118,8 @@ package body Prj.Util is\n             --  the specification suffix.\n \n             declare\n-               Name : String (1 .. Name_Len) := Name_Buffer (1 .. Name_Len);\n+               Name : constant String (1 .. Name_Len) :=\n+                        Name_Buffer (1 .. Name_Len);\n                Last : Positive := Name_Len;\n \n                Naming : constant Naming_Data :="}, {"sha": "c0249de78757fe34dce517775aea3b488a3b3235", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -441,6 +441,7 @@ package body Rtsfind is\n \n       if S /= \"not found\"\n         or else not Configurable_Run_Time_Mode\n+        or else All_Errors_Mode\n       then\n          M (1 .. 6) := \"\\file \";\n          P := 6;\n@@ -541,6 +542,12 @@ package body Rtsfind is\n          return;\n       end if;\n \n+      --  Note if secondary stack is used\n+\n+      if U_Id = System_Secondary_Stack then\n+         Opt.Sec_Stack_Used := True;\n+      end if;\n+\n       --  Otherwise we need to load the unit, First build unit name\n       --  from the enumeration literal name in type RTU_Id.\n "}, {"sha": "f62bfc551be10a9ec0a57df88473f62994d68715", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -346,8 +346,7 @@ package body System.Interrupts is\n    ---------------------\n \n    function Current_Handler\n-     (Interrupt : Interrupt_ID)\n-      return      Parameterless_Handler\n+     (Interrupt : Interrupt_ID) return Parameterless_Handler\n    is\n    begin\n       if Is_Reserved (Interrupt) then\n@@ -455,21 +454,17 @@ package body System.Interrupts is\n    --  Need comments as to why these always return True\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Dynamic_Interrupt_Protection)\n-      return   Boolean\n+     (Object : access Dynamic_Interrupt_Protection) return Boolean\n    is\n       pragma Unreferenced (Object);\n-\n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Static_Interrupt_Protection)\n-      return   Boolean\n+     (Object : access Static_Interrupt_Protection) return Boolean\n    is\n       pragma Unreferenced (Object);\n-\n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n@@ -686,8 +681,7 @@ package body System.Interrupts is\n    ------------------\n \n    function Unblocked_By\n-     (Interrupt : Interrupt_ID)\n-      return      System.Tasking.Task_ID\n+     (Interrupt : Interrupt_ID) return System.Tasking.Task_ID\n    is\n    begin\n       if Is_Reserved (Interrupt) then"}, {"sha": "37878cf0e876e307238b2d02aa8d7f291aeb9df2", "filename": "gcc/ada/s-poosiz.adb", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-poosiz.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-poosiz.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with System.Storage_Elements;\n+with System.Soft_Links;\n \n with Unchecked_Conversion;\n \n@@ -40,6 +41,16 @@ package body System.Pool_Size is\n    package SSE renames System.Storage_Elements;\n    use type SSE.Storage_Offset;\n \n+   --  Even though these storage pools are typically only used\n+   --  by a single task, if multiple tasks are declared at the\n+   --  same or a more nested scope as the storage pool, there\n+   --  still may be concurrent access. The current implementation\n+   --  of Stack_Bounded_Pool always uses a global lock for protecting\n+   --  access. This should eventually be replaced by an atomic\n+   --  linked list implementation for efficiency reasons.\n+\n+   package SSL renames System.Soft_Links;\n+\n    type Storage_Count_Access is access SSE.Storage_Count;\n    function To_Storage_Count_Access is\n      new Unchecked_Conversion (Address, Storage_Count_Access);\n@@ -82,6 +93,8 @@ package body System.Pool_Size is\n       Alignment    : SSE.Storage_Count)\n    is\n    begin\n+      SSL.Lock_Task.all;\n+\n       if Pool.Elmt_Size = 0 then\n          Vsize.Allocate (Pool, Address, Storage_Size, Alignment);\n \n@@ -98,6 +111,13 @@ package body System.Pool_Size is\n       else\n          raise Storage_Error;\n       end if;\n+\n+      SSL.Unlock_Task.all;\n+\n+   exception\n+      when others =>\n+         SSL.Unlock_Task.all;\n+         raise;\n    end Allocate;\n \n    ----------------\n@@ -111,13 +131,21 @@ package body System.Pool_Size is\n       Alignment    : SSE.Storage_Count)\n    is\n    begin\n+      SSL.Lock_Task.all;\n+\n       if Pool.Elmt_Size = 0 then\n          Vsize.Deallocate (Pool, Address, Storage_Size, Alignment);\n \n       else\n          To_Storage_Count_Access (Address).all := Pool.First_Free;\n          Pool.First_Free := Address - Pool.The_Pool'Address + 1;\n       end if;\n+\n+      SSL.Unlock_Task.all;\n+   exception\n+      when others =>\n+         SSL.Unlock_Task.all;\n+         raise;\n    end Deallocate;\n \n    ----------------"}, {"sha": "449d986d51116b7f4a9041785fa7f69e32a30747", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 298, "deletions": 158, "changes": 456, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,27 @@ package body System.Secondary_Stack is\n \n    SS_Ratio_Dynamic : constant Boolean :=\n                         Parameters.Sec_Stack_Ratio = Parameters.Dynamic;\n+   --  There are two entirely different implementations of the secondary\n+   --  stack mechanism in this unit, and this Boolean is used to select\n+   --  between them (at compile time, so the generated code will contain\n+   --  only the code for the desired variant). If SS_Ratio_Dynamic is\n+   --  True, then the secondary stack is dynamically allocated from the\n+   --  heap in a linked list of chunks. If SS_Ration_Dynamic is False,\n+   --  then the secondary stack is allocated statically by grabbing a\n+   --  section of the primary stack and using it for this purpose.\n+\n+   type Memory is array (Mark_Id range <>) of SSE.Storage_Element;\n+   for Memory'Alignment use Standard'Maximum_Alignment;\n+   --  This is the type used for actual allocation of secondary stack\n+   --  areas. We require maximum alignment for all such allocations.\n+\n+   ---------------------------------------------------------------\n+   -- Data Structures for Dynamically Allocated Secondary Stack --\n+   ---------------------------------------------------------------\n+\n+   --  The following is a diagram of the data structures used for the\n+   --  case of a dynamically allocated secondary stack, where the stack\n+   --  is allocated as a linked list of chunks allocated from the heap.\n \n    --                                      +------------------+\n    --                                      |       Next       |\n@@ -76,8 +97,6 @@ package body System.Secondary_Stack is\n    --    | Default_Size    |               |       Prev       |\n    --    +-----------------+               +------------------+\n    --\n-   --\n-   type Memory is array (Mark_Id range <>) of SSE.Storage_Element;\n \n    type Chunk_Id (First, Last : Mark_Id);\n    type Chunk_Ptr is access all Chunk_Id;\n@@ -93,232 +112,344 @@ package body System.Secondary_Stack is\n       Current_Chunk : Chunk_Ptr;\n    end record;\n \n+   type Stack_Ptr is access Stack_Id;\n+   --  Pointer to record used to represent a dynamically allocated secondary\n+   --  stack descriptor for a secondary stack chunk.\n+\n+   procedure Free is new Unchecked_Deallocation (Chunk_Id, Chunk_Ptr);\n+   --  Free a dynamically allocated chunk\n+\n+   function To_Stack_Ptr is new\n+     Unchecked_Conversion (Address, Stack_Ptr);\n+   function To_Addr is new\n+     Unchecked_Conversion (Stack_Ptr, Address);\n+   --  Convert to and from address stored in task data structures\n+\n+   --------------------------------------------------------------\n+   -- Data Structures for Statically Allocated Secondary Stack --\n+   --------------------------------------------------------------\n+\n+   --  For the static case, the secondary stack is a single contiguous\n+   --  chunk of storage, carved out of the primary stack, and represented\n+   --  by the following data strcuture\n+\n    type Fixed_Stack_Id is record\n-      Top  : Mark_Id;\n+      Top : Mark_Id;\n+      --  Index of next available location in Mem. This is initialized to\n+      --  0, and then incremented on Allocate, and Decremented on Release.\n+\n       Last : Mark_Id;\n-      Mem  : Memory (1 .. Mark_Id'Last / 2 - 1);\n-      --  This should really be 1 .. Mark_Id'Last, but there is a bug in gigi\n-      --  with this type, introduced Sep 2001, that causes gigi to reject this\n-      --  type because its size in bytes overflows ???\n+      --  Length of usable Mem array, which is thus the index past the\n+      --  last available location in Mem. Mem (Last-1) can be used. This\n+      --  is used to check that the stack does not overflow.\n+\n+      Max : Mark_Id;\n+      --  Maximum value of Top. Initialized to 0, and then may be incremented\n+      --  on Allocate, but is never Decremented. The last used location will\n+      --  be Mem (Max - 1), so Max is the maximum count of used stack space.\n+\n+      Mem : Memory (0 .. 0);\n+      --  This is the area that is actually used for the secondary stack.\n+      --  Note that the upper bound is a dummy value properly defined by\n+      --  the value of Last. We never actually allocate objects of type\n+      --  Fixed_Stack_Id, so the bounds declared here do not matter.\n    end record;\n \n-   type Stack_Ptr is access Stack_Id;\n-   type Fixed_Stack_Ptr is access Fixed_Stack_Id;\n+   Dummy_Fixed_Stack : Fixed_Stack_Id;\n+   pragma Warnings (Off, Dummy_Fixed_Stack);\n+   --  Well it is not quite true that we never allocate an object of the\n+   --  type. This dummy object is allocated for the purpose of getting the\n+   --  offset of the Mem field via the 'Position attribute (such a nuisance\n+   --  that we cannot apply this to a field of a type!)\n \n-   function From_Addr is new Unchecked_Conversion (Address, Stack_Ptr);\n-   function To_Addr   is new Unchecked_Conversion (Stack_Ptr, System.Address);\n-   function To_Fixed  is new Unchecked_Conversion (Stack_Ptr, Fixed_Stack_Ptr);\n+   type Fixed_Stack_Ptr is access Fixed_Stack_Id;\n+   --  Pointer to record used to describe statically allocated sec stack\n \n-   procedure Free is new Unchecked_Deallocation (Chunk_Id, Chunk_Ptr);\n+   function To_Fixed_Stack_Ptr is new\n+     Unchecked_Conversion (Address, Fixed_Stack_Ptr);\n+   --  Convert from address stored in task data structures\n \n    --------------\n    -- Allocate --\n    --------------\n \n    procedure SS_Allocate\n-     (Address      : out System.Address;\n+     (Addr         : out Address;\n       Storage_Size : SSE.Storage_Count)\n    is\n-      Stack        : constant Stack_Ptr :=\n-                       From_Addr (SSL.Get_Sec_Stack_Addr.all);\n-      Fixed_Stack  : Fixed_Stack_Ptr;\n-      Chunk        : Chunk_Ptr;\n       Max_Align    : constant Mark_Id := Mark_Id (Standard'Maximum_Alignment);\n       Max_Size     : constant Mark_Id :=\n                        ((Mark_Id (Storage_Size) + Max_Align - 1) / Max_Align)\n                          * Max_Align;\n \n-      To_Be_Released_Chunk : Chunk_Ptr;\n-\n    begin\n-      --  If the secondary stack is fixed in the primary stack, then the\n-      --  handling becomes simple\n+      --  Case of fixed allocation secondary stack\n \n       if not SS_Ratio_Dynamic then\n-         Fixed_Stack := To_Fixed (Stack);\n+         declare\n+            Fixed_Stack : constant Fixed_Stack_Ptr :=\n+                            To_Fixed_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all);\n \n-         if Fixed_Stack.Top + Max_Size > Fixed_Stack.Last then\n-            raise Storage_Error;\n-         end if;\n+         begin\n+            --  Check if max stack usage is increasing\n \n-         Address := Fixed_Stack.Mem (Fixed_Stack.Top)'Address;\n-         Fixed_Stack.Top := Fixed_Stack.Top + Mark_Id (Max_Size);\n-         return;\n-      end if;\n+            if Fixed_Stack.Top + Max_Size > Fixed_Stack.Max then\n+\n+               --  If so, check if max size is exceeded\n+\n+               if Fixed_Stack.Top + Max_Size > Fixed_Stack.Last then\n+                  raise Storage_Error;\n+               end if;\n+\n+               --  Record new max usage\n+\n+               Fixed_Stack.Max := Fixed_Stack.Top + Max_Size;\n+            end if;\n+\n+            --  Set resulting address and update top of stack pointer\n \n-      Chunk := Stack.Current_Chunk;\n+            Addr := Fixed_Stack.Mem (Fixed_Stack.Top)'Address;\n+            Fixed_Stack.Top := Fixed_Stack.Top + Max_Size;\n+         end;\n \n-      --  The Current_Chunk may not be the good one if a lot of release\n-      --  operations have taken place. So go down the stack if necessary\n+      --  Case of dynamically allocated secondary stack\n \n-      while  Chunk.First > Stack.Top loop\n-         Chunk := Chunk.Prev;\n-      end loop;\n+      else\n+         declare\n+            Stack : constant Stack_Ptr :=\n+                      To_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all);\n+            Chunk : Chunk_Ptr;\n \n-      --  Find out if the available memory in the current chunk is sufficient.\n-      --  if not, go to the next one and eventally create the necessary room\n+            To_Be_Released_Chunk : Chunk_Ptr;\n \n-      while Chunk.Last - Stack.Top + 1 < Max_Size loop\n-         if Chunk.Next /= null then\n+         begin\n+            Chunk := Stack.Current_Chunk;\n \n-            --  Release unused non-first empty chunk\n+            --  The Current_Chunk may not be the good one if a lot of release\n+            --  operations have taken place. So go down the stack if necessary\n \n-            if Chunk.Prev /= null and then Chunk.First = Stack.Top then\n-               To_Be_Released_Chunk := Chunk;\n+            while Chunk.First > Stack.Top loop\n                Chunk := Chunk.Prev;\n-               Chunk.Next := To_Be_Released_Chunk.Next;\n-               To_Be_Released_Chunk.Next.Prev := Chunk;\n-               Free (To_Be_Released_Chunk);\n-            end if;\n+            end loop;\n+\n+            --  Find out if the available memory in the current chunk is\n+            --  sufficient, if not, go to the next one and eventally create\n+            --  the necessary room.\n+\n+            while Chunk.Last - Stack.Top + 1 < Max_Size loop\n+               if Chunk.Next /= null then\n+\n+                  --  Release unused non-first empty chunk\n+\n+                  if Chunk.Prev /= null and then Chunk.First = Stack.Top then\n+                     To_Be_Released_Chunk := Chunk;\n+                     Chunk := Chunk.Prev;\n+                     Chunk.Next := To_Be_Released_Chunk.Next;\n+                     To_Be_Released_Chunk.Next.Prev := Chunk;\n+                     Free (To_Be_Released_Chunk);\n+                  end if;\n \n-         --  Create new chunk of the default size unless it is not sufficient\n+                  --  Create new chunk of default size unless it is not\n+                  --  sufficient to satisfy the current request.\n \n-         elsif SSE.Storage_Count (Max_Size) <= Stack.Default_Size then\n-            Chunk.Next := new Chunk_Id (\n-              First => Chunk.Last + 1,\n-              Last  => Chunk.Last + Mark_Id (Stack.Default_Size));\n+               elsif SSE.Storage_Count (Max_Size) <= Stack.Default_Size then\n+                  Chunk.Next :=\n+                    new Chunk_Id\n+                      (First => Chunk.Last + 1,\n+                       Last  => Chunk.Last + Mark_Id (Stack.Default_Size));\n \n-            Chunk.Next.Prev := Chunk;\n+                  Chunk.Next.Prev := Chunk;\n \n-         else\n-            Chunk.Next := new Chunk_Id (\n-              First => Chunk.Last + 1,\n-              Last  => Chunk.Last + Max_Size);\n+                  --  Otherwise create new chunk of requested size\n \n-            Chunk.Next.Prev := Chunk;\n-         end if;\n+               else\n+                  Chunk.Next :=\n+                    new Chunk_Id\n+                      (First => Chunk.Last + 1,\n+                       Last  => Chunk.Last + Max_Size);\n \n-         Chunk     := Chunk.Next;\n-         Stack.Top := Chunk.First;\n-      end loop;\n+                  Chunk.Next.Prev := Chunk;\n+               end if;\n \n-      --  Resulting address is the address pointed by Stack.Top\n+               Chunk     := Chunk.Next;\n+               Stack.Top := Chunk.First;\n+            end loop;\n \n-      Address      := Chunk.Mem (Stack.Top)'Address;\n-      Stack.Top    := Stack.Top + Max_Size;\n-      Stack.Current_Chunk := Chunk;\n+            --  Resulting address is the address pointed by Stack.Top\n+\n+            Addr                := Chunk.Mem (Stack.Top)'Address;\n+            Stack.Top           := Stack.Top + Max_Size;\n+            Stack.Current_Chunk := Chunk;\n+         end;\n+      end if;\n    end SS_Allocate;\n \n    -------------\n    -- SS_Free --\n    -------------\n \n-   procedure SS_Free (Stk : in out System.Address) is\n-      Stack : Stack_Ptr;\n-      Chunk : Chunk_Ptr;\n-\n-      procedure Free is new Unchecked_Deallocation (Stack_Id, Stack_Ptr);\n-\n+   procedure SS_Free (Stk : in out Address) is\n    begin\n+      --  Case of statically allocated secondary stack, nothing to free\n+\n       if not SS_Ratio_Dynamic then\n          return;\n-      end if;\n \n-      Stack := From_Addr (Stk);\n-      Chunk := Stack.Current_Chunk;\n+      --  Case of dynamically allocated secondary stack\n+\n+      else\n+         declare\n+            Stack : Stack_Ptr := To_Stack_Ptr (Stk);\n+            Chunk : Chunk_Ptr;\n \n-      while Chunk.Prev /= null loop\n-         Chunk := Chunk.Prev;\n-      end loop;\n+            procedure Free is new Unchecked_Deallocation (Stack_Id, Stack_Ptr);\n \n-      while Chunk.Next /= null loop\n-         Chunk := Chunk.Next;\n-         Free (Chunk.Prev);\n-      end loop;\n+         begin\n+            Chunk := Stack.Current_Chunk;\n+\n+            while Chunk.Prev /= null loop\n+               Chunk := Chunk.Prev;\n+            end loop;\n \n-      Free (Chunk);\n-      Free (Stack);\n-      Stk := Null_Address;\n+            while Chunk.Next /= null loop\n+               Chunk := Chunk.Next;\n+               Free (Chunk.Prev);\n+            end loop;\n+\n+            Free (Chunk);\n+            Free (Stack);\n+            Stk := Null_Address;\n+         end;\n+      end if;\n    end SS_Free;\n \n+   ----------------\n+   -- SS_Get_Max --\n+   ----------------\n+\n+   function SS_Get_Max return Long_Long_Integer is\n+   begin\n+      if SS_Ratio_Dynamic then\n+         return -1;\n+      else\n+         declare\n+            Fixed_Stack : constant Fixed_Stack_Ptr :=\n+                            To_Fixed_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all);\n+         begin\n+            return Long_Long_Integer (Fixed_Stack.Max);\n+         end;\n+      end if;\n+   end SS_Get_Max;\n+\n    -------------\n    -- SS_Info --\n    -------------\n \n    procedure SS_Info is\n-      Stack       : constant Stack_Ptr :=\n-                      From_Addr (SSL.Get_Sec_Stack_Addr.all);\n-      Fixed_Stack : Fixed_Stack_Ptr;\n-      Nb_Chunks   : Integer            := 1;\n-      Chunk       : Chunk_Ptr          := Stack.Current_Chunk;\n-\n    begin\n       Put_Line (\"Secondary Stack information:\");\n \n+      --  Case of fixed secondary stack\n+\n       if not SS_Ratio_Dynamic then\n-         Fixed_Stack := To_Fixed (Stack);\n-         Put_Line (\n-           \"  Total size              : \"\n-           & Mark_Id'Image (Fixed_Stack.Last)\n-           & \" bytes\");\n-         Put_Line (\n-           \"  Current allocated space : \"\n-           & Mark_Id'Image (Fixed_Stack.Top - 1)\n-           & \" bytes\");\n-         return;\n-      end if;\n+         declare\n+            Fixed_Stack : constant Fixed_Stack_Ptr :=\n+                            To_Fixed_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all);\n+\n+         begin\n+            Put_Line (\n+                      \"  Total size              : \"\n+                      & Mark_Id'Image (Fixed_Stack.Last)\n+                      & \" bytes\");\n+\n+            Put_Line (\n+                      \"  Current allocated space : \"\n+                      & Mark_Id'Image (Fixed_Stack.Top - 1)\n+                      & \" bytes\");\n+         end;\n+\n+      --  Case of dynamically allocated secondary stack\n+\n+      else\n+         declare\n+            Stack     : constant Stack_Ptr :=\n+                          To_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all);\n+            Nb_Chunks : Integer   := 1;\n+            Chunk     : Chunk_Ptr := Stack.Current_Chunk;\n+\n+         begin\n+            while Chunk.Prev /= null loop\n+               Chunk := Chunk.Prev;\n+            end loop;\n \n-      while Chunk.Prev /= null loop\n-         Chunk := Chunk.Prev;\n-      end loop;\n-\n-      while Chunk.Next /= null loop\n-         Nb_Chunks := Nb_Chunks + 1;\n-         Chunk := Chunk.Next;\n-      end loop;\n-\n-      --  Current Chunk information\n-\n-      Put_Line (\n-        \"  Total size              : \"\n-        & Mark_Id'Image (Chunk.Last)\n-        & \" bytes\");\n-      Put_Line (\n-        \"  Current allocated space : \"\n-        & Mark_Id'Image (Stack.Top - 1)\n-        & \" bytes\");\n-\n-      Put_Line (\n-        \"  Number of Chunks       : \"\n-        & Integer'Image (Nb_Chunks));\n-\n-      Put_Line (\n-        \"  Default size of Chunks : \"\n-        & SSE.Storage_Count'Image (Stack.Default_Size));\n+            while Chunk.Next /= null loop\n+               Nb_Chunks := Nb_Chunks + 1;\n+               Chunk := Chunk.Next;\n+            end loop;\n+\n+            --  Current Chunk information\n+\n+            Put_Line (\n+                      \"  Total size              : \"\n+                      & Mark_Id'Image (Chunk.Last)\n+                      & \" bytes\");\n+\n+            Put_Line (\n+                      \"  Current allocated space : \"\n+                      & Mark_Id'Image (Stack.Top - 1)\n+                      & \" bytes\");\n+\n+            Put_Line (\n+                      \"  Number of Chunks       : \"\n+                      & Integer'Image (Nb_Chunks));\n+\n+            Put_Line (\n+                      \"  Default size of Chunks : \"\n+                      & SSE.Storage_Count'Image (Stack.Default_Size));\n+         end;\n+      end if;\n    end SS_Info;\n \n    -------------\n    -- SS_Init --\n    -------------\n \n    procedure SS_Init\n-     (Stk  : in out System.Address;\n+     (Stk  : in out Address;\n       Size : Natural := Default_Secondary_Stack_Size)\n    is\n-      Stack : Stack_Ptr;\n-      Fixed_Stack : Fixed_Stack_Ptr;\n-\n    begin\n-      if not SS_Ratio_Dynamic then\n-         Fixed_Stack      := To_Fixed (From_Addr (Stk));\n-         Fixed_Stack.Top  := Fixed_Stack.Mem'First;\n-\n-         if Size < 2 * Mark_Id'Max_Size_In_Storage_Elements then\n-            Fixed_Stack.Last := 0;\n-         else\n-            Fixed_Stack.Last := Mark_Id (Size) -\n-              2 * Mark_Id'Max_Size_In_Storage_Elements;\n-         end if;\n+      --  Case of fixed size secondary stack\n \n-         return;\n+      if not SS_Ratio_Dynamic then\n+         declare\n+            Fixed_Stack : Fixed_Stack_Ptr := To_Fixed_Stack_Ptr (Stk);\n+\n+         begin\n+            Fixed_Stack.Top  := 0;\n+            Fixed_Stack.Max  := 0;\n+\n+            if Size < Dummy_Fixed_Stack.Mem'Position then\n+               Fixed_Stack.Last := 0;\n+            else\n+               Fixed_Stack.Last :=\n+                 Mark_Id (Size) - Dummy_Fixed_Stack.Mem'Position;\n+            end if;\n+         end;\n+\n+      --  Case of dynamically allocated secondary stack\n+\n+      else\n+         declare\n+            Stack : Stack_Ptr;\n+         begin\n+            Stack               := new Stack_Id;\n+            Stack.Current_Chunk := new Chunk_Id (1, Mark_Id (Size));\n+            Stack.Top           := 1;\n+            Stack.Default_Size  := SSE.Storage_Count (Size);\n+            Stk := To_Addr (Stack);\n+         end;\n       end if;\n-\n-      Stack               := new Stack_Id;\n-      Stack.Current_Chunk := new Chunk_Id (1, Mark_Id (Size));\n-      Stack.Top           := 1;\n-      Stack.Default_Size  := SSE.Storage_Count (Size);\n-\n-      Stk := To_Addr (Stack);\n    end SS_Init;\n \n    -------------\n@@ -327,7 +458,11 @@ package body System.Secondary_Stack is\n \n    function SS_Mark return Mark_Id is\n    begin\n-      return From_Addr (SSL.Get_Sec_Stack_Addr.all).Top;\n+      if SS_Ratio_Dynamic then\n+         return To_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all).Top;\n+      else\n+         return To_Fixed_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all).Top;\n+      end if;\n    end SS_Mark;\n \n    ----------------\n@@ -336,30 +471,35 @@ package body System.Secondary_Stack is\n \n    procedure SS_Release (M : Mark_Id) is\n    begin\n-      From_Addr (SSL.Get_Sec_Stack_Addr.all).Top := M;\n+      if SS_Ratio_Dynamic then\n+         To_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all).Top := M;\n+      else\n+         To_Fixed_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all).Top := M;\n+      end if;\n    end SS_Release;\n \n    -------------------------\n    -- Package Elaboration --\n    -------------------------\n \n-   --  Allocate a secondary stack for the main program to use.\n+   --  Allocate a secondary stack for the main program to use\n+\n    --  We make sure that the stack has maximum alignment. Some systems require\n    --  this (e.g. Sun), and in any case it is a good idea for efficiency.\n \n    Stack : aliased Stack_Id;\n    for Stack'Alignment use Standard'Maximum_Alignment;\n \n-   Chunk : aliased Chunk_Id (1, Default_Secondary_Stack_Size);\n+   Chunk : aliased Chunk_Id (1, Mark_Id (Default_Secondary_Stack_Size));\n    for Chunk'Alignment use Standard'Maximum_Alignment;\n \n-   Chunk_Address : System.Address;\n+   Chunk_Address : Address;\n \n begin\n    if SS_Ratio_Dynamic then\n       Stack.Top           := 1;\n       Stack.Current_Chunk := Chunk'Access;\n-      Stack.Default_Size  := Default_Secondary_Stack_Size;\n+      Stack.Default_Size  := SSE.Storage_Offset (Default_Secondary_Stack_Size);\n       System.Soft_Links.Set_Sec_Stack_Addr_NT (Stack'Address);\n \n    else"}, {"sha": "b539a3b8670fcb8ca59d8b1fd9621f039cd04692", "filename": "gcc/ada/s-secsta.ads", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-secsta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-secsta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,11 +37,11 @@ package System.Secondary_Stack is\n \n    package SSE renames System.Storage_Elements;\n \n-   Default_Secondary_Stack_Size : constant := 10 * 1024;\n-   --  Default size of a secondary stack\n+   Default_Secondary_Stack_Size : Natural := 10 * 1024;\n+   --  Default size of a secondary stack. May be modified by binder -D switch\n \n    procedure SS_Init\n-     (Stk  : in out System.Address;\n+     (Stk  : in out Address;\n       Size : Natural := Default_Secondary_Stack_Size);\n    --  Initialize the secondary stack with a main stack of the given Size.\n    --\n@@ -62,15 +62,15 @@ package System.Secondary_Stack is\n    --  stack using System.Soft_Links.Get_Sec_Stack_Addr.\n \n    procedure SS_Allocate\n-     (Address      : out System.Address;\n+     (Addr         : out Address;\n       Storage_Size : SSE.Storage_Count);\n    --  Allocate enough space for a 'Storage_Size' bytes object with Maximum\n-   --  alignment. The address of the allocated space is returned in 'Address'\n+   --  alignment. The address of the allocated space is returned in Addr.\n \n-   procedure SS_Free (Stk : in out System.Address);\n-   --  Release the memory allocated for the Secondary Stack. That is to say,\n-   --  all the allocated chuncks.\n-   --  Upon return, Stk will be set to System.Null_Address\n+   procedure SS_Free (Stk : in out Address);\n+   --  Release the memory allocated for the Secondary Stack. That is\n+   --  to say, all the allocated chunks. Upon return, Stk will be set\n+   --  to System.Null_Address.\n \n    type Mark_Id is private;\n    --  Type used to mark the stack.\n@@ -82,6 +82,14 @@ package System.Secondary_Stack is\n    --  Restore the state of the stack corresponding to the mark M. If an\n    --  additional chunk have been allocated, it will never be freed during a\n \n+   function SS_Get_Max return Long_Long_Integer;\n+   --  Return maximum used space in storage units for the current secondary\n+   --  stack. For a dynamically allocated secondary stack, the returned\n+   --  result is always -1. For a statically allocated secondary stack,\n+   --  the returned value shows the largest amount of space allocated so\n+   --  far during execution of the program to the current secondary stack,\n+   --  i.e. the secondary stack for the current task.\n+\n    generic\n       with procedure Put_Line (S : String);\n    procedure SS_Info;"}, {"sha": "e4a48afa296ef4d50f0484e70790dd681a34863c", "filename": "gcc/ada/s-stalib.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-stalib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-stalib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1995-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,7 @@ package body System.Standard_Library is\n \n    Inside_Elab_Final_Code : Integer := 0;\n    pragma Export (C, Inside_Elab_Final_Code, \"__gnat_inside_elab_final_code\");\n-   --  ???This variable is obsolete starting from 29/08 but cannot be removed\n+   --  ???This variable is obsolete since 2001-08-29 but cannot be removed\n    --  ???right away due to the bootstrap problems\n \n    --------------------------"}, {"sha": "cc431d609e03dae0222dbcd7fad966e578f582ba", "filename": "gcc/ada/s-tasdeb.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-tasdeb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fs-tasdeb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -211,9 +211,7 @@ package body System.Tasking.Debug is\n    -- Set_Trace --\n    ---------------\n \n-   procedure Set_Trace\n-     (Flag  : Character;\n-      Value : Boolean := True) is\n+   procedure Set_Trace (Flag  : Character; Value : Boolean := True) is\n    begin\n       Trace_On (Flag) := Value;\n    end Set_Trace;\n@@ -278,7 +276,8 @@ package body System.Tasking.Debug is\n      (Self_Id  : Task_ID;\n       Msg      : String;\n       Flag     : Character;\n-      Other_Id : Task_ID := null) is\n+      Other_Id : Task_ID := null)\n+   is\n    begin\n       if Trace_On (Flag) then\n          Put (To_Integer (Self_Id)'Img &\n@@ -294,11 +293,16 @@ package body System.Tasking.Debug is\n       end if;\n    end Trace;\n \n-   procedure Write (Fd : Integer; S : String; Count : Integer) is\n+   -----------\n+   -- Write --\n+   -----------\n \n-      Num : Integer;\n+   procedure Write (Fd : Integer; S : String; Count : Integer) is\n+      Discard : Integer;\n+      pragma Unreferenced (Discard);\n    begin\n-      Num := System.CRTL.write (Fd, S (S'First)'Address, Count);\n+      Discard := System.CRTL.write (Fd, S (S'First)'Address, Count);\n+      --  Is it really right to ignore write errors here ???\n    end Write;\n \n end System.Tasking.Debug;"}, {"sha": "3887181a225a837414177944bd96f66da2754f65", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -1424,7 +1424,7 @@ package body Sem_Attr is\n             ------------\n \n             function On_X86 return Boolean is\n-               T : String := Sdefault.Target_Name.all;\n+               T : constant String := Sdefault.Target_Name.all;\n \n             begin\n                --  There is no clean way to check this. That's not surprising,"}, {"sha": "775ef649120e129cf45920601701717772fa0bcb", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -2375,7 +2375,6 @@ package body Sem_Ch10 is\n \n    procedure Expand_Limited_With_Clause (Nam : Node_Id; N : Node_Id) is\n       Loc   : constant Source_Ptr := Sloc (Nam);\n-      P     : Entity_Id;\n       Unum  : Unit_Number_Type;\n       Withn : Node_Id;\n \n@@ -2398,8 +2397,6 @@ package body Sem_Ch10 is\n             Subunit    => False,\n             Error_Node => Nam);\n \n-         P := Cunit_Entity (Unum);\n-\n          if not Analyzed (Cunit (Unum)) then\n             Set_Library_Unit (Withn, Cunit (Unum));\n             Set_Corresponding_Spec\n@@ -2431,8 +2428,6 @@ package body Sem_Ch10 is\n               Subunit    => False,\n               Error_Node => Nam);\n \n-         P    := Cunit_Entity (Unum);\n-\n          if not Analyzed (Cunit (Unum)) then\n             Set_Library_Unit (Withn, Cunit (Unum));\n             Set_Corresponding_Spec\n@@ -3242,9 +3237,9 @@ package body Sem_Ch10 is\n    -------------------------------\n \n    procedure Install_Limited_Withed_Unit (N : Node_Id) is\n-      Unum             : Unit_Number_Type :=\n+      Unum             : constant Unit_Number_Type :=\n                            Get_Source_Unit (Library_Unit (N));\n-      P_Unit           : Entity_Id := Unit (Library_Unit (N));\n+      P_Unit           : constant Entity_Id := Unit (Library_Unit (N));\n       P                : Entity_Id;\n       Lim_Elmt         : Elmt_Id;\n       Lim_Typ          : Entity_Id;\n@@ -3584,9 +3579,8 @@ package body Sem_Ch10 is\n    -------------------------\n \n    procedure Build_Limited_Views (N : Node_Id) is\n-\n-      Unum        : Unit_Number_Type := Get_Source_Unit (Library_Unit (N));\n-      P           : Entity_Id        := Cunit_Entity (Unum);\n+      Unum : constant Unit_Number_Type := Get_Source_Unit (Library_Unit (N));\n+      P    : constant Entity_Id        := Cunit_Entity (Unum);\n \n       Spec        : Node_Id;         --  To denote a package specification\n       Lim_Typ     : Entity_Id;       --  To denote shadow entities.\n@@ -3717,9 +3711,9 @@ package body Sem_Ch10 is\n       --  Could use more comments below ???\n \n       procedure Build_Chain (Spec : Node_Id; Scope : Entity_Id) is\n-         Decl          : Node_Id;\n-         Analyzed_Unit : Boolean := Analyzed (Cunit (Unum));\n+         Analyzed_Unit : constant Boolean := Analyzed (Cunit (Unum));\n          Is_Tagged     : Boolean;\n+         Decl          : Node_Id;\n \n       begin\n          Decl := First (Visible_Declarations (Spec));\n@@ -3788,7 +3782,7 @@ package body Sem_Ch10 is\n                --  Local package\n \n                declare\n-                  Spec : Node_Id := Specification (Decl);\n+                  Spec : constant Node_Id := Specification (Decl);\n \n                begin\n                   Comp_Typ := Defining_Unit_Name (Spec);\n@@ -4077,7 +4071,7 @@ package body Sem_Ch10 is\n    --------------------------------\n \n    procedure Remove_Limited_With_Clause (N : Node_Id) is\n-      P_Unit    : Entity_Id := Unit (Library_Unit (N));\n+      P_Unit    : constant Entity_Id := Unit (Library_Unit (N));\n       P         : Entity_Id := Defining_Unit_Name (Specification (P_Unit));\n       Lim_Elmt  : Elmt_Id;\n       Lim_Typ   : Entity_Id;"}, {"sha": "6820fe054fa9858c9afb41ac535853743e977139", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -2577,7 +2577,7 @@ package body Sem_Ch12 is\n \n             if In_Open_Scopes (Scope (Scope (Gen_Unit))) then\n                declare\n-                  Decl : Node_Id :=\n+                  Decl : constant Node_Id :=\n                            Original_Node\n                              (Unit_Declaration_Node (Scope (Gen_Unit)));\n                begin\n@@ -6248,7 +6248,7 @@ package body Sem_Ch12 is\n          Gen_Anc  : Entity_Id)\n          return     Boolean\n       is\n-         Gen_Par : Entity_Id := Generic_Parent (Act_Spec);\n+         Gen_Par : constant Entity_Id := Generic_Parent (Act_Spec);\n \n       begin\n          if No (Gen_Par) then\n@@ -7768,8 +7768,7 @@ package body Sem_Ch12 is\n \n                begin\n                   Decl := First (Actual_Decls);\n-\n-                  while (Present (Decl)) loop\n+                  while Present (Decl) loop\n                      if Nkind (Decl) = N_Subtype_Declaration\n                        and then Chars (Defining_Identifier (Decl)) =\n                                                     Chars (Etype (A_Gen_T))"}, {"sha": "e2d3c6c3c3ce3f33d6af03687a02e8dfcec0c11d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -209,21 +209,19 @@ package body Sem_Ch4 is\n    --  a more informative message.\n \n    function Try_Indexed_Call\n-     (N      : Node_Id;\n-      Nam    : Entity_Id;\n-      Typ    : Entity_Id)\n-      return   Boolean;\n+     (N   : Node_Id;\n+      Nam : Entity_Id;\n+      Typ : Entity_Id) return Boolean;\n    --  If a function has defaults for all its actuals, a call to it may\n    --  in fact be an indexing on the result of the call. Try_Indexed_Call\n    --  attempts the interpretation as an indexing, prior to analysis as\n    --  a call. If both are possible,  the node is overloaded with both\n    --  interpretations (same symbol but two different types).\n \n    function Try_Indirect_Call\n-     (N      : Node_Id;\n-      Nam    : Entity_Id;\n-      Typ    : Entity_Id)\n-      return   Boolean;\n+     (N   : Node_Id;\n+      Nam : Entity_Id;\n+      Typ : Entity_Id) return Boolean;\n    --  Similarly, a function F that needs no actuals can return an access\n    --  to a subprogram, and the call F (X)  interpreted as F.all (X). In\n    --  this case the call may be overloaded with both interpretations.\n@@ -334,10 +332,6 @@ package body Sem_Ch4 is\n          Check_Fully_Declared (Type_Id, N);\n          Set_Directly_Designated_Type (Acc_Type, Type_Id);\n \n-         if Is_Protected_Type (Type_Id) then\n-            Check_Restriction (No_Protected_Type_Allocators, N);\n-         end if;\n-\n          if Is_Limited_Type (Type_Id)\n            and then Comes_From_Source (N)\n            and then not In_Instance_Body\n@@ -449,6 +443,15 @@ package body Sem_Ch4 is\n             Set_Directly_Designated_Type (Acc_Type, Type_Id);\n             Check_Fully_Declared (Type_Id, N);\n \n+            --  Check restriction against dynamically allocated protected\n+            --  objects. Note that when limited aggregates are supported,\n+            --  a similar test should be applied to an allocator with a\n+            --  qualified expression ???\n+\n+            if Is_Protected_Type (Type_Id) then\n+               Check_Restriction (No_Protected_Type_Allocators, N);\n+            end if;\n+\n             --  Check for missing initialization. Skip this check if we already\n             --  had errors on analyzing the allocator, since in that case these\n             --  are probably cascaded errors\n@@ -4299,10 +4302,9 @@ package body Sem_Ch4 is\n    -----------------------\n \n    function Try_Indirect_Call\n-     (N      : Node_Id;\n-      Nam    : Entity_Id;\n-      Typ    : Entity_Id)\n-      return   Boolean\n+     (N   : Node_Id;\n+      Nam : Entity_Id;\n+      Typ : Entity_Id) return Boolean\n    is\n       Actuals : constant List_Id := Parameter_Associations (N);\n       Actual  : Node_Id;\n@@ -4345,10 +4347,9 @@ package body Sem_Ch4 is\n    ----------------------\n \n    function Try_Indexed_Call\n-     (N      : Node_Id;\n-      Nam    : Entity_Id;\n-      Typ    : Entity_Id)\n-      return   Boolean\n+     (N   : Node_Id;\n+      Nam : Entity_Id;\n+      Typ : Entity_Id) return Boolean\n    is\n       Actuals : constant List_Id   := Parameter_Associations (N);\n       Actual : Node_Id;"}, {"sha": "d37b951aac6dc6a19216db3816251d969a5771fd", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -714,7 +714,7 @@ package body Sem_Ch5 is\n         and then Serious_Errors_Detected = 0\n       then\n          declare\n-            Chosen : Node_Id := Find_Static_Alternative (N);\n+            Chosen : constant Node_Id := Find_Static_Alternative (N);\n             Alt    : Node_Id;\n \n          begin"}, {"sha": "4edfee86850f3daf3ad314dc124cd5ec43802dbd", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -733,7 +733,7 @@ package body Sem_Ch7 is\n       --------------------------------\n \n       procedure Generate_Parent_References is\n-         Decl : Node_Id := Parent (N);\n+         Decl : constant Node_Id := Parent (N);\n \n       begin\n          if Id = Cunit_Entity (Main_Unit)"}, {"sha": "f207234582425e57eedfb25455b80187b8d5b64d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1240,7 +1240,8 @@ package body Sem_Ch8 is\n \n       --  There is no need for elaboration checks on the new entity, which\n       --  may be called before the next freezing point where the body will\n-      --  appear.\n+      --  appear. Elaboration checks refer to the real entity, not the one\n+      --  created by the renaming declaration.\n \n       Set_Kill_Elaboration_Checks (New_S, True);\n "}, {"sha": "bb62a11234dba7c714b701bfe770afc28a00148b", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 75, "deletions": 37, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -300,7 +300,18 @@ package body Sem_Elab is\n       Decl : Node_Id;\n \n       E_Scope : Entity_Id;\n-      --  Top level scope of entity for called subprogram\n+      --  Top level scope of entity for called subprogram. This\n+      --  value includes following renamings and derivations, so\n+      --  this scope can be in a non-visible unit. This is the\n+      --  scope that is to be investigated to see whether an\n+      --  elaboration check is required.\n+\n+      W_Scope : Entity_Id;\n+      --  Top level scope of directly called entity for subprogram.\n+      --  This differs from E_Scope in the case where renamings or\n+      --  derivations are involved, since it does not follow these\n+      --  links, thus W_Scope is always in a visible unit. This is\n+      --  the scope for the Elaborate_All if one is needed.\n \n       Body_Acts_As_Spec : Boolean;\n       --  Set to true if call is to body acting as spec (no separate spec)\n@@ -611,7 +622,7 @@ package body Sem_Elab is\n                Ent := Alias (Ent);\n                E_Scope := Ent;\n \n-               --  If no alias, there is a previous error.\n+               --  If no alias, there is a previous error\n \n                if No (Ent) then\n                   return;\n@@ -623,6 +634,26 @@ package body Sem_Elab is\n             return;\n          end if;\n \n+         --  Find top level scope for called entity (not following renamings\n+         --  or derivations). This is where the Elaborate_All will go if it\n+         --  is needed. We start with the called entity, except in the case\n+         --  of initialization procedures, where the init proc is in the root\n+         --  package, where we start fromn the entity of the name in the call.\n+\n+         if Is_Entity_Name (Name (N))\n+           and then Is_Init_Proc (Entity (Name (N)))\n+         then\n+            W_Scope := Scope (Entity (Name (N)));\n+         else\n+            W_Scope := E;\n+         end if;\n+\n+         while not Is_Compilation_Unit (W_Scope) loop\n+            W_Scope := Scope (W_Scope);\n+         end loop;\n+\n+         --  Now check if an elaborate_all (or dynamic check) is needed\n+\n          if not Suppress_Elaboration_Warnings (Ent)\n            and then not Elaboration_Checks_Suppressed (Ent)\n            and then not Suppress_Elaboration_Warnings (E_Scope)\n@@ -633,59 +664,50 @@ package body Sem_Elab is\n             if Inst_Case then\n                Error_Msg_NE\n                  (\"instantiation of& may raise Program_Error?\", N, Ent);\n+\n             else\n                if Is_Init_Proc (Entity (Name (N)))\n                  and then Comes_From_Source (Ent)\n                then\n                   Error_Msg_NE\n-                    (\"implicit call to & in initialization\" &\n-                      \"  may raise Program_Error?\", N, Ent);\n-                  E_Scope := Scope (Entity (Name (N)));\n+                    (\"implicit call to & may raise Program_Error?\", N, Ent);\n \n                else\n                   Error_Msg_NE\n                     (\"call to & may raise Program_Error?\", N, Ent);\n                end if;\n-\n-               if Unit_Callee = No_Unit\n-                 and then E_Scope = Current_Scope\n-               then\n-                  --  The missing pragma cannot be on the current unit, so\n-                  --  place it on the compilation unit that contains the\n-                  --  called entity, which is more likely to be right.\n-\n-                  E_Scope := Ent;\n-\n-                  while not Is_Compilation_Unit (E_Scope) loop\n-                     E_Scope := Scope (E_Scope);\n-                  end loop;\n-               end if;\n             end if;\n \n             Error_Msg_Qual_Level := Nat'Last;\n             Error_Msg_NE\n-              (\"\\missing pragma Elaborate_All for&?\", N, E_Scope);\n+              (\"\\missing pragma Elaborate_All for&?\", N, W_Scope);\n             Error_Msg_Qual_Level := 0;\n             Output_Calls (N);\n \n             --  Set flag to prevent further warnings for same unit\n             --  unless in All_Errors_Mode.\n \n             if not All_Errors_Mode and not Dynamic_Elaboration_Checks then\n-               Set_Suppress_Elaboration_Warnings (E_Scope, True);\n+               Set_Suppress_Elaboration_Warnings (W_Scope, True);\n             end if;\n          end if;\n \n          --  Check for runtime elaboration check required\n \n          if Dynamic_Elaboration_Checks then\n             if not Elaboration_Checks_Suppressed (Ent)\n+              and then not Elaboration_Checks_Suppressed (W_Scope)\n               and then not Elaboration_Checks_Suppressed (E_Scope)\n               and then not Cunit_SC\n             then\n                --  Runtime elaboration check required. Generate check of the\n                --  elaboration Boolean for the unit containing the entity.\n \n+               --  Note that for this case, we do check the real unit (the\n+               --  one from following renamings, since that is the issue!)\n+\n+               --  Could this possibly miss a useless but required PE???\n+\n                Insert_Elab_Check (N,\n                  Make_Attribute_Reference (Loc,\n                    Attribute_Name => Name_Elaborated,\n@@ -694,25 +716,41 @@ package body Sem_Elab is\n                        (Spec_Entity (E_Scope), Loc)));\n             end if;\n \n-         --  If no dynamic check required, then ask binder to guarantee\n-         --  that the necessary elaborations will be done properly!\n+         --  Case of static elaboration model\n \n          else\n-            if not Suppress_Elaboration_Warnings (E)\n-              and then not Elaboration_Checks_Suppressed (E)\n-              and then not Suppress_Elaboration_Warnings (E_Scope)\n-              and then not Elaboration_Checks_Suppressed (E_Scope)\n-              and then Elab_Warnings\n-              and then Generate_Warnings\n-              and then not Inst_Case\n+            --  Do not do anything if elaboration checks suppressed. Note\n+            --  that we check Ent here, not E, since we want the real entity\n+            --  for the body to see if checks are suppressed for it, not the\n+            --  dummy entry for renamings or derivations.\n+\n+            if Elaboration_Checks_Suppressed (Ent)\n+              or else Elaboration_Checks_Suppressed (E_Scope)\n+              or else Elaboration_Checks_Suppressed (W_Scope)\n             then\n-               Error_Msg_Node_2 := E_Scope;\n-               Error_Msg_NE (\"call to& in elaboration code \" &\n-                  \"requires pragma Elaborate_All on&?\", N, E);\n-            end if;\n+               null;\n+\n+            --  Here we need to generate an implicit elaborate all\n+\n+            else\n+               --  Generate elaborate_all warning unless suppressed\n \n-            Set_Elaborate_All_Desirable (E_Scope);\n-            Set_Suppress_Elaboration_Warnings (E_Scope, True);\n+               if (Elab_Warnings and Generate_Warnings and not Inst_Case)\n+                 and then not Suppress_Elaboration_Warnings (Ent)\n+                 and then not Suppress_Elaboration_Warnings (E_Scope)\n+                 and then not Suppress_Elaboration_Warnings (W_Scope)\n+               then\n+                  Error_Msg_Node_2 := W_Scope;\n+                  Error_Msg_NE\n+                    (\"call to& in elaboration code \" &\n+                     \"requires pragma Elaborate_All on&?\", N, E);\n+               end if;\n+\n+               --  Set indication for binder to generate Elaborate_All\n+\n+               Set_Elaborate_All_Desirable (W_Scope);\n+               Set_Suppress_Elaboration_Warnings (W_Scope, True);\n+            end if;\n          end if;\n \n       --  Case of entity is in same unit as call or instantiation"}, {"sha": "c5c6b3a88f69bd86621e488e6dc713e84806ef4c", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 165, "deletions": 101, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,7 @@ with Sinfo;   use Sinfo;\n with Snames;  use Snames;\n with Stand;   use Stand;\n with Stringt; use Stringt;\n+with Table;\n with Uintp;   use Uintp;\n \n with GNAT.HTable; use GNAT.HTable;\n@@ -91,6 +92,9 @@ package body Sem_Elim is\n       Homonym : Access_Elim_Data;\n       --  Pointer to next entry with same key\n \n+      Prag : Node_Id;\n+      --  Node_Id for Eliminate pragma\n+\n    end record;\n \n    ----------------\n@@ -179,6 +183,14 @@ package body Sem_Elim is\n       end Set_Next;\n    end Hash_Subprograms;\n \n+   ------------\n+   -- Tables --\n+   ------------\n+\n+   --  The following table records the data for each pragmas, using the\n+   --  entity name as the hash key for retrieval. Entries in this table\n+   --  are set by Process_Eliminate_Pragma and read by Check_Eliminated.\n+\n    package Elim_Hash_Table is new Static_HTable (\n       Header_Num => Header_Num,\n       Element    => Element,\n@@ -191,6 +203,24 @@ package body Sem_Elim is\n       Hash       => Hash_Subprograms.Hash,\n       Equal      => Hash_Subprograms.Equal);\n \n+   --  The following table records entities for subprograms that are\n+   --  eliminated, and corresponding eliminate pragmas that caused the\n+   --  elimination. Entries in this table are set by Check_Eliminated\n+   --  and read by Eliminate_Error_Msg.\n+\n+   type Elim_Entity_Entry is record\n+      Prag : Node_Id;\n+      Subp : Entity_Id;\n+   end record;\n+\n+   package Elim_Entities is new Table.Table (\n+     Table_Component_Type => Elim_Entity_Entry,\n+     Table_Index_Type     => Name_Id,\n+     Table_Low_Bound      => First_Name_Id,\n+     Table_Initial        => 50,\n+     Table_Increment      => 200,\n+     Table_Name           => \"Elim_Entries\");\n+\n    ----------------------\n    -- Check_Eliminated --\n    ----------------------\n@@ -206,7 +236,7 @@ package body Sem_Elim is\n       if No_Elimination then\n          return;\n \n-      --  Elimination of objects and types is not implemented yet.\n+      --  Elimination of objects and types is not implemented yet\n \n       elsif Ekind (E) not in Subprogram_Kind then\n          return;\n@@ -217,149 +247,181 @@ package body Sem_Elim is\n       --  Loop through homonyms for this key\n \n       while Elmt /= null loop\n+         declare\n+            procedure Set_Eliminated;\n+            --  Set current subprogram entity as eliminated\n \n-         --  First we check that the name of the entity matches\n+            procedure Set_Eliminated is\n+            begin\n+               Set_Is_Eliminated (E);\n+               Elim_Entities.Append ((Prag => Elmt.Prag, Subp => E));\n+            end Set_Eliminated;\n \n-         if Elmt.Entity_Name /= Chars (E) then\n-            goto Continue;\n-         end if;\n+         begin\n+            --  First we check that the name of the entity matches\n+\n+            if Elmt.Entity_Name /= Chars (E) then\n+               goto Continue;\n+            end if;\n+\n+            --  Then we need to see if the static scope matches within the\n+            --  compilation unit.\n \n-         --  Then we need to see if the static scope matches within the\n-         --  compilation unit.\n+            Scop := Scope (E);\n+            if Elmt.Entity_Scope /= null then\n+               for J in reverse Elmt.Entity_Scope'Range loop\n+                  if Elmt.Entity_Scope (J) /= Chars (Scop) then\n+                     goto Continue;\n+                  end if;\n \n-         Scop := Scope (E);\n-         if Elmt.Entity_Scope /= null then\n-            for J in reverse Elmt.Entity_Scope'Range loop\n-               if Elmt.Entity_Scope (J) /= Chars (Scop) then\n+                  Scop := Scope (Scop);\n+\n+                  if not Is_Compilation_Unit (Scop) and then J = 1 then\n+                     goto Continue;\n+                  end if;\n+               end loop;\n+            end if;\n+\n+            --  Now see if compilation unit matches\n+\n+            for J in reverse Elmt.Unit_Name'Range loop\n+               if Elmt.Unit_Name (J) /= Chars (Scop) then\n                   goto Continue;\n                end if;\n \n                Scop := Scope (Scop);\n \n-               if not Is_Compilation_Unit (Scop) and then J = 1 then\n+               if Scop /= Standard_Standard and then J = 1 then\n                   goto Continue;\n                end if;\n             end loop;\n-         end if;\n-\n-         --  Now see if compilation unit matches\n-\n-         for J in reverse Elmt.Unit_Name'Range loop\n-            if Elmt.Unit_Name (J) /= Chars (Scop) then\n-               goto Continue;\n-            end if;\n-\n-            Scop := Scope (Scop);\n \n-            if Scop /= Standard_Standard and then J = 1 then\n+            if Scop /= Standard_Standard then\n                goto Continue;\n             end if;\n-         end loop;\n-\n-         if Scop /= Standard_Standard then\n-            goto Continue;\n-         end if;\n-\n-         --  Check for case of given entity is a library level subprogram\n-         --  and we have the single parameter Eliminate case, a match!\n-\n-         if Is_Compilation_Unit (E)\n-           and then Is_Subprogram (E)\n-           and then No (Elmt.Entity_Node)\n-         then\n-            Set_Is_Eliminated (E);\n-            return;\n-\n-         --  Check for case of type or object with two parameter case\n \n-         elsif (Is_Type (E) or else Is_Object (E))\n-           and then Elmt.Result_Type = No_Name\n-           and then Elmt.Parameter_Types = null\n-         then\n-            Set_Is_Eliminated (E);\n-            return;\n-\n-         --  Check for case of subprogram\n-\n-         elsif Ekind (E) = E_Function\n-           or else Ekind (E) = E_Procedure\n-         then\n-            --  If Homonym_Number present, then see if it matches\n-\n-            if Elmt.Homonym_Number /= No_Uint then\n-               Ctr := 1;\n-\n-               Ent := E;\n-               while Present (Homonym (Ent))\n-                 and then Scope (Ent) = Scope (Homonym (Ent))\n-               loop\n-                  Ctr := Ctr + 1;\n-                  Ent := Homonym (Ent);\n-               end loop;\n+            --  Check for case of given entity is a library level subprogram\n+            --  and we have the single parameter Eliminate case, a match!\n+\n+            if Is_Compilation_Unit (E)\n+              and then Is_Subprogram (E)\n+              and then No (Elmt.Entity_Node)\n+            then\n+               Set_Eliminated;\n+               return;\n+\n+               --  Check for case of type or object with two parameter case\n+\n+            elsif (Is_Type (E) or else Is_Object (E))\n+              and then Elmt.Result_Type = No_Name\n+              and then Elmt.Parameter_Types = null\n+            then\n+               Set_Eliminated;\n+               return;\n+\n+               --  Check for case of subprogram\n+\n+            elsif Ekind (E) = E_Function\n+              or else Ekind (E) = E_Procedure\n+            then\n+               --  If Homonym_Number present, then see if it matches\n+\n+               if Elmt.Homonym_Number /= No_Uint then\n+                  Ctr := 1;\n+\n+                  Ent := E;\n+                  while Present (Homonym (Ent))\n+                    and then Scope (Ent) = Scope (Homonym (Ent))\n+                  loop\n+                     Ctr := Ctr + 1;\n+                     Ent := Homonym (Ent);\n+                  end loop;\n \n-               if Ctr /= Elmt.Homonym_Number then\n-                  goto Continue;\n+                  if Ctr /= Elmt.Homonym_Number then\n+                     goto Continue;\n+                  end if;\n                end if;\n-            end if;\n \n-            --  If we have a Result_Type, then we must have a function\n-            --  with the proper result type\n+               --  If we have a Result_Type, then we must have a function\n+               --  with the proper result type\n \n-            if Elmt.Result_Type /= No_Name then\n-               if Ekind (E) /= E_Function\n-                 or else Chars (Etype (E)) /= Elmt.Result_Type\n-               then\n-                  goto Continue;\n+               if Elmt.Result_Type /= No_Name then\n+                  if Ekind (E) /= E_Function\n+                    or else Chars (Etype (E)) /= Elmt.Result_Type\n+                  then\n+                     goto Continue;\n+                  end if;\n                end if;\n-            end if;\n \n-            --  If we have Parameter_Types, they must match\n+               --  If we have Parameter_Types, they must match\n \n-            if Elmt.Parameter_Types /= null then\n-               Form := First_Formal (E);\n+               if Elmt.Parameter_Types /= null then\n+                  Form := First_Formal (E);\n \n-               if No (Form) and then Elmt.Parameter_Types = null then\n-                  null;\n+                  if No (Form) and then Elmt.Parameter_Types = null then\n+                     null;\n \n-               elsif Elmt.Parameter_Types = null then\n-                  goto Continue;\n+                  elsif Elmt.Parameter_Types = null then\n+                     goto Continue;\n \n-               else\n-                  for J in Elmt.Parameter_Types'Range loop\n-                     if No (Form)\n-                       or else Chars (Etype (Form)) /= Elmt.Parameter_Types (J)\n-                     then\n+                  else\n+                     for J in Elmt.Parameter_Types'Range loop\n+                        if No (Form)\n+                          or else\n+                            Chars (Etype (Form)) /= Elmt.Parameter_Types (J)\n+                        then\n+                           goto Continue;\n+                        else\n+                           Next_Formal (Form);\n+                        end if;\n+                     end loop;\n+\n+                     if Present (Form) then\n                         goto Continue;\n-                     else\n-                        Next_Formal (Form);\n                      end if;\n-                  end loop;\n-\n-                  if Present (Form) then\n-                     goto Continue;\n                   end if;\n                end if;\n-            end if;\n \n-            --  If we fall through, this is match\n+               --  If we fall through, this is match\n \n-            Set_Is_Eliminated (E);\n-            return;\n-         end if;\n+               Set_Eliminated;\n+               return;\n+            end if;\n \n-         <<Continue>> Elmt := Elmt.Homonym;\n+            <<Continue>> Elmt := Elmt.Homonym;\n+         end;\n       end loop;\n \n       return;\n    end Check_Eliminated;\n \n+   -------------------------\n+   -- Eliminate_Error_Msg --\n+   -------------------------\n+\n+   procedure Eliminate_Error_Msg (N : Node_Id; E : Entity_Id) is\n+   begin\n+      for J in Elim_Entities.First .. Elim_Entities.Last loop\n+         if E = Elim_Entities.Table (J).Subp then\n+            Error_Msg_Sloc := Sloc (Elim_Entities.Table (J).Prag);\n+            Error_Msg_NE (\"cannot call subprogram & eliminated #\", N, E);\n+            return;\n+         end if;\n+      end loop;\n+\n+      --  Should never fall through, since entry should be in table\n+\n+      pragma Assert (False);\n+   end Eliminate_Error_Msg;\n+\n    ----------------\n    -- Initialize --\n    ----------------\n \n    procedure Initialize is\n    begin\n       Elim_Hash_Table.Reset;\n+      Elim_Entities.Init;\n       No_Elimination := True;\n    end Initialize;\n \n@@ -368,7 +430,8 @@ package body Sem_Elim is\n    ------------------------------\n \n    procedure Process_Eliminate_Pragma\n-     (Arg_Unit_Name       : Node_Id;\n+     (Pragma_Node         : Node_Id;\n+      Arg_Unit_Name       : Node_Id;\n       Arg_Entity          : Node_Id;\n       Arg_Parameter_Types : Node_Id;\n       Arg_Result_Type     : Node_Id;\n@@ -416,6 +479,7 @@ package body Sem_Elim is\n    --  Start of processing for Process_Eliminate_Pragma\n \n    begin\n+      Data.Prag := Pragma_Node;\n       Error_Msg_Name_1 := Name_Eliminate;\n \n       --  Process Unit_Name argument"}, {"sha": "133219e33101c2f378834823f7a2d4cfb6a4296e", "filename": "gcc/ada/sem_elim.ads", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_elim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_elim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,21 +34,30 @@ package Sem_Elim is\n    --  Initialize for new main souce program\n \n    procedure Process_Eliminate_Pragma\n-     (Arg_Unit_Name       : Node_Id;\n+     (Pragma_Node         : Node_Id;\n+      Arg_Unit_Name       : Node_Id;\n       Arg_Entity          : Node_Id;\n       Arg_Parameter_Types : Node_Id;\n       Arg_Result_Type     : Node_Id;\n       Arg_Homonym_Number  : Node_Id);\n-   --  Process eliminate pragma. The number of arguments has been checked,\n-   --  as well as possible optional identifiers, but no other checks have\n-   --  been made. This subprogram completes the checking, and then if the\n-   --  pragma is well formed, makes appropriate entries in the internal\n-   --  tables used to keep track of Eliminate pragmas. The five arguments\n-   --  are expressions (not pragma argument associations) for the possible\n-   --  pragma arguments. A parameter that is not present is set to Empty.\n+   --  Process eliminate pragma (given by Pragma_Node). The number of\n+   --  arguments has been checked, as well as possible optional identifiers,\n+   --  but no other checks have been made. This subprogram completes the\n+   --  checking, and then if the pragma is well formed, makes appropriate\n+   --  entries in the internal tables used to keep track of Eliminate pragmas.\n+   --  The other five arguments are expressions (rather than pragma argument\n+   --  associations) for the possible pragma arguments. A parameter that\n+   --  is not present is set to Empty.\n \n    procedure Check_Eliminated (E : Entity_Id);\n    --  Checks if entity E is eliminated, and if so sets the Is_Eliminated\n    --  flag on the given entity.\n \n+   procedure Eliminate_Error_Msg (N : Node_Id; E : Entity_Id);\n+   --  Called by the back end on encouterning a call to an eliminated\n+   --  subprogram. N is the node for the call, and E is the entity of\n+   --  the subprogram being eliminated.\n+\n+\n+\n end Sem_Elim;"}, {"sha": "222355d1dc3f72a369e2f0a0073794fab8380f5e", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 50, "deletions": 22, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -2279,63 +2279,91 @@ package body Sem_Eval is\n    -------------------------\n \n    procedure Eval_String_Literal (N : Node_Id) is\n-      T : constant Entity_Id := Etype (N);\n-      B : constant Entity_Id := Base_Type (T);\n-      I : Entity_Id;\n+      Typ : constant Entity_Id := Etype (N);\n+      Bas : constant Entity_Id := Base_Type (Typ);\n+      Xtp : Entity_Id;\n+      Len : Nat;\n+      Lo  : Node_Id;\n \n    begin\n       --  Nothing to do if error type (handles cases like default expressions\n       --  or generics where we have not yet fully resolved the type)\n \n-      if B = Any_Type or else B = Any_String then\n+      if Bas = Any_Type or else Bas = Any_String then\n          return;\n+      end if;\n \n       --  String literals are static if the subtype is static (RM 4.9(2)), so\n       --  reset the static expression flag (it was set unconditionally in\n       --  Analyze_String_Literal) if the subtype is non-static. We tell if\n       --  the subtype is static by looking at the lower bound.\n \n-      elsif not Is_OK_Static_Expression (String_Literal_Low_Bound (T)) then\n+      if Ekind (Typ) = E_String_Literal_Subtype then\n+         if not Is_OK_Static_Expression (String_Literal_Low_Bound (Typ)) then\n+            Set_Is_Static_Expression (N, False);\n+            return;\n+         end if;\n+\n+      --  Here if Etype of string literal is normal Etype (not yet possible,\n+      --  but may be possible in future!)\n+\n+      elsif not Is_OK_Static_Expression\n+                    (Type_Low_Bound (Etype (First_Index (Typ))))\n+      then\n          Set_Is_Static_Expression (N, False);\n+         return;\n+      end if;\n+\n+      --  If original node was a type conversion, then result if non-static\n \n-      elsif Nkind (Original_Node (N)) = N_Type_Conversion then\n+      if Nkind (Original_Node (N)) = N_Type_Conversion then\n          Set_Is_Static_Expression (N, False);\n+         return;\n+      end if;\n \n       --  Test for illegal Ada 95 cases. A string literal is illegal in\n       --  Ada 95 if its bounds are outside the index base type and this\n-      --  index type is static. This can hapen in only two ways. Either\n+      --  index type is static. This can happen in only two ways. Either\n       --  the string literal is too long, or it is null, and the lower\n       --  bound is type'First. In either case it is the upper bound that\n       --  is out of range of the index type.\n \n-      elsif Ada_95 then\n-         if Root_Type (B) = Standard_String\n-           or else Root_Type (B) = Standard_Wide_String\n+      if Ada_95 then\n+         if Root_Type (Bas) = Standard_String\n+              or else\n+            Root_Type (Bas) = Standard_Wide_String\n          then\n-            I := Standard_Positive;\n+            Xtp := Standard_Positive;\n          else\n-            I := Etype (First_Index (B));\n+            Xtp := Etype (First_Index (Bas));\n          end if;\n \n-         if String_Literal_Length (T) > String_Type_Len (B) then\n+         if Ekind (Typ) = E_String_Literal_Subtype then\n+            Lo := String_Literal_Low_Bound (Typ);\n+         else\n+            Lo := Type_Low_Bound (Etype (First_Index (Typ)));\n+         end if;\n+\n+         Len := String_Length (Strval (N));\n+\n+         if UI_From_Int (Len) > String_Type_Len (Bas) then\n             Apply_Compile_Time_Constraint_Error\n               (N, \"string literal too long for}\", CE_Length_Check_Failed,\n-               Ent => B,\n-               Typ => First_Subtype (B));\n+               Ent => Bas,\n+               Typ => First_Subtype (Bas));\n \n-         elsif String_Literal_Length (T) = 0\n-            and then not Is_Generic_Type (I)\n-            and then Expr_Value (String_Literal_Low_Bound (T)) =\n-                     Expr_Value (Type_Low_Bound (Base_Type (I)))\n+         elsif Len = 0\n+           and then not Is_Generic_Type (Xtp)\n+           and then\n+             Expr_Value (Lo) = Expr_Value (Type_Low_Bound (Base_Type (Xtp)))\n          then\n             Apply_Compile_Time_Constraint_Error\n               (N, \"null string literal not allowed for}\",\n                CE_Length_Check_Failed,\n-               Ent => B,\n-               Typ => First_Subtype (B));\n+               Ent => Bas,\n+               Typ => First_Subtype (Bas));\n          end if;\n       end if;\n-\n    end Eval_String_Literal;\n \n    --------------------------"}, {"sha": "4ad662dbac1a065c2727c6287fc0b18bfb97335d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2763,6 +2763,7 @@ package body Sem_Prag is\n \n                   declare\n                      Decl : constant Node_Id := Unit_Declaration_Node (Def_Id);\n+\n                   begin\n                      if Present (Decl)\n                        and then Nkind (Decl) = N_Subprogram_Declaration\n@@ -2856,7 +2857,7 @@ package body Sem_Prag is\n          ----------------------------\n \n          function Back_End_Cannot_Inline (Subp : Entity_Id) return Boolean is\n-            Decl : Node_Id := Unit_Declaration_Node (Subp);\n+            Decl : constant Node_Id := Unit_Declaration_Node (Subp);\n \n          begin\n             if Nkind (Decl) = N_Subprogram_Body then\n@@ -4186,7 +4187,8 @@ package body Sem_Prag is\n \n                if Expander_Active then\n                   declare\n-                     Temp : Node_Id := New_Copy_Tree (Expression (Arg2));\n+                     Temp : constant Node_Id :=\n+                              New_Copy_Tree (Expression (Arg2));\n                   begin\n                      Set_Parent (Temp, N);\n                      Pre_Analyze_And_Resolve (Temp, RTE (RE_Interrupt_ID));\n@@ -5293,7 +5295,8 @@ package body Sem_Prag is\n             end if;\n \n             Process_Eliminate_Pragma\n-              (Unit_Name,\n+              (N,\n+               Unit_Name,\n                Entity,\n                Parameter_Types,\n                Result_Type,\n@@ -7378,9 +7381,13 @@ package body Sem_Prag is\n             No_Run_Time_Mode           := True;\n             Configurable_Run_Time_Mode := True;\n \n-            if Ttypes.System_Word_Size = 32 then\n-               Duration_32_Bits_On_Target := True;\n-            end if;\n+            declare\n+               Word32 : constant Boolean := Ttypes.System_Word_Size = 32;\n+            begin\n+               if Word32 then\n+                  Duration_32_Bits_On_Target := True;\n+               end if;\n+            end;\n \n             Restrictions (No_Finalization)       := True;\n             Restrictions (No_Exception_Handlers) := True;\n@@ -9776,7 +9783,7 @@ package body Sem_Prag is\n    --  than appearence as any argument is insignificant, a positive value\n    --  indicates that appearence in that parameter position is significant.\n \n-   Sig_Flags : array (Pragma_Id) of Int :=\n+   Sig_Flags : constant array (Pragma_Id) of Int :=\n      (Pragma_AST_Entry                    => -1,\n       Pragma_Abort_Defer                  => -1,\n       Pragma_Ada_83                       => -1,"}, {"sha": "7bcd986fe7535cc0fb1af4e8e30ea6dd68bc3da0", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1832,7 +1832,24 @@ package body Sem_Res is\n             --  doesn't think of them this way!)\n \n             if Typ = Standard_Void_Type then\n-               Error_Msg_N (\"expect procedure name in procedure call\", N);\n+\n+               --  Special case message if function used as a procedure\n+\n+               if Nkind (N) = N_Procedure_Call_Statement\n+                 and then Is_Entity_Name (Name (N))\n+                 and then Ekind (Entity (Name (N))) = E_Function\n+               then\n+                  Error_Msg_NE\n+                    (\"cannot use function & in a procedure call\",\n+                     Name (N), Entity (Name (N)));\n+\n+               --  Otherwise give general message (not clear what cases\n+               --  this covers, but no harm in providing for them!)\n+\n+               else\n+                  Error_Msg_N (\"expect procedure name in procedure call\", N);\n+               end if;\n+\n                Found := True;\n \n             --  Otherwise we do have a subexpression with the wrong type\n@@ -6535,10 +6552,10 @@ package body Sem_Res is\n          Subtype_Id := Create_Itype (E_String_Literal_Subtype, N);\n       end if;\n \n-      Set_String_Literal_Length    (Subtype_Id,\n-        UI_From_Int (String_Length (Strval (N))));\n-      Set_Etype                    (Subtype_Id, Base_Type (Typ));\n-      Set_Is_Constrained           (Subtype_Id);\n+      Set_String_Literal_Length (Subtype_Id, UI_From_Int\n+                                               (String_Length (Strval (N))));\n+      Set_Etype                 (Subtype_Id, Base_Type (Typ));\n+      Set_Is_Constrained        (Subtype_Id);\n \n       --  The low bound is set from the low bound of the corresponding\n       --  index type. Note that we do not store the high bound in the"}, {"sha": "402331f0a77c7770d21979f463dd1ee77126d9ee", "filename": "gcc/ada/sem_res.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_res.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_res.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -59,7 +59,6 @@ package Sem_Res is\n    --  specified check suppressed (can be All_Checks to suppress all checks).\n \n    procedure Resolve (N : Node_Id);\n-   pragma Inline (Resolve);\n    --  A version of Resolve where the type to be used for resolution is\n    --  taken from the Etype (N). This is commonly used in cases where the\n    --  context does not add anything and the first pass of analysis found\n@@ -118,4 +117,10 @@ package Sem_Res is\n    --  Same, but use type of node because context does not impose a single\n    --  type.\n \n+private\n+   procedure Resolve_Implicit_Type (N : Node_Id) renames Resolve;\n+   pragma Inline (Resolve_Implicit_Type);\n+   --  We use this renaming to make the application of Inline very explicit\n+   --  to this version, since other versions of Resolve are not inlined.\n+\n end Sem_Res;"}, {"sha": "269e1322c4c0c9a307b24e10883377f9bce1245e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -3554,13 +3554,13 @@ package body Sem_Util is\n \n    function Is_Fully_Initialized_Variant (Typ : Entity_Id) return Boolean is\n       Loc           : constant Source_Ptr := Sloc (Typ);\n+      Constraints   : constant List_Id    := New_List;\n+      Components    : constant Elist_Id   := New_Elmt_List;\n       Comp_Elmt     : Elmt_Id;\n       Comp_Id       : Node_Id;\n       Comp_List     : Node_Id;\n       Discr         : Entity_Id;\n       Discr_Val     : Node_Id;\n-      Constraints   : List_Id := New_List;\n-      Components    : Elist_Id := New_Elmt_List;\n       Report_Errors : Boolean;\n \n    begin\n@@ -6038,13 +6038,14 @@ package body Sem_Util is\n    -----------------------\n \n    function Type_Access_Level (Typ : Entity_Id) return Uint is\n-      Btyp : Entity_Id := Base_Type (Typ);\n+      Btyp : Entity_Id;\n \n    begin\n       --  If the type is an anonymous access type we treat it as being\n       --  declared at the library level to ensure that names such as\n       --  X.all'access don't fail static accessibility checks.\n \n+      Btyp := Base_Type (Typ);\n       if Ekind (Btyp) in Access_Kind then\n          if Ekind (Btyp) = E_Anonymous_Access_Type then\n             return Scope_Depth (Standard_Standard);"}, {"sha": "9b8c4c1aabc6e8d4c45076e4b03f55af868f345c", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -639,7 +639,7 @@ package Sem_Util is\n    procedure Process_End_Label\n      (N   : Node_Id;\n       Typ : Character;\n-      Ent  : Entity_Id);\n+      Ent : Entity_Id);\n    --  N is a node whose End_Label is to be processed, generating all\n    --  appropriate cross-reference entries, and performing style checks\n    --  for any identifier references in the end label. Typ is either\n@@ -776,7 +776,7 @@ package Sem_Util is\n    --  Is_Public based upon the new scope.\n \n    function Type_Access_Level (Typ : Entity_Id) return Uint;\n-   --  Return the accessibility level of Typ.\n+   --  Return the accessibility level of Typ\n \n    function Unit_Declaration_Node (Unit_Id : Entity_Id) return Node_Id;\n    --  Unit_Id is the simple name of a program unit, this function returns"}, {"sha": "7fe0a83a36deeea3203417431852d34603f26256", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -90,7 +90,7 @@ package body Sprint is\n    --  with a lower precedence than the operator (or equal precedence if\n    --  appearing as the right operand), then parentheses are required.\n \n-   Op_Prec : array (N_Subexpr) of Short_Short_Integer :=\n+   Op_Prec : constant array (N_Subexpr) of Short_Short_Integer :=\n                (N_Op_And          => 1,\n                 N_Op_Or           => 1,\n                 N_Op_Xor          => 1,"}, {"sha": "8cf9cf4fdbecb5d46bd45f516382c0eb0bcdb952", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -24,9 +24,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Debug;    use Debug;\n-with Osint;    use Osint;\n-with Opt;      use Opt;\n+with Debug; use Debug;\n+with Osint; use Osint;\n+with Opt;   use Opt;\n \n with System.WCh_Con; use System.WCh_Con;\n \n@@ -58,7 +58,6 @@ package body Switch.B is\n       then\n          Osint.Fail (\"invalid switch: \"\"\", Switch_Chars, \"\"\"\"\n             & \" (gnat not needed here)\");\n-\n       end if;\n \n       --  Loop to scan through switches given in switch string\n@@ -132,6 +131,12 @@ package body Switch.B is\n \n             return;\n \n+         --  Processing for D switch\n+\n+         when 'D' =>\n+            Ptr := Ptr + 1;\n+            Scan_Pos (Switch_Chars, Max, Ptr, Default_Sec_Stack_Size);\n+\n          --  Processing for e switch\n \n          when 'e' =>"}, {"sha": "7ac45a0f3dfc6e385d5986bfdb8c549610bb9257", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -469,13 +469,27 @@ package body Switch.C is\n \n             when 'g' =>\n                Ptr := Ptr + 1;\n-               GNAT_Mode                  := True;\n-               Identifier_Character_Set   := 'n';\n-               Warning_Mode               := Treat_As_Error;\n-               Check_Unreferenced         := True;\n-               Check_Withs                := True;\n-               Check_Unreferenced_Formals := True;\n-               System_Extend_Unit         := Empty;\n+               GNAT_Mode := True;\n+               Identifier_Character_Set := 'n';\n+               System_Extend_Unit := Empty;\n+               Warning_Mode := Treat_As_Error;\n+\n+               --  Set default warnings (basically -gnatwa)\n+\n+               Check_Unreferenced           := True;\n+               Check_Unreferenced_Formals   := True;\n+               Check_Withs                  := True;\n+               Constant_Condition_Warnings  := True;\n+               Implementation_Unit_Warnings := True;\n+               Ineffective_Inline_Warnings  := True;\n+               Warn_On_Constant             := True;\n+               Warn_On_Export_Import        := True;\n+               Warn_On_Modified_Unread      := True;\n+               Warn_On_No_Value_Assigned    := True;\n+               Warn_On_Obsolescent_Feature  := True;\n+               Warn_On_Redundant_Constructs := True;\n+               Warn_On_Unchecked_Conversion := True;\n+               Warn_On_Unrecognized_Pragma  := True;\n \n                Set_Default_Style_Check_Options;\n "}, {"sha": "9f37e0365a3c9d22b7fee6ffb92fb9d95da35db2", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -484,6 +484,12 @@ package body Switch.M is\n             Bind_Only  := True;\n             Make_Steps := True;\n \n+         --  Processing for B switch\n+\n+         when 'B' =>\n+            Ptr := Ptr + 1;\n+            Build_Bind_And_Link_Full_Project := True;\n+\n          --  Processing for c switch\n \n          when 'c' =>"}, {"sha": "c174fb0fc4fea868c89f92cee26a381e2ba1570c", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2003, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2004, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -3940,6 +3940,15 @@ tree_transform (Node_Id gnat_node)\n \t  tree gnu_obj_size;\n \t  int align;\n \n+\t  /* If this is a thin pointer, we must dereference it to create\n+\t     a fat pointer, then go back below to a thin pointer.  The\n+\t     reason for this is that we need a fat pointer someplace in\n+\t     order to properly compute the size.  */\n+\t  if (TYPE_THIN_POINTER_P (TREE_TYPE (gnu_ptr)))\n+\t    gnu_ptr = build_unary_op (ADDR_EXPR, NULL_TREE,\n+\t\t\t\t      build_unary_op (INDIRECT_REF, NULL_TREE,\n+\t\t\t\t\t\t      gnu_ptr));\n+\n \t  /* If this is an unconstrained array, we know the object must\n \t     have been allocated with the template in front of the object.\n \t     So pass the template address, but get the total size.  Do this"}, {"sha": "e352d80f78d150df752e5b1d5bf6dfa31f260079", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,15 +24,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Gnatvsn;\n with Hostparm;\n with Osint; use Osint;\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Ada.Command_Line;        use Ada.Command_Line;\n with Ada.Text_IO;             use Ada.Text_IO;\n \n-with Gnatvsn;\n-\n package body VMS_Conv is\n \n    Param_Count : Natural := 0;\n@@ -85,8 +84,7 @@ package body VMS_Conv is\n    function Matching_Name\n      (S     : String;\n       Itm   : Item_Ptr;\n-      Quiet : Boolean := False)\n-      return  Item_Ptr;\n+      Quiet : Boolean := False) return Item_Ptr;\n    --  Determines if the item list headed by Itm and threaded through the\n    --  Next fields (with null marking the end of the list), contains an\n    --  entry that uniquely matches the given string. The match is case\n@@ -452,8 +450,7 @@ package body VMS_Conv is\n    function Matching_Name\n      (S     : String;\n       Itm   : Item_Ptr;\n-      Quiet : Boolean := False)\n-     return  Item_Ptr\n+      Quiet : Boolean := False) return Item_Ptr\n    is\n       P1, P2 : Item_Ptr;\n \n@@ -620,7 +617,7 @@ package body VMS_Conv is\n    begin\n       Put (\"GNAT \");\n       Put (Gnatvsn.Gnat_Version_String);\n-      Put_Line (\" Copyright 1996-2003 Free Software Foundation, Inc.\");\n+      Put_Line (\" Copyright 1996-2004 Free Software Foundation, Inc.\");\n    end Output_Version;\n \n    -----------\n@@ -1049,8 +1046,7 @@ package body VMS_Conv is\n \n             function Get_Arg_End\n               (Argv    : String;\n-               Arg_Idx : Integer)\n-               return    Integer;\n+               Arg_Idx : Integer) return Integer;\n             --  Begins looking at Arg_Idx + 1 and returns the index of the\n             --  last character before a slash or else the index of the last\n             --  character in the string Argv.\n@@ -1061,8 +1057,7 @@ package body VMS_Conv is\n \n             function Get_Arg_End\n               (Argv    : String;\n-               Arg_Idx : Integer)\n-              return    Integer\n+               Arg_Idx : Integer) return Integer\n             is\n             begin\n                for J in Arg_Idx + 1 .. Argv'Last loop\n@@ -1399,8 +1394,8 @@ package body VMS_Conv is\n                                  Arg1_Idx : Integer := Arg'First;\n \n                                  function Get_Arg1_End\n-                                   (Arg  : String; Arg_Idx : Integer)\n-                                       return Integer;\n+                                   (Arg     : String;\n+                                    Arg_Idx : Integer) return Integer;\n                                  --  Begins looking at Arg_Idx + 1 and\n                                  --  returns the index of the last character\n                                  --  before a comma or else the index of the\n@@ -1411,8 +1406,8 @@ package body VMS_Conv is\n                                  ------------------\n \n                                  function Get_Arg1_End\n-                                   (Arg  : String; Arg_Idx : Integer)\n-                                       return Integer\n+                                   (Arg     : String;\n+                                    Arg_Idx : Integer) return Integer\n                                  is\n                                  begin\n                                     for J in Arg_Idx + 1 .. Arg'Last loop"}, {"sha": "3aa3837ab64b7534a24aa27c9c4d84f5f67c3915", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -3577,6 +3577,20 @@ package VMS_Data is\n    --   /COMPILER_QUALIFIERS, /LINKER_QUALIFIERS and /MAKE_QUALIFIERS will be\n    --   passed to any GNAT BIND commands generated by GNAT MAKE.\n \n+   S_Make_Bindprj : aliased constant S := \"/BND_LNK_FULL_PROJECT \"         &\n+                                            \"-B\";\n+   --        /BND_LNK_FULL_PROJECT\n+   --\n+   --   Bind and link all sources of a project, without any consideration\n+   --   to attribute Main, if there is one. This qualifier need to be\n+   --   used in conjunction with the /PROJECT_FILE= qualifier and cannot\n+   --   be used with a main subprogram on the command line or for\n+   --   a library project file. As the binder is invoked with the option\n+   --   meaning \"No Ada main subprogram\", the user must ensure that the\n+   --   proper options are specified to the linker. This qualifier is\n+   --   normally used when the main subprogram is in a foreign language\n+   --   such as C.\n+\n    S_Make_Comp    : aliased constant S := \"/COMPILER_QUALIFIERS=?\"         &\n                                             \"-cargs COMPILE\";\n    --        /COMPILER_QUALIFIERS\n@@ -4343,6 +4357,14 @@ package VMS_Data is\n    --   Write the output into the specified file, overriding any possibly\n    --   existing file.\n \n+   S_Pretty_Formfeed  : aliased constant S := \"/FORM_FEED_AFTER_PRAGMA_PAGE \" &\n+                                              \"-ff\";\n+   --        /FORM_FEED_AFTER_PRAGMA_PAGE\n+   --\n+   --   When there is a pragma Page in the source, insert a Form Feed\n+   --   character immediately after the semicolon that follows the pragma\n+   --   Page.\n+\n    S_Pretty_Indent    : aliased constant S := \"/INDENTATION_LEVEL=#\"       &\n                                                 \"-i#\";\n    --        /INDENTATION_LEVEL=nnn\n@@ -4531,6 +4553,7 @@ package VMS_Data is\n       S_Pretty_Current   'Access,\n       S_Pretty_Dico      'Access,\n       S_Pretty_Forced    'Access,\n+      S_Pretty_Formfeed  'Access,\n       S_Pretty_Indent    'Access,\n       S_Pretty_Keyword   'Access,\n       S_Pretty_Maxlen    'Access,"}, {"sha": "5fc7759276f2dbbba13a4566c20cfc127f216699", "filename": "gcc/ada/vxaddr2line.adb", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fvxaddr2line.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fvxaddr2line.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvxaddr2line.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2002, 2003 Ada Core Technologies, Inc.         --\n+--            Copyright (C) 2002-2003 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,17 +26,17 @@\n \n --  This program is meant to be used with vxworks to compute symbolic\n --  backtraces on the host from non-symbolic backtraces obtained on the target.\n---\n+\n --  The basic idea is to automate the computation of the necessary address\n --  adjustments prior to calling addr2line when the application has only been\n --  partially linked on the host.\n---\n+\n --  Variants for various targets are supported, and the command line should\n --  be like :\n---\n+\n --  <target>-addr2line [-a <target_arch>] <exe_file> <ref_address>\n --                     <backtrace addresses>\n---\n+\n --  Where:\n --  <target_arch> :\n --    selects the target architecture. In the absence of this parameter the\n@@ -45,20 +45,20 @@\n --    Otherwise, the command name will always be of the form\n --    <target>-vxaddr2line where there is no ambiguity on the target's\n --    architecture.\n---\n+\n --  <exe_file> :\n --    The name of the partially linked binary file for the application.\n---\n+\n --  <ref_address> :\n --    Runtime address (on the target) of a reference symbol you choose,\n --    which name shall match the value of the Ref_Symbol variable declared\n --    below. A symbol with a small offset from the beginning of the text\n --    segment is better, so \"adainit\" is a good choice.\n---\n+\n --  <backtrace addresses> :\n --    The call chain addresses you obtained at run time on the target and\n --    for which you want a symbolic association.\n---\n+\n --  TO ADD A NEW ARCHITECTURE add an appropriate value to Architecture type\n --  (in a format <host>_<target>), and then an appropriate value to Config_List\n --  array\n@@ -75,7 +75,7 @@ with GNAT.Regpat; use GNAT.Regpat;\n \n procedure VxAddr2Line is\n \n-   Ref_Symbol : String := \"adainit\";\n+   Ref_Symbol : constant String := \"adainit\";\n    --  This is the name of the reference symbol which runtime address shall\n    --  be provided as the <ref_address> argument.\n \n@@ -171,9 +171,11 @@ procedure VxAddr2Line is\n    -----------------\n \n    procedure Detect_Arch is\n-      Name   : String := Base_Name (Command_Name);\n-      Proc   : String := Name (Name'First .. Index (Name, \"-\") - 1);\n-      Target : String := Name (Name'First .. Index (Name, \"vxaddr2line\") - 1);\n+      Name   : constant String := Base_Name (Command_Name);\n+      Proc   : constant String :=\n+                 Name (Name'First .. Index (Name, \"-\") - 1);\n+      Target : constant String :=\n+                 Name (Name'First .. Index (Name, \"vxaddr2line\") - 1);\n \n    begin\n       Detect_Success := False;\n@@ -231,7 +233,7 @@ procedure VxAddr2Line is\n       Nm_Cmd  : constant String_Access :=\n                   Locate_Exec_On_Path (Arch_List (Cur_Arch).Nm_Binary.all);\n \n-      Nm_Args : Argument_List :=\n+      Nm_Args : constant Argument_List :=\n                   (new String'(\"-P\"),\n                    new String'(Argument (1)));\n \n@@ -260,9 +262,9 @@ procedure VxAddr2Line is\n       --  If we are here, the pattern was matched successfully\n \n       declare\n-         Match_String : String := Expect_Out_Match (Pd);\n-         Matches : Match_Array (0 .. 1);\n-         Value : Integer;\n+         Match_String : constant String := Expect_Out_Match (Pd);\n+         Matches      : Match_Array (0 .. 1);\n+         Value        : Integer;\n \n       begin\n          Match (Reference, Match_String, Matches);\n@@ -303,8 +305,8 @@ procedure VxAddr2Line is\n    ----------------------------\n \n    function Get_Value_From_Hex_Arg (Arg : Natural) return Integer is\n+      Cur_Arg : constant String := Argument (Arg);\n       Offset  : Natural;\n-      Cur_Arg : String := Argument (Arg);\n \n    begin\n       --  Skip \"0x\" prefix if present"}, {"sha": "f24cbacbf276eba8a92560fd1822268e03d9e18e", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -749,17 +749,15 @@ package body Xr_Tabls is\n \n    function Get_File\n      (Decl     : Declaration_Reference;\n-      With_Dir : Boolean := False)\n-      return     String\n+      With_Dir : Boolean := False) return String\n    is\n    begin\n       return Get_File (Decl.Decl.File, With_Dir);\n    end Get_File;\n \n    function Get_File\n      (Ref      : Reference;\n-      With_Dir : Boolean := False)\n-      return     String\n+      With_Dir : Boolean := False) return String\n    is\n    begin\n       return Get_File (Ref.File, With_Dir);\n@@ -768,8 +766,7 @@ package body Xr_Tabls is\n    function Get_File\n      (File     : File_Reference;\n       With_Dir : in Boolean := False;\n-      Strip    : Natural    := 0)\n-      return     String\n+      Strip    : Natural    := 0) return String\n    is\n       Tmp : GNAT.OS_Lib.String_Access;\n "}, {"sha": "2b19944e7b453b7bee81c57d21cf3223086ce600", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 1998-2002 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2003 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -201,29 +201,29 @@ package Xr_Tabls is\n \n    function Get_File\n      (Decl     : Declaration_Reference;\n-      With_Dir : Boolean := False)\n-      return     String;\n+      With_Dir : Boolean := False) return String;\n+   pragma Inline (Get_File);\n    --  Extract column number or file name from reference\n \n    function Get_File\n      (Ref      : Reference;\n-      With_Dir : Boolean := False)\n-      return     String;\n+      With_Dir : Boolean := False) return String;\n    pragma Inline (Get_File);\n \n    function Get_File\n      (File     : File_Reference;\n       With_Dir : Boolean := False;\n-      Strip    : Natural := 0)\n-      return     String;\n+      Strip    : Natural := 0) return String;\n    --  Returns the file name (and its directory if With_Dir is True or the\n    --  user has used the -f switch on the command line. If Strip is not 0,\n    --  then the last Strip-th \"-...\" substrings are removed first. For\n    --  instance, with Strip=2, a file name \"parent-child1-child2-child3.ali\"\n    --  would be returned as \"parent-child1.ali\". This is used when looking\n    --  for the ALI file to use for a package, since for separates with have\n    --  to use the parent's ALI. The null string is returned if there is no\n-   --  such parent unit\n+   --  such parent unit.\n+   --\n+   --  Note that this version of Get_File is not inlined\n \n    function Get_File_Ref (Ref : Reference)              return File_Reference;\n    function Get_Line     (Decl : Declaration_Reference) return String;\n@@ -383,7 +383,6 @@ private\n \n    pragma Inline (Get_Column);\n    pragma Inline (Get_Emit_Warning);\n-   pragma Inline (Get_File);\n    pragma Inline (Get_File_Ref);\n    pragma Inline (Get_Line);\n    pragma Inline (Get_Symbol);"}, {"sha": "5b953e441e1cfcb5c03c621ab677c454a8387999", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1417d44eb5b73dcb10ce26ecc779b24e8d00d/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=91b1417d44eb5b73dcb10ce26ecc779b24e8d00d", "patch": "@@ -142,7 +142,6 @@ package body Xref_Lib is\n       Line_Num    : Natural := 0;\n       Col_Num     : Natural := 0;\n       File_Ref    : File_Reference := Empty_File;\n-      Has_Pattern : Boolean := False;\n \n    begin\n       --  Find the end of the first item in Entity (pattern or file?)\n@@ -224,8 +223,7 @@ package body Xref_Lib is\n                end;\n          end;\n \n-         File_Start  := File_Start + 1;\n-         Has_Pattern := True;\n+         File_Start := File_Start + 1;\n       end if;\n \n       --  Parse the file name\n@@ -291,6 +289,8 @@ package body Xref_Lib is\n \n    procedure Add_Xref_File (File : String) is\n       File_Ref : File_Reference := Empty_File;\n+      pragma Unreferenced (File_Ref);\n+\n       Iterator : Expansion_Iterator;\n \n       procedure Add_Xref_File_Internal (File : String);\n@@ -307,17 +307,16 @@ package body Xref_Lib is\n \n          if Tail (File, 4) = \".ali\" then\n             File_Ref := Add_To_Xref_File\n-              (File, Visited => False, Emit_Warning => True);\n+                          (File, Visited => False, Emit_Warning => True);\n \n          --  Normal non-ali file case\n \n          else\n             File_Ref := Add_To_Xref_File (File, Visited => True);\n \n             File_Ref := Add_To_Xref_File\n-              (ALI_File_Name (File),\n-               Visited => False,\n-               Emit_Warning => True);\n+                         (ALI_File_Name (File),\n+                          Visited => False, Emit_Warning => True);\n          end if;\n       end Add_Xref_File_Internal;\n \n@@ -404,10 +403,12 @@ package body Xref_Lib is\n    --------------------\n \n    procedure Find_ALI_Files is\n-      My_Dir       : Rec_DIR;\n-      Dir_Ent      : File_Name_String;\n-      Last         : Natural;\n-      File_Ref     : File_Reference;\n+      My_Dir  : Rec_DIR;\n+      Dir_Ent : File_Name_String;\n+      Last    : Natural;\n+\n+      File_Ref : File_Reference;\n+      pragma Unreferenced (File_Ref);\n \n       function Open_Next_Dir return Boolean;\n       --  Tries to open the next object directory, and return False if\n@@ -568,20 +569,21 @@ package body Xref_Lib is\n       Token            : Positive;\n       Ptr              : Positive := Ali'First;\n       Num_Dependencies : Natural  := 0;\n-      File_Ref         : File_Reference;\n       File_Start       : Positive;\n       File_End         : Positive;\n       Gnatchop_Offset  : Integer;\n       Gnatchop_Name    : Positive;\n \n+      File_Ref : File_Reference;\n+      pragma Unreferenced (File_Ref);\n+\n    begin\n       --  Read all the lines possibly processing with-clauses and dependency\n       --  information and exit on finding the first Xref line.\n       --  A fall-through of the loop means that there is no xref information\n       --  which is an error condition.\n \n       while Ali (Ptr) /= EOF loop\n-\n          if D_Lines and then Ali (Ptr) = 'D' then\n \n             --  Found dependency information. Format looks like:\n@@ -636,8 +638,8 @@ package body Xref_Lib is\n             Parse_Token (Ali, Ptr, Token);\n             Parse_Token (Ali, Ptr, Token);\n \n-            File_Ref := Add_To_Xref_File\n-              (Ali (Token .. Ptr - 1), Visited => False);\n+            File_Ref :=\n+              Add_To_Xref_File (Ali (Token .. Ptr - 1), Visited => False);\n \n          elsif Ali (Ptr) = 'X' then\n \n@@ -763,7 +765,6 @@ package body Xref_Lib is\n          E_Line : Natural;    --  Line number of current entity\n          E_Col  : Natural;    --  Column number of current entity\n          E_Name : Positive;   --  Pointer to begin of entity name\n-         E_Type : Character;  --  Type of current entity\n \n       begin\n          --  Look for the X lines corresponding to unit Eun\n@@ -783,7 +784,6 @@ package body Xref_Lib is\n \n          loop\n             Parse_Number (Ali, Ptr, E_Line);\n-            E_Type := Ali (Ptr);\n             exit when Ali (Ptr) = EOF;\n             Ptr := Ptr + 1;\n             Parse_Number (Ali, Ptr, E_Col);\n@@ -885,7 +885,6 @@ package body Xref_Lib is\n             Parse_Derived_Info : declare\n                P_Line   : Natural;          --  parent entity line\n                P_Column : Natural;          --  parent entity column\n-               P_Type   : Character;        --  parent entity type\n                P_Eun    : Positive;         --  parent entity file number\n \n             begin\n@@ -913,7 +912,6 @@ package body Xref_Lib is\n \n                --  Then parse the type and column number\n \n-               P_Type := Ali (Ptr);\n                Ptr := Ptr + 1;\n                Parse_Number (Ali, Ptr, P_Column);\n \n@@ -1034,9 +1032,9 @@ package body Xref_Lib is\n \n       if Wide_Search then\n          declare\n-            File_Ref     : File_Reference;\n-            File_Name    : constant String :=\n-                             Get_Gnatchop_File (File.X_File);\n+            File_Ref : File_Reference;\n+            pragma Unreferenced (File_Ref);\n+            File_Name : constant String := Get_Gnatchop_File (File.X_File);\n          begin\n             File_Ref := Add_To_Xref_File (ALI_File_Name (File_Name), False);\n          end;"}]}