{"sha": "83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmZDVlNzNiM2MxNjI5NmUwZDdiYTU0ZjZjNTQ3ZTAxYzdlYWU3Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-12-14T20:41:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-12-14T20:41:52Z"}, "message": "PR libstdc++/68519 use native duration to avoid rounding errors\n\n\tPR libstdc++/68519\n\t* include/std/condition_variable (condition_variable::wait_for):\n\tConvert duration to native clock's duration before addition.\n\t* testsuite/30_threads/condition_variable/members/68519.cc: New test.\n\nFrom-SVN: r255665", "tree": {"sha": "5d13ba171c0b6c8f2285e1c19c26ab9871b9f590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d13ba171c0b6c8f2285e1c19c26ab9871b9f590"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5f6f04c914e2742aae068bcc4872af694200681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f6f04c914e2742aae068bcc4872af694200681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f6f04c914e2742aae068bcc4872af694200681"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "9f2eff116237565fa7d9495a170dedc71ff1260e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "patch": "@@ -1,5 +1,10 @@\n 2017-12-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/68519\n+\t* include/std/condition_variable (condition_variable::wait_for):\n+\tConvert duration to native clock's duration before addition.\n+\t* testsuite/30_threads/condition_variable/members/68519.cc: New test.\n+\n \tPR libstdc++/83427\n \t* include/bits/refwrap.h (_Maybe_unary_or_binary_function): Move here\n \tfrom <bits/std_function.h>."}, {"sha": "6d20d365531b5f8a3b89737548b47c758815cf0c", "filename": "libstdc++-v3/include/std/condition_variable", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable?ref=83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "patch": "@@ -135,14 +135,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       cv_status\n       wait_for(unique_lock<mutex>& __lock,\n \t       const chrono::duration<_Rep, _Period>& __rtime)\n-      { return wait_until(__lock, __clock_t::now() + __rtime); }\n+      {\n+\tusing __dur = typename __clock_t::duration;\n+\tauto __reltime = chrono::duration_cast<__dur>(__rtime);\n+\tif (__reltime < __rtime)\n+\t  ++__reltime;\n+\treturn wait_until(__lock, __clock_t::now() + __reltime);\n+      }\n \n     template<typename _Rep, typename _Period, typename _Predicate>\n       bool\n       wait_for(unique_lock<mutex>& __lock,\n \t       const chrono::duration<_Rep, _Period>& __rtime,\n \t       _Predicate __p)\n-      { return wait_until(__lock, __clock_t::now() + __rtime, std::move(__p)); }\n+      {\n+\tusing __dur = typename __clock_t::duration;\n+\tauto __reltime = chrono::duration_cast<__dur>(__rtime);\n+\tif (__reltime < __rtime)\n+\t  ++__reltime;\n+\treturn wait_until(__lock, __clock_t::now() + __reltime, std::move(__p));\n+      }\n \n     native_handle_type\n     native_handle()"}, {"sha": "71c1d29e2312b4cab5306e3fda4dcb31170b01a4", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/members/68519.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F68519.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F68519.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F68519.cc?ref=83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+// { dg-options \"-pthread\"  }\n+// { dg-require-effective-target c++11 }\n+// { dg-require-effective-target pthread }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+#include <condition_variable>\n+#include <testsuite_hooks.h>\n+\n+// PR libstdc++/68519\n+\n+bool val = false;\n+std::mutex mx;\n+std::condition_variable cv;\n+\n+void\n+test01()\n+{\n+  for (int i = 0; i < 3; ++i)\n+  {\n+    std::unique_lock<std::mutex> l(mx);\n+    auto start = std::chrono::system_clock::now();\n+    cv.wait_for(l, std::chrono::duration<float>(1), [] { return val; });\n+    auto t = std::chrono::system_clock::now();\n+    VERIFY( (t - start) >= std::chrono::seconds(1) );\n+  }\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}