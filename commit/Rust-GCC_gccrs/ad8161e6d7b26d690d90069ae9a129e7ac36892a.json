{"sha": "ad8161e6d7b26d690d90069ae9a129e7ac36892a", "node_id": "C_kwDOANBUbNoAKGFkODE2MWU2ZDdiMjZkNjkwZDkwMDY5YWU5YTEyOWU3YWMzNjg5MmE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-04-13T17:23:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-04-14T00:22:57Z"}, "message": "c++: NRV and ref-extended temps [PR101442]\n\nThis issue goes back to r83221, where the cleanup for extended ref temps\nchanged from being unconditional to being tied to the declaration they\nformed part of the initializer for.\n\nThe named return value optimization changes the cleanup for the NRV variable\nto only run on the EH path; we don't want that change to affect temporary\ncleanups.  The perform_member_init change isn't necessary (there 'decl' is a\nCOMPONENT_REF), it's just for consistency.\n\n\tPR c++/101442\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (cp_finish_decl): Don't pass decl to push_cleanup.\n\t* init.cc (perform_member_init): Likewise.\n\t* semantics.cc (push_cleanup): Adjust comment.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/initlist-nrv1.C: New test.", "tree": {"sha": "8397db198a89d837de235775f3b6223a3fd3a32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8397db198a89d837de235775f3b6223a3fd3a32b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad8161e6d7b26d690d90069ae9a129e7ac36892a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8161e6d7b26d690d90069ae9a129e7ac36892a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad8161e6d7b26d690d90069ae9a129e7ac36892a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8161e6d7b26d690d90069ae9a129e7ac36892a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019d6d4149ee97d55ce9efe4e5e470d38130cdeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019d6d4149ee97d55ce9efe4e5e470d38130cdeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019d6d4149ee97d55ce9efe4e5e470d38130cdeb"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "d51fd75b0032c28c937744bb996a372caa06d89e", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=ad8161e6d7b26d690d90069ae9a129e7ac36892a", "patch": "@@ -8554,7 +8554,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n     {\n       for (tree t : *cleanups)\n \t{\n-\t  push_cleanup (decl, t, false);\n+\t  push_cleanup (NULL_TREE, t, false);\n \t  /* As in initialize_local_var.  */\n \t  wrap_temporary_cleanups (init, t);\n \t}"}, {"sha": "75ab965a2184932a5999ed9c74679ba08d5f644d", "filename": "gcc/cp/init.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Fcp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Fcp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.cc?ref=ad8161e6d7b26d690d90069ae9a129e7ac36892a", "patch": "@@ -1066,7 +1066,7 @@ perform_member_init (tree member, tree init, hash_set<tree> &uninitialized)\n       init = build2 (INIT_EXPR, type, decl, init);\n       finish_expr_stmt (init);\n       FOR_EACH_VEC_ELT (*cleanups, i, t)\n-\tpush_cleanup (decl, t, false);\n+\tpush_cleanup (NULL_TREE, t, false);\n     }\n   else if (type_build_ctor_call (type)\n \t   || (init && CLASS_TYPE_P (strip_array_types (type))))"}, {"sha": "f5ec808b1bc1882ce31788e24d0b1a01af64c626", "filename": "gcc/cp/semantics.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Fcp%2Fsemantics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Fcp%2Fsemantics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.cc?ref=ad8161e6d7b26d690d90069ae9a129e7ac36892a", "patch": "@@ -666,7 +666,8 @@ do_pushlevel (scope_kind sk)\n \n /* Queue a cleanup.  CLEANUP is an expression/statement to be executed\n    when the current scope is exited.  EH_ONLY is true when this is not\n-   meant to apply to normal control flow transfer.  */\n+   meant to apply to normal control flow transfer.  DECL is the VAR_DECL\n+   being cleaned up, if any, or null for temporaries or subobjects.  */\n \n void\n push_cleanup (tree decl, tree cleanup, bool eh_only)"}, {"sha": "e44dbecfece4ffbbf8552c65d3669ed62fba0dac", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-nrv1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-nrv1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8161e6d7b26d690d90069ae9a129e7ac36892a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-nrv1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-nrv1.C?ref=ad8161e6d7b26d690d90069ae9a129e7ac36892a", "patch": "@@ -0,0 +1,34 @@\n+// PR c++/101442\n+// { dg-do run { target c++11 } }\n+\n+bool destroyed = false;\n+\n+struct A\n+{\n+  A() {}\n+  A(const A &) = delete;\n+  A &operator=(const A &) = delete;\n+  ~A() {destroyed = true;}\n+};\n+\n+struct B\n+{\n+  const A &a;\n+  struct string {\n+    string(const char*) { }\n+    ~string() { }\n+  } s;\n+};\n+\n+B foo()\n+{\n+  B ret{ A{}, \"\" };\n+  return ret;\n+}\n+\n+int main()\n+{\n+  B b = foo();\n+  if (!destroyed)\n+    __builtin_abort();\n+}"}]}