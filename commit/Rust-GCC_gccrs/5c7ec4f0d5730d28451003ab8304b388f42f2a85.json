{"sha": "5c7ec4f0d5730d28451003ab8304b388f42f2a85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3ZWM0ZjBkNTczMGQyODQ1MTAwM2FiODMwNGIzODhmNDJmMmE4NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-04-26T15:28:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-04-26T15:28:14Z"}, "message": "re PR tree-optimization/31703 (Gcc 4.3 revision 124101 failed to compile gcc 3.2)\n\n2007-04-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/31703\n\t* tree-ssa-loop-im.c (rewrite_bittest): Make sure to use\n\tthe right type for the target of the bittest.\n\n\t* gcc.c-torture/compile/pr31703.c: New testcase.\n\t* gcc.dg/tree-ssa/ssa-lim-1.c: Adjust pattern.\n\t* gcc.dg/tree-ssa/ssa-lim-2.c: Likewise.\n\nFrom-SVN: r124190", "tree": {"sha": "ba24980895b374e7263f14892f3b83578d5793d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba24980895b374e7263f14892f3b83578d5793d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c7ec4f0d5730d28451003ab8304b388f42f2a85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7ec4f0d5730d28451003ab8304b388f42f2a85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7ec4f0d5730d28451003ab8304b388f42f2a85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7ec4f0d5730d28451003ab8304b388f42f2a85/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8931743ffe7d282a25c3d05a7493d6712f327457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8931743ffe7d282a25c3d05a7493d6712f327457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8931743ffe7d282a25c3d05a7493d6712f327457"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "5e7988d674564e750d3cc268eb6380f2b49afa80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c7ec4f0d5730d28451003ab8304b388f42f2a85", "patch": "@@ -1,3 +1,9 @@\n+2007-04-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31703\n+\t* tree-ssa-loop-im.c (rewrite_bittest): Make sure to use\n+\tthe right type for the target of the bittest.\n+\n 2007-04-26  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/i386/vx-common.h (RETURN_IN_MEMORY): Use"}, {"sha": "b2db604b467eb1e40bdb98c1665489073b099233", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c7ec4f0d5730d28451003ab8304b388f42f2a85", "patch": "@@ -1,3 +1,10 @@\n+2007-04-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31703\n+\t* gcc.c-torture/compile/pr31703.c: New testcase.\n+\t* gcc.dg/tree-ssa/ssa-lim-1.c: Adjust pattern.\n+\t* gcc.dg/tree-ssa/ssa-lim-2.c: Likewise.\n+\n 2007-04-26  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \n \t* gfortran.dg/open_errors.f90: Added if statements checking"}, {"sha": "e463205a23b1286202fe6ca3b791fa780cc92455", "filename": "gcc/testsuite/gcc.c-torture/compile/pr31703.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr31703.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr31703.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr31703.c?ref=5c7ec4f0d5730d28451003ab8304b388f42f2a85", "patch": "@@ -0,0 +1,11 @@\n+typedef unsigned long long HARD_REG_ELT_TYPE;\n+static HARD_REG_ELT_TYPE reload_reg_used_in_output_addr[30];\n+int reload_reg_reaches_end_p (unsigned int regno, int opnum)\n+{\n+    int i;\n+    for (i = opnum + 1; i < opnum; i++)\n+        if (reload_reg_used_in_output_addr[i]\n+            & ((HARD_REG_ELT_TYPE)1 << regno))\n+            return 0;\n+}\n+"}, {"sha": "db36ff02cb2cae1a88aa8e62716587351350d08a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-1.c?ref=5c7ec4f0d5730d28451003ab8304b388f42f2a85", "patch": "@@ -18,5 +18,5 @@ quantum_toffoli (int control1, int control2, int target,\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"shifttmp\" 6 \"lim\" } } */\n+/* { dg-final { scan-tree-dump-times \"1 <<\" 3 \"lim\" } } */\n /* { dg-final { cleanup-tree-dump \"lim\" } } */"}, {"sha": "7b18b1c05505b161c8e81360b31a34746c37f69d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-2.c?ref=5c7ec4f0d5730d28451003ab8304b388f42f2a85", "patch": "@@ -18,5 +18,5 @@ int size)\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"shifttmp\" 6 \"lim\" } } */\n+/* { dg-final { scan-tree-dump-times \"1 <<\" 3 \"lim\" } } */\n /* { dg-final { cleanup-tree-dump \"lim\" } } */"}, {"sha": "1e36fae96bd70d4fff317cdabbd80a5ff9af8db2", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7ec4f0d5730d28451003ab8304b388f42f2a85/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=5c7ec4f0d5730d28451003ab8304b388f42f2a85", "patch": "@@ -618,7 +618,7 @@ rewrite_reciprocal (block_stmt_iterator *bsi)\n static tree\n rewrite_bittest (block_stmt_iterator *bsi)\n {\n-  tree stmt, lhs, rhs, var, name, stmt1, stmt2, t;\n+  tree stmt, lhs, rhs, var, name, use_stmt, stmt1, stmt2, t;\n   use_operand_p use;\n \n   stmt = bsi_stmt (*bsi);\n@@ -627,10 +627,10 @@ rewrite_bittest (block_stmt_iterator *bsi)\n \n   /* Verify that the single use of lhs is a comparison against zero.  */\n   if (TREE_CODE (lhs) != SSA_NAME\n-      || !single_imm_use (lhs, &use, &stmt1)\n-      || TREE_CODE (stmt1) != COND_EXPR)\n+      || !single_imm_use (lhs, &use, &use_stmt)\n+      || TREE_CODE (use_stmt) != COND_EXPR)\n     return stmt;\n-  t = COND_EXPR_COND (stmt1);\n+  t = COND_EXPR_COND (use_stmt);\n   if (TREE_OPERAND (t, 0) != lhs\n       || (TREE_CODE (t) != NE_EXPR\n \t  && TREE_CODE (t) != EQ_EXPR)\n@@ -680,11 +680,13 @@ rewrite_bittest (block_stmt_iterator *bsi)\n \n       /* A & (1 << B) */\n       t = fold_build2 (BIT_AND_EXPR, TREE_TYPE (a), a, name);\n-      stmt2 = build_gimple_modify_stmt (lhs, t);\n+      stmt2 = build_gimple_modify_stmt (var, t);\n+      name = make_ssa_name (var, stmt2);\n+      GIMPLE_STMT_OPERAND (stmt2, 0) = name;\n+      SET_USE (use, name);\n \n       bsi_insert_before (bsi, stmt1, BSI_SAME_STMT);\n       bsi_replace (bsi, stmt2, true);\n-      SSA_NAME_DEF_STMT (lhs) = stmt2;\n \n       return stmt1;\n     }"}]}