{"sha": "cde87638bf5cf6aafffb590986b6a890da0ba06c", "node_id": "C_kwDOANBUbNoAKGNkZTg3NjM4YmY1Y2Y2YWFmZmZiNTkwOTg2YjZhODkwZGEwYmEwNmM", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-11T15:42:23Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-12-02T13:13:09Z"}, "message": "Implement -fprofile-prefix-map.\n\n\tPR gcov-profile/96092\n\ngcc/ChangeLog:\n\n\t* common.opt: New option.\n\t* coverage.c (coverage_begin_function): Emit filename with\n\tremap_profile_filename.\n\t* doc/invoke.texi: Document the new option.\n\t* file-prefix-map.c (add_profile_prefix_map): New.\n\t(remap_profile_filename): Likewise.\n\t* file-prefix-map.h (add_profile_prefix_map): Likewise.\n\t(remap_profile_filename): Likewise.\n\t* lto-opts.c (lto_write_options): Handle\n\tOPT_fprofile_prefix_map_.\n\t* opts-global.c (handle_common_deferred_options): Likewise.\n\t* opts.c (common_handle_option): Likewise.\n\t(gen_command_line_string): Likewise.\n\t* profile.c (output_location): Emit filename with\n\tremap_profile_filename.", "tree": {"sha": "992cb983e1e788230e477b16112c83026c6d57f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/992cb983e1e788230e477b16112c83026c6d57f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cde87638bf5cf6aafffb590986b6a890da0ba06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde87638bf5cf6aafffb590986b6a890da0ba06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde87638bf5cf6aafffb590986b6a890da0ba06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde87638bf5cf6aafffb590986b6a890da0ba06c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f43a8a08053a871e785e2ebc80383e0849efb6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f43a8a08053a871e785e2ebc80383e0849efb6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f43a8a08053a871e785e2ebc80383e0849efb6f"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "445a53a265ca4bc3910691a7387cd79f6306ce1e", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -2327,6 +2327,10 @@ fprofile-prefix-path=\n Common Joined RejectNegative Var(profile_prefix_path)\n Remove prefix from absolute path before mangling name for -fprofile-generate= and -fprofile-use=.\n \n+fprofile-prefix-map=\n+Common Joined RejectNegative Var(common_deferred_options) Defer\n+-fprofile-prefix-map=<old>=<new>\tMap one directory name to another in GCOV coverage result.\n+\n fprofile-generate\n Common\n Enable common options for generating profile info for profile feedback directed optimizations."}, {"sha": "7f8b532cb5237a97fddf5e8a4d6f7eb1c6d24282", "filename": "gcc/coverage.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"profile.h\"\n #include \"diagnostic.h\"\n #include \"varasm.h\"\n+#include \"file-prefix-map.h\"\n \n #include \"gcov-io.c\"\n \n@@ -646,7 +647,7 @@ coverage_begin_function (unsigned lineno_checksum, unsigned cfg_checksum)\n   gcov_write_unsigned (DECL_ARTIFICIAL (current_function_decl)\n \t\t       && !DECL_FUNCTION_VERSIONED (current_function_decl)\n \t\t       && !DECL_LAMBDA_FUNCTION_P (current_function_decl));\n-  gcov_write_filename (startloc.file);\n+  gcov_write_filename (remap_profile_filename (startloc.file));\n   gcov_write_unsigned (startloc.line);\n   gcov_write_unsigned (startloc.column);\n "}, {"sha": "6111a6b67944298984c4cffb197ce362c625fe16", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -613,7 +613,8 @@ Objective-C and Objective-C++ Dialects}.\n -fvtv-counts  -fvtv-debug @gol\n -finstrument-functions @gol\n -finstrument-functions-exclude-function-list=@var{sym},@var{sym},@dots{} @gol\n--finstrument-functions-exclude-file-list=@var{file},@var{file},@dots{}}\n+-finstrument-functions-exclude-file-list=@var{file},@var{file},@dots{}} @gol\n+-fprofile-prefix-map=@var{old}=@var{new}\n \n @item Preprocessor Options\n @xref{Preprocessor Options,,Options Controlling the Preprocessor}.\n@@ -2182,7 +2183,8 @@ files resided in directory @file{@var{new}} instead.  Specifying this\n option is equivalent to specifying all the individual\n @option{-f*-prefix-map} options.  This can be used to make reproducible\n builds that are location independent.  See also\n-@option{-fmacro-prefix-map} and @option{-fdebug-prefix-map}.\n+@option{-fmacro-prefix-map}, @option{-fdebug-prefix-map} and\n+@option{-fprofile-prefix-map}.\n \n @item -fplugin=@var{name}.so\n @opindex fplugin\n@@ -15273,6 +15275,14 @@ In such setups @option{-fprofile-prefix-path=}@var{path} with @var{path}\n pointing to the base directory of the build can be used to strip the irrelevant\n part of the path and keep all file names relative to the main build directory.\n \n+@item -fprofile-prefix-map=@var{old}=@var{new}\n+@opindex fprofile-prefix-map\n+When compiling files residing in directory @file{@var{old}}, record\n+profiling information (with @option{--coverage})\n+describing them as if the files resided in\n+directory @file{@var{new}} instead.\n+See also @option{-ffile-prefix-map}.\n+\n @item -fprofile-update=@var{method}\n @opindex fprofile-update\n "}, {"sha": "290b4b2da331cddebcf0ac2ed9ff3831c9505d4b", "filename": "gcc/file-prefix-map.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Ffile-prefix-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Ffile-prefix-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffile-prefix-map.c?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -92,6 +92,7 @@ remap_filename (file_prefix_map *maps, const char *filename)\n /* Linked lists of file_prefix_map structures.  */\n static file_prefix_map *macro_prefix_maps; /* -fmacro-prefix-map  */\n static file_prefix_map *debug_prefix_maps; /* -fdebug-prefix-map  */\n+static file_prefix_map *profile_prefix_maps; /* -fprofile-prefix-map  */\n \n /* Record a file prefix mapping for -fmacro-prefix-map.  */\n void\n@@ -113,6 +114,14 @@ add_file_prefix_map (const char *arg)\n {\n   add_prefix_map (macro_prefix_maps, arg, \"-ffile-prefix-map\");\n   add_prefix_map (debug_prefix_maps, arg, \"-ffile-prefix-map\");\n+  add_prefix_map (profile_prefix_maps, arg, \"-ffile-prefix-map\");\n+}\n+\n+/* Record a file prefix mapping for -fprofile-prefix-map.  */\n+void\n+add_profile_prefix_map (const char *arg)\n+{\n+  add_prefix_map (profile_prefix_maps, arg, \"-fprofile-prefix-map\");\n }\n \n /* Remap using -fmacro-prefix-map.  Return the GC-allocated new name\n@@ -130,3 +139,11 @@ remap_debug_filename (const char *filename)\n {\n   return remap_filename (debug_prefix_maps, filename);\n }\n+\n+/* Remap using -fprofile-prefix-map.  Return the GC-allocated new name\n+   corresponding to FILENAME or FILENAME if no remapping was performed.  */\n+const char *\n+remap_profile_filename (const char *filename)\n+{\n+  return remap_filename (profile_prefix_maps, filename);\n+}"}, {"sha": "3a2b0605ae09ebf1d3c68f56068e27ed252e4b17", "filename": "gcc/file-prefix-map.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Ffile-prefix-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Ffile-prefix-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffile-prefix-map.h?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -21,8 +21,10 @@\n void add_macro_prefix_map (const char *);\n void add_debug_prefix_map (const char *);\n void add_file_prefix_map (const char *);\n+void add_profile_prefix_map (const char *);\n \n const char *remap_macro_filename (const char *);\n const char *remap_debug_filename (const char *);\n+const char *remap_profile_filename (const char *);\n \n #endif /* !GCC_FILE_PREFIX_MAP_H  */"}, {"sha": "30c10136f312ebf311ef128e803c55c6e11f2634", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -149,6 +149,7 @@ lto_write_options (void)\n \tcase OPT_fdebug_prefix_map_:\n \tcase OPT_ffile_prefix_map_:\n \tcase OPT_fmacro_prefix_map_:\n+\tcase OPT_fprofile_prefix_map_:\n \t  continue;\n \n \tdefault:"}, {"sha": "d4fde39b9bdeb1ad52f25cf61bac55900ddeb33a", "filename": "gcc/opts-global.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -386,6 +386,10 @@ handle_common_deferred_options (void)\n \t  add_file_prefix_map (opt->arg);\n \t  break;\n \n+\tcase OPT_fprofile_prefix_map_:\n+\t  add_profile_prefix_map (opt->arg);\n+\t  break;\n+\n \tcase OPT_fdump_:\n \t  g->get_dumps ()->dump_switch_p (opt->arg);\n \t  break;"}, {"sha": "870cceca85a26db655c34dd3dac49227b656ee02", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -2685,6 +2685,7 @@ common_handle_option (struct gcc_options *opts,\n \n     case OPT_fdebug_prefix_map_:\n     case OPT_ffile_prefix_map_:\n+    case OPT_fprofile_prefix_map_:\n       /* Deferred.  */\n       break;\n \n@@ -3598,6 +3599,7 @@ gen_command_line_string (cl_decoded_option *options,\n       case OPT_fdebug_prefix_map_:\n       case OPT_fmacro_prefix_map_:\n       case OPT_ffile_prefix_map_:\n+      case OPT_fprofile_prefix_map_:\n       case OPT_fcompare_debug:\n       case OPT_fchecking:\n       case OPT_fchecking_:"}, {"sha": "d4103058fcd59c3eafe5ca2f76f9f1d179a42010", "filename": "gcc/profile.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde87638bf5cf6aafffb590986b6a890da0ba06c/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=cde87638bf5cf6aafffb590986b6a890da0ba06c", "patch": "@@ -65,6 +65,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"sreal.h\"\n+#include \"file-prefix-map.h\"\n \n #include \"profile.h\"\n \n@@ -1060,6 +1061,9 @@ output_location (hash_set<location_triplet_hash> *streamed_locations,\n   static int prev_line;\n   bool name_differs, line_differs;\n \n+  if (file_name != NULL)\n+    file_name = remap_profile_filename (file_name);\n+\n   location_triplet triplet;\n   triplet.filename = file_name;\n   triplet.lineno = line;"}]}