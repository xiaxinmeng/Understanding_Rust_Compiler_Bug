{"sha": "8767c8949a91f202f503b481aa4343f3b3fdf938", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2N2M4OTQ5YTkxZjIwMmY1MDNiNDgxYWE0MzQzZjNiM2ZkZjkzOA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2000-12-13T19:20:14Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-12-13T19:20:14Z"}, "message": "cppfiles.c (read_name_map): Return null if open () fails.\n\n        * cppfiles.c (read_name_map): Return null if open () fails.\n        (remap_filename): Simplify logic.  Add ICE if it doesn't work\n        as expected. Perform secondary lookup attempt on base filename\n        only.\n\nFrom-SVN: r38227", "tree": {"sha": "bb5722a21adde69db041a7e6b91d7f8c478edb18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb5722a21adde69db041a7e6b91d7f8c478edb18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8767c8949a91f202f503b481aa4343f3b3fdf938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8767c8949a91f202f503b481aa4343f3b3fdf938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8767c8949a91f202f503b481aa4343f3b3fdf938", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8767c8949a91f202f503b481aa4343f3b3fdf938/comments", "author": null, "committer": null, "parents": [{"sha": "a4377974da3e1e70fe9efcf160c028492828e596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4377974da3e1e70fe9efcf160c028492828e596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4377974da3e1e70fe9efcf160c028492828e596"}], "stats": {"total": 57, "additions": 29, "deletions": 28}, "files": [{"sha": "aa8d3ac4ceb1dbb1a8b8b1725b563b79de61a2e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8767c8949a91f202f503b481aa4343f3b3fdf938/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8767c8949a91f202f503b481aa4343f3b3fdf938/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8767c8949a91f202f503b481aa4343f3b3fdf938", "patch": "@@ -1,3 +1,10 @@\n+2000-12-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * cppfiles.c (read_name_map): Return null if open () fails.\n+        (remap_filename): Simplify logic.  Add ICE if it doesn't work\n+        as expected. Perform secondary lookup attempt on base filename\n+        only.\n+\n Wed Dec 13 19:48:04 MET 2000  Jan hubicka  <jh@suse.cz>\n \n \t* flow.c (notice_stack_pointer_modification_1): Notice midifications"}, {"sha": "cc001dbc01581feb4a9fd4e41375ffa1b4f64a16", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 22, "deletions": 28, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8767c8949a91f202f503b481aa4343f3b3fdf938/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8767c8949a91f202f503b481aa4343f3b3fdf938/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=8767c8949a91f202f503b481aa4343f3b3fdf938", "patch": "@@ -859,6 +859,7 @@ read_name_map (pfile, dirname)\n   char *name;\n   FILE *f;\n \n+  /* Check the cache of directories, and mappings in their remap file.  */\n   for (map_list_ptr = CPP_OPTION (pfile, map_list); map_list_ptr;\n        map_list_ptr = map_list_ptr->map_list_next)\n     if (! strcmp (map_list_ptr->map_list_name, dirname))\n@@ -867,6 +868,8 @@ read_name_map (pfile, dirname)\n   map_list_ptr = ((struct file_name_map_list *)\n \t\t  xmalloc (sizeof (struct file_name_map_list)));\n   map_list_ptr->map_list_name = xstrdup (dirname);\n+\n+  /* The end of the list ends in NULL.  */\n   map_list_ptr->map_list_map = NULL;\n \n   name = (char *) alloca (strlen (dirname) + strlen (FILE_NAME_MAP_FILE) + 2);\n@@ -875,9 +878,9 @@ read_name_map (pfile, dirname)\n     strcat (name, \"/\");\n   strcat (name, FILE_NAME_MAP_FILE);\n   f = fopen (name, \"r\");\n-  if (!f)\n-    map_list_ptr->map_list_map = (struct file_name_map *)-1;\n-  else\n+\n+  /* Silently return NULL if we cannot open.  */\n+  if (f)\n     {\n       int ch;\n       int dirlen = strlen (dirname);\n@@ -920,6 +923,7 @@ read_name_map (pfile, dirname)\n       fclose (f);\n     }\n   \n+  /* Add this information to the cache.  */\n   map_list_ptr->map_list_next = CPP_OPTION (pfile, map_list);\n   CPP_OPTION (pfile, map_list) = map_list_ptr;\n \n@@ -935,15 +939,15 @@ remap_filename (pfile, name, loc)\n      struct file_name_list *loc;\n {\n   struct file_name_map *map;\n-  const char *from, *p, *dir;\n+  const char *from, *p;\n+  char *dir;\n \n   if (! loc->name_map)\n-    loc->name_map = read_name_map (pfile,\n-\t\t\t\t   loc->name\n-\t\t\t\t   ? loc->name : \".\");\n-\n-  if (loc->name_map == (struct file_name_map *)-1)\n-    return name;\n+    {\n+      loc->name_map = read_name_map (pfile, loc->name ? loc->name : \".\");\n+      if (! loc->name_map)\n+\treturn name;\n+    }\n   \n   from = name + strlen (loc->name) + 1;\n   \n@@ -957,29 +961,19 @@ remap_filename (pfile, name, loc)\n      /usr/include/sys/header.gcc.  */\n   p = strrchr (name, '/');\n   if (!p)\n-    p = name;\n-  if (loc && loc->name\n-      && strlen (loc->name) == (size_t) (p - name)\n-      && !strncmp (loc->name, name, p - name))\n-    /* FILENAME is in SEARCHPTR, which we've already checked.  */\n     return name;\n \n+  /* We know p != name as absolute paths don't call remap_filename.  */\n   if (p == name)\n-    {\n-      dir = \".\";\n-      from = name;\n-    }\n-  else\n-    {\n-      char * newdir = (char *) alloca (p - name + 1);\n-      memcpy (newdir, name, p - name);\n-      newdir[p - name] = '\\0';\n-      dir = newdir;\n-      from = p + 1;\n-    }\n+    cpp_ice (pfile, \"absolute file name in remap_filename\");\n+\n+  dir = (char *) alloca (p - name + 1);\n+  memcpy (dir, name, p - name);\n+  dir[p - name] = '\\0';\n+  from = p + 1;\n   \n   for (map = read_name_map (pfile, dir); map; map = map->map_next)\n-    if (! strcmp (map->map_from, name))\n+    if (! strcmp (map->map_from, from))\n       return map->map_to;\n \n   return name;"}]}