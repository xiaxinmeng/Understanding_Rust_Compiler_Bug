{"sha": "8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhMWFkMGU2YTA3M2ZmNTgxMDkwZTJlYjk2NThhZjJiN2ZiODczYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-01-13T00:16:12Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-01-13T00:16:12Z"}, "message": "re PR c++/9264 ([parser] ICE on invalid octal constant)\n\n\t* cp-tree.h (get_arglist_len_in_bytes): Remove.\n\n\tPR c++/9264\n\t* parser.c (cp_parser_elaborated_type_specifier): Handle erroneous\n\ttypeame types more robustly.\n\n\tPR c++/9172\n\t* g++.dg/parse/typename1.C: New file.\n\nFrom-SVN: r61236", "tree": {"sha": "09a72e3ecc7a33e76258030be3182d05d3cd19bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a72e3ecc7a33e76258030be3182d05d3cd19bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/comments", "author": null, "committer": null, "parents": [{"sha": "e8f2b18d0ec4fc04cba5d9ea60350645247c6548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8f2b18d0ec4fc04cba5d9ea60350645247c6548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8f2b18d0ec4fc04cba5d9ea60350645247c6548"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "4111b95f11424624c48029ce91e89ed0d1c29a71", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "patch": "@@ -1,3 +1,11 @@\n+2003-01-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (get_arglist_len_in_bytes): Remove.\n+\n+\tPR c++/9264\n+\t* parser.c (cp_parser_elaborated_type_specifier): Handle erroneous\n+\ttypeame types more robustly.\n+\n 2003-01-11  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* parser.c:  Fix comment typos."}, {"sha": "313b124e56e03e745816b5c9761a06d9b699be69", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "patch": "@@ -3581,7 +3581,6 @@ extern GTY(()) operator_name_info_t assignment_operator_name_info\n \n /* in call.c */\n extern bool check_dtor_name (tree, tree);\n-extern int get_arglist_len_in_bytes\t\t(tree);\n \n extern tree build_vfield_ref\t\t\t(tree, tree);\n extern tree build_scoped_method_call (tree, tree, tree, tree);"}, {"sha": "21d5d21f7eb1bd25fdab091ae5a618c5ba9f0f23", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "patch": "@@ -9012,10 +9012,14 @@ cp_parser_elaborated_type_specifier (parser, is_friend, is_declaration)\n \t\t\t      /*current_scope_valid_p=*/false);\n   /* Look for the nested-name-specifier.  */\n   if (tag_type == typename_type)\n-    cp_parser_nested_name_specifier (parser,\n-\t\t\t\t     /*typename_keyword_p=*/true,\n-\t\t\t\t     /*check_dependency_p=*/true,\n-\t\t\t\t     /*type_p=*/true);\n+    {\n+      if (cp_parser_nested_name_specifier (parser,\n+\t\t\t\t\t   /*typename_keyword_p=*/true,\n+\t\t\t\t\t   /*check_dependency_p=*/true,\n+\t\t\t\t\t   /*type_p=*/true) \n+\t  == error_mark_node)\n+\treturn error_mark_node;\n+    }\n   else\n     /* Even though `typename' is not present, the proposed resolution\n        to Core Issue 180 says that in `class A<T>::B', `B' should be"}, {"sha": "2af84e3d7d4e234d7d0b36a089b5ee1245d99ab5", "filename": "gcc/testsuite/g++.dg/parse/typename1.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1ad0e6a073ff581090e2eb9658af2b7fb873a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename1.C?ref=8fa1ad0e6a073ff581090e2eb9658af2b7fb873a", "patch": "@@ -0,0 +1,5 @@\n+template <class baz>\n+struct bar\n+{\n+  typedef typename baz::typename rebind<int> foo; // { dg-error \"\" }\n+};"}]}