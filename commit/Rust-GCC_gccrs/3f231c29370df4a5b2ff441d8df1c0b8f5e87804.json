{"sha": "3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyMzFjMjkzNzBkZjRhNWIyZmY0NDFkOGRmMWMwYjhmNWU4NzgwNA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-11-25T06:41:48Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-11-25T06:41:48Z"}, "message": "ppc64-fp.c (__floatunditf): New function.\n\n\t* config/rs6000/ppc64-fp.c (__floatunditf): New function.\n\t(__floatundidf, __floatundisf): Likewise.\n\nFrom-SVN: r107494", "tree": {"sha": "14c7545ac34aac70d3df0513d5028542b577efde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14c7545ac34aac70d3df0513d5028542b577efde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f231c29370df4a5b2ff441d8df1c0b8f5e87804/comments", "author": null, "committer": null, "parents": [{"sha": "66f788b0b33ae14ca966f1925c9a3c3aff2144a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f788b0b33ae14ca966f1925c9a3c3aff2144a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f788b0b33ae14ca966f1925c9a3c3aff2144a1"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "4e4a94a7d1a1446c3c7f6ce3c6f12d621c04810c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f231c29370df4a5b2ff441d8df1c0b8f5e87804/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f231c29370df4a5b2ff441d8df1c0b8f5e87804/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "patch": "@@ -1,3 +1,8 @@\n+2005-11-25  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/ppc64-fp.c (__floatunditf): New function.\n+\t(__floatundidf, __floatundisf): Likewise.\n+\n 2005-11-25  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_sr_alias_set): Delete."}, {"sha": "6be3ca8235feafede4a04d66a66956935cfffbd4", "filename": "gcc/config/rs6000/ppc64-fp.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f231c29370df4a5b2ff441d8df1c0b8f5e87804/gcc%2Fconfig%2Frs6000%2Fppc64-fp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f231c29370df4a5b2ff441d8df1c0b8f5e87804/gcc%2Fconfig%2Frs6000%2Fppc64-fp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppc64-fp.c?ref=3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "patch": "@@ -39,8 +39,11 @@ extern DItype __fixsfdi (SFtype);\n extern USItype __fixunsdfsi (DFtype);\n extern USItype __fixunssfsi (SFtype);\n extern TFtype __floatditf (DItype);\n+extern TFtype __floatunditf (UDItype);\n extern DFtype __floatdidf (DItype);\n+extern DFtype __floatundidf (UDItype);\n extern SFtype __floatdisf (DItype);\n+extern SFtype __floatundisf (UDItype);\n extern DItype __fixunstfdi (TFtype);\n \n static DItype local_fixunssfdi (SFtype);\n@@ -100,6 +103,18 @@ __floatditf (DItype u)\n   return (TFtype) dh + (TFtype) dl;\n }\n \n+TFtype\n+__floatunditf (UDItype u)\n+{\n+  DFtype dh, dl;\n+\n+  dh = (USItype) (u >> (sizeof (SItype) * 8));\n+  dh *= 2.0 * (((UDItype) 1) << ((sizeof (SItype) * 8) - 1));\n+  dl = (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n+\n+  return (TFtype) dh + (TFtype) dl;\n+}\n+\n DFtype\n __floatdidf (DItype u)\n {\n@@ -112,6 +127,18 @@ __floatdidf (DItype u)\n   return d;\n }\n \n+DFtype\n+__floatundidf (UDItype u)\n+{\n+  DFtype d;\n+\n+  d = (USItype) (u >> (sizeof (SItype) * 8));\n+  d *= 2.0 * (((UDItype) 1) << ((sizeof (SItype) * 8) - 1));\n+  d += (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n+\n+  return d;\n+}\n+\n SFtype\n __floatdisf (DItype u)\n {\n@@ -137,6 +164,30 @@ __floatdisf (DItype u)\n   return (SFtype) f;\n }\n \n+SFtype\n+__floatundisf (UDItype u)\n+{\n+  DFtype f;\n+\n+  if (53 < (sizeof (DItype) * 8)\n+      && 53 > ((sizeof (DItype) * 8) - 53 + 24))\n+    {\n+      if (u >= ((UDItype) 1 << 53))\n+        {\n+          if ((UDItype) u & (((UDItype) 1 << ((sizeof (DItype) * 8) - 53)) - 1))\n+            {\n+              u &= ~ (((UDItype) 1 << ((sizeof (DItype) * 8) - 53)) - 1);\n+              u |= ((UDItype) 1 << ((sizeof (DItype) * 8) - 53));\n+            }\n+        }\n+    }\n+  f = (USItype) (u >> (sizeof (SItype) * 8));\n+  f *= 2.0 * (((UDItype) 1) << ((sizeof (SItype) * 8) - 1));\n+  f += (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n+\n+  return (SFtype) f;\n+}\n+\n DItype\n __fixunstfdi (TFtype a)\n {"}]}