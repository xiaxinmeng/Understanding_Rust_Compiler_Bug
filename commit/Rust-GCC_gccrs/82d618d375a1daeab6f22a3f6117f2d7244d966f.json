{"sha": "82d618d375a1daeab6f22a3f6117f2d7244d966f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJkNjE4ZDM3NWExZGFlYWI2ZjIyYTNmNjExN2YyZDcyNDRkOTY2Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-09-10T13:50:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-09-10T13:50:43Z"}, "message": "lto-cgraph.c: Include ipa-utils.h.\n\n\n\n\t* lto-cgraph.c: Include ipa-utils.h.\n\t(compute_ltrans_boundary): Also add possible targets into the boundary.\n\nFrom-SVN: r202447", "tree": {"sha": "4e484620bb234edab10a6d6a34b6eedbf439da8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e484620bb234edab10a6d6a34b6eedbf439da8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82d618d375a1daeab6f22a3f6117f2d7244d966f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d618d375a1daeab6f22a3f6117f2d7244d966f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d618d375a1daeab6f22a3f6117f2d7244d966f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d618d375a1daeab6f22a3f6117f2d7244d966f/comments", "author": null, "committer": null, "parents": [{"sha": "668b689457961fbcbd6c140aea21d03729a844e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668b689457961fbcbd6c140aea21d03729a844e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668b689457961fbcbd6c140aea21d03729a844e7"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "5979c51ed8e4857ecf5a1e3e3b1d15d14768f6dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82d618d375a1daeab6f22a3f6117f2d7244d966f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82d618d375a1daeab6f22a3f6117f2d7244d966f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82d618d375a1daeab6f22a3f6117f2d7244d966f", "patch": "@@ -1,3 +1,8 @@\n+2013-09-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-cgraph.c: Include ipa-utils.h.\n+\t(compute_ltrans_boundary): Also add possible targets into the boundary.\n+\n 2013-09-10  Jan Hubicka  <jh@suse.cz>\n \n \t* gimple-fold.c (gimple_get_virt_method_for_binfo): Pass real"}, {"sha": "7a3daece1a9d7edd440b49207258e4c4986e8d63", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82d618d375a1daeab6f22a3f6117f2d7244d966f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82d618d375a1daeab6f22a3f6117f2d7244d966f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=82d618d375a1daeab6f22a3f6117f2d7244d966f", "patch": "@@ -2194,7 +2194,7 @@ lto-cgraph.o: lto-cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n    $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(EXCEPT_H) $(TIMEVAR_H) pointer-set.h $(LTO_STREAMER_H) \\\n    $(GCOV_IO_H) $(DATA_STREAMER_H) $(TREE_STREAMER_H) $(TREE_PASS_H) \\\n-   profile.h $(CONTEXT_H) $(PASS_MANAGER_H)\n+   profile.h $(CONTEXT_H) $(PASS_MANAGER_H) ipa-utils.h\n lto-streamer-in.o: lto-streamer-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) \\\n    input.h $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\"}, {"sha": "4eb443bc8df3f373d8cdeeee2f439bde6ef28662", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82d618d375a1daeab6f22a3f6117f2d7244d966f/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82d618d375a1daeab6f22a3f6117f2d7244d966f/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=82d618d375a1daeab6f22a3f6117f2d7244d966f", "patch": "@@ -49,6 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"profile.h\"\n #include \"context.h\"\n #include \"pass_manager.h\"\n+#include \"ipa-utils.h\"\n \n static void output_cgraph_opt_summary (void);\n static void input_cgraph_opt_summary (vec<symtab_node>  nodes);\n@@ -766,6 +767,7 @@ compute_ltrans_boundary (lto_symtab_encoder_t in_encoder)\n   int i;\n   lto_symtab_encoder_t encoder;\n   lto_symtab_encoder_iterator lsei;\n+  struct pointer_set_t *reachable_call_targets = pointer_set_create ();\n \n   encoder = lto_symtab_encoder_new (false);\n \n@@ -837,9 +839,40 @@ compute_ltrans_boundary (lto_symtab_encoder_t in_encoder)\n \t      add_node_to (encoder, callee, false);\n \t    }\n \t}\n+      /* Add all possible targets for late devirtualization.  */\n+      if (flag_devirtualize)\n+\tfor (edge = node->indirect_calls; edge; edge = edge->next_callee)\n+\t  if (edge->indirect_info->polymorphic)\n+\t    {\n+\t      unsigned int i;\n+\t      void *cache_token;\n+\t      bool final;\n+\t      vec <cgraph_node *>targets\n+\t\t= possible_polymorphic_call_targets\n+\t\t    (edge, &final, &cache_token);\n+\t      if (!pointer_set_insert (reachable_call_targets,\n+\t\t\t\t       cache_token))\n+\t\t{\n+\t\t  for (i = 0; i < targets.length(); i++)\n+\t\t    {\n+\t\t      struct cgraph_node *callee = targets[i];\n+\n+\t\t      /* Adding an external declarations into the unit serves\n+\t\t\t no purpose and just increases its boundary.  */\n+\t\t      if (callee->symbol.definition\n+\t\t\t  && !lto_symtab_encoder_in_partition_p\n+\t\t\t       (encoder, (symtab_node)callee))\n+\t\t\t{\n+\t\t\t  gcc_assert (!callee->global.inlined_to);\n+\t\t\t  add_node_to (encoder, callee, false);\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t    }\n     }\n- lto_symtab_encoder_delete (in_encoder);\n- return encoder;\n+  lto_symtab_encoder_delete (in_encoder);\n+  pointer_set_destroy (reachable_call_targets);\n+  return encoder;\n }\n \n /* Output the part of the symtab in SET and VSET.  */"}]}