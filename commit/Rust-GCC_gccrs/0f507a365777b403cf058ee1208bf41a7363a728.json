{"sha": "0f507a365777b403cf058ee1208bf41a7363a728", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY1MDdhMzY1Nzc3YjQwM2NmMDU4ZWUxMjA4YmY0MWE3MzYzYTcyOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-09T10:29:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2020-01-09T10:29:54Z"}, "message": "re PR tree-optimization/93040 (gcc doesn't optimize unaligned accesses to a 16-bit value on the x86 as well as it does a 32-bit value (or clang))\n\n2020-01-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/93040\n\t* gimple-ssa-store-merging.c (find_bswap_or_nop): Raise search limit.\n\n\t* gcc.dg/optimize-bswaphi-1.c: Amend.\n\t* gcc.dg/optimize-bswapsi-2.c: Likewise.\n\nFrom-SVN: r280034", "tree": {"sha": "2ac67cd46c37d7d68318fff8b178482191736862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ac67cd46c37d7d68318fff8b178482191736862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f507a365777b403cf058ee1208bf41a7363a728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f507a365777b403cf058ee1208bf41a7363a728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f507a365777b403cf058ee1208bf41a7363a728", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f507a365777b403cf058ee1208bf41a7363a728/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddc8786f8ebe5c97331cbbeef15c99e4878e669e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc8786f8ebe5c97331cbbeef15c99e4878e669e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc8786f8ebe5c97331cbbeef15c99e4878e669e"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "dbac2a41cfaf1acbc40d4d4848ebcaac419745d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f507a365777b403cf058ee1208bf41a7363a728", "patch": "@@ -1,3 +1,8 @@\n+2020-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/93040\n+\t* gimple-ssa-store-merging.c (find_bswap_or_nop): Raise search limit.\n+\n 2020-01-09  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* common/config/avr/avr-common.c (avr_option_optimization_table)"}, {"sha": "741b1ec039c6fc52d27888764a939decbb7ae773", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=0f507a365777b403cf058ee1208bf41a7363a728", "patch": "@@ -848,11 +848,11 @@ find_bswap_or_nop (gimple *stmt, struct symbolic_number *n, bool *bswap)\n {\n   /* The last parameter determines the depth search limit.  It usually\n      correlates directly to the number n of bytes to be touched.  We\n-     increase that number by log2(n) + 1 here in order to also\n+     increase that number by 2 * (log2(n) + 1) here in order to also\n      cover signed -> unsigned conversions of the src operand as can be seen\n      in libgcc, and for initial shift/and operation of the src operand.  */\n   int limit = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (gimple_expr_type (stmt)));\n-  limit += 1 + (int) ceil_log2 ((unsigned HOST_WIDE_INT) limit);\n+  limit += 2 * (1 + (int) ceil_log2 ((unsigned HOST_WIDE_INT) limit));\n   gimple *ins_stmt = find_bswap_or_nop_1 (stmt, n, limit);\n \n   if (!ins_stmt)"}, {"sha": "0e18082a829e019f21b9b28c2bdd9499b2046f74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f507a365777b403cf058ee1208bf41a7363a728", "patch": "@@ -1,3 +1,9 @@\n+2020-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/93040\n+\t* gcc.dg/optimize-bswaphi-1.c: Amend.\n+\t* gcc.dg/optimize-bswapsi-2.c: Likewise.\n+\n 2020-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR inline-asm/93202"}, {"sha": "e9338d67872d6d49c88000f353cc86526ecfc133", "filename": "gcc/testsuite/gcc.dg/optimize-bswaphi-1.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c?ref=0f507a365777b403cf058ee1208bf41a7363a728", "patch": "@@ -54,5 +54,11 @@ swap16 (HItype in)\n \t\t| (((in >> 8) & 0xFF) << 0);\n }\n \n-/* { dg-final { scan-tree-dump-times \"16 bit load in target endianness found at\" 3 \"bswap\" } } */\n+unsigned short\n+get_unaligned_16 (unsigned char *p)\n+{\n+  return p[0] | (p[1] << 8);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"16 bit load in target endianness found at\" 4 \"bswap\" } } */\n /* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 4 \"bswap\" } } */"}, {"sha": "f111553e1cf76556d7efbbb3a4b78e1ef241b035", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-2.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f507a365777b403cf058ee1208bf41a7363a728/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c?ref=0f507a365777b403cf058ee1208bf41a7363a728", "patch": "@@ -44,5 +44,16 @@ uint32_t read_be32_3 (unsigned char *data)\n \t | (*data << 24);\n }\n \n-/* { dg-final { scan-tree-dump-times \"32 bit load in target endianness found at\" 3 \"bswap\" } } */\n+static inline unsigned short\n+get_unaligned_16 (unsigned char *p)\n+{\n+  return p[0] | (p[1] << 8);\n+}\n+unsigned int\n+get_unaligned_32 (unsigned char *p)\n+{\n+  return get_unaligned_16 (p) | (get_unaligned_16 (p + 2) << 16);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"32 bit load in target endianness found at\" 4 \"bswap\" } } */\n /* { dg-final { scan-tree-dump-times \"32 bit bswap implementation found at\" 3 \"bswap\" } } */"}]}