{"sha": "7cd268ad6a6f71877744539d17ed53e752774bfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NkMjY4YWQ2YTZmNzE4Nzc3NDQ1MzlkMTdlZDUzZTc1Mjc3NGJmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-26T10:16:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-26T10:16:01Z"}, "message": "re PR c++/92438 (Function declaration parsed incorrectly with `-std=c++1z`)\n\n\tPR c++/92438\n\t* parser.c (cp_parser_constructor_declarator_p): If open paren\n\tis followed by RID_ATTRIBUTE, skip over the attribute tokens and\n\ttry to parse type specifier.\n\n\t* g++.dg/ext/attrib61.C: New test.\n\nFrom-SVN: r279736", "tree": {"sha": "3a55ec188547087fe3db9a81420da7db66097d60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a55ec188547087fe3db9a81420da7db66097d60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cd268ad6a6f71877744539d17ed53e752774bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd268ad6a6f71877744539d17ed53e752774bfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd268ad6a6f71877744539d17ed53e752774bfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd268ad6a6f71877744539d17ed53e752774bfa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae2bb2a6434d3177b94f78ac707f606ee65f0360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2bb2a6434d3177b94f78ac707f606ee65f0360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2bb2a6434d3177b94f78ac707f606ee65f0360"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "334438c7c6db312e9b53c9dbba9418c40f4d5748", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7cd268ad6a6f71877744539d17ed53e752774bfa", "patch": "@@ -1,3 +1,10 @@\n+2019-12-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92438\n+\t* parser.c (cp_parser_constructor_declarator_p): If open paren\n+\tis followed by RID_ATTRIBUTE, skip over the attribute tokens and\n+\ttry to parse type specifier.\n+\n 2019-12-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR c++/92789"}, {"sha": "c66ef34a948593ea7fc70b12c9ca8de013064a1d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7cd268ad6a6f71877744539d17ed53e752774bfa", "patch": "@@ -28493,14 +28493,29 @@ cp_parser_constructor_declarator_p (cp_parser *parser, cp_parser_flags flags,\n \t  /* A parameter declaration begins with a decl-specifier,\n \t     which is either the \"attribute\" keyword, a storage class\n \t     specifier, or (usually) a type-specifier.  */\n-\t  && !cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer)\n+\t  && (!cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer)\n+\t      /* GNU attributes can actually appear both at the start of\n+\t\t a parameter and parenthesized declarator.\n+\t\t S (__attribute__((unused)) int);\n+\t\t is a constructor, but\n+\t\t S (__attribute__((unused)) foo) (int);\n+\t\t is a function declaration.  */\n+\t      || (cp_parser_allow_gnu_extensions_p (parser)\n+\t\t  && cp_next_tokens_can_be_gnu_attribute_p (parser)))\n \t  /* A parameter declaration can also begin with [[attribute]].  */\n \t  && !cp_next_tokens_can_be_std_attribute_p (parser))\n \t{\n \t  tree type;\n \t  tree pushed_scope = NULL_TREE;\n \t  unsigned saved_num_template_parameter_lists;\n \n+\t  if (cp_next_tokens_can_be_gnu_attribute_p (parser))\n+\t    {\n+\t      unsigned int n = cp_parser_skip_gnu_attributes_opt (parser, 1);\n+\t      while (--n)\n+\t\tcp_lexer_consume_token (parser->lexer);\n+\t    }\n+\n \t  /* Names appearing in the type-specifier should be looked up\n \t     in the scope of the class.  */\n \t  if (current_class_type)"}, {"sha": "0db2e22e369efeb8347db5791e73a804036b545e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cd268ad6a6f71877744539d17ed53e752774bfa", "patch": "@@ -1,3 +1,8 @@\n+2019-12-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92438\n+\t* g++.dg/ext/attrib61.C: New test.\n+\n 2019-12-23  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* c-c++-common/goacc/mdc-1.c: Restrict to LP64, LLP64."}, {"sha": "231830616ea34f07779756587349eabe130983e8", "filename": "gcc/testsuite/g++.dg/ext/attrib61.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd268ad6a6f71877744539d17ed53e752774bfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib61.C?ref=7cd268ad6a6f71877744539d17ed53e752774bfa", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/92438\n+// { dg-do compile }\n+\n+typedef struct S { int x; } T;\n+T (foo) (T x);\n+T __attribute__((unused)) bar (T x);\n+struct S (__attribute__((unused)) baz) (T x);\n+T (__attribute__((unused)) qux) (T x);\n+\n+struct U\n+{\n+  U (__attribute__((unused)) int);\n+  U (__attribute__((unused)) corge) (int);\n+};\n+\n+void\n+test ()\n+{\n+  T a, b;\n+  a = foo (b);\n+  b = bar (a);\n+  a = baz (b);\n+  b = qux (a);\n+  U u (5);\n+  U v = u.corge (3);\n+}"}]}