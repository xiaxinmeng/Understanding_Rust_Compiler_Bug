{"sha": "94cacee20d817d0b937701b6759bb67dba3ee3f9", "node_id": "C_kwDOANBUbNoAKDk0Y2FjZWUyMGQ4MTdkMGI5Mzc3MDFiNjc1OWJiNjdkYmEzZWUzZjk", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-01-31T10:38:15Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-01-31T22:28:12Z"}, "message": "For Modula-2 build-tree testing, also set up paths to compiler libraries\n\nCurrently, 'gcc/testsuite/lib/gm2.exp:gm2_link_flags' doesn't set up\npaths to compiler libraries (such as libgcc, which libstdc++\nmay depend on).  For example, I see my x86_64-pc-linux-gnu '-m32' testing\nnot pick up the build-tree libgcc, but instead some random system one,\nwhich (expectedly) doesn't satisfy requirements of other build-tree\nlibraries:\n\n    [...]/build-gcc/gcc/testsuite/gm225/m.x0: /lib/i386-linux-gnu/libgcc_s.so.1: version `GCC_7.0.0' not found (required by [...]/build-gcc/x86_64-pc-linux-gnu/32/libstdc++-v3/src/.libs/libstdc++.so.6)\n\n..., and thus a lot of execution FAILs.\n\nAs seen in a number of other '[...]_link_flags' procedures, the standard idiom\nseems to be to also consider 'gcc-set-multilib-library-path' for\n'ld_library_path'.\n\n\tgcc/testsuite/\n\t* lib/gm2.exp (gm2_link_flags) [$gccpath != \"\"]: Also consider\n\t'gcc-set-multilib-library-path' for 'ld_library_path'.", "tree": {"sha": "b73e5e39ef4e4093988b009412d9109ea12524ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b73e5e39ef4e4093988b009412d9109ea12524ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94cacee20d817d0b937701b6759bb67dba3ee3f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cacee20d817d0b937701b6759bb67dba3ee3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94cacee20d817d0b937701b6759bb67dba3ee3f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cacee20d817d0b937701b6759bb67dba3ee3f9/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2ec2504af77b35e748067eeb846821d12a6b6b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2ec2504af77b35e748067eeb846821d12a6b6b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2ec2504af77b35e748067eeb846821d12a6b6b4"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "da08a565fc53378b0881a1d47c0ed469454de5b6", "filename": "gcc/testsuite/lib/gm2.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cacee20d817d0b937701b6759bb67dba3ee3f9/gcc%2Ftestsuite%2Flib%2Fgm2.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cacee20d817d0b937701b6759bb67dba3ee3f9/gcc%2Ftestsuite%2Flib%2Fgm2.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgm2.exp?ref=94cacee20d817d0b937701b6759bb67dba3ee3f9", "patch": "@@ -316,6 +316,9 @@ proc gm2_link_flags { paths } {\n \t    }\n \t    send_log \"ld_library_path is ${ld_library_path}\\n\"\n \t}\n+\n+\tglobal GCC_UNDER_TEST\n+\tappend ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n     }\n \n     set_ld_library_path_env_vars"}]}