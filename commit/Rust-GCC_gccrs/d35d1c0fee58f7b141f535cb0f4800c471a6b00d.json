{"sha": "d35d1c0fee58f7b141f535cb0f4800c471a6b00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1ZDFjMGZlZTU4ZjdiMTQxZjUzNWNiMGY0ODAwYzQ3MWE2YjAwZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-06-19T16:28:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-19T16:28:50Z"}, "message": "lex.c (search_line_sse42): Use __builtin_ia32_loaddqu and __builtin_ia32_pcmpestri128 instead of asm.\n\n\t* lex.c (search_line_sse42): Use __builtin_ia32_loaddqu and\n\t__builtin_ia32_pcmpestri128 instead of asm.\n\nFrom-SVN: r188782", "tree": {"sha": "028f8fa18b1a8c50463396c4ef422231d60c8198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/028f8fa18b1a8c50463396c4ef422231d60c8198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d35d1c0fee58f7b141f535cb0f4800c471a6b00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35d1c0fee58f7b141f535cb0f4800c471a6b00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35d1c0fee58f7b141f535cb0f4800c471a6b00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35d1c0fee58f7b141f535cb0f4800c471a6b00d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbe10a06e013c577005a6cae646095947bfdd277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe10a06e013c577005a6cae646095947bfdd277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe10a06e013c577005a6cae646095947bfdd277"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "312fd8d97b827ef4cfe2c48ae6d7685de88723e6", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35d1c0fee58f7b141f535cb0f4800c471a6b00d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35d1c0fee58f7b141f535cb0f4800c471a6b00d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d35d1c0fee58f7b141f535cb0f4800c471a6b00d", "patch": "@@ -1,3 +1,8 @@\n+2011-06-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* lex.c (search_line_sse42): Use __builtin_ia32_loaddqu and\n+\t__builtin_ia32_pcmpestri128 instead of asm.\n+\n 2012-06-04  Dimitrios Apostolou <jimis@gmx.net>\n \n \t* line-map.c (linemap_enter_macro): Don't zero max_column_hint in"}, {"sha": "ab904db58bedb3c53815203573f32509ec33987a", "filename": "libcpp/lex.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35d1c0fee58f7b141f535cb0f4800c471a6b00d/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35d1c0fee58f7b141f535cb0f4800c471a6b00d/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=d35d1c0fee58f7b141f535cb0f4800c471a6b00d", "patch": "@@ -427,6 +427,8 @@ search_line_sse42 (const uchar *s, const uchar *end)\n   /* Check for unaligned input.  */\n   if (si & 15)\n     {\n+      v16qi sv;\n+\n       if (__builtin_expect (end - s < 16, 0)\n \t  && __builtin_expect ((si & 0xfff) > 0xff0, 0))\n \t{\n@@ -439,8 +441,9 @@ search_line_sse42 (const uchar *s, const uchar *end)\n \n       /* ??? The builtin doesn't understand that the PCMPESTRI read from\n \t memory need not be aligned.  */\n-      __asm (\"%vpcmpestri $0, (%1), %2\"\n-\t     : \"=c\"(index) : \"r\"(s), \"x\"(search), \"a\"(4), \"d\"(16));\n+      sv = __builtin_ia32_loaddqu ((const char *) s);\n+      index = __builtin_ia32_pcmpestri128 (search, 4, sv, 16, 0);\n+\n       if (__builtin_expect (index < 16, 0))\n \tgoto found;\n "}]}