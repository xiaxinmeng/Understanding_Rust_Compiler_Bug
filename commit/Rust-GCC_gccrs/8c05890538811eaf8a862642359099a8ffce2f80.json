{"sha": "8c05890538811eaf8a862642359099a8ffce2f80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMwNTg5MDUzODgxMWVhZjhhODYyNjQyMzU5MDk5YThmZmNlMmY4MA==", "commit": {"author": {"name": "Henry Linjam\u00e4ki", "email": "henry.linjamaki@parmance.com", "date": "2017-08-04T15:50:14Z"}, "committer": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "visit0r@gcc.gnu.org", "date": "2017-08-04T15:50:14Z"}, "message": "re PR hsa/81713 (BIT_FIELD_REF produced by Brig FE do not pass new verification)\n\nFix PR 81713\n * brigfrontend/brig-basic-inst-handler.cc: replace build_int_cst with\n   bitsize_int in building BIT_FIELD_REF.\n * brigfrontend/brig-code-entry-handler.cc: likewise.\n\nFrom-SVN: r250874", "tree": {"sha": "592e3d289fc9e6f48fb64ff103a3c734438a950b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/592e3d289fc9e6f48fb64ff103a3c734438a950b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c05890538811eaf8a862642359099a8ffce2f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c05890538811eaf8a862642359099a8ffce2f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c05890538811eaf8a862642359099a8ffce2f80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c05890538811eaf8a862642359099a8ffce2f80/comments", "author": null, "committer": null, "parents": [{"sha": "8ffe2be85eae01203f38ba41ec2a536ef77b6a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ffe2be85eae01203f38ba41ec2a536ef77b6a89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ffe2be85eae01203f38ba41ec2a536ef77b6a89"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "08045329eeba1692d68ef407433db75d3caa6468", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,3 +1,10 @@\n+2017-08-04  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n+\n+\tFix PR 81713\n+\t* brigfrontend/brig-basic-inst-handler.cc: replace build_int_cst with\n+\tbitsize_int in building BIT_FIELD_REF.\n+\t* brigfrontend/brig-code-entry-handler.cc: likewise.\n+\n 2017-07-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "8288d6655132116d86d3bcc7ea2374b51b3c1d27", "filename": "gcc/brig/brigfrontend/brig-basic-inst-handler.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-basic-inst-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-basic-inst-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-basic-inst-handler.cc?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -33,6 +33,7 @@\n #include \"stor-layout.h\"\n #include \"diagnostic-core.h\"\n #include \"brig-builtins.h\"\n+#include \"fold-const.h\"\n \n brig_basic_inst_handler::brig_basic_inst_handler (brig_to_generic &parent)\n   : brig_code_entry_handler (parent)\n@@ -112,10 +113,8 @@ brig_basic_inst_handler::build_shuffle (tree arith_type,\n     {\n       tree mask_element\n \t= build3 (BIT_FIELD_REF, mask_element_type, mask_operand,\n-\t\t  build_int_cst (unsigned_char_type_node,\n-\t\t\t\t input_mask_element_size),\n-\t\t  build_int_cst (unsigned_char_type_node,\n-\t\t\t\t i * input_mask_element_size));\n+\t\t  bitsize_int (input_mask_element_size),\n+\t\t  bitsize_int (i * input_mask_element_size));\n \n       mask_element = convert (element_type, mask_element);\n "}, {"sha": "8f07d372796ec4780ab051ee2ad8bd7a8d6b4db6", "filename": "gcc/brig/brigfrontend/brig-code-entry-handler.cc", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1423,9 +1423,8 @@ brig_code_entry_handler::build_output_assignment (const BrigInstBase &brig_inst,\n \t  tree element_ref\n \t    = build3 (BIT_FIELD_REF, element_type, input,\n \t\t      TYPE_SIZE (element_type),\n-\t\t      build_int_cst (uint32_type_node,\n-\t\t\t\t     i * int_size_in_bytes (element_type)\n-\t\t\t\t     *  BITS_PER_UNIT));\n+\t\t      bitsize_int (i * int_size_in_bytes (element_type)\n+\t\t\t\t   *  BITS_PER_UNIT));\n \n \t  last_assign\n \t    = build_output_assignment (brig_inst, element, element_ref);\n@@ -1488,7 +1487,7 @@ brig_code_entry_handler::unpack (tree value, tree_stl_vec &elements)\n       tree element\n \t= build3 (BIT_FIELD_REF, input_element_type, value,\n \t\t  TYPE_SIZE (input_element_type),\n-\t\t  build_int_cst (unsigned_char_type_node, i * element_size));\n+\t\t  bitsize_int(i * element_size));\n \n       element = add_temp_var (\"scalar\", element);\n       elements.push_back (element);\n@@ -1543,9 +1542,8 @@ tree_element_unary_visitor::operator () (brig_code_entry_handler &handler,\n \t{\n \t  tree element = build3 (BIT_FIELD_REF, input_element_type, operand,\n \t\t\t\t TYPE_SIZE (input_element_type),\n-\t\t\t\t build_int_cst (unsigned_char_type_node,\n-\t\t\t\t\t\ti * element_size\n-\t\t\t\t\t\t* BITS_PER_UNIT));\n+\t\t\t\t bitsize_int (i * element_size\n+\t\t\t\t\t      * BITS_PER_UNIT));\n \n \t  tree output = visit_element (handler, element);\n \t  output_element_type = TREE_TYPE (output);\n@@ -1594,15 +1592,13 @@ tree_element_binary_visitor::operator () (brig_code_entry_handler &handler,\n \n \t  tree element0 = build3 (BIT_FIELD_REF, input_element_type, operand0,\n \t\t\t\t  TYPE_SIZE (input_element_type),\n-\t\t\t\t  build_int_cst (unsigned_char_type_node,\n-\t\t\t\t\t\t i * element_size\n-\t\t\t\t\t\t * BITS_PER_UNIT));\n+\t\t\t\t  bitsize_int (i * element_size\n+\t\t\t\t\t       * BITS_PER_UNIT));\n \n \t  tree element1 = build3 (BIT_FIELD_REF, input_element_type, operand1,\n \t\t\t\t  TYPE_SIZE (input_element_type),\n-\t\t\t\t  build_int_cst (unsigned_char_type_node,\n-\t\t\t\t\t\t i * element_size\n-\t\t\t\t\t\t * BITS_PER_UNIT));\n+\t\t\t\t  bitsize_int (i * element_size\n+\t\t\t\t\t       * BITS_PER_UNIT));\n \n \t  tree output = visit_element (handler, element0, element1);\n \t  output_element_type = TREE_TYPE (output);"}]}