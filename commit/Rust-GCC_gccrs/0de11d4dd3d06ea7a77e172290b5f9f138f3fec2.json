{"sha": "0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlMTFkNGRkM2QwNmVhN2E3N2UxNzIyOTBiNWY5ZjEzOGYzZmVjMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-07-02T22:25:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-07-02T22:25:59Z"}, "message": "dumpfile.c: Include profile-count.h\n\n\n\t* dumpfile.c: Include profile-count.h\n\t* tree-cfg.c (gimple_duplicate_sese_tail): Drop UNUSED attributes; update\n\tprofile.\n\t(insert_cond_bb): Update profile.\n\t* tree-cfg.h (insert_cond_bb): Update prototype.\n\t* tree-chkp-opt.c (chkp_optimize_string_function_calls): Update.\n\t* tree-dump.c: Do not include tree-cfg.\n\nFrom-SVN: r249887", "tree": {"sha": "50b66a0553a1ce676d3f569083f9ae07678c7798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50b66a0553a1ce676d3f569083f9ae07678c7798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/comments", "author": null, "committer": null, "parents": [{"sha": "d872853dce396c9848142145507043040be14c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d872853dce396c9848142145507043040be14c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d872853dce396c9848142145507043040be14c5c"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "73e569551b77e21364faf9e2259299f08006ee67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "patch": "@@ -1,3 +1,13 @@\n+2017-07-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* dumpfile.c: Include profile-count.h\n+\t* tree-cfg.c (gimple_duplicate_sese_tail): Drop UNUSED attributes; update\n+\tprofile.\n+\t(insert_cond_bb): Update profile.\n+\t* tree-cfg.h (insert_cond_bb): Update prototype.\n+\t* tree-chkp-opt.c (chkp_optimize_string_function_calls): Update.\n+\t* tree-dump.c: Do not include tree-cfg.\n+\n 2017-07-02  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* bb-reorder.c (fix_up_crossing_landing_pad): Update profile."}, {"sha": "658500b6103b53494c97394c452c15838f88325a", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"dumpfile.h\"\n #include \"context.h\"\n+#include \"profile-count.h\"\n #include \"tree-cfg.h\"\n #include \"langhooks.h\"\n "}, {"sha": "6add0402080e62b2c93d54ece324ef58faf1cb95", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "patch": "@@ -6390,9 +6390,9 @@ bb_part_of_region_p (basic_block bb, basic_block* bbs, unsigned n_region)\n */\n \n bool\n-gimple_duplicate_sese_tail (edge entry ATTRIBUTE_UNUSED, edge exit ATTRIBUTE_UNUSED,\n-\t\t\t  basic_block *region ATTRIBUTE_UNUSED, unsigned n_region ATTRIBUTE_UNUSED,\n-\t\t\t  basic_block *region_copy ATTRIBUTE_UNUSED)\n+gimple_duplicate_sese_tail (edge entry, edge exit,\n+\t\t\t  basic_block *region, unsigned n_region,\n+\t\t\t  basic_block *region_copy)\n {\n   unsigned i;\n   bool free_region_copy = false;\n@@ -6502,7 +6502,12 @@ gimple_duplicate_sese_tail (edge entry ATTRIBUTE_UNUSED, edge exit ATTRIBUTE_UNU\n \n   sorig = single_succ_edge (switch_bb);\n   sorig->flags = exits[1]->flags;\n+  sorig->probability = exits[1]->probability;\n+  sorig->count = exits[1]->count;\n   snew = make_edge (switch_bb, nentry_bb, exits[0]->flags);\n+  snew->probability = exits[0]->probability;\n+  snew->count = exits[1]->count;\n+  \n \n   /* Register the new edge from SWITCH_BB in loop exit lists.  */\n   rescan_loop_exit (snew, true, false);\n@@ -8704,9 +8709,11 @@ make_pass_split_crit_edges (gcc::context *ctxt)\n /* Insert COND expression which is GIMPLE_COND after STMT\n    in basic block BB with appropriate basic block split\n    and creation of a new conditionally executed basic block.\n+   Update profile so the new bb is visited with probability PROB.\n    Return created basic block.  */\n basic_block\n-insert_cond_bb (basic_block bb, gimple *stmt, gimple *cond)\n+insert_cond_bb (basic_block bb, gimple *stmt, gimple *cond,\n+\t        profile_probability prob)\n {\n   edge fall = split_block (bb, stmt);\n   gimple_stmt_iterator iter = gsi_last_bb (bb);\n@@ -8721,11 +8728,17 @@ insert_cond_bb (basic_block bb, gimple *stmt, gimple *cond)\n \n   /* Create conditionally executed block.  */\n   new_bb = create_empty_bb (bb);\n-  make_edge (bb, new_bb, EDGE_TRUE_VALUE);\n+  edge e = make_edge (bb, new_bb, EDGE_TRUE_VALUE);\n+  e->probability = prob;\n+  e->count = bb->count.apply_probability (prob);\n+  new_bb->count = e->count;\n+  new_bb->frequency = prob.apply (bb->frequency);\n   make_single_succ_edge (new_bb, fall->dest, EDGE_FALLTHRU);\n \n   /* Fix edge for split bb.  */\n   fall->flags = EDGE_FALSE_VALUE;\n+  fall->count -= e->count;\n+  fall->probability -= e->probability;\n \n   /* Update dominance info.  */\n   if (dom_info_available_p (CDI_DOMINATORS))"}, {"sha": "66be43657bc952975b08e8912120c57bf32eca50", "filename": "gcc/tree-cfg.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-cfg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-cfg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.h?ref=0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "patch": "@@ -104,7 +104,8 @@ extern tree gimplify_build1 (gimple_stmt_iterator *, enum tree_code,\n extern void extract_true_false_edges_from_block (basic_block, edge *, edge *);\n extern unsigned int execute_fixup_cfg (void);\n extern unsigned int split_critical_edges (void);\n-extern basic_block insert_cond_bb (basic_block, gimple *, gimple *);\n+extern basic_block insert_cond_bb (basic_block, gimple *, gimple *,\n+\t\t\t\t   profile_probability);\n extern bool gimple_find_sub_bbs (gimple_seq, gimple_stmt_iterator *);\n extern bool extract_true_false_controlled_edges (basic_block, basic_block,\n \t\t\t\t\t\t edge *, edge *);"}, {"sha": "33f2a1bfcf5104f5012e9249b7237dc0f915404f", "filename": "gcc/tree-chkp-opt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-chkp-opt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-chkp-opt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp-opt.c?ref=0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "patch": "@@ -1052,7 +1052,8 @@ chkp_optimize_string_function_calls (void)\n \n \t\t  /* Split block before string function call.  */\n \t\t  gsi_prev (&i);\n-\t\t  check_bb = insert_cond_bb (bb, gsi_stmt (i), check);\n+\t\t  check_bb = insert_cond_bb (bb, gsi_stmt (i), check,\n+\t\t\t\t\t     profile_probability::likely ());\n \n \t\t  /* Set position for checks.  */\n \t\t  j = gsi_last_bb (check_bb);"}, {"sha": "0eab7ac590ad09639afd41a15a3d4021a99943a1", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de11d4dd3d06ea7a77e172290b5f9f138f3fec2/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=0de11d4dd3d06ea7a77e172290b5f9f138f3fec2", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n-#include \"tree-cfg.h\"\n \n static unsigned int queue (dump_info_p, const_tree, int);\n static void dump_index (dump_info_p, unsigned int);"}]}