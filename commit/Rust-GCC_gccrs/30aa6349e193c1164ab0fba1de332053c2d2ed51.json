{"sha": "30aa6349e193c1164ab0fba1de332053c2d2ed51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhYTYzNDllMTkzYzExNjRhYjBmYmExZGUzMzIwNTNjMmQyZWQ1MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-08-20T11:36:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-08-20T11:36:00Z"}, "message": "predicates.md (vector_all_ones_operand): Use CONSTM1_RTX to simplify definition.\n\ngcc/\n\t* config/i386/predicates.md (vector_all_ones_operand): Use\n\tCONSTM1_RTX to simplify definition.\n\nFrom-SVN: r227032", "tree": {"sha": "11f043b5013d3e1565449ccb0c9b5400f3da3768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11f043b5013d3e1565449ccb0c9b5400f3da3768"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30aa6349e193c1164ab0fba1de332053c2d2ed51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30aa6349e193c1164ab0fba1de332053c2d2ed51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30aa6349e193c1164ab0fba1de332053c2d2ed51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30aa6349e193c1164ab0fba1de332053c2d2ed51/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5fc6ae7dab2809a4607de11b2c4e48752176a562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc6ae7dab2809a4607de11b2c4e48752176a562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc6ae7dab2809a4607de11b2c4e48752176a562"}], "stats": {"total": 27, "additions": 8, "deletions": 19}, "files": [{"sha": "21ea2f2c351cbba30cfeaa97cccec1d99ee14870", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30aa6349e193c1164ab0fba1de332053c2d2ed51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30aa6349e193c1164ab0fba1de332053c2d2ed51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30aa6349e193c1164ab0fba1de332053c2d2ed51", "patch": "@@ -1,3 +1,8 @@\n+2015-08-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/i386/predicates.md (vector_all_ones_operand): Use\n+\tCONSTM1_RTX to simplify definition.\n+\n 2015-08-20  Richard Biener  <rguenther@suse.de>\n \n \t* toplev.c (compile_file): Remove loop calling late_global_decl"}, {"sha": "bc76a5b7ceea5d488dde3e29ae05480d4c28122c", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30aa6349e193c1164ab0fba1de332053c2d2ed51/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30aa6349e193c1164ab0fba1de332053c2d2ed51/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=30aa6349e193c1164ab0fba1de332053c2d2ed51", "patch": "@@ -912,25 +912,9 @@\n \n /* Return true if operand is a vector constant that is all ones. */\n (define_predicate \"vector_all_ones_operand\"\n-  (match_code \"const_vector\")\n-{\n-  int nunits = GET_MODE_NUNITS (mode);\n-\n-  if (GET_CODE (op) == CONST_VECTOR\n-      && CONST_VECTOR_NUNITS (op) == nunits)\n-    {\n-      int i;\n-      for (i = 0; i < nunits; ++i)\n-        {\n-          rtx x = CONST_VECTOR_ELT (op, i);\n-          if (x != constm1_rtx)\n-            return false;\n-        }\n-      return true;\n-    }\n-\n-  return false;\n-})\n+  (and (match_code \"const_vector\")\n+       (match_test \"INTEGRAL_MODE_P (GET_MODE (op))\")\n+       (match_test \"op == CONSTM1_RTX (GET_MODE (op))\")))\n \n ; Return true when OP is operand acceptable for standard SSE move.\n (define_predicate \"vector_move_operand\""}]}