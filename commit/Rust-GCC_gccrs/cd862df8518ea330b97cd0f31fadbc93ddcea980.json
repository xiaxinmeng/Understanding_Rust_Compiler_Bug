{"sha": "cd862df8518ea330b97cd0f31fadbc93ddcea980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q4NjJkZjg1MThlYTMzMGI5N2NkMGYzMWZhZGJjOTNkZGNlYTk4MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2002-03-26T22:56:51Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2002-03-26T22:56:51Z"}, "message": "config.table: Support --with-build-subdir.\n\n2002-03-26  H.J. Lu  (hjl@gnu.org)\n\n\t* config.table: Support --with-build-subdir.\n\t* configure.in: Likewise.\n\t* configure: Rebuild.\n\nFrom-SVN: r51416", "tree": {"sha": "d96f4c534934b10765531e0a0b0d175344ffa31a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d96f4c534934b10765531e0a0b0d175344ffa31a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd862df8518ea330b97cd0f31fadbc93ddcea980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd862df8518ea330b97cd0f31fadbc93ddcea980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd862df8518ea330b97cd0f31fadbc93ddcea980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd862df8518ea330b97cd0f31fadbc93ddcea980/comments", "author": null, "committer": null, "parents": [{"sha": "d6220b3ad7a48ab1278229c14bf45c9c583bc4c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6220b3ad7a48ab1278229c14bf45c9c583bc4c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6220b3ad7a48ab1278229c14bf45c9c583bc4c2"}], "stats": {"total": 96, "additions": 57, "deletions": 39}, "files": [{"sha": "8f8886a289ffa443b503410921b7d96ea9be86d6", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=cd862df8518ea330b97cd0f31fadbc93ddcea980", "patch": "@@ -1,3 +1,9 @@\n+2002-03-26  H.J. Lu  (hjl@gnu.org)\n+\n+\t* config.table: Support --with-build-subdir.\n+\t* configure.in: Likewise.\n+\t* configure: Rebuild.\n+\n 2002-03-18  Stuart Griffith  <Stuart_Griffith@credence.com>\n \n \t* strtod.c (strtod): Increment 8 chars, not 7, when `infinity'"}, {"sha": "6118a9c82563ffb7861811ab91e24a4950f41adf", "filename": "libiberty/config.table", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2Fconfig.table", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2Fconfig.table", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.table?ref=cd862df8518ea330b97cd0f31fadbc93ddcea980", "patch": "@@ -1,3 +1,9 @@\n+# Don't build the shared library for build.\n+if [ -n \"${with_build_subdir}\" ]; then\n+  enable_shared=no\n+fi\n+\n+frag=\n case \"${host}\" in\n   rs6000-ibm-aix3.1 | rs6000-ibm-aix)\n                         frag=mh-aix ;;\n@@ -8,7 +14,11 @@ case \"${host}\" in\n   i[345]86-*-windows*)\tfrag=mh-windows ;;\n esac\n \n-frags=$frag\n+if [ -n \"${frag}\" ]; then\n+  frags=${libiberty_topdir}/libiberty/config/$frag\n+else\n+  frags=\n+fi\n \n # If they didn't specify --enable-shared, don't generate shared libs.\n case \"${enable_shared}\" in\n@@ -18,31 +28,26 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n if [ \"${shared}\" = \"yes\" ]; then\n+  frag=\n   case \"${host}\" in\n     *-*-cygwin*)\t;;\n-    alpha*-*-linux*)\tfrags=\"${frags} ../../config/mh-elfalphapic\" ;;\n-    arm*-*-*)\t\tfrags=\"${frags} ../../config/mh-armpic\" ;;\n-    hppa*-*-*)\t\tfrags=\"${frags} ../../config/mh-papic\" ;;\n-    i[3456]86-*-*)\tfrags=\"${frags} ../../config/mh-x86pic\" ;;\n+    alpha*-*-linux*)\tfrag=mh-elfalphapic ;;\n+    arm*-*-*)\t\tfrag=mh-armpic ;;\n+    hppa*-*-*)\t\tfrag=mh-papic ;;\n+    i[3456]86-*-*)\tfrag=mh-x86pic ;;\n     powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tfrags=\"${frags} ../../config/mh-ppcpic\" ;;\n-    sparc*-*-*)\t\tfrags=\"${frags} ../../config/mh-sparcpic\" ;;\n-    *-*-*)\t\tfrags=\"${frags} ../../config/mh-${host_cpu}pic\" ;;\n+    powerpc*-*-*)\tfrag=mh-ppcpic ;;\n+    sparc*-*-*)\t\tfrag=mh-sparcpic ;;\n+    *)\t\t\tfrag=mh-${host_cpu}pic ;;\n   esac\n+  if [ -n \"${frag}\" ]; then\n+    frags=\"${frags} ${libiberty_topdir}/config/${frag}\"\n+  fi\n fi\n \n echo \"# Warning: this fragment is automatically generated\" > temp-frag\n \n for frag in ${frags}; do\n-  case ${frag} in\n-    ../* )\n-      if [ ${srcdir} = . ]; then\n-\t[ -n \"${with_target_subdir}\" ] && frag=../${frag}\n-\t[ -n \"${with_multisrctop}\" ] && frag=${with_multisrctop}${frag}\n-      fi\n-      ;;\n-  esac\n-  frag=${srcdir}/${xsrcdir}config/$frag\n   if [ -f ${frag} ]; then\n     echo \"Appending ${frag} to xhost-mkfrag\"\n     echo \"# Following fragment copied from ${frag}\" >> temp-frag"}, {"sha": "cbbec358a711ef2d0efd181535ecdf77d10b191a", "filename": "libiberty/configure", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=cd862df8518ea330b97cd0f31fadbc93ddcea980", "patch": "@@ -12,7 +12,9 @@ ac_help=\n ac_default_prefix=/usr/local\n # Any additions from configure.in:\n ac_help=\"$ac_help\n-  --with-target-subdir=SUBDIR      Configuring in a subdirectory\"\n+  --with-target-subdir=SUBDIR      Configuring in a subdirectory for target\"\n+ac_help=\"$ac_help\n+  --with-build-subdir=SUBDIR       Configuring in a subdirectory for build\"\n ac_help=\"$ac_help\n   --with-cross-host=HOST           Configuring with a cross compiler\"\n ac_help=\"$ac_help\n@@ -40,7 +42,6 @@ program_suffix=NONE\n program_transform_name=s,x,x,\n silent=\n site=\n-sitefile=\n srcdir=\n target=NONE\n verbose=\n@@ -155,7 +156,6 @@ Configuration:\n   --help                  print this message\n   --no-create             do not create output files\n   --quiet, --silent       do not print \\`checking...' messages\n-  --site-file=FILE        use FILE as the site file\n   --version               print the version of autoconf that created configure\n Directory and file names:\n   --prefix=PREFIX         install architecture-independent files in PREFIX\n@@ -326,11 +326,6 @@ EOF\n   -site=* | --site=* | --sit=*)\n     site=\"$ac_optarg\" ;;\n \n-  -site-file | --site-file | --site-fil | --site-fi | --site-f)\n-    ac_prev=sitefile ;;\n-  -site-file=* | --site-file=* | --site-fil=* | --site-fi=* | --site-f=*)\n-    sitefile=\"$ac_optarg\" ;;\n-\n   -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n     ac_prev=srcdir ;;\n   -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n@@ -496,16 +491,12 @@ fi\n srcdir=`echo \"${srcdir}\" | sed 's%\\([^/]\\)/*$%\\1%'`\n \n # Prefer explicitly selected file to automatically selected ones.\n-if test -z \"$sitefile\"; then\n-  if test -z \"$CONFIG_SITE\"; then\n-    if test \"x$prefix\" != xNONE; then\n-      CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n-    else\n-      CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n-    fi\n+if test -z \"$CONFIG_SITE\"; then\n+  if test \"x$prefix\" != xNONE; then\n+    CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n+  else\n+    CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n   fi\n-else\n-  CONFIG_SITE=\"$sitefile\"\n fi\n for ac_site_file in $CONFIG_SITE; do\n   if test -r \"$ac_site_file\"; then\n@@ -551,6 +542,12 @@ if test \"${with_target_subdir+set}\" = set; then\n   :\n fi\n \n+# Check whether --with-build-subdir or --without-build-subdir was given.\n+if test \"${with_build_subdir+set}\" = set; then\n+  withval=\"$with_build_subdir\"\n+  :\n+fi\n+\n # Check whether --with-cross-host or --without-cross-host was given.\n if test \"${with_cross_host+set}\" = set; then\n   withval=\"$with_cross_host\"\n@@ -565,7 +562,10 @@ fi\n \n \n if test \"${srcdir}\" = \".\"; then\n-  if test -z \"${with_target_subdir}\"; then\n+  if test -n \"${with_build_subdir}\"; then\n+    libiberty_topdir=\"${srcdir}/../..\"\n+    with_target_subdir=\n+  elif test -z \"${with_target_subdir}\"; then\n     libiberty_topdir=\"${srcdir}/..\"\n   else\n     if test \"${with_target_subdir}\" != \".\"; then\n@@ -3672,6 +3672,7 @@ srcdir=${srcdir}\n host=${host}\n target=${target}\n with_target_subdir=${with_target_subdir}\n+with_build_subdir=${with_build_subdir}\n with_multisubdir=${with_multisubdir}\n ac_configure_args=\"--enable-multilib ${ac_configure_args}\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n@@ -3681,7 +3682,7 @@ EOF\n cat >> $CONFIG_STATUS <<\\EOF\n test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n if test -n \"$CONFIG_FILES\"; then\n-  if test -n \"${with_target_subdir}\"; then\n+  if test -n \"${with_build_subdir}\" || test -n \"${with_target_subdir}\"; then\n     # FIXME: We shouldn't need to set ac_file\n     ac_file=Makefile\n     . ${libiberty_topdir}/config-ml.in"}, {"sha": "0de0f8ac285bbdae2e9c6053832adaa55308a9ea", "filename": "libiberty/configure.in", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd862df8518ea330b97cd0f31fadbc93ddcea980/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=cd862df8518ea330b97cd0f31fadbc93ddcea980", "patch": "@@ -5,14 +5,19 @@ AC_INIT(pexecute.c)\n \n dnl We use these options to decide which functions to include.\n AC_ARG_WITH(target-subdir,\n-[  --with-target-subdir=SUBDIR      Configuring in a subdirectory])\n+[  --with-target-subdir=SUBDIR      Configuring in a subdirectory for target])\n+AC_ARG_WITH(build-subdir,\n+[  --with-build-subdir=SUBDIR       Configuring in a subdirectory for build])\n AC_ARG_WITH(cross-host,\n [  --with-cross-host=HOST           Configuring with a cross compiler])\n AC_ARG_WITH(newlib,\n [  --with-newlib                    Configuring with newlib])\n \n if test \"${srcdir}\" = \".\"; then\n-  if test -z \"${with_target_subdir}\"; then\n+  if test -n \"${with_build_subdir}\"; then\n+    libiberty_topdir=\"${srcdir}/../..\"\n+    with_target_subdir=\n+  elif test -z \"${with_target_subdir}\"; then\n     libiberty_topdir=\"${srcdir}/..\"\n   else\n     if test \"${with_target_subdir}\" != \".\"; then\n@@ -417,7 +422,7 @@ AC_SUBST(INSTALL_DEST)\n AC_OUTPUT(Makefile testsuite/Makefile,\n [test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n if test -n \"$CONFIG_FILES\"; then\n-  if test -n \"${with_target_subdir}\"; then\n+  if test -n \"${with_build_subdir}\" || test -n \"${with_target_subdir}\"; then\n     # FIXME: We shouldn't need to set ac_file\n     ac_file=Makefile\n     . ${libiberty_topdir}/config-ml.in\n@@ -427,6 +432,7 @@ srcdir=${srcdir}\n host=${host}\n target=${target}\n with_target_subdir=${with_target_subdir}\n+with_build_subdir=${with_build_subdir}\n with_multisubdir=${with_multisubdir}\n ac_configure_args=\"--enable-multilib ${ac_configure_args}\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}"}]}