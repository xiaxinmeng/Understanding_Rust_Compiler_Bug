{"sha": "f29deac9bd4ae965809d7735631f707e38b40f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5ZGVhYzliZDRhZTk2NTgwOWQ3NzM1NjMxZjcwN2UzOGI0MGY4Mg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-10-21T23:05:39Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-10-21T23:05:39Z"}, "message": "re PR tree-optimization/41497 (apparent integer wrong code bug)\n\n\tPR tree-optimization/41497\n\t* tree-scalar-evolution.c (analyze_evolution_in_loop): Return\n\tchrec_dont_know if the evolution function returned by follow_ssa_edge\n\tis constant in the analyzed loop and is not compatible with the\n\tinitial value before the loop.\n\t* tree-chrec.h (no_evolution_in_loop_p): Call STRIP_NOPS.\n\n\t* gcc.dg/tree-ssa/pr41497.c: New.\n\nFrom-SVN: r153441", "tree": {"sha": "19f73c5acca1dc29d3476bc353efe3c387d3dae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19f73c5acca1dc29d3476bc353efe3c387d3dae3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f29deac9bd4ae965809d7735631f707e38b40f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29deac9bd4ae965809d7735631f707e38b40f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29deac9bd4ae965809d7735631f707e38b40f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29deac9bd4ae965809d7735631f707e38b40f82/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4e1881041d1458b50cba9e892ed94c483ea64ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e1881041d1458b50cba9e892ed94c483ea64ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e1881041d1458b50cba9e892ed94c483ea64ec"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "d5e3ce94a1f32eb326fcaf12b647f6ab620d1047", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f29deac9bd4ae965809d7735631f707e38b40f82", "patch": "@@ -1,3 +1,12 @@\n+2009-10-21  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/41497\n+\t* tree-scalar-evolution.c (analyze_evolution_in_loop): Return\n+\tchrec_dont_know if the evolution function returned by follow_ssa_edge\n+\tis constant in the analyzed loop and is not compatible with the\n+\tinitial value before the loop.\n+\t* tree-chrec.h (no_evolution_in_loop_p): Call STRIP_NOPS.\n+\n 2009-10-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/sh/sh.c (nonpic_symbol_mentioned_p): Allow UNSPEC_TPOFF."}, {"sha": "d8b50b7b18d04bd86b4c0194592df86fb413387e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f29deac9bd4ae965809d7735631f707e38b40f82", "patch": "@@ -1,3 +1,8 @@\n+2009-10-21  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/41497\n+\t* gcc.dg/tree-ssa/pr41497.c: New.\n+\n 2009-10-21  Steve Ellcey  <sje@cup.hp.com>\n \n \t* g++.dg/tree-ssa/copyprop.C: Use include to define free()."}, {"sha": "e66ee846491cd040e146adab5c41d78400bf0aed", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr41497.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr41497.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr41497.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr41497.c?ref=f29deac9bd4ae965809d7735631f707e38b40f82", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-options \"-Os\" } */\n+\n+extern void abort (void);\n+\n+unsigned int a;\n+int b, c;\n+\n+void\n+foo (void)\n+{\n+  b = 0;\n+  do {\n+    for (a = -13; a == 0; a = (unsigned short)a)\n+      c = 1;\n+    b++;\n+  } while (b == 0);\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  if (a != -13)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "545db38a73087ee01ac83c018eb880c28ee670e8", "filename": "gcc/tree-chrec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftree-chrec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftree-chrec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.h?ref=f29deac9bd4ae965809d7735631f707e38b40f82", "patch": "@@ -115,6 +115,7 @@ no_evolution_in_loop_p (tree chrec, unsigned loop_num, bool *res)\n       || chrec_contains_symbols_defined_in_loop (chrec, loop_num))\n     return false;\n \n+  STRIP_NOPS (chrec);\n   scev = hide_evolution_in_other_loops_than_loop (chrec, loop_num);\n   *res = !tree_is_chrec (scev);\n   return true;"}, {"sha": "70af0fda610e3244b95a829ce70e3962294d5168", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29deac9bd4ae965809d7735631f707e38b40f82/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=f29deac9bd4ae965809d7735631f707e38b40f82", "patch": "@@ -1492,18 +1492,29 @@ analyze_evolution_in_loop (gimple loop_phi_node,\n       bb = gimple_phi_arg_edge (loop_phi_node, i)->src;\n       if (!flow_bb_inside_loop_p (loop, bb))\n \tcontinue;\n-      \n+\n       if (TREE_CODE (arg) == SSA_NAME)\n \t{\n+\t  bool val = false;\n+\n \t  ssa_chain = SSA_NAME_DEF_STMT (arg);\n \n \t  /* Pass in the initial condition to the follow edge function.  */\n \t  ev_fn = init_cond;\n \t  res = follow_ssa_edge (loop, ssa_chain, loop_phi_node, &ev_fn, 0);\n+\n+\t  /* If ev_fn has no evolution in the inner loop, and the\n+\t     init_cond is not equal to ev_fn, then we have an\n+\t     ambiguity between two possible values, as we cannot know\n+\t     the number of iterations at this point.  */\n+\t  if (TREE_CODE (ev_fn) != POLYNOMIAL_CHREC\n+\t      && no_evolution_in_loop_p (ev_fn, loop->num, &val) && val\n+\t      && !operand_equal_p (init_cond, ev_fn, 0))\n+\t    ev_fn = chrec_dont_know;\n \t}\n       else\n \tres = t_false;\n-\t      \n+\n       /* When it is impossible to go back on the same\n \t loop_phi_node by following the ssa edges, the\n \t evolution is represented by a peeled chrec, i.e. the"}]}