{"sha": "39579ba8de9d91eafcc4943259b154a9e66538f1", "node_id": "C_kwDOANBUbNoAKDM5NTc5YmE4ZGU5ZDkxZWFmY2M0OTQzMjU5YjE1NGE5ZTY2NTM4ZjE", "commit": {"author": {"name": "Sam Feifer", "email": "sfeifer@redhat.com", "date": "2022-08-03T14:31:03Z"}, "committer": {"name": "Sam Feifer", "email": "sfeifer@redhat.com", "date": "2022-08-04T13:35:14Z"}, "message": "match.pd: Add bitwise and pattern [PR106243]\n\nThis patch adds a new optimization to match.pd. The pattern, -x & 1,\nnow gets simplified to x & 1, reducing the number of instructions\nproduced.\n\nThis patch also adds tests for the optimization rule.\n\nBootstrapped/regtested on x86_64-pc-linux-gnu.\n\n\tPR tree-optimization/106243\n\ngcc/ChangeLog:\n\n\t* match.pd (-x & 1): New simplification.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr106243-1.c: New test.\n\t* gcc.dg/pr106243.c: New test.", "tree": {"sha": "59324467d7729646d3378909ac164539d385ff93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59324467d7729646d3378909ac164539d385ff93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39579ba8de9d91eafcc4943259b154a9e66538f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39579ba8de9d91eafcc4943259b154a9e66538f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39579ba8de9d91eafcc4943259b154a9e66538f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39579ba8de9d91eafcc4943259b154a9e66538f1/comments", "author": {"login": "sfeifer", "id": 64805811, "node_id": "MDQ6VXNlcjY0ODA1ODEx", "avatar_url": "https://avatars.githubusercontent.com/u/64805811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfeifer", "html_url": "https://github.com/sfeifer", "followers_url": "https://api.github.com/users/sfeifer/followers", "following_url": "https://api.github.com/users/sfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/sfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfeifer/subscriptions", "organizations_url": "https://api.github.com/users/sfeifer/orgs", "repos_url": "https://api.github.com/users/sfeifer/repos", "events_url": "https://api.github.com/users/sfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/sfeifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfeifer", "id": 64805811, "node_id": "MDQ6VXNlcjY0ODA1ODEx", "avatar_url": "https://avatars.githubusercontent.com/u/64805811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfeifer", "html_url": "https://github.com/sfeifer", "followers_url": "https://api.github.com/users/sfeifer/followers", "following_url": "https://api.github.com/users/sfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/sfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfeifer/subscriptions", "organizations_url": "https://api.github.com/users/sfeifer/orgs", "repos_url": "https://api.github.com/users/sfeifer/repos", "events_url": "https://api.github.com/users/sfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/sfeifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8552eaddc40b72461158e56b5db8709f2eb21ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8552eaddc40b72461158e56b5db8709f2eb21ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8552eaddc40b72461158e56b5db8709f2eb21ed"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "d3d73e3f55c519aad167c30300b2afe2dcba8284", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39579ba8de9d91eafcc4943259b154a9e66538f1/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39579ba8de9d91eafcc4943259b154a9e66538f1/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=39579ba8de9d91eafcc4943259b154a9e66538f1", "patch": "@@ -8061,3 +8061,8 @@ and,\n       (if (TYPE_UNSIGNED (TREE_TYPE (@0)))\n         (bit_and @0 @1)\n       (cond (le @0 @1) @0 (bit_and @0 @1))))))\n+\n+/* -x & 1 -> x & 1.  */\n+(simplify \n+  (bit_and (negate @0) integer_onep@1)\n+  (bit_and @0 @1))"}, {"sha": "b1dbe5cbe44a3f24d323f009faa49caae8d1d8a3", "filename": "gcc/testsuite/gcc.dg/pr106243-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39579ba8de9d91eafcc4943259b154a9e66538f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106243-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39579ba8de9d91eafcc4943259b154a9e66538f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106243-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106243-1.c?ref=39579ba8de9d91eafcc4943259b154a9e66538f1", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/106243 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include \"pr106243.c\"\n+\n+int main () {\n+\n+    if (foo(3) != 1\n+        || bar(-6) != 0\n+        || baz(17) != 1\n+        || qux(-128) != 0\n+        || foo(127) != 1) {\n+            __builtin_abort();\n+        }\n+\n+    return 0;\n+}"}, {"sha": "ee2706f2bf9ae04942525028f68e359d0e640c5c", "filename": "gcc/testsuite/gcc.dg/pr106243.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39579ba8de9d91eafcc4943259b154a9e66538f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106243.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39579ba8de9d91eafcc4943259b154a9e66538f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106243.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106243.c?ref=39579ba8de9d91eafcc4943259b154a9e66538f1", "patch": "@@ -0,0 +1,43 @@\n+/* PR tree-optimization/106243 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+#define vector __attribute__((vector_size(4*sizeof(int))))\n+\n+/* Test from PR.  */\n+__attribute__((noipa)) int foo (int x) {\n+    return -x & 1;\n+}\n+\n+/* Other test from PR.  */\n+__attribute__((noipa)) int bar (int x) {\n+    return (0 - x) & 1;\n+}\n+\n+/* Forward propogation.  */\n+__attribute__((noipa)) int baz (int x) {\n+    x = -x;\n+    return x & 1;\n+}\n+\n+/* Commutative property.  */\n+__attribute__((noipa)) int qux (int x) {\n+    return 1 & -x;\n+}\n+\n+/* Vector test case.  */\n+__attribute__((noipa)) vector int waldo (vector int x) {\n+    return -x & 1;\n+}\n+\n+/* Should not simplify.  */\n+__attribute__((noipa)) int thud (int x) {\n+    return -x & 2;\n+}\n+\n+/* Should not simplify.  */\n+__attribute__((noipa)) int corge (int x) {\n+    return -x & -1;\n+}\n+\n+/* { dg-final {scan-tree-dump-times \"-\" 2 \"optimized\" } } */"}]}