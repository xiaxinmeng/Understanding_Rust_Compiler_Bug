{"sha": "ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUzM2I1ZjBiMjAwOGU5NWY0YTM1MzA4ZWRjMzQ4ZWJiNGJhMDdmYQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-06-03T13:23:35Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-06-03T13:23:35Z"}, "message": "t-osf5: Remove.\n\n\tgcc:\n\t* config/alpha/t-osf5: Remove.\n\t* config/alpha/t-osf-pthread: Remove.\n\t* config.gcc (alpha*-dec-osf5.1*): Set tmake_file to t-slibgcc-dummy.\n\t* mkmap-flat.awk: Handle osf_export for Tru64 UNIX linker -input file.\n\n\tlibgcc:\n\t* configure.ac (target_thread_file): Determine thread model.\n\t* configure: Regenerate.\n\t* config.host (alpha*-dec-osf5.1*): Set tmake_file, extra_parts.\n\t* config/alpha/t-alpha: New file.\n\t* config/alpha/t-crtfm: Use $<.\n\t* config/alpha/t-ieee: New file.\n\t* config/alpha/t-osf-pthread: New file.\n\t* config/alpha/t-slibgcc-osf: New file.\n\t* config/alpha/libgcc-osf5.ver: New file.\n\nFrom-SVN: r174603", "tree": {"sha": "dd0545b550441adbc780cb3b6024f826e84539f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd0545b550441adbc780cb3b6024f826e84539f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16868d849b17f2d34d9499b21b4fb6d5f2bddad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16868d849b17f2d34d9499b21b4fb6d5f2bddad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16868d849b17f2d34d9499b21b4fb6d5f2bddad9"}], "stats": {"total": 201, "additions": 142, "deletions": 59}, "files": [{"sha": "08faeb5d478bcdfb23ac8dd308472fc3bac58025", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -1,3 +1,10 @@\n+2011-06-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/t-osf5: Remove.\n+\t* config/alpha/t-osf-pthread: Remove.\n+\t* config.gcc (alpha*-dec-osf5.1*): Set tmake_file to t-slibgcc-dummy.\n+\t* mkmap-flat.awk: Handle osf_export for Tru64 UNIX linker -input file.\n+\n 2011-06-03  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/arm-cores.def (strongarm, strongarm110, strongarm1100)"}, {"sha": "b5d16444604b42dc51f624770c607ba18a7a0771", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -756,7 +756,7 @@ alpha*-dec-osf5.1*)\n \t\textra_passes=\"mips-tfile mips-tdump\"\n \tfi\n \tuse_collect2=yes\n-\ttmake_file=\"alpha/t-alpha alpha/t-ieee alpha/t-crtfm alpha/t-osf5\"\n+\ttmake_file=\"t-slibgcc-dummy\"\n \ttm_file=\"${tm_file} alpha/osf5.h\"\n \ttm_defines=\"${tm_defines} TARGET_SUPPORT_ARCH=1\"\n \textra_options=\"${extra_options} rpath.opt alpha/osf5.opt\"\n@@ -765,7 +765,6 @@ alpha*-dec-osf5.1*)\n \tcase ${enable_threads} in\n \t  \"\" | yes | posix)\n \t    thread_file='posix'\n-\t    tmake_file=\"${tmake_file} alpha/t-osf-pthread\"\n \t    ;;\n \tesac\n \t;;"}, {"sha": "eabf2728f26f9b92949b3a87e5c996a02e3c1382", "filename": "gcc/config/alpha/t-osf5", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16868d849b17f2d34d9499b21b4fb6d5f2bddad9/gcc%2Fconfig%2Falpha%2Ft-osf5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16868d849b17f2d34d9499b21b4fb6d5f2bddad9/gcc%2Fconfig%2Falpha%2Ft-osf5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-osf5?ref=16868d849b17f2d34d9499b21b4fb6d5f2bddad9", "patch": "@@ -1,48 +0,0 @@\n-# Copyright (C) 2000, 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Compile crtbeginS.o and crtendS.o with pic.\n-CRTSTUFF_T_CFLAGS_S = -fPIC\n-\n-# Compile libgcc2.a with pic.\n-TARGET_LIBGCC2_CFLAGS = -fPIC\n-\n-# Build a shared libgcc library.\n-SHLIB_EXT = .so\n-SHLIB_NAME = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_base_name@.so.1\n-SHLIB_OBJS = @shlib_objs@\n-\n-# Beware *not* to hide the POSIX threads related symbols provided by\n-# gthr-posix.c, as this would prevent their preemption by real symbols.\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,-msym -Wl,-set_version,gcc.1 -Wl,-soname,$(SHLIB_SONAME) \\\n-\t-o $(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SONAME) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SONAME)\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) $$(DESTDIR)$$(slibdir)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)/$(SHLIB_NAME); \\\n-\t$(LN_S) $(SHLIB_SONAME) $$(DESTDIR)$$(slibdir)/$(SHLIB_NAME)"}, {"sha": "ec5e1fdf5135c7b6cb20cd6ce79f241674eed2bf", "filename": "gcc/mkmap-flat.awk", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/gcc%2Fmkmap-flat.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/gcc%2Fmkmap-flat.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkmap-flat.awk?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -1,5 +1,5 @@\n # Generate a flat list of symbols to export.\n-#\tCopyright (C) 2007, 2008, 2009  Free Software Foundation, Inc.\n+#\tCopyright (C) 2007, 2008, 2009, 2011  Free Software Foundation, Inc.\n #\tContributed by Richard Henderson <rth@cygnus.com>\n #\n # This file is part of GCC.\n@@ -20,6 +20,8 @@\n \n # Options:\n #   \"-v leading_underscore=1\" : Symbols in map need leading underscore.\n+#   \"-v osf_export=1\"\t      : Create -input file for Tru64 UNIX linker\n+#\t\t\t\tinstead of map file.\n #   \"-v pe_dll=1\"             : Create .DEF file for Windows PECOFF\n #                               DLL link instead of map file.\n \n@@ -98,6 +100,10 @@ END {\n   }\n \n   for (sym in export)\n-    if (def[sym] || (pe_dll && def[\"_\" sym]))\n-      print sym;\n+    if (def[sym] || (pe_dll && def[\"_\" sym])) {\n+      if (!osf_export)\n+\tprint sym;\n+      else\n+\tprint \"-exported_symbol \" sym;\n+    }\n }"}, {"sha": "7f8050cd44600bac463dc266254e7da184ef3878", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -1,3 +1,15 @@\n+2011-06-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (target_thread_file): Determine thread model.\n+\t* configure: Regenerate.\n+\t* config.host (alpha*-dec-osf5.1*): Set tmake_file, extra_parts.\n+\t* config/alpha/t-alpha: New file.\n+\t* config/alpha/t-crtfm: Use $<.\n+\t* config/alpha/t-ieee: New file.\n+\t* config/alpha/t-osf-pthread: New file.\n+\t* config/alpha/t-slibgcc-osf: New file.\n+\t* config/alpha/libgcc-osf5.ver: New file.\n+\n 2011-06-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host (i[34567]86-*-solaris2*): Add i386/t-crtfm to"}, {"sha": "3d92b44d3c65b23a002318d86cec466d8c628f5c", "filename": "libgcc/config.host", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -218,6 +218,13 @@ alpha*-*-netbsd*)\n alpha*-*-openbsd*)\n \t;;\n alpha*-dec-osf5.1*)\n+\ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee alpha/t-crtfm t-slibgcc alpha/t-slibgcc-osf\"\n+\tcase ${target_thread_file} in\n+\t  posix)\n+\t    tmake_file=\"${tmake_file} alpha/t-osf-pthread\"\n+\t    ;;\n+\tesac\n+\textra_parts=\"${extra_parts} qrnnd.o crtfastmath.o gthr-posix.o\"\n \t;;\n alpha64-dec-*vms*)\n \ttmake_file=\"vms/t-vms vms/t-vms64 alpha/t-vms\""}, {"sha": "4266928d1cf235d55bacbb00e553ea27e1f69944", "filename": "libgcc/config/alpha/libgcc-osf5.ver", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Flibgcc-osf5.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Flibgcc-osf5.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Flibgcc-osf5.ver?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -0,0 +1,58 @@\n+# Copyright (C) 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Tru64 UNIX specific additions to libgcc-std.ver.\n+\n+GCC_4.7.0 {\n+  __udiv_qrnnd\n+  # Beware *not* to hide the POSIX threads related symbols provided by\n+  # gthr-posix.c, as this would prevent their preemption by real symbols.\n+  __pthread_cancel\n+  __pthread_cond_broadcast\n+  __pthread_cond_destroy\n+  __pthread_cond_init\n+  __pthread_cond_signal\n+  __pthread_cond_timedwait\n+  __pthread_cond_wait\n+  __pthread_create\n+  __pthread_detach\n+  __pthread_exit\n+  __pthread_getspecific\n+  __pthread_join\n+  __pthread_mutex_destroy\n+  __pthread_mutex_init\n+  __pthread_mutex_lock\n+  __pthread_mutex_trylock\n+  __pthread_mutex_unlock\n+  __pthread_once\n+  __pthread_self\n+  __pthread_setspecific\n+  pthread_attr_destroy\n+  pthread_attr_init\n+  pthread_attr_setdetachstate\n+  pthread_getschedparam\n+  pthread_key_create\n+  pthread_key_delete\n+  pthread_mutexattr_destroy\n+  pthread_mutexattr_init\n+  pthread_mutexattr_settype\n+  pthread_setschedparam\n+  sched_get_priority_max\n+  sched_get_priority_min\n+  sched_yield\n+}"}, {"sha": "14c72d0808b02aba361746d1622b1722c05d945b", "filename": "libgcc/config/alpha/t-alpha", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-alpha", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-alpha", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-alpha?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -0,0 +1,2 @@\n+# This is a support routine for longlong.h, used by libgcc2.c.\n+LIB2ADD += $(gcc_srcdir)/config/alpha/qrnnd.asm"}, {"sha": "5060c1564513b26443220b7b8d3ae68f4d05d3f3", "filename": "libgcc/config/alpha/t-crtfm", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-crtfm?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -2,5 +2,4 @@\n # while migrating this rule from the GCC directory, but I do not\n # know why it is necessary if no other crt file uses it.\n crtfastmath.o: $(gcc_srcdir)/config/alpha/crtfastmath.c\n-\t$(gcc_compile) -frandom-seed=gcc-crtfastmath -c \\\n-\t\t$(gcc_srcdir)/config/alpha/crtfastmath.c\n+\t$(gcc_compile) -frandom-seed=gcc-crtfastmath -c $<"}, {"sha": "5fdc729ec52e6e35c9a0cd419cb2ceef153732f4", "filename": "libgcc/config/alpha/t-ieee", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-ieee", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-ieee", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-ieee?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -0,0 +1,2 @@\n+# All alphas get an IEEE complaint set of libraries.\n+HOST_LIBGCC2_CFLAGS += -mieee"}, {"sha": "c51f375a048e95aa0671158271bd617f35f60251", "filename": "libgcc/config/alpha/t-osf-pthread", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-osf-pthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-osf-pthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-osf-pthread?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -1,5 +1,5 @@\n-# Provide dummy POSIX threads functions\n-LIB2FUNCS_EXTRA += $(srcdir)/gthr-posix.c\n-\n # Compile libgcc2 with POSIX threads supports\n-TARGET_LIBGCC2_CFLAGS=-pthread\n+HOST_LIBGCC2_CFLAGS += -pthread\n+\n+# Provide dummy POSIX threads functions\n+LIB2ADD += $(gcc_srcdir)/gthr-posix.c", "previous_filename": "gcc/config/alpha/t-osf-pthread"}, {"sha": "33a07a7b6aa069043dfcef2452cb8741885e7d4a", "filename": "libgcc/config/alpha/t-slibgcc-osf", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -0,0 +1,29 @@\n+# Copyright (C) 2000, 2001, 2003, 2004, 2005, 2011\n+# Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Build a shared libgcc library with the Tru64 UNIX linker.\n+\n+SHLIB_LDFLAGS = -Wl,-msym -Wl,-set_version,gcc.1 -Wl,-soname,$(SHLIB_SONAME) \\\n+\t-Wl,-hidden -Wl,-input,$(SHLIB_MAP)\n+\n+SHLIB_MKMAP = $(gcc_srcdir)/mkmap-flat.awk\n+SHLIB_MKMAP_OPTS = -v osf_export=1\n+# Needed so mkmap-flat.awk can parse the nm output.\n+SHLIB_NM_FLAGS = -Bg\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/alpha/libgcc-osf5.ver"}, {"sha": "8232725f37294563bb9c5a79c9a7d9192713ca54", "filename": "libgcc/configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -3760,6 +3760,12 @@ $as_echo \"$acl_cv_prog_gnu_ld\" >&6; }\n with_gnu_ld=$acl_cv_prog_gnu_ld\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for thread model used by GCC\" >&5\n+$as_echo_n \"checking for thread model used by GCC... \" >&6; }\n+target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $target_thread_file\" >&5\n+$as_echo \"$target_thread_file\" >&6; }\n+\n # Check for assembler CFI support.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether assembler supports CFI directives\" >&5\n $as_echo_n \"checking whether assembler supports CFI directives... \" >&6; }"}, {"sha": "75f3967b0c38b924b00ed84ad8a8bc2d12a22a78", "filename": "libgcc/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee33b5f0b2008e95f4a35308edc348ebb4ba07fa/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=ee33b5f0b2008e95f4a35308edc348ebb4ba07fa", "patch": "@@ -169,6 +169,10 @@ AC_SUBST(fixed_point)\n \n AC_LIB_PROG_LD_GNU\n \n+AC_MSG_CHECKING([for thread model used by GCC])\n+target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n+AC_MSG_RESULT([$target_thread_file]) \n+\n # Check for assembler CFI support.\n AC_CACHE_CHECK([whether assembler supports CFI directives], [libgcc_cv_cfi],\n \t       [AC_COMPILE_IFELSE("}]}