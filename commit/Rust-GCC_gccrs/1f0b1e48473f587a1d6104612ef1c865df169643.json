{"sha": "1f0b1e48473f587a1d6104612ef1c865df169643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwYjFlNDg0NzNmNTg3YTFkNjEwNDYxMmVmMWM4NjVkZjE2OTY0Mw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-01-20T13:57:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T13:57:30Z"}, "message": "sem_aggr.adb, [...]: Minor reformatting.\n\n2014-01-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb, exp_prag.adb, sem_aux.adb, sinfo.ads, sem_ch10.adb,\n\tchecks.adb, sem_prag.adb, sem_ch12.adb, freeze.adb, g-arrspl.adb,\n\texpander.adb, gnat1drv.adb, exp_ch4.adb, sem_ch6.adb,\n\tsem_ch8.adb, exp_dist.adb: Minor reformatting.\n\nFrom-SVN: r206813", "tree": {"sha": "eb52567ceca7bf15890ad0b3a2ca1bf0fd487b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb52567ceca7bf15890ad0b3a2ca1bf0fd487b88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f0b1e48473f587a1d6104612ef1c865df169643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0b1e48473f587a1d6104612ef1c865df169643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0b1e48473f587a1d6104612ef1c865df169643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0b1e48473f587a1d6104612ef1c865df169643/comments", "author": null, "committer": null, "parents": [{"sha": "c093d3cce4323009b79e41dadee5f4f224112924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c093d3cce4323009b79e41dadee5f4f224112924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c093d3cce4323009b79e41dadee5f4f224112924"}], "stats": {"total": 113, "additions": 55, "deletions": 58}, "files": [{"sha": "f0f8471d4a0b12dc87ac76112084628681094e4f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -1,3 +1,10 @@\n+2014-01-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb, exp_prag.adb, sem_aux.adb, sinfo.ads, sem_ch10.adb,\n+\tchecks.adb, sem_prag.adb, sem_ch12.adb, freeze.adb, g-arrspl.adb,\n+\texpander.adb, gnat1drv.adb, exp_ch4.adb, sem_ch6.adb,\n+\tsem_ch8.adb, exp_dist.adb: Minor reformatting.\n+\n 2014-01-20  Yannick Moy  <moy@adacore.com>\n \n \t* gnat1drv.adb (Gnat1drv): Call Write_ALI with Object=True in GNATprove"}, {"sha": "4a3ce980f51217f1b729692467ef22347c604b5b", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -6290,7 +6290,7 @@ package body Checks is\n       --  enhanced to check for an always True value in the condition and to\n       --  generate a compilation warning???\n \n-      if not Expander_Active or else not Checks_On then\n+      if not Expander_Active or not Checks_On then\n          return;\n       end if;\n "}, {"sha": "32d430b2ee2feaf531b47fbd3c6893935ab0a588", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -12262,12 +12262,11 @@ package body Exp_Ch4 is\n \n             while Present (Par) loop\n                if Par = Wrapped_Node\n-                    or else\n-                  Nkind_In (Par, N_Assignment_Statement,\n-                                 N_Object_Declaration,\n-                                 N_Pragma,\n-                                 N_Procedure_Call_Statement,\n-                                 N_Simple_Return_Statement)\n+                 or else Nkind_In (Par, N_Assignment_Statement,\n+                                        N_Object_Declaration,\n+                                        N_Pragma,\n+                                        N_Procedure_Call_Statement,\n+                                        N_Simple_Return_Statement)\n                then\n                   Hook_Context := Par;\n                   goto Hook_Context_Found;\n@@ -12303,13 +12302,14 @@ package body Exp_Ch4 is\n \n             Finalize_Always :=\n                not (In_Cond_Expr\n-                      or else\n-                    Nkind_In (Original_Node (N), N_Case_Expression,\n-                                                 N_If_Expression));\n+                     or else\n+                       Nkind_In (Original_Node (N), N_Case_Expression,\n+                                                    N_If_Expression));\n \n             declare\n                Loc  : constant Source_Ptr := Sloc (N);\n                Temp : constant Entity_Id := Make_Temporary (Loc, 'E', N);\n+\n             begin\n                Append_To (Actions (N),\n                  Make_Object_Declaration (Loc,"}, {"sha": "22d6873f1ddb78a89f800a3c04b9c375b2705bc2", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -9839,7 +9839,7 @@ package body Exp_Dist is\n \n                declare\n                   Constrained : constant Boolean :=\n-                    not Transmit_As_Unconstrained (Typ);\n+                                  not Transmit_As_Unconstrained (Typ);\n \n                   procedure TA_Ary_Add_Process_Element\n                     (Stmts   : List_Id;\n@@ -9889,7 +9889,7 @@ package body Exp_Dist is\n                begin\n                   Set_Expression (Any_Decl,\n                     Make_Function_Call (Loc,\n-                      Name =>\n+                      Name                   =>\n                         New_Occurrence_Of (RTE (RE_Create_Any), Loc),\n                       Parameter_Associations => New_List (Result_TC)));\n                   Result_TC := Empty;\n@@ -9899,9 +9899,9 @@ package body Exp_Dist is\n                      for J in 1 .. Number_Dimensions (Typ) loop\n                         Append_To (Stms,\n                           Make_Procedure_Call_Statement (Loc,\n-                            Name =>\n-                              New_Occurrence_Of (\n-                                RTE (RE_Add_Aggregate_Element), Loc),\n+                            Name                   =>\n+                              New_Occurrence_Of\n+                                (RTE (RE_Add_Aggregate_Element), Loc),\n                             Parameter_Associations => New_List (\n                               New_Occurrence_Of (Any, Loc),\n                               Build_To_Any_Call (Loc,\n@@ -9949,10 +9949,8 @@ package body Exp_Dist is\n \n                   Append_To (Decls,\n                     Make_Object_Declaration (Loc,\n-                      Defining_Identifier =>\n-                        Strm,\n-                      Aliased_Present     =>\n-                        True,\n+                      Defining_Identifier => Strm,\n+                      Aliased_Present     => True,\n                       Object_Definition   =>\n                         New_Occurrence_Of (RTE (RE_Buffer_Stream_Type), Loc)));\n \n@@ -9964,6 +9962,7 @@ package body Exp_Dist is\n \n                   declare\n                      Attr_Name : Name_Id;\n+\n                   begin\n                      if Transmit_As_Unconstrained (Typ) then\n                         Attr_Name := Name_Output;"}, {"sha": "976e0ea9bc168f52a9d46df9fb602d1d07a4d307", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -639,7 +639,7 @@ package body Exp_Prag is\n                     Expression => Make_Identifier (Loc, Chars (Dum))),\n \n                   Make_Pragma_Argument_Association (Loc,\n-                    Chars => Name_External_Name,\n+                    Chars      => Name_External_Name,\n                     Expression => Relocate_Node (Rtti_Name))))));\n \n             Rewrite (Expression (Foreign_Data),\n@@ -654,7 +654,6 @@ package body Exp_Prag is\n \n       else\n          null;\n-\n       end if;\n    end Expand_Pragma_Import_Or_Interface;\n "}, {"sha": "760c26457dd9bad7308fd685431eb6874f3a80ce", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -84,14 +84,14 @@ package body Expander is\n           and then not (Inside_A_Generic and then Expander_Active));\n \n       --  There are three reasons for the Expander_Active flag to be false\n-      --\n+\n       --  The first is when are not generating code. In this mode the\n       --  Full_Analysis flag indicates whether we are performing a complete\n       --  analysis, in which case Full_Analysis = True or a pre-analysis in\n       --  which case Full_Analysis = False. See the spec of Sem for more info\n       --  on this. Additionally, the GNATprove_Mode flag indicates that a light\n       --  expansion for formal verification should be used.\n-      --\n+\n       --  The second reason for the Expander_Active flag to be False is that\n       --  we are performing a pre-analysis. During pre-analysis all expansion\n       --  activity is turned off to make sure nodes are semantically decorated\n@@ -111,9 +111,7 @@ package body Expander is\n       if not (Expander_Active or (Full_Analysis and GNATprove_Mode)) then\n          Set_Analyzed (N, Full_Analysis);\n \n-         if Serious_Errors_Detected > 0\n-           and then Scope_Is_Transient\n-         then\n+         if Serious_Errors_Detected > 0 and then Scope_Is_Transient then\n             Scope_Stack.Table\n              (Scope_Stack.Last).Actions_To_Be_Wrapped_Before := No_List;\n             Scope_Stack.Table"}, {"sha": "6c283e4fdbf1ab400d2db06c8d4f4fe7dca48012", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -1875,14 +1875,16 @@ package body Freeze is\n                      if Ada_Version < Ada_2012 then\n                         Error_Msg_N\n                           (\"current instance must be a limited type\",\n-                             Prefix (N));\n+                           Prefix (N));\n                      else\n                         Error_Msg_N\n-                          (\"current instance must be an immutably limited \" &\n-                            \"type (RM-2012, 7.5 (8.1/3))\",\n-                             Prefix (N));\n+                          (\"current instance must be an immutably limited \"\n+                           & \"type (RM-2012, 7.5 (8.1/3))\",\n+                           Prefix (N));\n                      end if;\n+\n                      return Abandon;\n+\n                   else\n                      return OK;\n                   end if;"}, {"sha": "2984bb8ed6738b864a50f7fc164620d0ee628768", "filename": "gcc/ada/g-arrspl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-arrspl.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -337,8 +337,8 @@ package body GNAT.Array_Split is\n          raise Index_Error;\n \n       else\n-         return S.D.Source\n-           (S.D.Slices (Index).Start .. S.D.Slices (Index).Stop);\n+         return\n+           S.D.Source (S.D.Slices (Index).Start .. S.D.Slices (Index).Stop);\n       end if;\n    end Slice;\n "}, {"sha": "d380468669cb68a97d728dd0ceb3ee0c31abbb14", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -1262,8 +1262,7 @@ begin\n       --  same as the object file produced for compilation.\n \n       Write_ALI (Object => (Back_End_Mode = Generate_Object\n-                              or else\n-                            GNATprove_Mode));\n+                             or else GNATprove_Mode));\n \n       if not Compilation_Errors then\n "}, {"sha": "8593d025786e07e7328ac3e337d009113d0e01f3", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -459,9 +459,7 @@ package body Sem_Aggr is\n       --  added in the tree, so that the formal verification can rely on those\n       --  to be present.\n \n-      if not (Expander_Active or GNATprove_Mode)\n-        or In_Spec_Expression\n-      then\n+      if not (Expander_Active or GNATprove_Mode) or In_Spec_Expression then\n          return;\n       end if;\n \n@@ -1585,7 +1583,7 @@ package body Sem_Aggr is\n             Value := Expr_Value (From);\n \n          --  If expression From is something like Some_Type'Val (10) then\n-         --  Value = 10\n+         --  Value = 10.\n \n          elsif Nkind (From) = N_Attribute_Reference\n            and then Attribute_Name (From) = Name_Val\n@@ -1682,7 +1680,6 @@ package body Sem_Aggr is\n               (Expr, Nxt_Ind, Nxt_Ind_Constr, Component_Typ, Others_Allowed);\n \n          else\n-\n             --  If it's \"... => <>\", nothing to resolve\n \n             if Nkind (Expr) = N_Component_Association then"}, {"sha": "d95af4f82bbbb6fe0db7c8464054413559eea6b3", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -103,6 +103,8 @@ package body Sem_Aux is\n       then\n          return Class_Wide_Type (Non_Limited_View (Etype (Ent)));\n \n+      --  In all other cases, return entity unchanged\n+\n       else\n          return Ent;\n       end if;"}, {"sha": "bc4deef04947ce90ed9fb442d8381dcdff13e1a6", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -3066,7 +3066,7 @@ package body Sem_Ch10 is\n         and then Nkind (Original_Node (Unit)) = N_Package_Instantiation\n       then\n          return Defining_Entity\n-                 (Specification (Instance_Spec (Original_Node (Unit))));\n+                  (Specification (Instance_Spec (Original_Node (Unit))));\n       elsif Nkind (Unit) = N_Package_Instantiation then\n          return Defining_Entity (Specification (Instance_Spec (Unit)));\n       else"}, {"sha": "e0276a6be593326f805e9eadcb0f41532fb3d62d", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -3611,8 +3611,7 @@ package body Sem_Ch12 is\n \n          --  Save the instantiation node, for subsequent instantiation of the\n          --  body, if there is one and we are generating code for the current\n-         --  unit. Mark the unit as having a body, to avoid a premature error\n-         --  message.\n+         --  unit. Mark unit as having a body (avoids premature error message).\n \n          --  We instantiate the body if we are generating code, if we are\n          --  generating cross-reference information, or if we are building\n@@ -4390,8 +4389,7 @@ package body Sem_Ch12 is\n            or else Is_Inlined (Subp)\n            or else Is_Inlined (Alias (Subp)))\n \n-        --  Must be generating code or analyzing code in ASIS mode or GNATprove\n-        --  mode.\n+        --  Must be generating code or analyzing code in ASIS/GNATprove mode\n \n         and then (Operating_Mode = Generate_Code\n                    or else (Operating_Mode = Check_Semantics"}, {"sha": "a7cadbd97df9c90bf871018866043031bd9fbc5a", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -1276,7 +1276,6 @@ package body Sem_Ch6 is\n          return;\n \n       else\n-\n          --  Resolve the types of the formals now, because the freeze point\n          --  may appear in a different context, e.g. an instantiation.\n \n@@ -1362,13 +1361,11 @@ package body Sem_Ch6 is\n       Par : constant Node_Id := Parent (N);\n \n    begin\n-      if        (Nkind (Par) = N_Function_Call\n-                  and then N = Name (Par))\n+      if        (Nkind (Par) = N_Function_Call and then N = Name (Par))\n         or else  Nkind (Par) = N_Function_Instantiation\n-        or else (Nkind (Par) = N_Indexed_Component\n-                   and then N = Prefix (Par))\n+        or else (Nkind (Par) = N_Indexed_Component and then N = Prefix (Par))\n         or else (Nkind (Par) = N_Pragma_Argument_Association\n-                   and then not Is_Pragma_String_Literal (Par))\n+                  and then not Is_Pragma_String_Literal (Par))\n         or else  Nkind (Par) = N_Subprogram_Renaming_Declaration\n         or else (Nkind (Par) = N_Attribute_Reference\n                   and then Attribute_Name (Par) /= Name_Value)"}, {"sha": "fecfcc89e9e4374ab8bde00f6f2f20a7769b40aa", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -5262,8 +5262,7 @@ package body Sem_Ch8 is\n                      Candidate        := Non_Limited_View (Id);\n                      Is_New_Candidate := True;\n \n-                  --  Hide the candidate because it is not used in a proper\n-                  --  context.\n+                  --  Hide candidate because it is not used in a proper context\n \n                   else\n                      Candidate        := Empty;"}, {"sha": "38dad25490349f94ad9060bcf88fd8943a600333", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -4607,7 +4607,7 @@ package body Sem_Prag is\n             --  where there is no later point at which the aspect will be\n             --  analyzed.\n \n-            if GNATprove_Mode or else ASIS_Mode then\n+            if GNATprove_Mode or ASIS_Mode then\n                Analyze_Pre_Post_Condition_In_Decl_Part\n                  (N, Defining_Entity (Unit (Parent (PO))));\n             end if;"}, {"sha": "4496672decebf723b74984f3d2b5c9b891d2b71d", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0b1e48473f587a1d6104612ef1c865df169643/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=1f0b1e48473f587a1d6104612ef1c865df169643", "patch": "@@ -519,12 +519,12 @@ package Sinfo is\n    --  This light expansion does two transformations of the tree, that cannot\n    --  be postponed after the frontend semantic analysis:\n \n-   --    1. Replace object renamings by renamed object. This requires\n-   --       introducing temporaries at the point of the renaming, which must be\n-   --       properly analyzed.\n+   --    1. Replace object renamings by renamed object. This requires the\n+   --       introdtion of temporaries at the point of the renaming, which must\n+   --       be properly analyzed.\n \n    --    2. Fully qualify entity names. This is needed to generate suitable\n-   --       local effects/call-graphs in ALI files, with the completely\n+   --       local effects and call-graphs in ALI files, with the completely\n    --       qualified names (in particular the suffix to distinguish homonyms).\n \n    --  The tree after this light expansion should be fully analyzed\n@@ -553,7 +553,7 @@ package Sinfo is\n    -- Common Flag Fields --\n    ------------------------\n \n-   --  The following flag fields appear in all nodes\n+   --  The following flag fields appear in all nodes:\n \n    --  Analyzed\n    --    This flag is used to indicate that a node (and all its children have"}]}