{"sha": "9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNlMzg3ZDljZmNmMTliMDRjYTZlOTVkM2MxNmU0NGNkZjMxZjAxYw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-08-28T22:34:55Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-08-28T22:34:55Z"}, "message": "re PR c++/28860 (Trouble with bound template template parameter in specialization)\n\n\tPR c++/28860\n\t* cp-tree.h (maybe_process_partial_specialization): Return\n\ttree instead of void.\n\t* parser.c (cp_parser_class_head): Use return value of\n\tmaybe_process_partial_specialization.\n\t* pt.c (maybe_process_partial_specialization): Return error_mark_node\n\tfor broken specializations, TYPE otherwise.  Check for template\n\ttemplate parameters.\n\n\t* g++.dg/template/ttp22.C: New test.\n\nFrom-SVN: r116541", "tree": {"sha": "ab647b9e6bbd47a98a10082b10f51c8bcbec667d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab647b9e6bbd47a98a10082b10f51c8bcbec667d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/comments", "author": null, "committer": null, "parents": [{"sha": "f414f2f35e4cb2f18f2da8f28777ad797cf7b0fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f414f2f35e4cb2f18f2da8f28777ad797cf7b0fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f414f2f35e4cb2f18f2da8f28777ad797cf7b0fa"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "8b7eae9dfb92833fe5e1d158a892ecb53c8da343", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "patch": "@@ -1,3 +1,14 @@\n+2006-08-28  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/28860\n+\t* cp-tree.h (maybe_process_partial_specialization): Return\n+\ttree instead of void.\n+\t* parser.c (cp_parser_class_head): Use return value of\n+\tmaybe_process_partial_specialization.\n+\t* pt.c (maybe_process_partial_specialization): Return error_mark_node\n+\tfor broken specializations, TYPE otherwise.  Check for template\n+\ttemplate parameters.\n+\n 2006-08-27  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/28058"}, {"sha": "3c20afed5ec14397538b180cdc8f25a9f17ea3b1", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "patch": "@@ -4111,7 +4111,7 @@ extern int template_class_depth\t\t\t(tree);\n extern int is_specialization_of\t\t\t(tree, tree);\n extern bool is_specialization_of_friend\t\t(tree, tree);\n extern int comp_template_args\t\t\t(tree, tree);\n-extern void maybe_process_partial_specialization (tree);\n+extern tree maybe_process_partial_specialization (tree);\n extern tree most_specialized_instantiation\t(tree);\n extern void print_candidates\t\t\t(tree);\n extern void instantiate_pending_templates\t(int);"}, {"sha": "5271113485a7c2775fa4e2a45e11c543e18af360", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "patch": "@@ -13287,7 +13287,7 @@ cp_parser_class_head (cp_parser* parser,\n   if (template_id_p)\n     {\n       type = TREE_TYPE (id);\n-      maybe_process_partial_specialization (type);\n+      type = maybe_process_partial_specialization (type);\n       if (nested_name_specifier)\n \tpushed_scope = push_scope (nested_name_specifier);\n     }"}, {"sha": "79d9de4e4ce79fd0134258696318901de197f5f8", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "patch": "@@ -673,13 +673,20 @@ check_explicit_instantiation_namespace (tree spec)\n /* The TYPE is being declared.  If it is a template type, that means it\n    is a partial specialization.  Do appropriate error-checking.  */\n \n-void\n+tree\n maybe_process_partial_specialization (tree type)\n {\n   tree context;\n \n   if (type == error_mark_node)\n-    return;\n+    return error_mark_node;\n+\n+  if (TREE_CODE (type) == BOUND_TEMPLATE_TEMPLATE_PARM)\n+    {\n+      error (\"name of class shadows template template parameter %qD\",\n+\t     TYPE_NAME (type));\n+      return error_mark_node;\n+    }\n \n   context = TYPE_CONTEXT (type);\n \n@@ -764,7 +771,12 @@ maybe_process_partial_specialization (tree type)\n \t}\n     }\n   else if (processing_specialization)\n-    error (\"explicit specialization of non-template %qT\", type);\n+    {\n+      error (\"explicit specialization of non-template %qT\", type);\n+      return error_mark_node;\n+    }\n+\n+  return type;\n }\n \n /* Returns nonzero if we can optimize the retrieval of specializations"}, {"sha": "6e2043195bcb4c6bd28033985b1ce584bdd53347", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "patch": "@@ -1,3 +1,8 @@\n+2006-08-28  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/28860\n+\t* g++.dg/template/ttp22.C: New test.\n+\n 2006-08-28  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR middle-end/26632"}, {"sha": "f3449435f4b0c5593a4953a335611d7a8d5f954b", "filename": "gcc/testsuite/g++.dg/template/ttp22.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp22.C?ref=9ce387d9cfcf19b04ca6e95d3c16e44cdf31f01c", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/28860\n+// { dg-do compile}\n+\n+template<template<int> class A>\n+class A<0>;  // { dg-error \"shadows template template parameter\" }\n+\n+template<template<int> class B>\n+class B<0> {};  // { dg-error \"shadows template template parameter\" }"}]}