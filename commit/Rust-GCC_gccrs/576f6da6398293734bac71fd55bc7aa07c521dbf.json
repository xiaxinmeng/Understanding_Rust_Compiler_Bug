{"sha": "576f6da6398293734bac71fd55bc7aa07c521dbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2ZjZkYTYzOTgyOTM3MzRiYWM3MWZkNTViYzdhYTA3YzUyMWRiZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-01-04T08:59:47Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-01-04T08:59:47Z"}, "message": "re PR fortran/55763 (Issues with some simpler CLASS(*) programs)\n\n2014-01-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55763\n        * decl.c (gfc_match_null): Parse and reject MOLD.\n\n2014-01-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55763\n        * gfortran.dg/null_7.f90: New.\n\nFrom-SVN: r194886", "tree": {"sha": "b7e6b66499bc59fda10aad5210c9e60158b25d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e6b66499bc59fda10aad5210c9e60158b25d48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576f6da6398293734bac71fd55bc7aa07c521dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576f6da6398293734bac71fd55bc7aa07c521dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576f6da6398293734bac71fd55bc7aa07c521dbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576f6da6398293734bac71fd55bc7aa07c521dbf/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15115f7aa839855a7f30f83b32070cee7f063c6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15115f7aa839855a7f30f83b32070cee7f063c6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15115f7aa839855a7f30f83b32070cee7f063c6d"}], "stats": {"total": 68, "additions": 63, "deletions": 5}, "files": [{"sha": "5c0d6d4a44552810cab2004cd29d3cc036911fdd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=576f6da6398293734bac71fd55bc7aa07c521dbf", "patch": "@@ -1,3 +1,8 @@\n+2013-01-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55763\n+\t* decl.c (gfc_match_null): Parse and reject MOLD.\n+\n 2013-01-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55854"}, {"sha": "fc86efbafa608f6e9abdffcf385d07ebcdbc6f7f", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=576f6da6398293734bac71fd55bc7aa07c521dbf", "patch": "@@ -1,5 +1,6 @@\n /* Declaration statement matcher\n-   Copyright (C) 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+   Copyright (C) 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n+   2012, 2013\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -1671,11 +1672,31 @@ match\n gfc_match_null (gfc_expr **result)\n {\n   gfc_symbol *sym;\n-  match m;\n+  match m, m2 = MATCH_NO;\n \n-  m = gfc_match (\" null ( )\");\n-  if (m != MATCH_YES)\n-    return m;\n+  if ((m = gfc_match (\" null ( )\")) == MATCH_ERROR)\n+    return MATCH_ERROR;\n+\n+  if (m == MATCH_NO)\n+    {\n+      locus old_loc;\n+      char name[GFC_MAX_SYMBOL_LEN + 1];\n+\n+      if ((m2 = gfc_match (\" null (\", name)) != MATCH_YES)\n+\treturn m2;\n+\n+      old_loc = gfc_current_locus;\n+      if ((m2 = gfc_match (\" %n ) \", name)) == MATCH_ERROR)\n+\treturn MATCH_ERROR;\n+      if (m2 != MATCH_YES\n+\t  && ((m2 = gfc_match (\" mold = %n )\", name)) == MATCH_ERROR))\n+\treturn MATCH_ERROR;\n+      if (m2 == MATCH_NO)\n+\t{\n+\t  gfc_current_locus = old_loc;\n+\t  return MATCH_NO;\n+\t}\n+    }\n \n   /* The NULL symbol now has to be/become an intrinsic function.  */\n   if (gfc_get_symbol (\"null\", NULL, &sym))\n@@ -1694,6 +1715,13 @@ gfc_match_null (gfc_expr **result)\n \n   *result = gfc_get_null_expr (&gfc_current_locus);\n \n+  /* Invalid per F2008, C512.  */\n+  if (m2 == MATCH_YES)\n+    {\n+      gfc_error (\"NULL() initialization at %C may not have MOLD\");\n+      return MATCH_ERROR;\n+    }\n+\n   return MATCH_YES;\n }\n "}, {"sha": "2594b26508c4e69c429c9e1634262b323d7eb418", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=576f6da6398293734bac71fd55bc7aa07c521dbf", "patch": "@@ -1,3 +1,8 @@\n+2013-01-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55763\n+\t* gfortran.dg/null_7.f90: New.\n+\n 2013-01-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55854"}, {"sha": "d6d77d2b0a40aedcff7e449354abd3cc0c053b61", "filename": "gcc/testsuite/gfortran.dg/null_7.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ftestsuite%2Fgfortran.dg%2Fnull_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576f6da6398293734bac71fd55bc7aa07c521dbf/gcc%2Ftestsuite%2Fgfortran.dg%2Fnull_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnull_7.f90?ref=576f6da6398293734bac71fd55bc7aa07c521dbf", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+!\n+! PR fortran/55763\n+!\n+\n+implicit none\n+integer, pointer :: x\n+class(*), pointer :: y\n+integer, pointer :: p1 => null(x) ! { dg-error \"NULL.. initialization at .1. may not have MOLD\" }\n+integer, pointer :: p2 => null(mold=x) ! { dg-error \"NULL.. initialization at .1. may not have MOLD\" }\n+class(*), pointer :: p3 =>null(x) ! { dg-error \"NULL.. initialization at .1. may not have MOLD\" }\n+type t\n+  real, pointer :: a1 => null(x) ! { dg-error \"NULL.. initialization at .1. may not have MOLD\" }\n+  real, pointer :: a2 => null ( mold = x) ! { dg-error \"NULL.. initialization at .1. may not have MOLD\" }\n+  class(*), pointer :: a3 => null(mold = x )  ! { dg-error \"NULL.. initialization at .1. may not have MOLD\" }\n+end type t\n+\n+x => null(x) ! OK\n+y => null(y) ! OK\n+end"}]}