{"sha": "9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "node_id": "C_kwDOANBUbNoAKDljNDZhODUzYmU0YjVhOWMyZTFiOTY1ZmEwZGNkNDRiZWVkNzE5MjQ", "commit": {"author": {"name": "mxlol233", "email": "mxlol233@outlook.com", "date": "2023-03-01T11:31:19Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-03-01T15:02:21Z"}, "message": "Add feature gate definition for `extern_types`.\n\nThis commit add a basic implementation to gating `ExternalTypeItem` AST node.\n\ngcc/rust/ChangeLog:\n\n\t* checks/errors/rust-feature-gate.cc: Add definition\n\tfor `extern_types`.\n\t* checks/errors/rust-feature-gate.h: Likewise.\n\t* checks/errors/rust-feature.cc: Likewise.\n\t* checks/errors/rust-feature.h: Likewise.\n\ngcc/testsuite/ChangeLog:\n\t* rust/compile/feature_extern_types.rs:New file.\n\nSigned-off-by: Xiao Ma <mxlol233@outlook.com>", "tree": {"sha": "ce78941f0f79ef1d7a514fa097480ebdb44e36f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce78941f0f79ef1d7a514fa097480ebdb44e36f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/comments", "author": {"login": "TuringKi", "id": 9394223, "node_id": "MDQ6VXNlcjkzOTQyMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9394223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TuringKi", "html_url": "https://github.com/TuringKi", "followers_url": "https://api.github.com/users/TuringKi/followers", "following_url": "https://api.github.com/users/TuringKi/following{/other_user}", "gists_url": "https://api.github.com/users/TuringKi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TuringKi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TuringKi/subscriptions", "organizations_url": "https://api.github.com/users/TuringKi/orgs", "repos_url": "https://api.github.com/users/TuringKi/repos", "events_url": "https://api.github.com/users/TuringKi/events{/privacy}", "received_events_url": "https://api.github.com/users/TuringKi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dce6f995c2b3bc021a97872b413807de7d294b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dce6f995c2b3bc021a97872b413807de7d294b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dce6f995c2b3bc021a97872b413807de7d294b1"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "07d367e629213a4d9345ceaf26b3b0df4cb4bc14", "filename": "gcc/rust/checks/errors/rust-feature-gate.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.cc?ref=9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "patch": "@@ -103,6 +103,10 @@ FeatureGate::visit (AST::ExternBlock &block)\n \tgate (Feature::Name::INTRINSICS, block.get_locus (),\n \t      \"intrinsics are subject to change\");\n     }\n+  for (const auto &item : block.get_extern_items ())\n+    {\n+      item->accept_vis (*this);\n+    }\n }\n \n void\n@@ -155,4 +159,13 @@ FeatureGate::visit (AST::Function &function)\n   check_rustc_attri (function.get_outer_attrs ());\n }\n \n+void\n+FeatureGate::visit (AST::ExternalTypeItem &item)\n+{\n+  // TODO(mxlol233): The gating needs a complete visiting chain to activate\n+  // `AST::ExternalTypeItem`.\n+  gate (Feature::Name::EXTERN_TYPES, item.get_locus (),\n+\t\"extern types are experimental\");\n+}\n+\n } // namespace Rust\n\\ No newline at end of file"}, {"sha": "c442fd3d7d023a550d344abd0283a9c5cc619d8e", "filename": "gcc/rust/checks/errors/rust-feature-gate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.h?ref=9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "patch": "@@ -133,7 +133,7 @@ class FeatureGate : public AST::ASTVisitor\n   void visit (AST::Trait &trait) override {}\n   void visit (AST::InherentImpl &impl) override;\n   void visit (AST::TraitImpl &impl) override;\n-  void visit (AST::ExternalTypeItem &item) override {}\n+  void visit (AST::ExternalTypeItem &item) override;\n   void visit (AST::ExternalStaticItem &item) override {}\n   void visit (AST::ExternalFunctionItem &item) override {}\n   void visit (AST::ExternBlock &block) override;"}, {"sha": "e36e540035fe0d213644f8a383309dcc1fd1f303", "filename": "gcc/rust/checks/errors/rust-feature.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature.cc?ref=9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "patch": "@@ -43,6 +43,10 @@ Feature::create (Feature::Name name)\n       return Feature (Feature::Name::DECL_MACRO, Feature::State::ACCEPTED,\n \t\t      \"decl_macro\", \"1.0.0\", 0,\n \t\t      Optional<CompileOptions::Edition>::none (), \"\");\n+    case Feature::Name::EXTERN_TYPES:\n+      return Feature (Feature::Name::EXTERN_TYPES, Feature::State::ACTIVE,\n+\t\t      \"extern_types\", \"1.23.0\", 43467,\n+\t\t      Optional<CompileOptions::Edition>::none (), \"\");\n     default:\n       gcc_unreachable ();\n     }\n@@ -56,6 +60,7 @@ const std::map<std::string, Feature::Name> Feature::name_hash_map = {\n   // TODO: Rename to \"auto_traits\" when supporting\n   // later Rust versions\n   {\"optin_builtin_traits\", Feature::Name::AUTO_TRAITS},\n+  {\"extern_types\", Feature::Name::EXTERN_TYPES},\n }; // namespace Rust\n \n Optional<Feature::Name>"}, {"sha": "7562eaf594b854bf53369b6f4406f8d45ba5a8c1", "filename": "gcc/rust/checks/errors/rust-feature.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature.h?ref=9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "patch": "@@ -42,6 +42,7 @@ class Feature\n     RUSTC_ATTRS,\n     DECL_MACRO,\n     AUTO_TRAITS,\n+    EXTERN_TYPES,\n   };\n \n   const std::string &as_string () { return m_name_str; }"}, {"sha": "5e314931d6a77480115e7e891963e801bd594953", "filename": "gcc/testsuite/rust/compile/feature_extern_types.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Ftestsuite%2Frust%2Fcompile%2Ffeature_extern_types.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c46a853be4b5a9c2e1b965fa0dcd44beed71924/gcc%2Ftestsuite%2Frust%2Fcompile%2Ffeature_extern_types.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ffeature_extern_types.rs?ref=9c46a853be4b5a9c2e1b965fa0dcd44beed71924", "patch": "@@ -0,0 +1,8 @@\n+extern \"C\" {\n+    type F; //{ dg-error \"extern types are experimental.\" \"\" { target *-*-* }  }\n+}\n+\n+\n+fn main() {\n+\n+}"}]}