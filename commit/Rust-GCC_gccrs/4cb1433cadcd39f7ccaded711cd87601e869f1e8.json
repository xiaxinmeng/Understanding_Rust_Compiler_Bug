{"sha": "4cb1433cadcd39f7ccaded711cd87601e869f1e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNiMTQzM2NhZGNkMzlmN2NjYWRlZDcxMWNkODc2MDFlODY5ZjFlOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-30T06:12:37Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-30T06:12:37Z"}, "message": "Document FUNCTION_OK_FOR_SIBCALL.\n\nFrom-SVN: r34261", "tree": {"sha": "82709ff76cc521f6cbf6a39e3c3efebf1cfffa8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82709ff76cc521f6cbf6a39e3c3efebf1cfffa8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cb1433cadcd39f7ccaded711cd87601e869f1e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb1433cadcd39f7ccaded711cd87601e869f1e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb1433cadcd39f7ccaded711cd87601e869f1e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb1433cadcd39f7ccaded711cd87601e869f1e8/comments", "author": null, "committer": null, "parents": [{"sha": "37dbf7aa9c7ecd0d04c5caf229023d9e4d911129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37dbf7aa9c7ecd0d04c5caf229023d9e4d911129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37dbf7aa9c7ecd0d04c5caf229023d9e4d911129"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "b5afde48e4293d215e8ea403f4a498f303873d66", "filename": "gcc/tm.texi", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb1433cadcd39f7ccaded711cd87601e869f1e8/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb1433cadcd39f7ccaded711cd87601e869f1e8/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=4cb1433cadcd39f7ccaded711cd87601e869f1e8", "patch": "@@ -2171,6 +2171,7 @@ This describes the stack layout and calling conventions.\n * Function Entry::\n * Profiling::\n * Inlining::\n+* Tail Calling::\n @end menu\n \n @node Frame Layout\n@@ -3684,6 +3685,24 @@ takes one argument, a @samp{DECL} describing the function.  It should\n return non-zero if the function can be inlined, otherwise it should\n return 0.\n \n+@node Tail Calling\n+@subsection Permitting tail calls to functions\n+@cindex tail calls\n+@cindex sibling calls\n+\n+@table @code\n+@findex FUNCTION_OK_FOR_SIBCALL\n+@item FUNCTION_OK_FOR_SIBCALL (@var{decl})\n+A C expression that evaluates to true if it is ok to perform a sibling\n+call to @var{decl}.  \n+\n+It is not uncommon for limitations of calling conventions to prevent\n+tail calls to functions outside the current unit of translation, or\n+during PIC compilation.  Use this macro to enforce these restrictions,\n+as the @code{sibcall} md pattern can not fail, or fall over to a \n+``normal'' call.\n+@end table\n+\n @node Varargs\n @section Implementing the Varargs Macros\n @cindex varargs implementation"}]}