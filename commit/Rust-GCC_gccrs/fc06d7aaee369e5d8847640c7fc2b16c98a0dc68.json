{"sha": "fc06d7aaee369e5d8847640c7fc2b16c98a0dc68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwNmQ3YWFlZTM2OWU1ZDg4NDc2NDBjN2ZjMmIxNmM5OGEwZGM2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-31T22:44:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-31T22:44:48Z"}, "message": "(simplify_and_const_int): Never consider bits outside of MODE.\n\nFrom-SVN: r3398", "tree": {"sha": "42c3d958403bbc272f19706969facb70fa3d8292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42c3d958403bbc272f19706969facb70fa3d8292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc06d7aaee369e5d8847640c7fc2b16c98a0dc68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc06d7aaee369e5d8847640c7fc2b16c98a0dc68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc06d7aaee369e5d8847640c7fc2b16c98a0dc68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc06d7aaee369e5d8847640c7fc2b16c98a0dc68/comments", "author": null, "committer": null, "parents": [{"sha": "8935266327db0b92d657a86b23ecb6ef473e07a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8935266327db0b92d657a86b23ecb6ef473e07a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8935266327db0b92d657a86b23ecb6ef473e07a3"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "1bf0405fca5b4fd0cbd3bdc182829c733cddeffb", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc06d7aaee369e5d8847640c7fc2b16c98a0dc68/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc06d7aaee369e5d8847640c7fc2b16c98a0dc68/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=fc06d7aaee369e5d8847640c7fc2b16c98a0dc68", "patch": "@@ -5899,8 +5899,11 @@ simplify_and_const_int (x, mode, varop, constop)\n   if (GET_CODE (varop) == CONST_INT)\n     return GEN_INT (constop & INTVAL (varop));\n \n-  /* See what bits may be nonzero in VAROP.  */\n-  nonzero = nonzero_bits (varop, mode);\n+  /* See what bits may be nonzero in VAROP.  Unlike the general case of\n+     a call to nonzero_bits, here we don't care about bits outside\n+     MODE.  */\n+\n+  nonzero = nonzero_bits (varop, mode) & GET_MODE_MASK (mode);\n \n   /* Turn off all bits in the constant that are known to already be zero.\n      Thus, if the AND isn't needed at all, we will have CONSTOP == NONZERO_BITS"}]}