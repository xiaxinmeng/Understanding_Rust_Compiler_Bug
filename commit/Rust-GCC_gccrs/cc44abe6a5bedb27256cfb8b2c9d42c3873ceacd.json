{"sha": "cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M0NGFiZTZhNWJlZGIyNzI1NmNmYjhiMmM5ZDQyYzM4NzNjZWFjZA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2008-05-14T08:39:46Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2008-05-14T08:39:46Z"}, "message": "sparc.c (sparc_profile_hook): If NO_PROFILE_COUNTERS, don't generate and pass a label into mcount.\n\n\t* config/sparc/sparc.c (sparc_profile_hook): If\n\tNO_PROFILE_COUNTERS, don't generate and pass a label\n\tinto mcount.\n\t* config/sparc/linux.h (NO_PROFILE_COUNTERS): Define as 1.\n\t* config/sparc/linux64.h (NO_PROFILE_COUNTERS): Likewise.\n\nFrom-SVN: r135284", "tree": {"sha": "ff37f188be94e6a92b63d0f364f9e94bc49d13aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff37f188be94e6a92b63d0f364f9e94bc49d13aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa2f8c7e6ae12642905df0e518d58b724bccf5f"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "c9f46852f68080f47c99a160de97b834605113fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "patch": "@@ -1,3 +1,11 @@\n+2008-05-14  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.c (sparc_profile_hook): If\n+\tNO_PROFILE_COUNTERS, don't generate and pass a label\n+\tinto mcount.\n+\t* config/sparc/linux.h (NO_PROFILE_COUNTERS): Define as 1.\n+\t* config/sparc/linux64.h (NO_PROFILE_COUNTERS): Likewise.\n+\n 2008-05-14  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* cse.c (cse_cc_succs): Invoke delete_insn_and_edges."}, {"sha": "ab2ab308c9198010c30f94e402bd41c70b5e3fa6", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "patch": "@@ -175,3 +175,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Define if long doubles should be mangled as 'g'.  */\n #define TARGET_ALTERNATE_LONG_DOUBLE_MANGLING\n+\n+/* We use glibc _mcount for profiling.  */\n+#define NO_PROFILE_COUNTERS\t1"}, {"sha": "cd156673fafb5e6faa34f4387fd54a6622a20ec1", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "patch": "@@ -309,3 +309,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Define if long doubles should be mangled as 'g'.  */\n #define TARGET_ALTERNATE_LONG_DOUBLE_MANGLING\n+\n+/* We use glibc _mcount for profiling.  */\n+#define NO_PROFILE_COUNTERS\t1"}, {"sha": "c1cc725334cc1a6b64316271889454bcbfa564b2", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=cc44abe6a5bedb27256cfb8b2c9d42c3873ceacd", "patch": "@@ -7800,11 +7800,17 @@ sparc_profile_hook (int labelno)\n   char buf[32];\n   rtx lab, fun;\n \n-  ASM_GENERATE_INTERNAL_LABEL (buf, \"LP\", labelno);\n-  lab = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (buf));\n   fun = gen_rtx_SYMBOL_REF (Pmode, MCOUNT_FUNCTION);\n-\n-  emit_library_call (fun, LCT_NORMAL, VOIDmode, 1, lab, Pmode);\n+  if (NO_PROFILE_COUNTERS)\n+    {\n+      emit_library_call (fun, LCT_NORMAL, VOIDmode, 0);\n+    }\n+  else\n+    {\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LP\", labelno);\n+      lab = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (buf));\n+      emit_library_call (fun, LCT_NORMAL, VOIDmode, 1, lab, Pmode);\n+    }\n }\n \f\n #ifdef OBJECT_FORMAT_ELF"}]}