{"sha": "1490f39253ed06e99aec28d0c265154039fa9b2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ5MGYzOTI1M2VkMDZlOTlhZWMyOGQwYzI2NTE1NDAzOWZhOWIyYg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-07-30T20:24:59Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-07-30T20:24:59Z"}, "message": "Add forgotten ChangeLog entry.\n\nFrom-SVN: r44485", "tree": {"sha": "25e0fc36fa2f6894576fb01252bf5d39b5a3c013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25e0fc36fa2f6894576fb01252bf5d39b5a3c013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1490f39253ed06e99aec28d0c265154039fa9b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1490f39253ed06e99aec28d0c265154039fa9b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1490f39253ed06e99aec28d0c265154039fa9b2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1490f39253ed06e99aec28d0c265154039fa9b2b/comments", "author": null, "committer": null, "parents": [{"sha": "3d5aea83669398c151371796f2b84cbb0f52727c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5aea83669398c151371796f2b84cbb0f52727c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d5aea83669398c151371796f2b84cbb0f52727c"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "e6b7d91de92e70850a03019645a930c96b1555ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1490f39253ed06e99aec28d0c265154039fa9b2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1490f39253ed06e99aec28d0c265154039fa9b2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1490f39253ed06e99aec28d0c265154039fa9b2b", "patch": "@@ -1,3 +1,20 @@\n+2001-07-30  Andreas Jaeger  <aj@suse.de>\n+\n+        * jump.c: Add prototype for mark_modified_reg.\n+\n+        * cse.c (set_live_p): Add unused attribute.\n+\n+        * gcov.c (calculate_branch_probs): Use gcov_type to avoid\n+        overflow.\n+        (scan_for_source_files): Use long for count to avoid overflow.\n+        (output_data): Likewise.\n+        (output_data): Don't use string concatatenation to silence gcc\n+        -traditional.\n+\n+        * predict.c: Fix typos and grammar.\n+\n+\t* gcse.c (insert_insn_end_bb): Remove unused variables.\n+\n Mon Jul 30 21:54:53 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* flow.c (mark_set_1): Use REG_FREQ_FROM_BB.\n@@ -293,7 +310,7 @@ Thu Jul 26 14:04:03 EDT 2001  John Wehle  (john@feith.com)\n \n 2001-07-26  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* params.def (PARAM_MAX_PENDING_LIST_LENGTH): Add parameter to \n+\t* params.def (PARAM_MAX_PENDING_LIST_LENGTH): Add parameter to\n \tlimit length of dependancy flush list.\n \t* params.h (MAX_PENDING_LIST_LENGTH): Define.\n \t* sched-int.h  (struct deps): Add pending_flush_length field.\n@@ -353,7 +370,7 @@ Wed Jul 25 18:00:05 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* config/alpha/alpha.c (print_operand, case '/'): Don't write '/'.\n \n \t* dbxout.c: Consistently use putc instead of fputc.\n- \t(print_wide_int): New function; call instead of direct fprintf.\n+\t(print_wide_int): New function; call instead of direct fprintf.\n \t(dbxout_type_index): Adjust calls of CHARS to be more accurate.\n \t(dbxout_type_fields, dbxout_type_method_1): Likewise.\n \t(dbxout_type_methods, dbxout_range_type, dbxout_type): Likewise.\n@@ -390,7 +407,7 @@ Wed Jul 25 22:48:59 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n Wed Jul 25 08:25:01 2001  Jeffrey A Law  (law@cygnus.com)\n \n-\t* ssa.c (rename_insn_1): Do not wrap an assignment to a \n+\t* ssa.c (rename_insn_1): Do not wrap an assignment to a\n \tparadoxical SUBREG inside a SEQUENCE.  Fix minor formatting\n \tglitch.\n \n@@ -432,8 +449,8 @@ Wed Jul 25 08:25:01 2001  Jeffrey A Law  (law@cygnus.com)\n         * config/sparc/rtems.h (CPP_PREDEFINES): Remove redundant\n \t-Acpu and -Amachine.h.\n         * config/sparc/rtemself.h (CPP_PREDEFINES): Likewise.\n-        Corrected header to say ELF not a.out. \n-        * config/sparc/sparc.h (CPP_CPU_SPEC): Define _SOFT_FLOAT \n+        Corrected header to say ELF not a.out.\n+        * config/sparc/sparc.h (CPP_CPU_SPEC): Define _SOFT_FLOAT\n \twhen given -msoft-float.\n \n 2001-07-24  Joel Sherrill <joel@OARcorp.com>\n@@ -553,7 +570,7 @@ Tue Jul 24 10:49:40 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* config/h8300/h8300-protos.h: Add a prototype for\n \tgeneral_operand_dst_push.\n- \t* config/h8300/h8300.c (general_operand_dst_push): New.\n+\t* config/h8300/h8300.c (general_operand_dst_push): New.\n \t* config/h8300/h8300.h (OK_FOR_T): New.\n \t(EXTRA_CONSTRAINT): Use it.\n \t* config/h8300/h8300.md (movqi_push): Remove and integrate into\n@@ -653,7 +670,7 @@ Mon Jul 23 16:03:19 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(flow_find_cross_jump): Likewise.\n \t(outgoing_edges_match): Allow match if neither branch has\n \tprobability data.  Loosen probability match to 5%.\n-\t(try_crossjump_to_edge): Hoist repeated indirection into \n+\t(try_crossjump_to_edge): Hoist repeated indirection into\n \tlocal variables.\n \t(try_crossjump_bb): Don't check complex edges.  Eliminate\n \tredundant crossjump tests.\n@@ -798,7 +815,7 @@ Sun Jul 22 21:31:04 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(\"*addhi3\"): Fix constraint to avoid reloading in a soft register.\n \t(\"*subhi3_sp): Likewise.\n \t(\"*subhi3\"): Likewise.\n-\t(\"extendhisi2\"): Accept D, X and Y as source operand to avoid \n+\t(\"extendhisi2\"): Accept D, X and Y as source operand to avoid\n \treload problems.\n \n 2001-07-21  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -851,7 +868,7 @@ Fri Jul 20 21:59:42 CEST 2001  Jan Hubicka  <jh@suse.cz>\n 2001-07-20  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.md (\"movdi\", \"movdi_internal\"): Use an\n-\texpand to emit the pattern; put a REG_INC note for push/pop \n+\texpand to emit the pattern; put a REG_INC note for push/pop\n \tinstructions.\n \t(\"movdf\", \"movdf_internal\"): Likewise.\n \t(\"movsi\", \"movsi_internal\"): Likewise.\n@@ -938,7 +955,7 @@ Fri Jul 20 13:24:16 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \tpointer extension instruction.\n \t* combine.c (nonzero_bits,num_sign_bit_copies) Likewise.\n \t* simplify-rtx.c (simplify_unary_operation) Likewise.\n-\t* explow.c (convert_memory_address) Check value of \n+\t* explow.c (convert_memory_address) Check value of\n \tPOINTERS_EXTEND_UNSIGNED to avoid some conversions when\n \tless than zero.\n \t* config/ia64/t-hpux (LIBGCC, INSTALL_LIBGCC, MULTILIB_OPTIONS,\n@@ -999,7 +1016,7 @@ Fri Jul 20 13:24:16 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-07-19  Catherine Moore  <clm@cygnus.com>\n \n-\t* config/v850/v850.h (ASM_OUTPUT_LABELREF): Restore. \n+\t* config/v850/v850.h (ASM_OUTPUT_LABELREF): Restore.\n \n 2001-07-19  Geoffrey Keating  <geoffk@redhat.com>\n \n@@ -1137,7 +1154,7 @@ Wed Jul 18 12:05:29 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n \tpthread_mutex_trylock because it returns a positive number on\n \terror, while we must return -1 on error.\n \t(__gthread_objc_mutex_lock, __gthread_objc_mutex_unlock): Similar\n-\tfixes.  \n+\tfixes.\n \tReported by Stephen Brandon <stephen@brandonitconsulting.co.uk>.\n \n 2001-07-18  Andreas Jaeger  <aj@suse.de>"}]}