{"sha": "d677afa9583e31ef0eae98998b29f884fd409d72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3N2FmYTk1ODNlMzFlZjBlYWU5ODk5OGIyOWY4ODRmZDQwOWQ3Mg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-20T12:46:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:46:54Z"}, "message": "2008-05-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb\n\t(Freeze_Enumeration_Type): For a subtype that inherits a foreign\n\tconvention from its base type, do not set the type to that of integer,\n\tbecause it may inherit a size clause.\n\tWarn on a size clause with a size different\n\tfrom that of Integer, if the type has convention C.\n\nFrom-SVN: r135628", "tree": {"sha": "b91e40169240cbd8a69c0da15f7565e995ff88c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b91e40169240cbd8a69c0da15f7565e995ff88c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d677afa9583e31ef0eae98998b29f884fd409d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d677afa9583e31ef0eae98998b29f884fd409d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d677afa9583e31ef0eae98998b29f884fd409d72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d677afa9583e31ef0eae98998b29f884fd409d72/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7052f54e6286b1e9e87e0f2eaf827dec15f3f2c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7052f54e6286b1e9e87e0f2eaf827dec15f3f2c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7052f54e6286b1e9e87e0f2eaf827dec15f3f2c2"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "21b1ad5884c8a0e103e0952df37674d9daaaf57d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d677afa9583e31ef0eae98998b29f884fd409d72/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d677afa9583e31ef0eae98998b29f884fd409d72/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d677afa9583e31ef0eae98998b29f884fd409d72", "patch": "@@ -3828,12 +3828,36 @@ package body Freeze is\n \n    procedure Freeze_Enumeration_Type (Typ : Entity_Id) is\n    begin\n+      --  By default, if no size clause is present, an enumeration type with\n+      --  Convention C is assumed to interface to a C enum, and has integer\n+      --  size. This applies to types. For subtypes, verify that its base\n+      --  type has no size clause either.\n+\n       if Has_Foreign_Convention (Typ)\n         and then not Has_Size_Clause (Typ)\n+        and then not Has_Size_Clause (Base_Type (Typ))\n         and then Esize (Typ) < Standard_Integer_Size\n       then\n          Init_Esize (Typ, Standard_Integer_Size);\n+\n       else\n+         --  If the enumeration type interfaces to C, and it has a size clause\n+         --  that specifies less than int size, it warrants a warning. The\n+         --  user may intend the C type to be an enum or a char, so this is\n+         --  not by itself an error that the Ada compiler can detect, but it\n+         --  it is a worth a heads-up. For Boolean and Character types we\n+         --  assume that the programmer has the proper C type in mind.\n+\n+         if Convention (Typ) = Convention_C\n+           and then Has_Size_Clause (Typ)\n+           and then Esize (Typ) /= Esize (Standard_Integer)\n+           and then not Is_Boolean_Type (Typ)\n+           and then not Is_Character_Type (Typ)\n+         then\n+            Error_Msg_N\n+              (\"C enum types have the size of a C int?\", Size_Clause (Typ));\n+         end if;\n+\n          Adjust_Esize_For_Alignment (Typ);\n       end if;\n    end Freeze_Enumeration_Type;"}]}