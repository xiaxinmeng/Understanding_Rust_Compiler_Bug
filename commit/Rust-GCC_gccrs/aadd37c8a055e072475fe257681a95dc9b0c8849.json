{"sha": "aadd37c8a055e072475fe257681a95dc9b0c8849", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFkZDM3YzhhMDU1ZTA3MjQ3NWZlMjU3NjgxYTk1ZGM5YjBjODg0OQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-12-14T15:01:47Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-12-14T15:01:47Z"}, "message": "Require effective target weak_undefined for visibility-22.c\n\n2017-12-14  Tom de Vries  <tom@codesourcery.com>\n\n\t* lib/target-supports.exp (check_effective_target_weak_undefined): New\n\tproc.\n\t* gcc.dg/visibility-22.c: Require effective target weak_undefined.\n\n\t* doc/sourcebuild.texi (Effective-Target Keywords, Other attributes):\n\tAdd item for weak_undefined.\n\nFrom-SVN: r255637", "tree": {"sha": "df60246775ef9da4aba641b1bfad2dbdc61790dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df60246775ef9da4aba641b1bfad2dbdc61790dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aadd37c8a055e072475fe257681a95dc9b0c8849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aadd37c8a055e072475fe257681a95dc9b0c8849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aadd37c8a055e072475fe257681a95dc9b0c8849", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aadd37c8a055e072475fe257681a95dc9b0c8849/comments", "author": null, "committer": null, "parents": [{"sha": "e64905d8771745218738e7e9802f2a5f673afaa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64905d8771745218738e7e9802f2a5f673afaa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64905d8771745218738e7e9802f2a5f673afaa4"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "af6304bb57e5d1a4d141b9c77bf083fe6b1b0172", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aadd37c8a055e072475fe257681a95dc9b0c8849", "patch": "@@ -1,3 +1,8 @@\n+2017-12-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* doc/sourcebuild.texi (Effective-Target Keywords, Other attributes):\n+\tAdd item for weak_undefined.\n+\n 2017-12-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/67842"}, {"sha": "04e18df846156998bdbb71c2fb25bb0977662c82", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=aadd37c8a055e072475fe257681a95dc9b0c8849", "patch": "@@ -2238,6 +2238,9 @@ Target supports @code{wchar_t} that is compatible with @code{char32_t}.\n @item comdat_group\n Target uses comdat groups.\n \n+@item weak_undefined\n+Target supports weak undefined symbols.\n+\n @item word_mode_no_slow_unalign\n Target does not have slow unaligned access when doing word size accesses.\n @end table"}, {"sha": "bc9fa99603ddecc1205eb8cf778550edf4574b8e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aadd37c8a055e072475fe257681a95dc9b0c8849", "patch": "@@ -1,3 +1,9 @@\n+2017-12-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_weak_undefined): New\n+\tproc.\n+\t* gcc.dg/visibility-22.c: Require effective target weak_undefined.\n+\n 2017-12-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83326"}, {"sha": "e2b78d1c7fdedb8e91811b9b370089f4711e4e96", "filename": "gcc/testsuite/gcc.dg/visibility-22.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-22.c?ref=aadd37c8a055e072475fe257681a95dc9b0c8849", "patch": "@@ -1,11 +1,8 @@\n /* PR target/32219 */\n /* { dg-do run } */\n /* { dg-require-visibility \"\" } */\n+/* { dg-require-effective-target weak_undefined } */\n /* { dg-options \"-O2 -fPIC\" { target fpic } } */\n-/* This test requires support for undefined weak symbols.  This support\n-   is not available on hppa*-*-hpux*.  The test is skipped rather than\n-   xfailed to suppress the warning that would otherwise arise.  */\n-/* { dg-skip-if \"\" { \"hppa*-*-hpux*\" \"*-*-aix*\" \"*-*-darwin*\" } }  */\n \n extern void foo () __attribute__((weak,visibility(\"hidden\")));\n int"}, {"sha": "114c1f11ccc00fb50a595e613122429e09c5925f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadd37c8a055e072475fe257681a95dc9b0c8849/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=aadd37c8a055e072475fe257681a95dc9b0c8849", "patch": "@@ -328,6 +328,15 @@ proc check_weak_available { } {\n     }\n }\n \n+# return 1 if weak undefined symbols are supported.\n+\n+proc check_effective_target_weak_undefined { } {\n+    return [check_runtime weak_undefined {\n+\textern void foo () __attribute__((weak));\n+\tint main (void) { if (foo) return 1; return 0; }\n+    } \"\"]\n+}\n+\n ###############################\n # proc check_weak_override_available { }\n ###############################"}]}