{"sha": "76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkYTViOGU2NWFhY2RmY2NhNzNlMGU2ZTA0NzdjOGE0Y2E3ZDc3Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-04-15T09:06:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-04-26T09:04:00Z"}, "message": "Remove gimplify_buildN API use from phiopt\n\nThis removes use of the legacy gimplify_buildN API from phiopt.\n\n2021-04-15  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-phiopt.c (two_value_replacement): Remove use\n\tof legacy gimplify_buildN API.", "tree": {"sha": "cdc8e265086d51831eb2a06a0d03f84ccbceffc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdc8e265086d51831eb2a06a0d03f84ccbceffc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "577d05fc914338cd7ddc254f3bee4532331f5c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577d05fc914338cd7ddc254f3bee4532331f5c13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/577d05fc914338cd7ddc254f3bee4532331f5c13"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "35ce51e59772eec50a83af7c001a6f7f47b78e47", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=76da5b8e65aacdfcca73e0e6e0477c8a4ca7d773", "patch": "@@ -752,16 +752,16 @@ two_value_replacement (basic_block cond_bb, basic_block middle_bb,\n     }\n \n   tree arg = wide_int_to_tree (type, a);\n-  gimple_stmt_iterator gsi = gsi_for_stmt (stmt);\n-  if (!useless_type_conversion_p (type, TREE_TYPE (lhs)))\n-    lhs = gimplify_build1 (&gsi, NOP_EXPR, type, lhs);\n+  gimple_seq stmts = NULL;\n+  lhs = gimple_convert (&stmts, type, lhs);\n   tree new_rhs;\n   if (code == PLUS_EXPR)\n-    new_rhs = gimplify_build2 (&gsi, PLUS_EXPR, type, lhs, arg);\n+    new_rhs = gimple_build (&stmts, PLUS_EXPR, type, lhs, arg);\n   else\n-    new_rhs = gimplify_build2 (&gsi, MINUS_EXPR, type, arg, lhs);\n-  if (!useless_type_conversion_p (TREE_TYPE (arg0), type))\n-    new_rhs = gimplify_build1 (&gsi, NOP_EXPR, TREE_TYPE (arg0), new_rhs);\n+    new_rhs = gimple_build (&stmts, MINUS_EXPR, type, arg, lhs);\n+  new_rhs = gimple_convert (&stmts, TREE_TYPE (arg0), new_rhs);\n+  gimple_stmt_iterator gsi = gsi_for_stmt (stmt);\n+  gsi_insert_seq_before (&gsi, stmts, GSI_SAME_STMT);\n \n   replace_phi_edge_with_variable (cond_bb, e1, phi, new_rhs);\n "}]}