{"sha": "8c085f6ff45e41bf947f5c9ce1f47bf43f27950a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMwODVmNmZmNDVlNDFiZjk0N2Y1YzljZTFmNDdiZjQzZjI3OTUwYQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2002-09-03T23:52:06Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2002-09-03T23:52:06Z"}, "message": "install.texi: Fix typos, formatting problems, and obvious overfull/underfull boxes.\n\n2002-09-03  Janis Johnson  <janis187@us.ibm.com>\n\n\t* doc/install.texi: Fix typos, formatting problems, and obvious\n\toverfull/underfull boxes.\n\nFrom-SVN: r56777", "tree": {"sha": "ee602623b4e0026bf1b23db4b3ea40f070841c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee602623b4e0026bf1b23db4b3ea40f070841c4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a/comments", "author": null, "committer": null, "parents": [{"sha": "7c19f81682b7a2d561c2988f29cda338282ab688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c19f81682b7a2d561c2988f29cda338282ab688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c19f81682b7a2d561c2988f29cda338282ab688"}], "stats": {"total": 81, "additions": 55, "deletions": 26}, "files": [{"sha": "96555f460fc6e6e299e96712454d250befe76624", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c085f6ff45e41bf947f5c9ce1f47bf43f27950a", "patch": "@@ -1,5 +1,8 @@\n 2002-09-03  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* doc/install.texi: Fix typos, formatting problems, and obvious\n+\toverfull/underfull boxes.\n+\n \t* Makefile.in (TEXI_GCC_FILES): Add compat.texi.\n \t* doc/gcc.texi (Top): Add new chapter, Binary Compatibility, and\n \tinclude its file, compat.texi."}, {"sha": "b920c72ba864a7bca72674f80d700a173e3badc8", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 52, "deletions": 26, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c085f6ff45e41bf947f5c9ce1f47bf43f27950a/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=8c085f6ff45e41bf947f5c9ce1f47bf43f27950a", "patch": "@@ -433,9 +433,9 @@ complex conversion patterns. As a basic rule, @var{prefix} (and\n @var{suffix}) are prepended (appended) before further transformations\n can happen with a special transformation script @var{pattern}.\n \n-As currently implemented, this options only take effect for native\n+As currently implemented, this option only takes effect for native\n builds; cross compiler binaries' names are not transformed even when a\n-transformation is explicitly asked for by one of this options.\n+transformation is explicitly asked for by one of these options.\n \n For native builds, some of the installed programs are also installed\n with the target alias in front of their name, as in\n@@ -551,15 +551,25 @@ configured with @option{--with-gnu-as}.)  If you have more than one\n assembler installed on your system, you may want to use this option in\n connection with @option{--with-as=@var{pathname}}.\n \n-The systems where it makes a difference whether you use the GNU assembler are\n-@samp{hppa1.0-@var{any}-@var{any}}, @samp{hppa1.1-@var{any}-@var{any}},\n-@samp{i386-@var{any}-sysv}, @samp{i386-@var{any}-isc},\n-@samp{i860-@var{any}-bsd}, @samp{m68k-bull-sysv},\n-@samp{m68k-hp-hpux}, @samp{m68k-sony-bsd},\n-@samp{m68k-altos-sysv}, @samp{m68000-hp-hpux},\n-@samp{m68000-att-sysv}, @samp{@var{any}-lynx-lynxos},\n-and @samp{mips-@var{any}}.\n-On any other system, @option{--with-gnu-as} has no effect.\n+The following systems are the only ones where it makes a difference\n+whether you use the GNU assembler.  On any other system,\n+@option{--with-gnu-as} has no effect.\n+\n+@itemize bullet\n+@item @samp{hppa1.0-@var{any}-@var{any}}\n+@item @samp{hppa1.1-@var{any}-@var{any}}\n+@item @samp{i386-@var{any}-sysv}\n+@item @samp{i386-@var{any}-isc}\n+@item @samp{i860-@var{any}-bsd}\n+@item @samp{m68k-bull-sysv}\n+@item @samp{m68k-hp-hpux}\n+@item @samp{m68k-sony-bsd}\n+@item @samp{m68k-altos-sysv}\n+@item @samp{m68000-hp-hpux}\n+@item @samp{m68000-att-sysv}\n+@item @samp{@var{any}-lynx-lynxos}\n+@item @samp{mips-@var{any}}\n+@end itemize\n \n On the systems listed above (except for the HP-PA, for ISC on the\n 386, and for @samp{mips-sgi-irix5.*}), if you use the GNU assembler,\n@@ -999,14 +1009,17 @@ bootstrap} except that object files from the stage1 and\n stage2 of the 3-stage bootstrap of the compiler are deleted as\n soon as they are no longer needed.\n \n-\n If you want to save additional space during the bootstrap and in\n the final installation as well, you can build the compiler binaries\n-without debugging information with @samp{make CFLAGS='-O' LIBCFLAGS='-g\n--O2' LIBCXXFLAGS='-g -O2 -fno-implicit-templates' bootstrap}.  This will save\n+without debugging information as in the following example.  This will save\n roughly 40% of disk space both for the bootstrap and the final installation.\n (Libraries will still contain debugging information.)\n \n+@example\n+     make CFLAGS='-O' LIBCFLAGS='-g -O2' \\\n+       LIBCXXFLAGS='-g -O2 -fno-implicit-templates' bootstrap\n+@end example\n+\n If you wish to use non-default GCC flags when compiling the stage2 and\n stage3 compilers, set @code{BOOT_CFLAGS} on the command line when doing\n @samp{make bootstrap}.  Non-default optimization flags are less well\n@@ -1802,8 +1815,10 @@ need to tell GCC where to find the assembler and the linker.  The\n simplest way to do so is by providing @option{--with-as} and\n @option{--with-ld} to @file{configure}, e.g.@:\n \n-@samp{configure --with-as=/opt/ctl/bin/cam --with-ld=/opt/ctl/bin/cld\n---enable-languages=c}\n+@example\n+    configure --with-as=/opt/ctl/bin/cam --with-ld=/opt/ctl/bin/cld \\\n+      --enable-languages=c\n+@end example\n \n The comparison test during @samp{make bootstrap} fails on Unicos/Mk\n because the assembler inserts timestamps into object files.  You should\n@@ -2006,15 +2021,17 @@ results on FreeBSD 3.0, 3.4, 4.0, 4.2, 4.3, 4.4, 4.5-STABLE and 5-CURRENT@.\n \n In principle, @option{--enable-threads} is now compatible with\n @option{--enable-libgcj} on FreeBSD@.  However, it has only been built\n-and tested on i386-*-freebsd4.5 and alpha-*-freebsd5.0.  The static\n+and tested on @samp{i386-*-freebsd4.5} and @samp{alpha-*-freebsd5.0}.\n+The static\n library may be incorrectly built (symbols are missing at link time).\n There is a rare timing-based startup hang (probably involves an\n assupmtion about the thread library).  Multi-threaded boehm-gc (required for\n libjava) exposes severe threaded signal-handling bugs on FreeBSD before\n 4.5-RELEASE.  The alpha port may not fully bootstrap without some manual\n-intervention: gcjh will crash with a floating-point exception while\n+intervention: @command{gcjh} will crash with a floating-point exception while\n generating @file{java/lang/Double.h} (just copy the version built on\n-i386-*-freebsd* and rerun the top-level gmake with no arguments and it\n+@samp{i386-*-freebsd*} and rerun the top-level @command{gmake} with no\n+arguments and it\n should properly complete the bootstrap).  Other CPU architectures\n supported by FreeBSD will require additional configuration tuning in, at\n the very least, both boehm-gc and libffi.\n@@ -2137,8 +2154,13 @@ must be used if both ports are to be installed on the same system.\n \n You must use GNU binutils 2.11 or above with the 32-bit port.  Thread\n support is not currently implemented, so @option{--enable-threads} does\n-not work.  See @uref{http://gcc.gnu.org/ml/gcc-prs/2002-01/msg00551.html}\n-and @uref{http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00663.html}.\n+not work.  See:\n+\n+@itemize\n+@item @uref{http://gcc.gnu.org/ml/gcc-prs/2002-01/msg00551.html}\n+@item @uref{http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00663.html}\n+@end itemize\n+\n GCC 2.95.x is not supported under HP-UX 11 and cannot be used to\n compile GCC 3.0 and up.  Refer to @uref{binaries.html,,binaries} for\n information about obtaining precompiled GCC binaries for HP-UX.\n@@ -2324,8 +2346,10 @@ from the right place) while making the tools not think we're actually\n building a cross compiler.   The easiest way to do this is with a configure\n command like this:\n \n-@samp{CC=/udk/usr/ccs/bin/cc @var{/your/path/to}/gcc/configure\n---host=i686-pc-udk --target=i686-pc-udk --program-prefix=udk-}\n+@example\n+    CC=/udk/usr/ccs/bin/cc @var{/your/path/to}/gcc/configure \\\n+      --host=i686-pc-udk --target=i686-pc-udk --program-prefix=udk-\n+@end example\n \n @emph{You should substitute @samp{i686} in the above command with the appropriate\n processor for your host.}\n@@ -2855,7 +2879,7 @@ binaries are available at\n registration required).\n \n Versions of the assembler prior to ``cctools-364'' cannot handle the\n-4-argument form of rlwinm and related mask-using instructions.  Darwin\n+4-argument form of @code{rlwinm} and related mask-using instructions.  Darwin\n 1.3 (Mac OS X 10.0) uses cctools-353 for instance.  To get cctools-364,\n check out @file{cctools} with tag @samp{Apple-364}, build it, and\n install the assembler as @file{usr/bin/as}.  See\n@@ -3033,8 +3057,10 @@ information.\n Sun @command{as} 4.x is broken in that it cannot cope with long symbol names.\n A typical error message might look similar to the following:\n \n-@samp{/usr/ccs/bin/as: \"/var/tmp/ccMsw135.s\", line 11041:\n-error: can't compute value of an expression involving an external symbol.}\n+@smallexample\n+/usr/ccs/bin/as: \"/var/tmp/ccMsw135.s\", line 11041: error:\n+  can't compute value of an expression involving an external symbol.\n+@end smallexample\n \n This is Sun bug 4237974.  This is fixed with patch 108908-02 for Solaris\n 2.6 and has been fixed in later (5.x) versions of the assembler,"}]}