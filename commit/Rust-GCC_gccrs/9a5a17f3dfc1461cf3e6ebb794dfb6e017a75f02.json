{"sha": "9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1YTE3ZjNkZmMxNDYxY2YzZTZlYmI3OTRkZmI2ZTAxN2E3NWYwMg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-03-01T09:42:10Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-03-01T09:42:10Z"}, "message": "combine.c (try_combine): Do not refer to is_replaced.\n\n2004-03-01  Paolo Bonzini  <bonzini@gnu.org>\n\n        * combine.c (try_combine):  Do not refer to is_replaced.\n        (gen_lowpart_for_combine):  Perverse subregs now have a\n        more politically correct name.\n        * cse.c (cse_insn): Likewise.\n        * jump.c: Fix bogus reference to delete_insn.\n\nFrom-SVN: r78698", "tree": {"sha": "7db75f2dfc83bcd47b03e5059b2b71fa22121be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7db75f2dfc83bcd47b03e5059b2b71fa22121be3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8983e50eff8564bd62cfe02e591c059386f041f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8983e50eff8564bd62cfe02e591c059386f041f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8983e50eff8564bd62cfe02e591c059386f041f6"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "be143c8610a18c34bf29efca0b05d302f4da216f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "patch": "@@ -1,3 +1,11 @@\n+2004-03-01  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* combine.c (try_combine):  Do not refer to is_replaced.\n+\t(gen_lowpart_for_combine):  Perverse subregs now have a\n+\tmore politically correct name.\n+\t* cse.c (cse_insn): Likewise.\n+\t* jump.c: Fix bogus reference to delete_insn.\n+\n 2004-02-29  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR debug/14328"}, {"sha": "01a68ff7094dd156e968404af24f81b6e359cd89", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "patch": "@@ -1822,9 +1822,7 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n \n   if (flag_expensive_optimizations)\n     {\n-      /* Pass pc_rtx so no substitutions are done, just simplifications.\n-\t The cases that we are interested in here do not involve the few\n-\t cases were is_replaced is checked.  */\n+      /* Pass pc_rtx so no substitutions are done, just simplifications.  */\n       if (i1)\n \t{\n \t  subst_low_cuid = INSN_CUID (i1);\n@@ -10049,7 +10047,7 @@ gen_lowpart_for_combine (enum machine_mode mode, rtx x)\n \treturn gen_rtx_CLOBBER (GET_MODE (x), const0_rtx);\n \n       /* If we want to refer to something bigger than the original memref,\n-\t generate a perverse subreg instead.  That will force a reload\n+\t generate a paradoxical subreg instead.  That will force a reload\n \t of the original memref X.  */\n       if (GET_MODE_SIZE (GET_MODE (x)) < GET_MODE_SIZE (mode))\n \treturn gen_rtx_SUBREG (mode, x, 0);"}, {"sha": "420624865890e5211ca9eaf5f870eddace550bd7", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "patch": "@@ -5031,7 +5031,7 @@ cse_insn (rtx insn, rtx libcall_insn)\n       /* It is no longer clear why we used to do this, but it doesn't\n \t appear to still be needed.  So let's try without it since this\n \t code hurts cse'ing widened ops.  */\n-      /* If source is a perverse subreg (such as QI treated as an SI),\n+      /* If source is a paradoxical subreg (such as QI treated as an SI),\n \t treat it as volatile.  It may do the work of an SI in one context\n \t where the extra bits are not being used, but cannot replace an SI\n \t in general.  */"}, {"sha": "ff161b25e2e453cb8b9be4e3763031853c08ec92", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=9a5a17f3dfc1461cf3e6ebb794dfb6e017a75f02", "patch": "@@ -31,7 +31,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    formerly used them.  The JUMP_LABEL info is sometimes looked\n    at by later passes.\n \n-   The subroutines delete_insn, redirect_jump, and invert_jump are used\n+   The subroutines redirect_jump and invert_jump are used\n    from other passes as well.  */\n \n #include \"config.h\""}]}