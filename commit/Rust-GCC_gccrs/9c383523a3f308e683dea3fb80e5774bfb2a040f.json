{"sha": "9c383523a3f308e683dea3fb80e5774bfb2a040f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzODM1MjNhM2YzMDhlNjgzZGVhM2ZiODBlNTc3NGJmYjJhMDQwZg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2001-09-26T13:22:03Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2001-09-26T13:22:03Z"}, "message": "solaris_threads.c (MAX_ORIG_STACK_SIZE): Provide special Solaris 2/Intel definition.\n\n\t* solaris_threads.c (MAX_ORIG_STACK_SIZE) [I386]: Provide special\n\tSolaris 2/Intel definition.\n\n\t* configure.in (i?86-*-solaris2.[89]*): Define\n\tSOLARIS25_PROC_VDB_BUG_FIXED.\n\t* include/private/gcconfig.h [I386 && SUNOS5]: Use it.\n\t* configure: Regenerate.\n\n\t* include/private/gcconfig.h [I386 && SUNOS5] (DATASTART): Use _etext.\n\t(DATAEND): Define using _end.\n\nFrom-SVN: r45825", "tree": {"sha": "7e32e0f9d21a9ef116c976946744c146a00a2a6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e32e0f9d21a9ef116c976946744c146a00a2a6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c383523a3f308e683dea3fb80e5774bfb2a040f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c383523a3f308e683dea3fb80e5774bfb2a040f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c383523a3f308e683dea3fb80e5774bfb2a040f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c383523a3f308e683dea3fb80e5774bfb2a040f/comments", "author": null, "committer": null, "parents": [{"sha": "2e10660228633fdb4b85d72a460a8475d56058ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e10660228633fdb4b85d72a460a8475d56058ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e10660228633fdb4b85d72a460a8475d56058ac"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "a97a5e9403768833e1b45686891d57f3babca490", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=9c383523a3f308e683dea3fb80e5774bfb2a040f", "patch": "@@ -1,3 +1,16 @@\n+2001-09-26  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* solaris_threads.c (MAX_ORIG_STACK_SIZE) [I386]: Provide special\n+\tSolaris 2/Intel definition.\n+\t\n+\t* configure.in (i?86-*-solaris2.[89]*): Define\n+\tSOLARIS25_PROC_VDB_BUG_FIXED.\n+\t* include/private/gcconfig.h [I386 && SUNOS5]: Use it.\n+\t* configure: Regenerate.\n+\n+\t* include/private/gcconfig.h [I386 && SUNOS5] (DATASTART): Use _etext.\n+\t(DATAEND): Define using _end.\n+\n 2001-09-11  Per Bothner  <per@bothner.com>\n \n \t* include/Makefile.am:  New file.  It defines include_HEADERS."}, {"sha": "79d9655842f7baee92496cc6573977089207443e", "filename": "boehm-gc/configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=9c383523a3f308e683dea3fb80e5774bfb2a040f", "patch": "@@ -2806,6 +2806,12 @@ machdep=\n case \"$host\" in\n  alpha*-*-*)\n     machdep=\"alpha_mach_dep.lo\"\n+    ;;\n+ i?86-*-solaris2.[89]*)\n+    cat >> confdefs.h <<\\EOF\n+#define SOLARIS25_PROC_VDB_BUG_FIXED 1\n+EOF\n+\n     ;;\n  mipstx39-*-elf*)\n     machdep=\"mips_ultrix_mach_dep.lo\""}, {"sha": "48f69908fab824bc6ff02f65a323e0feffcd12bd", "filename": "boehm-gc/configure.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.in?ref=9c383523a3f308e683dea3fb80e5774bfb2a040f", "patch": "@@ -153,6 +153,9 @@ case \"$host\" in\n  alpha*-*-*)\n     machdep=\"alpha_mach_dep.lo\"\n     ;;\n+ i?86-*-solaris2.[[89]]*)\n+    AC_DEFINE(SOLARIS25_PROC_VDB_BUG_FIXED)\n+    ;;\n  mipstx39-*-elf*)\n     machdep=\"mips_ultrix_mach_dep.lo\"\n     AC_DEFINE(STACKBASE, __stackbase)"}, {"sha": "4e20f48ade3ac084aeb997a94912e183c444e6bf", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=9c383523a3f308e683dea3fb80e5774bfb2a040f", "patch": "@@ -838,9 +838,10 @@\n #   endif\n #   ifdef SUNOS5\n #\tdefine OS_TYPE \"SUNOS5\"\n-  \textern int etext, _start;\n+  \textern int _etext, _end;\n   \textern char * GC_SysVGetDataStart();\n-#       define DATASTART GC_SysVGetDataStart(0x1000, &etext)\n+#       define DATASTART GC_SysVGetDataStart(0x1000, &_etext)\n+#\tdefine DATAEND (&_end)\n /*\t# define STACKBOTTOM ((ptr_t)(&_start)) worked through 2.7,  \t*/\n /*      but reportedly breaks under 2.8.  It appears that the stack\t*/\n /* \tbase is a property of the executable, so this should not break\t*/\n@@ -849,7 +850,9 @@\n #       include <sys/vmparam.h>\n #\tdefine STACKBOTTOM USRSTACK\n /** At least in Solaris 2.5, PROC_VDB gives wrong values for dirty bits. */\n-/*#\tdefine PROC_VDB*/\n+#\tifdef SOLARIS25_PROC_VDB_BUG_FIXED\n+#\t  define PROC_VDB\n+#\tendif\n #\tdefine DYNAMIC_LOADING\n #\tifndef USE_MMAP\n #\t    define USE_MMAP"}, {"sha": "a0d03406981714fb4dd71311df3ca4610e4beddb", "filename": "boehm-gc/solaris_threads.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Fsolaris_threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c383523a3f308e683dea3fb80e5774bfb2a040f/boehm-gc%2Fsolaris_threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fsolaris_threads.c?ref=9c383523a3f308e683dea3fb80e5774bfb2a040f", "patch": "@@ -621,7 +621,18 @@ GC_thread GC_lookup_thread(thread_t id)\n     return(p);\n }\n \n+/* Solaris 2/Intel uses an initial stack size limit slightly bigger than the\n+   SPARC default of 8 MB.  Account for this to warn only if the user has\n+   raised the limit beyond the default.\n+\n+   This is identical to DFLSSIZ defined in <sys/vm_machparam.h>.  This file\n+   is installed in /usr/platform/`uname -m`/include, which is not in the\n+   default include directory list, so copy the definition here.  */\n+#ifdef I386\n+# define MAX_ORIG_STACK_SIZE (8 * 1024 * 1024 + ((USRSTACK) & 0x3FFFFF))\n+#else\n # define MAX_ORIG_STACK_SIZE (8 * 1024 * 1024)\n+#endif\n \n word GC_get_orig_stack_size() {\n     struct rlimit rl;"}]}