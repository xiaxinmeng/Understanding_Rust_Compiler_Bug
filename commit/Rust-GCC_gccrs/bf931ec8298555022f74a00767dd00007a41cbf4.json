{"sha": "bf931ec8298555022f74a00767dd00007a41cbf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5MzFlYzgyOTg1NTUwMjJmNzRhMDA3NjdkZDAwMDA3YTQxY2JmNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-04-28T19:12:47Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-28T19:12:47Z"}, "message": "Fix x86 memset bug, reported by Karl Guenter Wuensch.\n\n\t* expr.c (expand_builtin, case BUILT_IN_MEMSET): Break if either\n\tval or len has TREE_SIDE_EFFECTS set.\n\nFrom-SVN: r19471", "tree": {"sha": "74878aa40ab4948ceb52b8d6decea2af5e878b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74878aa40ab4948ceb52b8d6decea2af5e878b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf931ec8298555022f74a00767dd00007a41cbf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf931ec8298555022f74a00767dd00007a41cbf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf931ec8298555022f74a00767dd00007a41cbf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf931ec8298555022f74a00767dd00007a41cbf4/comments", "author": null, "committer": null, "parents": [{"sha": "2cea586a7e8f81bba8967a75701691444d9e9531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cea586a7e8f81bba8967a75701691444d9e9531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cea586a7e8f81bba8967a75701691444d9e9531"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ca79fe802a093c1b8f8c7307fcf6812a28df672d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf931ec8298555022f74a00767dd00007a41cbf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf931ec8298555022f74a00767dd00007a41cbf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf931ec8298555022f74a00767dd00007a41cbf4", "patch": "@@ -1,5 +1,8 @@\n Tue Apr 28 17:53:33 1998  Jim Wilson  <wilson@cygnus.com>\n \n+\t* expr.c (expand_builtin, case BUILT_IN_MEMSET): Break if either\n+\tval or len has TREE_SIDE_EFFECTS set.\n+\n \t* sparc.md (mulsidi3): Call const v8plus and v8plus routines.\n \t(mulsidi3_v8plus, const_mulsidi3_v8plus): Delete asterisk from name.\n \t(smuldi3_highpart): Call const v8plus routine."}, {"sha": "c094a0f0f02496457507c632a15860d319106d7b", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf931ec8298555022f74a00767dd00007a41cbf4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf931ec8298555022f74a00767dd00007a41cbf4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=bf931ec8298555022f74a00767dd00007a41cbf4", "patch": "@@ -8609,6 +8609,15 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  if (dest_align == 0)\n \t    break;\n \n+\t  /* If the arguments have side-effects, then we can only evaluate\n+\t     them at most once.  The following code evaluates them twice if\n+\t     they are not constants because we break out to expand_call\n+\t     in that case.  They can't be constants if they have side-effects\n+\t     so we can check for that first.  Alternatively, we could call\n+\t     save_expr to make multiple evaluation safe.  */\n+\t  if (TREE_SIDE_EFFECTS (val) || TREE_SIDE_EFFECTS (len))\n+\t    break;\n+\n \t  /* If VAL is not 0, don't do this operation in-line. */\n \t  if (expand_expr (val, NULL_RTX, VOIDmode, 0) != const0_rtx)\n \t    break;"}]}