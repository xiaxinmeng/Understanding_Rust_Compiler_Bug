{"sha": "199c6a1000df6695a1e4c7c041882db928b51221", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5YzZhMTAwMGRmNjY5NWExZTRjN2MwNDE4ODJkYjkyOGI1MTIyMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:12:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:12:08Z"}, "message": "[multiple changes]\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch4.adb: Minor reformatting.\n\t* exp_ch6.adb: Add comment on testing limited on full type\n\t* gnat_rm.texi: Add documentation on Pure_Function.\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_Source): Allow an Ada source to have the same name\n\tas a source of another project and of another language.\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Defend against previous\n\terrors.\n\t* freeze.adb (Check_Unsigned_Type): Ditto.\n\t* sem_aggr.adb (Resolve_Aggr_Expr): Ditto.\n\t* sem_ch3.adb (Convert_Scalar_Bounds): Ditto.\n\t(Set_Scalar_Range_For_Subtype): Ditto.\n\t* sem_eval.adb (Subtypes_Statically_Match): Ditto.\n\nFrom-SVN: r164170", "tree": {"sha": "4c8b141de037b2f46583d0ab52700306c12fb97a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c8b141de037b2f46583d0ab52700306c12fb97a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/199c6a1000df6695a1e4c7c041882db928b51221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199c6a1000df6695a1e4c7c041882db928b51221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199c6a1000df6695a1e4c7c041882db928b51221", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199c6a1000df6695a1e4c7c041882db928b51221/comments", "author": null, "committer": null, "parents": [{"sha": "0ae6242fedfb4a4f7ac0f6e72ebd3788715e1cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae6242fedfb4a4f7ac0f6e72ebd3788715e1cb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae6242fedfb4a4f7ac0f6e72ebd3788715e1cb2"}], "stats": {"total": 84, "additions": 72, "deletions": 12}, "files": [{"sha": "2143f7df332c6b367e93419e39e917dafb5006f3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -1,3 +1,24 @@\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch4.adb: Minor reformatting.\n+\t* exp_ch6.adb: Add comment on testing limited on full type\n+\t* gnat_rm.texi: Add documentation on Pure_Function.\n+\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_Source): Allow an Ada source to have the same name\n+\tas a source of another project and of another language.\n+\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Defend against previous\n+\terrors.\n+\t* freeze.adb (Check_Unsigned_Type): Ditto.\n+\t* sem_aggr.adb (Resolve_Aggr_Expr): Ditto.\n+\t* sem_ch3.adb (Convert_Scalar_Bounds): Ditto.\n+\t(Set_Scalar_Range_For_Subtype): Ditto.\n+\t* sem_eval.adb (Subtypes_Statically_Match): Ditto.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* repinfo.adb (List_Type_Info): List Small and Range for fixed-point"}, {"sha": "ee44dd9e0a70b71eeaa70ea299f1ecf8573e1728", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -4994,7 +4994,10 @@ package body Exp_Ch3 is\n                  and then No_Initialization (Expr)\n                then\n                   null;\n-               else\n+\n+               --  Otherwise apply a constraint check now if no prev error\n+\n+               elsif Nkind (Expr) /= N_Error then\n                   Apply_Constraint_Check (Expr, Typ);\n \n                   --  If the expression has been marked as requiring a range"}, {"sha": "eda4aa4a7dd3f02ed043cb125fb872982d40582e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -4096,7 +4096,8 @@ package body Exp_Ch6 is\n    --  Initialize scalar out parameters if Initialize/Normalize_Scalars\n \n    --  Reset Pure indication if any parameter has root type System.Address\n-   --  or has any parameters of limited types.\n+   --  or has any parameters of limited types, where limited means that the\n+   --  run-time view is limited (i.e. the full type is limited).\n \n    --  Wrap thread body\n \n@@ -4289,6 +4290,11 @@ package body Exp_Ch6 is\n             F := First_Formal (Spec_Id);\n             while Present (F) loop\n                if Is_Descendent_Of_Address (Etype (F))\n+\n+                 --  Note that this test is being made in the body of the\n+                 --  subprogram, not the spec, so we are testing the full\n+                 --  type for being limited here, as required.\n+\n                  or else Is_Limited_Type (Etype (F))\n                then\n                   Set_Is_Pure (Spec_Id, False);"}, {"sha": "bda6e79dab291f8c29a4744f7d62dc3a7436267d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -1089,7 +1089,9 @@ package body Freeze is\n \n       --  Do not attempt to analyze case where range was in error\n \n-      if Error_Posted (Scalar_Range (E)) then\n+      if No (Scalar_Range (E))\n+        or else Error_Posted (Scalar_Range (E))\n+      then\n          return;\n       end if;\n "}, {"sha": "4481da9549599066cbcf4bb9fb606243867951f0", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -4369,6 +4369,14 @@ modifies a global variable (the count).  Memo functions are another\n example (where a table of previous calls is kept and consulted to\n avoid re-computation).\n \n+Note also that the normal rules excluding optimization of subprograms\n+in pure units (when parameter types are descended from System.Address,\n+or when the full view of a parameter type is limited), do not apply\n+for the Pure_Function case. If you explicitly specify Pure_Function,\n+the compiler may optimize away calls with identical arguments, and\n+if that results in unexpected behavior, the proper action is not to\n+use the pragma for subprograms that are not (conceptually) pure.\n+\n @findex Pure\n Note: Most functions in a @code{Pure} package are automatically pure, and\n there is no need to use pragma @code{Pure_Function} for such functions.  One"}, {"sha": "620913c53e05f3d4268db518939a5e83c415aa20", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -685,6 +685,7 @@ package body Prj.Nmsc is\n             end if;\n \n          elsif Prev_Unit /= No_Unit_Index\n+           and then Prev_Unit.File_Names (Kind) /= null\n            and then not Source.Locally_Removed\n          then\n             --  Path is set if this is a source we found on the disk, in which"}, {"sha": "d3a0935d0340c0ca3f3dd1ea11fd5a02032c4830", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -1411,6 +1411,14 @@ package body Sem_Aggr is\n          --  Set to False if resolution of the expression failed\n \n       begin\n+         --  Defend against previous errors\n+\n+         if Nkind (Expr) = N_Error\n+           or else Error_Posted (Expr)\n+         then\n+            return True;\n+         end if;\n+\n          --  If the array type against which we are resolving the aggregate\n          --  has several dimensions, the expressions nested inside the\n          --  aggregate must be further aggregates (or strings)."}, {"sha": "976bad0567d19ca97c528c9a5fef0030471864b6", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -11252,6 +11252,12 @@ package body Sem_Ch3 is\n       Rng : Node_Id;\n \n    begin\n+      --  Defend against previous errors\n+\n+      if No (Scalar_Range (Derived_Type)) then\n+         return;\n+      end if;\n+\n       Lo := Build_Scalar_Bound\n               (Type_Low_Bound (Derived_Type),\n                Parent_Type, Implicit_Base);\n@@ -18294,6 +18300,12 @@ package body Sem_Ch3 is\n       Kind : constant Entity_Kind :=  Ekind (Def_Id);\n \n    begin\n+      --  Defend against previous error\n+\n+      if Nkind (R) = N_Error then\n+         return;\n+      end if;\n+\n       Set_Scalar_Range (Def_Id, R);\n \n       --  We need to link the range into the tree before resolving it so"}, {"sha": "83604786394c12f256ec4bdd85ad725a09a8761c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -6413,11 +6413,11 @@ package body Sem_Ch4 is\n          else\n             Analyze (Node_To_Replace);\n \n-            --  If the operation has been rewritten into a call, which may\n-            --  get subsequently an explicit dereference, preserve the\n-            --  type on the original node (selected component or indexed\n-            --  component) for subsequent legality tests, e.g. Is_Variable.\n-            --  which examines the original node.\n+            --  If the operation has been rewritten into a call, which may get\n+            --  subsequently an explicit dereference, preserve the type on the\n+            --  original node (selected component or indexed component) for\n+            --  subsequent legality tests, e.g. Is_Variable. which examines\n+            --  the original node.\n \n             if Nkind (Node_To_Replace) = N_Function_Call then\n                Set_Etype\n@@ -6534,7 +6534,6 @@ package body Sem_Ch4 is\n            and then N = Prefix (Parent_Node)\n          then\n             Node_To_Replace := Parent_Node;\n-\n             Actuals := Expressions (Parent_Node);\n \n             Actual := First (Actuals);"}, {"sha": "0b324b65a40ef4c5ccca4eb88fca88a7cb132790", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199c6a1000df6695a1e4c7c041882db928b51221/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=199c6a1000df6695a1e4c7c041882db928b51221", "patch": "@@ -4680,9 +4680,9 @@ package body Sem_Eval is\n          --  If there was an error in either range, then just assume the types\n          --  statically match to avoid further junk errors.\n \n-         if Error_Posted (Scalar_Range (T1))\n-              or else\n-            Error_Posted (Scalar_Range (T2))\n+         if No (Scalar_Range (T1)) or else No (Scalar_Range (T2))\n+           or else Error_Posted (Scalar_Range (T1))\n+           or else Error_Posted (Scalar_Range (T2))\n          then\n             return True;\n          end if;"}]}