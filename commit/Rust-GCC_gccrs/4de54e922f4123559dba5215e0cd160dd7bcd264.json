{"sha": "4de54e922f4123559dba5215e0cd160dd7bcd264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRlNTRlOTIyZjQxMjM1NTlkYmE1MjE1ZTBjZDE2MGRkN2JjZDI2NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-17T23:32:16Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-17T23:32:16Z"}, "message": "(CONST_COSTS): Updated to better reflect\nthe actual constant costs on a we32k.\n\n(GO_IF_LEGITIMATE_ADDRESS): Added support for deferred addressing.\n\nFrom-SVN: r3482", "tree": {"sha": "5654cc8e69ddb5926111442594269dd8cfac2638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5654cc8e69ddb5926111442594269dd8cfac2638"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4de54e922f4123559dba5215e0cd160dd7bcd264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de54e922f4123559dba5215e0cd160dd7bcd264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de54e922f4123559dba5215e0cd160dd7bcd264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de54e922f4123559dba5215e0cd160dd7bcd264/comments", "author": null, "committer": null, "parents": [{"sha": "cd3383a39384cc899be7cac6383fafc2dc37a800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3383a39384cc899be7cac6383fafc2dc37a800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3383a39384cc899be7cac6383fafc2dc37a800"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "974b8e603f2518afc55e6bfefd72ccac4f409a79", "filename": "gcc/config/we32k/we32k.h", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de54e922f4123559dba5215e0cd160dd7bcd264/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de54e922f4123559dba5215e0cd160dd7bcd264/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwe32k%2Fwe32k.h?ref=4de54e922f4123559dba5215e0cd160dd7bcd264", "patch": "@@ -580,10 +580,14 @@ enum reg_class { NO_REGS, GENERAL_REGS,\n \n #define GO_IF_LEGITIMATE_ADDRESS(MODE, X, LABEL)\t\t\t\\\n { register rtx Addr = X;\t\t\t\t\t\t\\\n-  if (REG_P(Addr) && REG_OK_FOR_BASE_P(Addr))\t\t\t\t\\\n-    goto LABEL;\t\t\t\t\t\t\t\t\\\n+  if ((MODE) == QImode || (MODE) == HImode ||\t\t\t\t\\\n+    (MODE) == PSImode || (MODE) == SImode || (MODE) == SFmode)\t\t\\\n+    if (GET_CODE(Addr) == MEM)\t\t\t\t\t\t\\\n+      Addr = XEXP(Addr, 0);\t\t\t\t\t\t\\\n   if (CONSTANT_ADDRESS_P(Addr))\t\t\t\t\t\t\\\n     goto LABEL;\t\t\t\t\t\t\t\t\\\n+  if (REG_P(Addr) && REG_OK_FOR_BASE_P(Addr))\t\t\t\t\\\n+    goto LABEL;\t\t\t\t\t\t\t\t\\\n   if (GET_CODE(Addr) == PLUS &&\t\t\t\t\t\t\\\n     ((REG_P(XEXP(Addr, 0)) && REG_OK_FOR_BASE_P(XEXP(Addr, 0)) &&\t\\\n      CONSTANT_ADDRESS_P(XEXP(Addr, 1))) ||\t\t\t\t\\\n@@ -672,14 +676,16 @@ enum reg_class { NO_REGS, GENERAL_REGS,\n    of a switch statement.  If the code is computed here,\n    return it with a return statement.  Otherwise, break from the switch.  */\n \n-#define CONST_COSTS(RTX,CODE, OUTER_CODE)\t\t\t\\\n-  case CONST_INT:\t\t\t\t\t\t\\\n-    if ((unsigned) INTVAL (RTX) < 077) return 1;\t\t\\\n-  case CONST:\t\t\t\t\t\t\t\\\n-  case LABEL_REF:\t\t\t\t\t\t\\\n-  case SYMBOL_REF:\t\t\t\t\t\t\\\n-    return 3;\t\t\t\t\t\t\t\\\n-  case CONST_DOUBLE:\t\t\t\t\t\t\\\n+#define CONST_COSTS(RTX,CODE, OUTER_CODE)\t\t\t\t\\\n+  case CONST_INT:\t\t\t\t\t\t\t\\\n+    if (INTVAL (RTX) >= -16 && INTVAL (RTX) <= 63) return 0;\t\t\\\n+    if (INTVAL (RTX) >= -128 && INTVAL (RTX) <= 127) return 1;\t\t\\\n+    if (INTVAL (RTX) >= -32768 && INTVAL (RTX) <= 32767) return 2;\t\\\n+  case CONST:\t\t\t\t\t\t\t\t\\\n+  case LABEL_REF:\t\t\t\t\t\t\t\\\n+  case SYMBOL_REF:\t\t\t\t\t\t\t\\\n+    return 3;\t\t\t\t\t\t\t\t\\\n+  case CONST_DOUBLE:\t\t\t\t\t\t\t\\\n     return 5;\n \f\n /* Tell final.c how to eliminate redundant test instructions.  */"}]}