{"sha": "687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg3YjUwNzhhNWRlMmZiN2VjN2U4YThhODljMDhjMmI5NWJmODQ2Zg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-09-03T21:25:00Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-09-03T21:25:00Z"}, "message": "tree-sra.c (duplicate_expr_for_different_base): Removed.\n\n2009-09-03  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (duplicate_expr_for_different_base): Removed.\n\t(create_artificial_child_access): Use build_ref_for_offset instead\n\tof duplicate_expr_for_different_base.\n\t(propagate_subacesses_accross_link): Likewise.\n\nFrom-SVN: r151394", "tree": {"sha": "3e3c650847a4ae88bdafac847dec724ac3202774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e3c650847a4ae88bdafac847dec724ac3202774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "755d55bbe595541189d5270290cd97eafb0675a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755d55bbe595541189d5270290cd97eafb0675a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755d55bbe595541189d5270290cd97eafb0675a2"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "3cbcff39082f87f60767b346188691dba3946732", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f", "patch": "@@ -1,3 +1,10 @@\n+2009-09-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (duplicate_expr_for_different_base): Removed.\n+\t(create_artificial_child_access): Use build_ref_for_offset instead\n+\tof duplicate_expr_for_different_base.\n+\t(propagate_subacesses_accross_link): Likewise.\n+\t\n 2009-09-03  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (USEFUL_INSN_P): Use NONDEBUG_INSN_P instead"}, {"sha": "aed2839dd7ad107d011f254fd9c6ed52628625f0", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=687b5078a5de2fb7ec7e8a8a89c08c2b95bf846f", "patch": "@@ -1496,26 +1496,6 @@ child_would_conflict_in_lacc (struct access *lacc, HOST_WIDE_INT norm_offset,\n   return false;\n }\n \n-/* Set the expr of TARGET to one just like MODEL but with is own base at the\n-   bottom of the handled components.  */\n-\n-static void\n-duplicate_expr_for_different_base (struct access *target,\n-\t\t\t\t   struct access *model)\n-{\n-  tree t, expr = unshare_expr (model->expr);\n-\n-  gcc_assert (handled_component_p (expr));\n-  t = expr;\n-  while (handled_component_p (TREE_OPERAND (t, 0)))\n-    t = TREE_OPERAND (t, 0);\n-  gcc_assert (TREE_OPERAND (t, 0) == model->base);\n-  TREE_OPERAND (t, 0) = target->base;\n-\n-  target->expr = expr;\n-}\n-\n-\n /* Create a new child access of PARENT, with all properties just like MODEL\n    except for its offset and with its grp_write false and grp_read true.\n    Return the new access. Note that this access is created long after all\n@@ -1528,6 +1508,7 @@ create_artificial_child_access (struct access *parent, struct access *model,\n {\n   struct access *access;\n   struct access **child;\n+  bool ok;\n \n   gcc_assert (!model->grp_unscalarizable_region);\n \n@@ -1536,10 +1517,13 @@ create_artificial_child_access (struct access *parent, struct access *model,\n   access->base = parent->base;\n   access->offset = new_offset;\n   access->size = model->size;\n-  duplicate_expr_for_different_base (access, model);\n   access->type = model->type;\n   access->grp_write = true;\n   access->grp_read = false;\n+  access->expr = access->base;\n+  ok = build_ref_for_offset (&access->expr, TREE_TYPE (access->expr),\n+\t\t\t     new_offset, access->type, false);\n+  gcc_assert (ok);\n \n   child = &parent->first_child;\n   while (*child && (*child)->offset < new_offset)\n@@ -1571,7 +1555,12 @@ propagate_subacesses_accross_link (struct access *lacc, struct access *racc)\n   if (!lacc->first_child && !racc->first_child\n       && is_gimple_reg_type (racc->type))\n     {\n-      duplicate_expr_for_different_base (lacc, racc);\n+      bool ok;\n+\n+      lacc->expr = lacc->base;\n+      ok = build_ref_for_offset (&lacc->expr, TREE_TYPE (lacc->expr),\n+\t\t\t     lacc->offset, racc->type, false);\n+      gcc_assert (ok);\n       lacc->type = racc->type;\n       return false;\n     }"}]}