{"sha": "f80d6fd7074325fee6c65da904dc221cb856823b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgwZDZmZDcwNzQzMjVmZWU2YzY1ZGE5MDRkYzIyMWNiODU2ODIzYg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-02-12T06:32:36Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-02-12T06:32:36Z"}, "message": "* system.h: Provide a definition for HOST_WIDEST_INT, etc.\n\nFrom-SVN: r25164", "tree": {"sha": "ee2b4ff1729038749350e54551779b36ed147fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee2b4ff1729038749350e54551779b36ed147fb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f80d6fd7074325fee6c65da904dc221cb856823b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f80d6fd7074325fee6c65da904dc221cb856823b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f80d6fd7074325fee6c65da904dc221cb856823b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f80d6fd7074325fee6c65da904dc221cb856823b/comments", "author": null, "committer": null, "parents": [{"sha": "21034cc50049b323c3ad3c6f1cc424dfc19eae80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21034cc50049b323c3ad3c6f1cc424dfc19eae80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21034cc50049b323c3ad3c6f1cc424dfc19eae80"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "47b8e50e41845d2f9a54757c4ccf62e5e2b279a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80d6fd7074325fee6c65da904dc221cb856823b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80d6fd7074325fee6c65da904dc221cb856823b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f80d6fd7074325fee6c65da904dc221cb856823b", "patch": "@@ -1,3 +1,7 @@\n+Fri Feb 12 09:24:26 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* system.h: Provide a definition for HOST_WIDEST_INT, etc.\n+\n Fri Feb 12 23:37:26 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (c4x_address_cost): Revert 9 Feb change. "}, {"sha": "3999f42c4514fa3c40abda6ad32d91970b3b8807", "filename": "gcc/system.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80d6fd7074325fee6c65da904dc221cb856823b/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80d6fd7074325fee6c65da904dc221cb856823b/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=f80d6fd7074325fee6c65da904dc221cb856823b", "patch": "@@ -159,6 +159,34 @@ extern int errno;\n # include <limits.h>\n #endif\n \n+/* Find HOST_WIDEST_INT and set its bit size, type and print macros.\n+   It will be the largest integer mode supported by the host which may\n+   (or may not) be larger than HOST_WIDE_INT.  This must appear after\n+   <limits.h> since we only use `long long' if its bigger than a\n+   `long' and also if it is supported by macros in limits.h.  For old\n+   hosts which don't have a limits.h (and thus won't include it in\n+   stage2 cause we don't rerun configure) we assume gcc supports long\n+   long.)  Note, you won't get these defined if you don't include\n+   {ht}config.h before this file to set the HOST_BITS_PER_* macros. */\n+\n+#ifndef HOST_WIDEST_INT\n+# if defined (HOST_BITS_PER_LONG) && defined (HOST_BITS_PER_LONGLONG)\n+#  if (HOST_BITS_PER_LONGLONG > HOST_BITS_PER_LONG) && (defined (LONG_LONG_MAX) || defined (LONGLONG_MAX) || defined (LLONG_MAX) || defined (__GNUC__))\n+#   define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONGLONG\n+#   define HOST_WIDEST_INT long long\n+#   define HOST_WIDEST_INT_PRINT_DEC \"%lld\"\n+#   define HOST_WIDEST_INT_PRINT_UNSIGNED \"%llu\"\n+#   define HOST_WIDEST_INT_PRINT_HEX \"0x%llx\"\n+#  else\n+#   define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONG\n+#   define HOST_WIDEST_INT long\n+#   define HOST_WIDEST_INT_PRINT_DEC \"%ld\"\n+#   define HOST_WIDEST_INT_PRINT_UNSIGNED \"%lu\"\n+#   define HOST_WIDEST_INT_PRINT_HEX \"0x%lx\"\n+#  endif /*(long long>long) && (LONG_LONG_MAX||LONGLONG_MAX||LLONG_MAX||GNUC)*/\n+# endif /* defined(HOST_BITS_PER_LONG) && defined(HOST_BITS_PER_LONGLONG) */\n+#endif /* ! HOST_WIDEST_INT */\n+\n #ifdef TIME_WITH_SYS_TIME\n # include <sys/time.h>\n # include <time.h>"}]}