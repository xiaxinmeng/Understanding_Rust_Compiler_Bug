{"sha": "67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlNWRiMmMzOTQ3ZGI1YzUwZDZmN2E4MGRkNzE3OTVkZjdkMmM0YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-01-19T16:39:48Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-01-19T16:39:48Z"}, "message": "isc.h (TARGET_DEFAULT): Define symbolicly.\n\n        * i386/isc.h (TARGET_DEFAULT): Define symbolicly.\n        * i386/isccoff.h, i386/next.h, i386/sco.h, i386/sco5.h: Likewise.\n        * i386/scodbx.h, i386/sequent.h, i386.unix.h: Likewise.\n\nFrom-SVN: r24769", "tree": {"sha": "39a0507b3cd3072fb5a5c5c17a1aa3664eb9c843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a0507b3cd3072fb5a5c5c17a1aa3664eb9c843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/comments", "author": null, "committer": null, "parents": [{"sha": "196fb9ff402734413ced6898fd9beaee255b2f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196fb9ff402734413ced6898fd9beaee255b2f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196fb9ff402734413ced6898fd9beaee255b2f27"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "4b51d91c9b420805e3400a5e1c22fe7b9b73229a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -1,3 +1,9 @@\n+Tue Jan 19 16:37:36 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* i386/isc.h (TARGET_DEFAULT): Define symbolicly.\n+\t* i386/isccoff.h, i386/next.h, i386/sco.h, i386/sco5.h: Likewise.\n+\t* i386/scodbx.h, i386/sequent.h, i386.unix.h: Likewise.\n+\n Tue Jan 19 15:00:10 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (protoize.o, unprotoize.o): Depend on Makefile."}, {"sha": "6c1c4c7271804ab25152b584b49a6f6d23dc8b79", "filename": "gcc/config/i386/isc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fisc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fisc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fisc.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -59,7 +59,7 @@\n    So don't make TARGET_IEEE_FP default for ISC. */\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0201\n+#define TARGET_DEFAULT (MASK_80387 | MASK_FLOAT_RETURNS)\n \n /* The ISC 2.0.2 software FPU emulator apparently can't handle\n    80-bit XFmode insns, so don't generate them.  */"}, {"sha": "595c7d98fe3f1967a15897aedf4ad3addac75dff", "filename": "gcc/config/i386/isccoff.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fisccoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fisccoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fisccoff.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -1,8 +1,8 @@\n /* Definitions for Intel 386 running Interactive Unix System V.\n    Specifically, this is for recent versions that support POSIX;\n    for version 2.0.2, use configuration option i386-sysv instead.\n-   (But set TARGET_DEFAULT to 0201 if you do that,\n-   if you don't have a real 80387.)  */\n+   (But set TARGET_DEFAULT to (MASK_80307 | MASK_FLOAT_RETURNS)\n+   if you do that, if you don't have a real 80387.)  */\n \n /* Mostly it's like AT&T Unix System V. */\n "}, {"sha": "7706d23588970f2899f704f8a0832ed7dfd23e44", "filename": "gcc/config/i386/next.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnext.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA.  */\n /* By default, target has a 80387, with IEEE FP.  */\n \n #undef\tTARGET_DEFAULT\n-#define TARGET_DEFAULT  (1|0100)\n+#define TARGET_DEFAULT  (MASK_80387 | MASK_IEEE_FP)\n \n /* Implicit library calls should use memcpy, not bcopy, etc.  */\n "}, {"sha": "7fa3b4506cbbd9651466f53b859ef401cc7dce82", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -31,7 +31,7 @@ Boston, MA 02111-1307, USA.  */\n    So don't make TARGET_IEEE_FP default for SCO. */\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0201\n+#define TARGET_DEFAULT (MASK_80387 | MASK_FLOAT_RETURNS)\n \n /* Let's guess that the SCO software FPU emulator can't handle\n    80-bit XFmode insns, so don't generate them.  */"}, {"sha": "bd99689cd6322ecc54a9b5fd0959ba4fc210af68", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -724,7 +724,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n   && strcmp (STR, \"Tbss\"))\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0301\n+#define TARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)\n \n #undef HANDLE_SYSV_PRAGMA\n #define HANDLE_SYSV_PRAGMA 1"}, {"sha": "dbb296bc25eb49da2a23816eb8c581482fc29432", "filename": "gcc/config/i386/scodbx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fscodbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fscodbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fscodbx.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -32,7 +32,7 @@ Boston, MA 02111-1307, USA.  */\n    So don't make TARGET_IEEE_FP default for SCO. */\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0201\n+#define TARGET_DEFAULT (MASK_80387 | MASK_FLOAT_RETURNS)\n \n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n "}, {"sha": "df40484f4c76daaa07bcda5416aba43b1243776f", "filename": "gcc/config/i386/sequent.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fsequent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Fsequent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsequent.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -26,11 +26,10 @@ Boston, MA 02111-1307, USA.  */\n \n /* By default, don't use IEEE compatible arithmetic comparisons\n    because the assembler can't handle the fucom insn.\n-   Return float values in the 387.\n-   (TARGET_80387 | TARGET_FLOAT_RETURNS_IN_80387) */\n+   Return float values in the 387.  */\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0201\n+#define TARGET_DEFAULT (MASK_80387 | MASK_FLOAT_RETURNS)\n \n /* Specify predefined symbols in preprocessor.  */\n "}, {"sha": "bc0a11ae6185e822ef7b77009060c132b3d6ece3", "filename": "gcc/config/i386/unix.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e5db2c3947db5c50d6f7a80dd71795df7d2c4a/gcc%2Fconfig%2Fi386%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Funix.h?ref=67e5db2c3947db5c50d6f7a80dd71795df7d2c4a", "patch": "@@ -131,10 +131,9 @@ Boston, MA 02111-1307, USA.  */\n   (fputs (\".globl \", FILE), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n \n /* By default, target has a 80387, uses IEEE compatible arithmetic,\n-   and returns float values in the 387, ie,\n-   (TARGET_80387 | TARGET_IEEE_FP | TARGET_FLOAT_RETURNS_IN_80387) */\n+   and returns float values in the 387.  */\n \n-#define TARGET_DEFAULT 0301\n+#define TARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)\n \n /* Floating-point return values come in the FP register.  */\n "}]}