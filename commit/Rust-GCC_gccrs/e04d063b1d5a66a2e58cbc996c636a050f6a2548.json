{"sha": "e04d063b1d5a66a2e58cbc996c636a050f6a2548", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA0ZDA2M2IxZDVhNjZhMmU1OGNiYzk5NmM2MzZhMDUwZjZhMjU0OA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-03-08T16:36:49Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-03-08T16:36:49Z"}, "message": "avr.md (*addhi3, [...]): Add \"w\" alternative for constants in [-63,63].\n\n\t* config/avr/avr.md (*addhi3, addhi3_clobber): Add \"w\" alternative\n\tfor constants in [-63,63].\n\nFrom-SVN: r185105", "tree": {"sha": "3759c44f4c9f8c35e9eac298d48a3a3b1d5a3a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3759c44f4c9f8c35e9eac298d48a3a3b1d5a3a75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e04d063b1d5a66a2e58cbc996c636a050f6a2548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04d063b1d5a66a2e58cbc996c636a050f6a2548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e04d063b1d5a66a2e58cbc996c636a050f6a2548", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04d063b1d5a66a2e58cbc996c636a050f6a2548/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce19a3f8b0357b2ae36975b47d9ae05ff5fa75eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce19a3f8b0357b2ae36975b47d9ae05ff5fa75eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce19a3f8b0357b2ae36975b47d9ae05ff5fa75eb"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "0d9c469e90069b25c28b6fd0211298b8f2d99576", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04d063b1d5a66a2e58cbc996c636a050f6a2548/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04d063b1d5a66a2e58cbc996c636a050f6a2548/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e04d063b1d5a66a2e58cbc996c636a050f6a2548", "patch": "@@ -1,3 +1,8 @@\n+2012-03-08  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.md (*addhi3, addhi3_clobber): Add \"w\" alternative\n+\tfor constants in [-63,63].\n+\n 2012-03-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/52530"}, {"sha": "3d1adf8b267a3a491ff554a64e104134a95b5395", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04d063b1d5a66a2e58cbc996c636a050f6a2548/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04d063b1d5a66a2e58cbc996c636a050f6a2548/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=e04d063b1d5a66a2e58cbc996c636a050f6a2548", "patch": "@@ -1098,15 +1098,16 @@\n    (set_attr \"adjust_len\" \"addto_sp\")])\n \n (define_insn \"*addhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\"          \"=r,d,d\")\n-        (plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0\")\n-                 (match_operand:HI 2 \"nonmemory_operand\" \"r,s,n\")))]\n+  [(set (match_operand:HI 0 \"register_operand\"          \"=r,d,!w,d\")\n+        (plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0 ,0\")\n+                 (match_operand:HI 2 \"nonmemory_operand\" \"r,s,IJ,n\")))]\n   \"\"\n   {\n     static const char * const asm_code[] =\n       {\n         \"add %A0,%A2\\;adc %B0,%B2\",\n         \"subi %A0,lo8(-(%2))\\;sbci %B0,hi8(-(%2))\",\n+        \"\",\n         \"\"\n       };\n \n@@ -1115,9 +1116,9 @@\n \n     return avr_out_plus_noclobber (operands, NULL, NULL);\n   }\n-  [(set_attr \"length\" \"2,2,2\")\n-   (set_attr \"adjust_len\" \"*,*,out_plus_noclobber\")\n-   (set_attr \"cc\" \"set_n,set_czn,out_plus_noclobber\")])\n+  [(set_attr \"length\" \"2,2,2,2\")\n+   (set_attr \"adjust_len\" \"*,*,out_plus_noclobber,out_plus_noclobber\")\n+   (set_attr \"cc\" \"set_n,set_czn,out_plus_noclobber,out_plus_noclobber\")])\n \n ;; Adding a constant to NO_LD_REGS might have lead to a reload of\n ;; that constant to LD_REGS.  We don't add a scratch to *addhi3\n@@ -1155,10 +1156,10 @@\n               (clobber (match_dup 2))])])\n \n (define_insn \"addhi3_clobber\"\n-  [(set (match_operand:HI 0 \"register_operand\"           \"=d,l\")\n-        (plus:HI (match_operand:HI 1 \"register_operand\"  \"%0,0\")\n-                 (match_operand:HI 2 \"const_int_operand\"  \"n,n\")))\n-   (clobber (match_scratch:QI 3                          \"=X,&d\"))]\n+  [(set (match_operand:HI 0 \"register_operand\"           \"=!w,d,r\")\n+        (plus:HI (match_operand:HI 1 \"register_operand\"   \"%0,0,0\")\n+                 (match_operand:HI 2 \"const_int_operand\"  \"IJ,n,n\")))\n+   (clobber (match_scratch:QI 3                           \"=X,X,&d\"))]\n   \"\"\n   {\n     gcc_assert (REGNO (operands[0]) == REGNO (operands[1]));"}]}