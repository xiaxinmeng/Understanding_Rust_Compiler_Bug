{"sha": "713ecb3d417363a4b12c725b335fce10355da206", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzZWNiM2Q0MTczNjNhNGIxMmM3MjViMzM1ZmNlMTAzNTVkYTIwNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-25T16:37:31Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-25T16:37:31Z"}, "message": "    rs6000: Allow FPRs to change between SDmode and DDmode [PR94254]\n\n    g:497498c878d48754318e486428e2aa30854020b9 caused lra to cycle\n    on some SDmode reloads for power6.  As explained in more detail\n    in the PR comments, the problem was a conflict between two target\n    hooks: rs6000_secondary_memory_needed_mode required SDmode FPR\n    reloads to use DDmode memory (rightly, since using SDmode memory\n    wouldn't make progress) but rs6000_can_change_mode_class didn't\n    allow FPRs to change from SDmode to DDmode.  Previously lra\n    ignored that and changed the mode anyway.\n\n    From what Segher says, it sounds like the \"from_size < 8 || to_size < 8\"\n    check is mostly there for SF<->64-bit subregs, and that SDmode is stored\n    in the way that target-independent code expects.  This patch therefore\n    allows SD<->DD changes.\n\n    I wondered about checking for SD<->64-bit changes instead, but that\n    seemed like an unnecessary generalisation for this stage.\n\n    2020-03-23  Richard Sandiford  <richard.sandiford@arm.com>\n\n    gcc/\n            PR target/94254\n            * config/rs6000/rs6000.c (rs6000_can_change_mode_class): Allow\n            FPRs to change between SDmode and DDmode.", "tree": {"sha": "1e9b1629c0cd19232bdaca4a799e78fd76d0cfeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e9b1629c0cd19232bdaca4a799e78fd76d0cfeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713ecb3d417363a4b12c725b335fce10355da206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713ecb3d417363a4b12c725b335fce10355da206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713ecb3d417363a4b12c725b335fce10355da206", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713ecb3d417363a4b12c725b335fce10355da206/comments", "author": null, "committer": null, "parents": [{"sha": "c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "7678776c344519ecfb4d20cea723c9245499181d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713ecb3d417363a4b12c725b335fce10355da206/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713ecb3d417363a4b12c725b335fce10355da206/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=713ecb3d417363a4b12c725b335fce10355da206", "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/94254\n+\t* config/rs6000/rs6000.c (rs6000_can_change_mode_class): Allow\n+\tFPRs to change between SDmode and DDmode.\n+\n 2020-03-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/94131"}, {"sha": "5b36593bfb715b5239ec01ad0843bd6fd6db6c8c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713ecb3d417363a4b12c725b335fce10355da206/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713ecb3d417363a4b12c725b335fce10355da206/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=713ecb3d417363a4b12c725b335fce10355da206", "patch": "@@ -12307,6 +12307,15 @@ rs6000_can_change_mode_class (machine_mode from,\n \t  if (!BYTES_BIG_ENDIAN && (to == TDmode || from == TDmode))\n \t    return false;\n \n+\t  /* Allow SD<->DD changes, since SDmode values are stored in\n+\t     the low half of the DDmode, just like target-independent\n+\t     code expects.  We need to allow at least SD->DD since\n+\t     rs6000_secondary_memory_needed_mode asks for that change\n+\t     to be made for SD reloads.  */\n+\t  if ((to == DDmode && from == SDmode)\n+\t      || (to == SDmode && from == DDmode))\n+\t    return true;\n+\n \t  if (from_size < 8 || to_size < 8)\n \t    return false;\n "}]}