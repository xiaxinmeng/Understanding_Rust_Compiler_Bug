{"sha": "74e16385964d6c03d99916654389edf39e768147", "node_id": "C_kwDOANBUbNoAKDc0ZTE2Mzg1OTY0ZDZjMDNkOTk5MTY2NTQzODllZGYzOWU3NjgxNDc", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-12-13T21:44:33Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-12-13T21:44:33Z"}, "message": "Merge commit 'b4fddbe9592e9feb37ce567d90af822b75995531' into HEAD", "tree": {"sha": "1b0109018777011a30ed9c961ed7b00bf3ead482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b0109018777011a30ed9c961ed7b00bf3ead482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74e16385964d6c03d99916654389edf39e768147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e16385964d6c03d99916654389edf39e768147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e16385964d6c03d99916654389edf39e768147", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e16385964d6c03d99916654389edf39e768147/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d1620c91053438399064fa4eddb15d09cbabf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d1620c91053438399064fa4eddb15d09cbabf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d1620c91053438399064fa4eddb15d09cbabf4"}, {"sha": "b4fddbe9592e9feb37ce567d90af822b75995531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fddbe9592e9feb37ce567d90af822b75995531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fddbe9592e9feb37ce567d90af822b75995531"}], "stats": {"total": 289065, "additions": 164293, "deletions": 124772}, "files": [{"sha": "288c928c5d05c58f7d38dc51daabd1b5296c450c", "filename": "ChangeLog", "status": "modified", "additions": 394, "deletions": 83, "changes": 477, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1,3 +1,314 @@\n+2022-12-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* MAINTAINERS: Fix spacing.\n+\n+2022-12-07  Arthur Cohen  <arthur.cohen@embecosm.com>\n+\n+\t* MAINTAINERS: Add Arthur Cohen as Rust front-end maintainer.\n+\n+2022-12-07  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Makefile.def: Pass host_libs_picflag to host dependent library\n+\tconfigures.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac (host_libs_picflag): New configure variable set to\n+\t'--with-pic' when building 'host_shared'.\n+\n+2022-11-25  Weimin Pan  <weimin.pan@oracle.com>\n+\n+\t* Makefile.def: Add libsframe as new module with its dependencies.\n+\t* Makefile.in: Regenerated.\n+\t* configure.ac: Add libsframe to host_libs.\n+\t* configure: Regenerated.\n+\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tRevert:\n+\t2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.def: Pass $(PICFLAG) to AM_CFLAGS for gmp, mpfr, mpc, and\n+\tisl.\n+\t* Makefile.in: Regenerate.\n+\t* Makefile.tpl: Set PICFLAG.\n+\t* configure.ac (--enable-host-pie): New check.  Set PICFLAG after this\n+\tcheck.\n+\t* configure: Regenerate.\n+\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.def: Pass $(PICFLAG) to AM_CFLAGS for gmp, mpfr, mpc, and\n+\tisl.\n+\t* Makefile.in: Regenerate.\n+\t* Makefile.tpl: Set PICFLAG.\n+\t* configure.ac (--enable-host-pie): New check.  Set PICFLAG after this\n+\tcheck.\n+\t* configure: Regenerate.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/Makefile: New file.\n+\t* doc/_static/custom.css: New file.\n+\t* doc/baseconf.py: New file.\n+\t* doc/bsd.rst: New file.\n+\t* doc/contrib.rst: New file.\n+\t* doc/contribute.rst: New file.\n+\t* doc/cppdiropts.rst: New file.\n+\t* doc/cppenv.rst: New file.\n+\t* doc/cppopts.rst: New file.\n+\t* doc/cppwarnopts.rst: New file.\n+\t* doc/favicon.ico: New file.\n+\t* doc/funding.rst: New file.\n+\t* doc/gcc_sphinx.py: New file.\n+\t* doc/gnu.rst: New file.\n+\t* doc/gnu_free_documentation_license.rst: New file.\n+\t* doc/gpl-3.0.rst: New file.\n+\t* doc/indices-and-tables.rst: New file.\n+\t* doc/lgpl-2.1.rst: New file.\n+\t* doc/logo.pdf: New file.\n+\t* doc/logo.svg: New file.\n+\t* doc/md.rst: New file.\n+\t* doc/requirements.txt: New file.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Port to GCC sources.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Support Sphinx based documentation.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Simplify BUGURL and VERSION_PACKAGE,\n+\tprovide a default.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/bsd.rst:\n+\tAdd trailing newline.\n+\t* doc/contrib.rst:\n+\tAdd trailing newline.\n+\t* doc/contribute.rst:\n+\tAdd trailing newline.\n+\t* doc/cppdiropts.rst:\n+\tAdd trailing newline.\n+\t* doc/cppenv.rst:\n+\tAdd trailing newline.\n+\t* doc/cppopts.rst:\n+\tAdd trailing newline.\n+\t* doc/cppwarnopts.rst:\n+\tAdd trailing newline.\n+\t* doc/funding.rst:\n+\tAdd trailing newline.\n+\t* doc/gnu.rst:\n+\tAdd trailing newline.\n+\t* doc/gnu_free_documentation_license.rst:\n+\tAdd trailing newline.\n+\t* doc/gpl-3.0.rst:\n+\tAdd trailing newline.\n+\t* doc/indices-and-tables.rst:\n+\tAdd trailing newline.\n+\t* doc/lgpl-2.1.rst:\n+\tAdd trailing newline.\n+\t* doc/md.rst:\n+\tAdd trailing newline.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure.ac: Use new install URL.\n+\t* configure: Regenerate.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-10  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/baseconf.py: Inject dirname(__file__)/'modules' to path\n+\tinstead of just ``.''.\n+\t* doc/gcc_sphinx.py: Moved to...\n+\t* doc/modules/gcc_sphinx.py: ...here.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Modernize by using pathlib.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/Makefile: Disable -j auto.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/Makefile: Update comment.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/indices-and-tables.rst: Rename Indexes to Indices.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR web/107643\n+\t* doc/baseconf.py: Set include_todo tag if INCLUDE_TODO env\n+\tis set.\n+\t* doc/indices-and-tables.rst: Use include_todo tag.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-13  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* doc/contrib.rst: Update Jeff Law's email address.\n+\n+2022-11-13  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* doc/contrib.rst: Update Jeff Law's email address.\n+\n+2022-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR web/107643\n+\t* doc/baseconf.py: Set include_todo tag if INCLUDE_TODO env\n+\tis set.\n+\t* doc/indices-and-tables.rst: Use include_todo tag.\n+\n+2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/indices-and-tables.rst: Rename Indexes to Indices.\n+\n+2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/Makefile: Update comment.\n+\n+2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/Makefile: Disable -j auto.\n+\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Modernize by using pathlib.\n+\n+2022-11-10  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/baseconf.py: Inject dirname(__file__)/'modules' to path\n+\tinstead of just ``.''.\n+\t* doc/gcc_sphinx.py: Moved to...\n+\t* doc/modules/gcc_sphinx.py: ...here.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure.ac: Use new install URL.\n+\t* configure: Regenerate.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/bsd.rst:\n+\tAdd trailing newline.\n+\t* doc/contrib.rst:\n+\tAdd trailing newline.\n+\t* doc/contribute.rst:\n+\tAdd trailing newline.\n+\t* doc/cppdiropts.rst:\n+\tAdd trailing newline.\n+\t* doc/cppenv.rst:\n+\tAdd trailing newline.\n+\t* doc/cppopts.rst:\n+\tAdd trailing newline.\n+\t* doc/cppwarnopts.rst:\n+\tAdd trailing newline.\n+\t* doc/funding.rst:\n+\tAdd trailing newline.\n+\t* doc/gnu.rst:\n+\tAdd trailing newline.\n+\t* doc/gnu_free_documentation_license.rst:\n+\tAdd trailing newline.\n+\t* doc/gpl-3.0.rst:\n+\tAdd trailing newline.\n+\t* doc/indices-and-tables.rst:\n+\tAdd trailing newline.\n+\t* doc/lgpl-2.1.rst:\n+\tAdd trailing newline.\n+\t* doc/md.rst:\n+\tAdd trailing newline.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Simplify BUGURL and VERSION_PACKAGE,\n+\tprovide a default.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Support Sphinx based documentation.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Port to GCC sources.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/Makefile: New file.\n+\t* doc/_static/custom.css: New file.\n+\t* doc/baseconf.py: New file.\n+\t* doc/bsd.rst: New file.\n+\t* doc/contrib.rst: New file.\n+\t* doc/contribute.rst: New file.\n+\t* doc/cppdiropts.rst: New file.\n+\t* doc/cppenv.rst: New file.\n+\t* doc/cppopts.rst: New file.\n+\t* doc/cppwarnopts.rst: New file.\n+\t* doc/favicon.ico: New file.\n+\t* doc/funding.rst: New file.\n+\t* doc/gcc_sphinx.py: New file.\n+\t* doc/gnu.rst: New file.\n+\t* doc/gnu_free_documentation_license.rst: New file.\n+\t* doc/gpl-3.0.rst: New file.\n+\t* doc/indices-and-tables.rst: New file.\n+\t* doc/lgpl-2.1.rst: New file.\n+\t* doc/logo.pdf: New file.\n+\t* doc/logo.svg: New file.\n+\t* doc/md.rst: New file.\n+\t* doc/requirements.txt: New file.\n+\n+2022-11-04  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* Makefile.def: Remove module 'liboffloadmic'.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Remove 'liboffloadmic' handling.\n+\t* configure: Regenerate.\n+\n 2022-10-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* MAINTAINERS: Update email address.\n@@ -15075,7 +15386,7 @@ Tue May 25 11:20:46 1999  H.J. Lu  (hjl@gnu.org)\n \n Thu May 20 10:00:42 1999   Stephen L Moshier  <moshier@world.std.com>\n \n-\t * Makefile.in (GCC_FOR_TARGET): Add -I$(build_tooldir)/include.\n+\t* Makefile.in (GCC_FOR_TARGET): Add -I$(build_tooldir)/include.\n \n 1999-04-30  Tom Tromey  <tromey@cygnus.com>\n \n@@ -18540,7 +18851,7 @@ Wed May 31 22:27:42 1995  Jim Wilson  <wilson@chestnut.cygnus.com>\n Thu May 25 22:40:59 1995  J.T. Conklin  <jtc@rtl.cygnus.com>\n \n \t* configure.in (noconfigdirs): Enable all packages for\n-\t  i386-unknown-netbsd.\n+\ti386-unknown-netbsd.\n \n Sat May 20 13:22:31 1995  Angela Marie Thomas  <angela@cirdan.cygnus.com>\n \n@@ -18814,7 +19125,7 @@ Mon Nov 14 08:49:15 1994  Stu Grossman  (grossman@cygnus.com)\n Fri Nov 11 15:31:26 1994  Bill Cox  (bill@rtl.cygnus.com)\n \n \t* build-all.mk: Add mips-ncd-elf target to sun4 targets\n-\t  for special NCD build.\n+\tfor special NCD build.\n \n Mon Nov  7 20:58:17 1994  Ken Raeburn  <raeburn@cujo.cygnus.com>\n \n@@ -18826,8 +19137,8 @@ Mon Nov  7 20:58:17 1994  Ken Raeburn  <raeburn@cujo.cygnus.com>\n Mon Nov  7 17:25:18 1994  Bill Cox  (bill@cirdan.cygnus.com)\n \n \t* build-all.mk: Add Ericsson targets to sun4 and solaris\n-\t  hosts.  Add  BNR's sun4 target to solaris host, so their\n-\t  build-from-source will be tested in-house first.\n+\thosts.  Add  BNR's sun4 target to solaris host, so their\n+\tbuild-from-source will be tested in-house first.\n \n Sat Nov  5 18:43:30 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n \n@@ -18956,7 +19267,7 @@ Mon Sep  5 05:01:30 1994  Ken Raeburn  (raeburn@kr-pc.cygnus.com)\n Thu Sep  1 09:35:00 1994  J.T. Conklin  (jtc@phishhead.cygnus.com)\n \n \t* configure.in (*-*-netware): don't configure libg++, libio,\n-\t  librx, or newlib.\n+\tlibrx, or newlib.\n \n Wed Aug 31 13:52:08 1994  Ian Lance Taylor  (ian@sanguine.cygnus.com)\n \n@@ -19198,7 +19509,7 @@ Mon Jun  6 21:35:02 1994  D. V. Henkel-Wallace  (gumby@cygnus.com)\n Mon Jun  6 16:06:34 1994  Karen Christiansen (karen@cirdan.cygnus.com)\n \n \t* brought devo/test-build.mk update-to-date with progressive/\n-\t  test-build.mk. Add lynx targets and hppa flag info.\n+\ttest-build.mk. Add lynx targets and hppa flag info.\n \n Sat Jun  4 17:23:54 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n \n@@ -19217,7 +19528,7 @@ Thu Jun  2 18:56:46 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)\n Thu Jun  2 10:57:06 1994  Karen Christiansen (karen@cirdan.cygnus.com)\n \n \t* brought build-all.mk update-to-date with progressive build-all.mk,\n-\t  added new targets and hppa info.\n+\tadded new targets and hppa info.\n \n Thu Jun  2 00:12:44 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)\n \n@@ -19233,7 +19544,7 @@ Wed Jun  1 10:49:41 1994  Bill Cox  (bill@rtl.cygnus.com)\n \n \t* Makefile.in: Rename HOST_ONLY to NATIVE.\n \t* configure: Delete SunOs patch suffix from host_canonical\n-\t  and build_canonical variables that are prepended to Makefiles.\n+\tand build_canonical variables that are prepended to Makefiles.\n \t* configure.in: Add comments for easier maintenance.\n \n Tue May 31 19:39:47 1994  Jim Kingdon  (kingdon@lioth.cygnus.com)\n@@ -19257,12 +19568,12 @@ Thu May 26 08:53:19 1994  Bill Cox  (bill@rtl.cygnus.com)\n \n \t* config.sub: Move deletion of patch suffix from here...\n \t* configure.in: To here, at Ian's suggestion.  The top-\n-\t  level scripts might need to know of a patch level.\n+\tlevel scripts might need to know of a patch level.\n \n Wed May 25 09:15:54 1994  Bill Cox  (bill@rtl.cygnus.com)\n \n \t* config.sub: Strip off patch suffix so rtl is recognized\n-\t  as a sunos4.1.3 machine, even though it's been patched.\n+\tas a sunos4.1.3 machine, even though it's been patched.\n \n Fri May 20 08:25:49 1994  Steve Chamberlain  (sac@deneb.cygnus.com)\n \n@@ -19376,7 +19687,7 @@ Thu Apr 14 23:33:17 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)\n Wed Apr 13 15:14:52 1994  Bill Cox  (bill@cygnus.com)\n \n \t* configure: Make file links cleanly even if Lynx fails on\n-\t  an NFS symlink (at least fail cleanly).\n+\tan NFS symlink (at least fail cleanly).\n \n Mon Apr 11 10:58:56 1994  Jim Wilson  (wilson@sphagnum.cygnus.com)\n \n@@ -19630,12 +19941,12 @@ Wed Dec  1 17:00:33 1993  Jason Merrill  (jason@deneb.cygnus.com)\n Tue Nov 30 13:45:15 1993  david d `zoo' zuhn  (zoo@andros.cygnus.com)\n \n \t* configure.in (notsupp): ensure that a space is always at the end\n-\t  of the configdirs list, since the grep checks for an explicit space\n+\tof the configdirs list, since the grep checks for an explicit space\n \n Tue Nov 16 15:04:27 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)\n \n \t* configure.in (target i386-sysv4.2): don't build ld, since static\n-\t  versions of many libraries are not available.\n+\tversions of many libraries are not available.\n \n Tue Nov 16 14:28:12 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)\n \n@@ -19703,7 +20014,7 @@ Wed Nov  3 22:09:46 1993  Ken Raeburn  (raeburn@rtl.cygnus.com)\n Wed Nov  3 21:31:52 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)\n \n \t* configure.in (hppa target): check the source directory for the\n-\t  pagas sub-directory\n+\tpagas sub-directory\n \n Wed Nov  3 11:12:22 1993  Doug Evans  (dje@canuck.cygnus.com)\n \n@@ -19764,7 +20075,7 @@ Wed Oct 20 09:56:12 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)\n Tue Oct 19 16:02:22 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)\n \n \t* configure.in: don't build ld on solaris2 (not a viable option\n-\t  due to bugs in getpwnam & getpwuid)\n+\tdue to bugs in getpwnam & getpwuid)\n \n Tue Oct 19 15:13:56 1993  Ken Raeburn  (raeburn@rtl.cygnus.com)\n \n@@ -19975,7 +20286,7 @@ Mon Jul 19 21:54:46 1993  Fred Fish  (fnf@deneb.cygnus.com)\n Wed Jul 14 12:03:11 1993  K. Richard Pixley  (rich@sendai.cygnus.com)\n \n \t* Makefile.in (Makefile): depend on configure.in.  Also drop the\n-\t  $(srcdir)/ from the dependency on Makefile.in.\n+\t$(srcdir)/ from the dependency on Makefile.in.\n \n Tue Jul 13 20:10:58 1993  Doug Evans  (dje@canuck.cygnus.com)\n \n@@ -19998,7 +20309,7 @@ Wed Jul  7 17:58:14 1993  david d `zoo' zuhn  (zoo at rtl.cygnus.com)\n \t* Makefile.in: remove all.cross and install.cross targets\n \n \t* configure: remove CROSS=-DCROSS_COMPILE and ALL=all.cross\n-\t  definitions\n+\tdefinitions\n \n Tue Jul  6 10:39:44 1993  Steve Chamberlain  (sac@phydeaux.cygnus.com)\n \n@@ -20230,7 +20541,7 @@ Mon May 10 17:22:26 1993  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)\n Mon May 10 14:55:51 1993  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* configure: Change help message to prefer --options rather than\n-\t  -options.\n+\t-options.\n \n Mon May 10 05:58:35 1993  Ken Raeburn  (raeburn@kr-pc.cygnus.com)\n \n@@ -20453,7 +20764,7 @@ Wed Mar 10 12:08:27 1993  K. Richard Pixley  (rich@rtl.cygnus.com)\n \t* config.guess: add GPL.\n \n \t* Makefile.in, config.guess, config.sub, configure: bump\n-\t  copyrights to 93.\n+\tcopyrights to 93.\n \n Wed Mar 10 07:12:48 1993  Ian Lance Taylor  (ian@cygnus.com)\n \n@@ -20644,7 +20955,7 @@ Tue Feb  2 11:45:53 1993  Ian Lance Taylor  (ian@cygnus.com)\n Mon Feb  1 12:35:41 1993  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* configure: check return code from mkdir, print error message and\n-\t  exit on failure.\n+\texit on failure.\n \n Sat Jan 30 16:40:28 1993  John Gilmore  (gnu@cygnus.com)\n \n@@ -20702,7 +21013,7 @@ Wed Jan 13 17:06:45 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)\n Wed Jan  6 20:29:16 1993  Mike Werner  (mtw@rtl.cygnus.com)\n \n \t* Makefile.in: Removed explicit setting of SUBDIRS. SUBDIRS is now\n-\t  set exclusively by configure, using configure.in .\n+\tset exclusively by configure, using configure.in .\n \n Wed Jan  6 13:44:11 1993  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)\n \n@@ -21081,8 +21392,8 @@ Tue Jul 21 01:01:50 1992  david d `zoo' zuhn (zoo@cygnus.com)\n Mon Jul 20 11:02:09 1992  D. V. Henkel-Wallace  (gumby@cygnus.com)\n \n \t* Makefile.in: eradicate bison spoor (ditto libgcc).\n-\t configure.in: recognise m68{k,000}-ericsson-OSE.\n-\t es1800 is alias for m68k-ericsson-OSE\n+\tconfigure.in: recognise m68{k,000}-ericsson-OSE.\n+\tes1800 is alias for m68k-ericsson-OSE\n \n Sun Jul 19 17:49:02 1992  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)\n \n@@ -21092,10 +21403,10 @@ Sun Jul 19 17:49:02 1992  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)\n Fri Jul 17 22:52:49 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* test-build.mk: recurse explicitly with -f test-build.mk when\n-\t  appropriate.  predicate stage3 and comparison on the existence\n-\t  of gcc.  That is, if gcc isn't around, we aren't three-staging.\n-\t  On very clean, also remove ...stamp-co.  Build in-place before\n-\t  doing other builds.\n+\tappropriate.  predicate stage3 and comparison on the existence\n+\tof gcc.  That is, if gcc isn't around, we aren't three-staging.\n+\tOn very clean, also remove ...stamp-co.  Build in-place before\n+\tdoing other builds.\n \n Thu Jul 16 18:33:09 1992  Steve Chamberlain  (sac@thepub.cygnus.com)\n \n@@ -21197,27 +21508,27 @@ Sun May 10 21:45:59 1992  Per Bothner  (bothner@rtl.cygnus.com)\n Fri May  8 08:31:41 1992  K. Richard Pixley  (rich@cygnus.com)\n \n \t* configure: do not bury `pwd` into config.status, thus do fewer\n-\t  pwd's.\n+\tpwd's.\n \n \t* configure: print the \"Building in\" message only when building in\n-\t  other than \".\" AND verbose.\n+\tother than \".\" AND verbose.\n \n \t* configure: remove -s, rework -v to better accommodate guested\n-\t  configures.\n+\tconfigures.\n \n \t* standards.texi: updated to 3 may, fixed librid <-> libdir typo.\n \n Fri May  1 18:00:50 1992  K. Richard Pixley  (rich@cygnus.com)\n \n \t* Makefile.in: macroize flags passed on recursion.  remove\n-\t  fileutils.\n+\tfileutils.\n \n Thu Apr 30 08:56:20 1992  K. Richard Pixley  (rich@cygnus.com)\n \n \t* configure: get makesrcdir right for subdirs deeper than 1.\n \n \t* Makefile.in: pass INSTALL, INSTALL_DATA, INSTALL_PROGRAM on\n-\t  install.\n+\tinstall.\n \n Fri Apr 24 15:51:51 1992  K. Richard Pixley  (rich@cygnus.com)\n \n@@ -21234,7 +21545,7 @@ Fri Apr 24 15:22:04 1992  K. Richard Pixley  (rich@cygnus.com)\n Wed Apr 22 18:06:55 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* configure: test for and move config.status pieces from\n-\t  ${subdir}/.\n+\t${subdir}/.\n \n Wed Apr 22 14:38:34 1992  Fred Fish  (fnf@cygnus.com)\n \n@@ -21246,22 +21557,22 @@ Tue Apr 21 12:31:33 1992  K. Richard Pixley  (rich@cygnus.com)\n \t* configure: correct final line of config.status.\n \n \t* configure: patch from eggert.  Avoids a protection problem if\n-\t  the original Makefile.in is read only.\n+\tthe original Makefile.in is read only.\n \n \t* configure: use move-if-change from gcc to create config.status.\n-\t  Some makefiles depend on config.status to tell if a directory\n-\t  has been reconfigured for a different host.  This change\n-\t  prevents those directories from remaking everything in the case\n-\t  where the reconfig was only intended to rebuild a Makefile.\n+\tSome makefiles depend on config.status to tell if a directory\n+\thas been reconfigured for a different host.  This change\n+\tprevents those directories from remaking everything in the case\n+\twhere the reconfig was only intended to rebuild a Makefile.\n \n \t* configure: test for config.sub with \"config.sub sun4\" rather\n-\t  than \"config.sub ${host_alias}\".  Otherwise we can't tell a bad\n-\t  host alias from a missing config.sub.\n+\tthan \"config.sub ${host_alias}\".  Otherwise we can't tell a bad\n+\thost alias from a missing config.sub.\n \n Mon Apr 20 18:16:36 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* Makefile.in: explicitly pass CFLAGS on recursion. no longer pass\n-\t  MINUS_G (this can be done with CFLAGS).  Default CFLAGS to -g.\n+\tMINUS_G (this can be done with CFLAGS).  Default CFLAGS to -g.\n \n Fri Apr 17 18:27:51 1992  Per Bothner  (bothner@cygnus.com)\n \n@@ -21276,7 +21587,7 @@ Wed Apr 15 17:27:34 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \t* Makefile.in: no longer pass against on recursion.\n \n \t* Makefile.in: added .NOEXPORT: so that stray makefile_frag\n-\t  definitions are not inherited.\n+\tdefinitions are not inherited.\n \n \t* configure: correct makesrcdir when subdir is .\n \n@@ -21328,7 +21639,7 @@ Tue Mar 31 16:32:57 1992  K. Richard Pixley  (rich@cygnus.com)\n Mon Mar 30 22:20:23 1992  K. Richard Pixley  (rich@cygnus.com)\n \n \t* Makefile.in: add send_pr.  remove \"force\" from .stmp-gprof rule.\n-\t  Supress echoing of all the \"if [ -d ... $(MAKE)\" lines.\n+\tSupress echoing of all the \"if [ -d ... $(MAKE)\" lines.\n \n Wed Mar 25 15:20:04 1992  Stu Grossman  (grossman@cygnus.com)\n \n@@ -21367,7 +21678,7 @@ Fri Mar 13 18:44:18 1992  K. Richard Pixley  (rich@cygnus.com)\n Thu Mar 12 04:56:24 1992  K. Richard Pixley  (rich@cygnus.com)\n \n \t* configure: adjusted error message on objdir/srcdir configure\n-\t  collision, per john's suggestion.\n+\tcollision, per john's suggestion.\n \n \t* Makefile.in: add libiberty stmp to all and all.cross.\n \n@@ -21380,10 +21691,10 @@ Tue Mar 10 21:49:18 1992  K. Richard Pixley  (rich@mars.cygnus.com)\n \t* Makefile.in: drop flex.  make stamp files work.\n \n \t* configure: added test for conflicting configuration in srcdir,\n-\t  remove trailing slashes from srcdir.  Otherwise emacs gdb mode\n-\t  gets cranky.  use relative paths for configure and srcdir\n-\t  whenever possible.  Send some error messages to stderr that were\n-\t  going to stdout.\n+\tremove trailing slashes from srcdir.  Otherwise emacs gdb mode\n+\tgets cranky.  use relative paths for configure and srcdir\n+\twhenever possible.  Send some error messages to stderr that were\n+\tgoing to stdout.\n \n Tue Mar 10 18:01:55 1992  Per Bothner  (bothner@cygnus.com)\n \n@@ -21393,7 +21704,7 @@ Tue Mar 10 18:01:55 1992  Per Bothner  (bothner@cygnus.com)\n Thu Mar  5 21:45:07 1992  K. Richard Pixley  (rich@sendai)\n \n \t* Makefile.in: added stmp-files so that directories aren't polled\n-\t  when they are already built.\n+\twhen they are already built.\n \n \t* configure.texi: fixed a node pointer problem.\n \n@@ -21407,16 +21718,16 @@ Thu Mar  5 12:05:58 1992  Stu Grossman  (grossman at cygnus.com)\n Wed Mar  4 02:57:46 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* configure: -recurring becomes -silent.  corrected help message\n-\t  for -site= option.\n+\tfor -site= option.\n \n \t* Makefile.in: mkdir $(exec_prefix) and $(tooldir).\n \n Tue Mar  3 14:51:21 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n \t* configure: when building Makefile for crosses, replace\n-\t  tooldir and program_prefix.  default srcdir from location of\n-\t  config.sub.  remove \"for host in hosts\" and \"for target in\n-\t  targets\" loops.\n+\ttooldir and program_prefix.  default srcdir from location of\n+\tconfig.sub.  remove \"for host in hosts\" and \"for target in\n+\ttargets\" loops.\n \n Wed Feb 26 19:48:25 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n \n@@ -21425,14 +21736,14 @@ Wed Feb 26 19:48:25 1992  K. Richard Pixley  (rich@rtl.cygnus.com)\n Wed Feb 26 18:04:40 1992  K. Richard Pixley  (rich@cygnus.com)\n \n \t* Makefile.in, configure.in: removed traces of namesubdir,\n-\t  -subdirs, $(subdir), $(unsubdir), some rcs triggers.  Forced\n-\t  copyrights to '92, changed some from Cygnus to FSF.\n+\t-subdirs, $(subdir), $(unsubdir), some rcs triggers.  Forced\n+\tcopyrights to '92, changed some from Cygnus to FSF.\n \n \t* configure.texi: remove most references to multiple hosts,\n-\t  multiple targets, subdirs, etc.\n+\tmultiple targets, subdirs, etc.\n \n \t* configure.man: removed rcsid. reference config.sub not\n-\t  config.subr.\n+\tconfig.subr.\n \n \t* Makefile.in: mkdir $(infodir) on install-info.\n \n@@ -21508,12 +21819,12 @@ Thu Jan  2 22:57:12 1992  John Gilmore  (gnu at cygnus.com)\n Fri Dec 27 16:26:47 1991  K. Richard Pixley  (rich at cygnus.com)\n \n \t* configure.in, Makefile.in: fix clean-info, add flex.  add\n-\t  fileutils.\n+\tfileutils.\n \n \t* configure: be less sensitive to spaces in Makefile.in.  Do not\n-\t  look for sources in \"..\".  Doing so breaks subdirectories that\n-\t  might have their own configure.  If a subdir has it's own\n-\t  configure script, use it.\n+\tlook for sources in \"..\".  Doing so breaks subdirectories that\n+\tmight have their own configure.  If a subdir has it's own\n+\tconfigure script, use it.\n \n Thu Dec 26 16:30:26 1991  K. Richard Pixley  (rich at cygnus.com)\n \n@@ -21536,33 +21847,33 @@ Thu Dec 19 15:54:29 1991  K. Richard Pixley  (rich at cygnus.com)\n Wed Dec 18 15:39:34 1991  K. Richard Pixley  (rich at cygnus.com)\n \n \t* DOC.configure, cfg-paper.texi: revised, updated, and texinfo'd.\n-\t  renamed from DOC.configure to cfg-paper.texi.\n+\trenamed from DOC.configure to cfg-paper.texi.\n \n Mon Dec 16 23:05:19 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \n \t* configure, config.subr, config.sub: config.subr is now\n-\t  config.sub again.\n+\tconfig.sub again.\n \n Fri Dec 13 01:17:06 1991  K. Richard Pixley  (rich at cygnus.com)\n \n \t* configure.texi: new file, in progress.\n \n \t* Makefile.in: build info file and install the man page for\n-\t  configure.\n+\tconfigure.\n \n \t* configure.man: new file, first cut.\n \n \t* configure: find config.subr again now that configuration \"none\"\n-\t  has gone.  removed all traces of the -ansi option.  removed all\n-\t  traces of the -languages option.\n+\thas gone.  removed all traces of the -ansi option.  removed all\n+\ttraces of the -languages option.\n \n \t* config.subr: resync from rms.\n \n Wed Dec 11 22:25:20 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \n \t* configure, config.sub, config.subr: merge config.sub into\n-\t  config.subr, call the result config.subr, remove config.sub, use\n-\t  config.subr.\n+\tconfig.subr, call the result config.subr, remove config.sub, use\n+\tconfig.subr.\n \n \t* Makefile.in: revised install for dir.info.\n \n@@ -21571,9 +21882,9 @@ Tue Dec 10 00:04:35 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \t* configure.in: add decstation host makefile frag.\n \n \t* Makefile.in: BISON now bison -y again.  also install-gcc on\n-\t  install.  clean-gdbm on clean.  infodir belongs in datadir.\n-\t  Make directories for info install.  Build dir.info here then\n-\t  install it.\n+\tinstall.  clean-gdbm on clean.  infodir belongs in datadir.\n+\tMake directories for info install.  Build dir.info here then\n+\tinstall it.\n \n Mon Dec  9 16:48:33 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \n@@ -21582,29 +21893,29 @@ Mon Dec  9 16:48:33 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n Sat Dec  7 00:17:01 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \n \t* configure: \\{1,2\\} appears to be a sysv'ism.  Use a different\n-\t  regexp.  -srcdir relative was being handled incorrectly.\n+\tregexp.  -srcdir relative was being handled incorrectly.\n \n \t* Makefile.in: unwrapped some for loops so that parallel makes\n-\t  work again and so one can focus one's attention on a particular\n-\t  package.\n+\twork again and so one can focus one's attention on a particular\n+\tpackage.\n \n Fri Dec  6 00:22:08 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \n \t* configure: added PWD as a stand in for `pwd` (for speed). use\n-\t  elif wherever possible.  make -srcdir work without -objdir.\n-\t  -objdir= commented out.\n+\telif wherever possible.  make -srcdir work without -objdir.\n+\t-objdir= commented out.\n \n Thu Dec  5 22:46:52 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n \n \t* configure: +options become --options.  -subdirs commented out.\n-\t  added -host, -datadir.  Renamed -destdir to -prefix.  Comment in\n-\t  Makefile now at top of generated Makefile.  Removed cvs log\n-\t  entries.  added -srcdir.  create .gdbinit only if there is one\n-\t  in ${srcdir}.\n+\tadded -host, -datadir.  Renamed -destdir to -prefix.  Comment in\n+\tMakefile now at top of generated Makefile.  Removed cvs log\n+\tentries.  added -srcdir.  create .gdbinit only if there is one\n+\tin ${srcdir}.\n \n \t* Makefile.in: idestdir and ddestdir go away.  Added copyrights\n-\t  and shift gpl to v2.  Added ChangeLog if it didn't exist. docdir\n-\t  and mandir now keyed off datadir by default.\n+\tand shift gpl to v2.  Added ChangeLog if it didn't exist. docdir\n+\tand mandir now keyed off datadir by default.\n \n Fri Nov 22 07:38:11 1991  K. Richard Pixley  (rich at rtl.cygnus.com)\n "}, {"sha": "89ed8cdb14854a96892d000c24538ae375ea66de", "filename": "MAINTAINERS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -165,6 +165,7 @@ D front end\t\tIain Buclaw\t\t<ibuclaw@gdcproject.org>\n go\t\t\tIan Lance Taylor\t<ian@airs.com>\n objective-c/c++\t\tMike Stump\t\t<mikestump@comcast.net>\n objective-c/c++\t\tIain Sandoe\t\t<iain@sandoe.co.uk>\n+Rust\t\t\tArthur Cohen\t\t<arthur.cohen@embecosm.com>\n \n \t\t\tVarious Maintainers\n "}, {"sha": "c67eb567783ac40a8504137acc007269eb2957c4", "filename": "Makefile.def", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -50,7 +50,7 @@ host_modules= { module= gcc; bootstrap=true;\n \t\textra_make_flags=\"$(EXTRA_GCC_FLAGS)\"; };\n host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t\t// Work around in-tree gmp configure bug with missing flex.\n-\t\textra_configure_flags='--disable-shared LEX=\"touch lex.yy.c\"';\n+\t\textra_configure_flags='--disable-shared LEX=\"touch lex.yy.c\" @host_libs_picflag@';\n \t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM\"';\n \t\tno_install= true;\n \t\t// none-*-* disables asm optimizations, bootstrap-testing\n@@ -60,18 +60,19 @@ host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t\t// different from host for target.\n \t        target=\"none-${host_vendor}-${host_os}\"; };\n host_modules= { module= mpfr; lib_path=src/.libs; bootstrap=true;\n-\t\textra_configure_flags='--disable-shared @extra_mpfr_configure_flags@';\n+\t\textra_configure_flags='--disable-shared @extra_mpfr_configure_flags@ @host_libs_picflag@';\n \t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM\"';\n \t\tno_install= true; };\n host_modules= { module= mpc; lib_path=src/.libs; bootstrap=true;\n-\t\textra_configure_flags='--disable-shared @extra_mpc_gmp_configure_flags@ @extra_mpc_mpfr_configure_flags@ --disable-maintainer-mode';\n+\t\textra_configure_flags='--disable-shared @extra_mpc_gmp_configure_flags@ @extra_mpc_mpfr_configure_flags@  @host_libs_picflag@ --disable-maintainer-mode';\n \t\tno_install= true; };\n host_modules= { module= isl; lib_path=.libs; bootstrap=true;\n-\t\textra_configure_flags='--disable-shared @extra_isl_gmp_configure_flags@';\n+\t\textra_configure_flags='--disable-shared @extra_isl_gmp_configure_flags@  @host_libs_picflag@';\n \t\textra_make_flags='V=1';\n \t\tno_install= true; };\n host_modules= { module= gold; bootstrap=true; };\n host_modules= { module= gprof; };\n+// intl acts on 'host_shared' directly, and does not support --with-pic.\n host_modules= { module= intl; bootstrap=true; };\n host_modules= { module= tcl;\n                 missing=mostlyclean; };\n@@ -107,7 +108,7 @@ host_modules= { module= libiberty-linker-plugin; bootstrap=true;\n // We abuse missing to avoid installing anything for libiconv.\n host_modules= { module= libiconv;\n \t\tbootstrap=true;\n-\t\textra_configure_flags='--disable-shared';\n+\t\textra_configure_flags='--disable-shared  @host_libs_picflag@';\n \t\tno_install= true;\n \t\tmissing= pdf;\n \t\tmissing= html;\n@@ -122,7 +123,7 @@ host_modules= { module= sim; };\n host_modules= { module= texinfo; no_install= true; };\n host_modules= { module= zlib; no_install=true; no_check=true;\n \t\tbootstrap=true;\n-\t        extra_configure_flags='@extra_host_zlib_configure_flags@';};\n+\t        extra_configure_flags='@extra_host_zlib_configure_flags@ @host_libs_picflag@';};\n host_modules= { module= gnulib; };\n host_modules= { module= gdbsupport; };\n host_modules= { module= gdbserver; };\n@@ -145,6 +146,7 @@ host_modules= { module= lto-plugin; bootstrap=true;\n host_modules= { module= libcc1; extra_configure_flags=--enable-shared; };\n host_modules= { module= gotools; };\n host_modules= { module= libctf; bootstrap=true; };\n+host_modules= { module= libsframe; bootstrap=true; };\n \n target_modules = { module= libstdc++-v3;\n \t\t   bootstrap=true;\n@@ -158,9 +160,6 @@ target_modules = { module= libvtv;\n \t\t   bootstrap=true;\n \t\t   lib_path=.libs;\n \t\t   raw_cxx=true; };\n-target_modules = { module= liboffloadmic;\n-\t\t   lib_path=.libs;\n-\t\t   extra_configure_flags='@extra_liboffloadmic_configure_flags@'; };\n target_modules = { module= libssp; lib_path=.libs; };\n target_modules = { module= newlib; };\n target_modules = { module= libgcc; bootstrap=true; no_check=true;\n@@ -473,6 +472,7 @@ dependencies = { module=all-binutils; on=all-intl; };\n dependencies = { module=all-binutils; on=all-gas; };\n dependencies = { module=all-binutils; on=all-libctf; };\n dependencies = { module=all-ld; on=all-libctf; };\n+dependencies = { module=all-binutils; on=all-libsframe; };\n \n // We put install-opcodes before install-binutils because the installed\n // binutils might be on PATH, and they might need the shared opcodes\n@@ -603,7 +603,6 @@ dependencies = { module=all-m4; on=all-build-texinfo; };\n // on libgcc and newlib/libgloss.\n lang_env_dependencies = { module=libitm; cxx=true; };\n lang_env_dependencies = { module=libffi; cxx=true; };\n-lang_env_dependencies = { module=liboffloadmic; cxx=true; };\n lang_env_dependencies = { module=newlib; no_c=true; };\n lang_env_dependencies = { module=libgloss; no_c=true; };\n lang_env_dependencies = { module=libgcc; no_gcc=true; no_c=true; };\n@@ -625,14 +624,12 @@ dependencies = { module=all-target-libphobos; on=all-target-libbacktrace; };\n dependencies = { module=all-target-libphobos; on=all-target-zlib; };\n dependencies = { module=all-target-libphobos; on=all-target-libatomic; };\n dependencies = { module=configure-target-libstdc++-v3; on=configure-target-libgomp; };\n-dependencies = { module=configure-target-liboffloadmic; on=configure-target-libgomp; };\n dependencies = { module=configure-target-libsanitizer; on=all-target-libstdc++-v3; };\n dependencies = { module=configure-target-libvtv; on=all-target-libstdc++-v3; };\n // parallel_list.o and parallel_settings.o depend on omp.h, which is\n // generated by the libgomp configure.  Unfortunately, due to the use of\n //  recursive make, we can't be that specific.\n dependencies = { module=all-target-libstdc++-v3; on=configure-target-libgomp; };\n-dependencies = { module=all-target-liboffloadmic; on=all-target-libgomp; };\n \n dependencies = { module=install-target-libgo; on=install-target-libatomic; };\n dependencies = { module=install-target-libgfortran; on=install-target-libquadmath; };\n@@ -642,8 +639,6 @@ dependencies = { module=install-target-libsanitizer; on=install-target-libstdc++\n dependencies = { module=install-target-libsanitizer; on=install-target-libgcc; };\n dependencies = { module=install-target-libvtv; on=install-target-libstdc++-v3; };\n dependencies = { module=install-target-libvtv; on=install-target-libgcc; };\n-dependencies = { module=install-target-liboffloadmic; on=install-target-libstdc++-v3; };\n-dependencies = { module=install-target-liboffloadmic; on=install-target-libgcc; };\n dependencies = { module=install-target-libitm; on=install-target-libgcc; };\n dependencies = { module=install-target-libobjc; on=install-target-libgcc; };\n dependencies = { module=install-target-libstdc++-v3; on=install-target-libgcc; };"}, {"sha": "fad49011e611a8db5fd64640f387e537e8ebdf70", "filename": "Makefile.in", "status": "modified", "additions": 1344, "deletions": 584, "changes": 1928, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "7c72ffb8383363132077a5ff50a525fa117a8cb2", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1,3 +1,35 @@\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tRevert:\n+\t2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.in: Rename PIEFLAG to PICFLAG.  Set LD_PICFLAG.  Use it.\n+\tUse pic/libiberty.a if PICFLAG is set.\n+\t* configure.ac (--enable-default-pie): Set PICFLAG instead of PIEFLAG.\n+\t(--enable-host-pie): New check.\n+\t* configure: Regenerate.\n+\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tRevert:\n+\t2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* configure.ac (--enable-host-bind-now): New check.\n+\t* configure: Regenerate.\n+\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* configure.ac (--enable-host-bind-now): New check.\n+\t* configure: Regenerate.\n+\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.in: Rename PIEFLAG to PICFLAG.  Set LD_PICFLAG.  Use it.\n+\tUse pic/libiberty.a if PICFLAG is set.\n+\t* configure.ac (--enable-default-pie): Set PICFLAG instead of PIEFLAG.\n+\t(--enable-host-pie): New check.\n+\t* configure: Regenerate.\n+\n 2022-03-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* server.cc (accept_from): Use \"1\" as the dummy port number."}, {"sha": "994fed8e74df0197b8638b3105aa04ae7d7c4699", "filename": "config/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1,3 +1,14 @@\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* acx.m4: Do not wrap REPORT_BUGS_TO.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* acx.m4: Do not wrap REPORT_BUGS_TO.\n+\n 2022-10-19  LIU Hao  <lh_mouse@126.com>\n \n \t* gthr.m4 (GCC_AC_THREAD_HEADER): Add new case for `mcf` thread"}, {"sha": "6815216cf49b8d505b9338871f9c8e3de215df58", "filename": "configure", "status": "modified", "additions": 14, "deletions": 65, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -685,6 +685,7 @@ get_gcc_base_ver\n extra_host_zlib_configure_flags\n extra_host_libiberty_configure_flags\n stage1_languages\n+host_libs_picflag\n host_shared\n extra_linker_plugin_flags\n extra_linker_plugin_configure_flags\n@@ -719,7 +720,6 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n-extra_liboffloadmic_configure_flags\n target_subdir\n host_subdir\n build_subdir\n@@ -805,7 +805,6 @@ enable_libquadmath_support\n enable_libada\n enable_libssp\n enable_libstdcxx\n-enable_liboffloadmic\n enable_bootstrap\n enable_pgo_build\n with_mpc\n@@ -1543,8 +1542,6 @@ Optional Features:\n   --enable-libada         build libada directory\n   --enable-libssp         build libssp directory\n   --disable-libstdcxx     do not build libstdc++-v3 directory\n-  --enable-liboffloadmic=ARG\n-                          build liboffloadmic [ARG={no,host,target}]\n   --enable-bootstrap      enable bootstrapping [yes if native build]\n   --enable-pgo-build[=lto]\n                           enable the PGO build\n@@ -2807,7 +2804,7 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf libsframe\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n@@ -2825,7 +2822,6 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libgloss \\\n \t\ttarget-newlib \\\n \t\ttarget-libgomp \\\n-\t\ttarget-liboffloadmic \\\n \t\ttarget-libatomic \\\n \t\ttarget-libitm \\\n \t\ttarget-libstdc++-v3 \\\n@@ -3199,44 +3195,6 @@ if test \"${ENABLE_LIBSTDCXX}\" = \"no\" ; then\n   noconfigdirs=\"$noconfigdirs target-libstdc++-v3\"\n fi\n \n-# If this is accelerator compiler and its target is intelmic we enable\n-# target liboffloadmic by default.  If this is compiler with offloading\n-# for intelmic we enable host liboffloadmic by default.  Otherwise\n-# liboffloadmic is disabled by default.\n-# Check whether --enable-liboffloadmic was given.\n-if test \"${enable_liboffloadmic+set}\" = set; then :\n-  enableval=$enable_liboffloadmic; case \"$enableval\" in\n-  no | host | target)\n-    enable_liboffloadmic=$enableval ;;\n-  *)\n-    as_fn_error $? \"--enable-liboffloadmic=no/host/target\" \"$LINENO\" 5 ;;\n-esac\n-else\n-  if test x\"$enable_as_accelerator_for\" != x; then\n-  case \"${target}\" in\n-    *-intelmic-* | *-intelmicemul-*)\n-      enable_liboffloadmic=target\n-      extra_liboffloadmic_configure_flags=\"--enable-liboffloadmic=target\"\n-      ;;\n-    *)\n-      enable_liboffloadmic=no\n-      ;;\n-  esac\n-else\n-  case \"${enable_offload_targets}\" in\n-    *-intelmic-* | *-intelmicemul-*)\n-      enable_liboffloadmic=host\n-      extra_liboffloadmic_configure_flags=\"--enable-liboffloadmic=host\"\n-      ;;\n-    *)\n-      enable_liboffloadmic=no\n-      ;;\n-    esac\n-fi\n-fi\n-\n-\n-\n # Enable libgomp by default on hosted POSIX systems, and a few others.\n if test x$enable_libgomp = x ; then\n     case \"${target}\" in\n@@ -3275,25 +3233,6 @@ $as_echo \"yes\" >&6; }\n     fi\n fi\n \n-# Disable liboffloadmic on unsupported systems.\n-if test -d ${srcdir}/liboffloadmic; then\n-    if test x$enable_liboffloadmic != xno; then\n-\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for liboffloadmic support\" >&5\n-$as_echo_n \"checking for liboffloadmic support... \" >&6; }\n-\tif (srcdir=${srcdir}/liboffloadmic; \\\n-\t\t. ${srcdir}/configure.tgt; \\\n-\t\ttest -n \"$UNSUPPORTED\")\n-\tthen\n-\t    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-\t    noconfigdirs=\"$noconfigdirs target-liboffloadmic\"\n-\telse\n-\t    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-\tfi\n-    fi\n-fi\n-\n # Disable libitm on unsupported systems.\n if test -d ${srcdir}/libitm; then\n     if test x$enable_libitm = x; then\n@@ -8658,6 +8597,16 @@ fi\n \n \n \n+\n+# If we are building PIC/PIE host executables, and we are building dependent\n+# libs (e.g. GMP) in-tree those libs need to be configured to generate PIC\n+# code.\n+host_libs_picflag=\n+if test \"$host_shared\" = \"yes\";then\n+host_libs_picflag='--with-pic'\n+fi\n+\n+\n # By default, C and C++ are the only stage 1 languages.\n stage1_languages=,c,\n \n@@ -9083,7 +9032,7 @@ $as_echo \"using paths configured with --with-target-bdw-gc options\" >&6; }\n   fi\n esac\n \n-# Disable libitm, libsanitizer, libvtv, liboffloadmic if we're not building C++\n+# Disable libitm, libsanitizer, libvtv if we're not building C++\n case ,${enable_languages}, in\n   *,c++,*)\n     # Disable libitm, libsanitizer if we're not building libstdc++\n@@ -9095,7 +9044,7 @@ case ,${enable_languages}, in\n     esac\n     ;;\n   *)\n-    noconfigdirs=\"$noconfigdirs target-liboffloadmic target-libitm target-libsanitizer target-libvtv\"\n+    noconfigdirs=\"$noconfigdirs target-libitm target-libsanitizer target-libvtv\"\n     ;;\n esac\n "}, {"sha": "83bbc4cd04d40247bd3b8e03ba5acc9e4df039b0", "filename": "configure.ac", "status": "modified", "additions": 13, "deletions": 56, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -132,7 +132,7 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf libsframe\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n@@ -150,7 +150,6 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libgloss \\\n \t\ttarget-newlib \\\n \t\ttarget-libgomp \\\n-\t\ttarget-liboffloadmic \\\n \t\ttarget-libatomic \\\n \t\ttarget-libitm \\\n \t\ttarget-libstdc++-v3 \\\n@@ -479,42 +478,6 @@ ENABLE_LIBSTDCXX=default)\n   noconfigdirs=\"$noconfigdirs target-libstdc++-v3\"\n fi]\n \n-# If this is accelerator compiler and its target is intelmic we enable\n-# target liboffloadmic by default.  If this is compiler with offloading\n-# for intelmic we enable host liboffloadmic by default.  Otherwise\n-# liboffloadmic is disabled by default.\n-AC_ARG_ENABLE([liboffloadmic],\n-AC_HELP_STRING([[--enable-liboffloadmic[=ARG]]],\n-\t       [build liboffloadmic @<:@ARG={no,host,target}@:>@]),\n-[case \"$enableval\" in\n-  no | host | target)\n-    enable_liboffloadmic=$enableval ;;\n-  *)\n-    AC_MSG_ERROR([--enable-liboffloadmic=no/host/target]) ;;\n-esac],\n-[if test x\"$enable_as_accelerator_for\" != x; then\n-  case \"${target}\" in\n-    *-intelmic-* | *-intelmicemul-*)\n-      enable_liboffloadmic=target\n-      extra_liboffloadmic_configure_flags=\"--enable-liboffloadmic=target\"\n-      ;;\n-    *)\n-      enable_liboffloadmic=no\n-      ;;\n-  esac\n-else\n-  case \"${enable_offload_targets}\" in\n-    *-intelmic-* | *-intelmicemul-*)\n-      enable_liboffloadmic=host\n-      extra_liboffloadmic_configure_flags=\"--enable-liboffloadmic=host\"\n-      ;;\n-    *)\n-      enable_liboffloadmic=no\n-      ;;\n-    esac\n-fi])\n-AC_SUBST(extra_liboffloadmic_configure_flags)\n-\n # Enable libgomp by default on hosted POSIX systems, and a few others.\n if test x$enable_libgomp = x ; then\n     case \"${target}\" in\n@@ -550,22 +513,6 @@ if test -d ${srcdir}/libatomic; then\n     fi\n fi\n \n-# Disable liboffloadmic on unsupported systems.\n-if test -d ${srcdir}/liboffloadmic; then\n-    if test x$enable_liboffloadmic != xno; then\n-\tAC_MSG_CHECKING([for liboffloadmic support])\n-\tif (srcdir=${srcdir}/liboffloadmic; \\\n-\t\t. ${srcdir}/configure.tgt; \\\n-\t\ttest -n \"$UNSUPPORTED\")\n-\tthen\n-\t    AC_MSG_RESULT([no])\n-\t    noconfigdirs=\"$noconfigdirs target-liboffloadmic\"\n-\telse\n-\t    AC_MSG_RESULT([yes])\n-\tfi\n-    fi\n-fi\n-\n # Disable libitm on unsupported systems.\n if test -d ${srcdir}/libitm; then\n     if test x$enable_libitm = x; then\n@@ -1921,8 +1868,18 @@ AC_ARG_ENABLE(host-shared,\n   x86_64-*-darwin* | aarch64-*-darwin*) host_shared=yes ;;\n   *) host_shared=no ;;\n  esac])\n+\n AC_SUBST(host_shared)\n \n+# If we are building PIC/PIE host executables, and we are building dependent\n+# libs (e.g. GMP) in-tree those libs need to be configured to generate PIC\n+# code.\n+host_libs_picflag=\n+if test \"$host_shared\" = \"yes\";then\n+host_libs_picflag='--with-pic'\n+fi\n+AC_SUBST(host_libs_picflag)\n+\n # By default, C and C++ are the only stage 1 languages.\n stage1_languages=,c,\n \n@@ -2334,7 +2291,7 @@ case ,${enable_languages},:${enable_objc_gc} in *,objc,*:yes|*,objc,*:auto)\n   fi\n esac\n \n-# Disable libitm, libsanitizer, libvtv, liboffloadmic if we're not building C++\n+# Disable libitm, libsanitizer, libvtv if we're not building C++\n case ,${enable_languages}, in\n   *,c++,*)\n     # Disable libitm, libsanitizer if we're not building libstdc++\n@@ -2346,7 +2303,7 @@ case ,${enable_languages}, in\n     esac\n     ;;\n   *)\n-    noconfigdirs=\"$noconfigdirs target-liboffloadmic target-libitm target-libsanitizer target-libvtv\"\n+    noconfigdirs=\"$noconfigdirs target-libitm target-libsanitizer target-libvtv\"\n     ;;\n esac\n "}, {"sha": "d1e87d6fccb25e3fafd6de778f4371fc5ea11e27", "filename": "contrib/ChangeLog", "status": "modified", "additions": 99, "deletions": 7, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1,3 +1,95 @@\n+2022-12-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Do not search PR entry in a file that is binary.\n+\n+2022-12-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* check_GNU_style.py: Use newline=\\n.\n+\t* check_GNU_style_lib.py: Simplify.\n+\t* gcc-changelog/git_commit.py: Fix issues seen\n+\tRust patchset.\n+\t* gcc-changelog/git_email.py: Use newline argument.\n+\t* gcc-changelog/test_email.py: New test.\n+\t* gcc-changelog/test_patches.txt: New test.\n+\t* mklog.py: Use newline argument.\n+\n+2022-12-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gcc-changelog/git_commit.py (default_changelog_locations): Add\n+\t'gcc/rust'.\n+\t(bug_components): Add 'rust'.\n+\n+2022-12-10  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gcc-changelog/git_commit.py (default_changelog_locations):\n+\tNew entry for gcc/m2.  New entry for libgm2.\n+\n+2022-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.doxy (INPUT): Add gcc/analyzer subdirectory.\n+\n+2022-11-25  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Temporarily disable\n+\tcheck_line.start.\n+\n+2022-11-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Temporarily disable\n+\tcheck_line.start.\n+\n+2022-11-21  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Temporarily disable\n+\tcheck_line.start.\n+\n+2022-11-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Temporarily disable\n+\tcheck_line.start.\n+\n+2022-11-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-changelog/git_update_version.py: Add\n+\t1957bedf29a1b2cc231972aba680fe80199d5498 to ignored commits.\n+\n+2022-11-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Revert temporary rule\n+\trelaxation.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Temporarily disable\n+\tcheck_line.start.\n+\n+2022-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Check for a space after leading\n+\ttab.\n+\t* gcc-changelog/test_email.py: Likewise.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n+2022-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-changelog/git_update_version.py: Add\n+\te4cba49413ca429dc82f6aa2e88129ecb3fdd943 to ignored commits.\n+\n+2022-11-04  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gcc-changelog/git_commit.py (default_changelog_locations):\n+\tRemove 'liboffloadmic'.\n+\t* gcc_update (files_and_dependencies): Remove 'liboffloadmic'\n+\tfiles.\n+\t* update-copyright.py (GCCCmdLine): Remove 'liboffloadmic'\n+\tcomment.\n+\n 2022-10-20  Jonathan Wakely   <jwakely@redhat.com>\n \t    Ulrich Drepper  <drepper@redhat.com>\n \n@@ -19,7 +111,7 @@\n 2022-09-20  Martin Liska  <mliska@suse.cz>\n \n \t* filter-clang-warnings.py: Skip egrep: warning: egrep is\n-\t  obsolescent; using grep -E.\n+\tobsolescent; using grep -E.\n \n 2022-08-31  Martin Liska  <mliska@suse.cz>\n \n@@ -133,7 +225,7 @@\n \t    Lulu Cheng  <chenglulu@loongson.cn>\n \n \t* gcc_update (files_and_dependencies): Add\n-\t  config/loongarch/loongarch.opt and config/loongarch/loongarch-str.h.\n+\tconfig/loongarch/loongarch.opt and config/loongarch/loongarch-str.h.\n \n 2022-03-28  Martin Liska  <mliska@suse.cz>\n \n@@ -370,7 +462,7 @@\n 2021-08-03  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_update_version.py: Ignore problematic\n-\t  commit.\n+\tcommit.\n \n 2021-07-20  Richard Earnshaw  <rearnsha@arm.com>\n \n@@ -1823,7 +1915,7 @@\n 2016-09-20  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* compare_tests: Take ERROR messages into account when\n-\t  comparing.\n+\tcomparing.\n \n 2016-08-17  Martin Liska  <mliska@suse.cz>\n \n@@ -3918,13 +4010,13 @@ Tue Jun 12 12:21:40 CEST 2001  Jan Hubicka  <jh@suse.cz>\n 2000-11-19  Zack Weinberg  <zackw@stanford.edu>\n \n \t* texi2pod.pl:\n-\t  - Add real command line parsing.\n+\t- Add real command line parsing.\n \t  - Support @ifset, @ifclear, @set, @value, -D switch.\n \t  - Support @sc.  Improve handling of @ref and friends.\n \t  - Discard @subsection, @need, @node lines.\n-\t  - Un-nest font changes to match texinfo semantics.\n+\t- Un-nest font changes to match texinfo semantics.\n \t  - Handle @{ and @}.  Oops.\n-\t  - Don't emit E<> directives inside verbatim blocks.\n+\t- Don't emit E<> directives inside verbatim blocks.\n \n 2000-11-12  Bruce Korb  <bkorb@gnu.org>\n "}, {"sha": "969534a3cc9b46f1719b59cd385910a00d8691b3", "filename": "contrib/check_GNU_style.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fcheck_GNU_style.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fcheck_GNU_style.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -35,9 +35,9 @@ def main():\n     format = args.format\n \n     if filename == '-':\n-        check_GNU_style_file(sys.stdin, None, format)\n+        check_GNU_style_file(sys.stdin, format)\n     else:\n-        with open(filename, 'rb') as diff_file:\n-            check_GNU_style_file(diff_file, 'utf-8', format)\n+        with open(filename, newline='\\n') as diff_file:\n+            check_GNU_style_file(diff_file, format)\n \n main()"}, {"sha": "b3db4fbddc94c4907ca86ae9ab0cd9f00822daca", "filename": "contrib/check_GNU_style_lib.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fcheck_GNU_style_lib.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fcheck_GNU_style_lib.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style_lib.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -262,7 +262,7 @@ def test_trailing_whitespace_check_basic(self):\n         r = self.check.check('foo', 123, '\\t  a = 123;')\n         self.assertIsNone(r)\n \n-def check_GNU_style_file(file, file_encoding, format):\n+def check_GNU_style_file(file, format):\n     checks = [LineLengthCheck(), SpacesCheck(), TrailingWhitespaceCheck(),\n         SentenceSeparatorCheck(), SentenceEndOfCommentCheck(),\n         SentenceDotEndCheck(), FunctionParenthesisCheck(),\n@@ -271,7 +271,7 @@ def check_GNU_style_file(file, file_encoding, format):\n         SpacesAndTabsMixedCheck()]\n     errors = []\n \n-    patch = PatchSet(file, encoding=file_encoding)\n+    patch = PatchSet(file)\n \n     for pfile in patch.added_files + patch.modified_files:\n         t = pfile.target_file.lstrip('b/')"}, {"sha": "d90e6c19b76cc1f43959c69fe87b005755126164", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -41,9 +41,11 @@\n     'gcc/go',\n     'gcc/jit',\n     'gcc/lto',\n+    'gcc/m2',\n     'gcc/objc',\n     'gcc/objcp',\n     'gcc/po',\n+    'gcc/rust',\n     'gcc/testsuite',\n     'gnattools',\n     'gotools',\n@@ -62,12 +64,12 @@\n     'libgcc/config/avr/libf7',\n     'libgcc/config/libbid',\n     'libgfortran',\n+    'libgm2',\n     'libgomp',\n     'libhsail-rt',\n     'libiberty',\n     'libitm',\n     'libobjc',\n-    'liboffloadmic',\n     'libphobos',\n     'libquadmath',\n     'libsanitizer',\n@@ -121,6 +123,7 @@\n     'preprocessor',\n     'regression',\n     'rtl-optimization',\n+    'rust',\n     'sanitizer',\n     'spam',\n     'target',\n@@ -366,6 +369,7 @@ def __init__(self, info, commit_to_info_hook=None, ref_name=None):\n             self.check_for_broken_parentheses()\n             self.deduce_changelog_locations()\n             self.check_file_patterns()\n+            self.check_line_start()\n             if not self.errors:\n                 self.check_mentioned_files()\n                 self.check_for_correct_changelog()\n@@ -614,6 +618,13 @@ def check_for_broken_parentheses(self):\n                 msg = 'bad parentheses wrapping'\n                 self.errors.append(Error(msg, entry.parentheses_stack[-1]))\n \n+    def check_line_start(self):\n+        for entry in self.changelog_entries:\n+            for line in entry.lines:\n+                if line.startswith('\\t '):\n+                    msg = 'extra space after tab'\n+                    self.errors.append(Error(msg, line))\n+\n     def get_file_changelog_location(self, changelog_file):\n         for file in self.info.modified_files:\n             if file[0] == changelog_file:\n@@ -707,11 +718,12 @@ def check_mentioned_files(self):\n                         if not prs:\n                             # if all ChangeLog entries have identical PRs\n                             # then use them\n-                            prs = self.changelog_entries[0].prs\n-                            for entry in self.changelog_entries:\n-                                if entry.prs != prs:\n-                                    prs = []\n-                                    break\n+                            if self.changelog_entries:\n+                                prs = self.changelog_entries[0].prs\n+                                for entry in self.changelog_entries:\n+                                    if entry.prs != prs:\n+                                        prs = []\n+                                        break\n                         entry = ChangeLogEntry(changelog_location,\n                                                self.top_level_authors,\n                                                prs)"}, {"sha": "2566d4149e7d099b92213f8efbbafd0026c5316c", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -37,7 +37,7 @@\n class GitEmail(GitCommit):\n     def __init__(self, filename):\n         self.filename = filename\n-        diff = PatchSet.from_filename(filename)\n+        diff = PatchSet.from_filename(filename, newline='\\n')\n         date = None\n         author = None\n         subject = ''"}, {"sha": "97dd4796f13f443c58a235d8d19745f75535632e", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -33,7 +33,9 @@\n         '04a040d907a83af54e0a98bdba5bfabc0ef4f700',\n         '2e96b5f14e4025691b57d2301d71aa6092ed44bc',\n         '3ab5c8cd03d92bf4ec41e351820349d92fbc40c4',\n-        '86d8e0c0652ef5236a460b75c25e4f7093cc0651')\n+        '86d8e0c0652ef5236a460b75c25e4f7093cc0651',\n+        'e4cba49413ca429dc82f6aa2e88129ecb3fdd943',\n+        '1957bedf29a1b2cc231972aba680fe80199d5498')\n \n FORMAT = '%(asctime)s:%(levelname)s:%(name)s:%(message)s'\n logging.basicConfig(level=logging.INFO, format=FORMAT,"}, {"sha": "b9d0cb4157cf2017b1cfd74099e1dc3744764e9e", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -44,7 +44,7 @@ def setUp(self):\n \n         filename = None\n         patch_lines = []\n-        with open(os.path.join(script_path, 'test_patches.txt')) as f:\n+        with open(os.path.join(script_path, 'test_patches.txt'), newline='\\n') as f:\n             lines = f.read()\n         for line in lines.split('\\n'):\n             if line.startswith('==='):\n@@ -451,3 +451,11 @@ def test_new_file_in_root_folder(self):\n         email = self.from_patch_glob('toplev-new-file.patch')\n         assert (email.errors[0].message ==\n                 'new file in the top-level folder not mentioned in a ChangeLog')\n+\n+    def test_space_after_tab(self):\n+        email = self.from_patch_glob('0001-Use-Value_Range-when-applying-inferred-ranges.patch')\n+        assert (email.errors[0].message == 'extra space after tab')\n+\n+    def test_CR_in_patch(self):\n+        email = self.from_patch_glob('0001-Add-M-character.patch')\n+        assert (email.errors[0].message == 'cannot find a ChangeLog location in message')"}, {"sha": "c378c32423a7bdec264d5c746fe8590590732f57", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -3571,3 +3571,68 @@ index 00000000000..d6459e00543\n +xxx\n -- \n 2.34.1\n+\n+=== 0001-Use-Value_Range-when-applying-inferred-ranges.patch ===\n+From 69a233610f6b27cd4283561569d8ce0f35044dc4 Mon Sep 17 00:00:00 2001\n+From: Andrew MacLeod <amacleod@redhat.com>\n+Date: Wed, 19 Oct 2022 09:21:22 -0400\n+Subject: [PATCH] Use Value_Range when applying inferred ranges.\n+\n+Applying an inferred range is using int_range_ma as the\n+temporary rather than the general purpose Value_Range.  This causes it\n+to trap if we have a non-integral inferred range.\n+\n+\t* gimple-range-cache.cc (ranger_cache::range_from_dom): Use\n+\t  Value_Range not int_range_max.\n+---\n+ gcc/gimple-range-cache.cc | 2 +-\n+ 1 file changed, 1 insertion(+), 1 deletion(-)\n+\n+diff --git a/gcc/gimple-range-cache.cc b/gcc/gimple-range-cache.cc\n+index 0b9aa3639c5..f279371948a 100644\n+--- a/gcc/gimple-range-cache.cc\n++++ b/gcc/gimple-range-cache.cc\n+@@ -1546,7 +1546,6 @@ ranger_cache::range_from_dom (vrange &r, tree name, basic_block start_bb,\n+ void\n+ ranger_cache::apply_inferred_ranges (gimple *s)\n+ {\n+-  int_range_max r;\n+   bool update = true;\n+ \n+   basic_block bb = gimple_bb (s);\n+@@ -1572,6 +1571,7 @@ ranger_cache::apply_inferred_ranges (gimple *s)\n+       m_exit.add_range (name, bb, infer.range (x));\n+       if (update)\n+ \t{\n++\t  Value_Range r (TREE_TYPE (name));\n+ \t  if (!m_on_entry.get_bb_range (r, name, bb))\n+ \t    exit_range (r, name, bb, RFD_READ_ONLY);\n+ \t  if (r.intersect (infer.range (x)))\n+-- \n+2.38.0\n+\n+=== 0001-Add-M-character.patch ====\n+From 71ab4c18f279dc0fa0172ffe8cfac5fabcde953d Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Fri, 9 Dec 2022 11:55:21 +0100\n+Subject: [PATCH] Add ^M character\n+\n+---\n+ demo.txt | 5 +++++\n+ 1 file changed, 5 insertions(+)\n+ create mode 100644 demo.txt\n+\n+diff --git a/demo.txt b/demo.txt\n+new file mode 100644\n+index 0000000..d75da75\n+--- /dev/null\n++++ b/demo.txt\n+@@ -0,0 +1,5 @@\n++pub fn main ()\n++{\n++// { dg-error \"Isolated CR\" \"\" { target *-*-* } .+1 }\n++  //! doc cr\r comment\n++}\n+-- \n+2.38.1\n+"}, {"sha": "9e0a1af0e20c7533de6f3a697505ba0df1134115", "filename": "contrib/gcc.doxy", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc.doxy", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc.doxy", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc.doxy?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -478,7 +478,7 @@ WARN_LOGFILE           =\n # directories like \"/usr/src/myproject\". Separate the files or directories \n # with spaces.\n \n-INPUT                  = gcc\n+INPUT                  = gcc gcc/analyzer\n \n # This tag can be used to specify the character encoding of the source files that \n # doxygen parses. Internally doxygen uses the UTF-8 encoding, which is also the default "}, {"sha": "c5630df6c4cee84173c815c55e2963c0cb5657f7", "filename": "contrib/gcc_update", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -162,12 +162,6 @@ libsanitizer/sanitizer_common/Makefile.in: libsanitizer/sanitizer_common/Makefil\n libvtv/aclocal.m4: libvtv/configure.ac libvtv/acinclude.m4\n libvtv/Makefile.in: libvtv/Makefile.am libvtv/aclocal.m4\n libvtv/configure: libvtv/configure.ac libvtv/aclocal.m4\n-liboffloadmic/aclocal.m4: liboffloadmic/configure.ac\n-liboffloadmic/Makefile.in: liboffloadmic/Makefile.am\n-liboffloadmic/configure: liboffloadmic/configure.ac\n-liboffloadmic/plugin/aclocal.m4: liboffloadmic/plugin/configure.ac\n-liboffloadmic/plugin/Makefile.in: liboffloadmic/plugin/Makefile.am\n-liboffloadmic/plugin/configure: liboffloadmic/plugin/configure.ac\n libbacktrace/aclocal.m4: libbacktrace/configure.ac\n libbacktrace/Makefile.in: libbacktrace/Makefile.am libbacktrace/aclocal.m4\n libbacktrace/configure: libbacktrace/configure.ac libbacktrace/aclocal.m4"}, {"sha": "358b7fc6b8b14b42f43187cd481812eb176cca5f", "filename": "contrib/mklog.py", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -186,23 +186,25 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n             # contains commented code which a note that it\n             # has not been tested due to a certain PR or DR.\n             this_file_prs = []\n-            for line in list(file)[0][0:10]:\n-                m = pr_regex.search(line.value)\n-                if m:\n-                    pr = m.group('pr')\n-                    if pr not in prs:\n-                        prs.append(pr)\n-                        this_file_prs.append(pr.split('/')[-1])\n-                else:\n-                    m = dr_regex.search(line.value)\n+            if not file.is_binary_file:\n+                for line in list(file)[0][0:10]:\n+                    m = pr_regex.search(line.value)\n                     if m:\n-                        dr = m.group('dr')\n-                        if dr not in prs:\n-                            prs.append(dr)\n-                            this_file_prs.append(dr.split('/')[-1])\n-                    elif dg_regex.search(line.value):\n-                        # Found dg-warning/dg-error line\n-                        break\n+                        pr = m.group('pr')\n+                        if pr not in prs:\n+                            prs.append(pr)\n+                            this_file_prs.append(pr.split('/')[-1])\n+                    else:\n+                        m = dr_regex.search(line.value)\n+                        if m:\n+                            dr = m.group('dr')\n+                            if dr not in prs:\n+                                prs.append(dr)\n+                                this_file_prs.append(dr.split('/')[-1])\n+                        elif dg_regex.search(line.value):\n+                            # Found dg-warning/dg-error line\n+                            break\n+\n             # PR number in the file name\n             fname = os.path.basename(file.path)\n             m = pr_filename_regex.search(fname)\n@@ -361,7 +363,7 @@ def skip_line_in_changelog(line):\n     if args.directory:\n         root = args.directory\n \n-    data = open(args.input) if args.input else sys.stdin\n+    data = open(args.input, newline='\\n') if args.input else sys.stdin\n     if args.update_copyright:\n         update_copyright(data)\n     else:"}, {"sha": "76614ffc4ea4e0ae062cd3366aaf27eb8767f3ba", "filename": "contrib/update-copyright.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/contrib%2Fupdate-copyright.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/contrib%2Fupdate-copyright.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fupdate-copyright.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -760,7 +760,6 @@ def __init__ (self):\n         self.add_dir ('libiberty')\n         self.add_dir ('libitm')\n         self.add_dir ('libobjc')\n-        # liboffloadmic is imported from upstream.\n         self.add_dir ('libphobos', LibPhobosFilter())\n         self.add_dir ('libquadmath')\n         # libsanitizer is imported from upstream."}, {"sha": "7eec21ffed5c50e2436f20cbb46b60b9138e4370", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1,3 +1,20 @@\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tRevert:\n+\t2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.in: Set and use PICFLAG and LD_PICFLAG.  Use the \"pic\"\n+\tbuild of libiberty if PICFLAG is set.\n+\t* configure.ac:\n+\t* configure: Regenerate.\n+\n+2022-11-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.in: Set and use PICFLAG and LD_PICFLAG.  Use the \"pic\"\n+\tbuild of libiberty if PICFLAG is set.\n+\t* configure.ac:\n+\t* configure: Regenerate.\n+\n 2022-10-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/107059\n@@ -103,8 +120,8 @@\n \tPR other/21823\n \tPR bootstrap/80047\n \t* fixincl.c (process): Simplify the handling for highly\n-\t  unlikely access() failure, to avoid using non-standard\n-\t  extensions.\n+\tunlikely access() failure, to avoid using non-standard\n+\textensions.\n \n 2021-08-30  John David Anglin  <danglin@gcc.gnu.org>\n \n@@ -122,8 +139,8 @@\n \n \tPR other/91085\n \t* fixfixes.c (check_has_inc): New static function.\n-\t  (machine_name_fix): Don't replace header names in\n-\t  __has_include(...).\n+\t(machine_name_fix): Don't replace header names in\n+\t__has_include(...).\n \t* inclhack.def (machine_name): Adjust test.\n \t* tests/base/testing.h: Update.\n "}, {"sha": "547b067ef3dcf6dc4a3a0ef9d5bbf55aefab6746", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8409, "deletions": 49, "changes": 8458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "349ad3e1070d748bed879dfbf788f34a14118170", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1 +1 @@\n-20221101\n+20221213"}, {"sha": "69af6e961344e645f008c5f54502f086e8261273", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -272,6 +272,7 @@ COMPILER += $(CET_HOST_FLAGS)\n \n NO_PIE_CFLAGS = @NO_PIE_CFLAGS@\n NO_PIE_FLAG = @NO_PIE_FLAG@\n+DO_LINK_MUTEX = @DO_LINK_MUTEX@\n \n # We don't want to compile the compilers with -fPIE, it make PCH fail.\n COMPILER += $(NO_PIE_CFLAGS)\n@@ -1257,28 +1258,35 @@ C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n ANALYZER_OBJS = \\\n \tanalyzer/analysis-plan.o \\\n \tanalyzer/analyzer.o \\\n+\tanalyzer/analyzer-language.o \\\n \tanalyzer/analyzer-logging.o \\\n \tanalyzer/analyzer-pass.o \\\n \tanalyzer/analyzer-selftests.o \\\n \tanalyzer/bar-chart.o \\\n+\tanalyzer/bounds-checking.o \\\n+\tanalyzer/call-details.o \\\n \tanalyzer/call-info.o \\\n \tanalyzer/call-string.o \\\n \tanalyzer/call-summary.o \\\n+\tanalyzer/checker-event.o \\\n \tanalyzer/checker-path.o \\\n \tanalyzer/complexity.o \\\n \tanalyzer/constraint-manager.o \\\n \tanalyzer/diagnostic-manager.o \\\n \tanalyzer/engine.o \\\n \tanalyzer/feasible-graph.o \\\n \tanalyzer/function-set.o \\\n+\tanalyzer/infinite-recursion.o \\\n+\tanalyzer/kf.o \\\n+\tanalyzer/kf-analyzer.o \\\n+\tanalyzer/kf-lang-cp.o \\\n \tanalyzer/known-function-manager.o \\\n \tanalyzer/pending-diagnostic.o \\\n \tanalyzer/program-point.o \\\n \tanalyzer/program-state.o \\\n \tanalyzer/region.o \\\n \tanalyzer/region-model.o \\\n \tanalyzer/region-model-asm.o \\\n-\tanalyzer/region-model-impl-calls.o \\\n \tanalyzer/region-model-manager.o \\\n \tanalyzer/region-model-reachability.o \\\n \tanalyzer/sm.o \\\n@@ -1721,7 +1729,6 @@ OBJS = \\\n \tvalue-pointer-equiv.o \\\n \tvalue-query.o \\\n \tvalue-range.o \\\n-\tvalue-range-equiv.o \\\n \tvalue-range-pretty-print.o \\\n \tvalue-range-storage.o \\\n \tvalue-relation.o \\\n@@ -2771,6 +2778,7 @@ GTFILES = $(CPPLIB_H) $(srcdir)/input.h $(srcdir)/coretypes.h \\\n   $(srcdir)/internal-fn.h \\\n   $(srcdir)/calls.cc \\\n   $(srcdir)/omp-general.h \\\n+  $(srcdir)/analyzer/analyzer-language.cc \\\n   @all_gtfiles@\n \n # Compute the list of GT header files from the corresponding C sources,"}, {"sha": "7ecefd88ba49db8fdb0e67fcfff72874e33918fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1378, "deletions": 1, "changes": 1379, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1,3 +1,1380 @@\n+2022-12-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* contracts.adb (Add_Contract_Item): Allow No_Caching on types.\n+\t(Check_Type_Or_Object_External_Properties): Check No_Caching.\n+\tCheck that non-effectively volatile types does not contain an\n+\teffectively volatile component (instead of just a volatile\n+\tcomponent).\n+\t(Analyze_Object_Contract): Remove shared checking of No_Caching.\n+\t* sem_prag.adb (Analyze_External_Property_In_Decl_Part): Adapt checking\n+\tof No_Caching for types.\n+\t(Analyze_Pragma): Allow No_Caching on types.\n+\t* sem_util.adb (Has_Effectively_Volatile_Component): New query function.\n+\t(Is_Effectively_Volatile): Type with Volatile and No_Caching is not\n+\teffectively volatile.\n+\t(No_Caching_Enabled): Remove assertion to apply to all entities.\n+\t* sem_util.ads: Same.\n+\n+2022-12-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch6.adb\n+\t(Build_Static_Check_Helper_Call): Perform implicit type conversion\n+\tto ensure matching types and avoid reporting spurious errors.\n+\n+2022-12-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Constant_Valid_Condition): Bail out for a\n+\tmembership test with a mark for a subtype that is predicated.\n+\n+2022-12-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_elab.adb (Processing_In_State): Add Within_Freezing_Actions\n+\tcomponent.\n+\t(Process_Conditional_ABE_Call): Compute its value.\n+\t(Process_Conditional_ABE_Call_SPARK): For a call and a target in\n+\tthe main unit, do not emit any ABE diagnostics if the call occurs\n+\tin a freezing actions context.\n+\n+2022-12-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* einfo.ads (Actual_Subtype): Document additional usage.\n+\t* exp_aggr.adb (Expand_Array_Aggregate): Replace test on\n+\tIs_Build_In_Place_Return_Object with Is_Special_Return_Object.\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Factor out parts of the\n+\tprocessing done for build-in-place return objects and reuse them to\n+\timplement a similar processing for specific return objects.\n+\t* exp_ch4.adb (Expand_Allocator_Expression): Do not generate a tag\n+\tassignment or an adjustment if the allocator was made for a special\n+\treturn object.\n+\t(Expand_Concatenate): If the result is allocated on the secondary\n+\tstack, use an unconstrained allocation.\n+\t* exp_ch6.ads (Apply_CW_Accessibility_Check): New declaration.\n+\t(Is_By_Reference_Return_Object): Likewise.\n+\t(Is_Secondary_Stack_Return_Object): Likewise.\n+\t(Is_Special_Return_Object): Likewise.\n+\t* exp_ch6.adb (Expand_Ctrl_Function_Call): Do not bail out for the\n+\texpression in the declaration of a special return object.\n+\t(Expand_N_Extended_Return_Statement): Add missing guard and move\n+\tthe class-wide accessibility check to Expand_N_Object_Declaration.\n+\t(Expand_Simple_Function_Return): Delete obsolete commentary.\n+\tSkip the special processing for types that require finalization or\n+\tare returned on the secondary stack if the return originally comes\n+\tfrom an extended return statement.  Add missing Constant_Present.\n+\t(Is_By_Reference_Return_Object): New predicate.\n+\t(Is_Secondary_Stack_Return_Object): Likewise.\n+\t(Is_Special_Return_Object): Likewise.\n+\t* exp_util.adb (Is_Related_To_Func_Return): Also return true if the\n+\tparent of the expression is the renaming declaration generated for\n+\tthe expansion of a return object.\n+\t* gen_il-fields.ads (Opt_Field_Enum): Replace Alloc_For_BIP_Return\n+\twith For_Special_Return_Object.\n+\t* gen_il-gen-gen_nodes.adb (N_Allocator): Likewise.\n+\t* gen_il-internals.adb (Image): Remove Alloc_For_BIP_Return.\n+\t* sem_ch3.adb (Check_Return_Subtype_Indication): New procedure\n+\tmoved from sem_ch6.adb.\n+\t(Analyze_Object_Declaration): Call it on a return object.\n+\t* sem_ch4.adb: Add with and use clauses for Rtsfind.\n+\t(Analyze_Allocator): Test For_Special_Return_Object to skip checks\n+\tfor allocators made for special return objects.\n+\tDo not report restriction violations for the return stack pool.\n+\t* sem_ch5.adb (Analyze_Assignment.Set_Assignment_Type): Return the\n+\tActual_Subtype for return objects that live on the secondary stack.\n+\t* sem_ch6.adb (Check_Return_Subtype_Indication): Move procedure to\n+\tsem_ch3.adb.\n+\t(Analyze_Function_Return): Do not call above procedure.\n+\t* sem_res.adb (Resolve_Allocator): Replace Alloc_For_BIP_Return\n+\twith For_Special_Return_Object.\n+\t* sinfo.ads: Likewise.\n+\t* treepr.adb (Image): Remove Alloc_For_BIP_Return.\n+\t* gcc-interface/trans.cc (gnat_to_gnu): Do not convert to the result\n+\ttype in the unconstrained array type case if the parent is a simple\n+\treturn statement.\n+\n+2022-12-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Membership_Op): Adjust latest change.\n+\n+2022-12-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_In) <Substitute_Valid_Check>: Rename to...\n+\t<Substitute_Valid_Test>: ...this.\n+\tUse Is_Entity_Name to test for the presence of entity references.\n+\tDo not warn or substitute a valid test for a test with a mark for\n+\ta subtype that is predicated.\n+\tApply the same transformation for a test with a mark for a subtype\n+\tthat is predicated as for a subtype that is not.\n+\tRemove useless return statement.\n+\t* sem_res.adb (Resolve_Membership_Op): Perform a special resolution\n+\tif the left operand is of a universal numeric type.\n+\n+2022-12-06  Justin Squirek  <squirek@adacore.com>\n+\n+\t* accessibility.adb, accessibility.ads\n+\t(Accessibility_Message): Moved from sem_attr.\n+\t(Apply_Accessibility_Check): Moved from checks.\n+\t(Apply_Accessibility_Check_For_Allocator): Moved from exp_ch4 and\n+\trenamed\n+\t(Check_Return_Construct_Accessibility): Moved from sem_ch6.\n+\t(Innermost_Master_Scope_Depth): Moved from sem_util. Add condition\n+\tto detect expanded iterators.\n+\t(Prefix_With_Safe_Accessibility_Level): Moved from sem_attr.\n+\t(Static_Accessibility_Level): Moved from sem_util.\n+\t(Has_Unconstrained_Access_Discriminants): Likewise.\n+\t(Has_Anonymous_Access_Discriminant): Likewise.\n+\t(Is_Anonymous_Access_Actual): Likewise.\n+\t(Is_Special_Aliased_Formal_Access): Likewise.\n+\t(Needs_Result_Accessibility_Level): Likewise.\n+\t(Subprogram_Access_Level): Likewise.\n+\t(Type_Access_Level): Likewise.\n+\t(Deepest_Type_Access_Level): Likewise.\n+\t(Effective_Extra_Accessibility): Likewise.\n+\t(Get_Dynamic_Accessibility): Likewise.\n+\t(Has_Access_Values): Likewise.\n+\t(Accessibility_Level): Likewise.\n+\t* exp_attr.adb (Access_Cases): Obtain the proper enclosing object\n+\twhich applies to a given 'Access by looking through type\n+\tconversions.\n+\t* exp_ch4.adb (Apply_Accessibility_Check): Moved to accessibility.\n+\t* exp_ch5.adb: Likewise.\n+\t* exp_ch6.adb: Likewise.\n+\t* exp_ch9.adb: Likewise.\n+\t* exp_disp.adb: Likewise.\n+\t* gen_il-fields.ads: Add new flag Comes_From_Iterator.\n+\t* gen_il-gen-gen_nodes.adb: Add new flag Comes_From_Iterator for\n+\tN_Object_Renaming_Declaration.\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Mark object\n+\trenamings resulting from iterator expansion with the new flag\n+\tComes_From_Iterator.\n+\t* sem_aggr.adb (Resolve_Container_Aggregate): Refine test.\n+\t* sem_ch13.adb: Add dependence on the accessibility package.\n+\t* sem_ch3.adb: Likewise.\n+\t* sem_ch4.adb: Likewise.\n+\t* sem_ch9.adb: Likewise.\n+\t* sem_res.adb: Likewise.\n+\t* sem_warn.adb: Likewise.\n+\t* exp_ch3.adb: Likewise.\n+\t* sem_attr.adb (Accessibility_Message): Moved to accessibility.\n+\t(Prefix_With_Safe_Accessibility_Level): Likewise.\n+\t* checks.adb, checks.ads (Apply_Accessibility_Check): Likewise.\n+\t* sem_ch6.adb (Check_Return_Construct_Accessibility): Likewise.\n+\t* sem_util.adb, sem_util.ads\n+\t(Accessibility_Level): Likewise.\n+\t(Deepest_Type_Access_Level): Likewise.\n+\t(Effective_Extra_Accessibility): Likewise.\n+\t(Get_Dynamic_Accessibility): Likewise.\n+\t(Has_Access_Values): Likewise.\n+\t(Has_Anonymous_Access_Discriminant): Likewise.\n+\t(Static_Accessibility_Level): Likewise.\n+\t(Has_Unconstrained_Access_Discriminants): Likewise.\n+\t(Is_Anonymous_Access_Actual): Likewise.\n+\t(Is_Special_Aliased_Formal_Access): Likewise.\n+\t(Needs_Result_Accessibility_Level): Likewise.\n+\t(Subprogram_Access_Level): Likewise.\n+\t(Type_Access_Level): Likewise.\n+\t* sinfo.ads: Document new flag Comes_From_Iterator.\n+\t* gcc-interface/Make-lang.in: Add entry for new Accessibility package.\n+\n+2022-12-06  Liaiss Merzougue  <merzougue@adacore.com>\n+\n+\t* libgnat/i-c.adb (To_C): Simplify code for having a single\n+\texception raise. Add pragma annotate about uninitialized value\n+\twhich happen only on exception raising.\n+\n+2022-12-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.cc (get_storage_model_access): Strip any type\n+\tconversion around the node before looking into it.\n+\n+2022-12-01  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch13.adb\n+\t(Validate_Aspect_Aggregate): Reject illegal case where none of\n+\tAdd_Named, Add_Unnamed, and Assign_Indexed are specified.\n+\n+2022-12-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst (Non-Symbolic\n+\tTraceback): Add compilation line.\n+\t(Symbolic Traceback): Remove obsolete stuff.\n+\t* doc/gnat_ugn/gnat_utility_programs.rst (gnatsymbolize): Adjust.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-12-01  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* lib-xref.adb (Generate_Reference): Fix misphrasing in comment.\n+\n+2022-12-01  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, Attribute_Address): In the case\n+\twhere the attribute's prefix is a dereference of a value of an\n+\taccess type that has aspect Designated_Storage_Model (or a\n+\trenaming of such a dereference), set the attribute's type to the\n+\tcorresponding Storage_Model_Type's associated address type rather\n+\tthan System.Address.\n+\n+2022-12-01  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* doc/gnat_rm/the_gnat_library.rst: Fix minor issues.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-12-01  Josue Nava Bello  <nava@adacore.com>\n+\n+\t* doc/share/conf.py: minor updates\n+\n+2022-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* libgnat/g-traceb.ads: Minor tweaks in the commentary.\n+\t(Executable_Load_Address): New function.\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst (Non-Symbolic\n+\tTraceback): Adjust to PIE default on Linux.\n+\t(Symbolic Traceback): Likewise.\n+\t* doc/gnat_ugn/gnat_utility_programs.rst (gnatsymbolize): Likewise.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-28  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* doc/share/conf.py (extensions): Add 'sphinx_rtd_theme'.\n+\t(html_theme): Set to 'sphinx_rtd_theme'.\n+\n+2022-11-28  Claire Dross  <dross@adacore.com>\n+\n+\t* libgnat/g-souinf.ads (Source_Code_Information): Add a new\n+\tvolatile abstract state and add it in the global contract of all\n+\tfunctions defined in Source_Info.\n+\n+2022-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Actuals.Add_Call_By_Copy_Code): Deal with a\n+\treference to a validation variable in the actual.\n+\t(Expand_Actuals.Add_Validation_Call_By_Copy_Code): Minor tweak.\n+\t(Expand_Actuals): Call Add_Validation_Call_By_Copy_Code directly\n+\tonly if Add_Call_By_Copy_Code is not to be invoked.\n+\n+2022-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* adaint.c [Linux]: Include <link.h>.\n+\t(__gnat_get_executable_load_address) [Linux]: Enable.\n+\n+2022-11-28  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Check_Part_Of_Abstract_State): Add verification\n+\trelated to use of Part_Of, so that constituents in private childs\n+\tthat refer to state in a sibling or parent unit force that unit to\n+\thave a body.\n+\t* sem_util.adb (Check_State_Refinements): Drop the requirement to\n+\thave always a package body for state refinement, when the package\n+\tstate is mentioned in no Part_Of specification.\n+\t* sem_ch3.adb (Analyze_Declarations): Refresh SPARK refs in comment.\n+\t* sem_ch7.adb (Analyze_Package_Declaration): Likewise.\n+\n+2022-11-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.cc (gnat_to_gnu) <N_Assignment_Statement>: Add\n+\tassertion that memset is not supposed to be used when the target has\n+\ta storage model with Copy_To routine.\n+\n+2022-11-24  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch8.adb\n+\t(Find_Direct_Name): Remove bypass to reanalyze incorrectly\n+\tanalyzed discriminals.\n+\t(Set_Entity_Or_Discriminal): Avoid resetting the entity field of a\n+\tdiscriminant reference to be the internally generated renaming\n+\twhen we are in strict preanalysis mode.\n+\n+2022-11-22  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Depends_Global): Accept aspects on\n+\tabstract subprograms.\n+\n+2022-11-22  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* frontend.adb (Frontend): Re-enable Validate_Subprogram_Calls.\n+\t* exp_ch6.adb (Check_BIP_Actuals): When in CodePeer mode, do not\n+\tattempt to validate procedures coming from an\n+\tElab_Spec/Elab_Body/Elab_Subp_Body procedure.\n+\n+2022-11-22  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* errout.adb (To_Be_Removed): Decrease total number of errors when\n+\tremoving a warning that has been escalated into error.\n+\t* erroutc.adb (dmsg): Print Warn_Runtime_Raise flag.\n+\n+2022-11-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch3.adb (Make_Tag_Assignment): Fix formatting glitches.\n+\n+2022-11-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* contracts.adb (Build_Subprogram_Contract_Wrapper): Do not fiddle\n+\twith the Was_Expression_Function flag. Move a few lines around.\n+\n+2022-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.cc (gnat_to_gnu_entity) <E_Constant>: Revert\n+\tlatest change.\n+\t* gcc-interface/trans.cc (gnat_to_gnu) <N_Object_Declaration>:\n+\tTweak latest change.\n+\n+2022-11-21  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* exp_pakd.adb (Create_Packed_Array_Impl_Type): Do not share PAT\n+\tif sizes of types differ.\n+\n+2022-11-21  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Restore\n+\talphabetical ordering.\n+\t* gnat_rm.texi: Regenerate.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_util.adb (Needs_Secondary_Stack): Test Is_Constrained\n+\tdirectly instead of Is_Definite_Subtype for an array subtype.\n+\n+2022-11-21  Steve Baird  <baird@adacore.com>\n+\n+\t* libgnat/s-rident.ads: Define a new restriction,\n+\tNo_Task_Hierarchy_Implicit. This is like the No_Task_Hierarchy\n+\trestriction, but with the difference that setting this restriction\n+\tdoes not mean the H.6(6) post-compilation check is satisified.\n+\t* exp_ch6.adb (Add_Task_Actuals_To_Build_In_Place_Call): If it is\n+\tknown that the function result cannot have tasks, then pass in a\n+\tnull literal for the activation chain actual parameter. This\n+\tavoids generating a reference to an entity that\n+\tBuild_Activation_Chain_Entity may have chosen not to generate a\n+\tdeclaration for.\n+\t* gnatbind.adb (List_Applicable_Restrictions): Do not list the\n+\tNo_Task_Hierarchy_Implicit restriction.\n+\t* restrict.adb: Special treatment for the\n+\tNo_Task_Hierarchy_Implicit restriction in functions\n+\tGet_Restriction_Id and Restriction_Active. The former is needed to\n+\tdisallow the (unlikely) case that a user tries to explicitly\n+\treference the No_Task_Hierarchy_Implicit restriction.\n+\t* sem_prag.adb (Analyze_Pragma): If a Sequential\n+\tPartition_Elaboration_Policy is specified (and the\n+\tNo_Task_Hierarchy restriction is not already enabled), then enable\n+\tthe No_Task_Hierarchy_Implicit restriction.\n+\n+2022-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Use Typ local\n+\tconstant throughout, remove Ret_Obj_Typ local constant, rename\n+\tRef_Type into Acc_Typ in a couple of places, remove a useless call\n+\tto Set_Etype, use a consistent checks suppression scheme, adjust\n+\tcomments for the sake of consistencty and alphabetize some local\n+\tdeclarations.\n+\t* exp_ch6.adb (Expand_Simple_Function_Return): Remove a couple of\n+\tredundant local constants.\n+\n+2022-11-21  Steve Baird  <baird@adacore.com>\n+\n+\t* libgnat/a-sttebu.adb (Put): Add missing call to Encode.\n+\t* libgnat/a-strsup.ads: Declare new Put_Image procedure and add\n+\tPut_Image aspect specification for type Super_String.\n+\t* libgnat/a-strsup.adb (Put_Image): New procedure.\n+\t* libgnat/a-stwisu.ads: Declare new Put_Image procedure and add\n+\tPut_Image aspect specification for type Super_String.\n+\t* libgnat/a-stwisu.adb (Put_Image): New procedure.\n+\t* libgnat/a-stzsup.ads: Declare new Put_Image procedure and add\n+\tPut_Image aspect specification for type Super_String.\n+\t* libgnat/a-stzsup.adb (Put_Image): New procedure.\n+\n+2022-11-21  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* frontend.adb (Frontend): Disable subprogram call validation.\n+\n+2022-11-21  Bob Duff  <duff@adacore.com>\n+\n+\t* warnsw.ads, warnsw.adb: Move warning flags here from package\n+\tOpt. Rename Warning_Record to be Warnings_State. Use an array\n+\tinstead of a record; this simplifies the code. Add renamings of\n+\tall the array components for easy reference outside this package.\n+\tPass the \"Family\" to Set_Warning_Switch. Use more table-driven\n+\tcode. Misc cleanup and comment fixes.\n+\t* opt.ads: Move warning switches to Warnsw.\n+\t* gnat1drv.adb\n+\t(Adjust_Global_Switches): Expanded names needed.\n+\t* inline.ads: Rename Warning_Record to be Warnings_State.\n+\t* sem_ch12.adb: Likewise.\n+\t* sem_prag.adb: Use new Set_Warning_Switch.\n+\t* contracts.adb, errout.adb, exp_aggr.adb, exp_ch11.adb: Adjust\n+\timports for move to Warnsw.\n+\t* exp_ch5.adb, exp_prag.adb, exp_util.adb, frontend.adb: Likewise.\n+\t* layout.adb, lib-xref.adb, restrict.adb, scn.adb, sem_aggr.adb:\n+\tLikewise.\n+\t* sem_attr.adb, sem_case.adb, sem_ch10.adb, sem_ch11.adb:\n+\tLikewise.\n+\t* sem_ch13.adb, sem_ch3.adb, sem_ch4.adb, sem_ch5.adb: Likewise.\n+\t* sem_ch6.adb, sem_ch7.adb, sem_ch8.adb, sem_elab.adb: Likewise.\n+\t* sem_eval.adb, sem_res.adb, sem_util.adb, sem_warn.adb: Likewise.\n+\t* switch-c.adb: Likewise.\n+\n+2022-11-21  Steve Baird  <baird@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Improve\n+\tthe description of how the -gnatw.h switch interacts with\n+\t\"partial\" record layout specifications (i.e., specifications where\n+\tthe locations of some components are left unspecified).\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-21  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* sem_ch13.adb (Check_One_Attr): produce error when Size attribute\n+\tused on aliased object of elementary types with nonconfirming\n+\tvalue.\n+\n+2022-11-21  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* sfn_scan.adb (Scan_SFN_Pragmas): Improve handling of comments.\n+\n+2022-11-21  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* par-ch3.adb (P_Declarative_Item): Tweak handling of with keyword.\n+\n+2022-11-14  Boris Yakobowski  <yakobowski@adacore.com>\n+\n+\t* sem_case.adb: silence false positive warning emitted by CodePeer\n+\ton predefined equality for type Choice_Range_Info.\n+\n+2022-11-14  Bob Duff  <duff@adacore.com>\n+\n+\t* atree.ads: Remove some comments.\n+\t* err_vars.ads: Likewise.\n+\t* scans.ads: Likewise.\n+\t* sinput.ads: Likewise.\n+\t* checks.ads: Likewise. Also add a \"???\" comment indicating an\n+\tobsolete comment that is too difficult to correct at this time.\n+\t* sem_attr.adb: Minor comment rewrite.\n+\n+2022-11-14  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_intr.adb\n+\t(Expand_Dispatching_Constructor_Call): Improve warning message.\n+\t* freeze.adb\n+\t(Check_No_Parts_Violations): Improve error message.\n+\n+2022-11-14  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* doc/gnat_rm/security_hardening_features.rst: Document optional\n+\thardcfr checkpoints.\n+\t* gnat_rm.texi: Regenerate.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-14  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* checks.adb\n+\t(Apply_Type_Conversion_Checks): Apply Root_Type to the type of the\n+\tprefix of a Pos attribute when checking whether the type is a\n+\tformal discrete type.\n+\n+2022-11-14  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* libgnat/s-regpat.adb\n+\t(Parse): Fix handling of non-capturing parentheses.\n+\n+2022-11-14  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Add special case for the special\n+\tlocal subprogram created for contracts.\n+\n+2022-11-14  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb (Build_Subprogram_Wrappers): Adjust slocs of the\n+\tcopied aspects, just like we do in Build_Class_Wide_Expression for\n+\tinherited class-wide contracts.\n+\n+2022-11-14  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* inline.adb (Replace_Formal): Tune whitespace.\n+\t* sem_ch12.adb (Check_Overloaded_Formal_Subprogram): Refine type\n+\tof a formal parameter and local variable; this routine operates on\n+\tnodes and not entities.\n+\t* sem_ch12.ads: Tune whitespace.\n+\n+2022-11-14  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Associations): Expand wrappers for\n+\tGNATprove.\n+\n+2022-11-14  Patrick Bernardi  <bernardi@adacore.com>\n+\n+\t* libgnat/system-qnx-arm.ads: Set Support_Atomic_Primitives to\n+\tTrue.\n+\t* libgnat/system-rtems.ads: Add Support_Atomic_Primitives.\n+\n+2022-11-14  Yannick Moy  <moy@adacore.com>\n+\n+\t* errout.adb (Error_Msg_Internal): Store span for Optr field, and\n+\tadapt to new type of Optr.\n+\t(Finalize. Output_JSON_Message, Remove_Warning_Messages): Adapt to\n+\tnew type of Optr.\n+\t(Output_Messages): Use Optr instead of Sptr to display code\n+\tsnippet closer to error.\n+\t* erroutc.adb (dmsg): Adapt to new type of Optr.\n+\t* erroutc.ads (Error_Msg_Object): Make Optr a span like Sptr.\n+\t* errutil.adb (Error_Msg): Likewise.\n+\n+2022-11-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_utility_programs.rst: Remove gnatcheck\n+\treference.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gnat-style.rst: Moved to...\n+\t* doc/gnat-style/index.rst: ...here.\n+\t* doc/gnat_rm.rst: Moved to...\n+\t* doc/gnat_rm/index.rst: ...here.\n+\t* doc/gnat_ugn.rst: Moved to...\n+\t* doc/gnat_ugn/index.rst: ...here.\n+\t* doc/share/latex_elements.py: Moved to...\n+\t* doc/share/ada_latex_elements.py: ...here.\n+\t* gcc-interface/Make-lang.in:\n+\t* doc/Makefile: Removed.\n+\t* doc/share/conf.py: Removed.\n+\t* doc/share/gnu_free_documentation_license.rst: Removed.\n+\t* gnat-style.texi: Removed.\n+\t* gnat_rm.texi: Removed.\n+\t* gnat_ugn.texi: Removed.\n+\t* doc/gnat-style/conf.py: New file.\n+\t* doc/gnat-style/gnu_free_documentation_license.rst: New file.\n+\t* doc/gnat_rm/conf.py: New file.\n+\t* doc/gnat_rm/gnu_free_documentation_license.rst: New file.\n+\t* doc/gnat_ugn/conf.py: New file.\n+\t* doc/gnat_ugn/gnu_free_documentation_license.rst: New file.\n+\t* doc/share/adabaseconf.py: New file.\n+\t* doc/gnat_rm/security_hardening_features.rst: Add role.\n+\t* doc/gnat_ugn/platform_specific_information.rst: Remove\n+\tduplicate definition of |nbsp|.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/Make-lang.in: Support --with-sphinx-build.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gnat_rm/index.rst: Fix cross manual refs.\n+\n+2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2022-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/Make-lang.in:\n+\tSupport installation if sphinx-build is missing.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/Make-lang.in:\n+\tSupport installation if sphinx-build is missing.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gnat_rm/index.rst: Fix cross manual refs.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/Make-lang.in: Support --with-sphinx-build.\n+\n+2022-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gnat-style.rst: Moved to...\n+\t* doc/gnat-style/index.rst: ...here.\n+\t* doc/gnat_rm.rst: Moved to...\n+\t* doc/gnat_rm/index.rst: ...here.\n+\t* doc/gnat_ugn.rst: Moved to...\n+\t* doc/gnat_ugn/index.rst: ...here.\n+\t* doc/share/latex_elements.py: Moved to...\n+\t* doc/share/ada_latex_elements.py: ...here.\n+\t* gcc-interface/Make-lang.in:\n+\t* doc/Makefile: Removed.\n+\t* doc/share/conf.py: Removed.\n+\t* doc/share/gnu_free_documentation_license.rst: Removed.\n+\t* gnat-style.texi: Removed.\n+\t* gnat_rm.texi: Removed.\n+\t* gnat_ugn.texi: Removed.\n+\t* doc/gnat-style/conf.py: New file.\n+\t* doc/gnat-style/gnu_free_documentation_license.rst: New file.\n+\t* doc/gnat_rm/conf.py: New file.\n+\t* doc/gnat_rm/gnu_free_documentation_license.rst: New file.\n+\t* doc/gnat_ugn/conf.py: New file.\n+\t* doc/gnat_ugn/gnu_free_documentation_license.rst: New file.\n+\t* doc/share/adabaseconf.py: New file.\n+\t* doc/gnat_rm/security_hardening_features.rst: Add role.\n+\t* doc/gnat_ugn/platform_specific_information.rst: Remove\n+\tduplicate definition of |nbsp|.\n+\n+2022-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.cc (build_allocator): For unconstrained\n+\tarray types with a storage model and an initializing expression,\n+\tcopy the initialization expression separately from the bounds. In\n+\tall cases with a storage model, pass the locally computed size for\n+\tthe store.\n+\n+2022-11-08  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_attr.adb\n+\t(Eval_Attribute): Don't simplify 'Image call if Put_Image has been\n+\tspecified.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_ch6.adb, exp_put_image.adb, sem_aggr.adb, sem_attr.adb,\n+\tsem_ch5.adb, sem_type.adb, sem_util.adb: Replace\n+\t\"Present (Find_Aspect (...))\" with \"Has_Aspect\".\n+\n+2022-11-08  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* contracts.adb\n+\t(Preanalyze_Class_Conditions): New procedure.\n+\t(Preanalyze_Condition): Moved out from Merge_Class_Conditions in\n+\torder to be spec-visible.\n+\t* contracts.ads\n+\t(Preanalyze_Class_Conditions): New procedure.\n+\t* sem_prag.adb\n+\t(Analyze_Pre_Post_Condition_In_Decl_Part): Call\n+\tPreanalyze_Class_Conditions when necessary.\n+\n+2022-11-08  Johannes Kliemann  <kliemann@adacore.com>\n+\n+\t* libgnat/system-vxworks7-aarch64-rtp-smp.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-aarch64.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-arm-rtp-smp.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-arm.ads: Set Support_Atomic_Primitives\n+\tto True.\n+\t* libgnat/system-vxworks7-ppc-kernel.ads: Set\n+\tSupport_Atomic_Primitives to False.\n+\t* libgnat/system-vxworks7-ppc-rtp-smp.ads: Set\n+\tSupport_Atomic_Primitives to False.\n+\t* libgnat/system-vxworks7-ppc64-kernel.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-ppc64-rtp-smp.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-x86-kernel.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-x86-rtp-smp.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-x86_64-kernel.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\t* libgnat/system-vxworks7-x86_64-rtp-smp.ads: Set\n+\tSupport_Atomic_Primitives to True.\n+\n+2022-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fe.h (Get_Warn_On_Questionable_Layout): Add void parameter.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Formal_Subprogram): Copy aspect Ghost\n+\tfrom formal subprogram declaration to the internally generated\n+\tprocedure.\n+\n+2022-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Case_Expression): Compute the\n+\tinterpretations of the expression only at the end of the analysis,\n+\tbut skip doing it if it is the operand of a type conversion.\n+\t(Analyze_If_Expression): Likewise.\n+\t* sem_res.adb (Resolve): Deal specially with conditional\n+\texpression that is the operand of a type conversion.\n+\t(Resolve_Dependent_Expression): New procedure.\n+\t(Resolve_Case_Expression): Call Resolve_Dependent_Expression.\n+\t(Resolve_If_Expression): Likewise.\n+\t(Resolve_If_Expression.Apply_Check): Take result type as\n+\tparameter.\n+\t(Resolve_Type_Conversion): Do not warn about a redundant\n+\tconversion when the operand is a conditional expression.\n+\n+2022-11-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* debug.adb\n+\t(Debug_Flag_Underscore_XX): Switch -gnatd_X used temporarily to allow\n+\tdisabling extra formal checks.\n+\t* exp_attr.adb\n+\t(Expand_N_Attribute_Reference [access types]): Add extra formals\n+\tto the subprogram referenced in the prefix of 'Unchecked_Access,\n+\t'Unrestricted_Access or 'Access; required to check that its extra\n+\tformals match the extra formals of the corresponding subprogram type.\n+\t* exp_ch3.adb\n+\t(Stream_Operation_OK): Declaration moved to the public part of the\n+\tpackage.\n+\t(Validate_Tagged_Type_Extra_Formals): New subprogram.\n+\t(Expand_Freeze_Record_Type): Improve the code that takes care of\n+\tadding the extra formals of dispatching primitives; extended to\n+\tadd also the extra formals to renamings of dispatching primitives.\n+\t* exp_ch3.ads\n+\t(Stream_Operation_OK): Declaration moved from the package body.\n+\t* exp_ch6.adb\n+\t(Check_BIP_Actuals): Complete documentation.\n+\t(Has_BIP_Extra_Formal): Subprogram declaration moved to the public\n+\tpart of the package. In addition, a parameter has been added to\n+\tdisable an assertion that requires its use with frozen entities.\n+\t(Duplicate_Params_Without_Extra_Actuals): New subprogram.\n+\t(Check_Subprogram_Variant): Emit the call without duplicating the\n+\textra formals since they will be added when the call is analyzed.\n+\t(Expand_Call_Helper): Ensure that the called subprogram has all its\n+\textra formals, enforce assertion checking extra formals on thunks,\n+\tand mark calls from thunks as processed-BIP-calls to avoid adding\n+\ttheir extra formals twice.\n+\t(Is_Build_In_Place_Function): Return False for entities with foreign\n+\tconvention.\n+\t(Is_Build_In_Place_Function_Call): Return True also for not BIP functions\n+\tthat have BIP formals since the extra actuals are required.\n+\t(Make_Build_In_Place_Call_In_Object_Declaration): Occurrences of\n+\tIs_Return_Object replaced by the local variable Is_OK_Return_Object\n+\tthat evaluates to False for scopes with foreign convention.\n+\t(Might_Have_Tasks): Fix check of class-wide limited record types.\n+\t(Needs_BIP_Task_Actuals): Remove assertion to allow calling this\n+\tfunction in more contexts; in addition it returns False for functions\n+\treturning objects with foreign convention.\n+\t(Needs_BIP_Finalization_Master): Likewise.\n+\t(Needs_BIP_Alloc_Form): Likewise.\n+\t(Validate_Subprogram_Calls): Check that the number of actuals (including\n+\textra actuals) of calls in the subtree N match their corresponding\n+\tformals.\n+\t* exp_ch6.ads\n+\t(Has_BIP_Extra_Formal): Subprogram declaration moved to the public\n+\tpart of the package. In addition, a parameter has been added to\n+\tdisable an assertion that requires its use with frozen entities.\n+\t(Is_Build_In_Place_Function_Call): Complete documentation.\n+\t(Validate_Subprogram_Calls): Check that the number of actuals (including\n+\textra actuals) of calls in the subtree N match their corresponding\n+\tformals.\n+\t* freeze.adb\n+\t(Check_Itype): Add extra formals to anonymous access subprogram itypes.\n+\t(Freeze_Expression): Improve code that disables the addition of extra\n+\tformals to functions with foreign convention.\n+\t(Check_Extra_Formals): Moved to package Sem_Ch6 as Extra_Formals_OK.\n+\t(Freeze_Subprogram): Add extra formals to non-dispatching subprograms.\n+\t* frontend.adb\n+\t(Frontend): Validate all the subprogram calls; it can be disabled using\n+\tswitch -gnatd_X\n+\t* sem_ch3.adb\n+\t(Access_Subprogram_Declaration): Defer the addition of extra formals to\n+\tthe freezing point so that we know the convention.\n+\t(Check_Anonymous_Access_Component): Likewise.\n+\t(Derive_Subprogram): Fix documentation.\n+\t* sem_ch6.adb\n+\t(Has_Reliable_Extra_Formals): New subprogram.\n+\t(Check_Anonymous_Return): Fix check of access to class-wide limited\n+\trecord types.\n+\t(Check_Untagged_Equality): Placed in alphabetical order.\n+\t(Extra_Formals_OK): Subprogram moved from freeze.adb.\n+\t(Extra_Formals_Match_OK): New subprogram.\n+\t(Has_BIP_Formals): New subprogram.\n+\t(Has_Extra_Formals): New subprograms.\n+\t(Needs_Accessibility_Check_Extra): New subprogram.\n+\t(Parent_Subprogram): New subprogram.\n+\t(Add_Extra_Formal): Minor code cleanup.\n+\t(Create_Extra_Formals): Enforce matching extra formals on overridden\n+\tand aliased entities.\n+\t* sem_ch6.ads\n+\t(Extra_Formals_Match_OK): New subprogram.\n+\t(Extra_Formals_OK): Subprogram moved from freeze.adb.\n+\t* sem_eval.adb\n+\t(Compile_Time_Known_Value): Improve predicate to avoid assertion\n+\tfailure; found working on this ticket; this change does not\n+\taffect the behavior of the compiler because this subprogram\n+\thas an exception handler that returns False when the assertion\n+\tfails.\n+\t* sem_util.adb\n+\t(Needs_Result_Accessibility_Level): Do not return False for dispatching\n+\toperations compiled with Ada_Version < 2012 since they they may be\n+\toverridden by primitives compiled with Ada_Version >= Ada_2012.\n+\n+2022-11-08  Bob Duff  <duff@adacore.com>\n+\n+\t* warnsw.ads, warnsw.adb, fe.h, err_vars.ads, errout.ads: Move\n+\tWarning_Doc_Switch from Err_Vars to Warnsw. Access\n+\tWarn_On_Questionable_Layout on the C side via a function rather\n+\tthan a variable, because we plan to turn the variables into\n+\trenamings, and you can't Export renamings.\n+\t* erroutc.adb, switch-c.adb, errout.adb: Likewise.\n+\t* gcc-interface/decl.cc: Use Get_Warn_On_Questionable_Layout\n+\tinstead of Warn_On_Questionable_Layout.\n+\t* gcc-interface/Makefile.in (GNATMAKE_OBJS): Add warnsw.o, because\n+\tit is indirectly imported via Errout.\n+\t* gcc-interface/Make-lang.in (GNATBIND_OBJS): Likewise and remove\n+\trestrict.o (not needed).\n+\n+2022-11-08  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n+\t(-gnatwc): Fix flag documentation.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-08  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch3.adb\n+\t(Analyze_Object_Declaration): Do not perform expansion actions if\n+\tIn_Spec_Expression is true.\n+\n+2022-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Qualified_Expression): Analyze the\n+\texpression only after setting the type.\n+\t(Analyze_Unchecked_Type_Conversion): Likewise.\n+\t(Analyze_Short_Circuit): Likewise for the operands.\n+\t(Analyze_Type_Conversion): Minor tweaks.\n+\t(Analyze_Unchecked_Expression): Likewise.\n+\n+2022-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Qualified_Expression): Remove redundant\n+\tline.\n+\n+2022-11-08  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* contracts.adb (Preanalyze_Condition): Use\n+\tPreanalyze_Spec_Expression.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_imgv.adb\n+\t(Expand_Wide_Image_Attribute): Handle just like attribute Image.\n+\t(Expand_Wide_Wide_Image_Attribute): Likewise.\n+\t* exp_put_image.adb\n+\t(Build_Image_Call): Adapt to also work for Wide and Wide_Wide\n+\tattributes.\n+\t* exp_put_image.ads\n+\t(Build_Image_Call): Update comment.\n+\t* rtsfind.ads\n+\t(RE_Id): Support wide variants of Get.\n+\t(RE_Unit_Table): Likewise.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnat/a-ngcoar.ads, libgnat/a-ngcoar.adb: Remove extra spaces.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb (Validate_Formal_Type_Default): Remove call to\n+\tCollect_Interfaces, which had no effect apart from populating a\n+\tlist that was not used; fix style.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_spark.adb (SPARK_Freeze_Type): Refine type of a local\n+\tobject.\n+\t* sem_ch3.adb (Derive_Subprograms): Remove initial value for\n+\tNew_Subp, which is in only written as an out parameter and never\n+\tread.\n+\n+2022-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_res.adb (Resolve_If_Expression): Remove obsolete special\n+\tcase.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Delta_Aggregate): Implement rules related\n+\tto limited objects appearing as the base expression.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch3.adb (OK_For_Limited_Init_In_05): Handle delta aggregates\n+\tjust like other aggregates.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Delta_Record_Aggregate): Reject\n+\texpressions of a limited types.\n+\n+2022-11-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch9.adb\n+\t(Build_Master_Entity): Handle missing case: when the context of\n+\tthe master is a BIP function whose result type has tasks.\n+\n+2022-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnat/a-tags.adb\n+\t(Interface_Ancestor_Tags): Raise Tag_Error on No_Tag.\n+\t(Is_Descendant_At_Same_Level): Likewise.\n+\n+2022-11-08  Bob Duff  <duff@adacore.com>\n+\n+\t* usage.adb: Add -gnatw_q and -gnatw_Q.\n+\n+2022-11-07  Cedric Landet  <landet@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst: Mention the needed\n+\t-no-pie for windows to use gprof.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* lib-xref.adb (Hash): Tune hash function.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_prag.adb (Non_Significant_Pragma_Reference): Detect\n+\treferences with aggregates; only assign local variables Id and C\n+\twhen necessary.\n+\n+2022-11-07  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch4.adb\n+\t(Component_Equality, Expand_Array_Equality)\n+\t(Expand_Record_Equality): Use named notation.\n+\n+2022-11-07  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch4.adb\n+\t(Expand_Array_Equality): Do not test Ltyp = Rtyp here, because\n+\tthat is necessarily true. Move assertion thereof to more general\n+\tplace.\n+\t(Expand_Composite_Equality): Pass in Outer_Type, for use in\n+\twarnings. Rename Typ to be Comp_Type, to more clearly distinguish\n+\tit from Outer_Type. Print warning when appropriate.\n+\t* exp_ch4.ads: Minor comment fix.\n+\t* errout.ads: There is no such pragma as Warning_As_Pragma --\n+\tWarning_As_Error must have been intended. Improve comment for ?x?.\n+\t* exp_ch3.adb\n+\t(Build_Untagged_Equality): Update comment to be accurate for more\n+\trecent versions of Ada.\n+\t* sem_case.adb\n+\t(Choice_Analysis): Declare user-defined \"=\" functions as abstract.\n+\t* sem_util.ads\n+\t(Is_Bounded_String): Give RM reference in comment.\n+\t* warnsw.ads, warnsw.adb\n+\t(Warn_On_Ignored_Equality): Implement new warning switch -gnatw_q.\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n+\tDocument new warning switch.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_aux.ads (Is_Body): Annotate with Inline.\n+\t* sem_util.ads (Is_Body_Or_Package_Declaration): Likewise.\n+\n+2022-11-07  Bob Duff  <duff@adacore.com>\n+\n+\t* freeze.adb\n+\t(Build_Inherited_Condition_Pragmas): Do nothing if A_Post is\n+\tempty.\n+\n+2022-11-07  Quentin Ochem  <ochem@adacore.com>\n+\t    Steve Baird  <baird@adacore.com>\n+\n+\t* bindgen.adb: fixed the way the device init and final symbols are\n+\tcomputed, re-using the normal way these symbols would be computed\n+\twith a __device_ prefix. Also fixed the \"is null;\" procedure on\n+\tthe host side which are not Ada 95, replaced with a procedure\n+\traising an exception as it should never be called. Remove the\n+\tunused function Device_Ada_Final_Link_Name.\n+\n+2022-11-07  Steve Baird  <baird@adacore.com>\n+\n+\t* opt.ads: Declare new string pointer variable, CUDA_Device_Library_Name.\n+\tModify comments for existing Boolean variable Enable_CUDA_Device_Expansion.\n+\t* switch-b.adb: When \"-d_c\" switch is encountered, check that the next\n+\tcharacter is an \"'='; use the remaining characters to initialize\n+\tOpt.CUDA_Device_Library_Name.\n+\t* bindgen.adb: Remove (for now) most support for host-side invocation of\n+\tdevice-side finalization. Make use of the new CUDA_Device_Library_Name\n+\tin determining the string used to refer (on the host side) to the\n+\tdevice-side initialization procedure. Declare the placeholder routine\n+\tthat is named in the CUDA_Execute pragma (and the CUDA_Register_Function\n+\tcall) as an exported null procedure, rather than as an imported procedure.\n+\tIt is not clear whether it is really necessary to specify the link-name\n+\tfor this should-never-be-called subprogram on the host side, but for now it\n+\tshouldn't hurt to do so.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Examine scope\n+\ttree and not the scope stack.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* mdll.ads (Build_Import_Library): Fix grammar in comment.\n+\t* mdll.adb (Build_Import_Library): Directly execute code of a\n+\tnested routine; rename No_Lib_Prefix to Strip_Lib_Prefix.\n+\n+2022-11-07  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_warn.adb\n+\t(Check_For_Warnings): Remove unnecessary exception handler.\n+\t(Warn_On_Known_Condition): Suppress warning when we detect a True\n+\tor False that has been turned into a more complex expression\n+\tbecause True is represented as \"nonzero\". (Note that the complex\n+\texpression will subsequently be constant-folded to a Boolean True\n+\tor False). Also simplify to always print \"condition is always ...\"\n+\tinstead of special-casing object names. The special case was\n+\tunhelpful, and indeed wrong when the expression is a literal.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* checks.adb (Safe_To_Capture_In_Parameter_Value): Remove.\n+\t* sem_util.adb (Safe_To_Capture_Value): Stop search at the current\n+\tbody.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_In_Out): Remove No_ prefix; flip return\n+\tvalues between True and False; adapt caller.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch13.adb (Add_Call): Just look at Instantiation_Depth.\n+\t* sem_ch3.adb (Derive_Subprograms): Likewise.\n+\t* sem_warn.adb (Check_References): Remove redundant filtering with\n+\tInstantiation_Depth that follows filtering with\n+\tInstantiation_Location.\n+\t* sinput.adb (Instantiation_Depth): Reuse Instantiation_Location.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.adb\n+\t(No_Warn_On_In_Out): For subprograms we can simply call\n+\tWarnings_Off.\n+\t(Output_Non_Modified_In_Out_Warnings): Remove repeated\n+\tsuppression.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Delta_Array_Aggregate): Reject boxes in\n+\tdelta array aggregates.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_res.adb (Enclosing_Declaration_Or_Statement): Moved to\n+\tSem_Util.\n+\t* sem_util.ads (Enclosing_Declaration_Or_Statement): Moved from\n+\tSem_Res.\n+\t* sem_util.adb (Enclosing_Declaration_Or_Statement): Likewise.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_res.adb (Resolve): Only call Comes_From_Predefined_Lib_Unit\n+\twhen its result might be needed.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb (Check_Generic_Actuals): Remove redundant parens;\n+\trefactor an excessive if-statement; remove repeated call to Node.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* inline.adb (Establish_Actual_Mapping_For_Inlined_Call): Move\n+\tcomment next to a condition that it describes.\n+\n+2022-11-07  Steve Baird  <baird@adacore.com>\n+\n+\t* exp_put_image.adb\n+\t(Image_Should_Call_Put_Image): Correctly handle the case of an\n+\tinherited Put_Image aspect specification for a scalar type.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnarl/s-interr.adb: Tune whitespace.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnarl/s-interr.adb: Reorder context items and pragmas.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_ch4.adb\n+\t(Expand_Modular_Addition): Rewrite using Make_XXX calls.\n+\t(Expand_Modular_Op): Likewise.\n+\t(Expand_Modular_Subtraction): Likewise.\n+\t* exp_imgv.adb\n+\t(Expand_User_Defined_Enumeration_Image): Likewise.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* checks.adb (Apply_Arithmetic_Overflow_Strict): Rewrite using a\n+\tnewly created operator node.\n+\t* exp_ch4.adb (Expand_Array_Comparison): Likewise.\n+\t* exp_ch6.adb (Add_Call_By_Copy_Code): Rewriting actual parameter\n+\tusing its own location and not the location of the subprogram\n+\tcall.\n+\t* sem_warn.adb (Check_References): Looping with Original_Node is\n+\tno longer needed.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_prag.adb (Is_In_Context_Clause): Rewrite without negations\n+\tand inequalities.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma [Pragma_Obsolescent]): Reject\n+\tmisplaced pragma.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.adb (Output_Obsolescent_Entity_Warnings): Tag warnings\n+\tabout obsolescent functions just like we tag similar warnings for\n+\tpackages and procedures.\n+\n+2022-11-07  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Remove useless\n+\tskipping for attribute Input.\n+\n+2022-11-04  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Skip operand\n+\tvalidity checks for attributes Has_Same_Storage and\n+\tOverlaps_Storage.\n+\n+2022-11-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* errout.adb (Remove_Warning_Messages.Check_For_Warning): Do not\n+\treinstate the Original_Node in the tree.\n+\t* exp_aggr.adb (Build_Array_Aggr_Code.Gen_Loop): Copy the bounds\n+\ton all paths.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnat/g-excact.ads\n+\t(Register_Global_Action): Refill comment.\n+\t(Name_To_Id): Change pragma Restriction from singular to plural.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.adb (Check_References): Remove redundant guard, as it\n+\tis implied by a preceding call to Referenced_Check_Spec.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.adb (Check_References): Remove useless query for \"spec\"\n+\tof a variable; refactor nested if-statements into a single\n+\tcondition.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_util.adb\n+\t(In_Pragma_Expression): Add standard guard against searching too\n+\tfar.\n+\t(In_Quantified_Expression): Likewise.\n+\t* sem_warn.adb\n+\t(May_Need_Initialized_Actual): Remove redundant parens.\n+\t(Check_References): Remove guard that duplicates a condition from\n+\tthe enclosing if-statement; only assign E1T variable when\n+\tnecessary.\n+\t(Within_Postcondition): Fix layout.\n+\t(No_Warn_On_In_Out): Balance parens in comment.\n+\n+2022-11-04  Steve Baird  <baird@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Add the standard\n+\t'... \"On\" enables this extension.' sentence to the description of\n+\tstatic intrinsic functions.\n+\t* sem_ch13.adb\n+\t(Analyze_Aspect_Spec): In the call to Error_Msg_GNAT_Extension for\n+\ta Static aspect specification for an intrinsic function, specify\n+\tIs_Core_Extension => True.\n+\t* sem_eval.adb\n+\t(Eval_Intrinsic_Call): Test Core_Extensions_Allowed instead of\n+\ttesting All_Extensions_Allowed.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* aspects.adb (Relocate_Aspect): Remove call to Set_Has_Aspects.\n+\t* sem_ch12.adb (Analyze_Formal_Package_Declaration): Likewise.\n+\t* sem_util.adb (Copy_Ghost_Aspect, Copy_SPARK_Mode_Aspect):\n+\tLikewise.\n+\n+2022-11-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_intr.adb\n+\t(Expand_Dispatching_Constructor_Call): Report an error on\n+\tunsupported dispatching constructor calls and report a warning on\n+\tcalls that may fail at run time.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_util.adb\n+\t(Check_Components): Iterate using\n+\tFirst/Next_Component_Or_Discriminant.\n+\t(Has_Preelaborable_Initialization): Avoid repeated iteration with\n+\tcalls to Check_Components with First_Entity and\n+\tFirst_Private_Entity.\n+\t(Is_Independent_Object_Entity): Tune indentation.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch7.adb (Clear_Constants): Only iterate from First_Entity\n+\tthrough Next_Entity; only examine variables because packages have\n+\tno assignable formal parameters.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Fix\n+\ttypos.\n+\t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst: Fix typos\n+\tand refill as necessary; remove trailing whitespace.\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst: Fix typos.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-11-04  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* sem_util.ads (Add_Block_Identifier): Add new extra Scope\n+\targument.\n+\t* sem_util.adb (Add_Block_Identifier): Likewise and use this scope\n+\tvariable instead of Current_Scope.\n+\t* exp_util.adb (Wrap_Statements_In_Block): Add new scope argument\n+\tto Add_Block_Identifier call.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_util.adb (Kill_Current_Values): Only iterate from\n+\tFirst_Entity through Next_Entity.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch6.adb (Controlling_Formal): Iterate with First/Next_Formal\n+\tand not with First/Next_Entity.\n+\n+2022-11-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb\n+\t(Expand_Interface_Conversion): Fix typo in comment.\n+\n+2022-11-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb\n+\t(Expand_Interface_Conversion): Under configurable runtime, when\n+\tthe target type is an interface that is an ancestor of the operand\n+\ttype, skip generating code to displace the pointer to reference\n+\tthe target dispatch table.\n+\t* sem_disp.adb\n+\t(Propagate_Tag): Handle class-wide types when checking for the\n+\taddition of an implicit interface conversion.\n+\n+2022-11-04  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* doc/gnat_rm/standard_library_routines.rst: Fix typo.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-11-04  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* sa_messages.ads, sa_messages.adb: Remove files.\n+\n+2022-11-04  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* checks.adb, exp_atag.adb, exp_attr.adb, exp_ch4.adb, exp_ch6.adb,\n+\texp_ch7.adb, exp_dbug.adb, exp_disp.adb, exp_unst.adb, exp_util.adb,\n+\tfreeze.adb, layout.adb, pprint.adb, rtsfind.adb, sem_aggr.adb,\n+\tsem_attr.adb, sem_case.adb, sem_ch12.adb, sem_ch13.adb, sem_ch3.adb,\n+\tsem_ch5.adb, sem_ch6.adb, sem_ch8.adb, sem_dim.adb, sem_prag.adb,\n+\tsem_util.adb, sem_warn.adb:\n+\tReplace uses of `not Present (X)` with `No (X)`.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* einfo.ads: Fix typos in comments; refill as necessary.\n+\t* sinfo.ads: Likewise.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_aspects.rst: Fix typos.\n+\t* doc/gnat_rm/implementation_defined_attributes.rst: Likewise\n+\t* doc/gnat_rm/implementation_defined_characteristics.rst: Likewise\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Likewise\n+\t* doc/gnat_rm/standard_library_routines.rst: Likewise.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch8.adb (Restore_Scope_Stack): Remove elements from the head\n+\tand not the tail of an element list.\n+\n+2022-11-04  Ronan Desplanques  <desplanques@adacore.com>\n+\n+\t* sinfo.ads: Small editorial changes.\n+\n+2022-11-04  Steve Baird  <baird@adacore.com>\n+\n+\t* opt.ads: Replace Ada_Version_Type enumeration literal\n+\tAda_With_Extensions with two literals, Ada_With_Core_Extensions\n+\tand Ada_With_All_Extensions. Update uses of the deleted literal.\n+\tReplace Extensions_Allowed function with two functions:\n+\tAll_Extensions_Allowed and Core_Extensions_Allowed.\n+\t* errout.ads, errout.adb: Add Boolean parameter to\n+\tError_Msg_GNAT_Extension to indicate whether the construct in\n+\tquestion belongs to the curated subset.\n+\t* exp_ch5.adb, par-ch4.adb, sem_case.adb, sem_ch3.adb:\n+\t* sem_ch4.adb, sem_ch5.adb, sem_ch8.adb: Replace calls to\n+\tExtensions_Allowed with calls to Core_Extensions_Allowed for\n+\tconstructs that are in the curated subset.\n+\t* sem_attr.adb, sem_ch13.adb, sem_eval.adb, sem_util.adb: Replace\n+\tcalls to Extensions_Allowed with calls to All_Extensions_Allowed\n+\tfor constructs that are not in the curated subset.\n+\t* par-ch3.adb: Override default for new parameter in calls to\n+\tError_Msg_GNAT_Extension for constructs in the curated subset.\n+\t* par-prag.adb: Add Boolean parameter to Check_Arg_Is_On_Or_Off to\n+\talso allow ALL. Set Opt.Ada_Version appropriately for ALL or ON\n+\targuments.\n+\t* sem_prag.adb: Allowed ALL argument for an Extensions_Allowed\n+\tpragma. Set Opt.Ada_Version appropriately for ALL or ON arguments.\n+\t* switch-c.adb: The -gnatX switch now enables only the curated\n+\tsubset of language extensions (formerly it enabled all of them);\n+\tthe new -gnatX0 switch enables all of them.\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n+\tDocument new \"-gnatX0\" switch and update documentation for\n+\t\"-gnatX\" switch.\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Document new ALL\n+\targument for pragma Extensions_Allowed and update documentation\n+\tfor the ON argument. Delete mention of Ada 2022 Reduce attribute\n+\tas an extension.\n+\t* gnat_rm.texi, gnat_ugn.texi: Regenerate.\n+\n+2022-11-04  Steve Baird  <baird@adacore.com>\n+\n+\t* bindgen.adb: Introduce two new string constants for the names of\n+\tthe C-String variables that are assigned the names for adainit and\n+\tadafinal. Replace string literals in Gen_CUDA_Init with references\n+\tto these constants. In Gen_CUDA_Defs, generate C-String variable\n+\tdeclarations where these constants are the names of the variables.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch9.adb (Satisfies_Lock_Free_Requirements): Ignore\n+\treferences to global variables inserted due to pragma\n+\tInitialize_Scalars.\n+\n+2022-11-04  Cedric Landet  <landet@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Remove VxWorks\n+\tversion 6.\n+\t* gnat_rm.texi, gnat_ugn.texi: Regenerate.\n+\n+2022-11-04  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch9.adb (Satisfies_Lock_Free_Requirements): Detect\n+\treferences via expanded names.\n+\n+2022-11-04  Steve Baird  <baird@adacore.com>\n+\n+\t* bindgen.adb\n+\t(Gen_CUDA_Init): Move existing loop body into a new local\n+\tprocedure, Gen_CUDA_Register_Function_Call, and replace that loop\n+\tbody with a call to this procedure. This first part is just\n+\tsemantics-preserving refactoring. The second part is to add\n+\tGen_CUDA_Register_Function_Call calls after the loop for the\n+\tdevice-side adainit and adafinal procedures.\n+\n 2022-10-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* libgnat/system-linux-sparc.ads (Support_Atomic_Primitives): New\n@@ -1213,7 +2590,7 @@\n 2022-09-05  Martin Liska  <mliska@suse.cz>\n \n \t* sigtramp-vxworks-target.h: Rename DBX_REGISTER_NUMBER to\n-\t  DEBUGGER_REGNO.\n+\tDEBUGGER_REGNO.\n \n 2022-09-05  Piotr Trojanek  <trojanek@adacore.com>\n "}, {"sha": "3162806c38f25d033a6286989549bc36ab96e36e", "filename": "gcc/ada/accessibility.adb", "status": "added", "additions": 2305, "deletions": 0, "changes": 2305, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Faccessibility.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Faccessibility.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faccessibility.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -0,0 +1,2305 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                        A C C E S S I B I L I T Y                         --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 2022-2022, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Atree;          use Atree;\n+with Checks;         use Checks;\n+with Debug;          use Debug;\n+with Einfo;          use Einfo;\n+with Einfo.Entities; use Einfo.Entities;\n+with Elists;         use Elists;\n+with Errout;         use Errout;\n+with Einfo.Utils;    use Einfo.Utils;\n+with Exp_Atag;       use Exp_Atag;\n+with Exp_Ch3;        use Exp_Ch3;\n+with Exp_Ch7;        use Exp_Ch7;\n+with Exp_Tss;        use Exp_Tss;\n+with Exp_Util;       use Exp_Util;\n+with Namet;          use Namet;\n+with Nlists;         use Nlists;\n+with Nmake;          use Nmake;\n+with Opt;            use Opt;\n+with Restrict;       use Restrict;\n+with Rtsfind;        use Rtsfind;\n+with Sem;            use Sem;\n+with Sem_Aux;        use Sem_Aux;\n+with Sem_Ch8;        use Sem_Ch8;\n+with Sem_Res;        use Sem_Res;\n+with Sem_Util;       use Sem_Util;\n+with Sinfo;          use Sinfo;\n+with Sinfo.Nodes;    use Sinfo.Nodes;\n+with Sinfo.Utils;    use Sinfo.Utils;\n+with Snames;         use Snames;\n+with Stand;          use Stand;\n+with Tbuild;         use Tbuild;\n+\n+package body Accessibility is\n+\n+   ---------------------------\n+   -- Accessibility_Message --\n+   ---------------------------\n+\n+   procedure Accessibility_Message (N : Node_Id; Typ : Entity_Id) is\n+      Loc   : constant Source_Ptr := Sloc (N);\n+      P     : constant Node_Id    := Prefix (N);\n+      Indic : Node_Id             := Parent (Parent (N));\n+\n+   begin\n+      --  In an instance, this is a runtime check, but one we know will fail,\n+      --  so generate an appropriate warning.\n+\n+      if In_Instance_Body then\n+         Error_Msg_Warn := SPARK_Mode /= On;\n+         Error_Msg_F\n+           (\"non-local pointer cannot point to local object<<\", P);\n+         Error_Msg_F (\"\\Program_Error [<<\", P);\n+         Rewrite (N,\n+           Make_Raise_Program_Error (Loc,\n+             Reason => PE_Accessibility_Check_Failed));\n+         Set_Etype (N, Typ);\n+         return;\n+\n+      else\n+         Error_Msg_F (\"non-local pointer cannot point to local object\", P);\n+\n+         --  Check for case where we have a missing access definition\n+\n+         if Is_Record_Type (Current_Scope)\n+           and then\n+             Nkind (Parent (N)) in N_Discriminant_Association\n+                                 | N_Index_Or_Discriminant_Constraint\n+         then\n+            Indic := Parent (Parent (N));\n+            while Present (Indic)\n+              and then Nkind (Indic) /= N_Subtype_Indication\n+            loop\n+               Indic := Parent (Indic);\n+            end loop;\n+\n+            if Present (Indic) then\n+               Error_Msg_NE\n+                 (\"\\use an access definition for\" &\n+                  \" the access discriminant of&\",\n+                  N, Entity (Subtype_Mark (Indic)));\n+            end if;\n+         end if;\n+      end if;\n+   end Accessibility_Message;\n+\n+   -------------------------\n+   -- Accessibility_Level --\n+   -------------------------\n+\n+   function Accessibility_Level\n+     (Expr              : Node_Id;\n+      Level             : Accessibility_Level_Kind;\n+      In_Return_Context : Boolean := False;\n+      Allow_Alt_Model   : Boolean := True) return Node_Id\n+   is\n+      Loc : constant Source_Ptr := Sloc (Expr);\n+\n+      function Accessibility_Level (Expr : Node_Id) return Node_Id\n+        is (Accessibility_Level (Expr, Level, In_Return_Context));\n+      --  Renaming of the enclosing function to facilitate recursive calls\n+\n+      function Make_Level_Literal (Level : Uint) return Node_Id;\n+      --  Construct an integer literal representing an accessibility level with\n+      --  its type set to Natural.\n+\n+      function Innermost_Master_Scope_Depth (N : Node_Id) return Uint;\n+      --  Returns the scope depth of the given node's innermost enclosing scope\n+      --  (effectively the accessibility level of the innermost enclosing\n+      --  master).\n+\n+      function Function_Call_Or_Allocator_Level (N : Node_Id) return Node_Id;\n+      --  Centralized processing of subprogram calls which may appear in prefix\n+      --  notation.\n+\n+      function Typ_Access_Level (Typ : Entity_Id) return Uint\n+        is (Type_Access_Level (Typ, Allow_Alt_Model));\n+      --  Renaming of Type_Access_Level with Allow_Alt_Model specified to avoid\n+      --  passing the parameter specifically in every call.\n+\n+      ----------------------------------\n+      -- Innermost_Master_Scope_Depth --\n+      ----------------------------------\n+\n+      function Innermost_Master_Scope_Depth (N : Node_Id) return Uint is\n+         Encl_Scop           : Entity_Id;\n+         Ent                 : Entity_Id;\n+         Node_Par            : Node_Id := Parent (N);\n+         Master_Lvl_Modifier : Int     := 0;\n+\n+      begin\n+         --  Locate the nearest enclosing node (by traversing Parents)\n+         --  that Defining_Entity can be applied to, and return the\n+         --  depth of that entity's nearest enclosing scope.\n+\n+         --  The RM 7.6.1(3) definition of \"master\" includes statements\n+         --  and conditions for loops among other things. Are these cases\n+         --  detected properly ???\n+\n+         while Present (Node_Par) loop\n+            Ent := Defining_Entity_Or_Empty (Node_Par);\n+\n+            if Present (Ent) then\n+               Encl_Scop := Find_Enclosing_Scope (Ent);\n+\n+               --  Ignore transient scopes made during expansion while also\n+               --  taking into account certain expansions - like iterators\n+               --  which get expanded into renamings and thus not marked\n+               --  as coming from source.\n+\n+               if Comes_From_Source (Node_Par)\n+                 or else (Nkind (Node_Par) = N_Object_Renaming_Declaration\n+                           and then Comes_From_Iterator (Node_Par))\n+               then\n+                  --  Note that in some rare cases the scope depth may not be\n+                  --  set, for example, when we are in the middle of analyzing\n+                  --  a type and the enclosing scope is said type. So, instead,\n+                  --  continue to move up the parent chain since the scope\n+                  --  depth of the type's parent is the same as that of the\n+                  --  type.\n+\n+                  if not Scope_Depth_Set (Encl_Scop) then\n+                     pragma Assert (Nkind (Parent (Encl_Scop))\n+                                     = N_Full_Type_Declaration);\n+                  else\n+                     return\n+                       Scope_Depth (Encl_Scop) + Master_Lvl_Modifier;\n+                  end if;\n+               end if;\n+\n+            --  For a return statement within a function, return\n+            --  the depth of the function itself. This is not just\n+            --  a small optimization, but matters when analyzing\n+            --  the expression in an expression function before\n+            --  the body is created.\n+\n+            elsif Nkind (Node_Par) in N_Extended_Return_Statement\n+                                    | N_Simple_Return_Statement\n+            then\n+               return Scope_Depth (Enclosing_Subprogram (Node_Par));\n+\n+            --  Statements are counted as masters\n+\n+            elsif Is_Master (Node_Par) then\n+               Master_Lvl_Modifier := Master_Lvl_Modifier + 1;\n+\n+            end if;\n+\n+            Node_Par := Parent (Node_Par);\n+         end loop;\n+\n+         --  Should never reach the following return\n+\n+         pragma Assert (False);\n+\n+         return Scope_Depth (Current_Scope) + 1;\n+      end Innermost_Master_Scope_Depth;\n+\n+      ------------------------\n+      -- Make_Level_Literal --\n+      ------------------------\n+\n+      function Make_Level_Literal (Level : Uint) return Node_Id is\n+         Result : constant Node_Id := Make_Integer_Literal (Loc, Level);\n+\n+      begin\n+         Set_Etype (Result, Standard_Natural);\n+         return Result;\n+      end Make_Level_Literal;\n+\n+      --------------------------------------\n+      -- Function_Call_Or_Allocator_Level --\n+      --------------------------------------\n+\n+      function Function_Call_Or_Allocator_Level (N : Node_Id) return Node_Id is\n+         Par      : Node_Id;\n+         Prev_Par : Node_Id;\n+      begin\n+         --  Results of functions are objects, so we either get the\n+         --  accessibility of the function or, in case of a call which is\n+         --  indirect, the level of the access-to-subprogram type.\n+\n+         --  This code looks wrong ???\n+\n+         if Nkind (N) = N_Function_Call\n+           and then Ada_Version < Ada_2005\n+         then\n+            if Is_Entity_Name (Name (N)) then\n+               return Make_Level_Literal\n+                        (Subprogram_Access_Level (Entity (Name (N))));\n+            else\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (Prefix (Name (N)))));\n+            end if;\n+\n+         --  We ignore coextensions as they cannot be implemented under the\n+         --  \"small-integer\" model.\n+\n+         elsif Nkind (N) = N_Allocator\n+           and then (Is_Static_Coextension (N)\n+                      or else Is_Dynamic_Coextension (N))\n+         then\n+            return Make_Level_Literal (Scope_Depth (Standard_Standard));\n+         end if;\n+\n+         --  Named access types have a designated level\n+\n+         if Is_Named_Access_Type (Etype (N)) then\n+            return Make_Level_Literal (Typ_Access_Level (Etype (N)));\n+\n+         --  Otherwise, the level is dictated by RM 3.10.2 (10.7/3)\n+\n+         else\n+            --  Check No_Dynamic_Accessibility_Checks restriction override for\n+            --  alternative accessibility model.\n+\n+            if Allow_Alt_Model\n+              and then No_Dynamic_Accessibility_Checks_Enabled (N)\n+              and then Is_Anonymous_Access_Type (Etype (N))\n+            then\n+               --  In the alternative model the level is that of the\n+               --  designated type.\n+\n+               if Debug_Flag_Underscore_B then\n+                  return Make_Level_Literal (Typ_Access_Level (Etype (N)));\n+\n+               --  For function calls the level is that of the innermost\n+               --  master, otherwise (for allocators etc.) we get the level\n+               --  of the corresponding anonymous access type, which is\n+               --  calculated through the normal path of execution.\n+\n+               elsif Nkind (N) = N_Function_Call then\n+                  return Make_Level_Literal\n+                           (Innermost_Master_Scope_Depth (Expr));\n+               end if;\n+            end if;\n+\n+            if Nkind (N) = N_Function_Call then\n+               --  Dynamic checks are generated when we are within a return\n+               --  value or we are in a function call within an anonymous\n+               --  access discriminant constraint of a return object (signified\n+               --  by In_Return_Context) on the side of the callee.\n+\n+               --  So, in this case, return accessibility level of the\n+               --  enclosing subprogram.\n+\n+               if In_Return_Value (N)\n+                 or else In_Return_Context\n+               then\n+                  return Make_Level_Literal\n+                           (Subprogram_Access_Level (Current_Subprogram));\n+               end if;\n+            end if;\n+\n+            --  When the call is being dereferenced the level is that of the\n+            --  enclosing master of the dereferenced call.\n+\n+            if Nkind (Parent (N)) in N_Explicit_Dereference\n+                                   | N_Indexed_Component\n+                                   | N_Selected_Component\n+            then\n+               return Make_Level_Literal\n+                        (Innermost_Master_Scope_Depth (Expr));\n+            end if;\n+\n+            --  Find any relevant enclosing parent nodes that designate an\n+            --  object being initialized.\n+\n+            --  Note: The above is only relevant if the result is used \"in its\n+            --  entirety\" as RM 3.10.2 (10.2/3) states. However, this is\n+            --  accounted for in the case statement in the main body of\n+            --  Accessibility_Level for N_Selected_Component.\n+\n+            Par      := Parent (Expr);\n+            Prev_Par := Empty;\n+            while Present (Par) loop\n+               --  Detect an expanded implicit conversion, typically this\n+               --  occurs on implicitly converted actuals in calls.\n+\n+               --  Does this catch all implicit conversions ???\n+\n+               if Nkind (Par) = N_Type_Conversion\n+                 and then Is_Named_Access_Type (Etype (Par))\n+               then\n+                  return Make_Level_Literal\n+                           (Typ_Access_Level (Etype (Par)));\n+               end if;\n+\n+               --  Jump out when we hit an object declaration or the right-hand\n+               --  side of an assignment, or a construct such as an aggregate\n+               --  subtype indication which would be the result is not used\n+               --  \"in its entirety.\"\n+\n+               exit when Nkind (Par) in N_Object_Declaration\n+                           or else (Nkind (Par) = N_Assignment_Statement\n+                                     and then Name (Par) /= Prev_Par);\n+\n+               Prev_Par := Par;\n+               Par      := Parent (Par);\n+            end loop;\n+\n+            --  Assignment statements are handled in a similar way in\n+            --  accordance to the left-hand part. However, strictly speaking,\n+            --  this is illegal according to the RM, but this change is needed\n+            --  to pass an ACATS C-test and is useful in general ???\n+\n+            case Nkind (Par) is\n+               when N_Object_Declaration =>\n+                  return Make_Level_Literal\n+                           (Scope_Depth\n+                             (Scope (Defining_Identifier (Par))));\n+\n+               when N_Assignment_Statement =>\n+                  --  Return the accessibility level of the left-hand part\n+\n+                  return Accessibility_Level\n+                           (Expr              => Name (Par),\n+                            Level             => Object_Decl_Level,\n+                            In_Return_Context => In_Return_Context);\n+\n+               when others =>\n+                  return Make_Level_Literal\n+                           (Innermost_Master_Scope_Depth (Expr));\n+            end case;\n+         end if;\n+      end Function_Call_Or_Allocator_Level;\n+\n+      --  Local variables\n+\n+      E   : Node_Id := Original_Node (Expr);\n+      Pre : Node_Id;\n+\n+   --  Start of processing for Accessibility_Level\n+\n+   begin\n+      --  We could be looking at a reference to a formal due to the expansion\n+      --  of entries and other cases, so obtain the renaming if necessary.\n+\n+      if Present (Param_Entity (Expr)) then\n+         E := Param_Entity (Expr);\n+      end if;\n+\n+      --  Extract the entity\n+\n+      if Nkind (E) in N_Has_Entity and then Present (Entity (E)) then\n+         E := Entity (E);\n+\n+         --  Deal with a possible renaming of a private protected component\n+\n+         if Ekind (E) in E_Constant | E_Variable and then Is_Prival (E) then\n+            E := Prival_Link (E);\n+         end if;\n+      end if;\n+\n+      --  Perform the processing on the expression\n+\n+      case Nkind (E) is\n+         --  The level of an aggregate is that of the innermost master that\n+         --  evaluates it as defined in RM 3.10.2 (10/4).\n+\n+         when N_Aggregate =>\n+            return Make_Level_Literal (Innermost_Master_Scope_Depth (Expr));\n+\n+         --  The accessibility level is that of the access type, except for an\n+         --  anonymous allocators which have special rules defined in RM 3.10.2\n+         --  (14/3).\n+\n+         when N_Allocator =>\n+            return Function_Call_Or_Allocator_Level (E);\n+\n+         --  We could reach this point for two reasons. Either the expression\n+         --  applies to a special attribute ('Loop_Entry, 'Result, or 'Old), or\n+         --  we are looking at the access attributes directly ('Access,\n+         --  'Address, or 'Unchecked_Access).\n+\n+         when N_Attribute_Reference =>\n+            Pre := Original_Node (Prefix (E));\n+\n+            --  Regular 'Access attribute presence means we have to look at the\n+            --  prefix.\n+\n+            if Attribute_Name (E) = Name_Access then\n+               return Accessibility_Level (Prefix (E));\n+\n+            --  Unchecked or unrestricted attributes have unlimited depth\n+\n+            elsif Attribute_Name (E) in Name_Address\n+                                      | Name_Unchecked_Access\n+                                      | Name_Unrestricted_Access\n+            then\n+               return Make_Level_Literal (Scope_Depth (Standard_Standard));\n+\n+            --  'Access can be taken further against other special attributes,\n+            --  so handle these cases explicitly.\n+\n+            elsif Attribute_Name (E)\n+                    in Name_Old | Name_Loop_Entry | Name_Result\n+            then\n+               --  Named access types\n+\n+               if Is_Named_Access_Type (Etype (Pre)) then\n+                  return Make_Level_Literal\n+                           (Typ_Access_Level (Etype (Pre)));\n+\n+               --  Anonymous access types\n+\n+               elsif Nkind (Pre) in N_Has_Entity\n+                 and then Ekind (Entity (Pre)) not in Subprogram_Kind\n+                 and then Present (Get_Dynamic_Accessibility (Entity (Pre)))\n+                 and then Level = Dynamic_Level\n+               then\n+                  return New_Occurrence_Of\n+                           (Get_Dynamic_Accessibility (Entity (Pre)), Loc);\n+\n+               --  Otherwise the level is treated in a similar way as\n+               --  aggregates according to RM 6.1.1 (35.1/4) which concerns\n+               --  an implicit constant declaration - in turn defining the\n+               --  accessibility level to be that of the implicit constant\n+               --  declaration.\n+\n+               else\n+                  return Make_Level_Literal\n+                           (Innermost_Master_Scope_Depth (Expr));\n+               end if;\n+\n+            else\n+               raise Program_Error;\n+            end if;\n+\n+         --  This is the \"base case\" for accessibility level calculations which\n+         --  means we are near the end of our recursive traversal.\n+\n+         when N_Defining_Identifier =>\n+            --  A dynamic check is performed on the side of the callee when we\n+            --  are within a return statement, so return a library-level\n+            --  accessibility level to null out checks on the side of the\n+            --  caller.\n+\n+            if Is_Explicitly_Aliased (E)\n+              and then (In_Return_Context\n+                         or else (Level /= Dynamic_Level\n+                                   and then In_Return_Value (Expr)))\n+            then\n+               return Make_Level_Literal (Scope_Depth (Standard_Standard));\n+\n+            --  Something went wrong and an extra accessibility formal has not\n+            --  been generated when one should have ???\n+\n+            elsif Is_Formal (E)\n+              and then No (Get_Dynamic_Accessibility (E))\n+              and then Ekind (Etype (E)) = E_Anonymous_Access_Type\n+            then\n+               return Make_Level_Literal (Scope_Depth (Standard_Standard));\n+\n+            --  Stand-alone object of an anonymous access type \"SAOAAT\"\n+\n+            elsif (Is_Formal (E)\n+                    or else Ekind (E) in E_Variable\n+                                       | E_Constant)\n+              and then Present (Get_Dynamic_Accessibility (E))\n+              and then (Level = Dynamic_Level\n+                         or else Level = Zero_On_Dynamic_Level)\n+            then\n+               if Level = Zero_On_Dynamic_Level then\n+                  return Make_Level_Literal\n+                           (Scope_Depth (Standard_Standard));\n+               end if;\n+\n+               --  No_Dynamic_Accessibility_Checks restriction override for\n+               --  alternative accessibility model.\n+\n+               if Allow_Alt_Model\n+                 and then No_Dynamic_Accessibility_Checks_Enabled (E)\n+               then\n+                  --  In the alternative model the level is that of the\n+                  --  designated type entity's context.\n+\n+                  if Debug_Flag_Underscore_B then\n+                     return Make_Level_Literal (Typ_Access_Level (Etype (E)));\n+\n+                  --  Otherwise the level depends on the entity's context\n+\n+                  elsif Is_Formal (E) then\n+                     return Make_Level_Literal\n+                              (Subprogram_Access_Level\n+                                (Enclosing_Subprogram (E)));\n+                  else\n+                     return Make_Level_Literal\n+                              (Scope_Depth (Enclosing_Dynamic_Scope (E)));\n+                  end if;\n+               end if;\n+\n+               --  Return the dynamic level in the normal case\n+\n+               return New_Occurrence_Of\n+                        (Get_Dynamic_Accessibility (E), Loc);\n+\n+            --  Initialization procedures have a special extra accessibility\n+            --  parameter associated with the level at which the object\n+            --  being initialized exists\n+\n+            elsif Ekind (E) = E_Record_Type\n+              and then Is_Limited_Record (E)\n+              and then Current_Scope = Init_Proc (E)\n+              and then Present (Init_Proc_Level_Formal (Current_Scope))\n+            then\n+               return New_Occurrence_Of\n+                        (Init_Proc_Level_Formal (Current_Scope), Loc);\n+\n+            --  Current instance of the type is deeper than that of the type\n+            --  according to RM 3.10.2 (21).\n+\n+            elsif Is_Type (E) then\n+               --  When restriction No_Dynamic_Accessibility_Checks is active\n+               --  along with -gnatd_b.\n+\n+               if Allow_Alt_Model\n+                 and then No_Dynamic_Accessibility_Checks_Enabled (E)\n+                 and then Debug_Flag_Underscore_B\n+               then\n+                  return Make_Level_Literal (Typ_Access_Level (E));\n+               end if;\n+\n+               --  Normal path\n+\n+               return Make_Level_Literal (Typ_Access_Level (E) + 1);\n+\n+            --  Move up the renamed entity or object if it came from source\n+            --  since expansion may have created a dummy renaming under\n+            --  certain circumstances.\n+\n+            --  Note: We check if the original node of the renaming comes\n+            --  from source because the node may have been rewritten.\n+\n+            elsif Present (Renamed_Entity_Or_Object (E))\n+              and then Comes_From_Source\n+                (Original_Node (Renamed_Entity_Or_Object (E)))\n+            then\n+               return Accessibility_Level (Renamed_Entity_Or_Object (E));\n+\n+            --  Named access types get their level from their associated type\n+\n+            elsif Is_Named_Access_Type (Etype (E)) then\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (E)));\n+\n+            --  Check if E is an expansion-generated renaming of an iterator\n+            --  by examining Related_Expression. If so, determine the\n+            --  accessibility level based on the original expression.\n+\n+            elsif Ekind (E) in E_Constant | E_Variable\n+              and then Present (Related_Expression (E))\n+            then\n+               return Accessibility_Level (Related_Expression (E));\n+\n+            elsif Level = Dynamic_Level\n+               and then Ekind (E) in E_In_Parameter | E_In_Out_Parameter\n+               and then Present (Init_Proc_Level_Formal (Scope (E)))\n+            then\n+               return New_Occurrence_Of\n+                        (Init_Proc_Level_Formal (Scope (E)), Loc);\n+\n+            --  Normal object - get the level of the enclosing scope\n+\n+            else\n+               return Make_Level_Literal\n+                        (Scope_Depth (Enclosing_Dynamic_Scope (E)));\n+            end if;\n+\n+         --  Handle indexed and selected components including the special cases\n+         --  whereby there is an implicit dereference, a component of a\n+         --  composite type, or a function call in prefix notation.\n+\n+         --  We don't handle function calls in prefix notation correctly ???\n+\n+         when N_Indexed_Component | N_Selected_Component | N_Slice =>\n+            Pre := Prefix (E);\n+\n+            --  Fetch the original node when the prefix comes from the result\n+            --  of expanding a function call since we want to find the level\n+            --  of the original source call.\n+\n+            if not Comes_From_Source (Pre)\n+              and then Nkind (Original_Node (Pre)) = N_Function_Call\n+            then\n+               Pre := Original_Node (Pre);\n+            end if;\n+\n+            --  When E is an indexed component or selected component and\n+            --  the current Expr is a function call, we know that we are\n+            --  looking at an expanded call in prefix notation.\n+\n+            if Nkind (Expr) = N_Function_Call then\n+               return Function_Call_Or_Allocator_Level (Expr);\n+\n+            --  If the prefix is a named access type, then we are dealing\n+            --  with an implicit deferences. In that case the level is that\n+            --  of the named access type in the prefix.\n+\n+            elsif Is_Named_Access_Type (Etype (Pre)) then\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (Pre)));\n+\n+            --  The current expression is a named access type, so there is no\n+            --  reason to look at the prefix. Instead obtain the level of E's\n+            --  named access type.\n+\n+            elsif Is_Named_Access_Type (Etype (E)) then\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (E)));\n+\n+            --  A nondiscriminant selected component where the component\n+            --  is an anonymous access type means that its associated\n+            --  level is that of the containing type - see RM 3.10.2 (16).\n+\n+            --  Note that when restriction No_Dynamic_Accessibility_Checks is\n+            --  in effect we treat discriminant components as regular\n+            --  components.\n+\n+            elsif\n+              (Nkind (E) = N_Selected_Component\n+                and then Ekind (Etype (E))   =  E_Anonymous_Access_Type\n+                and then Ekind (Etype (Pre)) /= E_Anonymous_Access_Type\n+                and then (not (Nkind (Selector_Name (E)) in N_Has_Entity\n+                                and then Ekind (Entity (Selector_Name (E)))\n+                                           = E_Discriminant)\n+\n+                           --  The alternative accessibility models both treat\n+                           --  discriminants as regular components.\n+\n+                           or else (No_Dynamic_Accessibility_Checks_Enabled (E)\n+                                     and then Allow_Alt_Model)))\n+\n+              --  Arrays featuring components of anonymous access components\n+              --  get their corresponding level from their containing type's\n+              --  declaration.\n+\n+              or else\n+                (Nkind (E) = N_Indexed_Component\n+                  and then Ekind (Etype (E)) = E_Anonymous_Access_Type\n+                  and then Ekind (Etype (Pre)) in Array_Kind\n+                  and then Ekind (Component_Type (Base_Type (Etype (Pre))))\n+                             = E_Anonymous_Access_Type)\n+            then\n+               --  When restriction No_Dynamic_Accessibility_Checks is active\n+               --  and -gnatd_b set, the level is that of the designated type.\n+\n+               if Allow_Alt_Model\n+                 and then No_Dynamic_Accessibility_Checks_Enabled (E)\n+                 and then Debug_Flag_Underscore_B\n+               then\n+                  return Make_Level_Literal\n+                           (Typ_Access_Level (Etype (E)));\n+               end if;\n+\n+               --  Otherwise proceed normally\n+\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (Prefix (E))));\n+\n+            --  The accessibility calculation routine that handles function\n+            --  calls (Function_Call_Level) assumes, in the case the\n+            --  result is of an anonymous access type, that the result will be\n+            --  used \"in its entirety\" when the call is present within an\n+            --  assignment or object declaration.\n+\n+            --  To properly handle cases where the result is not used in its\n+            --  entirety, we test if the prefix of the component in question is\n+            --  a function call, which tells us that one of its components has\n+            --  been identified and is being accessed. Therefore we can\n+            --  conclude that the result is not used \"in its entirety\"\n+            --  according to RM 3.10.2 (10.2/3).\n+\n+            elsif Nkind (Pre) = N_Function_Call\n+              and then not Is_Named_Access_Type (Etype (Pre))\n+            then\n+               --  Dynamic checks are generated when we are within a return\n+               --  value or we are in a function call within an anonymous\n+               --  access discriminant constraint of a return object (signified\n+               --  by In_Return_Context) on the side of the callee.\n+\n+               --  So, in this case, return a library accessibility level to\n+               --  null out the check on the side of the caller.\n+\n+               if (In_Return_Value (E)\n+                    or else In_Return_Context)\n+                 and then Level /= Dynamic_Level\n+               then\n+                  return Make_Level_Literal\n+                           (Scope_Depth (Standard_Standard));\n+               end if;\n+\n+               return Make_Level_Literal\n+                        (Innermost_Master_Scope_Depth (Expr));\n+\n+            --  Otherwise, continue recursing over the expression prefixes\n+\n+            else\n+               return Accessibility_Level (Prefix (E));\n+            end if;\n+\n+         --  Qualified expressions\n+\n+         when N_Qualified_Expression =>\n+            if Is_Named_Access_Type (Etype (E)) then\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (E)));\n+            else\n+               return Accessibility_Level (Expression (E));\n+            end if;\n+\n+         --  Handle function calls\n+\n+         when N_Function_Call =>\n+            return Function_Call_Or_Allocator_Level (E);\n+\n+         --  Explicit dereference accessibility level calculation\n+\n+         when N_Explicit_Dereference =>\n+            Pre := Original_Node (Prefix (E));\n+\n+            --  The prefix is a named access type so the level is taken from\n+            --  its type.\n+\n+            if Is_Named_Access_Type (Etype (Pre)) then\n+               return Make_Level_Literal (Typ_Access_Level (Etype (Pre)));\n+\n+            --  Otherwise, recurse deeper\n+\n+            else\n+               return Accessibility_Level (Prefix (E));\n+            end if;\n+\n+         --  Type conversions\n+\n+         when N_Type_Conversion | N_Unchecked_Type_Conversion =>\n+            --  View conversions are special in that they require use to\n+            --  inspect the expression of the type conversion.\n+\n+            --  Allocators of anonymous access types are internally generated,\n+            --  so recurse deeper in that case as well.\n+\n+            if Is_View_Conversion (E)\n+              or else Ekind (Etype (E)) = E_Anonymous_Access_Type\n+            then\n+               return Accessibility_Level (Expression (E));\n+\n+            --  We don't care about the master if we are looking at a named\n+            --  access type.\n+\n+            elsif Is_Named_Access_Type (Etype (E)) then\n+               return Make_Level_Literal\n+                        (Typ_Access_Level (Etype (E)));\n+\n+            --  In section RM 3.10.2 (10/4) the accessibility rules for\n+            --  aggregates and value conversions are outlined. Are these\n+            --  followed in the case of initialization of an object ???\n+\n+            --  Should use Innermost_Master_Scope_Depth ???\n+\n+            else\n+               return Accessibility_Level (Current_Scope);\n+            end if;\n+\n+         --  Default to the type accessibility level for the type of the\n+         --  expression's entity.\n+\n+         when others =>\n+            return Make_Level_Literal (Typ_Access_Level (Etype (E)));\n+      end case;\n+   end Accessibility_Level;\n+\n+   -------------------------------\n+   -- Apply_Accessibility_Check --\n+   -------------------------------\n+\n+   procedure Apply_Accessibility_Check\n+     (N           : Node_Id;\n+      Typ         : Entity_Id;\n+      Insert_Node : Node_Id)\n+   is\n+      Loc : constant Source_Ptr := Sloc (N);\n+\n+      Check_Cond  : Node_Id;\n+      Param_Ent   : Entity_Id := Param_Entity (N);\n+      Param_Level : Node_Id;\n+      Type_Level  : Node_Id;\n+\n+   begin\n+      --  Verify we haven't tried to add a dynamic accessibility check when we\n+      --  shouldn't.\n+\n+      pragma Assert (not No_Dynamic_Accessibility_Checks_Enabled (N));\n+\n+      if Ada_Version >= Ada_2012\n+         and then No (Param_Ent)\n+         and then Is_Entity_Name (N)\n+         and then Ekind (Entity (N)) in E_Constant | E_Variable\n+         and then Present (Effective_Extra_Accessibility (Entity (N)))\n+      then\n+         Param_Ent := Entity (N);\n+         while Present (Renamed_Object (Param_Ent)) loop\n+            --  Renamed_Object must return an Entity_Name here\n+            --  because of preceding \"Present (E_E_A (...))\" test.\n+\n+            Param_Ent := Entity (Renamed_Object (Param_Ent));\n+         end loop;\n+      end if;\n+\n+      if Inside_A_Generic then\n+         return;\n+\n+      --  Only apply the run-time check if the access parameter has an\n+      --  associated extra access level parameter and when accessibility checks\n+      --  are enabled.\n+\n+      elsif Present (Param_Ent)\n+         and then Present (Get_Dynamic_Accessibility (Param_Ent))\n+         and then not Accessibility_Checks_Suppressed (Param_Ent)\n+         and then not Accessibility_Checks_Suppressed (Typ)\n+      then\n+         --  Obtain the parameter's accessibility level\n+\n+         Param_Level :=\n+           New_Occurrence_Of (Get_Dynamic_Accessibility (Param_Ent), Loc);\n+\n+         --  Use the dynamic accessibility parameter for the function's result\n+         --  when one has been created instead of statically referring to the\n+         --  deepest type level so as to appropriatly handle the rules for\n+         --  RM 3.10.2 (10.1/3).\n+\n+         if Ekind (Scope (Param_Ent)) = E_Function\n+           and then In_Return_Value (N)\n+           and then Ekind (Typ) = E_Anonymous_Access_Type\n+         then\n+            --  Associate the level of the result type to the extra result\n+            --  accessibility parameter belonging to the current function.\n+\n+            if Present (Extra_Accessibility_Of_Result (Scope (Param_Ent))) then\n+               Type_Level :=\n+                 New_Occurrence_Of\n+                   (Extra_Accessibility_Of_Result (Scope (Param_Ent)), Loc);\n+\n+            --  In Ada 2005 and earlier modes, a result extra accessibility\n+            --  parameter is not generated and no dynamic check is performed.\n+\n+            else\n+               return;\n+            end if;\n+\n+         --  Otherwise get the type's accessibility level normally\n+\n+         else\n+            Type_Level :=\n+              Make_Integer_Literal (Loc, Deepest_Type_Access_Level (Typ));\n+         end if;\n+\n+         --  Raise Program_Error if the accessibility level of the access\n+         --  parameter is deeper than the level of the target access type.\n+\n+         Check_Cond :=\n+           Make_Op_Gt (Loc,\n+             Left_Opnd  => Param_Level,\n+             Right_Opnd => Type_Level);\n+\n+         Insert_Action (Insert_Node,\n+           Make_Raise_Program_Error (Loc,\n+             Condition => Check_Cond,\n+             Reason    => PE_Accessibility_Check_Failed));\n+\n+         Analyze_And_Resolve (N);\n+\n+         --  If constant folding has happened on the condition for the\n+         --  generated error, then warn about it being unconditional.\n+\n+         if Nkind (Check_Cond) = N_Identifier\n+           and then Entity (Check_Cond) = Standard_True\n+         then\n+            Error_Msg_Warn := SPARK_Mode /= On;\n+            Error_Msg_N (\"accessibility check fails<<\", N);\n+            Error_Msg_N (\"\\Program_Error [<<\", N);\n+         end if;\n+      end if;\n+   end Apply_Accessibility_Check;\n+\n+   ---------------------------------------------\n+   -- Apply_Accessibility_Check_For_Allocator --\n+   ---------------------------------------------\n+\n+   procedure Apply_Accessibility_Check_For_Allocator\n+     (N              : Node_Id;\n+      Exp            : Node_Id;\n+      Ref            : Node_Id;\n+      Built_In_Place : Boolean := False)\n+   is\n+      Loc       : constant Source_Ptr := Sloc (N);\n+      PtrT      : constant Entity_Id  := Etype (N);\n+      DesigT    : constant Entity_Id  := Designated_Type (PtrT);\n+      Pool_Id   : constant Entity_Id  := Associated_Storage_Pool (PtrT);\n+      Cond      : Node_Id;\n+      Fin_Call  : Node_Id;\n+      Free_Stmt : Node_Id;\n+      Obj_Ref   : Node_Id;\n+      Stmts     : List_Id;\n+\n+   begin\n+      if Ada_Version >= Ada_2005\n+        and then Is_Class_Wide_Type (DesigT)\n+        and then Tagged_Type_Expansion\n+        and then not Scope_Suppress.Suppress (Accessibility_Check)\n+        and then not No_Dynamic_Accessibility_Checks_Enabled (Ref)\n+        and then\n+          (Type_Access_Level (Etype (Exp)) > Type_Access_Level (PtrT)\n+            or else\n+              (Is_Class_Wide_Type (Etype (Exp))\n+                and then Scope (PtrT) /= Current_Scope))\n+      then\n+         --  If the allocator was built in place, Ref is already a reference\n+         --  to the access object initialized to the result of the allocator\n+         --  (see Exp_Ch6.Make_Build_In_Place_Call_In_Allocator). We call\n+         --  Remove_Side_Effects for cases where the build-in-place call may\n+         --  still be the prefix of the reference (to avoid generating\n+         --  duplicate calls). Otherwise, it is the entity associated with\n+         --  the object containing the address of the allocated object.\n+\n+         if Built_In_Place then\n+            Remove_Side_Effects (Ref);\n+            Obj_Ref := New_Copy_Tree (Ref);\n+         else\n+            Obj_Ref := New_Occurrence_Of (Ref, Loc);\n+         end if;\n+\n+         --  For access to interface types we must generate code to displace\n+         --  the pointer to the base of the object since the subsequent code\n+         --  references components located in the TSD of the object (which\n+         --  is associated with the primary dispatch table --see a-tags.ads)\n+         --  and also generates code invoking Free, which requires also a\n+         --  reference to the base of the unallocated object.\n+\n+         if Is_Interface (DesigT) and then Tagged_Type_Expansion then\n+            Obj_Ref :=\n+              Unchecked_Convert_To (Etype (Obj_Ref),\n+                Make_Function_Call (Loc,\n+                  Name                   =>\n+                    New_Occurrence_Of (RTE (RE_Base_Address), Loc),\n+                  Parameter_Associations => New_List (\n+                    Unchecked_Convert_To (RTE (RE_Address),\n+                      New_Copy_Tree (Obj_Ref)))));\n+         end if;\n+\n+         --  Step 1: Create the object clean up code\n+\n+         Stmts := New_List;\n+\n+         --  Deallocate the object if the accessibility check fails. This is\n+         --  done only on targets or profiles that support deallocation.\n+\n+         --    Free (Obj_Ref);\n+\n+         if RTE_Available (RE_Free) then\n+            Free_Stmt := Make_Free_Statement (Loc, New_Copy_Tree (Obj_Ref));\n+            Set_Storage_Pool (Free_Stmt, Pool_Id);\n+\n+            Append_To (Stmts, Free_Stmt);\n+\n+         --  The target or profile cannot deallocate objects\n+\n+         else\n+            Free_Stmt := Empty;\n+         end if;\n+\n+         --  Finalize the object if applicable. Generate:\n+\n+         --    [Deep_]Finalize (Obj_Ref.all);\n+\n+         if Needs_Finalization (DesigT)\n+           and then not No_Heap_Finalization (PtrT)\n+         then\n+            Fin_Call :=\n+              Make_Final_Call\n+                (Obj_Ref =>\n+                   Make_Explicit_Dereference (Loc, New_Copy (Obj_Ref)),\n+                 Typ     => DesigT);\n+\n+            --  Guard against a missing [Deep_]Finalize when the designated\n+            --  type was not properly frozen.\n+\n+            if No (Fin_Call) then\n+               Fin_Call := Make_Null_Statement (Loc);\n+            end if;\n+\n+            --  When the target or profile supports deallocation, wrap the\n+            --  finalization call in a block to ensure proper deallocation even\n+            --  if finalization fails. Generate:\n+\n+            --    begin\n+            --       <Fin_Call>\n+            --    exception\n+            --       when others =>\n+            --          <Free_Stmt>\n+            --          raise;\n+            --    end;\n+\n+            if Present (Free_Stmt) then\n+               Fin_Call :=\n+                 Make_Block_Statement (Loc,\n+                   Handled_Statement_Sequence =>\n+                     Make_Handled_Sequence_Of_Statements (Loc,\n+                       Statements => New_List (Fin_Call),\n+\n+                     Exception_Handlers => New_List (\n+                       Make_Exception_Handler (Loc,\n+                         Exception_Choices => New_List (\n+                           Make_Others_Choice (Loc)),\n+                         Statements        => New_List (\n+                           New_Copy_Tree (Free_Stmt),\n+                           Make_Raise_Statement (Loc))))));\n+            end if;\n+\n+            Prepend_To (Stmts, Fin_Call);\n+         end if;\n+\n+         --  Signal the accessibility failure through a Program_Error\n+\n+         Append_To (Stmts,\n+           Make_Raise_Program_Error (Loc,\n+             Reason => PE_Accessibility_Check_Failed));\n+\n+         --  Step 2: Create the accessibility comparison\n+\n+         --  Generate:\n+         --    Ref'Tag\n+\n+         Obj_Ref :=\n+           Make_Attribute_Reference (Loc,\n+             Prefix         => Obj_Ref,\n+             Attribute_Name => Name_Tag);\n+\n+         --  For tagged types, determine the accessibility level by looking at\n+         --  the type specific data of the dispatch table. Generate:\n+\n+         --    Type_Specific_Data (Address (Ref'Tag)).Access_Level\n+\n+         if Tagged_Type_Expansion then\n+            Cond := Build_Get_Access_Level (Loc, Obj_Ref);\n+\n+         --  Use a runtime call to determine the accessibility level when\n+         --  compiling on virtual machine targets. Generate:\n+\n+         --    Get_Access_Level (Ref'Tag)\n+\n+         else\n+            Cond :=\n+              Make_Function_Call (Loc,\n+                Name                   =>\n+                  New_Occurrence_Of (RTE (RE_Get_Access_Level), Loc),\n+                Parameter_Associations => New_List (Obj_Ref));\n+         end if;\n+\n+         Cond :=\n+           Make_Op_Gt (Loc,\n+             Left_Opnd  => Cond,\n+             Right_Opnd => Accessibility_Level (N, Dynamic_Level));\n+\n+         --  Due to the complexity and side effects of the check, utilize an if\n+         --  statement instead of the regular Program_Error circuitry.\n+\n+         Insert_Action (N,\n+           Make_Implicit_If_Statement (N,\n+             Condition       => Cond,\n+             Then_Statements => Stmts));\n+      end if;\n+   end Apply_Accessibility_Check_For_Allocator;\n+\n+   ------------------------------------------\n+   -- Check_Return_Construct_Accessibility --\n+   ------------------------------------------\n+\n+   procedure Check_Return_Construct_Accessibility\n+     (Return_Stmt : Node_Id;\n+      Stm_Entity  : Entity_Id)\n+   is\n+      Loc      : constant Source_Ptr := Sloc (Return_Stmt);\n+      Scope_Id : constant Entity_Id  := Return_Applies_To (Stm_Entity);\n+\n+      R_Type : constant Entity_Id := Etype (Scope_Id);\n+      --  Function result subtype\n+\n+      function First_Selector (Assoc : Node_Id) return Node_Id;\n+      --  Obtain the first selector or choice from a given association\n+\n+      function Is_Formal_Of_Current_Function\n+        (Assoc_Expr : Entity_Id) return Boolean;\n+      --  Predicate to test if a given expression associated with a\n+      --  discriminant is a formal parameter to the function in which the\n+      --  return construct we checking applies to.\n+\n+      --------------------\n+      -- First_Selector --\n+      --------------------\n+\n+      function First_Selector (Assoc : Node_Id) return Node_Id is\n+      begin\n+         if Nkind (Assoc) = N_Component_Association then\n+            return First (Choices (Assoc));\n+\n+         elsif Nkind (Assoc) = N_Discriminant_Association then\n+            return (First (Selector_Names (Assoc)));\n+\n+         else\n+            raise Program_Error;\n+         end if;\n+      end First_Selector;\n+\n+      -----------------------------------\n+      -- Is_Formal_Of_Current_Function --\n+      -----------------------------------\n+\n+      function Is_Formal_Of_Current_Function\n+        (Assoc_Expr : Entity_Id) return Boolean is\n+      begin\n+         return Is_Entity_Name (Assoc_Expr)\n+                  and then Enclosing_Subprogram\n+                             (Entity (Assoc_Expr)) = Scope_Id\n+                  and then Is_Formal (Entity (Assoc_Expr));\n+      end Is_Formal_Of_Current_Function;\n+\n+      --  Local declarations\n+\n+      Assoc : Node_Id := Empty;\n+      --  Assoc should perhaps be renamed and declared as a\n+      --  Node_Or_Entity_Id since it encompasses not only component and\n+      --  discriminant associations, but also discriminant components within\n+      --  a type declaration or subtype indication ???\n+\n+      Assoc_Expr    : Node_Id;\n+      Assoc_Present : Boolean := False;\n+\n+      Check_Cond        : Node_Id;\n+      Unseen_Disc_Count : Nat := 0;\n+      Seen_Discs        : Elist_Id;\n+      Disc              : Entity_Id;\n+      First_Disc        : Entity_Id;\n+\n+      Obj_Decl   : Node_Id;\n+      Return_Con : Node_Id;\n+      Unqual     : Node_Id;\n+\n+   --  Start of processing for Check_Return_Construct_Accessibility\n+\n+   begin\n+      --  Only perform checks on record types with access discriminants and\n+      --  non-internally generated functions.\n+\n+      if not Is_Record_Type (R_Type)\n+        or else not Has_Anonymous_Access_Discriminant (R_Type)\n+        or else not Comes_From_Source (Return_Stmt)\n+      then\n+         return;\n+      end if;\n+\n+      --  We are only interested in return statements\n+\n+      if Nkind (Return_Stmt) not in\n+           N_Extended_Return_Statement | N_Simple_Return_Statement\n+      then\n+         return;\n+      end if;\n+\n+      --  Fetch the object from the return statement, in the case of a\n+      --  simple return statement the expression is part of the node.\n+\n+      if Nkind (Return_Stmt) = N_Extended_Return_Statement then\n+         --  Obtain the object definition from the expanded extended return\n+\n+         Return_Con := First (Return_Object_Declarations (Return_Stmt));\n+         while Present (Return_Con) loop\n+            --  Inspect the original node to avoid object declarations\n+            --  expanded into renamings.\n+\n+            if Nkind (Original_Node (Return_Con)) = N_Object_Declaration\n+              and then Comes_From_Source (Original_Node (Return_Con))\n+            then\n+               exit;\n+            end if;\n+\n+            Nlists.Next (Return_Con);\n+         end loop;\n+\n+         pragma Assert (Present (Return_Con));\n+\n+         --  Could be dealing with a renaming\n+\n+         Return_Con := Original_Node (Return_Con);\n+      else\n+         Return_Con := Expression (Return_Stmt);\n+      end if;\n+\n+      --  Obtain the accessibility levels of the expressions associated\n+      --  with all anonymous access discriminants, then generate a\n+      --  dynamic check or static error when relevant.\n+\n+      --  Note the repeated use of Original_Node to avoid checking\n+      --  expanded code.\n+\n+      Unqual := Original_Node (Unqualify (Original_Node (Return_Con)));\n+\n+      --  Get the corresponding declaration based on the return object's\n+      --  identifier.\n+\n+      if Nkind (Unqual) = N_Identifier\n+        and then Nkind (Parent (Entity (Unqual)))\n+                   in N_Object_Declaration\n+                    | N_Object_Renaming_Declaration\n+      then\n+         Obj_Decl := Original_Node (Parent (Entity (Unqual)));\n+\n+      --  We were passed the object declaration directly, so use it\n+\n+      elsif Nkind (Unqual) in N_Object_Declaration\n+                            | N_Object_Renaming_Declaration\n+      then\n+         Obj_Decl := Unqual;\n+\n+      --  Otherwise, we are looking at something else\n+\n+      else\n+         Obj_Decl := Empty;\n+\n+      end if;\n+\n+      --  Hop up object renamings when present\n+\n+      if Present (Obj_Decl)\n+        and then Nkind (Obj_Decl) = N_Object_Renaming_Declaration\n+      then\n+         while Nkind (Obj_Decl) = N_Object_Renaming_Declaration loop\n+\n+            if Nkind (Name (Obj_Decl)) not in N_Entity then\n+               --  We may be looking at the expansion of iterators or\n+               --  some other internally generated construct, so it is safe\n+               --  to ignore checks ???\n+\n+               if not Comes_From_Source (Obj_Decl) then\n+                  return;\n+               end if;\n+\n+               Obj_Decl := Original_Node\n+                             (Declaration_Node\n+                               (Ultimate_Prefix (Name (Obj_Decl))));\n+\n+            --  Move up to the next declaration based on the object's name\n+\n+            else\n+               Obj_Decl := Original_Node\n+                             (Declaration_Node (Name (Obj_Decl)));\n+            end if;\n+         end loop;\n+      end if;\n+\n+      --  Obtain the discriminant values from the return aggregate\n+\n+      --  Do we cover extension aggregates correctly ???\n+\n+      if Nkind (Unqual) = N_Aggregate then\n+         if Present (Expressions (Unqual)) then\n+            Assoc := First (Expressions (Unqual));\n+         else\n+            Assoc := First (Component_Associations (Unqual));\n+         end if;\n+\n+      --  There is an object declaration for the return object\n+\n+      elsif Present (Obj_Decl) then\n+         --  When a subtype indication is present in an object declaration\n+         --  it must contain the object's discriminants.\n+\n+         if Nkind (Object_Definition (Obj_Decl)) = N_Subtype_Indication then\n+            Assoc := First\n+                       (Constraints\n+                         (Constraint\n+                           (Object_Definition (Obj_Decl))));\n+\n+         --  The object declaration contains an aggregate\n+\n+         elsif Present (Expression (Obj_Decl)) then\n+\n+            if Nkind (Unqualify (Expression (Obj_Decl))) = N_Aggregate then\n+               --  Grab the first associated discriminant expresion\n+\n+               if Present\n+                    (Expressions (Unqualify (Expression (Obj_Decl))))\n+               then\n+                  Assoc := First\n+                             (Expressions\n+                               (Unqualify (Expression (Obj_Decl))));\n+               else\n+                  Assoc := First\n+                             (Component_Associations\n+                               (Unqualify (Expression (Obj_Decl))));\n+               end if;\n+\n+            --  Otherwise, this is something else\n+\n+            else\n+               return;\n+            end if;\n+\n+         --  There are no supplied discriminants in the object declaration,\n+         --  so get them from the type definition since they must be default\n+         --  initialized.\n+\n+         --  Do we handle constrained subtypes correctly ???\n+\n+         elsif Nkind (Unqual) = N_Object_Declaration then\n+            Assoc := First_Discriminant\n+                       (Etype (Object_Definition (Obj_Decl)));\n+\n+         else\n+            Assoc := First_Discriminant (Etype (Unqual));\n+         end if;\n+\n+      --  When we are not looking at an aggregate or an identifier, return\n+      --  since any other construct (like a function call) is not\n+      --  applicable since checks will be performed on the side of the\n+      --  callee.\n+\n+      else\n+         return;\n+      end if;\n+\n+      --  Obtain the discriminants so we know the actual type in case the\n+      --  value of their associated expression gets implicitly converted.\n+\n+      if No (Obj_Decl) then\n+         pragma Assert (Nkind (Unqual) = N_Aggregate);\n+\n+         Disc := First_Discriminant (Etype (Unqual));\n+\n+      else\n+         Disc := First_Discriminant\n+                   (Etype (Defining_Identifier (Obj_Decl)));\n+      end if;\n+\n+      --  Preserve the first discriminant for checking named associations\n+\n+      First_Disc := Disc;\n+\n+      --  Count the number of discriminants for processing an aggregate\n+      --  which includes an others.\n+\n+      Disc := First_Disc;\n+      while Present (Disc) loop\n+         Unseen_Disc_Count := Unseen_Disc_Count + 1;\n+\n+         Next_Discriminant (Disc);\n+      end loop;\n+\n+      Seen_Discs := New_Elmt_List;\n+\n+      --  Loop through each of the discriminants and check each expression\n+      --  associated with an anonymous access discriminant.\n+\n+      --  When named associations occur in the return aggregate then\n+      --  discriminants can be in any order, so we need to ensure we do\n+      --  not continue to loop when all discriminants have been seen.\n+\n+      Disc := First_Disc;\n+      while Present (Assoc)\n+        and then (Present (Disc) or else Assoc_Present)\n+        and then Unseen_Disc_Count > 0\n+      loop\n+         --  Handle named associations by searching through the names of\n+         --  the relevant discriminant components.\n+\n+         if Nkind (Assoc)\n+              in N_Component_Association | N_Discriminant_Association\n+         then\n+            Assoc_Expr    := Expression (Assoc);\n+            Assoc_Present := True;\n+\n+            --  We currently don't handle box initialized discriminants,\n+            --  however, since default initialized anonymous access\n+            --  discriminants are a corner case, this is ok for now ???\n+\n+            if Nkind (Assoc) = N_Component_Association\n+              and then Box_Present (Assoc)\n+            then\n+               if Nkind (First_Selector (Assoc)) = N_Others_Choice then\n+                  Unseen_Disc_Count := 0;\n+               end if;\n+\n+            --  When others is present we must identify a discriminant we\n+            --  haven't already seen so as to get the appropriate type for\n+            --  the static accessibility check.\n+\n+            --  This works because all components within an others clause\n+            --  must have the same type.\n+\n+            elsif Nkind (First_Selector (Assoc)) = N_Others_Choice then\n+\n+               Disc := First_Disc;\n+               Outer : while Present (Disc) loop\n+                  declare\n+                     Current_Seen_Disc : Elmt_Id;\n+                  begin\n+                     --  Move through the list of identified discriminants\n+\n+                     Current_Seen_Disc := First_Elmt (Seen_Discs);\n+                     while Present (Current_Seen_Disc) loop\n+                        --  Exit the loop when we found a match\n+\n+                        exit when\n+                          Chars (Node (Current_Seen_Disc)) = Chars (Disc);\n+\n+                        Next_Elmt (Current_Seen_Disc);\n+                     end loop;\n+\n+                     --  When we have exited the above loop without finding\n+                     --  a match then we know that Disc has not been seen.\n+\n+                     exit Outer when No (Current_Seen_Disc);\n+                  end;\n+\n+                  Next_Discriminant (Disc);\n+               end loop Outer;\n+\n+               --  If we got to an others clause with a non-zero\n+               --  discriminant count there must be a discriminant left to\n+               --  check.\n+\n+               pragma Assert (Present (Disc));\n+\n+               --  Set the unseen discriminant count to zero because we know\n+               --  an others clause sets all remaining components of an\n+               --  aggregate.\n+\n+               Unseen_Disc_Count := 0;\n+\n+            --  Move through each of the selectors in the named association\n+            --  and obtain a discriminant for accessibility checking if one\n+            --  is referenced in the list. Also track which discriminants\n+            --  are referenced for the purpose of handling an others clause.\n+\n+            else\n+               declare\n+                  Assoc_Choice : Node_Id;\n+                  Curr_Disc    : Node_Id;\n+               begin\n+\n+                  Disc      := Empty;\n+                  Curr_Disc := First_Disc;\n+                  while Present (Curr_Disc) loop\n+                     --  Check each of the choices in the associations for a\n+                     --  match to the name of the current discriminant.\n+\n+                     Assoc_Choice := First_Selector (Assoc);\n+                     while Present (Assoc_Choice) loop\n+                        --  When the name matches we track that we have seen\n+                        --  the discriminant, but instead of exiting the\n+                        --  loop we continue iterating to make sure all the\n+                        --  discriminants within the named association get\n+                        --  tracked.\n+\n+                        if Chars (Assoc_Choice) = Chars (Curr_Disc) then\n+                           Append_Elmt (Curr_Disc, Seen_Discs);\n+\n+                           Disc              := Curr_Disc;\n+                           Unseen_Disc_Count := Unseen_Disc_Count - 1;\n+                        end if;\n+\n+                        Next (Assoc_Choice);\n+                     end loop;\n+\n+                     Next_Discriminant (Curr_Disc);\n+                  end loop;\n+               end;\n+            end if;\n+\n+         --  Unwrap the associated expression if we are looking at a default\n+         --  initialized type declaration. In this case Assoc is not really\n+         --  an association, but a component declaration. Should Assoc be\n+         --  renamed in some way to be more clear ???\n+\n+         --  This occurs when the return object does not initialize\n+         --  discriminant and instead relies on the type declaration for\n+         --  their supplied values.\n+\n+         elsif Nkind (Assoc) in N_Entity\n+           and then Ekind (Assoc) = E_Discriminant\n+         then\n+            Append_Elmt (Disc, Seen_Discs);\n+\n+            Assoc_Expr        := Discriminant_Default_Value (Assoc);\n+            Unseen_Disc_Count := Unseen_Disc_Count - 1;\n+\n+         --  Otherwise, there is nothing to do because Assoc is an\n+         --  expression within the return aggregate itself.\n+\n+         else\n+            Append_Elmt (Disc, Seen_Discs);\n+\n+            Assoc_Expr        := Assoc;\n+            Unseen_Disc_Count := Unseen_Disc_Count - 1;\n+         end if;\n+\n+         --  Check the accessibility level of the expression when the\n+         --  discriminant is of an anonymous access type.\n+\n+         if Present (Assoc_Expr)\n+           and then Present (Disc)\n+           and then Ekind (Etype (Disc)) = E_Anonymous_Access_Type\n+\n+           --  We disable the check when we have a tagged return type and\n+           --  the associated expression for the discriminant is a formal\n+           --  parameter since the check would require us to compare the\n+           --  accessibility level of Assoc_Expr to the level of the\n+           --  Extra_Accessibility_Of_Result of the function - which is\n+           --  currently disabled for functions with tagged return types.\n+           --  This may change in the future ???\n+\n+           --  See Needs_Result_Accessibility_Level for details.\n+\n+           and then not\n+             (No (Extra_Accessibility_Of_Result (Scope_Id))\n+               and then Is_Formal_Of_Current_Function (Assoc_Expr)\n+               and then Is_Tagged_Type (Etype (Scope_Id)))\n+         then\n+            --  Generate a dynamic check based on the extra accessibility of\n+            --  the result or the scope of the current function.\n+\n+            Check_Cond :=\n+              Make_Op_Gt (Loc,\n+                Left_Opnd  => Accessibility_Level\n+                                (Expr              => Assoc_Expr,\n+                                 Level             => Dynamic_Level,\n+                                 In_Return_Context => True),\n+                Right_Opnd =>\n+                  (if Present (Extra_Accessibility_Of_Result (Scope_Id))\n+\n+                     --  When Assoc_Expr is a formal we have to look at the\n+                     --  extra accessibility-level formal associated with\n+                     --  the result.\n+\n+                     and then Is_Formal_Of_Current_Function (Assoc_Expr)\n+                   then\n+                      New_Occurrence_Of\n+                        (Extra_Accessibility_Of_Result (Scope_Id), Loc)\n+\n+                   --  Otherwise, we compare the level of Assoc_Expr to the\n+                   --  scope of the current function.\n+\n+                   else\n+                      Make_Integer_Literal\n+                        (Loc, Scope_Depth (Scope (Scope_Id)))));\n+\n+            Insert_Before_And_Analyze (Return_Stmt,\n+              Make_Raise_Program_Error (Loc,\n+                Condition => Check_Cond,\n+                Reason    => PE_Accessibility_Check_Failed));\n+\n+            --  If constant folding has happened on the condition for the\n+            --  generated error, then warn about it being unconditional when\n+            --  we know an error will be raised.\n+\n+            if Nkind (Check_Cond) = N_Identifier\n+              and then Entity (Check_Cond) = Standard_True\n+            then\n+               Error_Msg_N\n+                 (\"access discriminant in return object would be a dangling\"\n+                  & \" reference\", Return_Stmt);\n+            end if;\n+         end if;\n+\n+         --  Iterate over the discriminants, except when we have encountered\n+         --  a named association since the discriminant order becomes\n+         --  irrelevant in that case.\n+\n+         if not Assoc_Present then\n+            Next_Discriminant (Disc);\n+         end if;\n+\n+         --  Iterate over associations\n+\n+         if not Is_List_Member (Assoc) then\n+            exit;\n+         else\n+            Nlists.Next (Assoc);\n+         end if;\n+      end loop;\n+   end Check_Return_Construct_Accessibility;\n+\n+   -------------------------------\n+   -- Deepest_Type_Access_Level --\n+   -------------------------------\n+\n+   function Deepest_Type_Access_Level\n+     (Typ             : Entity_Id;\n+      Allow_Alt_Model : Boolean := True) return Uint\n+   is\n+   begin\n+      if Ekind (Typ) = E_Anonymous_Access_Type\n+        and then not Is_Local_Anonymous_Access (Typ)\n+        and then Nkind (Associated_Node_For_Itype (Typ)) = N_Object_Declaration\n+      then\n+         --  No_Dynamic_Accessibility_Checks override for alternative\n+         --  accessibility model.\n+\n+         if Allow_Alt_Model\n+           and then No_Dynamic_Accessibility_Checks_Enabled (Typ)\n+         then\n+            return Type_Access_Level (Typ, Allow_Alt_Model);\n+         end if;\n+\n+         --  Typ is the type of an Ada 2012 stand-alone object of an anonymous\n+         --  access type.\n+\n+         return\n+           Scope_Depth (Enclosing_Dynamic_Scope\n+                         (Defining_Identifier\n+                           (Associated_Node_For_Itype (Typ))));\n+\n+      --  For generic formal type, return Int'Last (infinite).\n+      --  See comment preceding Is_Generic_Type call in Type_Access_Level.\n+\n+      elsif Is_Generic_Type (Root_Type (Typ)) then\n+         return UI_From_Int (Int'Last);\n+\n+      else\n+         return Type_Access_Level (Typ, Allow_Alt_Model);\n+      end if;\n+   end Deepest_Type_Access_Level;\n+\n+   -----------------------------------\n+   -- Effective_Extra_Accessibility --\n+   -----------------------------------\n+\n+   function Effective_Extra_Accessibility (Id : Entity_Id) return Entity_Id is\n+   begin\n+      if Present (Renamed_Object (Id))\n+        and then Is_Entity_Name (Renamed_Object (Id))\n+      then\n+         return Effective_Extra_Accessibility (Entity (Renamed_Object (Id)));\n+      else\n+         return Extra_Accessibility (Id);\n+      end if;\n+   end Effective_Extra_Accessibility;\n+\n+   -------------------------------\n+   -- Get_Dynamic_Accessibility --\n+   -------------------------------\n+\n+   function Get_Dynamic_Accessibility (E : Entity_Id) return Entity_Id is\n+   begin\n+      --  When minimum accessibility is set for E then we utilize it - except\n+      --  in a few edge cases like the expansion of select statements where\n+      --  generated subprogram may attempt to unnecessarily use a minimum\n+      --  accessibility object declared outside of scope.\n+\n+      --  To avoid these situations where expansion may get complex we verify\n+      --  that the minimum accessibility object is within scope.\n+\n+      if Is_Formal (E)\n+        and then Present (Minimum_Accessibility (E))\n+        and then In_Open_Scopes (Scope (Minimum_Accessibility (E)))\n+      then\n+         return Minimum_Accessibility (E);\n+      end if;\n+\n+      return Extra_Accessibility (E);\n+   end Get_Dynamic_Accessibility;\n+\n+   -----------------------\n+   -- Has_Access_Values --\n+   -----------------------\n+\n+   function Has_Access_Values (T : Entity_Id) return Boolean\n+   is\n+      Typ : constant Entity_Id := Underlying_Type (T);\n+\n+   begin\n+      --  Case of a private type which is not completed yet. This can only\n+      --  happen in the case of a generic formal type appearing directly, or\n+      --  as a component of the type to which this function is being applied\n+      --  at the top level. Return False in this case, since we certainly do\n+      --  not know that the type contains access types.\n+\n+      if No (Typ) then\n+         return False;\n+\n+      elsif Is_Access_Type (Typ) then\n+         return True;\n+\n+      elsif Is_Array_Type (Typ) then\n+         return Has_Access_Values (Component_Type (Typ));\n+\n+      elsif Is_Record_Type (Typ) then\n+         declare\n+            Comp : Entity_Id;\n+\n+         begin\n+            --  Loop to check components\n+\n+            Comp := First_Component_Or_Discriminant (Typ);\n+            while Present (Comp) loop\n+\n+               --  Check for access component, tag field does not count, even\n+               --  though it is implemented internally using an access type.\n+\n+               if Has_Access_Values (Etype (Comp))\n+                 and then Chars (Comp) /= Name_uTag\n+               then\n+                  return True;\n+               end if;\n+\n+               Next_Component_Or_Discriminant (Comp);\n+            end loop;\n+         end;\n+\n+         return False;\n+\n+      else\n+         return False;\n+      end if;\n+   end Has_Access_Values;\n+\n+   ---------------------------------------\n+   -- Has_Anonymous_Access_Discriminant --\n+   ---------------------------------------\n+\n+   function Has_Anonymous_Access_Discriminant (Typ : Entity_Id) return Boolean\n+   is\n+      Disc : Node_Id;\n+\n+   begin\n+      if not Has_Discriminants (Typ) then\n+         return False;\n+      end if;\n+\n+      Disc := First_Discriminant (Typ);\n+      while Present (Disc) loop\n+         if Ekind (Etype (Disc)) = E_Anonymous_Access_Type then\n+            return True;\n+         end if;\n+\n+         Next_Discriminant (Disc);\n+      end loop;\n+\n+      return False;\n+   end Has_Anonymous_Access_Discriminant;\n+\n+   --------------------------------------------\n+   -- Has_Unconstrained_Access_Discriminants --\n+   --------------------------------------------\n+\n+   function Has_Unconstrained_Access_Discriminants\n+     (Subtyp : Entity_Id) return Boolean\n+   is\n+      Discr : Entity_Id;\n+\n+   begin\n+      if Has_Discriminants (Subtyp)\n+        and then not Is_Constrained (Subtyp)\n+      then\n+         Discr := First_Discriminant (Subtyp);\n+         while Present (Discr) loop\n+            if Ekind (Etype (Discr)) = E_Anonymous_Access_Type then\n+               return True;\n+            end if;\n+\n+            Next_Discriminant (Discr);\n+         end loop;\n+      end if;\n+\n+      return False;\n+   end Has_Unconstrained_Access_Discriminants;\n+\n+   --------------------------------\n+   -- Is_Anonymous_Access_Actual --\n+   --------------------------------\n+\n+   function Is_Anonymous_Access_Actual (N : Node_Id) return Boolean is\n+      Par : Node_Id;\n+   begin\n+      if Ekind (Etype (N)) /= E_Anonymous_Access_Type then\n+         return False;\n+      end if;\n+\n+      Par := Parent (N);\n+      while Present (Par)\n+        and then Nkind (Par) in N_Case_Expression\n+                              | N_If_Expression\n+                              | N_Parameter_Association\n+      loop\n+         Par := Parent (Par);\n+      end loop;\n+      return Nkind (Par) in N_Subprogram_Call;\n+   end Is_Anonymous_Access_Actual;\n+\n+   --------------------------------------\n+   -- Is_Special_Aliased_Formal_Access --\n+   --------------------------------------\n+\n+   function Is_Special_Aliased_Formal_Access\n+     (Exp               : Node_Id;\n+      In_Return_Context : Boolean := False) return Boolean\n+   is\n+      Scop : constant Entity_Id := Current_Subprogram;\n+   begin\n+      --  Verify the expression is an access reference to 'Access within a\n+      --  return statement as this is the only time an explicitly aliased\n+      --  formal has different semantics.\n+\n+      if Nkind (Exp) /= N_Attribute_Reference\n+        or else Get_Attribute_Id (Attribute_Name (Exp)) /= Attribute_Access\n+        or else not (In_Return_Value (Exp)\n+                      or else In_Return_Context)\n+        or else not Needs_Result_Accessibility_Level (Scop)\n+      then\n+         return False;\n+      end if;\n+\n+      --  Check if the prefix of the reference is indeed an explicitly aliased\n+      --  formal parameter for the function Scop. Additionally, we must check\n+      --  that Scop returns an anonymous access type, otherwise the special\n+      --  rules dictating a need for a dynamic check are not in effect.\n+\n+      return Is_Entity_Name (Prefix (Exp))\n+               and then Is_Explicitly_Aliased (Entity (Prefix (Exp)));\n+   end Is_Special_Aliased_Formal_Access;\n+\n+   --------------------------------------\n+   -- Needs_Result_Accessibility_Level --\n+   --------------------------------------\n+\n+   function Needs_Result_Accessibility_Level\n+     (Func_Id : Entity_Id) return Boolean\n+   is\n+      Func_Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n+\n+      function Has_Unconstrained_Access_Discriminant_Component\n+        (Comp_Typ : Entity_Id) return Boolean;\n+      --  Returns True if any component of the type has an unconstrained access\n+      --  discriminant.\n+\n+      -----------------------------------------------------\n+      -- Has_Unconstrained_Access_Discriminant_Component --\n+      -----------------------------------------------------\n+\n+      function Has_Unconstrained_Access_Discriminant_Component\n+        (Comp_Typ :  Entity_Id) return Boolean\n+      is\n+      begin\n+         if not Is_Limited_Type (Comp_Typ) then\n+            return False;\n+\n+         --  Only limited types can have access discriminants with\n+         --  defaults.\n+\n+         elsif Has_Unconstrained_Access_Discriminants (Comp_Typ) then\n+            return True;\n+\n+         elsif Is_Array_Type (Comp_Typ) then\n+            return Has_Unconstrained_Access_Discriminant_Component\n+                     (Underlying_Type (Component_Type (Comp_Typ)));\n+\n+         elsif Is_Record_Type (Comp_Typ) then\n+            declare\n+               Comp : Entity_Id;\n+\n+            begin\n+               Comp := First_Component (Comp_Typ);\n+               while Present (Comp) loop\n+                  if Has_Unconstrained_Access_Discriminant_Component\n+                       (Underlying_Type (Etype (Comp)))\n+                  then\n+                     return True;\n+                  end if;\n+\n+                  Next_Component (Comp);\n+               end loop;\n+            end;\n+         end if;\n+\n+         return False;\n+      end Has_Unconstrained_Access_Discriminant_Component;\n+\n+      Disable_Tagged_Cases : constant Boolean := True;\n+      --  Flag used to temporarily disable a \"True\" result for tagged types.\n+      --  See comments further below for details.\n+\n+   --  Start of processing for Needs_Result_Accessibility_Level\n+\n+   begin\n+      --  False if completion unavailable, which can happen when we are\n+      --  analyzing an abstract subprogram or if the subprogram has\n+      --  delayed freezing.\n+\n+      if No (Func_Typ) then\n+         return False;\n+\n+      --  False if not a function, also handle enum-lit renames case\n+\n+      elsif Func_Typ = Standard_Void_Type\n+        or else Is_Scalar_Type (Func_Typ)\n+      then\n+         return False;\n+\n+      --  Handle a corner case, a cross-dialect subp renaming. For example,\n+      --  an Ada 2012 renaming of an Ada 2005 subprogram. This can occur when\n+      --  an Ada 2005 (or earlier) unit references predefined run-time units.\n+\n+      elsif Present (Alias (Func_Id)) then\n+\n+         --  Unimplemented: a cross-dialect subp renaming which does not set\n+         --  the Alias attribute (e.g., a rename of a dereference of an access\n+         --  to subprogram value). ???\n+\n+         return Present (Extra_Accessibility_Of_Result (Alias (Func_Id)));\n+\n+      --  Remaining cases require Ada 2012 mode, unless they are dispatching\n+      --  operations, since they may be overridden by Ada_2012 primitives.\n+\n+      elsif Ada_Version < Ada_2012\n+        and then not Is_Dispatching_Operation (Func_Id)\n+      then\n+         return False;\n+\n+      --  Handle the situation where a result is an anonymous access type\n+      --  RM 3.10.2 (10.3/3).\n+\n+      elsif Ekind (Func_Typ) = E_Anonymous_Access_Type then\n+         return True;\n+\n+      --  In the case of, say, a null tagged record result type, the need for\n+      --  this extra parameter might not be obvious so this function returns\n+      --  True for all tagged types for compatibility reasons.\n+\n+      --  A function with, say, a tagged null controlling result type might\n+      --  be overridden by a primitive of an extension having an access\n+      --  discriminant and the overrider and overridden must have compatible\n+      --  calling conventions (including implicitly declared parameters).\n+\n+      --  Similarly, values of one access-to-subprogram type might designate\n+      --  both a primitive subprogram of a given type and a function which is,\n+      --  for example, not a primitive subprogram of any type. Again, this\n+      --  requires calling convention compatibility. It might be possible to\n+      --  solve these issues by introducing wrappers, but that is not the\n+      --  approach that was chosen.\n+\n+      --  Note: Despite the reasoning noted above, the extra accessibility\n+      --  parameter for tagged types is disabled for performance reasons.\n+\n+      elsif Is_Tagged_Type (Func_Typ) then\n+         return not Disable_Tagged_Cases;\n+\n+      elsif Has_Unconstrained_Access_Discriminants (Func_Typ) then\n+         return True;\n+\n+      elsif Has_Unconstrained_Access_Discriminant_Component (Func_Typ) then\n+         return True;\n+\n+      --  False for all other cases\n+\n+      else\n+         return False;\n+      end if;\n+   end Needs_Result_Accessibility_Level;\n+\n+   ------------------------------------------\n+   -- Prefix_With_Safe_Accessibility_Level --\n+   ------------------------------------------\n+\n+   function Prefix_With_Safe_Accessibility_Level\n+     (N   : Node_Id;\n+      Typ : Entity_Id) return Boolean\n+   is\n+      P        : constant Node_Id      := Prefix (N);\n+      Aname    : constant Name_Id      := Attribute_Name (N);\n+      Attr_Id  : constant Attribute_Id := Get_Attribute_Id (Aname);\n+      Btyp     : constant Entity_Id    := Base_Type (Typ);\n+\n+      function Safe_Value_Conversions return Boolean;\n+      --  Return False if the prefix has a value conversion of an array type\n+\n+      ----------------------------\n+      -- Safe_Value_Conversions --\n+      ----------------------------\n+\n+      function Safe_Value_Conversions return Boolean is\n+         PP : Node_Id := P;\n+\n+      begin\n+         loop\n+            if Nkind (PP) in N_Selected_Component | N_Indexed_Component then\n+               PP := Prefix (PP);\n+\n+            elsif Comes_From_Source (PP)\n+              and then Nkind (PP) in N_Type_Conversion\n+                                   | N_Unchecked_Type_Conversion\n+              and then Is_Array_Type (Etype (PP))\n+            then\n+               return False;\n+\n+            elsif Comes_From_Source (PP)\n+              and then Nkind (PP) = N_Qualified_Expression\n+              and then Is_Array_Type (Etype (PP))\n+              and then Nkind (Original_Node (Expression (PP))) in\n+                         N_Aggregate | N_Extension_Aggregate\n+            then\n+               return False;\n+\n+            else\n+               exit;\n+            end if;\n+         end loop;\n+\n+         return True;\n+      end Safe_Value_Conversions;\n+\n+   --  Start of processing for Prefix_With_Safe_Accessibility_Level\n+\n+   begin\n+      --  No check required for unchecked and unrestricted access\n+\n+      if Attr_Id = Attribute_Unchecked_Access\n+        or else Attr_Id = Attribute_Unrestricted_Access\n+      then\n+         return True;\n+\n+      --  Check value conversions\n+\n+      elsif Ekind (Btyp) = E_General_Access_Type\n+        and then not Safe_Value_Conversions\n+      then\n+         return False;\n+      end if;\n+\n+      return True;\n+   end Prefix_With_Safe_Accessibility_Level;\n+\n+   -----------------------------\n+   -- Subprogram_Access_Level --\n+   -----------------------------\n+\n+   function Subprogram_Access_Level (Subp : Entity_Id) return Uint is\n+   begin\n+      if Present (Alias (Subp)) then\n+         return Subprogram_Access_Level (Alias (Subp));\n+      else\n+         return Scope_Depth (Enclosing_Dynamic_Scope (Subp));\n+      end if;\n+   end Subprogram_Access_Level;\n+\n+   --------------------------------\n+   -- Static_Accessibility_Level --\n+   --------------------------------\n+\n+   function Static_Accessibility_Level\n+     (Expr              : Node_Id;\n+      Level             : Static_Accessibility_Level_Kind;\n+      In_Return_Context : Boolean := False) return Uint\n+   is\n+   begin\n+      return Intval\n+               (Accessibility_Level (Expr, Level, In_Return_Context));\n+   end Static_Accessibility_Level;\n+\n+   -----------------------\n+   -- Type_Access_Level --\n+   -----------------------\n+\n+   function Type_Access_Level\n+     (Typ             : Entity_Id;\n+      Allow_Alt_Model : Boolean   := True;\n+      Assoc_Ent       : Entity_Id := Empty) return Uint\n+   is\n+      Btyp    : Entity_Id := Base_Type (Typ);\n+      Def_Ent : Entity_Id;\n+\n+   begin\n+      --  Ada 2005 (AI-230): For most cases of anonymous access types, we\n+      --  simply use the level where the type is declared. This is true for\n+      --  stand-alone object declarations, and for anonymous access types\n+      --  associated with components the level is the same as that of the\n+      --  enclosing composite type. However, special treatment is needed for\n+      --  the cases of access parameters, return objects of an anonymous access\n+      --  type, and, in Ada 95, access discriminants of limited types.\n+\n+      if Is_Access_Type (Btyp) then\n+         if Ekind (Btyp) = E_Anonymous_Access_Type then\n+            --  No_Dynamic_Accessibility_Checks restriction override for\n+            --  alternative accessibility model.\n+\n+            if Allow_Alt_Model\n+              and then No_Dynamic_Accessibility_Checks_Enabled (Btyp)\n+            then\n+               --  In the -gnatd_b model, the level of an anonymous access\n+               --  type is always that of the designated type.\n+\n+               if Debug_Flag_Underscore_B then\n+                  return Type_Access_Level\n+                           (Designated_Type (Btyp), Allow_Alt_Model);\n+               end if;\n+\n+               --  When an anonymous access type's Assoc_Ent is specified,\n+               --  calculate the result based on the general accessibility\n+               --  level routine.\n+\n+               --  We would like to use Associated_Node_For_Itype here instead,\n+               --  but in some cases it is not fine grained enough ???\n+\n+               if Present (Assoc_Ent) then\n+                  return Static_Accessibility_Level\n+                           (Assoc_Ent, Object_Decl_Level);\n+               end if;\n+\n+               --  Otherwise take the context of the anonymous access type into\n+               --  account.\n+\n+               --  Obtain the defining entity for the internally generated\n+               --  anonymous access type.\n+\n+               Def_Ent := Defining_Entity_Or_Empty\n+                            (Associated_Node_For_Itype (Typ));\n+\n+               if Present (Def_Ent) then\n+                  --  When the defining entity is a subprogram then we know the\n+                  --  anonymous access type Typ has been generated to either\n+                  --  describe an anonymous access type formal or an anonymous\n+                  --  access result type.\n+\n+                  --  Since we are only interested in the formal case, avoid\n+                  --  the anonymous access result type.\n+\n+                  if Is_Subprogram (Def_Ent)\n+                    and then not (Ekind (Def_Ent) = E_Function\n+                                   and then Etype (Def_Ent) = Typ)\n+                  then\n+                     --  When the type comes from an anonymous access\n+                     --  parameter, the level is that of the subprogram\n+                     --  declaration.\n+\n+                     return Scope_Depth (Def_Ent);\n+\n+                  --  When the type is an access discriminant, the level is\n+                  --  that of the type.\n+\n+                  elsif Ekind (Def_Ent) = E_Discriminant then\n+                     return Scope_Depth (Scope (Def_Ent));\n+                  end if;\n+               end if;\n+\n+            --  If the type is a nonlocal anonymous access type (such as for\n+            --  an access parameter) we treat it as being declared at the\n+            --  library level to ensure that names such as X.all'access don't\n+            --  fail static accessibility checks.\n+\n+            elsif not Is_Local_Anonymous_Access (Typ) then\n+               return Scope_Depth (Standard_Standard);\n+\n+            --  If this is a return object, the accessibility level is that of\n+            --  the result subtype of the enclosing function. The test here is\n+            --  little complicated, because we have to account for extended\n+            --  return statements that have been rewritten as blocks, in which\n+            --  case we have to find and the Is_Return_Object attribute of the\n+            --  itype's associated object. It would be nice to find a way to\n+            --  simplify this test, but it doesn't seem worthwhile to add a new\n+            --  flag just for purposes of this test. ???\n+\n+            elsif Ekind (Scope (Btyp)) = E_Return_Statement\n+              or else\n+                (Is_Itype (Btyp)\n+                  and then Nkind (Associated_Node_For_Itype (Btyp)) =\n+                                                         N_Object_Declaration\n+                  and then Is_Return_Object\n+                             (Defining_Identifier\n+                                (Associated_Node_For_Itype (Btyp))))\n+            then\n+               declare\n+                  Scop : Entity_Id;\n+\n+               begin\n+                  Scop := Scope (Scope (Btyp));\n+                  while Present (Scop) loop\n+                     exit when Ekind (Scop) = E_Function;\n+                     Scop := Scope (Scop);\n+                  end loop;\n+\n+                  --  Treat the return object's type as having the level of the\n+                  --  function's result subtype (as per RM05-6.5(5.3/2)).\n+\n+                  return Type_Access_Level (Etype (Scop), Allow_Alt_Model);\n+               end;\n+            end if;\n+         end if;\n+\n+         Btyp := Root_Type (Btyp);\n+\n+         --  The accessibility level of anonymous access types associated with\n+         --  discriminants is that of the current instance of the type, and\n+         --  that's deeper than the type itself (AARM 3.10.2 (12.3.21)).\n+\n+         --  AI-402: access discriminants have accessibility based on the\n+         --  object rather than the type in Ada 2005, so the above paragraph\n+         --  doesn't apply.\n+\n+         --  ??? Needs completion with rules from AI-416\n+\n+         if Ada_Version <= Ada_95\n+           and then Ekind (Typ) = E_Anonymous_Access_Type\n+           and then Present (Associated_Node_For_Itype (Typ))\n+           and then Nkind (Associated_Node_For_Itype (Typ)) =\n+                                                 N_Discriminant_Specification\n+         then\n+            return Scope_Depth (Enclosing_Dynamic_Scope (Btyp)) + 1;\n+         end if;\n+      end if;\n+\n+      --  Return library level for a generic formal type. This is done because\n+      --  RM(10.3.2) says that \"The statically deeper relationship does not\n+      --  apply to ... a descendant of a generic formal type\". Rather than\n+      --  checking at each point where a static accessibility check is\n+      --  performed to see if we are dealing with a formal type, this rule is\n+      --  implemented by having Type_Access_Level and Deepest_Type_Access_Level\n+      --  return extreme values for a formal type; Deepest_Type_Access_Level\n+      --  returns Int'Last. By calling the appropriate function from among the\n+      --  two, we ensure that the static accessibility check will pass if we\n+      --  happen to run into a formal type. More specifically, we should call\n+      --  Deepest_Type_Access_Level instead of Type_Access_Level whenever the\n+      --  call occurs as part of a static accessibility check and the error\n+      --  case is the case where the type's level is too shallow (as opposed\n+      --  to too deep).\n+\n+      if Is_Generic_Type (Root_Type (Btyp)) then\n+         return Scope_Depth (Standard_Standard);\n+      end if;\n+\n+      return Scope_Depth (Enclosing_Dynamic_Scope (Btyp));\n+   end Type_Access_Level;\n+\n+end Accessibility;"}, {"sha": "454ad759ec4d6ea5e44962cdf4b48ca33a2b927b", "filename": "gcc/ada/accessibility.ads", "status": "added", "additions": 222, "deletions": 0, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Faccessibility.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Faccessibility.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faccessibility.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -0,0 +1,222 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                        A C C E S S I B I L I T Y                         --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2022-2022, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Accessibility level and check generation routines\n+\n+with Types; use Types;\n+with Uintp; use Uintp;\n+\n+package Accessibility is\n+\n+   procedure Accessibility_Message (N : Node_Id; Typ : Entity_Id);\n+   --  Error, or warning within an instance, if the static accessibility\n+   --  rules of 3.10.2 are violated.\n+\n+   type Accessibility_Level_Kind is\n+     (Dynamic_Level,\n+      Object_Decl_Level,\n+      Zero_On_Dynamic_Level);\n+   --  Accessibility_Level_Kind is an enumerated type which captures the\n+   --  different modes in which an accessibility level could be obtained for\n+   --  a given expression.\n+\n+   --  When in the context of the function Accessibility_Level,\n+   --  Accessibility_Level_Kind signals what type of accessibility level to\n+   --  obtain. For example, when Level is Dynamic_Level, a defining identifier\n+   --  associated with a SAOOAAT may be returned or an N_Integer_Literal node.\n+   --  When the level is Object_Decl_Level, an N_Integer_Literal node is\n+   --  returned containing the level of the declaration of the object if\n+   --  relevant (be it a SAOOAAT or otherwise). Finally, Zero_On_Dynamic_Level\n+   --  returns library level for all cases where the accessibility level is\n+   --  dynamic (used to bypass static accessibility checks in dynamic cases).\n+\n+   function Accessibility_Level\n+     (Expr              : Node_Id;\n+      Level             : Accessibility_Level_Kind;\n+      In_Return_Context : Boolean := False;\n+      Allow_Alt_Model   : Boolean := True) return Node_Id;\n+   --  Centralized accessibility level calculation routine for finding the\n+   --  accessibility level of a given expression Expr.\n+\n+   --  In_Return_Context forces the Accessibility_Level calculations to be\n+   --  carried out \"as if\" Expr existed in a return value. This is useful for\n+   --  calculating the accessibility levels for discriminant associations\n+   --  and return aggregates.\n+\n+   --  The Allow_Alt_Model parameter allows the alternative level calculation\n+   --  under the restriction No_Dynamic_Accessibility_Checks to be performed.\n+\n+   procedure Apply_Accessibility_Check\n+     (N           : Node_Id;\n+      Typ         : Entity_Id;\n+      Insert_Node : Node_Id);\n+   --  Given a name N denoting an access parameter, emits a run-time\n+   --  accessibility check (if necessary), checking that the level of\n+   --  the object denoted by the access parameter is not deeper than the\n+   --  level of the type Typ. Program_Error is raised if the check fails.\n+   --  Insert_Node indicates the node where the check should be inserted.\n+\n+   procedure Apply_Accessibility_Check_For_Allocator\n+     (N              : Node_Id;\n+      Exp            : Node_Id;\n+      Ref            : Node_Id;\n+      Built_In_Place : Boolean := False);\n+   --  Ada 2005 (AI-344): For an allocator with a class-wide designated\n+   --  type, generate an accessibility check to verify that the level of the\n+   --  type of the created object is not deeper than the level of the access\n+   --  type. If the type of the qualified expression is class-wide, then\n+   --  always generate the check (except in the case where it is known to be\n+   --  unnecessary, see comment below). Otherwise, only generate the check\n+   --  if the level of the qualified expression type is statically deeper\n+   --  than the access type.\n+   --\n+   --  Although the static accessibility will generally have been performed\n+   --  as a legality check, it won't have been done in cases where the\n+   --  allocator appears in generic body, so a run-time check is needed in\n+   --  general. One special case is when the access type is declared in the\n+   --  same scope as the class-wide allocator, in which case the check can\n+   --  never fail, so it need not be generated.\n+   --\n+   --  As an open issue, there seem to be cases where the static level\n+   --  associated with the class-wide object's underlying type is not\n+   --  sufficient to perform the proper accessibility check, such as for\n+   --  allocators in nested subprograms or accept statements initialized by\n+   --  class-wide formals when the actual originates outside at a deeper\n+   --  static level. The nested subprogram case might require passing\n+   --  accessibility levels along with class-wide parameters, and the task\n+   --  case seems to be an actual gap in the language rules that needs to\n+   --  be fixed by the ARG. ???\n+\n+   procedure Check_Return_Construct_Accessibility\n+     (Return_Stmt : Node_Id;\n+      Stm_Entity  : Entity_Id);\n+   --  Apply legality rule of 6.5 (5.9) to the access discriminants of an\n+   --  aggregate in a return statement.\n+\n+   function Deepest_Type_Access_Level\n+     (Typ             : Entity_Id;\n+      Allow_Alt_Model : Boolean := True) return Uint;\n+   --  Same as Type_Access_Level, except that if the type is the type of an Ada\n+   --  2012 stand-alone object of an anonymous access type, then return the\n+   --  static accessibility level of the object. In that case, the dynamic\n+   --  accessibility level of the object may take on values in a range. The low\n+   --  bound of that range is returned by Type_Access_Level; this function\n+   --  yields the high bound of that range. Also differs from Type_Access_Level\n+   --  in the case of a descendant of a generic formal type (returns Int'Last\n+   --  instead of 0).\n+\n+   --  The Allow_Alt_Model parameter allows the alternative level calculation\n+   --  under the restriction No_Dynamic_Accessibility_Checks to be performed.\n+\n+   function Effective_Extra_Accessibility (Id : Entity_Id) return Entity_Id;\n+   --  Same as Einfo.Extra_Accessibility except thtat object renames\n+   --  are looked through.\n+\n+   function Get_Dynamic_Accessibility (E : Entity_Id) return Entity_Id;\n+   --  Obtain the accessibility level for a given entity formal taking into\n+   --  account both extra and minimum accessibility.\n+\n+   function Has_Access_Values (T : Entity_Id) return Boolean;\n+   --  Returns true if the underlying type of T is an access type, or has a\n+   --  component (at any recursive level) that is an access type. This is a\n+   --  conservative predicate, if it is not known whether or not T contains\n+   --  access values (happens for generic formals in some cases), then False is\n+   --  returned.  Note that tagged types return False. Even though the tag is\n+   --  implemented as an access type internally, this function tests only for\n+   --  access types known to the programmer. See also Has_Tagged_Component.\n+\n+   function Has_Anonymous_Access_Discriminant (Typ : Entity_Id) return Boolean;\n+   --  Returns True if Typ has one or more anonymous access discriminants\n+\n+   function Prefix_With_Safe_Accessibility_Level\n+     (N   : Node_Id;\n+      Typ : Entity_Id) return Boolean;\n+   --  Return True if the prefix does not have a value conversion of an\n+   --  array because a value conversion is like an aggregate with respect\n+   --  to determining accessibility level (RM 3.10.2); even if evaluation\n+   --  of a value conversion is guaranteed to not create a new object,\n+   --  accessibility rules are defined as if it might.\n+\n+   subtype Static_Accessibility_Level_Kind\n+     is Accessibility_Level_Kind range Object_Decl_Level\n+                                         .. Zero_On_Dynamic_Level;\n+   --  Restrict the reange of Accessibility_Level_Kind to be non-dynamic for\n+   --  use in the static version of Accessibility_Level below.\n+\n+   function Static_Accessibility_Level\n+     (Expr              : Node_Id;\n+      Level             : Static_Accessibility_Level_Kind;\n+      In_Return_Context : Boolean := False) return Uint;\n+   --  Overloaded version of Accessibility_Level which returns a universal\n+   --  integer for use in compile-time checking. Note: Level is restricted to\n+   --  be non-dynamic.\n+\n+   function Has_Unconstrained_Access_Discriminants\n+     (Subtyp : Entity_Id) return Boolean;\n+   --  Returns True if the given subtype is unconstrained and has one or more\n+   --  access discriminants.\n+\n+   function Is_Anonymous_Access_Actual (N : Node_Id) return Boolean;\n+   --  Determine if N is used as an actual for a call whose corresponding\n+   --  formal is of an anonymous access type.\n+\n+   function Is_Special_Aliased_Formal_Access\n+     (Exp               : Node_Id;\n+      In_Return_Context : Boolean := False) return Boolean;\n+   --  Determines whether a dynamic check must be generated for explicitly\n+   --  aliased formals within a function Scop for the expression Exp.\n+\n+   --  In_Return_Context forces Is_Special_Aliased_Formal_Access to assume\n+   --  that Exp is within a return value which is useful for checking\n+   --  expressions within discriminant associations of return objects.\n+\n+   --  More specially, Is_Special_Aliased_Formal_Access checks that Exp is a\n+   --  'Access attribute reference within a return statement where the ultimate\n+   --  prefix is an aliased formal of Scop and that Scop returns an anonymous\n+   --  access type. See RM 3.10.2 for more details.\n+\n+   function Needs_Result_Accessibility_Level\n+     (Func_Id : Entity_Id) return Boolean;\n+   --  Ada 2012 (AI05-0234): Return True if the function needs an implicit\n+   --  parameter to identify the accessibility level of the function result\n+   --  \"determined by the point of call\".\n+\n+   function Subprogram_Access_Level (Subp : Entity_Id) return Uint;\n+   --  Return the accessibility level of the view denoted by Subp\n+\n+   function Type_Access_Level\n+     (Typ             : Entity_Id;\n+      Allow_Alt_Model : Boolean   := True;\n+      Assoc_Ent       : Entity_Id := Empty) return Uint;\n+   --  Return the accessibility level of Typ\n+\n+   --  The Allow_Alt_Model parameter allows the alternative level calculation\n+   --  under the restriction No_Dynamic_Accessibility_Checks to be performed.\n+\n+   --  Assoc_Ent allows for the optional specification of the entity associated\n+   --  with Typ. This gets utilized mostly for anonymous access type\n+   --  processing, where context matters in interpreting Typ's level.\n+\n+end Accessibility;"}, {"sha": "d2604ca9b7746f41c867ed78f725681abf77e517", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -3524,6 +3524,8 @@ __gnat_cpu_set (int cpu, size_t count ATTRIBUTE_UNUSED, cpu_set_t *set)\n \n #if defined (__APPLE__)\n #include <mach-o/dyld.h>\n+#elif defined (__linux__)\n+#include <link.h>\n #endif\n \n const void *\n@@ -3532,10 +3534,8 @@ __gnat_get_executable_load_address (void)\n #if defined (__APPLE__)\n   return _dyld_get_image_header (0);\n \n-#elif 0 && defined (__linux__)\n-  /* Currently disabled as it needs at least -ldl.  */\n+#elif defined (__linux__)\n   struct link_map *map = _r_debug.r_map;\n-\n   return (const void *)map->l_addr;\n \n #elif defined (_WIN32)"}, {"sha": "81c9c2840480beee26ec48352c56137092ec5d27", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -373,7 +373,6 @@ package body Aspects is\n          else\n             Asps := New_List;\n             Set_Aspect_Specifications (To, Asps);\n-            Set_Has_Aspects (To);\n          end if;\n \n          --  Remove the aspect from its original owner and relocate it to node"}, {"sha": "cc66ab3777c5927e335915502245b0fffb6e474e", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -148,20 +148,18 @@ package Atree is\n    --  This is a count of errors that are serious enough to stop expansion,\n    --  and hence to prevent generation of an object file even if the\n    --  switch -gnatQ is set. Initialized to zero at the start of compilation.\n-   --  Initialized for -gnatVa use, see comment above.\n \n    --  WARNING: There is a matching C declaration of this variable in fe.h\n \n    Total_Errors_Detected : Nat := 0;\n    --  Number of errors detected so far. Includes count of serious errors and\n    --  non-serious errors, so this value is always greater than or equal to the\n    --  Serious_Errors_Detected value. Initialized to zero at the start of\n-   --  compilation. Initialized for -gnatVa use, see comment above.\n+   --  compilation.\n \n    Warnings_Detected : Nat := 0;\n    --  Number of warnings detected. Initialized to zero at the start of\n-   --  compilation. Initialized for -gnatVa use, see comment above. This\n-   --  count includes the count of style and info messages.\n+   --  compilation. This count includes the count of style and info messages.\n \n    Warning_Info_Messages : Nat := 0;\n    --  Number of info messages generated as warnings. Info messages are never"}, {"sha": "e72cdf81227613261d5f8688c04154fa27cb43b3", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 74, "deletions": 44, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -114,25 +114,23 @@ package body Bindgen is\n    --  For CodePeer, introduce a wrapper subprogram which calls the\n    --  user-defined main subprogram.\n \n-   --  Names and link_names for CUDA device adainit/adafinal procs.\n+   --  Name for local C-String variable\n \n-   Device_Subp_Name_Prefix : constant String := \"imported_device_\";\n-   Device_Link_Name_Prefix : constant String := \"__device_\";\n-\n-   function Device_Ada_Final_Link_Name return String is\n-     (Device_Link_Name_Prefix & Ada_Final_Name.all);\n+   Adainit_String_Obj_Name  : constant String := \"Adainit_Name_C_String\";\n \n-   function Device_Ada_Final_Subp_Name return String is\n-     (Device_Subp_Name_Prefix & Ada_Final_Name.all);\n+   --  Name and link_name for CUDA device initialization procedure\n \n-   function Device_Ada_Init_Link_Name return String is\n-     (Device_Link_Name_Prefix & Ada_Init_Name.all);\n+   Device_Ada_Init_Subp_Name : constant String := \"Device_Initialization\";\n+   Device_Link_Name_Prefix : constant String := \"__device_\";\n \n-   function Device_Ada_Init_Subp_Name return String is\n-     (Device_Subp_Name_Prefix & Ada_Init_Name.all);\n+   function Device_Link_Name (Suffix : String) return String is\n+     (Device_Link_Name_Prefix &\n+       (if CUDA_Device_Library_Name = null\n+        then \"ada\" -- is this an error path?\n+        else CUDA_Device_Library_Name.all) & Suffix);\n \n-   --  Text for aspect specifications (if any) given as part of the\n-   --  Adainit and Adafinal spec declarations.\n+   function Device_Ada_Init_Link_Name return String\n+     is (Device_Link_Name (Suffix => \"init\"));\n \n    ----------------------------------\n    -- Interface_State Pragma Table --\n@@ -521,12 +519,6 @@ package body Bindgen is\n          WBI (\"      System.Standard_Library.Adafinal;\");\n       end if;\n \n-      --  perform device (as opposed to host) finalization\n-      if Enable_CUDA_Expansion then\n-         WBI (\"      pragma CUDA_Execute (\" &\n-                Device_Ada_Final_Subp_Name & \", 1, 1);\");\n-      end if;\n-\n       WBI (\"   end \" & Ada_Final_Name.all & \";\");\n       WBI (\"\");\n    end Gen_Adafinal;\n@@ -1360,11 +1352,13 @@ package body Bindgen is\n       end loop;\n \n       WBI (\"   procedure \" & Device_Ada_Init_Subp_Name & \";\");\n-      WBI (\"   pragma Import (C, \" & Device_Ada_Init_Subp_Name &\n+      WBI (\"   pragma Export (C, \" & Device_Ada_Init_Subp_Name &\n              \", Link_Name => \"\"\" & Device_Ada_Init_Link_Name & \"\"\");\");\n-      WBI (\"   procedure \" & Device_Ada_Final_Subp_Name & \";\");\n-      WBI (\"   pragma Import (C, \" & Device_Ada_Final_Subp_Name &\n-             \", Link_Name => \"\"\" & Device_Ada_Final_Link_Name & \"\"\");\");\n+\n+      --  C-string declaration for adainit\n+      WBI (\"   \" & Adainit_String_Obj_Name\n+            & \" : Interfaces.C.Strings.Chars_Ptr;\");\n+      WBI (\"\");\n \n       WBI (\"\");\n    end Gen_CUDA_Defs;\n@@ -1374,6 +1368,41 @@ package body Bindgen is\n    -------------------\n \n    procedure Gen_CUDA_Init is\n+      --  Generate call to register one function\n+      procedure Gen_CUDA_Register_Function_Call\n+        (Kernel_Name   : String;\n+         Kernel_String : String;\n+         Kernel_Proc   : String);\n+\n+      -------------------------------------\n+      -- Gen_CUDA_Register_Function_Call --\n+      -------------------------------------\n+\n+      procedure Gen_CUDA_Register_Function_Call\n+        (Kernel_Name   : String;\n+         Kernel_String : String;\n+         Kernel_Proc   : String) is\n+      begin\n+         WBI (\"      \" & Kernel_String & \" :=\");\n+         WBI (\"        Interfaces.C.Strings.New_Char_Array (\"\"\"\n+               & Kernel_Name\n+               & \"\"\");\");\n+\n+         --  Generate call to CUDA runtime to register function.\n+         WBI (\"      CUDA_Register_Function (\");\n+         WBI (\"        Fat_Binary_Handle, \");\n+         WBI (\"        \" & Kernel_Proc & \"'Address,\");\n+         WBI (\"        \" & Kernel_String & \",\");\n+         WBI (\"        \" & Kernel_String & \",\");\n+         WBI (\"        -1,\");\n+         WBI (\"        System.Null_Address,\");\n+         WBI (\"        System.Null_Address,\");\n+         WBI (\"        System.Null_Address,\");\n+         WBI (\"        System.Null_Address,\");\n+         WBI (\"        System.Null_Address);\");\n+         WBI (\"\");\n+      end Gen_CUDA_Register_Function_Call;\n+\n    begin\n       if not Enable_CUDA_Expansion then\n          return;\n@@ -1404,26 +1433,19 @@ package body Bindgen is\n                Get_Name_String (CUDA_Kernels.Table (K).Kernel_Name);\n             --  Kernel_Name is the name of the kernel, after package expansion.\n          begin\n-            WBI (\"      \" & Kernel_String & \" :=\");\n-            WBI (\"        Interfaces.C.Strings.New_Char_Array (\"\"\"\n-                  & Kernel_Name\n-                  & \"\"\");\");\n-            --  Generate call to CUDA runtime to register function.\n-            WBI (\"      CUDA_Register_Function (\");\n-            WBI (\"        Fat_Binary_Handle, \");\n-            WBI (\"        \" & Kernel_Proc & \"'Address,\");\n-            WBI (\"        \" & Kernel_String & \",\");\n-            WBI (\"        \" & Kernel_String & \",\");\n-            WBI (\"        -1,\");\n-            WBI (\"        System.Null_Address,\");\n-            WBI (\"        System.Null_Address,\");\n-            WBI (\"        System.Null_Address,\");\n-            WBI (\"        System.Null_Address,\");\n-            WBI (\"        System.Null_Address);\");\n-            WBI (\"\");\n+            Gen_CUDA_Register_Function_Call\n+              (Kernel_Name   => Kernel_Name,\n+               Kernel_String => Kernel_String,\n+               Kernel_Proc   => Kernel_Proc);\n          end;\n       end loop;\n \n+      --  Register device-side Adainit\n+      Gen_CUDA_Register_Function_Call\n+        (Kernel_Name   => Device_Ada_Init_Link_Name,\n+         Kernel_String => Adainit_String_Obj_Name,\n+         Kernel_Proc   => Device_Ada_Init_Subp_Name);\n+\n       WBI (\"      CUDA_Register_Fat_Binary_End (Fat_Binary_Handle);\");\n \n       --  perform device (as opposed to host) elaboration\n@@ -2644,7 +2666,8 @@ package body Bindgen is\n       WBI (\"   procedure \" & Ada_Init_Name.all & \";\");\n       if Enable_CUDA_Device_Expansion then\n          WBI (\"   pragma Export (C, \" & Ada_Init_Name.all &\n-                \", Link_Name => \"\"\" & Device_Ada_Init_Link_Name & \"\"\");\");\n+                \", Link_Name => \"\"\" & Device_Link_Name_Prefix\n+                & Ada_Init_Name.all & \"\"\");\");\n          WBI (\"   pragma CUDA_Global (\" & Ada_Init_Name.all & \");\");\n       else\n          WBI (\"   pragma Export (C, \" & Ada_Init_Name.all & \", \"\"\" &\n@@ -2661,10 +2684,10 @@ package body Bindgen is\n       if not Cumulative_Restrictions.Set (No_Finalization) then\n          WBI (\"\");\n          WBI (\"   procedure \" & Ada_Final_Name.all & \";\");\n-\n          if Enable_CUDA_Device_Expansion then\n             WBI (\"   pragma Export (C, \" & Ada_Final_Name.all &\n-                   \", Link_Name => \"\"\" & Device_Ada_Final_Link_Name & \"\"\");\");\n+                   \", Link_Name => \"\"\" & Device_Link_Name_Prefix &\n+                   Ada_Final_Name.all & \"\"\");\");\n             WBI (\"   pragma CUDA_Global (\" & Ada_Final_Name.all & \");\");\n          else\n             WBI (\"   pragma Export (C, \" & Ada_Final_Name.all & \", \"\"\" &\n@@ -2894,6 +2917,13 @@ package body Bindgen is\n \n       Gen_Adainit (Elab_Order);\n \n+      if Enable_CUDA_Expansion then\n+         WBI (\"   procedure \" & Device_Ada_Init_Subp_Name & \" is\");\n+         WBI (\"   begin\");\n+         WBI (\"      raise Program_Error;\");\n+         WBI (\"   end \" & Device_Ada_Init_Subp_Name & \";\");\n+      end if;\n+\n       if Bind_Main_Program then\n          Gen_Main;\n       end if;"}, {"sha": "5833be3a5de5abea56d427561f75f05694988702", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 24, "deletions": 245, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -570,119 +570,6 @@ package body Checks is\n       Install_Null_Excluding_Check (P);\n    end Apply_Access_Check;\n \n-   -------------------------------\n-   -- Apply_Accessibility_Check --\n-   -------------------------------\n-\n-   procedure Apply_Accessibility_Check\n-     (N           : Node_Id;\n-      Typ         : Entity_Id;\n-      Insert_Node : Node_Id)\n-   is\n-      Loc : constant Source_Ptr := Sloc (N);\n-\n-      Check_Cond  : Node_Id;\n-      Param_Ent   : Entity_Id := Param_Entity (N);\n-      Param_Level : Node_Id;\n-      Type_Level  : Node_Id;\n-\n-   begin\n-      --  Verify we haven't tried to add a dynamic accessibility check when we\n-      --  shouldn't.\n-\n-      pragma Assert (not No_Dynamic_Accessibility_Checks_Enabled (N));\n-\n-      if Ada_Version >= Ada_2012\n-         and then not Present (Param_Ent)\n-         and then Is_Entity_Name (N)\n-         and then Ekind (Entity (N)) in E_Constant | E_Variable\n-         and then Present (Effective_Extra_Accessibility (Entity (N)))\n-      then\n-         Param_Ent := Entity (N);\n-         while Present (Renamed_Object (Param_Ent)) loop\n-            --  Renamed_Object must return an Entity_Name here\n-            --  because of preceding \"Present (E_E_A (...))\" test.\n-\n-            Param_Ent := Entity (Renamed_Object (Param_Ent));\n-         end loop;\n-      end if;\n-\n-      if Inside_A_Generic then\n-         return;\n-\n-      --  Only apply the run-time check if the access parameter has an\n-      --  associated extra access level parameter and when accessibility checks\n-      --  are enabled.\n-\n-      elsif Present (Param_Ent)\n-         and then Present (Get_Dynamic_Accessibility (Param_Ent))\n-         and then not Accessibility_Checks_Suppressed (Param_Ent)\n-         and then not Accessibility_Checks_Suppressed (Typ)\n-      then\n-         --  Obtain the parameter's accessibility level\n-\n-         Param_Level :=\n-           New_Occurrence_Of (Get_Dynamic_Accessibility (Param_Ent), Loc);\n-\n-         --  Use the dynamic accessibility parameter for the function's result\n-         --  when one has been created instead of statically referring to the\n-         --  deepest type level so as to appropriatly handle the rules for\n-         --  RM 3.10.2 (10.1/3).\n-\n-         if Ekind (Scope (Param_Ent)) = E_Function\n-           and then In_Return_Value (N)\n-           and then Ekind (Typ) = E_Anonymous_Access_Type\n-         then\n-            --  Associate the level of the result type to the extra result\n-            --  accessibility parameter belonging to the current function.\n-\n-            if Present (Extra_Accessibility_Of_Result (Scope (Param_Ent))) then\n-               Type_Level :=\n-                 New_Occurrence_Of\n-                   (Extra_Accessibility_Of_Result (Scope (Param_Ent)), Loc);\n-\n-            --  In Ada 2005 and earlier modes, a result extra accessibility\n-            --  parameter is not generated and no dynamic check is performed.\n-\n-            else\n-               return;\n-            end if;\n-\n-         --  Otherwise get the type's accessibility level normally\n-\n-         else\n-            Type_Level :=\n-              Make_Integer_Literal (Loc, Deepest_Type_Access_Level (Typ));\n-         end if;\n-\n-         --  Raise Program_Error if the accessibility level of the access\n-         --  parameter is deeper than the level of the target access type.\n-\n-         Check_Cond :=\n-           Make_Op_Gt (Loc,\n-             Left_Opnd  => Param_Level,\n-             Right_Opnd => Type_Level);\n-\n-         Insert_Action (Insert_Node,\n-           Make_Raise_Program_Error (Loc,\n-             Condition => Check_Cond,\n-             Reason    => PE_Accessibility_Check_Failed));\n-\n-         Analyze_And_Resolve (N);\n-\n-         --  If constant folding has happened on the condition for the\n-         --  generated error, then warn about it being unconditional.\n-\n-         if Nkind (Check_Cond) = N_Identifier\n-           and then Entity (Check_Cond) = Standard_True\n-         then\n-            Error_Msg_Warn := SPARK_Mode /= On;\n-            Error_Msg_N (\"accessibility check fails<<\", N);\n-            Error_Msg_N (\"\\Program_Error [<<\", N);\n-         end if;\n-      end if;\n-   end Apply_Accessibility_Check;\n-\n    --------------------------------\n    -- Apply_Address_Clause_Check --\n    --------------------------------\n@@ -778,7 +665,7 @@ package body Checks is\n          --  Note: Expr is empty if the address-clause is applied to in-mode\n          --  actuals (allowed by 13.1(22)).\n \n-         if not Present (Expr)\n+         if No (Expr)\n            or else\n              (Is_Entity_Name (Expression (AC))\n                and then Ekind (Entity (Expression (AC))) = E_Constant\n@@ -999,21 +886,26 @@ package body Checks is\n                   Determine_Range (N, VOK, Vlo, Vhi, Assume_Valid => True);\n \n                   if VOK and then Tlo <= Vlo and then Vhi <= Thi then\n-                     Rewrite (Left_Opnd (N),\n-                       Make_Type_Conversion (Loc,\n-                         Subtype_Mark => New_Occurrence_Of (Target_Type, Loc),\n-                         Expression   => Relocate_Node (Left_Opnd (N))));\n-\n-                     Rewrite (Right_Opnd (N),\n-                       Make_Type_Conversion (Loc,\n-                        Subtype_Mark => New_Occurrence_Of (Target_Type, Loc),\n-                        Expression   => Relocate_Node (Right_Opnd (N))));\n-\n                      --  Rewrite the conversion operand so that the original\n                      --  node is retained, in order to avoid the warning for\n                      --  redundant conversions in Resolve_Type_Conversion.\n \n-                     Rewrite (N, Relocate_Node (N));\n+                     declare\n+                        Op : constant Node_Id := New_Op_Node (Nkind (N), Loc);\n+                     begin\n+                        Set_Left_Opnd (Op,\n+                          Make_Type_Conversion (Loc,\n+                            Subtype_Mark =>\n+                              New_Occurrence_Of (Target_Type, Loc),\n+                            Expression   => Relocate_Node (Left_Opnd (N))));\n+                        Set_Right_Opnd (Op,\n+                          Make_Type_Conversion (Loc,\n+                            Subtype_Mark =>\n+                              New_Occurrence_Of (Target_Type, Loc),\n+                            Expression   => Relocate_Node (Right_Opnd (N))));\n+\n+                        Rewrite (N, Op);\n+                     end;\n \n                      Set_Etype (N, Target_Type);\n \n@@ -3784,13 +3676,14 @@ package body Checks is\n                --  Universal_Integer. So in numeric conversions it is usually\n                --  within range of the target integer type. Use the static\n                --  bounds of the base types to check. Disable this optimization\n-               --  in case of a generic formal discrete type, because we don't\n-               --  necessarily know the upper bound yet.\n+               --  in case of a descendant of a generic formal discrete type,\n+               --  because we don't necessarily know the upper bound yet.\n \n                if Nkind (Expr) = N_Attribute_Reference\n                  and then Attribute_Name (Expr) = Name_Pos\n                  and then Is_Enumeration_Type (Etype (Prefix (Expr)))\n-                 and then not Is_Generic_Type (Etype (Prefix (Expr)))\n+                 and then\n+                   not Is_Generic_Type (Root_Type (Etype (Prefix (Expr))))\n                  and then Is_Integer_Type (Target_Type)\n                then\n                   declare\n@@ -8403,115 +8296,10 @@ package body Checks is\n       Loc : constant Source_Ptr := Sloc (Parent (N));\n       Typ : constant Entity_Id  := Etype (N);\n \n-      function Safe_To_Capture_In_Parameter_Value return Boolean;\n-      --  Determines if it is safe to capture Known_Non_Null status for an\n-      --  the entity referenced by node N. The caller ensures that N is indeed\n-      --  an entity name. It is safe to capture the non-null status for an IN\n-      --  parameter when the reference occurs within a declaration that is sure\n-      --  to be executed as part of the declarative region.\n-\n       procedure Mark_Non_Null;\n       --  After installation of check, if the node in question is an entity\n       --  name, then mark this entity as non-null if possible.\n \n-      function Safe_To_Capture_In_Parameter_Value return Boolean is\n-         E     : constant Entity_Id := Entity (N);\n-         S     : constant Entity_Id := Current_Scope;\n-         S_Par : Node_Id;\n-\n-      begin\n-         if Ekind (E) /= E_In_Parameter then\n-            return False;\n-         end if;\n-\n-         --  Two initial context checks. We must be inside a subprogram body\n-         --  with declarations and reference must not appear in nested scopes.\n-\n-         if (Ekind (S) /= E_Function and then Ekind (S) /= E_Procedure)\n-           or else Scope (E) /= S\n-         then\n-            return False;\n-         end if;\n-\n-         S_Par := Parent (Parent (S));\n-\n-         if Nkind (S_Par) /= N_Subprogram_Body\n-           or else No (Declarations (S_Par))\n-         then\n-            return False;\n-         end if;\n-\n-         declare\n-            N_Decl : Node_Id;\n-            P      : Node_Id;\n-\n-         begin\n-            --  Retrieve the declaration node of N (if any). Note that N\n-            --  may be a part of a complex initialization expression.\n-\n-            P := Parent (N);\n-            N_Decl := Empty;\n-            while Present (P) loop\n-\n-               --  If we have a short circuit form, and we are within the right\n-               --  hand expression, we return false, since the right hand side\n-               --  is not guaranteed to be elaborated.\n-\n-               if Nkind (P) in N_Short_Circuit\n-                 and then N = Right_Opnd (P)\n-               then\n-                  return False;\n-               end if;\n-\n-               --  Similarly, if we are in an if expression and not part of the\n-               --  condition, then we return False, since neither the THEN or\n-               --  ELSE dependent expressions will always be elaborated.\n-\n-               if Nkind (P) = N_If_Expression\n-                 and then N /= First (Expressions (P))\n-               then\n-                  return False;\n-               end if;\n-\n-               --  If within a case expression, and not part of the expression,\n-               --  then return False, since a particular dependent expression\n-               --  may not always be elaborated\n-\n-               if Nkind (P) = N_Case_Expression\n-                 and then N /= Expression (P)\n-               then\n-                  return False;\n-               end if;\n-\n-               --  While traversing the parent chain, if node N belongs to a\n-               --  statement, then it may never appear in a declarative region.\n-\n-               if Nkind (P) in N_Statement_Other_Than_Procedure_Call\n-                 or else Nkind (P) = N_Procedure_Call_Statement\n-               then\n-                  return False;\n-               end if;\n-\n-               --  If we are at a declaration, record it and exit\n-\n-               if Nkind (P) in N_Declaration\n-                 and then Nkind (P) not in N_Subprogram_Specification\n-               then\n-                  N_Decl := P;\n-                  exit;\n-               end if;\n-\n-               P := Parent (P);\n-            end loop;\n-\n-            if No (N_Decl) then\n-               return False;\n-            end if;\n-\n-            return List_Containing (N_Decl) = Declarations (S_Par);\n-         end;\n-      end Safe_To_Capture_In_Parameter_Value;\n-\n       -------------------\n       -- Mark_Non_Null --\n       -------------------\n@@ -8527,19 +8315,10 @@ package body Checks is\n \n             Set_Is_Known_Null (Entity (N), False);\n \n-            --  We can mark the entity as known to be non-null if either it is\n-            --  safe to capture the value, or in the case of an IN parameter,\n-            --  which is a constant, if the check we just installed is in the\n-            --  declarative region of the subprogram body. In this latter case,\n-            --  a check is decisive for the rest of the body if the expression\n-            --  is sure to be elaborated, since we know we have to elaborate\n-            --  all declarations before executing the body.\n-\n-            --  Couldn't this always be part of Safe_To_Capture_Value ???\n+            --  We can mark the entity as known to be non-null if it is safe to\n+            --  capture the value.\n \n-            if Safe_To_Capture_Value (N, Entity (N))\n-              or else Safe_To_Capture_In_Parameter_Value\n-            then\n+            if Safe_To_Capture_Value (N, Entity (N)) then\n                Set_Is_Known_Non_Null (Entity (N));\n             end if;\n          end if;"}, {"sha": "772adf00afa4be2650c693ee0c6661b017a90f43", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 10, "deletions": 25, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -189,16 +189,6 @@ package Checks is\n    --  Determines whether an expression node requires a run-time access\n    --  check and if so inserts the appropriate run-time check.\n \n-   procedure Apply_Accessibility_Check\n-     (N           : Node_Id;\n-      Typ         : Entity_Id;\n-      Insert_Node : Node_Id);\n-   --  Given a name N denoting an access parameter, emits a run-time\n-   --  accessibility check (if necessary), checking that the level of\n-   --  the object denoted by the access parameter is not deeper than the\n-   --  level of the type Typ. Program_Error is raised if the check fails.\n-   --  Insert_Node indicates the node where the check should be inserted.\n-\n    procedure Apply_Address_Clause_Check (E : Entity_Id; N : Node_Id);\n    --  E is the entity for an object which has an address clause. If checks\n    --  are enabled, then this procedure generates a check that the specified\n@@ -776,12 +766,14 @@ package Checks is\n    --           itself lead to erroneous or unpredictable execution, or to\n    --           other objects becoming abnormal.\n \n-   --  We quote the rules in full here since they are quite delicate. Most\n-   --  of the time, we can just compute away with wrong values, and get a\n-   --  possibly wrong result, which is well within the range of allowed\n-   --  implementation defined behavior. The two tricky cases are subscripted\n-   --  array assignments, where we don't want to do wild stores, and case\n-   --  statements where we don't want to do wild jumps.\n+   --  We quote the rules in full here since they are quite delicate.\n+   --  (???The rules quoted here are obsolete; see the GNAT User's Guide for a\n+   --  description of all the -gnatV switches.) Most of the time, we can just\n+   --  compute away with wrong values, and get a possibly wrong result, which\n+   --  is well within the range of allowed implementation defined behavior. The\n+   --  two tricky cases are subscripted array assignments, where we don't want\n+   --  to do wild stores, and case statements where we don't want to do wild\n+   --  jumps.\n \n    --  In GNAT, we control validity checking with a switch -gnatV that can take\n    --  three parameters, n/d/f for None/Default/Full. These modes have the\n@@ -799,15 +791,8 @@ package Checks is\n    --        alternatives will be executed. Wild jumps cannot result even\n    --        in this mode, since we always do a range check\n \n-   --        For subscripted array assignments, wild stores will result in\n-   --        the expected manner when addresses are calculated using values\n-   --        of subscripts that are out of range.\n-\n-   --      It could perhaps be argued that this mode is still conformant with\n-   --      the letter of the RM, since implementation defined is a rather\n-   --      broad category, but certainly it is not in the spirit of the\n-   --      RM requirement, since wild stores certainly seem to be a case of\n-   --      erroneous behavior.\n+   --        For subscripted array assignments, wild stores can result in\n+   --        overwriting arbitrary memory locations.\n \n    --    Default (default standard RM-compatible validity checking)\n "}, {"sha": "59121ca9ea2f652a06b3a93d52ace1823a8bc915", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 271, "deletions": 263, "changes": 534, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -42,13 +42,13 @@ with Nmake;          use Nmake;\n with Opt;            use Opt;\n with Sem;            use Sem;\n with Sem_Aux;        use Sem_Aux;\n+with Sem_Ch3;        use Sem_Ch3;\n with Sem_Ch6;        use Sem_Ch6;\n with Sem_Ch8;        use Sem_Ch8;\n with Sem_Ch12;       use Sem_Ch12;\n with Sem_Ch13;       use Sem_Ch13;\n with Sem_Disp;       use Sem_Disp;\n with Sem_Prag;       use Sem_Prag;\n-with Sem_Res;        use Sem_Res;\n with Sem_Type;       use Sem_Type;\n with Sem_Util;       use Sem_Util;\n with Sinfo;          use Sinfo;\n@@ -59,6 +59,7 @@ with Snames;         use Snames;\n with Stand;          use Stand;\n with Stringt;        use Stringt;\n with Tbuild;         use Tbuild;\n+with Warnsw;         use Warnsw;\n \n package body Contracts is\n \n@@ -107,6 +108,11 @@ package body Contracts is\n    --  well as Contract_Cases, Subprogram_Variant, invariants and predicates.\n    --  Body_Id denotes the entity of the subprogram body.\n \n+   procedure Preanalyze_Condition\n+     (Subp : Entity_Id;\n+      Expr : Node_Id);\n+   --  Preanalyze the class-wide condition Expr of Subp\n+\n    procedure Set_Class_Condition\n      (Kind : Condition_Kind;\n       Subp : Entity_Id;\n@@ -310,6 +316,7 @@ package body Contracts is\n                         | Name_Async_Writers\n                         | Name_Effective_Reads\n                         | Name_Effective_Writes\n+                        | Name_No_Caching\n               or else (Ekind (Id) = E_Task_Type\n                          and Prag_Nam in Name_Part_Of\n                                        | Name_Depends\n@@ -853,6 +860,7 @@ package body Contracts is\n       AW_Val  : Boolean := False;\n       ER_Val  : Boolean := False;\n       EW_Val  : Boolean := False;\n+      NC_Val  : Boolean;\n       Seen    : Boolean := False;\n       Prag    : Node_Id;\n       Obj_Typ : Entity_Id;\n@@ -950,18 +958,25 @@ package body Contracts is\n       end if;\n \n       --  Verify the mutual interaction of the various external properties.\n-      --  For variables for which No_Caching is enabled, it has been checked\n-      --  already that only False values for other external properties are\n-      --  allowed.\n+      --  For types and variables for which No_Caching is enabled, it has been\n+      --  checked already that only False values for other external properties\n+      --  are allowed.\n \n       if Seen\n-        and then (Ekind (Type_Or_Obj_Id) /= E_Variable\n-                   or else not No_Caching_Enabled (Type_Or_Obj_Id))\n+        and then not No_Caching_Enabled (Type_Or_Obj_Id)\n       then\n          Check_External_Properties\n            (Type_Or_Obj_Id, AR_Val, AW_Val, ER_Val, EW_Val);\n       end if;\n \n+      --  Analyze the non-external volatility property No_Caching\n+\n+      Prag := Get_Pragma (Type_Or_Obj_Id, Pragma_No_Caching);\n+\n+      if Present (Prag) then\n+         Analyze_External_Property_In_Decl_Part (Prag, NC_Val);\n+      end if;\n+\n       --  The following checks are relevant only when SPARK_Mode is on, as\n       --  they are not standard Ada legality rules. Internally generated\n       --  temporaries are ignored, as well as return objects.\n@@ -1041,10 +1056,10 @@ package body Contracts is\n \n             if Is_Type_Id\n               and then not Is_Effectively_Volatile (Type_Or_Obj_Id)\n-              and then Has_Volatile_Component (Type_Or_Obj_Id)\n+              and then Has_Effectively_Volatile_Component (Type_Or_Obj_Id)\n             then\n                Error_Msg_N\n-                 (\"non-volatile type & cannot have volatile\"\n+                 (\"non-volatile type & cannot have effectively volatile\"\n                     & \" components\",\n                   Type_Or_Obj_Id);\n             end if;\n@@ -1070,7 +1085,6 @@ package body Contracts is\n       Saved_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n       --  Save the SPARK_Mode-related data to restore on exit\n \n-      NC_Val   : Boolean;\n       Items    : Node_Id;\n       Prag     : Node_Id;\n       Ref_Elmt : Elmt_Id;\n@@ -1112,14 +1126,6 @@ package body Contracts is\n \n       Check_Type_Or_Object_External_Properties (Type_Or_Obj_Id => Obj_Id);\n \n-      --  Analyze the non-external volatility property No_Caching\n-\n-      Prag := Get_Pragma (Obj_Id, Pragma_No_Caching);\n-\n-      if Present (Prag) then\n-         Analyze_External_Property_In_Decl_Part (Prag, NC_Val);\n-      end if;\n-\n       --  Constant-related checks\n \n       if Ekind (Obj_Id) = E_Constant then\n@@ -1685,6 +1691,10 @@ package body Contracts is\n       Set_Debug_Info_Needed  (Wrapper_Id);\n       Set_Wrapped_Statements (Subp_Id, Wrapper_Id);\n \n+      Set_Has_Pragma_Inline (Wrapper_Id, Has_Pragma_Inline (Subp_Id));\n+      Set_Has_Pragma_Inline_Always\n+        (Wrapper_Id, Has_Pragma_Inline_Always (Subp_Id));\n+\n       --  Create specification and declaration for the wrapper\n \n       if No (Ret_Type) or else Ret_Type = Standard_Void_Type then\n@@ -1713,20 +1723,6 @@ package body Contracts is\n         Make_Handled_Sequence_Of_Statements (Loc,\n           End_Label  => Make_Identifier (Loc, Chars (Wrapper_Id))));\n \n-      --  Move certain flags which are relevant to the body\n-\n-      --  Wouldn't a better way be to perform some sort of copy of Body_Decl\n-      --  for Wrapper_Body be less error-prone ???\n-\n-      if Was_Expression_Function (Body_Decl) then\n-         Set_Was_Expression_Function (Body_Decl, False);\n-         Set_Was_Expression_Function (Wrapper_Body);\n-      end if;\n-\n-      Set_Has_Pragma_Inline (Wrapper_Id, Has_Pragma_Inline (Subp_Id));\n-      Set_Has_Pragma_Inline_Always\n-        (Wrapper_Id, Has_Pragma_Inline_Always (Subp_Id));\n-\n       --  Prepend a call to the wrapper when the subprogram is a procedure\n \n       if No (Ret_Type) or else Ret_Type = Standard_Void_Type then\n@@ -4548,242 +4544,10 @@ package body Contracts is\n \n    procedure Merge_Class_Conditions (Spec_Id : Entity_Id) is\n \n-      procedure Preanalyze_Condition\n-        (Subp : Entity_Id;\n-         Expr : Node_Id);\n-      --  Preanalyze the class-wide condition Expr of Subp\n-\n       procedure Process_Inherited_Conditions (Kind : Condition_Kind);\n       --  Collect all inherited class-wide conditions of Spec_Id and merge\n       --  them into one big condition.\n \n-      --------------------------\n-      -- Preanalyze_Condition --\n-      --------------------------\n-\n-      procedure Preanalyze_Condition\n-        (Subp : Entity_Id;\n-         Expr : Node_Id)\n-      is\n-         procedure Clear_Unset_References;\n-         --  Clear unset references on formals of Subp since preanalysis\n-         --  occurs in a place unrelated to the actual code.\n-\n-         procedure Remove_Controlling_Arguments;\n-         --  Traverse Expr and clear the Controlling_Argument of calls to\n-         --  nonabstract functions.\n-\n-         procedure Remove_Formals (Id : Entity_Id);\n-         --  Remove formals from homonym chains and make them not visible\n-\n-         procedure Restore_Original_Selected_Component;\n-         --  Traverse Expr searching for dispatching calls to functions whose\n-         --  original node was a selected component, and replace them with\n-         --  their original node.\n-\n-         ----------------------------\n-         -- Clear_Unset_References --\n-         ----------------------------\n-\n-         procedure Clear_Unset_References is\n-            F : Entity_Id := First_Formal (Subp);\n-\n-         begin\n-            while Present (F) loop\n-               Set_Unset_Reference (F, Empty);\n-               Next_Formal (F);\n-            end loop;\n-         end Clear_Unset_References;\n-\n-         ----------------------------------\n-         -- Remove_Controlling_Arguments --\n-         ----------------------------------\n-\n-         procedure Remove_Controlling_Arguments is\n-            function Remove_Ctrl_Arg (N : Node_Id) return Traverse_Result;\n-            --  Reset the Controlling_Argument of calls to nonabstract\n-            --  function calls.\n-\n-            ---------------------\n-            -- Remove_Ctrl_Arg --\n-            ---------------------\n-\n-            function Remove_Ctrl_Arg (N : Node_Id) return Traverse_Result is\n-            begin\n-               if Nkind (N) = N_Function_Call\n-                 and then Present (Controlling_Argument (N))\n-                 and then not Is_Abstract_Subprogram (Entity (Name (N)))\n-               then\n-                  Set_Controlling_Argument (N, Empty);\n-               end if;\n-\n-               return OK;\n-            end Remove_Ctrl_Arg;\n-\n-            procedure Remove_Ctrl_Args is new Traverse_Proc (Remove_Ctrl_Arg);\n-         begin\n-            Remove_Ctrl_Args (Expr);\n-         end Remove_Controlling_Arguments;\n-\n-         --------------------\n-         -- Remove_Formals --\n-         --------------------\n-\n-         procedure Remove_Formals (Id : Entity_Id) is\n-            F : Entity_Id := First_Formal (Id);\n-\n-         begin\n-            while Present (F) loop\n-               Set_Is_Immediately_Visible (F, False);\n-               Remove_Homonym (F);\n-               Next_Formal (F);\n-            end loop;\n-         end Remove_Formals;\n-\n-         -----------------------------------------\n-         -- Restore_Original_Selected_Component --\n-         -----------------------------------------\n-\n-         procedure Restore_Original_Selected_Component is\n-            Restored_Nodes_List : Elist_Id := No_Elist;\n-\n-            procedure Fix_Parents (N : Node_Id);\n-            --  Traverse the subtree of N fixing the Parent field of all the\n-            --  nodes.\n-\n-            function Restore_Node (N : Node_Id) return Traverse_Result;\n-            --  Process dispatching calls to functions whose original node was\n-            --  a selected component, and replace them with their original\n-            --  node. Restored nodes are stored in the Restored_Nodes_List\n-            --  to fix the parent fields of their subtrees in a separate\n-            --  tree traversal.\n-\n-            -----------------\n-            -- Fix_Parents --\n-            -----------------\n-\n-            procedure Fix_Parents (N : Node_Id) is\n-\n-               function Fix_Parent\n-                 (Parent_Node : Node_Id;\n-                  Node        : Node_Id) return Traverse_Result;\n-               --  Process a single node\n-\n-               ----------------\n-               -- Fix_Parent --\n-               ----------------\n-\n-               function Fix_Parent\n-                 (Parent_Node : Node_Id;\n-                  Node        : Node_Id) return Traverse_Result\n-               is\n-                  Par : constant Node_Id := Parent (Node);\n-\n-               begin\n-                  if Par /= Parent_Node then\n-                     pragma Assert (not Is_List_Member (Node));\n-                     Set_Parent (Node, Parent_Node);\n-                  end if;\n-\n-                  return OK;\n-               end Fix_Parent;\n-\n-               procedure Fix_Parents is\n-                  new Traverse_Proc_With_Parent (Fix_Parent);\n-\n-            begin\n-               Fix_Parents (N);\n-            end Fix_Parents;\n-\n-            ------------------\n-            -- Restore_Node --\n-            ------------------\n-\n-            function Restore_Node (N : Node_Id) return Traverse_Result is\n-            begin\n-               if Nkind (N) = N_Function_Call\n-                 and then Nkind (Original_Node (N)) = N_Selected_Component\n-                 and then Is_Dispatching_Operation (Entity (Name (N)))\n-               then\n-                  Rewrite (N, Original_Node (N));\n-                  Set_Original_Node (N, N);\n-\n-                  --  Save the restored node in the Restored_Nodes_List to fix\n-                  --  the parent fields of their subtrees in a separate tree\n-                  --  traversal.\n-\n-                  Append_New_Elmt (N, Restored_Nodes_List);\n-               end if;\n-\n-               return OK;\n-            end Restore_Node;\n-\n-            procedure Restore_Nodes is new Traverse_Proc (Restore_Node);\n-\n-         --  Start of processing for Restore_Original_Selected_Component\n-\n-         begin\n-            Restore_Nodes (Expr);\n-\n-            --  After restoring the original node we must fix the decoration\n-            --  of the Parent attribute to ensure tree consistency; required\n-            --  because when the class-wide condition is inherited, calls to\n-            --  New_Copy_Tree will perform copies of this subtree, and formal\n-            --  occurrences with wrong Parent field cannot be mapped to the\n-            --  new formals.\n-\n-            if Present (Restored_Nodes_List) then\n-               declare\n-                  Elmt : Elmt_Id := First_Elmt (Restored_Nodes_List);\n-\n-               begin\n-                  while Present (Elmt) loop\n-                     Fix_Parents (Node (Elmt));\n-                     Next_Elmt (Elmt);\n-                  end loop;\n-               end;\n-            end if;\n-         end Restore_Original_Selected_Component;\n-\n-      --  Start of processing for Preanalyze_Condition\n-\n-      begin\n-         pragma Assert (Present (Expr));\n-         pragma Assert (Inside_Class_Condition_Preanalysis = False);\n-\n-         Push_Scope (Subp);\n-         Install_Formals (Subp);\n-         Inside_Class_Condition_Preanalysis := True;\n-\n-         Preanalyze_And_Resolve (Expr, Standard_Boolean);\n-\n-         Inside_Class_Condition_Preanalysis := False;\n-         Remove_Formals (Subp);\n-         Pop_Scope;\n-\n-         --  If this preanalyzed condition has occurrences of dispatching calls\n-         --  using the Object.Operation notation, during preanalysis such calls\n-         --  are rewritten as dispatching function calls; if at later stages\n-         --  this condition is inherited we must have restored the original\n-         --  selected-component node to ensure that the preanalysis of the\n-         --  inherited condition rewrites these dispatching calls in the\n-         --  correct context to avoid reporting spurious errors.\n-\n-         Restore_Original_Selected_Component;\n-\n-         --  Traverse Expr and clear the Controlling_Argument of calls to\n-         --  nonabstract functions. Required since the preanalyzed condition\n-         --  is not yet installed on its definite context and will be cloned\n-         --  and extended in derivations with additional conditions.\n-\n-         Remove_Controlling_Arguments;\n-\n-         --  Clear also attribute Unset_Reference; again because preanalysis\n-         --  occurs in a place unrelated to the actual code.\n-\n-         Clear_Unset_References;\n-      end Preanalyze_Condition;\n-\n       ----------------------------------\n       -- Process_Inherited_Conditions --\n       ----------------------------------\n@@ -5116,6 +4880,250 @@ package body Contracts is\n       end loop;\n    end Merge_Class_Conditions;\n \n+   ---------------------------------\n+   -- Preanalyze_Class_Conditions --\n+   ---------------------------------\n+\n+   procedure Preanalyze_Class_Conditions (Spec_Id : Entity_Id) is\n+      Cond : Node_Id;\n+\n+   begin\n+      for Kind in Condition_Kind loop\n+         Cond := Class_Condition (Kind, Spec_Id);\n+\n+         if Present (Cond) then\n+            Preanalyze_Condition (Spec_Id, Cond);\n+         end if;\n+      end loop;\n+   end Preanalyze_Class_Conditions;\n+\n+   --------------------------\n+   -- Preanalyze_Condition --\n+   --------------------------\n+\n+   procedure Preanalyze_Condition\n+     (Subp : Entity_Id;\n+      Expr : Node_Id)\n+   is\n+      procedure Clear_Unset_References;\n+      --  Clear unset references on formals of Subp since preanalysis\n+      --  occurs in a place unrelated to the actual code.\n+\n+      procedure Remove_Controlling_Arguments;\n+      --  Traverse Expr and clear the Controlling_Argument of calls to\n+      --  nonabstract functions.\n+\n+      procedure Remove_Formals (Id : Entity_Id);\n+      --  Remove formals from homonym chains and make them not visible\n+\n+      procedure Restore_Original_Selected_Component;\n+      --  Traverse Expr searching for dispatching calls to functions whose\n+      --  original node was a selected component, and replace them with\n+      --  their original node.\n+\n+      ----------------------------\n+      -- Clear_Unset_References --\n+      ----------------------------\n+\n+      procedure Clear_Unset_References is\n+         F : Entity_Id := First_Formal (Subp);\n+\n+      begin\n+         while Present (F) loop\n+            Set_Unset_Reference (F, Empty);\n+            Next_Formal (F);\n+         end loop;\n+      end Clear_Unset_References;\n+\n+      ----------------------------------\n+      -- Remove_Controlling_Arguments --\n+      ----------------------------------\n+\n+      procedure Remove_Controlling_Arguments is\n+         function Remove_Ctrl_Arg (N : Node_Id) return Traverse_Result;\n+         --  Reset the Controlling_Argument of calls to nonabstract\n+         --  function calls.\n+\n+         ---------------------\n+         -- Remove_Ctrl_Arg --\n+         ---------------------\n+\n+         function Remove_Ctrl_Arg (N : Node_Id) return Traverse_Result is\n+         begin\n+            if Nkind (N) = N_Function_Call\n+              and then Present (Controlling_Argument (N))\n+              and then not Is_Abstract_Subprogram (Entity (Name (N)))\n+            then\n+               Set_Controlling_Argument (N, Empty);\n+            end if;\n+\n+            return OK;\n+         end Remove_Ctrl_Arg;\n+\n+         procedure Remove_Ctrl_Args is new Traverse_Proc (Remove_Ctrl_Arg);\n+      begin\n+         Remove_Ctrl_Args (Expr);\n+      end Remove_Controlling_Arguments;\n+\n+      --------------------\n+      -- Remove_Formals --\n+      --------------------\n+\n+      procedure Remove_Formals (Id : Entity_Id) is\n+         F : Entity_Id := First_Formal (Id);\n+\n+      begin\n+         while Present (F) loop\n+            Set_Is_Immediately_Visible (F, False);\n+            Remove_Homonym (F);\n+            Next_Formal (F);\n+         end loop;\n+      end Remove_Formals;\n+\n+      -----------------------------------------\n+      -- Restore_Original_Selected_Component --\n+      -----------------------------------------\n+\n+      procedure Restore_Original_Selected_Component is\n+         Restored_Nodes_List : Elist_Id := No_Elist;\n+\n+         procedure Fix_Parents (N : Node_Id);\n+         --  Traverse the subtree of N fixing the Parent field of all the\n+         --  nodes.\n+\n+         function Restore_Node (N : Node_Id) return Traverse_Result;\n+         --  Process dispatching calls to functions whose original node was\n+         --  a selected component, and replace them with their original\n+         --  node. Restored nodes are stored in the Restored_Nodes_List\n+         --  to fix the parent fields of their subtrees in a separate\n+         --  tree traversal.\n+\n+         -----------------\n+         -- Fix_Parents --\n+         -----------------\n+\n+         procedure Fix_Parents (N : Node_Id) is\n+\n+            function Fix_Parent\n+              (Parent_Node : Node_Id;\n+               Node        : Node_Id) return Traverse_Result;\n+            --  Process a single node\n+\n+            ----------------\n+            -- Fix_Parent --\n+            ----------------\n+\n+            function Fix_Parent\n+              (Parent_Node : Node_Id;\n+               Node        : Node_Id) return Traverse_Result\n+            is\n+               Par : constant Node_Id := Parent (Node);\n+\n+            begin\n+               if Par /= Parent_Node then\n+                  pragma Assert (not Is_List_Member (Node));\n+                  Set_Parent (Node, Parent_Node);\n+               end if;\n+\n+               return OK;\n+            end Fix_Parent;\n+\n+            procedure Fix_Parents is\n+               new Traverse_Proc_With_Parent (Fix_Parent);\n+\n+         begin\n+            Fix_Parents (N);\n+         end Fix_Parents;\n+\n+         ------------------\n+         -- Restore_Node --\n+         ------------------\n+\n+         function Restore_Node (N : Node_Id) return Traverse_Result is\n+         begin\n+            if Nkind (N) = N_Function_Call\n+              and then Nkind (Original_Node (N)) = N_Selected_Component\n+              and then Is_Dispatching_Operation (Entity (Name (N)))\n+            then\n+               Rewrite (N, Original_Node (N));\n+               Set_Original_Node (N, N);\n+\n+               --  Save the restored node in the Restored_Nodes_List to fix\n+               --  the parent fields of their subtrees in a separate tree\n+               --  traversal.\n+\n+               Append_New_Elmt (N, Restored_Nodes_List);\n+            end if;\n+\n+            return OK;\n+         end Restore_Node;\n+\n+         procedure Restore_Nodes is new Traverse_Proc (Restore_Node);\n+\n+      --  Start of processing for Restore_Original_Selected_Component\n+\n+      begin\n+         Restore_Nodes (Expr);\n+\n+         --  After restoring the original node we must fix the decoration\n+         --  of the Parent attribute to ensure tree consistency; required\n+         --  because when the class-wide condition is inherited, calls to\n+         --  New_Copy_Tree will perform copies of this subtree, and formal\n+         --  occurrences with wrong Parent field cannot be mapped to the\n+         --  new formals.\n+\n+         if Present (Restored_Nodes_List) then\n+            declare\n+               Elmt : Elmt_Id := First_Elmt (Restored_Nodes_List);\n+\n+            begin\n+               while Present (Elmt) loop\n+                  Fix_Parents (Node (Elmt));\n+                  Next_Elmt (Elmt);\n+               end loop;\n+            end;\n+         end if;\n+      end Restore_Original_Selected_Component;\n+\n+   --  Start of processing for Preanalyze_Condition\n+\n+   begin\n+      pragma Assert (Present (Expr));\n+      pragma Assert (Inside_Class_Condition_Preanalysis = False);\n+\n+      Push_Scope (Subp);\n+      Install_Formals (Subp);\n+      Inside_Class_Condition_Preanalysis := True;\n+\n+      Preanalyze_Spec_Expression (Expr, Standard_Boolean);\n+\n+      Inside_Class_Condition_Preanalysis := False;\n+      Remove_Formals (Subp);\n+      Pop_Scope;\n+\n+      --  If this preanalyzed condition has occurrences of dispatching calls\n+      --  using the Object.Operation notation, during preanalysis such calls\n+      --  are rewritten as dispatching function calls; if at later stages\n+      --  this condition is inherited we must have restored the original\n+      --  selected-component node to ensure that the preanalysis of the\n+      --  inherited condition rewrites these dispatching calls in the\n+      --  correct context to avoid reporting spurious errors.\n+\n+      Restore_Original_Selected_Component;\n+\n+      --  Traverse Expr and clear the Controlling_Argument of calls to\n+      --  nonabstract functions. Required since the preanalyzed condition\n+      --  is not yet installed on its definite context and will be cloned\n+      --  and extended in derivations with additional conditions.\n+\n+      Remove_Controlling_Arguments;\n+\n+      --  Clear also attribute Unset_Reference; again because preanalysis\n+      --  occurs in a place unrelated to the actual code.\n+\n+      Clear_Unset_References;\n+   end Preanalyze_Condition;\n+\n    ----------------------------------------\n    -- Save_Global_References_In_Contract --\n    ----------------------------------------"}, {"sha": "ae6355ef410b7abedff3981804dc1f4c3d27dbd7", "filename": "gcc/ada/contracts.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fcontracts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fcontracts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -276,6 +276,10 @@ package Contracts is\n    --  which are invoked from the caller side; they are also used to build\n    --  the dispatch-table wrapper (DTW), if required.\n \n+   procedure Preanalyze_Class_Conditions (Spec_Id : Entity_Id);\n+   --  Preanalyze class-wide pre-/postconditions of the given subprogram\n+   --  specification.\n+\n    procedure Process_Class_Conditions_At_Freeze_Point (Typ : Entity_Id);\n    --  Merge, preanalyze, and check class-wide pre/postconditions of Typ\n    --  primitives."}, {"sha": "d84d114bef14d14cb3048d4aea5f90ad04de5159", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -189,7 +189,7 @@ package body Debug is\n    --  d_U  Disable prepending messages with \"error:\".\n    --  d_V  Enable verifications on the expanded tree\n    --  d_W\n-   --  d_X\n+   --  d_X  Disable assertions to check matching of extra formals\n    --  d_Y\n    --  d_Z\n \n@@ -1044,6 +1044,10 @@ package body Debug is\n    --  d_V  Enable verification of the expanded code before calling the backend\n    --       and generate error messages on each inconsistency found.\n \n+   --  d_X  Disable assertions to check matching of extra formals; switch added\n+   --       temporarily to disable these checks until this work is complete if\n+   --       they cause unexpected assertion failures.\n+\n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when\n    --       debugging errors caused by expanded code, where the source location"}, {"sha": "960c505c9ae311963a6b444a36fa3ccb1b5334f0", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_aspects.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_aspects.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_aspects.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_aspects.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -422,7 +422,7 @@ This aspect is equivalent to :ref:`attribute Object_Size<Attribute-Object_Size>`\n \n Aspect Obsolescent\n ==================\n-.. index:: Obsolsecent\n+.. index:: Obsolescent\n \n This aspect is equivalent to :ref:`pragma Obsolescent<Pragma_Obsolescent>`. Note that the\n evaluation of this aspect happens at the point of occurrence, it is not"}, {"sha": "22dae06cefeea7599419b383344094f8e2c95497", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_attributes.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -589,7 +589,7 @@ Attribute Library_Level\n ``P'Library_Level``, where P is an entity name,\n returns a Boolean value which is True if the entity is declared\n at the library level, and False otherwise. Note that within a\n-generic instantition, the name of the generic unit denotes the\n+generic instantiation, the name of the generic unit denotes the\n instance, which means that this attribute can be used to test\n if a generic is instantiated at the library level, as shown\n in this example:\n@@ -1231,7 +1231,7 @@ Attribute System_Allocator_Alignment\n .. index:: System_Allocator_Alignment\n \n ``Standard'System_Allocator_Alignment`` (``Standard`` is the only\n-allowed prefix) provides the observable guaranted to be honored by\n+allowed prefix) provides the observable guaranteed to be honored by\n the system allocator (malloc). This is a static value that can be used\n in user storage pools based on malloc either to reject allocation\n with alignment too large or to enable a realignment circuitry if the"}, {"sha": "fb6a63ced2cf4790021668c63913d06583f55065", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1215,7 +1215,7 @@ a distributed application.\n *\n   \"The range of type System.RPC.Partition_Id.  See E.5(14).\"\n \n-System.RPC.Partion_ID'Last is Integer'Last. See source file :file:`s-rpc.ads`.\n+System.RPC.Partition_ID'Last is Integer'Last. See source file :file:`s-rpc.ads`.\n \n *\n   \"Implementation-defined interfaces in the PCS.  See E.5(26).\""}, {"sha": "ed42d087a25104a6bb28b8e453848ed613fb1166", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 77, "deletions": 71, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1389,7 +1389,7 @@ Pragma CPP_Virtual\n This pragma is now obsolete and, other than generating a warning if warnings\n on obsolescent features are enabled, is completely ignored.\n It is retained for compatibility\n-purposes. It used to be required to ensure compoatibility with C++, but\n+purposes. It used to be required to ensure compatibility with C++, but\n is no longer required for that purpose because GNAT generates\n the same object layout as the G++ compiler by default.\n \n@@ -1438,20 +1438,6 @@ This pragma applies only to protected types and specifies the floor\n deadline inherited by a task when the task enters a protected object.\n It is effective only when the EDF scheduling policy is used.\n \n-.. _Pragma-Default_Initial_Condition:\n-\n-Pragma Default_Initial_Condition\n-================================\n-\n-Syntax:\n-\n-.. code-block:: ada\n-\n-  pragma Default_Initial_Condition [ (null | boolean_EXPRESSION) ];\n-\n-For the semantics of this pragma, see the entry for aspect\n-``Default_Initial_Condition`` in the SPARK 2014 Reference Manual, section 7.3.3.\n-\n Pragma Debug\n ============\n \n@@ -1495,6 +1481,20 @@ This pragma is equivalent to a corresponding ``Check_Policy`` pragma\n with a first argument of ``Debug``. It is retained for historical\n compatibility reasons.\n \n+.. _Pragma-Default_Initial_Condition:\n+\n+Pragma Default_Initial_Condition\n+================================\n+\n+Syntax:\n+\n+.. code-block:: ada\n+\n+  pragma Default_Initial_Condition [ (null | boolean_EXPRESSION) ];\n+\n+For the semantics of this pragma, see the entry for aspect\n+``Default_Initial_Condition`` in the SPARK 2014 Reference Manual, section 7.3.3.\n+\n Pragma Default_Scalar_Storage_Order\n ===================================\n .. index:: Default_Scalar_Storage_Order\n@@ -2174,16 +2174,19 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Extensions_Allowed (On | Off);\n+  pragma Extensions_Allowed (On | Off | All);\n \n \n-This configuration pragma enables or disables the implementation\n-extension mode (the use of Off as a parameter cancels the effect\n-of the *-gnatX* command switch).\n+This configuration pragma enables (via the \"On\" or \"All\" argument) or disables\n+(via the \"Off\" argument) the implementation extension mode; the pragma takes\n+precedence over the *-gnatX* and *-gnatX0* command switches.\n \n-In extension mode, the latest version of the Ada language is\n-implemented (currently Ada 2022), and in addition a number\n-of GNAT specific extensions are recognized as follows:\n+If an argument of \"All\" is specified, the latest version of the Ada language\n+is implemented (currently Ada 2022) and, in addition, a number\n+of GNAT specific extensions are recognized. These extensions are listed\n+below. An argument of \"On\" has the same effect except that only\n+some, not all, of the listed extensions are enabled; those extensions\n+are identified below.\n \n * Constrained attribute for generic objects\n \n@@ -2197,10 +2200,7 @@ of GNAT specific extensions are recognized as follows:\n   functions and the compiler will evaluate some of these intrinsic statically,\n   in particular the ``Shift_Left`` and ``Shift_Right`` intrinsics.\n \n-* ``'Reduce`` attribute\n-\n-  This attribute part of the Ada 202x language definition is provided for\n-  now under -gnatX to confirm and potentially refine its usage and syntax.\n+  An Extensions_Allowed pragma argument of \"On\" enables this extension.\n \n * ``[]`` aggregates\n \n@@ -2334,6 +2334,8 @@ of GNAT specific extensions are recognized as follows:\n   for a given identifer must all statically match. Currently, the case\n   of a binding for a nondiscrete component is not implemented.\n \n+  An Extensions_Allowed pragma argument of \"On\" enables this extension.\n+\n * Fixed lower bounds for array types and subtypes\n \n   Unconstrained array types and subtypes can be specified with a lower bound\n@@ -2378,6 +2380,8 @@ of GNAT specific extensions are recognized as follows:\n   knows the lower bound of unconstrained array formals when the formal's\n   subtype has index ranges with static fixed lower bounds.\n \n+  An Extensions_Allowed pragma argument of \"On\" enables this extension.\n+\n * Prefixed-view notation for calls to primitive subprograms of untagged types\n \n   Since Ada 2005, calls to primitive subprograms of a tagged type that\n@@ -2395,6 +2399,8 @@ of GNAT specific extensions are recognized as follows:\n   name, preference is given to the component in a selected_component\n   (as is currently the case for tagged types with such component names).\n \n+  An Extensions_Allowed pragma argument of \"On\" enables this extension.\n+\n * Expression defaults for generic formal functions\n \n   The declaration of a generic formal function is allowed to specify\n@@ -3866,7 +3872,7 @@ decrease or increase in successive iterations of the loop. In its simplest\n form, just one expression is specified, whose value must increase or decrease\n on each iteration of the loop.\n \n-In a more complex form, multiple arguments can be given which are intepreted\n+In a more complex form, multiple arguments can be given which are interpreted\n in a nesting lexicographic manner. For example:\n \n .. code-block:: ada\n@@ -4634,6 +4640,22 @@ even though\n RM 8.3 (15) stipulates that an overridden operation is not visible within the\n declaration of the overriding operation.\n \n+.. _Pragma-Part_Of:\n+\n+Pragma Part_Of\n+==============\n+\n+Syntax:\n+\n+.. code-block:: ada\n+\n+  pragma Part_Of (ABSTRACT_STATE);\n+\n+  ABSTRACT_STATE ::= NAME\n+\n+For the semantics of this pragma, see the entry for aspect ``Part_Of`` in the\n+SPARK 2014 Reference Manual, section 7.2.6.\n+\n Pragma Partition_Elaboration_Policy\n ===================================\n \n@@ -4651,22 +4673,6 @@ This pragma is standard in Ada 2005, but is available in all earlier\n versions of Ada as an implementation-defined pragma.\n See Ada 2012 Reference Manual for details.\n \n-.. _Pragma-Part_Of:\n-\n-Pragma Part_Of\n-==============\n-\n-Syntax:\n-\n-.. code-block:: ada\n-\n-  pragma Part_Of (ABSTRACT_STATE);\n-\n-  ABSTRACT_STATE ::= NAME\n-\n-For the semantics of this pragma, see the entry for aspect ``Part_Of`` in the\n-SPARK 2014 Reference Manual, section 7.2.6.\n-\n Pragma Passive\n ==============\n \n@@ -4947,7 +4953,7 @@ appear at the start of the declarations in a subprogram body\n Note: This pragma is called ``Post_Class`` rather than\n ``Post'Class`` because the latter would not be strictly\n conforming to the allowed syntax for pragmas. The motivation\n-for provinding pragmas equivalent to the aspects is to allow a program\n+for providing pragmas equivalent to the aspects is to allow a program\n to be written using the pragmas, and then compiled if necessary\n using an Ada compiler that does not recognize the pragmas or\n aspects, but is prepared to ignore the pragmas. The assertion\n@@ -6213,7 +6219,7 @@ replacement of any dots in the unit name by the specified string literal.\n \n Note that Source_File_Name pragmas should not be used if you are using\n project files. The reason for this rule is that the project manager is not\n-aware of these pragmas, and so other tools that use the projet file would not\n+aware of these pragmas, and so other tools that use the project file would not\n be aware of the intended naming conventions. If you are using project files,\n file naming is controlled by Source_File_Name_Project pragmas, which are\n usually supplied automatically by the project manager. A pragma\n@@ -6869,7 +6875,7 @@ Syntax:\n This pragma specifies that the specified entity, which must be\n a variable declared in a library-level package, is to be marked as\n \"Thread Local Storage\" (``TLS``). On systems supporting this (which\n-include Windows, Solaris, GNU/Linux, and VxWorks 6), this causes each\n+include Windows, Solaris, GNU/Linux, and VxWorks), this causes each\n thread (and hence each Ada task) to see a distinct copy of the variable.\n \n The variable must not have default initialization, and if there is\n@@ -7287,33 +7293,10 @@ configuration pragma will ensure this test is not suppressed:\n This pragma is standard in Ada 2005. It is available in all earlier versions\n of Ada as an implementation-defined pragma.\n \n-Note that in addition to the checks defined in the Ada RM, GNAT recogizes a\n+Note that in addition to the checks defined in the Ada RM, GNAT recognizes a\n number of implementation-defined check names. See the description of pragma\n ``Suppress`` for full details.\n \n-Pragma Use_VADS_Size\n-====================\n-.. index:: Size, VADS compatibility\n-\n-.. index:: Rational profile\n-\n-\n-Syntax:\n-\n-\n-.. code-block:: ada\n-\n-  pragma Use_VADS_Size;\n-\n-\n-This is a configuration pragma.  In a unit to which it applies, any use\n-of the 'Size attribute is automatically interpreted as a use of the\n-'VADS_Size attribute.  Note that this may result in incorrect semantic\n-processing of valid Ada 95 or Ada 2005 programs.  This is intended to aid in\n-the handling of existing code which depends on the interpretation of Size\n-as implemented in the VADS compiler.  See description of the VADS_Size\n-attribute for further details.\n-\n .. _Pragma-Unused:\n \n Pragma Unused\n@@ -7348,6 +7331,29 @@ are typically to be used in cases where such warnings are expected.\n Thus it is never necessary to use ``pragma Unused`` for such\n variables, though it is harmless to do so.\n \n+Pragma Use_VADS_Size\n+====================\n+.. index:: Size, VADS compatibility\n+\n+.. index:: Rational profile\n+\n+\n+Syntax:\n+\n+\n+.. code-block:: ada\n+\n+  pragma Use_VADS_Size;\n+\n+\n+This is a configuration pragma.  In a unit to which it applies, any use\n+of the 'Size attribute is automatically interpreted as a use of the\n+'VADS_Size attribute.  Note that this may result in incorrect semantic\n+processing of valid Ada 95 or Ada 2005 programs.  This is intended to aid in\n+the handling of existing code which depends on the interpretation of Size\n+as implemented in the VADS compiler.  See description of the VADS_Size\n+attribute for further details.\n+\n Pragma Validity_Checks\n ======================\n \n@@ -7588,7 +7594,7 @@ expression (which does not exist in Ada 83).\n Note if the second argument of ``DETAILS`` is a ``local_NAME`` then the\n second form is always understood. If the intention is to use\n the fourth form, then you can write ``NAME & \"\"`` to force the\n-intepretation as a *static_string_EXPRESSION*.\n+interpretation as a *static_string_EXPRESSION*.\n \n Note: if the first argument is a valid ``TOOL_NAME``, it will be interpreted\n that way. The use of the ``TOOL_NAME`` argument is relevant only to users"}, {"sha": "ad165cd6849354fe3f771fab84228fef11fcddff", "filename": "gcc/ada/doc/gnat_rm/security_hardening_features.rst", "status": "modified", "additions": 121, "deletions": 5, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -383,11 +383,127 @@ For each block that is marked as visited, the mechanism checks that at\n least one of its predecessors, and at least one of its successors, are\n also marked as visited.\n \n-Verification is performed just before returning.  Subprogram\n-executions that complete by raising or propagating an exception bypass\n-verification-and-return points.  A subprogram that can only complete\n-by raising or propagating an exception may have instrumentation\n-disabled altogether.\n+Verification is performed just before a subprogram returns.  The\n+following fragment:\n+\n+.. code-block:: ada\n+\n+   if X then\n+     Y := F (Z);\n+     return;\n+   end if;\n+\n+\n+gets turned into:\n+\n+.. code-block:: ada\n+\n+   type Visited_Bitmap is array (1..N) of Boolean with Pack;\n+   Visited : aliased Visited_Bitmap := (others => False);\n+   --  Bitmap of visited blocks.  N is the basic block count.\n+   [...]\n+   --  Basic block #I\n+   Visited(I) := True;\n+   if X then\n+     --  Basic block #J\n+     Visited(J) := True;\n+     Y := F (Z);\n+     CFR.Check (N, Visited'Access, CFG'Access);\n+     --  CFR is a hypothetical package whose Check procedure calls\n+     --  libgcc's __hardcfr_check, that traps if the Visited bitmap\n+     --  does not hold a valid path in CFG, the run-time\n+     --  representation of the control flow graph in the enclosing\n+     --  subprogram.\n+     return;\n+   end if;\n+   --  Basic block #K\n+   Visited(K) := True;\n+\n+\n+Verification would also be performed before tail calls, if any\n+front-ends marked them as mandatory or desirable, but none do.\n+Regular calls are optimized into tail calls too late for this\n+transformation to act on it.\n+\n+In order to avoid adding verification after potential tail calls,\n+which would prevent tail-call optimization, we recognize returning\n+calls, i.e., calls whose result, if any, is returned by the calling\n+subprogram to its caller immediately after the call returns.\n+Verification is performed before such calls, whether or not they are\n+ultimately optimized to tail calls.  This behavior is enabled by\n+default whenever sibcall optimization is enabled (see\n+:switch:`-foptimize-sibling-calls`); it may be disabled with\n+:switch:`-fno-hardcfr-check-returning-calls`, or enabled with\n+:switch:`-fhardcfr-check-returning-calls`, regardless of the\n+optimization, but the lack of other optimizations may prevent calls\n+from being recognized as returning calls:\n+\n+.. code-block:: ada\n+\n+     --  CFR.Check here, with -fhardcfr-check-returning-calls.\n+     P (X);\n+     --  CFR.Check here, with -fno-hardcfr-check-returning-calls.\n+     return;\n+\n+or:\n+\n+.. code-block:: ada\n+\n+     --  CFR.Check here, with -fhardcfr-check-returning-calls.\n+     R := F (X);\n+     --  CFR.Check here, with -fno-hardcfr-check-returning-calls.\n+     return R;\n+\n+\n+Any subprogram from which an exception may escape, i.e., that may\n+raise or propagate an exception that isn't handled internally, is\n+conceptually enclosed by a cleanup handler that performs verification,\n+unless this is disabled with :switch:`-fno-hardcfr-check-exceptions`.\n+With this feature enabled, a subprogram body containing:\n+\n+.. code-block:: ada\n+\n+     --  ...\n+       Y := F (X);  -- May raise exceptions.\n+     --  ...\n+       raise E;  -- Not handled internally.\n+     --  ...\n+\n+\n+gets modified as follows:\n+\n+.. code-block:: ada\n+\n+   begin\n+     --  ...\n+       Y := F (X);  -- May raise exceptions.\n+     --  ...\n+       raise E;  -- Not handled internally.\n+     --  ...\n+   exception\n+     when others =>\n+       CFR.Check (N, Visited'Access, CFG'Access);\n+       raise;\n+   end;\n+\n+\n+Verification may also be performed before No_Return calls, whether\n+only nothrow ones, with\n+:switch:`-fhardcfr-check-noreturn-calls=nothrow`, or all of them, with\n+:switch:`-fhardcfr-check-noreturn-calls=always`.  The default is\n+:switch:`-fhardcfr-check-noreturn-calls=never` for this feature, that\n+disables checking before No_Return calls.\n+\n+When a No_Return call returns control to its caller through an\n+exception, verification may have already been performed before the\n+call, if :switch:`-fhardcfr-check-noreturn-calls=always` is in effect.\n+The compiler arranges for already-checked No_Return calls without a\n+preexisting handler to bypass the implicitly-added cleanup handler and\n+thus the redundant check, but a local exception or cleanup handler, if\n+present, will modify the set of visited blocks, and checking will take\n+place again when the caller reaches the next verification point,\n+whether it is a return or reraise statement after the exception is\n+otherwise handled, or even another No_Return call.\n \n The instrumentation for hardening with control flow redundancy can be\n observed in dump files generated by the command-line option"}, {"sha": "27659a404630d1a727cfa6d1baca73e27bf7580c", "filename": "gcc/ada/doc/gnat_rm/standard_library_routines.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_library_routines.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_library_routines.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_library_routines.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -157,7 +157,7 @@ the unit is not implemented.\n \n ``Ada.Directories.Hierarchical_File_Names`` *(A.16.1)*\n   This package provides additional directory operations handling\n-  hiearchical file names.\n+  hierarchical file names.\n \n \n ``Ada.Directories.Information`` *(A.16)*\n@@ -550,7 +550,7 @@ the unit is not implemented.\n   This package provides the capability of associating arbitrary\n   task-specific data with separate tasks.\n \n-``Ada.Task_Identifification`` *(C.7.1)*\n+``Ada.Task_Identification`` *(C.7.1)*\n   This package provides capabilities for task identification.\n \n ``Ada.Task_Termination`` *(C.7.3)*"}, {"sha": "3aae70a44095cbe7898515b38ed1fac0040144cd", "filename": "gcc/ada/doc/gnat_rm/the_gnat_library.rst", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fthe_gnat_library.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fthe_gnat_library.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fthe_gnat_library.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -47,7 +47,7 @@ of GNAT, and will generate a warning message.\n This child of ``Ada.Characters``\n provides a set of definitions corresponding to those in the\n RM-defined package ``Ada.Characters.Latin_1`` but with the\n-few modifications required for ``Latin-9``\n+few modifications required for ``Latin-9``.\n The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n@@ -69,12 +69,12 @@ instead of ``Character``.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n-.. _`Ada.Characters.Wide_Latin_9_(a-cwila1.ads)`:\n+.. _`Ada.Characters.Wide_Latin_9_(a-cwila9.ads)`:\n \n-``Ada.Characters.Wide_Latin_9`` (:file:`a-cwila1.ads`)\n+``Ada.Characters.Wide_Latin_9`` (:file:`a-cwila9.ads`)\n ======================================================\n \n-.. index:: Ada.Characters.Wide_Latin_9 (a-cwila1.ads)\n+.. index:: Ada.Characters.Wide_Latin_9 (a-cwila9.ads)\n \n .. index:: Latin_9 constants for Wide_Character\n \n@@ -159,8 +159,8 @@ where this concept makes sense.\n This child of ``Ada.Command_Line``\n provides a mechanism for logically removing\n arguments from the argument list.  Once removed, an argument is not visible\n-to further calls on the subprograms in ``Ada.Command_Line`` will not\n-see the removed argument.\n+to further calls to the subprograms in ``Ada.Command_Line``. These calls\n+will not see the removed argument.\n \n .. _`Ada.Command_Line.Response_File_(a-clrefi.ads)`:\n \n@@ -833,7 +833,7 @@ obtaining information about exceptions provided by Ada 83 compilers.\n \n .. index:: Memory corruption debugging\n \n-Provide a debugging storage pools that helps tracking memory corruption\n+Provides a debugging storage pools that helps tracking memory corruption\n problems.\n See ``The GNAT Debug_Pool Facility`` section in the :title:`GNAT User's Guide`.\n \n@@ -1043,7 +1043,7 @@ a message from a subprogram in a pure package, since the\n necessary types and subprograms are in ``Ada.Exceptions``\n which is not a pure unit. ``GNAT.Exceptions`` provides a\n facility for getting around this limitation for a few\n-predefined exceptions, and for example allow raising\n+predefined exceptions, and for example allows raising\n ``Constraint_Error`` with a message from a pure subprogram.\n \n .. _`GNAT.Expect_(g-expect.ads)`:\n@@ -1098,7 +1098,7 @@ in this package can be used to reestablish the required mode.\n .. index:: Formatted String\n \n Provides support for C/C++ printf() formatted strings. The format is\n-copied from the printf() routine and should therefore gives identical\n+copied from the printf() routine and should therefore give identical\n output. Some generic routines are provided to be able to use types\n derived from Integer, Float or enumerations as values for the\n formatted string.\n@@ -1314,7 +1314,7 @@ Provides a generator of static minimal perfect hash functions. No\n collisions occur and each item can be retrieved from the table in one\n probe (perfect property). The hash table size corresponds to the exact\n size of the key set and no larger (minimal property). The key set has to\n-be know in advance (static property). The hash functions are also order\n+be known in advance (static property). The hash functions are also order\n preserving. If w2 is inserted after w1 in the generator, their\n hashcode are in the same order. These hashing functions are very\n convenient for use with realtime applications.\n@@ -1399,7 +1399,7 @@ this interface usable for large files or socket streams.\n \n .. index:: Secondary Stack Info\n \n-Provide the capability to query the high water mark of the current task's\n+Provides the capability to query the high water mark of the current task's\n secondary stack.\n \n .. _`GNAT.Semaphores_(g-semaph.ads)`:\n@@ -1514,7 +1514,7 @@ targets.\n A high level and portable interface to develop sockets based applications.\n This package is based on the sockets thin binding found in\n ``GNAT.Sockets.Thin``. Currently ``GNAT.Sockets`` is implemented\n-on all native GNAT ports and on VxWorks cross prots.  It is not implemented for\n+on all native GNAT ports and on VxWorks cross ports.  It is not implemented for\n the LynxOS cross port.\n \n .. _`GNAT.Source_Info_(g-souinf.ads)`:\n@@ -1781,12 +1781,12 @@ in various debugging situations.\n \n .. index:: Trace back facilities\n \n-.. _`GNAT.UTF_32_(g-table.ads)`:\n+.. _`GNAT.UTF_32_(g-utf_32.ads)`:\n \n-``GNAT.UTF_32`` (:file:`g-table.ads`)\n-=====================================\n+``GNAT.UTF_32`` (:file:`g-utf_32.ads`)\n+======================================\n \n-.. index:: GNAT.UTF_32 (g-table.ads)\n+.. index:: GNAT.UTF_32 (g-utf_32.ads)\n \n .. index:: Wide character codes\n \n@@ -1800,12 +1800,12 @@ lexical rules for identifiers and strings, and also a\n lower case to upper case fold routine corresponding to\n the Ada 2005 rules for identifier equivalence.\n \n-.. _`GNAT.Wide_Spelling_Checker_(g-u3spch.ads)`:\n+.. _`GNAT.UTF_32_Spelling_Checker_(g-u3spch.ads)`:\n \n-``GNAT.Wide_Spelling_Checker`` (:file:`g-u3spch.ads`)\n-=====================================================\n+``GNAT.UTF_32_Spelling_Checker`` (:file:`g-u3spch.ads`)\n+=======================================================\n \n-.. index:: GNAT.Wide_Spelling_Checker (g-u3spch.ads)\n+.. index:: GNAT.UTF_32_Spelling_Checker (g-u3spch.ads)\n \n .. index:: Spell checking\n "}, {"sha": "fe0b567c2b95661de384d7cdeeabe0e4c10ce205", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 50, "deletions": 7, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -2180,7 +2180,13 @@ Alphabetical List of All Switches\n .. index:: -gnatX  (gcc)\n \n :switch:`-gnatX`\n-  Enable GNAT implementation extensions and latest Ada version.\n+  Enable core GNAT implementation extensions and latest Ada version.\n+\n+\n+.. index:: -gnatX0  (gcc)\n+\n+:switch:`-gnatX0`\n+  Enable all GNAT implementation extensions and latest Ada version.\n \n \n .. index:: -gnaty  (gcc)\n@@ -2789,6 +2795,8 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n \n   * :switch:`-gnatw.q` (questionable layout of record types)\n \n+  * :switch:`-gnatw_q` (ignored equality)\n+\n   * :switch:`-gnatw_r` (out-of-order record representation clauses)\n \n   * :switch:`-gnatw.s` (overridden size clause)\n@@ -2930,7 +2938,7 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   tests that are known to be True or False at compile time. The default\n   is that such warnings are not generated.\n   Note that this warning does\n-  not get issued for the use of boolean variables or constants whose\n+  not get issued for the use of boolean constants whose\n   values are known at compile time, since this is a standard technique\n   for conditional compilation in Ada, and this would generate too many\n   false positive warnings.\n@@ -3213,8 +3221,13 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n \n   This switch activates warnings on component clauses in record\n   representation clauses that leave holes (gaps) in the record layout.\n-  If this warning option is active, then record representation clauses\n-  should specify a contiguous layout, adding unused fill fields if needed.\n+  If a record representation clause does not specify a location for\n+  every component of the record type, then the warnings generated (or not\n+  generated) are unspecified. For example, there may be gaps for which\n+  either no warning is generated or a warning is generated that\n+  incorrectly describes the location of the gap. This undesirable situation\n+  can sometimes be avoided by adding (and specifying the location for) unused\n+  fill fields.\n \n \n .. index:: -gnatw.H  (gcc)\n@@ -3681,6 +3694,25 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   a record type would very likely cause inefficiencies.\n \n \n+.. index:: -gnatw_q  (gcc)\n+\n+:switch:`-gnatw_q`\n+  *Activate warnings for ignored equality operators.*\n+\n+  This switch activates warnings for a user-defined \"=\" function that does\n+  not compose (i.e. is ignored for a predefined \"=\" for a composite type\n+  containing a component whose type has the user-defined \"=\" as\n+  primitive). Note that the user-defined \"=\" must be a primitive operator\n+  in order to trigger the warning.\n+\n+  The default is that these warnings are not given.\n+\n+.. index:: -gnatw_Q  (gcc)\n+\n+:switch:`-gnatw_Q`\n+  *Suppress warnings for ignored equality operators.*\n+\n+\n .. index:: -gnatwr  (gcc)\n \n :switch:`-gnatwr`\n@@ -5585,16 +5617,27 @@ indicate Ada 83 compatibility mode.\n   language.\n \n \n-.. index:: -gnatX  (gcc)\n+.. index:: -gnatX0  (gcc)\n .. index:: Ada language extensions\n .. index:: GNAT extensions\n \n-:switch:`-gnatX` (Enable GNAT Extensions)\n+:switch:`-gnatX0` (Enable GNAT Extensions)\n   This switch directs the compiler to implement the latest version of the\n   language (currently Ada 2022) and also to enable certain GNAT implementation\n   extensions that are not part of any Ada standard. For a full list of these\n   extensions, see the GNAT reference manual, ``Pragma Extensions_Allowed``.\n \n+.. index:: -gnatX  (gcc)\n+.. index:: Ada language extensions\n+.. index:: GNAT extensions\n+\n+:switch:`-gnatX` (Enable core GNAT Extensions)\n+  This switch is similar to -gnatX0 except that only some, not all, of the\n+  GNAT-defined language extensions are enabled. For a list of the\n+  extensions enabled by this switch, see the GNAT reference manual\n+  ``Pragma Extensions_Allowed`` and the description of that pragma's\n+  \"On\" (as opposed to \"All\") argument.\n+\n \n .. _Character_Set_Control:\n \n@@ -7386,7 +7429,7 @@ development environments much more flexible.\n Examples of ``gnatbind`` Usage\n ------------------------------\n \n-Here are some examples of ``gnatbind`` invovations:\n+Here are some examples of ``gnatbind`` invocations:\n \n   ::\n "}, {"sha": "76a1461777ee137a8a31aeef304ff332a090569f", "filename": "gcc/ada/doc/gnat_ugn/elaboration_order_handling_in_gnat.rst", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -265,7 +265,7 @@ respect to control and data flow.\n Checking the Elaboration Order\n ==============================\n \n-To avoid placing the entire elaboration-order burden on the programmer, Ada \n+To avoid placing the entire elaboration-order burden on the programmer, Ada\n provides three lines of defense:\n \n * *Static semantics*\n@@ -931,9 +931,9 @@ Resolving Elaboration Circularities\n ===================================\n \n The most desirable option from the point of view of long-term maintenance is to\n-rearrange the program so that the elaboration problems are avoided. One useful \n-technique is to place the elaboration code into separate child packages. \n-Another is to move some of the initialization code to explicitly invoked \n+rearrange the program so that the elaboration problems are avoided. One useful\n+technique is to place the elaboration code into separate child packages.\n+Another is to move some of the initialization code to explicitly invoked\n subprograms, where the program controls the order of initialization explicitly.\n Although this is the most desirable option, it may be impractical and involve\n too much modification, especially in the case of complex legacy code.\n@@ -990,8 +990,9 @@ following tactics to eliminate the circularity:\n      change pragma Elaborate_All for unit \"...\" to Elaborate in unit \"...\"\n \n   This tactic is always suggested with the pragma ``Elaborate_All`` elimination\n-  tactic. It offers a different alernative of guaranteeing that the argument of\n-  the pragma will still be elaborated prior to the unit containing the pragma.\n+  tactic. It offers a different alternative of guaranteeing that the argument\n+  of the pragma will still be elaborated prior to the unit containing the\n+  pragma.\n \n   The programmer should update the pragma as advised, and rebuild the program.\n \n@@ -1281,7 +1282,7 @@ Summary of Procedures for Elaboration Control\n \n A programmer should first compile the program with the default options, using\n none of the binder or compiler switches. If the binder succeeds in finding an\n-elaboration order, then apart from possible cases involing dispatching calls\n+elaboration order, then apart from possible cases involving dispatching calls\n and access-to-subprogram types, the program is free of elaboration errors.\n \n If it is important for the program to be portable to compilers other than GNAT,"}, {"sha": "5dab2d4562694a4ac95fc254350db23f1872343d", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 39, "deletions": 34, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -859,16 +859,18 @@ bug occurs, and then be able to retrieve the sequence of calls with the same\n program compiled with debug information.\n \n However the ``addr2line`` tool does not work with Position-Independent Code\n-(PIC), the historical example being Windows DLLs, which nowadays encompasses\n-Position-Independent Executables (PIE) on recent Windows versions.\n-\n-In order to translate addresses into the source lines with Position-Independent\n-Executables on recent Windows versions, in other words without using the switch\n-:switch:`-no-pie` during linking, you need to use the ``gnatsymbolize`` tool\n-with :switch:`--load` instead of the ``addr2line`` tool. The main difference\n-is that you need to copy the Load Address output in the traceback ahead of the\n-sequence of addresses. And the default mode of ``gnatsymbolize`` is equivalent\n-to that of ``addr2line`` with the above switches, so none of them is needed::\n+(PIC), the historical example being Linux dynamic libraries and Windows DLLs,\n+which nowadays encompasse Position-Independent Executables (PIE) on recent\n+Linux and Windows versions.\n+\n+In order to translate addresses the source lines with Position-Independent\n+Executables on recent Linux and Windows versions, in other words without\n+using the switch :switch:`-no-pie` during linking, you need to use the\n+``gnatsymbolize`` tool with :switch:`--load` instead of the ``addr2line``\n+tool. The main difference is that you need to copy the Load Address output\n+in the traceback ahead of the sequence of addresses. And the default mode\n+of ``gnatsymbolize`` is equivalent to that of ``addr2line`` with the above\n+switches, so none of them is needed::\n \n      $ gnatmake stb -g -bargs -E\n      $ stb\n@@ -879,7 +881,7 @@ to that of ``addr2line`` with the above switches, so none of them is needed::\n      Call stack traceback locations:\n      0x401373 0x40138b 0x40139c 0x401335 0x4011c4 0x4011f1 0x77e892a4\n \n-     $ gnatsymbolize --load stb 0x400000 0x401373 0x40138b 0x40139c 0x401335\n+     $ gnatsymbolize --load stb 0x400000 0x401373 0x40138b 0x40139c 0x401335 \\\n         0x4011c4 0x4011f1 0x77e892a4\n \n      0x00401373 Stb.P1 at stb.adb:5\n@@ -926,10 +928,9 @@ Ada facilities defined in ``Ada.Exceptions``. Here is a simple example:\n          P2;\n       end STB;\n \n-This program will output:\n-\n   ::\n \n+     $ gnatmake stb -g -bargs -E -largs -no-pie\n      $ stb\n \n      raised CONSTRAINT_ERROR : stb.adb:12 range check failed\n@@ -957,12 +958,17 @@ addresses to strings:\n       with Ada.Text_IO;\n       with GNAT.Traceback;\n       with GNAT.Debug_Utilities;\n+      with System;\n \n       procedure STB is\n \n          use Ada;\n+         use Ada.Text_IO;\n          use GNAT;\n          use GNAT.Traceback;\n+         use System;\n+\n+         LA : constant Address := Executable_Load_Address;\n \n          procedure P1 is\n             TB  : Tracebacks_Array (1 .. 10);\n@@ -972,14 +978,14 @@ addresses to strings:\n          begin\n             Call_Chain (TB, Len);\n \n-            Text_IO.Put (\"In STB.P1 : \");\n+            Put (\"In STB.P1 : \");\n \n             for K in 1 .. Len loop\n-               Text_IO.Put (Debug_Utilities.Image (TB (K)));\n-               Text_IO.Put (' ');\n+               Put (Debug_Utilities.Image_C (TB (K)));\n+               Put (' ');\n             end loop;\n \n-            Text_IO.New_Line;\n+            New_Line;\n          end P1;\n \n          procedure P2 is\n@@ -988,6 +994,10 @@ addresses to strings:\n          end P2;\n \n       begin\n+         if LA /= Null_Address then\n+            Put_Line (\"Load address: \" & Debug_Utilities.Image_C (LA));\n+         end if;\n+\n          P2;\n       end STB;\n \n@@ -996,8 +1006,9 @@ addresses to strings:\n      $ gnatmake stb -g\n      $ stb\n \n-     In STB.P1 : 16#0040_F1E4# 16#0040_14F2# 16#0040_170B# 16#0040_171C#\n-     16#0040_1461# 16#0040_11C4# 16#0040_11F1# 16#77E8_92A4#\n+     Load address: 0x400000\n+     In STB.P1 : 0x40F1E4 0x4014F2 0x40170B 0x40171C 0x401461 0x4011C4 \\\n+       0x4011F1 0x77E892A4\n \n \n You can then get further information by invoking the ``addr2line`` tool or\n@@ -1058,7 +1069,7 @@ Here is an example:\n \n   ::\n \n-      $ gnatmake -g .\\stb -bargs -E\n+      $ gnatmake -g stb -bargs -E\n       $ stb\n \n       0040149F in stb.p1 at stb.adb:8\n@@ -1070,16 +1081,6 @@ Here is an example:\n       004011F1 in mainCRTStartup at crt1.c:222\n       77E892A4 in ?? at ??:0\n \n-In the above example the ``.\\`` syntax in the ``gnatmake`` command\n-is currently required by ``addr2line`` for files that are in\n-the current working directory.\n-Moreover, the exact sequence of linker options may vary from platform\n-to platform.\n-The above :switch:`-largs` section is for Windows platforms. By contrast,\n-under Unix there is no need for the :switch:`-largs` section.\n-Differences across platforms are due to details of linker implementation.\n-\n-\n .. rubric:: Tracebacks From Anywhere in a Program\n \n It is possible to get a symbolic stack traceback\n@@ -1252,8 +1253,8 @@ most often, and are therefore the most time-consuming.\n better handle Ada programs and multitasking.\n It is currently supported on the following platforms\n \n-* linux x86/x86_64\n-* windows x86\n+* Linux x86/x86_64\n+* Windows x86/x86_64 (without PIE support)\n \n In order to profile a program using ``gprof``, several steps are needed:\n \n@@ -1291,6 +1292,10 @@ Note that only the objects that were compiled with the ``-pg`` switch will\n be profiled; if you need to profile your whole project, use the ``-f``\n gnatmake switch to force full recompilation.\n \n+Note that on Windows, gprof does not support PIE. The ``-no-pie`` switch\n+should be added to the linker flags to disable this feature.\n+\n+\n .. _Program_execution:\n \n \n@@ -2321,7 +2326,7 @@ erroneous, and the compiler would be entitled to assume that\n \n However, in practice, this would cause some existing code that\n seems to work with no optimization to start failing at high\n-levels of optimzization.\n+levels of optimization.\n \n What the compiler does for such cases is to assume that marking\n a variable as aliased indicates that some \"funny business\" may\n@@ -2728,7 +2733,7 @@ To deal with the portability issue, and with the problem of\n mathematical versus run-time interpretation of the expressions in\n assertions, GNAT provides comprehensive control over the handling\n of intermediate overflow. GNAT can operate in three modes, and\n-furthemore, permits separate selection of operating modes for\n+furthermore, permits separate selection of operating modes for\n the expressions within assertions (here the term 'assertions'\n is used in the technical sense, which includes preconditions and so forth)\n and for expressions appearing outside assertions."}, {"sha": "7df45d518aa0392e15cf8b75f48d5440c10c2f73", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 32, "deletions": 36, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -14,7 +14,6 @@ This chapter describes a number of utility programs:\n \n   * :ref:`The_File_Cleanup_Utility_gnatclean`\n   * :ref:`The_GNAT_Library_Browser_gnatls`\n-  * :ref:`The_Coding_Standard_Verifier_gnatcheck`\n   * :ref:`The_GNAT_Pretty_Printer_gnatpp`\n   * :ref:`The_Body_Stub_Generator_gnatstub`\n   * :ref:`The_Backtrace_Symbolizer_gnatsymbolize`\n@@ -465,27 +464,6 @@ building specialized scripts.\n       /home/comar/local/adainclude/unchconv.ads\n \n \n-.. only:: PRO or GPL\n-\n-  .. _The_Coding_Standard_Verifier_gnatcheck:\n-\n-  The Coding Standard Verifier ``gnatcheck``\n-  ==========================================\n-\n-  .. index:: ! gnatcheck\n-  .. index:: ASIS\n-\n-  The ``gnatcheck`` tool is an ASIS-based utility that checks coding standard\n-  compliance of Ada source files according to a given set of semantic rules.\n-\n-  ``gnatcheck`` is a project-aware tool\n-  (see :ref:`Using_Project_Files_with_GNAT_Tools` for a description of\n-  the project-related switches). The project file package that can specify\n-  ``gnatcheck`` switches is named ``Check``.\n-\n-  For full details, plese refer to :title:`GNATcheck Reference Manual`.\n-\n-\n .. only:: PRO or GPL\n \n    .. _The_GNAT_Pretty_Printer_gnatpp:\n@@ -2176,6 +2154,7 @@ building specialized scripts.\n         with GNAT.IO; use GNAT.IO;\n         with GNAT.Traceback; use GNAT.Traceback;\n         with GNAT.Debug_Utilities;\n+\n         package body Pck is\n            procedure Call_Me_Third is\n               TB : Tracebacks_Array (1 .. 5);\n@@ -2199,40 +2178,57 @@ building specialized scripts.\n               Call_Me_Second;\n            end Call_Me_First;\n         end Pck;\n+\n+        with GNAT.IO; use GNAT.IO;\n+        with GNAT.Debug_Utilities;\n+        with GNAT.Traceback;\n+        with System;\n+\n         with Pck; use Pck;\n \n         procedure Foo is\n+           LA : constant System.Address := \\\n+             GNAT.Traceback.Executable_Load_Address;\n+\n+           use type System.Address;\n+\n         begin\n+           if LA /= System.Null_Address then\n+              Put_Line (\"Load address: \" & GNAT.Debug_Utilities.Image_C (LA));\n+           end if;\n+\n            Global_Val := 123;\n            Call_Me_First;\n         end Foo;\n \n   This program, when built and run, prints a list of addresses which\n   correspond to the traceback when inside function ``Call_Me_Third``.\n-  For instance, on x86_64 GNU/Linux:\n+  For instance, on x86-64 GNU/Linux:\n \n     ::\n \n        $ gnatmake -g -q foo.adb\n        $ ./foo\n-       0x0000000000402561\n-       0x00000000004025EF\n-       0x00000000004025FB\n-       0x0000000000402611\n-       0x00000000004024C7\n+       Load address: 0x00005586C9D7D000\n+       0x00005586C9D81105\n+       0x00005586C9D8119B\n+       0x00005586C9D811A7\n+       0x00005586C9D8128C\n+       0x00005586C9D81069\n \n   ``gnatsymbolize`` can be used to translate those addresses into\n   code locations as follow:\n \n     ::\n \n-       $ gnatsymbolize foo 0x0000000000402561 0x00000000004025EF \\\n-           0x00000000004025FB 0x0000000000402611 0x00000000004024C7\n-       Pck.Call_Me_Third at pck.adb:12\n-       Pck.Call_Me_Second at pck.adb:20\n-       Pck.Call_Me_First at pck.adb:25\n-       Foo at foo.adb:6\n-       Main at b~foo.adb:184\n+       $ gnatsymbolize --load foo 0x00005586C9D7D000 0x00005586C9D81105 \\\n+           0x00005586C9D8119B 0x00005586C9D811A7 0x00005586C9D8128C \\\n+           0x00005586C9D81069\n+       0x5586c9d81105 Pck.Call_Me_Third at pck.adb:12\n+       0x5586c9d8119b Pck.Call_Me_Second at pck.adb:20\n+       0x5586c9d811a7 Pck.Call_Me_First at pck.adb:25\n+       0x5586c9d8128c Foo at foo.adb:6\n+       0x5586c9d81069 Main at b~foo.adb:199\n \n   Switches for ``gnatsymbolize``\n   ------------------------------\n@@ -2265,7 +2261,7 @@ building specialized scripts.\n \n   :switch:`--load`\n     Interpret the first address as the load address of the executable.\n-    This is needed for position-independent executables on Windows.\n+    This is needed for position-independent executables on Linux and Windows.\n \n   Requirements for Correct Operation\n   ----------------------------------"}, {"sha": "48f1a96a30994e0c4f3b8515f04f3d908f20f847", "filename": "gcc/ada/doc/share/conf.py", "status": "modified", "additions": 73, "deletions": 29, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fshare%2Fconf.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fdoc%2Fshare%2Fconf.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fshare%2Fconf.py?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -2,6 +2,9 @@\n # Style_Check:Python_Fragment (meaning no pyflakes check)\n #\n # GNAT build configuration file\n+# --------------------------------\n+# This file defines the configuration for all files created\n+# by Sphinx. In this case, pdf (using latex) and html\n \n import sys\n import os\n@@ -13,31 +16,30 @@\n import ada_pygments\n import latex_elements\n \n-# Some configuration values for the various documentation handled by\n-# this conf.py\n-\n+# Define list of documents to be built and their title\n DOCS = {\n-    'gnat_rm': {\n-        'title': 'GNAT Reference Manual'},\n-    'gnat_ugn': {\n-        'title': 'GNAT User\\'s Guide for Native Platforms'},\n-    'gnat-style': {\n-        'title': 'GNAT Coding Style: A Guide for GNAT Developers'}}\n+    \"gnat_rm\": {\"title\": \"GNAT Reference Manual\"},\n+    \"gnat_ugn\": {\"title\": \"GNAT User's Guide for Native Platforms\"},\n+    \"gnat-style\": {\"title\": \"GNAT Coding Style: A Guide for GNAT Developers\"},\n+}\n \n # Then retrieve the source directory\n root_source_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n gnatvsn_spec = os.path.join(root_source_dir, '..', 'gnatvsn.ads')\n basever = os.path.join(root_source_dir, '..', '..', 'BASE-VER')\n texi_fsf = True  # Set to False when FSF doc is switched to sphinx by default\n \n+# get vsn specs\n with open(gnatvsn_spec, 'r') as fd:\n     gnatvsn_content = fd.read()\n \n \n+# read copyright test from .rst file (used also for sanity-checking)\n def get_copyright():\n     return '2008-%s, Free Software Foundation' % time.strftime('%Y')\n \n \n+# get environment gnat version (used also for sanity-checking)\n def get_gnat_version():\n     m = re.search(r'Gnat_Static_Version_String : ' +\n                   r'constant String := \"([^\\(\\)]+)\\(.*\\)?\";',\n@@ -58,6 +60,7 @@ def get_gnat_version():\n     sys.exit(1)\n \n \n+# get gnat build type from runtime\n def get_gnat_build_type():\n     m = re.search(r'Build_Type : constant Gnat_Build_Type := (.+);',\n                   gnatvsn_content)\n@@ -70,7 +73,35 @@ def get_gnat_build_type():\n         sys.exit(1)\n \n \n+# Enable Sphinx extensions\n+# Note that these are active for all files to be build (see DOCS list)\n+extensions = ['sphinx_rtd_theme']\n+\n+# todo interprets \".. todo::\" commands in .rst files\n+# mathjax enables math equations to render correctly\n+extensions += ['sphinx.ext.todo', 'sphinx.ext.mathjax']\n+todo_include_todos = True\n+\n+# define templates source folder\n+templates_path = ['_templates']\n+# define the types of files to read as source for documents\n+source_suffix = '.rst'\n+\n+# enable figure, object, table numeration on documents\n+print('enabling table, code-block and figure numeration')\n+numfig = True\n+numfig_format = {\n+    'figure': 'figure %s',\n+    'table': 'table %s',\n+    'code-block': 'listing %s',\n+    'section': 'section %s',\n+}\n+print('done')\n+\n+\n+# Start building the documents\n # First retrieve the name of the documentation we are building\n+print('checking doc name... ')\n doc_name = os.environ.get('DOC_NAME', None)\n if doc_name is None:\n     print('DOC_NAME environment variable should be set')\n@@ -79,7 +110,7 @@ def get_gnat_build_type():\n if doc_name not in DOCS:\n     print('%s is not a valid documentation name' % doc_name)\n     sys.exit(1)\n-\n+print('found... ' , doc_name)\n \n # Exclude sources that are not part of the current documentation\n exclude_patterns = []\n@@ -88,16 +119,13 @@ def get_gnat_build_type():\n         exclude_patterns.append(d)\n         print('ignoring %s' % d)\n \n+# Special condition for gnat_rm\n if doc_name == 'gnat_rm':\n     exclude_patterns.append('share/gnat_project_manager.rst')\n     print('ignoring share/gnat_project_manager.rst')\n \n-extensions = []\n-templates_path = ['_templates']\n-source_suffix = '.rst'\n-master_doc = doc_name\n-\n # General information about the project.\n+master_doc = doc_name\n project = DOCS[doc_name]['title']\n \n copyright = get_copyright()\n@@ -107,42 +135,58 @@ def get_gnat_build_type():\n \n pygments_style = None\n tags.add(get_gnat_build_type())\n-html_theme = 'sphinxdoc'\n+\n+# Define figures to be included\n+html_theme = 'sphinx_rtd_theme'\n if os.path.isfile('adacore_transparent.png'):\n+    # split html and pdf logos to avoid 'same name' error in sphinx <5.2+\n     html_logo = 'adacore_transparent.png'\n+    latex_logo = 'adacore_transparent.png'\n if os.path.isfile('favicon.ico'):\n     html_favicon = 'favicon.ico'\n \n html_static_path = ['_static']\n \n+# Use gnat.sty for bulding documents\n latex_additional_files = ['gnat.sty']\n \n+# Add copyright info to file\n copyright_macros = {\n     'date': time.strftime(\"%b %d, %Y\"),\n     'edition': 'GNAT %s Edition' % 'Pro' if get_gnat_build_type() == 'PRO'\n                else 'GPL',\n     'name': 'GNU Ada',\n     'tool': 'GNAT',\n-    'version': version}\n+    'version': version\n+}\n \n+# Send info to latex for building document\n latex_elements = {\n-    'preamble': '\\\\usepackage{gnat}\\n' +\n-    latex_elements.TOC_DEPTH +\n-    latex_elements.PAGE_BLANK +\n-    latex_elements.TOC_CMD +\n-    latex_elements.LATEX_HYPHEN +\n-    latex_elements.doc_settings(DOCS[doc_name]['title'],\n-                                get_gnat_version()),\n-    'tableofcontents': latex_elements.TOC % copyright_macros}\n-\n+    'preamble': '\\\\usepackage{gnat}\\n'  # use gnat.sty format\n+    + latex_elements.TOC_DEPTH  # define table of contents max depth to display\n+    + latex_elements.PAGE_BLANK  # define blank pages and when to be used\n+    + latex_elements.TOC_CMD  # write table of contents\n+    + latex_elements.LATEX_HYPHEN  # define latex hyphen '-'\n+    + '\\\\sloppy\\n\\n'  # sloppy/fussy define how words are spread in a paragraph\n+    # the following is used to send title and gnat version to latex\n+    + latex_elements.doc_settings(DOCS[doc_name]['title'], get_gnat_version()),\n+    'tableofcontents': latex_elements.TOC % copyright_macros,  # build TOC\n+    'papersize': 'a4paper,table',  # papersize as a4, else default letter\n+    'figure_align': 'H',  # align figure as square and to paragraph text\n+    'maketitle': '\\\\maketitle',  # execute custom maketitle\n+}\n+\n+# Show page references for cross-reference in docs\n+latex_show_pagerefs = True\n+# Define latex metadata\n latex_documents = [\n     (master_doc, '%s.tex' % doc_name, project, 'AdaCore', 'manual')]\n-\n+# Define .txt files metadata\n texinfo_documents = [\n-    (master_doc, doc_name, project,\n-     'AdaCore', doc_name, doc_name, '')]\n+    (master_doc, doc_name, project, 'AdaCore', doc_name, doc_name, '')]\n \n \n+# setup AdaCore custom pygments\n def setup(app):\n     app.add_lexer('ada', ada_pygments.AdaLexer)\n     app.add_lexer('gpr', ada_pygments.GNATProjectLexer)"}, {"sha": "d71dcaf8969fbb3290e6dca114b255ade0feefbf", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -358,9 +358,11 @@ package Einfo is\n --\n --       For objects, the Actual_Subtype is set only if this is a discriminated\n --       type. For arrays, the bounds of the expression are obtained and the\n---       Etype of the object is directly the constrained subtype. This is\n---       rather irregular, and the semantic checks that depend on the nominal\n---       subtype being unconstrained use flag Is_Constr_Subt_For_U_Nominal(qv).\n+--       Etype of the object is directly the constrained subtype, except in the\n+--       case of a return object that lives on the secondary stack where Etype\n+--       is the nominal unconstrained subtype. This is rather irregular and the\n+--       semantic checks that depend on the nominal subtype being unconstrained\n+--       use flag Is_Constr_Subt_For_U_Nominal(qv).\n \n --    Address_Clause (synthesized)\n --       Applies to entries, objects and subprograms. Set if an address clause\n@@ -874,7 +876,7 @@ package Einfo is\n --       are generated (subprograms, package declarations and package\n --       bodies). Defined if there are pending generic body instantiations\n --       for the corresponding entity. If this flag is set, then generation\n---       of the subprogram descriptor for the corresponding enities must\n+--       of the subprogram descriptor for the corresponding entities must\n --       be delayed, since the insertion of the generic body may add entries\n --       to the list of handlers.\n --\n@@ -2570,7 +2572,7 @@ package Einfo is\n \n --    Is_Elaboration_Checks_OK_Id\n --       Defined in elaboration targets (see terminology in Sem_Elab). Set when\n---       the target appears in a region which is subject to elabled elaboration\n+--       the target appears in a region which is subject to enabled elaboration\n --       checks. Such targets are allowed to generate run-time conditional ABE\n --       checks or guaranteed ABE failures.\n \n@@ -3114,7 +3116,7 @@ package Einfo is\n --       Defined in all entities, set in E_Package and E_Generic_Package\n --       entities to which a pragma Preelaborate is applied, and also in\n --       all entities within such packages. Note that the fact that this\n---       flag is set does not necesarily mean that no elaboration code is\n+--       flag is set does not necessarily mean that no elaboration code is\n --       generated for the package.\n \n --    Is_Primitive\n@@ -3228,7 +3230,7 @@ package Einfo is\n --       Defined in all entities, set only for a variable or constant for\n --       which the Renamed_Object field is non-empty and for which the\n --       renaming is handled by the front end, by macro substitution of\n---       a copy of the (evaluated) name tree whereever the variable is used.\n+--       a copy of the (evaluated) name tree wherever the variable is used.\n \n --    Is_Return_Object\n --       Defined in all object entities. True if the object is the return\n@@ -3964,7 +3966,8 @@ package Einfo is\n --       Present in variable entities. Contains all references to the variable\n --       when it is subject to pragma Part_Of. If the variable is a constituent\n --       of a single protected/task type, the references are examined as they\n---       must appear only within the type defintion and the corresponding body.\n+--       must appear only within the type definition and the corresponding\n+--       body.\n \n --    Partial_DIC_Procedure (synthesized)\n --       Defined in type entities. Set for a private type and its full view\n@@ -4058,7 +4061,7 @@ package Einfo is\n \n --    Prev_Entity\n --       Defined in all entities. The entities of a scope are chained, and this\n---       field is used as a backward pointer for this entity list - effectivly\n+--       field is used as a backward pointer for this entity list - effectively\n --       making the entity chain doubly-linked.\n \n --    Primitive_Operations (synthesized)"}, {"sha": "66c4bb09b4c3ae748ead69a23cda3f59b0e3eeb5", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -32,12 +32,6 @@ with Uintp; use Uintp;\n \n package Err_Vars is\n \n-   --  All of these variables are set when needed, so they do not need to be\n-   --  initialized. However, there is code that saves and restores existing\n-   --  values, which may malfunction in -gnatVa mode if the variable has never\n-   --  been initialized, so we initialize some variables to avoid exceptions\n-   --  from invalid values in such cases.\n-\n    --  Note on error counts (Serious_Errors_Detected, Total_Errors_Detected,\n    --  Warnings_Detected, Warning_Info_Messages, Report_Info_Messages). These\n    --  counts might more logically appear in this unit, but we place them\n@@ -68,7 +62,6 @@ package Err_Vars is\n    --  resulting from illegalities, and also for substitution of more\n    --  appropriate error messages from higher semantic levels. It is\n    --  a counter so that the increment/decrement protocol nests neatly.\n-   --  Initialized for -gnatVa use, see comment above.\n \n    Error_Msg_Exception : exception;\n    --  Exception raised if Raise_Exception_On_Error is true\n@@ -81,12 +74,6 @@ package Err_Vars is\n    --  Source_Reference line, then this is initialized to No_Source_File,\n    --  to force an initial reference to the real source file name.\n \n-   Warning_Doc_Switch : Boolean := True;\n-   --  If this is set True, then the ??/?x?/?x? sequences in error messages\n-   --  are active (see errout.ads for details). If this switch is False, then\n-   --  these sequences are ignored (i.e. simply equivalent to a single ?). The\n-   --  -gnatw.d switch sets this flag True, -gnatw.D sets this flag False.\n-\n    ----------------------------------------\n    -- Error Message Insertion Parameters --\n    ----------------------------------------"}, {"sha": "b30e8b51d159d89b900a90030d450376083834d7", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 59, "deletions": 34, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -53,6 +53,7 @@ with Stand;          use Stand;\n with Stylesw;        use Stylesw;\n with System.OS_Lib;\n with Uname;          use Uname;\n+with Warnsw; pragma Unreferenced (Warnsw); -- disable spurious warning\n \n package body Errout is\n \n@@ -881,18 +882,40 @@ package body Errout is\n    -- Error_Msg_GNAT_Extension --\n    ------------------------------\n \n-   procedure Error_Msg_GNAT_Extension (Extension : String; Loc : Source_Ptr) is\n+   procedure Error_Msg_GNAT_Extension\n+     (Extension : String;\n+      Loc : Source_Ptr;\n+      Is_Core_Extension : Boolean := False)\n+   is\n    begin\n-      if not Extensions_Allowed then\n-         Error_Msg (Extension & \" is a 'G'N'A'T-specific extension\", Loc);\n+      if (if Is_Core_Extension\n+           then Core_Extensions_Allowed\n+           else All_Extensions_Allowed)\n+      then\n+         return;\n+      end if;\n \n-         if No (Ada_Version_Pragma) then\n-            Error_Msg (\"\\unit must be compiled with -gnatX \"\n-                       & \"or use pragma Extensions_Allowed (On)\", Loc);\n+      Error_Msg (Extension & \" is a 'G'N'A'T-specific extension\", Loc);\n+\n+      if No (Ada_Version_Pragma) then\n+         if Is_Core_Extension then\n+            Error_Msg\n+              (\"\\unit must be compiled with -gnatX '[or -gnatX0'] \" &\n+               \"or use pragma Extensions_Allowed (On) '[or All']\", Loc);\n          else\n-            Error_Msg_Sloc := Sloc (Ada_Version_Pragma);\n-            Error_Msg (\"\\incompatible with Ada version set#\", Loc);\n-            Error_Msg (\"\\must use pragma Extensions_Allowed (On)\", Loc);\n+            Error_Msg\n+              (\"\\unit must be compiled with -gnatX0 \" &\n+               \"or use pragma Extensions_Allowed (All)\", Loc);\n+         end if;\n+      else\n+         Error_Msg_Sloc := Sloc (Ada_Version_Pragma);\n+         Error_Msg (\"\\incompatible with Ada version set#\", Loc);\n+         if Is_Core_Extension then\n+            Error_Msg\n+              (\"\\must use pragma Extensions_Allowed (On) '[or All']\", Loc);\n+         else\n+            Error_Msg\n+              (\"\\must use pragma Extensions_Allowed (All)\", Loc);\n          end if;\n       end if;\n    end Error_Msg_GNAT_Extension;\n@@ -965,14 +988,14 @@ package body Errout is\n          --  after fixing the error, the use clause no longer looks like it was\n          --  unused.\n \n-         Check_Unreferenced := False;\n-         Check_Unreferenced_Formals := False;\n+         Warnsw.Check_Unreferenced := False;\n+         Warnsw.Check_Unreferenced_Formals := False;\n       end Handle_Serious_Error;\n \n    --  Start of processing for Error_Msg_Internal\n \n    begin\n-      --  Detect common mistake of prefixing or suffing the message with a\n+      --  Detect common mistake of prefixing or suffixing the message with a\n       --  space character.\n \n       pragma Assert (Msg (Msg'First) /= ' ' and then Msg (Msg'Last) /= ' ');\n@@ -1191,7 +1214,7 @@ package body Errout is\n           Next                => No_Error_Msg,\n           Prev                => No_Error_Msg,\n           Sptr                => Span,\n-          Optr                => Optr,\n+          Optr                => Opan,\n           Insertion_Sloc      => (if Has_Insertion_Line then Error_Msg_Sloc\n                                   else No_Location),\n           Sfile               => Get_Source_File_Index (Sptr),\n@@ -1260,7 +1283,7 @@ package body Errout is\n                        or else\n                           (Sptr = Errors.Table (Last_Error_Msg).Sptr.Ptr\n                              and then\n-                               Optr > Errors.Table (Last_Error_Msg).Optr))\n+                               Optr > Errors.Table (Last_Error_Msg).Optr.Ptr))\n          then\n             Prev_Msg := Last_Error_Msg;\n             Next_Msg := No_Error_Msg;\n@@ -1278,7 +1301,8 @@ package body Errout is\n                then\n                   exit when Sptr < Errors.Table (Next_Msg).Sptr.Ptr\n                     or else (Sptr = Errors.Table (Next_Msg).Sptr.Ptr\n-                              and then Optr < Errors.Table (Next_Msg).Optr);\n+                              and then\n+                             Optr < Errors.Table (Next_Msg).Optr.Ptr);\n                end if;\n \n                Prev_Msg := Next_Msg;\n@@ -1657,8 +1681,8 @@ package body Errout is\n                    (Warning_Specifically_Suppressed (CE.Sptr.Ptr, CE.Text, Tag)\n                                                                 /= No_String\n                       or else\n-                    Warning_Specifically_Suppressed (CE.Optr, CE.Text, Tag) /=\n-                                                                   No_String)\n+                    Warning_Specifically_Suppressed (CE.Optr.Ptr, CE.Text, Tag)\n+                                                                /= No_String)\n             then\n                Delete_Warning (Cur);\n \n@@ -2208,9 +2232,9 @@ package body Errout is\n       Write_Str (\",\"\"locations\"\":[\");\n       Write_JSON_Span (Errors.Table (E));\n \n-      if Errors.Table (E).Optr /= Errors.Table (E).Sptr.Ptr then\n+      if Errors.Table (E).Optr.Ptr /= Errors.Table (E).Sptr.Ptr then\n          Write_Str (\",{\"\"caret\"\":\");\n-         Write_JSON_Location (Errors.Table (E).Optr);\n+         Write_JSON_Location (Errors.Table (E).Optr.Ptr);\n          Write_Str (\"}\");\n       end if;\n \n@@ -2930,7 +2954,7 @@ package body Errout is\n                            else SGR_Error);\n                      begin\n                         Write_Source_Code_Lines\n-                          (Errors.Table (E).Sptr, SGR_Span);\n+                          (Errors.Table (E).Optr, SGR_Span);\n                      end;\n                   end if;\n                end if;\n@@ -3305,7 +3329,7 @@ package body Errout is\n \n                --  Don't remove if location does not match\n \n-               and then Errors.Table (E).Optr = Loc\n+               and then Errors.Table (E).Optr.Ptr = Loc\n \n                --  Don't remove if not warning/info message. Note that we do\n                --  not remove style messages here. They are warning messages\n@@ -3327,6 +3351,17 @@ package body Errout is\n                   Warning_Info_Messages := Warning_Info_Messages - 1;\n                end if;\n \n+               --  When warning about a runtime exception has been escalated\n+               --  into error, the starting message has increased the total\n+               --  errors counter, so here we decrease this counter.\n+\n+               if Errors.Table (E).Warn_Runtime_Raise\n+                 and then not Errors.Table (E).Msg_Cont\n+                 and then Warning_Mode = Treat_Run_Time_Warnings_As_Errors\n+               then\n+                  Total_Errors_Detected := Total_Errors_Detected - 1;\n+               end if;\n+\n                return True;\n \n             --  No removal required\n@@ -3361,23 +3396,13 @@ package body Errout is\n             E := Errors.Table (E).Next;\n          end loop;\n \n+         --  Warnings may have been posted on subexpressions of original tree\n+\n          if Nkind (N) = N_Raise_Constraint_Error\n            and then Is_Rewrite_Substitution (N)\n            and then No (Condition (N))\n          then\n-            --  Warnings may have been posted on subexpressions of the original\n-            --  tree. We place the original node back on the tree to remove\n-            --  those warnings, whose sloc do not match those of any node in\n-            --  the current tree. Given that we are in unreachable code, this\n-            --  modification to the tree is harmless.\n-\n-            if Is_List_Member (N) then\n-               Set_Condition (N, Original_Node (N));\n-               Check_All_Warnings (Condition (N));\n-            else\n-               Rewrite (N, Original_Node (N));\n-               Check_All_Warnings (N);\n-            end if;\n+            Check_All_Warnings (Original_Node (N));\n          end if;\n \n          return OK;"}, {"sha": "aeb9a2fb912c072735104b73a122434353425355", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -59,15 +59,6 @@ package Errout is\n    Error_Msg_Exception : exception renames Err_Vars.Error_Msg_Exception;\n    --  Exception raised if Raise_Exception_On_Error is true\n \n-   Warning_Doc_Switch : Boolean renames Err_Vars.Warning_Doc_Switch;\n-   --  If this is set True, then the ??/?*?/?$?/?x?/?.x?/?_x? insertion\n-   --  sequences in error messages generate appropriate tags for the output\n-   --  error messages. If this switch is False, then these sequences are still\n-   --  recognized (for the purposes of implementing the pattern matching in\n-   --  pragmas Warnings (Off,..) and Warning_As_Pragma(...) but do not result\n-   --  in adding the error message tag. The -gnatw.d switch sets this flag\n-   --  True, -gnatw.D sets this flag False.\n-\n    Current_Node : Node_Id := Empty;\n    --  Used by Error_Msg as a default Node_Id.\n    --  Relevant only when Opt.Include_Subprogram_In_Messages is set.\n@@ -314,10 +305,11 @@ package Errout is\n    --      continuations, use this in each continuation message.\n \n    --    Insertion character ?x? ?.x? ?_x? (warning with switch)\n-   --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n+   --      \"x\" is a (lower-case) warning switch character.\n+   --      Like ??, but if the flag Warn_Doc_Switch is True, adds the string\n    --      \"[-gnatwx]\", \"[-gnatw.x]\", or \"[-gnatw_x]\", at the end of the\n-   --      warning message. x must be lower case. For continuations, use this\n-   --      on each continuation message.\n+   --      warning message. For continuations, use this on each continuation\n+   --      message.\n \n    --    Insertion character ?*? (restriction warning)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n@@ -937,11 +929,18 @@ package Errout is\n    procedure Error_Msg_Ada_2022_Feature (Feature : String; Loc : Source_Ptr);\n    --  Analogous to Error_Msg_Ada_2012_Feature, for Ada 2022\n \n-   procedure Error_Msg_GNAT_Extension (Extension : String; Loc : Source_Ptr);\n-   --  If not operating with extensions allowed, posts errors complaining\n-   --  that Extension is only supported when the -gnatX switch is enabled\n-   --  or pragma Extensions_Allowed (On) is used. Loc indicates the source\n-   --  location of the extension construct.\n+   procedure Error_Msg_GNAT_Extension\n+    (Extension         : String;\n+     Loc               : Source_Ptr;\n+     Is_Core_Extension : Boolean := False);\n+   --  To be called as part of checking a GNAT language extension (either a\n+   --  core extension or not, as indicated by the Is_Core_Extension parameter).\n+   --  If switch -gnatX0 or pragma Extension_Allowed (All) is in effect, then\n+   --  either kind of extension is allowed; if switch -gnatX or pragma\n+   --  Extensions_Allowed (On) is in effect, then only core extensions are\n+   --  allowed. Otherwise, no extensions are allowed. A disallowed construct\n+   --  is flagged as an error. Loc indicates the source location of the\n+   --  extension construct.\n \n    procedure dmsg (Id : Error_Msg_Id) renames Erroutc.dmsg;\n    --  Debugging routine to dump an error message"}, {"sha": "d40c668be8abe9aa195af3f0c8b694667d9f6bf0", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -44,6 +44,7 @@ with Stringt;  use Stringt;\n with Targparm;\n with Uintp;    use Uintp;\n with Widechar; use Widechar;\n+with Warnsw;   use Warnsw;\n \n package body Erroutc is\n \n@@ -311,32 +312,33 @@ package body Erroutc is\n \n    begin\n       w (\"Dumping error message, Id = \", Int (Id));\n-      w (\"  Text     = \", E.Text.all);\n-      w (\"  Next     = \", Int (E.Next));\n-      w (\"  Prev     = \", Int (E.Prev));\n-      w (\"  Sfile    = \", Int (E.Sfile));\n+      w (\"  Text               = \", E.Text.all);\n+      w (\"  Next               = \", Int (E.Next));\n+      w (\"  Prev               = \", Int (E.Prev));\n+      w (\"  Sfile              = \", Int (E.Sfile));\n \n       Write_Str\n-        (\"  Sptr     = \");\n+        (\"  Sptr               = \");\n       Write_Location (E.Sptr.Ptr);  --  ??? Do not write the full span for now\n       Write_Eol;\n \n       Write_Str\n-        (\"  Optr     = \");\n-      Write_Location (E.Optr);\n+        (\"  Optr               = \");\n+      Write_Location (E.Optr.Ptr);\n       Write_Eol;\n \n-      w (\"  Line     = \", Int (E.Line));\n-      w (\"  Col      = \", Int (E.Col));\n-      w (\"  Warn     = \", E.Warn);\n-      w (\"  Warn_Err = \", E.Warn_Err);\n-      w (\"  Warn_Chr = '\" & E.Warn_Chr & ''');\n-      w (\"  Style    = \", E.Style);\n-      w (\"  Serious  = \", E.Serious);\n-      w (\"  Uncond   = \", E.Uncond);\n-      w (\"  Msg_Cont = \", E.Msg_Cont);\n-      w (\"  Deleted  = \", E.Deleted);\n-      w (\"  Node     = \", Int (E.Node));\n+      w (\"  Line               = \", Int (E.Line));\n+      w (\"  Col                = \", Int (E.Col));\n+      w (\"  Warn               = \", E.Warn);\n+      w (\"  Warn_Err           = \", E.Warn_Err);\n+      w (\"  Warn_Runtime_Raise = \", E.Warn_Runtime_Raise);\n+      w (\"  Warn_Chr           = '\" & E.Warn_Chr & ''');\n+      w (\"  Style              = \", E.Style);\n+      w (\"  Serious            = \", E.Serious);\n+      w (\"  Uncond             = \", E.Uncond);\n+      w (\"  Msg_Cont           = \", E.Msg_Cont);\n+      w (\"  Deleted            = \", E.Deleted);\n+      w (\"  Node               = \", Int (E.Node));\n \n       Write_Eol;\n    end dmsg;"}, {"sha": "c992bbaa1834a99f65529addbe8b3eaffcdb2a07", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -209,7 +209,7 @@ package Erroutc is\n       --  will be posted. Note that an error placed on an instantiation will\n       --  have Sptr pointing to the instantiation point.\n \n-      Optr : Source_Ptr;\n+      Optr : Source_Span;\n       --  Flag location used in the call to post the error. This is the same as\n       --  Sptr, except when an error is posted on a particular instantiation of\n       --  a generic. In such a case, Sptr will point to the original source"}, {"sha": "887dc8826bf4b304ddafe90429a31b2b8f52cf1f", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -208,7 +208,7 @@ package body Errutil is\n             Prev                => No_Error_Msg,\n             Sfile               => Get_Source_File_Index (Sptr),\n             Sptr                => To_Span (Sptr),\n-            Optr                => Optr,\n+            Optr                => To_Span (Optr),\n             Insertion_Sloc      => No_Location,\n             Line                => Get_Physical_Line_Number (Sptr),\n             Col                 => Get_Column_Number (Sptr),"}, {"sha": "4d8bb817b8010ef09830f2ddf98b32b7d8c17cd5", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -71,6 +71,7 @@ with Stringt;        use Stringt;\n with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n with Urealp;         use Urealp;\n+with Warnsw;         use Warnsw;\n \n package body Exp_Aggr is\n \n@@ -2058,7 +2059,7 @@ package body Exp_Aggr is\n          --  to do that if we already have the base type at hand.\n \n          if Etype (L) = Index_Base then\n-            L_L := L;\n+            L_L := New_Copy_Tree (L);\n          else\n             L_L :=\n               Make_Qualified_Expression (Loc,\n@@ -2067,7 +2068,7 @@ package body Exp_Aggr is\n          end if;\n \n          if Etype (H) = Index_Base then\n-            L_H := H;\n+            L_H := New_Copy_Tree (H);\n          else\n             L_H :=\n               Make_Qualified_Expression (Loc,\n@@ -6840,7 +6841,7 @@ package body Exp_Aggr is\n         or else Parent_Kind = N_Component_Association\n         or else (Parent_Kind = N_Object_Declaration\n                   and then (Needs_Finalization (Typ)\n-                             or else Is_Build_In_Place_Return_Object\n+                             or else Is_Special_Return_Object\n                                        (Defining_Identifier (Parent_Node))))\n         or else (Parent_Kind = N_Assignment_Statement\n                   and then Inside_Init_Proc)"}, {"sha": "074ab4e90936264a6ab080a45872e33e63f9ad99", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -312,7 +312,7 @@ package body Exp_Atag is\n \n          if not Is_Predefined_Dispatching_Operation (Prim)\n            and then not Is_Predefined_Dispatching_Operation (E)\n-           and then not Present (Interface_Alias (Prim))\n+           and then No (Interface_Alias (Prim))\n            and then not Is_Abstract_Subprogram (E)\n            and then not Is_Eliminated (E)\n            and then Prim_Pos <= CPP_Nb_Prims"}, {"sha": "b7554e05f7785c1a845b2f7cb766fcd0a05b53bc", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 57, "deletions": 18, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n@@ -1998,16 +1999,21 @@ package body Exp_Attr is\n    --  Start of processing for Expand_N_Attribute_Reference\n \n    begin\n-      --  Do required validity checking, if enabled. Do not apply check to\n-      --  output parameters of an Asm instruction, since the value of this\n-      --  is not set till after the attribute has been elaborated, and do\n-      --  not apply the check to the arguments of a 'Read or 'Input attribute\n-      --  reference since the scalar argument is an OUT scalar.\n+      --  Do required validity checking, if enabled.\n+      --\n+      --  Skip check for output parameters of an Asm instruction (since their\n+      --  valuesare not set till after the attribute has been elaborated),\n+      --  for the arguments of a 'Read attribute reference (since the\n+      --  scalar argument is an OUT scalar) and for the arguments of a\n+      --  'Has_Same_Storage or 'Overlaps_Storage attribute reference (which not\n+      --  considered to be reads of their prefixes and expressions, see Ada RM\n+      --  13.3(73.10/3)).\n \n       if Validity_Checks_On and then Validity_Check_Operands\n         and then Id /= Attribute_Asm_Output\n         and then Id /= Attribute_Read\n-        and then Id /= Attribute_Input\n+        and then Id /= Attribute_Has_Same_Storage\n+        and then Id /= Attribute_Overlaps_Storage\n       then\n          declare\n             Expr : Node_Id;\n@@ -2210,13 +2216,25 @@ package body Exp_Attr is\n \n             --  Local declarations\n \n-            Enc_Object : constant Node_Id := Enclosing_Object (Ref_Object);\n+            Enc_Object : Node_Id := Enclosing_Object (Ref_Object);\n \n          --  Start of processing for Access_Cases\n \n          begin\n             Btyp_DDT := Designated_Type (Btyp);\n \n+            --  When Enc_Object is a view conversion then RM 3.10.2 (9)\n+            --  applies and we obtain the expression being converted.\n+            --  Otherwise we do not dig any deeper since a conversion\n+            --  might generate a copy and we can't assume it will be as\n+            --  long-lived as the original.\n+\n+            while Nkind (Enc_Object) = N_Type_Conversion\n+              and then Is_View_Conversion (Enc_Object)\n+            loop\n+               Enc_Object := Expression (Enc_Object);\n+            end loop;\n+\n             --  Handle designated types that come from the limited view\n \n             if From_Limited_With (Btyp_DDT)\n@@ -2311,19 +2329,40 @@ package body Exp_Attr is\n             if Is_Access_Protected_Subprogram_Type (Btyp) then\n                Expand_Access_To_Protected_Op (N, Pref, Typ);\n \n-            --  If prefix is a subprogram that has class-wide preconditions and\n-            --  an indirect-call wrapper (ICW) of such subprogram is available\n-            --  then replace the prefix by the ICW.\n-\n             elsif Is_Access_Subprogram_Type (Btyp)\n               and then Is_Entity_Name (Pref)\n-              and then Present (Class_Preconditions (Entity (Pref)))\n-              and then Present (Indirect_Call_Wrapper (Entity (Pref)))\n             then\n-               Rewrite (Pref,\n-                 New_Occurrence_Of\n-                   (Indirect_Call_Wrapper (Entity (Pref)), Loc));\n-               Analyze_And_Resolve (N, Typ);\n+               --  If prefix is a subprogram that has class-wide preconditions\n+               --  and an indirect-call wrapper (ICW) of the subprogram is\n+               --  available then replace the prefix by the ICW.\n+\n+               if Present (Class_Preconditions (Entity (Pref)))\n+                 and then Present (Indirect_Call_Wrapper (Entity (Pref)))\n+               then\n+                  Rewrite (Pref,\n+                    New_Occurrence_Of\n+                      (Indirect_Call_Wrapper (Entity (Pref)), Loc));\n+                  Analyze_And_Resolve (N, Typ);\n+               end if;\n+\n+               --  Ensure the availability of the extra formals to check that\n+               --  they match.\n+\n+               if not Is_Frozen (Entity (Pref))\n+                 or else From_Limited_With (Etype (Entity (Pref)))\n+               then\n+                  Create_Extra_Formals (Entity (Pref));\n+               end if;\n+\n+               if not Is_Frozen (Btyp_DDT)\n+                 or else From_Limited_With (Etype (Btyp_DDT))\n+               then\n+                  Create_Extra_Formals (Btyp_DDT);\n+               end if;\n+\n+               pragma Assert\n+                 (Extra_Formals_Match_OK\n+                   (E => Entity (Pref), Ref_E => Btyp_DDT));\n \n             --  If prefix is a type name, this is a reference to the current\n             --  instance of the type, within its initialization procedure.\n@@ -6575,7 +6614,7 @@ package body Exp_Attr is\n                --  If Storage_Size wasn't found (can only occur in the simple\n                --  storage pool case), then simply use zero for the result.\n \n-               if not Present (Alloc_Op) then\n+               if No (Alloc_Op) then\n                   Rewrite (N, Make_Integer_Literal (Loc, 0));\n \n                --  Otherwise, rewrite the allocator as a call to pool type's"}, {"sha": "5b83035ebd8e1e435240dbea4520df8ad434309f", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -53,6 +53,7 @@ with Stringt;        use Stringt;\n with Targparm;       use Targparm;\n with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n package body Exp_Ch11 is\n "}, {"sha": "6de5843b4ba45bb0401453b904fb6b4fdfd61ec3", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 532, "deletions": 206, "changes": 738, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n@@ -44,7 +45,6 @@ with Exp_Dist;       use Exp_Dist;\n with Exp_Put_Image;\n with Exp_Smem;       use Exp_Smem;\n with Exp_Strm;       use Exp_Strm;\n-with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n with Freeze;         use Freeze;\n with Ghost;          use Ghost;\n@@ -408,15 +408,6 @@ package body Exp_Ch3 is\n    --  Freeze entities of all predefined primitive operations. This is needed\n    --  because the bodies of these operations do not normally do any freezing.\n \n-   function Stream_Operation_OK\n-     (Typ       : Entity_Id;\n-      Operation : TSS_Name_Type) return Boolean;\n-   --  Check whether the named stream operation must be emitted for a given\n-   --  type. The rules for inheritance of stream attributes by type extensions\n-   --  are enforced by this function. Furthermore, various restrictions prevent\n-   --  the generation of these operations, as a useful optimization or for\n-   --  certification purposes and to save unnecessary generated code.\n-\n    --------------------------\n    -- Adjust_Discriminants --\n    --------------------------\n@@ -4599,7 +4590,8 @@ package body Exp_Ch3 is\n       end if;\n \n       --  If not inherited and not user-defined, build body as for a type with\n-      --  tagged components.\n+      --  components of record type (i.e. a type for which \"=\" composes when\n+      --  used as a component in an outer composite type).\n \n       if Build_Eq then\n          Decl :=\n@@ -5379,6 +5371,10 @@ package body Exp_Ch3 is\n       procedure Register_Dispatch_Table_Wrappers (Typ : Entity_Id);\n       --  Register dispatch-table wrappers in the dispatch table of Typ\n \n+      procedure Validate_Tagged_Type_Extra_Formals (Typ : Entity_Id);\n+      --  Check extra formals of dispatching primitives of tagged type Typ.\n+      --  Used in pragma Debug.\n+\n       ---------------------------------------\n       -- Build_Class_Condition_Subprograms --\n       ---------------------------------------\n@@ -5508,6 +5504,78 @@ package body Exp_Ch3 is\n          end loop;\n       end Register_Dispatch_Table_Wrappers;\n \n+      ----------------------------------------\n+      -- Validate_Tagged_Type_Extra_Formals --\n+      ----------------------------------------\n+\n+      procedure Validate_Tagged_Type_Extra_Formals (Typ : Entity_Id) is\n+         Ovr_Subp : Entity_Id;\n+         Elmt     : Elmt_Id;\n+         Subp     : Entity_Id;\n+\n+      begin\n+         pragma Assert (not Is_Class_Wide_Type (Typ));\n+\n+         --  No check required if expansion is not active since we never\n+         --  generate extra formals in such case.\n+\n+         if not Expander_Active then\n+            return;\n+         end if;\n+\n+         Elmt := First_Elmt (Primitive_Operations (Typ));\n+         while Present (Elmt) loop\n+            Subp := Node (Elmt);\n+\n+            --  Extra formals of a dispatching primitive must match:\n+\n+            --  1) The extra formals of its covered interface primitive\n+\n+            if Present (Interface_Alias (Subp)) then\n+               pragma Assert\n+                 (Extra_Formals_Match_OK\n+                   (E     => Interface_Alias (Subp),\n+                    Ref_E => Alias (Subp)));\n+            end if;\n+\n+            --  2) The extra formals of its renamed primitive\n+\n+            if Present (Alias (Subp)) then\n+               pragma Assert\n+                 (Extra_Formals_Match_OK\n+                   (E     => Subp,\n+                    Ref_E => Ultimate_Alias (Subp)));\n+            end if;\n+\n+            --  3) The extra formals of its overridden primitive\n+\n+            if Present (Overridden_Operation (Subp)) then\n+               Ovr_Subp := Overridden_Operation (Subp);\n+\n+               --  Handle controlling function wrapper\n+\n+               if Is_Wrapper (Subp)\n+                 and then Ultimate_Alias (Ovr_Subp) = Subp\n+               then\n+                  if Present (Overridden_Operation (Ovr_Subp)) then\n+                     pragma Assert\n+                       (Extra_Formals_Match_OK\n+                         (E     => Subp,\n+                          Ref_E => Overridden_Operation (Ovr_Subp)));\n+                  end if;\n+\n+               else\n+                  pragma Assert\n+                    (Extra_Formals_Match_OK\n+                      (E     => Subp,\n+                       Ref_E => Ovr_Subp));\n+               end if;\n+            end if;\n+\n+            Next_Elmt (Elmt);\n+         end loop;\n+      end Validate_Tagged_Type_Extra_Formals;\n+\n       --  Local variables\n \n       Typ      : constant Node_Id := Entity (N);\n@@ -5896,28 +5964,58 @@ package body Exp_Ch3 is\n          --  inherited functions, then add their bodies to the freeze actions.\n \n          Append_Freeze_Actions (Typ, Wrapper_Body_List);\n+      end if;\n \n-         --  Create extra formals for the primitive operations of the type.\n-         --  This must be done before analyzing the body of the initialization\n-         --  procedure, because a self-referential type might call one of these\n-         --  primitives in the body of the init_proc itself.\n+      --  Create extra formals for the primitive operations of the type.\n+      --  This must be done before analyzing the body of the initialization\n+      --  procedure, because a self-referential type might call one of these\n+      --  primitives in the body of the init_proc itself.\n+      --\n+      --  This is not needed:\n+      --    1) If expansion is disabled, because extra formals are only added\n+      --       when we are generating code.\n+      --\n+      --    2) For types with foreign convention since primitives with foreign\n+      --       convention don't have extra formals and AI95-117 requires that\n+      --       all primitives of a tagged type inherit the convention.\n \n+      if Expander_Active\n+        and then Is_Tagged_Type (Typ)\n+        and then not Has_Foreign_Convention (Typ)\n+      then\n          declare\n             Elmt : Elmt_Id;\n-            Subp : Entity_Id;\n+            E    : Entity_Id;\n \n          begin\n+            --  Add extra formals to primitive operations\n+\n             Elmt := First_Elmt (Primitive_Operations (Typ));\n             while Present (Elmt) loop\n-               Subp := Node (Elmt);\n-               if not Has_Foreign_Convention (Subp)\n-                 and then not Is_Predefined_Dispatching_Operation (Subp)\n+               Create_Extra_Formals (Node (Elmt));\n+               Next_Elmt (Elmt);\n+            end loop;\n+\n+            --  Add extra formals to renamings of primitive operations. The\n+            --  addition of extra formals is done in two steps to minimize\n+            --  the compile time required for this action; the evaluation of\n+            --  Find_Dispatching_Type() and Contains() is only done here for\n+            --  renamings that are not primitive operations.\n+\n+            E := First_Entity (Scope (Typ));\n+            while Present (E) loop\n+               if Is_Dispatching_Operation (E)\n+                 and then Present (Alias (E))\n+                 and then Find_Dispatching_Type (E) = Typ\n+                 and then not Contains (Primitive_Operations (Typ), E)\n                then\n-                  Create_Extra_Formals (Subp);\n+                  Create_Extra_Formals (E);\n                end if;\n \n-               Next_Elmt (Elmt);\n+               Next_Entity (E);\n             end loop;\n+\n+            pragma Debug (Validate_Tagged_Type_Extra_Formals (Typ));\n          end;\n       end if;\n \n@@ -6191,6 +6289,18 @@ package body Exp_Ch3 is\n       --  Generate all default initialization actions for object Def_Id. Any\n       --  new code is inserted after node After.\n \n+      procedure Initialize_Return_Object\n+        (Tag_Assign : Node_Id;\n+         Adj_Call   : Node_Id;\n+         Expr       : Node_Id;\n+         Init_Stmt  : Node_Id;\n+         After      : Node_Id);\n+      --  Generate all initialization actions for return object Def_Id. Any\n+      --  new code is inserted after node After.\n+\n+      function Make_Allocator_For_Return (Expr : Node_Id) return Node_Id;\n+      --  Make an allocator for a return object initialized with Expr\n+\n       function OK_To_Rename_Ref (N : Node_Id) return Boolean;\n       --  Return True if N denotes an entity with OK_To_Rename set\n \n@@ -6949,6 +7059,108 @@ package body Exp_Ch3 is\n          end if;\n       end Default_Initialize_Object;\n \n+      ------------------------------\n+      -- Initialize_Return_Object --\n+      ------------------------------\n+\n+      procedure Initialize_Return_Object\n+        (Tag_Assign : Node_Id;\n+         Adj_Call   : Node_Id;\n+         Expr       : Node_Id;\n+         Init_Stmt  : Node_Id;\n+         After      : Node_Id)\n+      is\n+      begin\n+         if Present (Tag_Assign) then\n+            Insert_Action_After (After, Tag_Assign);\n+         end if;\n+\n+         if Present (Adj_Call) then\n+            Insert_Action_After (After, Adj_Call);\n+         end if;\n+\n+         if No (Expr) then\n+            Default_Initialize_Object (After);\n+\n+         elsif Is_Delayed_Aggregate (Expr)\n+           and then not No_Initialization (N)\n+         then\n+            Convert_Aggr_In_Object_Decl (N);\n+\n+         elsif Present (Init_Stmt) then\n+            Insert_Action_After (After, Init_Stmt);\n+            Set_Expression (N, Empty);\n+         end if;\n+      end Initialize_Return_Object;\n+\n+      -------------------------------\n+      -- Make_Allocator_For_Return --\n+      -------------------------------\n+\n+      function Make_Allocator_For_Return (Expr : Node_Id) return Node_Id is\n+         Func_Id : constant Entity_Id := Return_Applies_To (Scope (Def_Id));\n+\n+         Alloc : Node_Id;\n+\n+      begin\n+         --  If the return object's declaration includes an expression and the\n+         --  declaration isn't marked as No_Initialization, then we generate an\n+         --  allocator with a qualified expression. Although this is necessary\n+         --  only in the case where the result type is an interface (or class-\n+         --  wide interface), we do it in all cases for the sake of consistency\n+         --  instead of subsequently generating a separate assignment.\n+\n+         if Present (Expr)\n+           and then not Is_Delayed_Aggregate (Expr)\n+           and then not No_Initialization (N)\n+         then\n+            --  Ada 2005 (AI95-344): If the result type is class-wide, insert\n+            --  a check that the level of the return expression's underlying\n+            --  type is not deeper than the level of the master enclosing the\n+            --  function.\n+\n+            --  AI12-043: The check is made immediately after the return object\n+            --  is created.\n+\n+            if Is_Class_Wide_Type (Etype (Func_Id)) then\n+               Apply_CW_Accessibility_Check (Expr, Func_Id);\n+            end if;\n+\n+            --  We always use the type of the expression for the qualified\n+            --  expression, rather than the return object's type. We cannot\n+            --  always use the return object's type because the expression\n+            --  might be of a specific type and the result object mignt not.\n+\n+            Alloc :=\n+              Make_Allocator (Loc,\n+                Expression =>\n+                  Make_Qualified_Expression (Loc,\n+                    Subtype_Mark =>\n+                      New_Occurrence_Of (Etype (Expr), Loc),\n+                    Expression   => New_Copy_Tree (Expr)));\n+\n+         else\n+            Alloc :=\n+              Make_Allocator (Loc,\n+                Expression => New_Occurrence_Of (Typ, Loc));\n+\n+            --  If the return object requires default initialization, then it\n+            --  will happen later following the elaboration of the renaming.\n+            --  If we don't turn it off here, then the object will be default\n+            --  initialized twice.\n+\n+            Set_No_Initialization (Alloc);\n+         end if;\n+\n+         --  Set the flag indicating that the allocator is made for a special\n+         --  return object. This is used to bypass various legality checks as\n+         --  well as to make sure that the result is not adjusted twice.\n+\n+         Set_For_Special_Return_Object (Alloc);\n+\n+         return Alloc;\n+      end Make_Allocator_For_Return;\n+\n       ----------------------\n       -- OK_To_Rename_Ref --\n       ----------------------\n@@ -6962,10 +7174,9 @@ package body Exp_Ch3 is\n \n       --  Local variables\n \n-      Adj_Call   : Node_Id;\n-      Expr_Q     : Node_Id;\n-      Id_Ref     : Node_Id;\n-      Tag_Assign : Node_Id;\n+      Adj_Call   : Node_Id := Empty;\n+      Expr_Q     : Node_Id := Empty;\n+      Tag_Assign : Node_Id := Empty;\n \n       Init_After : Node_Id := N;\n       --  Node after which the initialization actions are to be inserted. This\n@@ -7074,8 +7285,6 @@ package body Exp_Ch3 is\n       --  Default initialization required, and no expression present\n \n       if No (Expr) then\n-         Expr_Q := Expr;\n-\n          --  If we have a type with a variant part, the initialization proc\n          --  will contain implicit tests of the discriminant values, which\n          --  counts as a violation of the restriction No_Implicit_Conditionals.\n@@ -7134,7 +7343,7 @@ package body Exp_Ch3 is\n             end if;\n          end if;\n \n-         if not Is_Build_In_Place_Return_Object (Def_Id) then\n+         if not Is_Special_Return_Object (Def_Id) then\n             Default_Initialize_Object (Init_After);\n          end if;\n \n@@ -7194,7 +7403,7 @@ package body Exp_Ch3 is\n                Expander_Mode_Restore;\n             end if;\n \n-            if not Is_Build_In_Place_Return_Object (Def_Id) then\n+            if not Is_Special_Return_Object (Def_Id) then\n                Convert_Aggr_In_Object_Decl (N);\n             end if;\n \n@@ -7265,12 +7474,12 @@ package body Exp_Ch3 is\n          then\n             pragma Assert (Is_Class_Wide_Type (Typ));\n \n-            --  If the object is a built-in-place return object, bypass special\n+            --  If the object is a special return object, then bypass special\n             --  treatment of class-wide interface initialization below. In this\n             --  case, the expansion of the return statement will take care of\n             --  creating the object (via allocator) and initializing it.\n \n-            if Is_Build_In_Place_Return_Object (Def_Id) then\n+            if Is_Special_Return_Object (Def_Id) then\n                null;\n \n             elsif Tagged_Type_Expansion then\n@@ -7570,8 +7779,7 @@ package body Exp_Ch3 is\n             if Present (Tag_Assign) then\n                if Present (Following_Address_Clause (N)) then\n                   Ensure_Freeze_Node (Def_Id);\n-\n-               else\n+               elsif not Is_Special_Return_Object (Def_Id) then\n                   Insert_Action_After (Init_After, Tag_Assign);\n                end if;\n \n@@ -7581,23 +7789,26 @@ package body Exp_Ch3 is\n             --  record type.\n \n             elsif Is_CPP_Constructor_Call (Expr) then\n+               declare\n+                  Id_Ref : constant Node_Id := New_Occurrence_Of (Def_Id, Loc);\n \n-               --  The call to the initialization procedure does NOT freeze the\n-               --  object being initialized.\n+               begin\n+                  --  The call to the initialization procedure does NOT freeze\n+                  --  the object being initialized.\n \n-               Id_Ref := New_Occurrence_Of (Def_Id, Loc);\n-               Set_Must_Not_Freeze (Id_Ref);\n-               Set_Assignment_OK (Id_Ref);\n+                  Set_Must_Not_Freeze (Id_Ref);\n+                  Set_Assignment_OK (Id_Ref);\n \n-               Insert_Actions_After (Init_After,\n-                 Build_Initialization_Call (Loc, Id_Ref, Typ,\n-                   Constructor_Ref => Expr));\n+                  Insert_Actions_After (Init_After,\n+                    Build_Initialization_Call (Loc, Id_Ref, Typ,\n+                      Constructor_Ref => Expr));\n \n-               --  We remove here the original call to the constructor\n-               --  to avoid its management in the backend\n+                  --  We remove here the original call to the constructor\n+                  --  to avoid its management in the backend\n \n-               Set_Expression (N, Empty);\n-               return;\n+                  Set_Expression (N, Empty);\n+                  return;\n+               end;\n \n             --  Handle initialization of limited tagged types\n \n@@ -7637,18 +7848,15 @@ package body Exp_Ch3 is\n             then\n                Set_Is_Known_Valid (Def_Id);\n \n-            elsif Is_Access_Type (Typ) then\n+            --  For access types, set the Is_Known_Non_Null flag if the\n+            --  initializing value is known to be non-null. We can also\n+            --  set Can_Never_Be_Null if this is a constant.\n \n-               --  For access types set the Is_Known_Non_Null flag if the\n-               --  initializing value is known to be non-null. We can also set\n-               --  Can_Never_Be_Null if this is a constant.\n+            elsif Is_Access_Type (Typ) and then Known_Non_Null (Expr) then\n+               Set_Is_Known_Non_Null (Def_Id, True);\n \n-               if Known_Non_Null (Expr) then\n-                  Set_Is_Known_Non_Null (Def_Id, True);\n-\n-                  if Constant_Present (N) then\n-                     Set_Can_Never_Be_Null (Def_Id);\n-                  end if;\n+               if Constant_Present (N) then\n+                  Set_Can_Never_Be_Null (Def_Id);\n                end if;\n             end if;\n \n@@ -7661,9 +7869,10 @@ package body Exp_Ch3 is\n             if Validity_Checks_On\n               and then Comes_From_Source (N)\n               and then Validity_Check_Copies\n-              and then not Is_Generic_Type (Etype (Def_Id))\n+              and then not Is_Generic_Type (Typ)\n             then\n                Ensure_Valid (Expr);\n+\n                if Safe_To_Capture_Value (N, Def_Id) then\n                   Set_Is_Known_Valid (Def_Id);\n                end if;\n@@ -7741,10 +7950,9 @@ package body Exp_Ch3 is\n                    Obj_Ref => New_Occurrence_Of (Def_Id, Loc),\n                    Typ     => Base_Typ);\n \n-               --  Guard against a missing [Deep_]Adjust when the base type\n-               --  was not properly frozen.\n-\n-               if Present (Adj_Call) then\n+               if Present (Adj_Call)\n+                 and then not Is_Special_Return_Object (Def_Id)\n+               then\n                   Insert_Action_After (Init_After, Adj_Call);\n                end if;\n             end if;\n@@ -7779,7 +7987,7 @@ package body Exp_Ch3 is\n       end if;\n \n       if Nkind (Obj_Def) = N_Access_Definition\n-        and then not Is_Local_Anonymous_Access (Etype (Def_Id))\n+        and then not Is_Local_Anonymous_Access (Typ)\n       then\n          --  An Ada 2012 stand-alone object of an anonymous access type\n \n@@ -7891,32 +8099,30 @@ package body Exp_Ch3 is\n \n       --    if BIPalloc = 1 then\n       --       Rxx := BIPaccess;\n+      --       Rxx.all := <expression>;\n       --    elsif BIPalloc = 2 then\n-      --       Rxx := new <expression-type>[storage_pool =\n+      --       Rxx := new <expression-type>'(<expression>)[storage_pool =\n       --         system__secondary_stack__ss_pool][procedure_to_call =\n       --         system__secondary_stack__ss_allocate];\n       --    elsif BIPalloc = 3 then\n-      --       Rxx := new <expression-type>\n+      --       Rxx := new <expression-type>'(<expression>)\n       --    elsif BIPalloc = 4 then\n       --       Pxx : system__storage_pools__root_storage_pool renames\n       --         BIPstoragepool.all;\n-      --       Rxx := new <expression-type>[storage_pool =\n+      --       Rxx := new <expression-type>'(<expression>)[storage_pool =\n       --         Pxx][procedure_to_call =\n       --         system__storage_pools__allocate_any];\n       --    else\n       --       [program_error \"build in place mismatch\"]\n       --    end if;\n \n       --    Result : T renames Rxx.all;\n-      --    Result := <expression>;\n \n       --  in the unconstrained case.\n \n       if Is_Build_In_Place_Return_Object (Def_Id) then\n          declare\n-            Func_Id     : constant Entity_Id :=\n-              Return_Applies_To (Scope (Def_Id));\n-            Ret_Obj_Typ : constant Entity_Id := Etype (Def_Id);\n+            Func_Id : constant Entity_Id := Return_Applies_To (Scope (Def_Id));\n \n             Init_Stmt       : Node_Id;\n             Obj_Acc_Formal  : Entity_Id;\n@@ -7946,9 +8152,9 @@ package body Exp_Ch3 is\n             if Present (Expr_Q)\n               and then not Is_Delayed_Aggregate (Expr_Q)\n               and then not No_Initialization (N)\n-              and then not Is_Interface (Etype (Def_Id))\n+              and then not Is_Interface (Typ)\n             then\n-               if Is_Class_Wide_Type (Etype (Def_Id))\n+               if Is_Class_Wide_Type (Typ)\n                  and then not Is_Class_Wide_Type (Etype (Expr_Q))\n                then\n                   Init_Stmt :=\n@@ -7957,7 +8163,7 @@ package body Exp_Ch3 is\n                       Expression =>\n                         Make_Type_Conversion (Loc,\n                           Subtype_Mark =>\n-                            New_Occurrence_Of (Etype (Def_Id), Loc),\n+                            New_Occurrence_Of (Typ, Loc),\n                           Expression   => New_Copy_Tree (Expr_Q)));\n \n                else\n@@ -7990,137 +8196,70 @@ package body Exp_Ch3 is\n             if Needs_BIP_Alloc_Form (Func_Id) then\n                declare\n                   Desig_Typ : constant Entity_Id :=\n-                    (if Ekind (Ret_Obj_Typ) = E_Array_Subtype\n-                     then Etype (Func_Id) else Ret_Obj_Typ);\n+                    (if Ekind (Typ) = E_Array_Subtype\n+                     then Etype (Func_Id) else Typ);\n                   --  Ensure that the we use a fat pointer when allocating\n                   --  an unconstrained array on the heap. In this case the\n-                  --  result object type is a constrained array type even\n-                  --  though the function type is unconstrained.\n+                  --  result object's type is a constrained array type even\n+                  --  though the function's type is unconstrained.\n+\n                   Obj_Alloc_Formal : constant Entity_Id :=\n                     Build_In_Place_Formal (Func_Id, BIP_Alloc_Form);\n                   Pool_Id          : constant Entity_Id :=\n                     Make_Temporary (Loc, 'P');\n \n-                  function Make_Allocator_For_BIP_Return return Node_Id;\n-                  --  Make an allocator for the BIP return being processed\n-\n-                  -----------------------------------\n-                  -- Make_Allocator_For_BIP_Return --\n-                  -----------------------------------\n-\n-                  function Make_Allocator_For_BIP_Return return Node_Id is\n-                     Alloc : Node_Id;\n-\n-                  begin\n-                     if Present (Expr_Q)\n-                       and then not Is_Delayed_Aggregate (Expr_Q)\n-                       and then not No_Initialization (N)\n-                     then\n-                        --  Always use the type of the expression for the\n-                        --  qualified expression, rather than the result type.\n-                        --  In general we cannot always use the result type\n-                        --  for the allocator, because the expression might be\n-                        --  of a specific type, such as in the case of an\n-                        --  aggregate or even a nonlimited object when the\n-                        --  result type is a limited class-wide interface type.\n-\n-                        Alloc :=\n-                          Make_Allocator (Loc,\n-                            Expression =>\n-                              Make_Qualified_Expression (Loc,\n-                                Subtype_Mark =>\n-                                  New_Occurrence_Of (Etype (Expr_Q), Loc),\n-                                Expression   => New_Copy_Tree (Expr_Q)));\n-\n-                     else\n-                        --  If the function returns a class-wide type we cannot\n-                        --  use the return type for the allocator. Instead we\n-                        --  use the type of the expression, which must be an\n-                        --  aggregate of a definite type.\n-\n-                        if Is_Class_Wide_Type (Ret_Obj_Typ) then\n-                           Alloc :=\n-                             Make_Allocator (Loc,\n-                               Expression =>\n-                                 New_Occurrence_Of (Etype (Expr_Q), Loc));\n-\n-                        else\n-                           Alloc :=\n-                             Make_Allocator (Loc,\n-                               Expression =>\n-                                 New_Occurrence_Of (Ret_Obj_Typ, Loc));\n-                        end if;\n-\n-                        --  If the object requires default initialization then\n-                        --  that will happen later following the elaboration of\n-                        --  the object renaming. If we don't turn it off here\n-                        --  then the object will be default initialized twice.\n-\n-                        Set_No_Initialization (Alloc);\n-                     end if;\n-\n-                     --  Set the flag indicating that the allocator came from\n-                     --  a build-in-place return statement, so we can avoid\n-                     --  adjusting the allocated object.\n-\n-                     Set_Alloc_For_BIP_Return (Alloc);\n-\n-                     return Alloc;\n-                  end Make_Allocator_For_BIP_Return;\n-\n-                  Alloc_Obj_Id   : Entity_Id;\n+                  Acc_Typ        : Entity_Id;\n                   Alloc_Obj_Decl : Node_Id;\n-                  Alloc_Stmt      : Node_Id;\n+                  Alloc_Obj_Id   : Entity_Id;\n+                  Alloc_Stmt     : Node_Id;\n                   Guard_Except   : Node_Id;\n                   Heap_Allocator : Node_Id;\n-                  Pool_Decl      : Node_Id;\n                   Pool_Allocator : Node_Id;\n-                  Ptr_Type_Decl  : Node_Id;\n-                  Ref_Type       : Entity_Id;\n+                  Pool_Decl      : Node_Id;\n+                  Ptr_Typ_Decl   : Node_Id;\n                   SS_Allocator   : Node_Id;\n \n                begin\n                   --  Create an access type designating the function's\n                   --  result subtype.\n \n-                  Ref_Type := Make_Temporary (Loc, 'A');\n+                  Acc_Typ := Make_Temporary (Loc, 'A');\n \n-                  Ptr_Type_Decl :=\n+                  Ptr_Typ_Decl :=\n                     Make_Full_Type_Declaration (Loc,\n-                      Defining_Identifier => Ref_Type,\n+                      Defining_Identifier => Acc_Typ,\n                       Type_Definition     =>\n                         Make_Access_To_Object_Definition (Loc,\n                           All_Present        => True,\n                           Subtype_Indication =>\n                             New_Occurrence_Of (Desig_Typ, Loc)));\n \n-                  Insert_Action (N, Ptr_Type_Decl);\n+                  Insert_Action (N, Ptr_Typ_Decl, Suppress => All_Checks);\n \n                   --  Create an access object that will be initialized to an\n                   --  access value denoting the return object, either coming\n                   --  from an implicit access value passed in by the caller\n                   --  or from the result of an allocator.\n \n                   Alloc_Obj_Id := Make_Temporary (Loc, 'R');\n-                  Set_Etype (Alloc_Obj_Id, Ref_Type);\n \n                   Alloc_Obj_Decl :=\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => Alloc_Obj_Id,\n                       Object_Definition   =>\n-                        New_Occurrence_Of (Ref_Type, Loc));\n+                        New_Occurrence_Of (Acc_Typ, Loc));\n \n-                  Insert_Action (N, Alloc_Obj_Decl);\n+                  Insert_Action (N, Alloc_Obj_Decl, Suppress => All_Checks);\n \n                   --  First create the Heap_Allocator\n \n-                  Heap_Allocator := Make_Allocator_For_BIP_Return;\n+                  Heap_Allocator := Make_Allocator_For_Return (Expr_Q);\n \n                   --  The Pool_Allocator is just like the Heap_Allocator,\n                   --  except we set Storage_Pool and Procedure_To_Call so\n                   --  it will use the user-defined storage pool.\n \n-                  Pool_Allocator := Make_Allocator_For_BIP_Return;\n+                  Pool_Allocator := Make_Allocator_For_Return (Expr_Q);\n \n                   --  Do not generate the renaming of the build-in-place\n                   --  pool parameter on ZFP because the parameter is not\n@@ -8161,7 +8300,7 @@ package body Exp_Ch3 is\n                   --  allocation.\n \n                   else\n-                     SS_Allocator := Make_Allocator_For_BIP_Return;\n+                     SS_Allocator := Make_Allocator_For_Return (Expr_Q);\n \n                      --  The heap and pool allocators are marked as\n                      --  Comes_From_Source since they correspond to an\n@@ -8223,7 +8362,7 @@ package body Exp_Ch3 is\n                   --  to-unconstrained to access-to-constrained), but the\n                   --  the unchecked conversion will presumably fail to work\n                   --  right in just such cases. It's not clear at all how to\n-                  --  handle this. ???\n+                  --  handle this.\n \n                   Alloc_Stmt :=\n                     Make_If_Statement (Loc,\n@@ -8242,7 +8381,7 @@ package body Exp_Ch3 is\n                             New_Occurrence_Of (Alloc_Obj_Id, Loc),\n                           Expression =>\n                             Unchecked_Convert_To\n-                              (Ref_Type,\n+                              (Acc_Typ,\n                                New_Occurrence_Of (Obj_Acc_Formal, Loc)))),\n \n                       Elsif_Parts => New_List (\n@@ -8275,12 +8414,12 @@ package body Exp_Ch3 is\n                           Then_Statements => New_List (\n                             Build_Heap_Or_Pool_Allocator\n                               (Temp_Id    => Alloc_Obj_Id,\n-                               Temp_Typ   => Ref_Type,\n+                               Temp_Typ   => Acc_Typ,\n                                Func_Id    => Func_Id,\n                                Ret_Typ    => Desig_Typ,\n                                Alloc_Expr => Heap_Allocator))),\n \n-                        --  ???If all is well, we can put the following\n+                        --  ??? If all is well, we can put the following\n                         --  'elsif' in the 'else', but this is a useful\n                         --  self-check in case caller and callee don't agree\n                         --  on whether BIPAlloc and so on should be passed.\n@@ -8299,7 +8438,7 @@ package body Exp_Ch3 is\n                             Pool_Decl,\n                             Build_Heap_Or_Pool_Allocator\n                               (Temp_Id    => Alloc_Obj_Id,\n-                               Temp_Typ   => Ref_Type,\n+                               Temp_Typ   => Acc_Typ,\n                                Func_Id    => Func_Id,\n                                Ret_Typ    => Desig_Typ,\n                                Alloc_Expr => Pool_Allocator)))),\n@@ -8332,41 +8471,44 @@ package body Exp_Ch3 is\n                   --  From now on, the type of the return object is the\n                   --  designated type.\n \n-                  Set_Etype (Def_Id, Desig_Typ);\n+                  if Desig_Typ /= Typ then\n+                     Set_Etype (Def_Id, Desig_Typ);\n+                     Set_Actual_Subtype (Def_Id, Typ);\n+                  end if;\n \n                   --  Remember the local access object for use in the\n                   --  dereference of the renaming created below.\n \n                   Obj_Acc_Formal := Alloc_Obj_Id;\n                end;\n \n-            --  When the function's subtype is unconstrained and a run-time\n-            --  test is not needed, we nevertheless need to build the return\n-            --  using the function's result subtype.\n+            --  When the function's type is unconstrained and a run-time test\n+            --  is not needed, we nevertheless need to build the return using\n+            --  the return object's type.\n \n             elsif not Is_Constrained (Underlying_Type (Etype (Func_Id))) then\n                declare\n-                  Alloc_Obj_Id   : Entity_Id;\n+                  Acc_Typ        : Entity_Id;\n                   Alloc_Obj_Decl : Node_Id;\n-                  Ptr_Type_Decl  : Node_Id;\n-                  Ref_Type       : Entity_Id;\n+                  Alloc_Obj_Id   : Entity_Id;\n+                  Ptr_Typ_Decl   : Node_Id;\n \n                begin\n                   --  Create an access type designating the function's\n                   --  result subtype.\n \n-                  Ref_Type := Make_Temporary (Loc, 'A');\n+                  Acc_Typ := Make_Temporary (Loc, 'A');\n \n-                  Ptr_Type_Decl :=\n+                  Ptr_Typ_Decl :=\n                     Make_Full_Type_Declaration (Loc,\n-                      Defining_Identifier => Ref_Type,\n+                      Defining_Identifier => Acc_Typ,\n                       Type_Definition     =>\n                         Make_Access_To_Object_Definition (Loc,\n                           All_Present        => True,\n                           Subtype_Indication =>\n-                            New_Occurrence_Of (Ret_Obj_Typ, Loc)));\n+                            New_Occurrence_Of (Typ, Loc)));\n \n-                  Insert_Action (N, Ptr_Type_Decl);\n+                  Insert_Action (N, Ptr_Typ_Decl, Suppress => All_Checks);\n \n                   --  Create an access object initialized to the conversion\n                   --  of the implicit access value passed in by the caller.\n@@ -8379,12 +8521,12 @@ package body Exp_Ch3 is\n                   Alloc_Obj_Decl :=\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => Alloc_Obj_Id,\n+                      Constant_Present    => True,\n                       Object_Definition   =>\n-                        New_Occurrence_Of (Ref_Type, Loc),\n+                        New_Occurrence_Of (Acc_Typ, Loc),\n                       Expression =>\n                         Unchecked_Convert_To\n-                          (Ref_Type,\n-                           New_Occurrence_Of (Obj_Acc_Formal, Loc)));\n+                          (Acc_Typ, New_Occurrence_Of (Obj_Acc_Formal, Loc)));\n \n                   Insert_Action (N, Alloc_Obj_Decl, Suppress => All_Checks);\n \n@@ -8398,25 +8540,207 @@ package body Exp_Ch3 is\n             --  Initialize the object now that it has got its final subtype,\n             --  but before rewriting it as a renaming.\n \n-            if No (Expr_Q) then\n-               Default_Initialize_Object (Init_After);\n+            Initialize_Return_Object\n+              (Tag_Assign, Adj_Call, Expr_Q, Init_Stmt, Init_After);\n \n-            elsif Is_Delayed_Aggregate (Expr_Q)\n-              and then not No_Initialization (N)\n-            then\n-               Convert_Aggr_In_Object_Decl (N);\n+            --  Replace the return object declaration with a renaming of a\n+            --  dereference of the access value designating the return object.\n \n-            elsif Present (Init_Stmt) then\n-               Insert_Action_After (Init_After, Init_Stmt);\n-               Set_Expression (N, Empty);\n+            Expr_Q :=\n+              Make_Explicit_Dereference (Loc,\n+                Prefix => New_Occurrence_Of (Obj_Acc_Formal, Loc));\n+            Set_Etype (Expr_Q, Etype (Def_Id));\n+\n+            Rewrite_As_Renaming := True;\n+         end;\n+\n+      --  If we can rename the initialization expression, we need to make sure\n+      --  that we use the proper type in the case of a return object that lives\n+      --  on the secondary stack. See other cases below for a similar handling.\n+\n+      elsif Rewrite_As_Renaming then\n+         if Is_Secondary_Stack_Return_Object (Def_Id) then\n+            declare\n+               Func_Id  : constant Entity_Id  :=\n+                 Return_Applies_To (Scope (Def_Id));\n+\n+               Desig_Typ : constant Entity_Id :=\n+                 (if Ekind (Typ) = E_Array_Subtype\n+                  then Etype (Func_Id) else Typ);\n+\n+            begin\n+               --  From now on, the type of the return object is the\n+               --  designated type.\n+\n+               if Desig_Typ /= Typ then\n+                  Set_Etype (Def_Id, Desig_Typ);\n+                  Set_Actual_Subtype (Def_Id, Typ);\n+               end if;\n+            end;\n+         end if;\n+\n+      --  If this is the return object of a function returning on the secondary\n+      --  stack, convert the declaration to a renaming of the dereference of ah\n+      --  allocator for the secondary stack.\n+\n+      --    Result : T [:= <expression>];\n+\n+      --  is converted to\n+\n+      --    type Txx is access all ...;\n+      --    Rxx : constant Txx :=\n+      --      new <expression-type>['(<expression>)][storage_pool =\n+      --        system__secondary_stack__ss_pool][procedure_to_call =\n+      --        system__secondary_stack__ss_allocate];\n+\n+      --    Result : T renames Rxx.all;\n+\n+      elsif Is_Secondary_Stack_Return_Object (Def_Id) then\n+         declare\n+            Func_Id  : constant Entity_Id  :=\n+              Return_Applies_To (Scope (Def_Id));\n+\n+            Desig_Typ : constant Entity_Id :=\n+              (if Ekind (Typ) = E_Array_Subtype\n+               then Etype (Func_Id) else Typ);\n+            --  Ensure that the we use a fat pointer when allocating\n+            --  an unconstrained array on the heap. In this case the\n+            --  result object's type is a constrained array type even\n+            --  though the function's type is unconstrained.\n+\n+            Acc_Typ        : Entity_Id;\n+            Alloc_Obj_Decl : Node_Id;\n+            Alloc_Obj_Id   : Entity_Id;\n+            Ptr_Type_Decl  : Node_Id;\n+\n+         begin\n+            --  Create an access type designating the function's\n+            --  result subtype.\n+\n+            Acc_Typ := Make_Temporary (Loc, 'A');\n+\n+            Ptr_Type_Decl :=\n+              Make_Full_Type_Declaration (Loc,\n+                Defining_Identifier => Acc_Typ,\n+                Type_Definition     =>\n+                  Make_Access_To_Object_Definition (Loc,\n+                    All_Present        => True,\n+                    Subtype_Indication =>\n+                      New_Occurrence_Of (Desig_Typ, Loc)));\n+\n+            Insert_Action (N, Ptr_Type_Decl, Suppress => All_Checks);\n+\n+            Set_Associated_Storage_Pool (Acc_Typ, RTE (RE_SS_Pool));\n+\n+            Alloc_Obj_Id := Make_Temporary (Loc, 'R');\n+\n+            Alloc_Obj_Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Alloc_Obj_Id,\n+                Constant_Present    => True,\n+                Object_Definition   =>\n+                  New_Occurrence_Of (Acc_Typ, Loc),\n+                Expression => Make_Allocator_For_Return (Expr_Q));\n+\n+            Insert_Action (N, Alloc_Obj_Decl, Suppress => All_Checks);\n+\n+            Set_Uses_Sec_Stack (Func_Id);\n+            Set_Uses_Sec_Stack (Scope (Def_Id));\n+            Set_Sec_Stack_Needed_For_Return (Scope (Def_Id));\n+\n+            --  From now on, the type of the return object is the\n+            --  designated type.\n+\n+            if Desig_Typ /= Typ then\n+               Set_Etype (Def_Id, Desig_Typ);\n+               Set_Actual_Subtype (Def_Id, Typ);\n             end if;\n \n+            --  Initialize the object now that it has got its final subtype,\n+            --  but before rewriting it as a renaming.\n+\n+            Initialize_Return_Object\n+              (Tag_Assign, Adj_Call, Expr_Q, Empty, Init_After);\n+\n             --  Replace the return object declaration with a renaming of a\n             --  dereference of the access value designating the return object.\n \n             Expr_Q :=\n               Make_Explicit_Dereference (Loc,\n-                Prefix => New_Occurrence_Of (Obj_Acc_Formal, Loc));\n+                Prefix => New_Occurrence_Of (Alloc_Obj_Id, Loc));\n+            Set_Etype (Expr_Q, Etype (Def_Id));\n+\n+            Rewrite_As_Renaming := True;\n+         end;\n+\n+      --  If this is the return object of a function returning a by-reference\n+      --  type, convert the declaration to a renaming of the dereference of ah\n+      --  allocator for the return stack.\n+\n+      --    Result : T [:= <expression>];\n+\n+      --  is converted to\n+\n+      --    type Txx is access all ...;\n+      --    Rxx : constant Txx :=\n+      --      new <expression-type>['(<expression>)][storage_pool =\n+      --        system__secondary_stack__rs_pool][procedure_to_call =\n+      --        system__secondary_stack__rs_allocate];\n+\n+      --    Result : T renames Rxx.all;\n+\n+      elsif Back_End_Return_Slot\n+        and then Is_By_Reference_Return_Object (Def_Id)\n+      then\n+         declare\n+            Acc_Typ        : Entity_Id;\n+            Alloc_Obj_Decl : Node_Id;\n+            Alloc_Obj_Id   : Entity_Id;\n+            Ptr_Type_Decl  : Node_Id;\n+\n+         begin\n+            --  Create an access type designating the function's\n+            --  result subtype.\n+\n+            Acc_Typ := Make_Temporary (Loc, 'A');\n+\n+            Ptr_Type_Decl :=\n+              Make_Full_Type_Declaration (Loc,\n+                Defining_Identifier => Acc_Typ,\n+                Type_Definition     =>\n+                  Make_Access_To_Object_Definition (Loc,\n+                    All_Present        => True,\n+                    Subtype_Indication =>\n+                      New_Occurrence_Of (Typ, Loc)));\n+\n+            Insert_Action (N, Ptr_Type_Decl, Suppress => All_Checks);\n+\n+            Set_Associated_Storage_Pool (Acc_Typ, RTE (RE_RS_Pool));\n+\n+            Alloc_Obj_Id := Make_Temporary (Loc, 'R');\n+\n+            Alloc_Obj_Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Alloc_Obj_Id,\n+                Constant_Present    => True,\n+                Object_Definition   =>\n+                  New_Occurrence_Of (Acc_Typ, Loc),\n+                Expression => Make_Allocator_For_Return (Expr_Q));\n+\n+            Insert_Action (N, Alloc_Obj_Decl, Suppress => All_Checks);\n+\n+            --  Initialize the object now that it has got its final subtype,\n+            --  but before rewriting it as a renaming.\n+\n+            Initialize_Return_Object\n+              (Tag_Assign, Adj_Call, Expr_Q, Empty, Init_After);\n+\n+            --  Replace the return object declaration with a renaming of a\n+            --  dereference of the access value designating the return object.\n+\n+            Expr_Q :=\n+              Make_Explicit_Dereference (Loc,\n+                Prefix => New_Occurrence_Of (Alloc_Obj_Id, Loc));\n             Set_Etype (Expr_Q, Etype (Def_Id));\n \n             Rewrite_As_Renaming := True;\n@@ -11676,37 +12000,39 @@ package body Exp_Ch3 is\n \n    function Make_Tag_Assignment (N : Node_Id) return Node_Id is\n       Loc      : constant Source_Ptr := Sloc (N);\n-      Def_If   : constant Entity_Id := Defining_Identifier (N);\n-      Expr     : constant Node_Id := Expression (N);\n-      Typ      : constant Entity_Id := Etype (Def_If);\n-      Full_Typ : constant Entity_Id := Underlying_Type (Typ);\n+      Def_If   : constant Entity_Id  := Defining_Identifier (N);\n+      Expr     : constant Node_Id    := Expression (N);\n+      Typ      : constant Entity_Id  := Etype (Def_If);\n+      Full_Typ : constant Entity_Id  := Underlying_Type (Typ);\n+\n       New_Ref  : Node_Id;\n \n    begin\n-      --  This expansion activity is called during analysis.\n+      --  This expansion activity is called during analysis\n \n       if Is_Tagged_Type (Typ)\n-       and then not Is_Class_Wide_Type (Typ)\n-       and then not Is_CPP_Class (Typ)\n-       and then Tagged_Type_Expansion\n-       and then Nkind (Expr) /= N_Aggregate\n-       and then (Nkind (Expr) /= N_Qualified_Expression\n-                  or else Nkind (Expression (Expr)) /= N_Aggregate)\n+        and then not Is_Class_Wide_Type (Typ)\n+        and then not Is_CPP_Class (Typ)\n+        and then Tagged_Type_Expansion\n+        and then Nkind (Expr) /= N_Aggregate\n+        and then (Nkind (Expr) /= N_Qualified_Expression\n+                   or else Nkind (Expression (Expr)) /= N_Aggregate)\n       then\n          New_Ref :=\n            Make_Selected_Component (Loc,\n-              Prefix        => New_Occurrence_Of (Def_If, Loc),\n-              Selector_Name =>\n-                New_Occurrence_Of (First_Tag_Component (Full_Typ), Loc));\n+             Prefix        => New_Occurrence_Of (Def_If, Loc),\n+             Selector_Name =>\n+               New_Occurrence_Of (First_Tag_Component (Full_Typ), Loc));\n+\n          Set_Assignment_OK (New_Ref);\n \n          return\n            Make_Assignment_Statement (Loc,\n-              Name       => New_Ref,\n-              Expression =>\n-                Unchecked_Convert_To (RTE (RE_Tag),\n-                  New_Occurrence_Of (Node\n-                      (First_Elmt (Access_Disp_Table (Full_Typ))), Loc)));\n+             Name       => New_Ref,\n+             Expression =>\n+               Unchecked_Convert_To (RTE (RE_Tag),\n+                 New_Occurrence_Of\n+                   (Node (First_Elmt (Access_Disp_Table (Full_Typ))), Loc)));\n       else\n          return Empty;\n       end if;"}, {"sha": "24e2263296d4ed6b46889be03e5e02dcb0366f7e", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -25,9 +25,10 @@\n \n --  Expand routines for chapter 3 constructs\n \n-with Types;  use Types;\n-with Elists; use Elists;\n-with Uintp;  use Uintp;\n+with Types;   use Types;\n+with Elists;  use Elists;\n+with Exp_Tss; use Exp_Tss;\n+with Uintp;   use Uintp;\n \n package Exp_Ch3 is\n \n@@ -207,4 +208,13 @@ package Exp_Ch3 is\n    --  Make_Predefined_Primitive_Eq_Spec; see there for description of\n    --  the Renamed_Eq parameter.\n \n+   function Stream_Operation_OK\n+     (Typ       : Entity_Id;\n+      Operation : TSS_Name_Type) return Boolean;\n+   --  Check whether the named stream operation must be emitted for a given\n+   --  type. The rules for inheritance of stream attributes by type extensions\n+   --  are enforced by this function. Furthermore, various restrictions prevent\n+   --  the generation of these operations, as a useful optimization or for\n+   --  certification purposes and to save unnecessary generated code.\n+\n end Exp_Ch3;"}, {"sha": "a8980a63d465a3335d8aad9b6454093a811fec8a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 319, "deletions": 419, "changes": 738, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n@@ -33,7 +34,6 @@ with Einfo.Utils;    use Einfo.Utils;\n with Elists;         use Elists;\n with Errout;         use Errout;\n with Exp_Aggr;       use Exp_Aggr;\n-with Exp_Atag;       use Exp_Atag;\n with Exp_Ch3;        use Exp_Ch3;\n with Exp_Ch6;        use Exp_Ch6;\n with Exp_Ch7;        use Exp_Ch7;\n@@ -151,14 +151,17 @@ package body Exp_Ch4 is\n    --  where we allow comparison of \"out of range\" values.\n \n    function Expand_Composite_Equality\n-     (Nod : Node_Id;\n-      Typ : Entity_Id;\n-      Lhs : Node_Id;\n-      Rhs : Node_Id) return Node_Id;\n+     (Outer_Type : Entity_Id;\n+      Nod        : Node_Id;\n+      Comp_Type  : Entity_Id;\n+      Lhs        : Node_Id;\n+      Rhs        : Node_Id) return Node_Id;\n    --  Local recursive function used to expand equality for nested composite\n    --  types. Used by Expand_Record/Array_Equality. Nod provides the Sloc value\n    --  for generated code. Lhs and Rhs are the left and right sides for the\n-   --  comparison, and Typ is the type of the objects to compare.\n+   --  comparison, and Comp_Typ is the type of the objects to compare.\n+   --  Outer_Type is the composite type containing a component of type\n+   --  Comp_Type -- used for printing messages.\n \n    procedure Expand_Concatenate (Cnode : Node_Id; Opnds : List_Id);\n    --  Routine to expand concatenation of a sequence of two or more operands\n@@ -557,219 +560,6 @@ package body Exp_Ch4 is\n       PtrT   : constant Entity_Id  := Etype (N);\n       DesigT : constant Entity_Id  := Designated_Type (PtrT);\n \n-      procedure Apply_Accessibility_Check\n-        (Ref            : Node_Id;\n-         Built_In_Place : Boolean := False);\n-      --  Ada 2005 (AI-344): For an allocator with a class-wide designated\n-      --  type, generate an accessibility check to verify that the level of the\n-      --  type of the created object is not deeper than the level of the access\n-      --  type. If the type of the qualified expression is class-wide, then\n-      --  always generate the check (except in the case where it is known to be\n-      --  unnecessary, see comment below). Otherwise, only generate the check\n-      --  if the level of the qualified expression type is statically deeper\n-      --  than the access type.\n-      --\n-      --  Although the static accessibility will generally have been performed\n-      --  as a legality check, it won't have been done in cases where the\n-      --  allocator appears in generic body, so a run-time check is needed in\n-      --  general. One special case is when the access type is declared in the\n-      --  same scope as the class-wide allocator, in which case the check can\n-      --  never fail, so it need not be generated.\n-      --\n-      --  As an open issue, there seem to be cases where the static level\n-      --  associated with the class-wide object's underlying type is not\n-      --  sufficient to perform the proper accessibility check, such as for\n-      --  allocators in nested subprograms or accept statements initialized by\n-      --  class-wide formals when the actual originates outside at a deeper\n-      --  static level. The nested subprogram case might require passing\n-      --  accessibility levels along with class-wide parameters, and the task\n-      --  case seems to be an actual gap in the language rules that needs to\n-      --  be fixed by the ARG. ???\n-\n-      -------------------------------\n-      -- Apply_Accessibility_Check --\n-      -------------------------------\n-\n-      procedure Apply_Accessibility_Check\n-        (Ref            : Node_Id;\n-         Built_In_Place : Boolean := False)\n-      is\n-         Pool_Id   : constant Entity_Id := Associated_Storage_Pool (PtrT);\n-         Cond      : Node_Id;\n-         Fin_Call  : Node_Id;\n-         Free_Stmt : Node_Id;\n-         Obj_Ref   : Node_Id;\n-         Stmts     : List_Id;\n-\n-      begin\n-         if Ada_Version >= Ada_2005\n-           and then Is_Class_Wide_Type (DesigT)\n-           and then Tagged_Type_Expansion\n-           and then not Scope_Suppress.Suppress (Accessibility_Check)\n-           and then not No_Dynamic_Accessibility_Checks_Enabled (Ref)\n-           and then\n-             (Type_Access_Level (Etype (Exp)) > Type_Access_Level (PtrT)\n-               or else\n-                 (Is_Class_Wide_Type (Etype (Exp))\n-                   and then Scope (PtrT) /= Current_Scope))\n-         then\n-            --  If the allocator was built in place, Ref is already a reference\n-            --  to the access object initialized to the result of the allocator\n-            --  (see Exp_Ch6.Make_Build_In_Place_Call_In_Allocator). We call\n-            --  Remove_Side_Effects for cases where the build-in-place call may\n-            --  still be the prefix of the reference (to avoid generating\n-            --  duplicate calls). Otherwise, it is the entity associated with\n-            --  the object containing the address of the allocated object.\n-\n-            if Built_In_Place then\n-               Remove_Side_Effects (Ref);\n-               Obj_Ref := New_Copy_Tree (Ref);\n-            else\n-               Obj_Ref := New_Occurrence_Of (Ref, Loc);\n-            end if;\n-\n-            --  For access to interface types we must generate code to displace\n-            --  the pointer to the base of the object since the subsequent code\n-            --  references components located in the TSD of the object (which\n-            --  is associated with the primary dispatch table --see a-tags.ads)\n-            --  and also generates code invoking Free, which requires also a\n-            --  reference to the base of the unallocated object.\n-\n-            if Is_Interface (DesigT) and then Tagged_Type_Expansion then\n-               Obj_Ref :=\n-                 Unchecked_Convert_To (Etype (Obj_Ref),\n-                   Make_Function_Call (Loc,\n-                     Name                   =>\n-                       New_Occurrence_Of (RTE (RE_Base_Address), Loc),\n-                     Parameter_Associations => New_List (\n-                       Unchecked_Convert_To (RTE (RE_Address),\n-                         New_Copy_Tree (Obj_Ref)))));\n-            end if;\n-\n-            --  Step 1: Create the object clean up code\n-\n-            Stmts := New_List;\n-\n-            --  Deallocate the object if the accessibility check fails. This\n-            --  is done only on targets or profiles that support deallocation.\n-\n-            --    Free (Obj_Ref);\n-\n-            if RTE_Available (RE_Free) then\n-               Free_Stmt := Make_Free_Statement (Loc, New_Copy_Tree (Obj_Ref));\n-               Set_Storage_Pool (Free_Stmt, Pool_Id);\n-\n-               Append_To (Stmts, Free_Stmt);\n-\n-            --  The target or profile cannot deallocate objects\n-\n-            else\n-               Free_Stmt := Empty;\n-            end if;\n-\n-            --  Finalize the object if applicable. Generate:\n-\n-            --    [Deep_]Finalize (Obj_Ref.all);\n-\n-            if Needs_Finalization (DesigT)\n-              and then not No_Heap_Finalization (PtrT)\n-            then\n-               Fin_Call :=\n-                 Make_Final_Call\n-                   (Obj_Ref =>\n-                      Make_Explicit_Dereference (Loc, New_Copy (Obj_Ref)),\n-                    Typ     => DesigT);\n-\n-               --  Guard against a missing [Deep_]Finalize when the designated\n-               --  type was not properly frozen.\n-\n-               if No (Fin_Call) then\n-                  Fin_Call := Make_Null_Statement (Loc);\n-               end if;\n-\n-               --  When the target or profile supports deallocation, wrap the\n-               --  finalization call in a block to ensure proper deallocation\n-               --  even if finalization fails. Generate:\n-\n-               --    begin\n-               --       <Fin_Call>\n-               --    exception\n-               --       when others =>\n-               --          <Free_Stmt>\n-               --          raise;\n-               --    end;\n-\n-               if Present (Free_Stmt) then\n-                  Fin_Call :=\n-                    Make_Block_Statement (Loc,\n-                      Handled_Statement_Sequence =>\n-                        Make_Handled_Sequence_Of_Statements (Loc,\n-                          Statements => New_List (Fin_Call),\n-\n-                        Exception_Handlers => New_List (\n-                          Make_Exception_Handler (Loc,\n-                            Exception_Choices => New_List (\n-                              Make_Others_Choice (Loc)),\n-                            Statements        => New_List (\n-                              New_Copy_Tree (Free_Stmt),\n-                              Make_Raise_Statement (Loc))))));\n-               end if;\n-\n-               Prepend_To (Stmts, Fin_Call);\n-            end if;\n-\n-            --  Signal the accessibility failure through a Program_Error\n-\n-            Append_To (Stmts,\n-              Make_Raise_Program_Error (Loc,\n-                Reason => PE_Accessibility_Check_Failed));\n-\n-            --  Step 2: Create the accessibility comparison\n-\n-            --  Generate:\n-            --    Ref'Tag\n-\n-            Obj_Ref :=\n-              Make_Attribute_Reference (Loc,\n-                Prefix         => Obj_Ref,\n-                Attribute_Name => Name_Tag);\n-\n-            --  For tagged types, determine the accessibility level by looking\n-            --  at the type specific data of the dispatch table. Generate:\n-\n-            --    Type_Specific_Data (Address (Ref'Tag)).Access_Level\n-\n-            if Tagged_Type_Expansion then\n-               Cond := Build_Get_Access_Level (Loc, Obj_Ref);\n-\n-            --  Use a runtime call to determine the accessibility level when\n-            --  compiling on virtual machine targets. Generate:\n-\n-            --    Get_Access_Level (Ref'Tag)\n-\n-            else\n-               Cond :=\n-                 Make_Function_Call (Loc,\n-                   Name                   =>\n-                     New_Occurrence_Of (RTE (RE_Get_Access_Level), Loc),\n-                   Parameter_Associations => New_List (Obj_Ref));\n-            end if;\n-\n-            Cond :=\n-              Make_Op_Gt (Loc,\n-                Left_Opnd  => Cond,\n-                Right_Opnd => Accessibility_Level (N, Dynamic_Level));\n-\n-            --  Due to the complexity and side effects of the check, utilize an\n-            --  if statement instead of the regular Program_Error circuitry.\n-\n-            Insert_Action (N,\n-              Make_Implicit_If_Statement (N,\n-                Condition       => Cond,\n-                Then_Statements => Stmts));\n-         end if;\n-      end Apply_Accessibility_Check;\n-\n       --  Local variables\n \n       Indic         : constant Node_Id   := Subtype_Mark (Expression (N));\n@@ -881,7 +671,8 @@ package body Exp_Ch4 is\n \n          if Is_Build_In_Place_Function_Call (Exp) then\n             Make_Build_In_Place_Call_In_Allocator (N, Exp);\n-            Apply_Accessibility_Check (N, Built_In_Place => True);\n+            Apply_Accessibility_Check_For_Allocator\n+              (N, Exp, N, Built_In_Place => True);\n             return;\n \n          --  Ada 2005 (AI-318-02): Specialization of the previous case for\n@@ -893,7 +684,8 @@ package body Exp_Ch4 is\n \n          elsif Present (Unqual_BIP_Iface_Function_Call (Exp)) then\n             Make_Build_In_Place_Iface_Call_In_Allocator (N, Exp);\n-            Apply_Accessibility_Check (N, Built_In_Place => True);\n+            Apply_Accessibility_Check_For_Allocator\n+              (N, Exp, N, Built_In_Place => True);\n             return;\n          end if;\n \n@@ -1106,6 +898,11 @@ package body Exp_Ch4 is\n                             (Directly_Designated_Type (Etype (N))));\n             null;\n \n+         --  Likewise if the allocator is made for a special return object\n+\n+         elsif For_Special_Return_Object (N) then\n+            null;\n+\n          elsif Is_Tagged_Type (T) and then not Is_Class_Wide_Type (T) then\n             TagT := T;\n             TagR :=\n@@ -1154,19 +951,18 @@ package body Exp_Ch4 is\n          --  Adjust procedure, and the object is built in place. In Ada 95, the\n          --  object can be limited but not inherently limited if this allocator\n          --  came from a return statement (we're allocating the result on the\n-         --  secondary stack). In that case, the object will be moved, so we do\n-         --  want to Adjust. However, if it's a nonlimited build-in-place\n-         --  function call, Adjust is not wanted.\n-         --\n-         --  Needs_Finalization (DesigT) can differ from Needs_Finalization (T)\n+         --  secondary stack); in that case, the object will be moved, so we do\n+         --  want to Adjust. But the call is always skipped if the allocator is\n+         --  made for a special return object because it's generated elsewhere.\n+\n+         --  Needs_Finalization (DesigT) may differ from Needs_Finalization (T)\n          --  if one of the two types is class-wide, and the other is not.\n \n          if Needs_Finalization (DesigT)\n            and then Needs_Finalization (T)\n            and then not Aggr_In_Place\n            and then not Is_Limited_View (T)\n-           and then not Alloc_For_BIP_Return (N)\n-           and then not Is_Build_In_Place_Function_Call (Expression (N))\n+           and then not For_Special_Return_Object (N)\n          then\n             --  An unchecked conversion is needed in the classwide case because\n             --  the designated type can be an ancestor of the subtype mark of\n@@ -1188,7 +984,7 @@ package body Exp_Ch4 is\n          --  Note: the accessibility check must be inserted after the call to\n          --  [Deep_]Adjust to ensure proper completion of the assignment.\n \n-         Apply_Accessibility_Check (Temp);\n+         Apply_Accessibility_Check_For_Allocator (N, Exp, Temp);\n \n          Rewrite (N, New_Occurrence_Of (Temp, Loc));\n          Analyze_And_Resolve (N, PtrT);\n@@ -1424,33 +1220,52 @@ package body Exp_Ch4 is\n             Remove_Side_Effects (Op1, Name_Req => True);\n             Remove_Side_Effects (Op2, Name_Req => True);\n \n-            Rewrite (Op1,\n-              Make_Function_Call (Sloc (Op1),\n-                Name => New_Occurrence_Of (RTE (Comp), Loc),\n+            declare\n+               Comp_Call : constant Node_Id :=\n+                 Make_Function_Call (Loc,\n+                   Name => New_Occurrence_Of (RTE (Comp), Loc),\n \n-                Parameter_Associations => New_List (\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         => Relocate_Node (Op1),\n-                    Attribute_Name => Name_Address),\n+                   Parameter_Associations => New_List (\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => Relocate_Node (Op1),\n+                       Attribute_Name => Name_Address),\n \n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         => Relocate_Node (Op2),\n-                    Attribute_Name => Name_Address),\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => Relocate_Node (Op2),\n+                       Attribute_Name => Name_Address),\n \n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         => Relocate_Node (Op1),\n-                    Attribute_Name => Name_Length),\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => Relocate_Node (Op1),\n+                       Attribute_Name => Name_Length),\n \n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         => Relocate_Node (Op2),\n-                    Attribute_Name => Name_Length))));\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => Relocate_Node (Op2),\n+                       Attribute_Name => Name_Length)));\n+\n+               Zero : constant Node_Id :=\n+                 Make_Integer_Literal (Loc,\n+                   Intval => Uint_0);\n \n-            Rewrite (Op2,\n-              Make_Integer_Literal (Sloc (Op2),\n-                Intval => Uint_0));\n+               Comp_Op : Node_Id;\n \n-            Analyze_And_Resolve (Op1, Standard_Integer);\n-            Analyze_And_Resolve (Op2, Standard_Integer);\n+            begin\n+               case Nkind (N) is\n+                  when N_Op_Lt =>\n+                     Comp_Op := Make_Op_Lt (Loc, Comp_Call, Zero);\n+                  when N_Op_Le =>\n+                     Comp_Op := Make_Op_Le (Loc, Comp_Call, Zero);\n+                  when N_Op_Gt =>\n+                     Comp_Op := Make_Op_Gt (Loc, Comp_Call, Zero);\n+                  when N_Op_Ge =>\n+                     Comp_Op := Make_Op_Ge (Loc, Comp_Call, Zero);\n+                  when others =>\n+                     raise Program_Error;\n+               end case;\n+\n+               Rewrite (N, Comp_Op);\n+            end;\n+\n+            Analyze_And_Resolve (N, Standard_Boolean);\n             return;\n          end if;\n       end if;\n@@ -1702,7 +1517,9 @@ package body Exp_Ch4 is\n              Prefix      => Make_Identifier (Loc, Chars (B)),\n              Expressions => Index_List2);\n \n-         Test := Expand_Composite_Equality (Nod, Component_Type (Typ), L, R);\n+         Test := Expand_Composite_Equality\n+           (Outer_Type => Typ, Nod => Nod, Comp_Type => Component_Type (Typ),\n+            Lhs => L, Rhs => R);\n \n          --  If some (sub)component is an unchecked_union, the whole operation\n          --  will raise program error.\n@@ -1934,7 +1751,6 @@ package body Exp_Ch4 is\n       if Ltyp /= Rtyp then\n          Ltyp := Base_Type (Ltyp);\n          Rtyp := Base_Type (Rtyp);\n-         pragma Assert (Ltyp = Rtyp);\n       end if;\n \n       --  If the array type is distinct from the type of the arguments, it\n@@ -1957,14 +1773,14 @@ package body Exp_Ch4 is\n          New_Rhs := Rhs;\n       end if;\n \n+      pragma Assert (Ltyp = Rtyp);\n       First_Idx := First_Index (Ltyp);\n \n       --  If optimization is enabled and the array boils down to a couple of\n       --  consecutive elements, generate a simple conjunction of comparisons\n       --  which should be easier to optimize by the code generator.\n \n       if Optimization_Level > 0\n-        and then Ltyp = Rtyp\n         and then Is_Constrained (Ltyp)\n         and then Number_Dimensions (Ltyp) = 1\n         and then Compile_Time_Known_Bounds (Ltyp)\n@@ -1991,7 +1807,9 @@ package body Exp_Ch4 is\n                 Prefix      => New_Copy_Tree (New_Rhs),\n                 Expressions => New_List (New_Copy_Tree (Low_B)));\n \n-            TestL := Expand_Composite_Equality (Nod, Ctyp, L, R);\n+            TestL := Expand_Composite_Equality\n+              (Outer_Type => Ltyp, Nod => Nod, Comp_Type => Ctyp,\n+               Lhs => L, Rhs => R);\n \n             L :=\n               Make_Indexed_Component (Loc,\n@@ -2003,7 +1821,9 @@ package body Exp_Ch4 is\n                 Prefix      => New_Rhs,\n                 Expressions => New_List (New_Copy_Tree (High_B)));\n \n-            TestH := Expand_Composite_Equality (Nod, Ctyp, L, R);\n+            TestH := Expand_Composite_Equality\n+              (Outer_Type => Ltyp, Nod => Nod, Comp_Type => Ctyp,\n+               Lhs => L, Rhs => R);\n \n             return\n               Make_And_Then (Loc, Left_Opnd => TestL, Right_Opnd => TestH);\n@@ -2416,20 +2236,21 @@ package body Exp_Ch4 is\n    --  case because it is not possible to respect normal Ada visibility rules.\n \n    function Expand_Composite_Equality\n-     (Nod : Node_Id;\n-      Typ : Entity_Id;\n-      Lhs : Node_Id;\n-      Rhs : Node_Id) return Node_Id\n+     (Outer_Type : Entity_Id;\n+      Nod        : Node_Id;\n+      Comp_Type  : Entity_Id;\n+      Lhs        : Node_Id;\n+      Rhs        : Node_Id) return Node_Id\n    is\n       Loc       : constant Source_Ptr := Sloc (Nod);\n       Full_Type : Entity_Id;\n       Eq_Op     : Entity_Id;\n \n    begin\n-      if Is_Private_Type (Typ) then\n-         Full_Type := Underlying_Type (Typ);\n+      if Is_Private_Type (Comp_Type) then\n+         Full_Type := Underlying_Type (Comp_Type);\n       else\n-         Full_Type := Typ;\n+         Full_Type := Comp_Type;\n       end if;\n \n       --  If the private type has no completion the context may be the\n@@ -2454,7 +2275,7 @@ package body Exp_Ch4 is\n       --  Case of tagged record types\n \n       if Is_Tagged_Type (Full_Type) then\n-         Eq_Op := Find_Primitive_Eq (Typ);\n+         Eq_Op := Find_Primitive_Eq (Comp_Type);\n          pragma Assert (Present (Eq_Op));\n \n          return\n@@ -2616,18 +2437,20 @@ package body Exp_Ch4 is\n \n          --  Equality composes in Ada 2012 for untagged record types. It also\n          --  composes for bounded strings, because they are part of the\n-         --  predefined environment. We could make it compose for bounded\n-         --  strings by making them tagged, or by making sure all subcomponents\n-         --  are set to the same value, even when not used. Instead, we have\n-         --  this special case in the compiler, because it's more efficient.\n-\n-         elsif Ada_Version >= Ada_2012 or else Is_Bounded_String (Typ) then\n+         --  predefined environment (see 4.5.2(32.1/1)). We could make it\n+         --  compose for bounded strings by making them tagged, or by making\n+         --  sure all subcomponents are set to the same value, even when not\n+         --  used. Instead, we have this special case in the compiler, because\n+         --  it's more efficient.\n \n+         elsif Ada_Version >= Ada_2012 or else Is_Bounded_String (Comp_Type)\n+         then\n             --  If no TSS has been created for the type, check whether there is\n             --  a primitive equality declared for it.\n \n             declare\n-               Op : constant Node_Id := Build_Eq_Call (Typ, Loc, Lhs, Rhs);\n+               Op : constant Node_Id :=\n+                 Build_Eq_Call (Comp_Type, Loc, Lhs, Rhs);\n \n             begin\n                --  Use user-defined primitive if it exists, otherwise use\n@@ -2647,6 +2470,33 @@ package body Exp_Ch4 is\n       --  Case of non-record types (always use predefined equality)\n \n       else\n+         --  Print a warning if there is a user-defined \"=\", because it can be\n+         --  surprising that the predefined \"=\" takes precedence over it.\n+\n+         --  Suppress the warning if the \"user-defined\" one is in the\n+         --  predefined library, because those are defined to compose\n+         --  properly by RM-4.5.2(32.1/1). Intrinsics also compose.\n+\n+         declare\n+            Op : constant Entity_Id := Find_Primitive_Eq (Comp_Type);\n+         begin\n+            if Warn_On_Ignored_Equality\n+              and then Present (Op)\n+              and then not In_Predefined_Unit (Base_Type (Comp_Type))\n+              and then not Is_Intrinsic_Subprogram (Op)\n+            then\n+               pragma Assert\n+                 (Is_First_Subtype (Outer_Type)\n+                   or else Is_Generic_Actual_Type (Outer_Type));\n+               Error_Msg_Node_1 := Outer_Type;\n+               Error_Msg_Node_2 := Comp_Type;\n+               Error_Msg\n+                 (\"?_q?\"\"=\"\" for type & uses predefined \"\"=\"\" for }\", Loc);\n+               Error_Msg_Sloc := Sloc (Op);\n+               Error_Msg (\"\\?_q?\"\"=\"\" # is ignored here\", Loc);\n+            end if;\n+         end;\n+\n          return Make_Op_Eq (Loc, Left_Opnd => Lhs, Right_Opnd => Rhs);\n       end if;\n    end Expand_Composite_Equality;\n@@ -2878,6 +2728,7 @@ package body Exp_Ch4 is\n       Len        : Unat;\n       J          : Nat;\n       Clen       : Node_Id;\n+      Decl       : Node_Id;\n       Set        : Boolean;\n \n    --  Start of processing for Expand_Concatenate\n@@ -3404,10 +3255,32 @@ package body Exp_Ch4 is\n       Set_Is_Internal       (Ent);\n       Set_Debug_Info_Needed (Ent);\n \n+      --  If the bound is statically known to be out of range, we do not want\n+      --  to abort, we want a warning and a constraint error at run time. Note\n+      --  that we have arranged that the result will not be treated as a static\n+      --  constant, so we won't get an illegality during the insertion. We also\n+      --  enable all checks (in particular range checks) in case the bounds of\n+      --  Subtyp_Ind are out of range.\n+\n+      Decl :=\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Ent,\n+          Object_Definition   => Subtyp_Ind);\n+      Insert_Action (Cnode, Decl);\n+\n+      --  If the result of the concatenation appears as the initializing\n+      --  expression of an object declaration, we can just rename the\n+      --  result, rather than copying it.\n+\n+      Set_OK_To_Rename (Ent);\n+\n       --  If we are concatenating strings and the current scope already uses\n-      --  the secondary stack, allocate the resulting string also on the\n-      --  secondary stack to avoid putting too much pressure on the primary\n-      --  stack.\n+      --  the secondary stack, allocate the result also on the secondary stack\n+      --  to avoid putting too much pressure on the primary stack.\n+\n+      --  We use an unconstrained allocation, i.e. we also allocate the bounds,\n+      --  so that the result can be renamed in all contexts.\n+\n       --  Don't do this if -gnatd.h is set, as this will break the wrapping of\n       --  Cnode in an Expression_With_Actions, see Expand_N_Op_Concat.\n \n@@ -3417,84 +3290,77 @@ package body Exp_Ch4 is\n         and then not Debug_Flag_Dot_H\n       then\n          --  Generate:\n-         --     subtype Axx is ...;\n-         --     type Ayy is access Axx;\n-         --     Rxx : Ayy := new <subtype> [storage_pool = ss_pool];\n-         --     Sxx : <subtype> renames Rxx.all;\n+         --     subtype Axx is String (<low-bound> .. <high-bound>)\n+         --     type Ayy is access String;\n+         --     Rxx : Ayy := new <Axx> [storage_pool = ss_pool];\n+         --     Sxx : String renames Rxx.all;\n \n          declare\n-            Alloc   : Node_Id;\n             ConstrT : constant Entity_Id := Make_Temporary (Loc, 'A');\n             Acc_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n+\n+            Alloc   : Node_Id;\n+            Deref   : Node_Id;\n             Temp    : Entity_Id;\n \n          begin\n-            Insert_Action (Cnode,\n+            Insert_Action (Decl,\n               Make_Subtype_Declaration (Loc,\n                 Defining_Identifier => ConstrT,\n                 Subtype_Indication  => Subtyp_Ind),\n               Suppress => All_Checks);\n-            Freeze_Itype (ConstrT, Cnode);\n \n-            Insert_Action (Cnode,\n+            Freeze_Itype (ConstrT, Decl);\n+\n+            Insert_Action (Decl,\n               Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => Acc_Typ,\n                 Type_Definition     =>\n                   Make_Access_To_Object_Definition (Loc,\n-                    Subtype_Indication => New_Occurrence_Of (ConstrT, Loc))),\n+                    Subtype_Indication => New_Occurrence_Of (Atyp, Loc))),\n               Suppress => All_Checks);\n+\n+            Mutate_Ekind (Acc_Typ, E_Access_Type);\n+            Set_Associated_Storage_Pool (Acc_Typ, RTE (RE_SS_Pool));\n+\n             Alloc :=\n               Make_Allocator (Loc,\n                 Expression => New_Occurrence_Of (ConstrT, Loc));\n \n-            --  Allocate on the secondary stack. This is currently done\n-            --  only for type String, which normally doesn't have default\n-            --  initialization, but we need to Set_No_Initialization in case\n-            --  of Initialize_Scalars or Normalize_Scalars; otherwise, the\n-            --  allocator will get transformed and will not use the secondary\n-            --  stack.\n+            --  This is currently done only for type String, which normally\n+            --  doesn't have default initialization, but we need to set the\n+            --  No_Initialization flag in case of either Initialize_Scalars\n+            --  or Normalize_Scalars.\n \n-            Set_Storage_Pool (Alloc, RTE (RE_SS_Pool));\n-            Set_Procedure_To_Call (Alloc, RTE (RE_SS_Allocate));\n             Set_No_Initialization (Alloc);\n \n             Temp := Make_Temporary (Loc, 'R', Alloc);\n-            Insert_Action (Cnode,\n+            Insert_Action (Decl,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Temp,\n                 Object_Definition   => New_Occurrence_Of (Acc_Typ, Loc),\n                 Expression          => Alloc),\n               Suppress => All_Checks);\n \n-            Insert_Action (Cnode,\n+            Deref :=\n+              Make_Explicit_Dereference (Loc,\n+                Prefix => New_Occurrence_Of (Temp, Loc));\n+            Set_Etype (Deref, Atyp);\n+\n+            Rewrite (Decl,\n               Make_Object_Renaming_Declaration (Loc,\n                 Defining_Identifier => Ent,\n-                Subtype_Mark        => New_Occurrence_Of (ConstrT, Loc),\n-                Name                =>\n-                  Make_Explicit_Dereference (Loc,\n-                    Prefix => New_Occurrence_Of (Temp, Loc))),\n-              Suppress => All_Checks);\n-         end;\n-      else\n-         --  If the bound is statically known to be out of range, we do not\n-         --  want to abort, we want a warning and a runtime constraint error.\n-         --  Note that we have arranged that the result will not be treated as\n-         --  a static constant, so we won't get an illegality during this\n-         --  insertion.\n-         --  We also enable checks (in particular range checks) in case the\n-         --  bounds of Subtyp_Ind are out of range.\n-\n-         Insert_Action (Cnode,\n-           Make_Object_Declaration (Loc,\n-             Defining_Identifier => Ent,\n-             Object_Definition   => Subtyp_Ind));\n-      end if;\n+                Subtype_Mark        => New_Occurrence_Of (Atyp, Loc),\n+                Name                => Deref));\n \n-      --  If the result of the concatenation appears as the initializing\n-      --  expression of an object declaration, we can just rename the\n-      --  result, rather than copying it.\n+            --  We do not analyze this renaming declaration because this would\n+            --  change the subtype of Ent back to a constrained string.\n \n-      Set_OK_To_Rename (Ent);\n+            Set_Etype (Ent, Atyp);\n+            Set_Renamed_Object (Ent, Deref);\n+            Set_Analyzed (Decl);\n+         end;\n+      end if;\n \n       --  Catch the static out of range case now\n \n@@ -4135,39 +4001,42 @@ package body Exp_Ch4 is\n                Mod_Minus_Right : constant Uint :=\n                                    Modulus (Typ) - Intval (Right_Opnd (N));\n \n-               Exprs     : constant List_Id := New_List;\n-               Cond_Expr : constant Node_Id := New_Op_Node (N_Op_Lt, Loc);\n-               Then_Expr : constant Node_Id := New_Op_Node (N_Op_Add, Loc);\n-               Else_Expr : constant Node_Id := New_Op_Node (N_Op_Subtract,\n-                                                            Loc);\n+               Cond_Expr : Node_Id;\n+               Then_Expr : Node_Id;\n+               Else_Expr : Node_Id;\n             begin\n                --  To prevent spurious visibility issues, convert all\n                --  operands to Standard.Unsigned.\n \n-               Set_Left_Opnd (Cond_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Left_Opnd (N))));\n-               Set_Right_Opnd (Cond_Expr,\n-                 Make_Integer_Literal (Loc, Mod_Minus_Right));\n-               Append_To (Exprs, Cond_Expr);\n-\n-               Set_Left_Opnd (Then_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Left_Opnd (N))));\n-               Set_Right_Opnd (Then_Expr,\n-                 Make_Integer_Literal (Loc, Intval (Right_Opnd (N))));\n-               Append_To (Exprs, Then_Expr);\n-\n-               Set_Left_Opnd (Else_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Left_Opnd (N))));\n-               Set_Right_Opnd (Else_Expr,\n-                 Make_Integer_Literal (Loc, Mod_Minus_Right));\n-               Append_To (Exprs, Else_Expr);\n+               Cond_Expr :=\n+                 Make_Op_Lt (Loc,\n+                   Left_Opnd  =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Left_Opnd (N))),\n+                   Right_Opnd =>\n+                     Make_Integer_Literal (Loc, Mod_Minus_Right));\n+\n+               Then_Expr :=\n+                 Make_Op_Add (Loc,\n+                   Left_Opnd  =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Left_Opnd (N))),\n+                   Right_Opnd =>\n+                     Make_Integer_Literal (Loc, Intval (Right_Opnd (N))));\n+\n+               Else_Expr :=\n+                 Make_Op_Subtract (Loc,\n+                   Left_Opnd  =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Left_Opnd (N))),\n+                   Right_Opnd =>\n+                     Make_Integer_Literal (Loc, Mod_Minus_Right));\n \n                Rewrite (N,\n                  Unchecked_Convert_To (Typ,\n-                   Make_If_Expression (Loc, Expressions => Exprs)));\n+                   Make_If_Expression (Loc,\n+                     Expressions =>\n+                       New_List (Cond_Expr, Then_Expr, Else_Expr))));\n             end;\n          end if;\n       end Expand_Modular_Addition;\n@@ -4183,7 +4052,7 @@ package body Exp_Ch4 is\n          --   backend does not have to deal with nonbinary-modulus ops.\n \n          Op_Expr  : constant Node_Id := New_Op_Node (Nkind (N), Loc);\n-         Mod_Expr : constant Node_Id := New_Op_Node (N_Op_Mod, Loc);\n+         Mod_Expr : Node_Id;\n \n          Target_Type : Entity_Id;\n       begin\n@@ -4278,10 +4147,10 @@ package body Exp_Ch4 is\n             Force_Evaluation (Op_Expr, Mode => Strict);\n          end if;\n \n-         Set_Left_Opnd (Mod_Expr, Op_Expr);\n-\n-         Set_Right_Opnd (Mod_Expr,\n-           Make_Integer_Literal (Loc, Modulus (Typ)));\n+         Mod_Expr :=\n+           Make_Op_Mod (Loc,\n+             Left_Opnd  => Op_Expr,\n+             Right_Opnd => Make_Integer_Literal (Loc, Modulus (Typ)));\n \n          Rewrite (N,\n            Unchecked_Convert_To (Typ, Mod_Expr));\n@@ -4312,37 +4181,40 @@ package body Exp_Ch4 is\n                Mod_Minus_Right : constant Uint :=\n                                    Modulus (Typ) - Intval (Right_Opnd (N));\n \n-               Exprs     : constant List_Id := New_List;\n-               Cond_Expr : constant Node_Id := New_Op_Node (N_Op_Lt, Loc);\n-               Then_Expr : constant Node_Id := New_Op_Node (N_Op_Add, Loc);\n-               Else_Expr : constant Node_Id := New_Op_Node (N_Op_Subtract,\n-                                                            Loc);\n+               Cond_Expr : Node_Id;\n+               Then_Expr : Node_Id;\n+               Else_Expr : Node_Id;\n             begin\n-               Set_Left_Opnd (Cond_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Left_Opnd (N))));\n-               Set_Right_Opnd (Cond_Expr,\n-                 Make_Integer_Literal (Loc, Intval (Right_Opnd (N))));\n-               Append_To (Exprs, Cond_Expr);\n-\n-               Set_Left_Opnd (Then_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Left_Opnd (N))));\n-               Set_Right_Opnd (Then_Expr,\n-                 Make_Integer_Literal (Loc, Mod_Minus_Right));\n-               Append_To (Exprs, Then_Expr);\n-\n-               Set_Left_Opnd (Else_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Left_Opnd (N))));\n-               Set_Right_Opnd (Else_Expr,\n-                 Unchecked_Convert_To (Standard_Unsigned,\n-                   New_Copy_Tree (Right_Opnd (N))));\n-               Append_To (Exprs, Else_Expr);\n+               Cond_Expr :=\n+                 Make_Op_Lt (Loc,\n+                   Left_Opnd  =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Left_Opnd (N))),\n+                   Right_Opnd =>\n+                     Make_Integer_Literal (Loc, Intval (Right_Opnd (N))));\n+\n+               Then_Expr :=\n+                 Make_Op_Add (Loc,\n+                   Left_Opnd  =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Left_Opnd (N))),\n+                   Right_Opnd =>\n+                     Make_Integer_Literal (Loc, Mod_Minus_Right));\n+\n+               Else_Expr :=\n+                 Make_Op_Subtract (Loc,\n+                   Left_Opnd  =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Left_Opnd (N))),\n+                   Right_Opnd =>\n+                     Unchecked_Convert_To (Standard_Unsigned,\n+                       New_Copy_Tree (Right_Opnd (N))));\n \n                Rewrite (N,\n                  Unchecked_Convert_To (Typ,\n-                   Make_If_Expression (Loc, Expressions => Exprs)));\n+                   Make_If_Expression (Loc,\n+                     Expressions =>\n+                       New_List (Cond_Expr, Then_Expr, Else_Expr))));\n             end;\n          end if;\n       end Expand_Modular_Subtraction;\n@@ -6602,15 +6474,15 @@ package body Exp_Ch4 is\n       Rop    : constant Node_Id    := Right_Opnd (N);\n       Static : constant Boolean    := Is_OK_Static_Expression (N);\n \n-      procedure Substitute_Valid_Check;\n+      procedure Substitute_Valid_Test;\n       --  Replaces node N by Lop'Valid. This is done when we have an explicit\n       --  test for the left operand being in range of its subtype.\n \n-      ----------------------------\n-      -- Substitute_Valid_Check --\n-      ----------------------------\n+      ---------------------------\n+      -- Substitute_Valid_Test --\n+      ---------------------------\n \n-      procedure Substitute_Valid_Check is\n+      procedure Substitute_Valid_Test is\n          function Is_OK_Object_Reference (Nod : Node_Id) return Boolean;\n          --  Determine whether arbitrary node Nod denotes a source object that\n          --  may safely act as prefix of attribute 'Valid.\n@@ -6650,7 +6522,7 @@ package body Exp_Ch4 is\n             return False;\n          end Is_OK_Object_Reference;\n \n-      --  Start of processing for Substitute_Valid_Check\n+      --  Start of processing for Substitute_Valid_Test\n \n       begin\n          Rewrite (N,\n@@ -6674,7 +6546,7 @@ package body Exp_Ch4 is\n             Error_Msg_N -- CODEFIX\n               (\"\\??use ''Valid attribute instead\", N);\n          end if;\n-      end Substitute_Valid_Check;\n+      end Substitute_Valid_Test;\n \n       --  Local variables\n \n@@ -6727,15 +6599,15 @@ package body Exp_Ch4 is\n         --  eliminates the cases where MINIMIZED/ELIMINATED mode overflow\n         --  checks have changed the type of the left operand.\n \n-        and then Nkind (Rop) in N_Has_Entity\n+        and then Is_Entity_Name (Rop)\n         and then Ltyp = Entity (Rop)\n \n         --  Skip this for predicated types, where such expressions are a\n         --  reasonable way of testing if something meets the predicate.\n \n-        and then not Present (Predicate_Function (Ltyp))\n+        and then No (Predicate_Function (Ltyp))\n       then\n-         Substitute_Valid_Check;\n+         Substitute_Valid_Test;\n          return;\n       end if;\n \n@@ -6753,48 +6625,60 @@ package body Exp_Ch4 is\n             Lo : constant Node_Id := Low_Bound (Rop);\n             Hi : constant Node_Id := High_Bound (Rop);\n \n-            Lo_Orig : constant Node_Id := Original_Node (Lo);\n-            Hi_Orig : constant Node_Id := Original_Node (Hi);\n-\n-            Lcheck : Compare_Result;\n-            Ucheck : Compare_Result;\n+            Lo_Orig  : constant Node_Id := Original_Node (Lo);\n+            Hi_Orig  : constant Node_Id := Original_Node (Hi);\n+            Rop_Orig : constant Node_Id := Original_Node (Rop);\n+\n+            Comes_From_Simple_Range_In_Source : constant Boolean :=\n+              Comes_From_Source (N)\n+                and then not\n+                  (Is_Entity_Name (Rop_Orig)\n+                    and then Is_Type (Entity (Rop_Orig))\n+                    and then Present (Predicate_Function (Entity (Rop_Orig))));\n+            --  This is true for a membership test present in the source with a\n+            --  range or mark for a subtype that is not predicated. As already\n+            --  explained a few lines above, we do not want to give warnings on\n+            --  a test with a mark for a subtype that is predicated.\n \n             Warn : constant Boolean :=\n                       Constant_Condition_Warnings\n-                        and then Comes_From_Source (N)\n+                        and then Comes_From_Simple_Range_In_Source\n                         and then not In_Instance;\n             --  This must be true for any of the optimization warnings, we\n             --  clearly want to give them only for source with the flag on. We\n             --  also skip these warnings in an instance since it may be the\n             --  case that different instantiations have different ranges.\n \n+            Lcheck : Compare_Result;\n+            Ucheck : Compare_Result;\n+\n          begin\n-            --  If test is explicit x'First .. x'Last, replace by valid check\n+            --  If test is explicit x'First .. x'Last, replace by 'Valid test\n \n             if Is_Scalar_Type (Ltyp)\n \n+              --  Only relevant for source comparisons\n+\n+              and then Comes_From_Simple_Range_In_Source\n+\n               --  And left operand is X'First where X matches left operand\n               --  type (this eliminates cases of type mismatch, including\n               --  the cases where ELIMINATED/MINIMIZED mode has changed the\n               --  type of the left operand.\n \n               and then Nkind (Lo_Orig) = N_Attribute_Reference\n               and then Attribute_Name (Lo_Orig) = Name_First\n-              and then Nkind (Prefix (Lo_Orig)) in N_Has_Entity\n+              and then Is_Entity_Name (Prefix (Lo_Orig))\n               and then Entity (Prefix (Lo_Orig)) = Ltyp\n \n               --  Same tests for right operand\n \n               and then Nkind (Hi_Orig) = N_Attribute_Reference\n               and then Attribute_Name (Hi_Orig) = Name_Last\n-              and then Nkind (Prefix (Hi_Orig)) in N_Has_Entity\n+              and then Is_Entity_Name (Prefix (Hi_Orig))\n               and then Entity (Prefix (Hi_Orig)) = Ltyp\n-\n-              --  Relevant only for source cases\n-\n-              and then Comes_From_Source (N)\n             then\n-               Substitute_Valid_Check;\n+               Substitute_Valid_Test;\n                goto Leave;\n             end if;\n \n@@ -6803,7 +6687,7 @@ package body Exp_Ch4 is\n             --  for substituting a valid test. We only do this for discrete\n             --  types, since it won't arise in practice for float types.\n \n-            if Comes_From_Source (N)\n+            if Comes_From_Simple_Range_In_Source\n               and then Is_Discrete_Type (Ltyp)\n               and then Compile_Time_Known_Value (Type_High_Bound (Ltyp))\n               and then Compile_Time_Known_Value (Type_Low_Bound  (Ltyp))\n@@ -6816,7 +6700,7 @@ package body Exp_Ch4 is\n               --  have a test in the generic that makes sense with some types\n               --  and not with other types.\n \n-              --  Similarly, do not rewrite membership as a validity check if\n+              --  Similarly, do not rewrite membership as a 'Valid test if\n               --  within the predicate function for the type.\n \n               --  Finally, if the original bounds are type conversions, even\n@@ -6836,7 +6720,7 @@ package body Exp_Ch4 is\n                   null;\n \n                else\n-                  Substitute_Valid_Check;\n+                  Substitute_Valid_Test;\n                   goto Leave;\n                end if;\n             end if;\n@@ -6971,12 +6855,12 @@ package body Exp_Ch4 is\n                goto Leave;\n \n             --  If type is scalar type, rewrite as x in t'First .. t'Last.\n-            --  This reason we do this is that the bounds may have the wrong\n+            --  The reason we do this is that the bounds may have the wrong\n             --  type if they come from the original type definition. Also this\n             --  way we get all the processing above for an explicit range.\n \n-            --  Don't do this for predicated types, since in this case we\n-            --  want to check the predicate.\n+            --  Don't do this for predicated types, since in this case we want\n+            --  to generate the predicate check at the end of the function.\n \n             elsif Is_Scalar_Type (Typ) then\n                if No (Predicate_Function (Typ)) then\n@@ -6991,6 +6875,7 @@ package body Exp_Ch4 is\n                         Make_Attribute_Reference (Loc,\n                           Attribute_Name => Name_Last,\n                           Prefix         => New_Occurrence_Of (Typ, Loc))));\n+\n                   Analyze_And_Resolve (N, Restyp);\n                end if;\n \n@@ -7148,7 +7033,7 @@ package body Exp_Ch4 is\n                   if Is_Entity_Name (Lop) then\n                      Expr_Entity := Param_Entity (Lop);\n \n-                     if not Present (Expr_Entity) then\n+                     if No (Expr_Entity) then\n                         Expr_Entity := Entity (Lop);\n                      end if;\n                   end if;\n@@ -7298,6 +7183,24 @@ package body Exp_Ch4 is\n            and then Current_Scope /= PFunc\n            and then Nkind (Rop) /= N_Range\n          then\n+            --  First apply the transformation that was skipped above\n+\n+            if Is_Scalar_Type (Rtyp) then\n+               Rewrite (Rop,\n+                 Make_Range (Loc,\n+                   Low_Bound =>\n+                     Make_Attribute_Reference (Loc,\n+                       Attribute_Name => Name_First,\n+                       Prefix         => New_Occurrence_Of (Rtyp, Loc)),\n+\n+                   High_Bound =>\n+                     Make_Attribute_Reference (Loc,\n+                       Attribute_Name => Name_Last,\n+                       Prefix         => New_Occurrence_Of (Rtyp, Loc))));\n+\n+               Analyze_And_Resolve (N, Restyp);\n+            end if;\n+\n             if not In_Range_Check then\n                --  Indicate via Static_Mem parameter that this predicate\n                --  evaluation is for a membership test.\n@@ -7317,10 +7220,6 @@ package body Exp_Ch4 is\n \n             Set_Analyzed (Left_Opnd (N));\n             Analyze_And_Resolve (N, Standard_Boolean, Suppress => All_Checks);\n-\n-            --  All done, skip attempt at compile time determination of result\n-\n-            return;\n          end if;\n       end Predicate_Check;\n    end Expand_N_In;\n@@ -9819,7 +9718,7 @@ package body Exp_Ch4 is\n          --  avoids anomalies when the replacement is done in an instance and\n          --  is epsilon more efficient.\n \n-         Set_Entity            (N, Standard_Entity (S_Op_Rem));\n+         pragma Assert (Entity (N) = Standard_Op_Rem);\n          Set_Etype             (N, Typ);\n          Set_Do_Division_Check (N, DDC);\n          Expand_N_Op_Rem (N);\n@@ -13322,15 +13221,16 @@ package body Exp_Ch4 is\n             end if;\n \n             Check :=\n-              Expand_Composite_Equality (Nod, Etype (C),\n-               Lhs =>\n-                 Make_Selected_Component (Loc,\n-                   Prefix        => New_Lhs,\n-                   Selector_Name => New_Occurrence_Of (C, Loc)),\n-               Rhs =>\n-                 Make_Selected_Component (Loc,\n-                   Prefix        => New_Rhs,\n-                   Selector_Name => New_Occurrence_Of (C, Loc)));\n+              Expand_Composite_Equality\n+                (Outer_Type => Typ, Nod => Nod, Comp_Type => Etype (C),\n+                 Lhs =>\n+                   Make_Selected_Component (Loc,\n+                     Prefix        => New_Lhs,\n+                     Selector_Name => New_Occurrence_Of (C, Loc)),\n+                 Rhs =>\n+                   Make_Selected_Component (Loc,\n+                     Prefix        => New_Rhs,\n+                     Selector_Name => New_Occurrence_Of (C, Loc)));\n \n             --  If some (sub)component is an unchecked_union, the whole\n             --  operation will raise program error."}, {"sha": "7efd1058afa7fc530b9c3ded55a6b9482c16a0db", "filename": "gcc/ada/exp_ch4.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -97,7 +97,7 @@ package Exp_Ch4 is\n    --  individually to yield the required Boolean result. Loc is the\n    --  location for the generated nodes. Typ is the type of the record, and\n    --  Lhs, Rhs are the record expressions to be compared, these\n-   --  expressions need not to be analyzed but have to be side-effect free.\n+   --  expressions need not be analyzed but have to be side-effect free.\n    --  Nod provides the Sloc value for generated code.\n \n    procedure Expand_Set_Membership (N : Node_Id);"}, {"sha": "d67f788ab7830d216c57b114f8df7b0208faa2e8", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n@@ -65,6 +66,7 @@ with Tbuild;         use Tbuild;\n with Ttypes;         use Ttypes;\n with Uintp;          use Uintp;\n with Validsw;        use Validsw;\n+with Warnsw;         use Warnsw;\n \n package body Exp_Ch5 is\n \n@@ -3939,7 +3941,9 @@ package body Exp_Ch5 is\n    --  Start of processing for Expand_N_Case_Statement\n \n    begin\n-      if Extensions_Allowed and then not Is_Discrete_Type (Etype (Expr)) then\n+      if Core_Extensions_Allowed\n+        and then not Is_Discrete_Type (Etype (Expr))\n+      then\n          Rewrite (N, Expand_General_Case_Statement);\n          Analyze (N);\n          return;"}, {"sha": "c026b63fcf64fd57ad4e2882a27d9c8ca9aabbf4", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 413, "deletions": 113, "changes": 526, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Atree;          use Atree;\n with Aspects;        use Aspects;\n with Checks;         use Checks;\n@@ -191,16 +192,6 @@ package body Exp_Ch6 is\n    --  the activation Chain. Note: Master_Actual can be Empty, but only if\n    --  there are no tasks.\n \n-   procedure Apply_CW_Accessibility_Check (Exp : Node_Id; Func : Entity_Id);\n-   --  Ada 2005 (AI95-344): If the result type is class-wide, insert a check\n-   --  that the level of the return expression's underlying type is not deeper\n-   --  than the level of the master enclosing the function. Always generate the\n-   --  check when the type of the return expression is class-wide, when it's a\n-   --  type conversion, or when it's a formal parameter. Otherwise suppress the\n-   --  check in the case where the return expression has a specific type whose\n-   --  level is known not to be statically deeper than the result type of the\n-   --  function.\n-\n    function Caller_Known_Size\n      (Func_Call   : Node_Id;\n       Result_Subt : Entity_Id) return Boolean;\n@@ -214,7 +205,8 @@ package body Exp_Ch6 is\n      (Subp_Call : Node_Id;\n       Subp_Id   : Entity_Id) return Boolean;\n    --  Given a subprogram call to the given subprogram return True if the\n-   --  names of BIP extra actual and formal parameters match.\n+   --  names of BIP extra actual and formal parameters match, and the number\n+   --  of actuals (including extra actuals) matches the number of formals.\n \n    function Check_Number_Of_Actuals\n      (Subp_Call : Node_Id;\n@@ -314,15 +306,6 @@ package body Exp_Ch6 is\n    --  Expand simple return from function. In the case where we are returning\n    --  from a function body this is called by Expand_N_Simple_Return_Statement.\n \n-   function Has_BIP_Extra_Formal\n-     (E    : Entity_Id;\n-      Kind : BIP_Formal_Kind) return Boolean;\n-   --  Given a frozen subprogram, subprogram type, entry or entry family,\n-   --  return True if E has the BIP extra formal associated with Kind. It must\n-   --  be invoked with a frozen entity or a subprogram type of a dispatching\n-   --  call since we can only rely on the availability of the extra formals\n-   --  on these entities.\n-\n    procedure Insert_Post_Call_Actions (N : Node_Id; Post_Call : List_Id);\n    --  Insert the Post_Call list previously produced by routine Expand_Actuals\n    --  or Expand_Call_Helper into the tree.\n@@ -376,7 +359,7 @@ package body Exp_Ch6 is\n \n       --  If no return object is provided, then pass null\n \n-      if not Present (Return_Object) then\n+      if No (Return_Object) then\n          Obj_Address := Make_Null (Loc);\n          Set_Parent (Obj_Address, Function_Call);\n \n@@ -670,7 +653,10 @@ package body Exp_Ch6 is\n \n       --  Create the actual which is a pointer to the current activation chain\n \n-      if No (Chain) then\n+      if Restriction_Active (No_Task_Hierarchy) then\n+         Chain_Actual := Make_Null (Loc);\n+\n+      elsif No (Chain) then\n          Chain_Actual :=\n            Make_Attribute_Reference (Loc,\n              Prefix         => Make_Identifier (Loc, Name_uChain),\n@@ -1120,6 +1106,23 @@ package body Exp_Ch6 is\n                                         | N_Function_Call\n                                         | N_Procedure_Call_Statement);\n \n+      --  In CodePeer_Mode, the tree for `'Elab_Spec` procedures will be\n+      --  malformed because GNAT does not perform the usual expansion that\n+      --  results in the importation of external elaboration procedure symbols.\n+      --  This is expected: the CodePeer backend has special handling for this\n+      --  malformed tree.\n+      --  Thus, we do not need to check the tree (and in fact can't, because\n+      --  it's malformed).\n+\n+      if CodePeer_Mode\n+        and then Nkind (Name (Subp_Call)) = N_Attribute_Reference\n+        and then Attribute_Name (Name (Subp_Call)) in Name_Elab_Spec\n+                                                    | Name_Elab_Body\n+                                                    | Name_Elab_Subp_Body\n+      then\n+         return True;\n+      end if;\n+\n       Formal := First_Formal_With_Extras (Subp_Id);\n       Actual := First_Actual (Subp_Call);\n \n@@ -1627,6 +1630,27 @@ package body Exp_Ch6 is\n             Crep  := False;\n          end if;\n \n+         --  If the actual denotes a variable which captures the value of an\n+         --  object for validation purposes, we propagate the link with this\n+         --  object to the new variable made from the actual just above.\n+\n+         if Ekind (Formal) /= E_In_Parameter\n+           and then Is_Validation_Variable_Reference (Actual)\n+         then\n+            declare\n+               Ref : constant Node_Id := Unqual_Conv (Actual);\n+\n+            begin\n+               if Is_Entity_Name (Ref) then\n+                  Set_Validated_Object (Var, Validated_Object (Entity (Ref)));\n+\n+               else\n+                  pragma Assert (False);\n+                  null;\n+               end if;\n+            end;\n+         end if;\n+\n          --  Setup initialization for case of in out parameter, or an out\n          --  parameter where the formal is an unconstrained array (in the\n          --  latter case, we have to pass in an object with bounds).\n@@ -1806,7 +1830,7 @@ package body Exp_Ch6 is\n                Expr := New_Occurrence_Of (Temp, Loc);\n             end if;\n \n-            Rewrite (Actual, New_Occurrence_Of (Temp, Loc));\n+            Rewrite (Actual, New_Occurrence_Of (Temp, Sloc (Actual)));\n             Analyze (Actual);\n \n             --  If the actual is a conversion of a packed reference, it may\n@@ -1894,6 +1918,13 @@ package body Exp_Ch6 is\n                       Name       => Lhs,\n                       Expression => Expr));\n                end if;\n+\n+               --  Add a copy-back to reflect any potential changes in value\n+               --  back into the original object, if any.\n+\n+               if Is_Validation_Variable_Reference (Lhs) then\n+                  Add_Validation_Call_By_Copy_Code (Lhs);\n+               end if;\n             end;\n          end if;\n       end Add_Call_By_Copy_Code;\n@@ -2040,10 +2071,11 @@ package body Exp_Ch6 is\n       --------------------------------------\n \n       procedure Add_Validation_Call_By_Copy_Code (Act : Node_Id) is\n+         Var : constant Node_Id := Unqual_Conv (Act);\n+\n          Expr    : Node_Id;\n          Obj     : Node_Id;\n          Obj_Typ : Entity_Id;\n-         Var     : constant Node_Id := Unqual_Conv (Act);\n          Var_Id  : Entity_Id;\n \n       begin\n@@ -2393,26 +2425,10 @@ package body Exp_Ch6 is\n                end if;\n             end if;\n \n-            --  The actual denotes a variable which captures the value of an\n-            --  object for validation purposes. Add a copy-back to reflect any\n-            --  potential changes in value back into the original object.\n-\n-            --    Var : ... := Object;\n-            --    if not Var'Valid then  --  validity check\n-            --    Call (Var);            --  modify var\n-            --    Object := Var;         --  update Object\n-\n-            --  This case is given higher priority because the subsequent check\n-            --  for type conversion may add an extra copy of the variable and\n-            --  prevent proper value propagation back in the original object.\n-\n-            if Is_Validation_Variable_Reference (Actual) then\n-               Add_Validation_Call_By_Copy_Code (Actual);\n-\n             --  If argument is a type conversion for a type that is passed by\n             --  copy, then we must pass the parameter by copy.\n \n-            elsif Nkind (Actual) = N_Type_Conversion\n+            if Nkind (Actual) = N_Type_Conversion\n               and then\n                 (Is_Elementary_Type (E_Formal)\n                   or else Is_Bit_Packed_Array (Etype (Formal))\n@@ -2496,6 +2512,18 @@ package body Exp_Ch6 is\n                       and then not In_Subrange_Of (E_Actual, E_Formal)))\n             then\n                Add_Call_By_Copy_Code;\n+\n+            --  The actual denotes a variable which captures the value of an\n+            --  object for validation purposes. Add a copy-back to reflect any\n+            --  potential changes in value back into the original object.\n+\n+            --    Var : ... := Object;\n+            --    if not Var'Valid then  --  validity check\n+            --    Call (Var);            --  modify var\n+            --    Object := Var;         --  update Object\n+\n+            elsif Is_Validation_Variable_Reference (Actual) then\n+               Add_Validation_Call_By_Copy_Code (Actual);\n             end if;\n \n             --  RM 3.2.4 (23/3): A predicate is checked on in-out and out\n@@ -3223,7 +3251,7 @@ package body Exp_Ch6 is\n             loop\n                Aspect_Bearer := Nearest_Ancestor (Aspect_Bearer);\n \n-               if not Present (Aspect_Bearer) then\n+               if No (Aspect_Bearer) then\n                   return False;\n                end if;\n \n@@ -3313,8 +3341,8 @@ package body Exp_Ch6 is\n            or else No (Aspect)\n \n            --  Do not fold if multiple applicable predicate aspects\n-           or else Present (Find_Aspect (Subt, Aspect_Static_Predicate))\n-           or else Present (Find_Aspect (Subt, Aspect_Predicate))\n+           or else Has_Aspect (Subt, Aspect_Static_Predicate)\n+           or else Has_Aspect (Subt, Aspect_Predicate)\n            or else Augments_Other_Dynamic_Predicate (Aspect)\n            or else CodePeer_Mode\n          then\n@@ -3342,9 +3370,53 @@ package body Exp_Ch6 is\n       ------------------------------\n \n       procedure Check_Subprogram_Variant is\n+\n+         function Duplicate_Params_Without_Extra_Actuals\n+           (Call_Node : Node_Id) return List_Id;\n+         --  Duplicate actual parameters of Call_Node into New_Call without\n+         --  extra actuals.\n+\n+         --------------------------------------------\n+         -- Duplicate_Params_Without_Extra_Actuals --\n+         --------------------------------------------\n+\n+         function Duplicate_Params_Without_Extra_Actuals\n+           (Call_Node : Node_Id) return List_Id\n+         is\n+            Proc_Id : constant Entity_Id := Entity (Name (Call_Node));\n+            Actuals : constant List_Id := Parameter_Associations (Call_Node);\n+            NL      : List_Id;\n+            Actual  : Node_Or_Entity_Id;\n+            Formal  : Entity_Id;\n+\n+         begin\n+            if Actuals = No_List then\n+               return No_List;\n+\n+            else\n+               NL     := New_List;\n+               Actual := First (Actuals);\n+               Formal := First_Formal (Proc_Id);\n+\n+               while Present (Formal)\n+                 and then Formal /= Extra_Formals (Proc_Id)\n+               loop\n+                  Append (New_Copy (Actual), NL);\n+                  Next (Actual);\n+\n+                  Next_Formal (Formal);\n+               end loop;\n+\n+               return NL;\n+            end if;\n+         end Duplicate_Params_Without_Extra_Actuals;\n+\n+         --  Local variables\n+\n          Variant_Prag : constant Node_Id :=\n            Get_Pragma (Current_Scope, Pragma_Subprogram_Variant);\n \n+         New_Call     : Node_Id;\n          Pragma_Arg1  : Node_Id;\n          Variant_Proc : Entity_Id;\n \n@@ -3373,12 +3445,17 @@ package body Exp_Ch6 is\n \n             Variant_Proc := Entity (Pragma_Arg1);\n \n-            Insert_Action (Call_Node,\n+            New_Call :=\n               Make_Procedure_Call_Statement (Loc,\n                  Name                   =>\n                    New_Occurrence_Of (Variant_Proc, Loc),\n                  Parameter_Associations =>\n-                   New_Copy_List (Parameter_Associations (Call_Node))));\n+                   Duplicate_Params_Without_Extra_Actuals (Call_Node));\n+\n+            Insert_Action (Call_Node, New_Call);\n+\n+            pragma Assert (Etype (New_Call) /= Any_Type\n+              or else Serious_Errors_Detected > 0);\n          end if;\n       end Check_Subprogram_Variant;\n \n@@ -3679,6 +3756,12 @@ package body Exp_Ch6 is\n          end if;\n       end if;\n \n+      --  Ensure that the called subprogram has all its formals\n+\n+      if not Is_Frozen (Subp) then\n+         Create_Extra_Formals (Subp);\n+      end if;\n+\n       --  Ada 2005 (AI-345): We have a procedure call as a triggering\n       --  alternative in an asynchronous select or as an entry call in\n       --  a conditional or timed select. Check whether the procedure call\n@@ -3817,7 +3900,7 @@ package body Exp_Ch6 is\n         and then Thunk_Entity (Current_Scope) = Subp\n         and then Present (Extra_Formals (Subp))\n       then\n-         pragma Assert (Present (Extra_Formals (Current_Scope)));\n+         pragma Assert (Extra_Formals_Match_OK (Current_Scope, Subp));\n \n          declare\n             Target_Formal : Entity_Id;\n@@ -3839,6 +3922,13 @@ package body Exp_Ch6 is\n                Add_Actual_Parameter (Remove_Head (Extra_Actuals));\n             end loop;\n \n+            --  Mark the call as processed build-in-place call; required\n+            --  to avoid adding the extra formals twice.\n+\n+            if Nkind (Call_Node) = N_Function_Call then\n+               Set_Is_Expanded_Build_In_Place_Call (Call_Node);\n+            end if;\n+\n             Expand_Actuals (Call_Node, Subp, Post_Call);\n             pragma Assert (Is_Empty_List (Post_Call));\n             pragma Assert (Check_Number_Of_Actuals (Call_Node, Subp));\n@@ -5040,10 +5130,15 @@ package body Exp_Ch6 is\n       end if;\n \n       --  Another optimization: if the returned value is used to initialize an\n-      --  object, and the secondary stack is not involved in the call, then no\n-      --  need to copy/readjust/finalize, we can just initialize it in place.\n-\n-      if Nkind (Par) = N_Object_Declaration and then not Use_Sec_Stack then\n+      --  object, then no need to copy/readjust/finalize, we can initialize it\n+      --  in place. However, if the call returns on the secondary stack or this\n+      --  is a special return object, then we need the expansion because we'll\n+      --  be renaming the temporary as the (permanent) object.\n+\n+      if Nkind (Par) = N_Object_Declaration\n+        and then not Use_Sec_Stack\n+        and then not Is_Special_Return_Object (Defining_Entity (Par))\n+      then\n          return;\n       end if;\n \n@@ -5200,24 +5295,14 @@ package body Exp_Ch6 is\n          --  Assert that if F says \"return R : T := G(...) do...\"\n          --  then F and G are both b-i-p, or neither b-i-p.\n \n-         if Nkind (Exp) = N_Function_Call then\n+         if Present (Exp) and then Nkind (Exp) = N_Function_Call then\n             pragma Assert (Ekind (Current_Subprogram) = E_Function);\n             pragma Assert\n               (Is_Build_In_Place_Function (Current_Subprogram) =\n                Is_Build_In_Place_Function_Call (Exp));\n             null;\n          end if;\n \n-         --  Ada 2005 (AI95-344): If the result type is class-wide, then insert\n-         --  a check that the level of the return expression's underlying type\n-         --  is not deeper than the level of the master enclosing the function.\n-\n-         --  AI12-043: The check is made immediately after the return object\n-         --  is created.\n-\n-         if Present (Exp) and then Is_Class_Wide_Type (Ret_Typ) then\n-            Apply_CW_Accessibility_Check (Exp, Func_Id);\n-         end if;\n       else\n          Exp := Empty;\n       end if;\n@@ -6240,7 +6325,7 @@ package body Exp_Ch6 is\n       --  The object may be a component of some other data structure, in which\n       --  case this must be handled as an inter-object call.\n \n-      if not In_Open_Scopes (Scop)\n+      if not Scope_Within_Or_Same (Inner => Current_Scope, Outer => Scop)\n         or else Is_Entry_Wrapper (Current_Scope)\n         or else not Is_Entity_Name (Name (N))\n       then\n@@ -6401,8 +6486,13 @@ package body Exp_Ch6 is\n \n       if Nkind (Exp) = N_Function_Call then\n          pragma Assert (Ekind (Scope_Id) = E_Function);\n+\n+         --  This assertion works fine because Is_Build_In_Place_Function_Call\n+         --  returns True for BIP function calls but also for function calls\n+         --  that have BIP formals.\n+\n          pragma Assert\n-           (Is_Build_In_Place_Function (Scope_Id) =\n+           (Has_BIP_Formals (Scope_Id) =\n             Is_Build_In_Place_Function_Call (Exp));\n          null;\n       end if;\n@@ -6424,23 +6514,10 @@ package body Exp_Ch6 is\n       --  need to reify the return object, so we can build it \"in place\", and\n       --  we need a block statement to hang finalization and tasking stuff.\n \n-      --  ??? In order to avoid disruption, we avoid translating to extended\n-      --  return except in the cases where we really need to (Ada 2005 for\n-      --  inherently limited). We might prefer to do this translation in all\n-      --  cases (except perhaps for the case of Ada 95 inherently limited),\n-      --  in order to fully exercise the Expand_N_Extended_Return_Statement\n-      --  code. This would also allow us to do the build-in-place optimization\n-      --  for efficiency even in cases where it is semantically not required.\n-\n-      --  As before, we check the type of the return expression rather than the\n-      --  return type of the function, because the latter may be a limited\n-      --  class-wide interface type, which is not a limited type, even though\n-      --  the type of the expression may be.\n-\n       pragma Assert\n         (Comes_From_Extended_Return_Statement (N)\n           or else not Is_Build_In_Place_Function_Call (Exp)\n-          or else Is_Build_In_Place_Function (Scope_Id));\n+          or else Has_BIP_Formals (Scope_Id));\n \n       if not Comes_From_Extended_Return_Statement (N)\n         and then Is_Build_In_Place_Function (Scope_Id)\n@@ -6577,22 +6654,25 @@ package body Exp_Ch6 is\n \n          --    type Ann is access R_Type;\n          --    for Ann'Storage_pool use rs_pool;\n-         --    Rnn : Ann := new Exp_Typ'(Exp);\n+         --    Rnn : constant Ann := new Exp_Typ'(Exp);\n          --    return Rnn.all;\n \n          --  but optimize the case where the result is a function call that\n          --  also needs finalization. In this case the result can directly be\n          --  allocated on the return stack of the caller and no further\n-         --  processing is required.\n+         --  processing is required. Likewise if this is a return object.\n \n-         if Present (Utyp)\n+         if Comes_From_Extended_Return_Statement (N) then\n+            null;\n+\n+         elsif Present (Utyp)\n            and then Needs_Finalization (Utyp)\n            and then not (Exp_Is_Function_Call\n                           and then Needs_Finalization (Exp_Typ))\n          then\n             declare\n-               Loc        : constant Source_Ptr := Sloc (N);\n-               Acc_Typ    : constant Entity_Id := Make_Temporary (Loc, 'A');\n+               Acc_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n+\n                Alloc_Node : Node_Id;\n                Temp       : Entity_Id;\n \n@@ -6628,6 +6708,7 @@ package body Exp_Ch6 is\n \n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Temp,\n+                   Constant_Present    => True,\n                    Object_Definition   => New_Occurrence_Of (Acc_Typ, Loc),\n                    Expression          => Alloc_Node)));\n \n@@ -6648,11 +6729,16 @@ package body Exp_Ch6 is\n \n          Set_Enclosing_Sec_Stack_Return (N);\n \n+         --  Nothing else to do for a return object\n+\n+         if Comes_From_Extended_Return_Statement (N) then\n+            null;\n+\n          --  Optimize the case where the result is a function call that also\n          --  returns on the secondary stack. In this case the result is already\n          --  on the secondary stack and no further processing is required.\n \n-         if Exp_Is_Function_Call\n+         elsif Exp_Is_Function_Call\n            and then Needs_Secondary_Stack (Exp_Typ)\n          then\n             --  Remove side effects from the expression now so that other parts\n@@ -6677,7 +6763,7 @@ package body Exp_Ch6 is\n \n          --    type Ann is access R_Type;\n          --    for Ann'Storage_pool use ss_pool;\n-         --    Rnn : Ann := new Exp_Typ'(Exp);\n+         --    Rnn : constant Ann := new Exp_Typ'(Exp);\n          --    return Rnn.all;\n \n          --  And we do the same for class-wide types that are not potentially\n@@ -6694,14 +6780,13 @@ package body Exp_Ch6 is\n                           and then Needs_Finalization (Exp_Typ))\n          then\n             declare\n-               Loc        : constant Source_Ptr := Sloc (N);\n-               Acc_Typ    : constant Entity_Id := Make_Temporary (Loc, 'A');\n+               Acc_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n+\n                Alloc_Node : Node_Id;\n                Temp       : Entity_Id;\n \n             begin\n                Mutate_Ekind (Acc_Typ, E_Access_Type);\n-\n                Set_Associated_Storage_Pool (Acc_Typ, RTE (RE_SS_Pool));\n \n                --  This is an allocator for the secondary stack, and it's fine\n@@ -6731,6 +6816,7 @@ package body Exp_Ch6 is\n \n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Temp,\n+                   Constant_Present    => True,\n                    Object_Definition   => New_Occurrence_Of (Acc_Typ, Loc),\n                    Expression          => Alloc_Node)));\n \n@@ -7044,8 +7130,9 @@ package body Exp_Ch6 is\n    --------------------------\n \n    function Has_BIP_Extra_Formal\n-     (E    : Entity_Id;\n-      Kind : BIP_Formal_Kind) return Boolean\n+     (E              : Entity_Id;\n+      Kind           : BIP_Formal_Kind;\n+      Must_Be_Frozen : Boolean := True) return Boolean\n    is\n       Extra_Formal : Entity_Id := Extra_Formals (E);\n \n@@ -7055,7 +7142,7 @@ package body Exp_Ch6 is\n       --  extra formals are added when the target subprogram is frozen; see\n       --  Expand_Dispatching_Call).\n \n-      pragma Assert (Is_Frozen (E)\n+      pragma Assert ((Is_Frozen (E) or else not Must_Be_Frozen)\n         or else (Ekind (E) = E_Subprogram_Type\n                    and then Is_Dispatch_Table_Entity (E))\n         or else (Is_Dispatching_Operation (E)\n@@ -7465,9 +7552,10 @@ package body Exp_Ch6 is\n \n             Remove_Side_Effects (A);\n \n-            if Is_Controlling_Actual (A)\n-              and then Etype (F) /= Etype (A)\n-            then\n+            --  Ensure matching types to avoid reporting spurious errors since\n+            --  the called helper may have been built for a parent type.\n+\n+            if Etype (F) /= Etype (A) then\n                Append_To (Actuals,\n                  Unchecked_Convert_To (Etype (F), New_Copy_Tree (A)));\n             else\n@@ -7684,7 +7772,7 @@ package body Exp_Ch6 is\n                or else\n              (Kind = E_Subprogram_Type and then Typ /= Standard_Void_Type))\n         and then Is_Build_In_Place_Result_Type (Typ)\n-        and then not (Is_Imported (E) and then Has_Foreign_Convention (E));\n+        and then not Has_Foreign_Convention (E);\n    end Is_Build_In_Place_Function;\n \n    -------------------------------------\n@@ -7739,12 +7827,29 @@ package body Exp_Ch6 is\n          raise Program_Error;\n       end if;\n \n-      declare\n-         Result : constant Boolean := Is_Build_In_Place_Function (Function_Id);\n-         --  So we can stop here in the debugger\n-      begin\n-         return Result;\n-      end;\n+      if Is_Build_In_Place_Function (Function_Id) then\n+         return True;\n+\n+      --  True also if the function has BIP Formals\n+\n+      else\n+         declare\n+            Kind : constant Entity_Kind := Ekind (Function_Id);\n+\n+         begin\n+            if (Kind in E_Function | E_Generic_Function\n+                  or else (Kind = E_Subprogram_Type\n+                             and then\n+                           Etype (Function_Id) /= Standard_Void_Type))\n+              and then Has_BIP_Formals (Function_Id)\n+            then\n+               --  So we can stop here in the debugger\n+               return True;\n+            else\n+               return False;\n+            end if;\n+         end;\n+      end if;\n    end Is_Build_In_Place_Function_Call;\n \n    -----------------------------------\n@@ -7777,6 +7882,16 @@ package body Exp_Ch6 is\n         and then Is_Build_In_Place_Function (Return_Applies_To (Scope (E)));\n    end Is_Build_In_Place_Return_Object;\n \n+   -----------------------------------\n+   -- Is_By_Reference_Return_Object --\n+   -----------------------------------\n+\n+   function Is_By_Reference_Return_Object (E : Entity_Id) return Boolean is\n+   begin\n+      return Is_Return_Object (E)\n+        and then Is_By_Reference_Type (Etype (Return_Applies_To (Scope (E))));\n+   end Is_By_Reference_Return_Object;\n+\n    -----------------------\n    -- Is_Null_Procedure --\n    -----------------------\n@@ -7836,6 +7951,28 @@ package body Exp_Ch6 is\n       end if;\n    end Is_Null_Procedure;\n \n+   --------------------------------------\n+   -- Is_Secondary_Stack_Return_Object --\n+   --------------------------------------\n+\n+   function Is_Secondary_Stack_Return_Object (E : Entity_Id) return Boolean is\n+   begin\n+      return Is_Return_Object (E)\n+        and then Needs_Secondary_Stack (Etype (Return_Applies_To (Scope (E))));\n+   end Is_Secondary_Stack_Return_Object;\n+\n+   ------------------------------\n+   -- Is_Special_Return_Object --\n+   ------------------------------\n+\n+   function Is_Special_Return_Object (E : Entity_Id) return Boolean is\n+   begin\n+      return Is_Build_In_Place_Return_Object (E)\n+         or else Is_Secondary_Stack_Return_Object (E)\n+         or else (Back_End_Return_Slot\n+                   and then Is_By_Reference_Return_Object (E));\n+   end Is_Special_Return_Object;\n+\n    -------------------------------------------\n    -- Make_Build_In_Place_Call_In_Allocator --\n    -------------------------------------------\n@@ -8413,6 +8550,11 @@ package body Exp_Ch6 is\n       --  initialization expression of the object to Empty, which would be\n       --  illegal Ada, and would cause gigi to misallocate X.\n \n+      Is_OK_Return_Object : constant Boolean :=\n+        Is_Return_Object (Obj_Def_Id)\n+          and then\n+        not Has_Foreign_Convention (Return_Applies_To (Scope (Obj_Def_Id)));\n+\n    --  Start of processing for Make_Build_In_Place_Call_In_Object_Declaration\n \n    begin\n@@ -8465,7 +8607,7 @@ package body Exp_Ch6 is\n       --  the result object is in a different (transient) scope, so won't cause\n       --  freezing.\n \n-      if Definite and then not Is_Return_Object (Obj_Def_Id) then\n+      if Definite and then not Is_OK_Return_Object then\n \n          --  The presence of an address clause complicates the build-in-place\n          --  expansion because the indicated address must be processed before\n@@ -8548,7 +8690,7 @@ package body Exp_Ch6 is\n       --  really be directly built in place in the aggregate and not in a\n       --  temporary. ???)\n \n-      if Is_Return_Object (Obj_Def_Id) then\n+      if Is_OK_Return_Object then\n          Pass_Caller_Acc := True;\n \n          --  When the enclosing function has a BIP_Alloc_Form formal then we\n@@ -8733,7 +8875,7 @@ package body Exp_Ch6 is\n       --  itself the return expression of an enclosing BIP function, then mark\n       --  the object as having no initialization.\n \n-      if Definite and then not Is_Return_Object (Obj_Def_Id) then\n+      if Definite and then not Is_OK_Return_Object then\n \n          --  The related object declaration is encased in a transient block\n          --  because the build-in-place function call contains at least one\n@@ -9090,7 +9232,7 @@ package body Exp_Ch6 is\n         and then not No_Run_Time_Mode\n         and then (Has_Task (Typ)\n                     or else (Is_Class_Wide_Type (Typ)\n-                               and then Is_Limited_Record (Typ)\n+                               and then Is_Limited_Record (Etype (Typ))\n                                and then not Has_Aspect\n                                  (Etype (Typ), Aspect_No_Task_Parts)));\n    end Might_Have_Tasks;\n@@ -9100,7 +9242,6 @@ package body Exp_Ch6 is\n    ----------------------------\n \n    function Needs_BIP_Task_Actuals (Func_Id : Entity_Id) return Boolean is\n-      pragma Assert (Is_Build_In_Place_Function (Func_Id));\n       Subp_Id  : Entity_Id;\n       Func_Typ : Entity_Id;\n \n@@ -9125,14 +9266,20 @@ package body Exp_Ch6 is\n \n       Func_Typ := Underlying_Type (Etype (Subp_Id));\n \n+      --  Functions returning types with foreign convention don't have extra\n+      --  formals.\n+\n+      if Has_Foreign_Convention (Func_Typ) then\n+         return False;\n+\n       --  At first sight, for all the following cases, we could add assertions\n       --  to ensure that if Func_Id is frozen then the computed result matches\n       --  with the availability of the task master extra formal; unfortunately\n       --  this is not feasible because we may be precisely freezing this entity\n       --  (that is, Is_Frozen has been set by Freeze_Entity but it has not\n       --  completed its work).\n \n-      if Has_Task (Func_Typ) then\n+      elsif Has_Task (Func_Typ) then\n          return True;\n \n       elsif Ekind (Func_Id) = E_Function then\n@@ -9164,8 +9311,6 @@ package body Exp_Ch6 is\n       Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n \n    begin\n-      pragma Assert (Is_Build_In_Place_Function (Func_Id));\n-\n       --  A formal giving the finalization master is needed for build-in-place\n       --  functions whose result type needs finalization or is a tagged type.\n       --  Tagged primitive build-in-place functions need such a formal because\n@@ -9177,7 +9322,8 @@ package body Exp_Ch6 is\n       --  such build-in-place functions, primitive or not.\n \n       return not Restriction_Active (No_Finalization)\n-        and then (Needs_Finalization (Typ) or else Is_Tagged_Type (Typ));\n+        and then (Needs_Finalization (Typ) or else Is_Tagged_Type (Typ))\n+        and then not Has_Foreign_Convention (Typ);\n    end Needs_BIP_Finalization_Master;\n \n    --------------------------\n@@ -9188,8 +9334,6 @@ package body Exp_Ch6 is\n       Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n \n    begin\n-      pragma Assert (Is_Build_In_Place_Function (Func_Id));\n-\n       --  A formal giving the allocation method is needed for build-in-place\n       --  functions whose result type is returned on the secondary stack or\n       --  is a tagged type. Tagged primitive build-in-place functions need\n@@ -9201,7 +9345,8 @@ package body Exp_Ch6 is\n       --  to be passed to all such build-in-place functions, primitive or not.\n \n       return not Restriction_Active (No_Secondary_Stack)\n-        and then (Needs_Secondary_Stack (Typ) or else Is_Tagged_Type (Typ));\n+        and then (Needs_Secondary_Stack (Typ) or else Is_Tagged_Type (Typ))\n+        and then not Has_Foreign_Convention (Typ);\n    end Needs_BIP_Alloc_Form;\n \n    -------------------------------------\n@@ -9496,6 +9641,161 @@ package body Exp_Ch6 is\n       return Unqual_BIP_Function_Call (Expr);\n    end Unqual_BIP_Iface_Function_Call;\n \n+   -------------------------------\n+   -- Validate_Subprogram_Calls --\n+   -------------------------------\n+\n+   procedure Validate_Subprogram_Calls (N : Node_Id) is\n+\n+      function Process_Node (Nod : Node_Id) return Traverse_Result;\n+      --  Function to traverse the subtree of N using Traverse_Proc.\n+\n+      ------------------\n+      -- Process_Node --\n+      ------------------\n+\n+      function Process_Node (Nod : Node_Id) return Traverse_Result is\n+      begin\n+         case Nkind (Nod) is\n+            when N_Entry_Call_Statement\n+               | N_Procedure_Call_Statement\n+               | N_Function_Call\n+              =>\n+               declare\n+                  Call_Node : Node_Id renames Nod;\n+                  Subp      : Entity_Id;\n+\n+               begin\n+                  --  Call using access to subprogram with explicit dereference\n+\n+                  if Nkind (Name (Call_Node)) = N_Explicit_Dereference then\n+                     Subp := Etype (Name (Call_Node));\n+\n+                  --  Prefix notation calls\n+\n+                  elsif Nkind (Name (Call_Node)) = N_Selected_Component then\n+                     Subp := Entity (Selector_Name (Name (Call_Node)));\n+\n+                  --  Call to member of entry family, where Name is an indexed\n+                  --  component, with the prefix being a selected component\n+                  --  giving the task and entry family name, and the index\n+                  --  being the entry index.\n+\n+                  elsif Nkind (Name (Call_Node)) = N_Indexed_Component then\n+                     Subp :=\n+                       Entity (Selector_Name (Prefix (Name (Call_Node))));\n+\n+                  --  Normal case\n+\n+                  else\n+                     Subp := Entity (Name (Call_Node));\n+                  end if;\n+\n+                  pragma Assert (Check_BIP_Actuals (Call_Node, Subp));\n+               end;\n+\n+            --  Skip generic bodies\n+\n+            when N_Package_Body =>\n+               if Ekind (Unique_Defining_Entity (Nod)) = E_Generic_Package then\n+                  return Skip;\n+               end if;\n+\n+            when N_Subprogram_Body =>\n+               if Ekind (Unique_Defining_Entity (Nod)) in E_Generic_Function\n+                                                        | E_Generic_Procedure\n+               then\n+                  return Skip;\n+               end if;\n+\n+            --  Nodes we want to ignore\n+\n+            --  Skip calls placed in the full declaration of record types since\n+            --  the call will be performed by their Init Proc; for example,\n+            --  calls initializing default values of discriminants or calls\n+            --  providing the initial value of record type components. Other\n+            --  full type declarations are processed because they may have\n+            --  calls that must be checked. For example:\n+\n+            --    type T is array (1 .. Some_Function_Call (...)) of Some_Type;\n+\n+            --  ??? More work needed here to handle the following case:\n+\n+            --    type Rec is record\n+            --       F : String (1 .. <some complicated expression>);\n+            --    end record;\n+\n+            when N_Full_Type_Declaration =>\n+               if Is_Record_Type (Defining_Entity (Nod)) then\n+                  return Skip;\n+               end if;\n+\n+            --  Skip calls placed in subprogram specifications since function\n+            --  calls initializing default parameter values will be processed\n+            --  when the call to the subprogram is found (if the default actual\n+            --  parameter is required), and calls found in aspects will be\n+            --  processed when their corresponding pragma is found, or in the\n+            --  specific case of class-wide pre-/postconditions, when their\n+            --  helpers are found.\n+\n+            when N_Procedure_Specification\n+               | N_Function_Specification\n+              =>\n+               return Skip;\n+\n+            when N_Abstract_Subprogram_Declaration\n+               | N_At_Clause\n+               | N_Call_Marker\n+               | N_Empty\n+               | N_Enumeration_Representation_Clause\n+               | N_Enumeration_Type_Definition\n+               | N_Function_Instantiation\n+               | N_Freeze_Generic_Entity\n+               | N_Generic_Function_Renaming_Declaration\n+               | N_Generic_Package_Renaming_Declaration\n+               | N_Generic_Procedure_Renaming_Declaration\n+               | N_Generic_Package_Declaration\n+               | N_Generic_Subprogram_Declaration\n+               | N_Itype_Reference\n+               | N_Number_Declaration\n+               | N_Package_Instantiation\n+               | N_Package_Renaming_Declaration\n+               | N_Pragma\n+               | N_Procedure_Instantiation\n+               | N_Protected_Type_Declaration\n+               | N_Record_Representation_Clause\n+               | N_Validate_Unchecked_Conversion\n+               | N_Variable_Reference_Marker\n+               | N_Use_Package_Clause\n+               | N_Use_Type_Clause\n+               | N_With_Clause\n+              =>\n+               return Skip;\n+\n+            when others =>\n+               null;\n+         end case;\n+\n+         return OK;\n+      end Process_Node;\n+\n+      procedure Check_Calls is new Traverse_Proc (Process_Node);\n+\n+   --  Start of processing for Validate_Subprogram_Calls\n+\n+   begin\n+      --  No action required if we are not generating code or compiling sources\n+      --  that have errors.\n+\n+      if Serious_Errors_Detected > 0\n+        or else Operating_Mode /= Generate_Code\n+      then\n+         return;\n+      end if;\n+\n+      Check_Calls (N);\n+   end Validate_Subprogram_Calls;\n+\n    --------------\n    -- Warn_BIP --\n    --------------"}, {"sha": "41ddf8dd8d0eafb13db787854d0b94c0efa9d11d", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -99,6 +99,16 @@ package Exp_Ch6 is\n    --  Adds Extra_Actual as a named parameter association for the formal\n    --  Extra_Formal in Subprogram_Call.\n \n+   procedure Apply_CW_Accessibility_Check (Exp : Node_Id; Func : Entity_Id);\n+   --  Ada 2005 (AI95-344): If the result type is class-wide, insert a check\n+   --  that the level of the return expression's underlying type is not deeper\n+   --  than the level of the master enclosing the function. Always generate the\n+   --  check when the type of the return expression is class-wide, when it's a\n+   --  type conversion, or when it's a formal parameter. Otherwise suppress the\n+   --  check in the case where the return expression has a specific type whose\n+   --  level is known not to be statically deeper than the result type of the\n+   --  function.\n+\n    function BIP_Formal_Suffix (Kind : BIP_Formal_Kind) return String;\n    --  Ada 2005 (AI-318-02): Returns a string to be used as the suffix of names\n    --  for build-in-place formal parameters of the given kind.\n@@ -121,6 +131,18 @@ package Exp_Ch6 is\n    --  The returned node is the root of the procedure body which will replace\n    --  the original function body, which is not needed for the C program.\n \n+   function Has_BIP_Extra_Formal\n+     (E              : Entity_Id;\n+      Kind           : BIP_Formal_Kind;\n+      Must_Be_Frozen : Boolean := True) return Boolean;\n+   --  Given a subprogram, subprogram type, entry or entry family, return True\n+   --  if E has the BIP extra formal associated with Kind. In general this\n+   --  subprogram must be invoked with a frozen entity or a subprogram type of\n+   --  a dispatching call since we can only rely on the availability of extra\n+   --  formals on these entities; this requirement can be relaxed using the\n+   --  formal Must_Be_Frozen in scenarios where we know that the entity has\n+   --  the extra formals.\n+\n    procedure Install_Class_Preconditions_Check (Call_Node : Node_Id);\n    --  Install check of class-wide preconditions on the caller.\n \n@@ -137,21 +159,37 @@ package Exp_Ch6 is\n    function Is_Build_In_Place_Function_Call (N : Node_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Returns True if N denotes a call to a function\n    --  that requires handling as a build-in-place call (possibly qualified or\n-   --  converted).\n+   --  converted); that is, BIP function calls, and calls to functions with\n+   --  inherited BIP formals.\n \n    function Is_Build_In_Place_Result_Type (Typ : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Returns True if functions returning the type use\n    --  build-in-place protocols. For inherently limited types, this must be\n    --  True in >= Ada 2005 and must be False in Ada 95.\n \n    function Is_Build_In_Place_Return_Object (E : Entity_Id) return Boolean;\n-   --  Ada 2005 (AI-318-02): Return True is E is a return object of a function\n+   --  Ada 2005 (AI-318-02): Return True if E is a return object of a function\n    --  that uses build-in-place protocols.\n \n+   function Is_By_Reference_Return_Object (E : Entity_Id) return Boolean;\n+   --  Return True if E is a return object of a function whose return type is\n+   --  required to be passed by reference, as defined in (RM 6.2(4-9)).\n+\n    function Is_Null_Procedure (Subp : Entity_Id) return Boolean;\n    --  Predicate to recognize stubbed procedures and null procedures, which\n    --  can be inlined unconditionally in all cases.\n \n+   function Is_Secondary_Stack_Return_Object (E : Entity_Id) return Boolean;\n+   --  Return True if E is a return object of a function whose return type is\n+   --  returned on the secondary stack.\n+\n+   function Is_Special_Return_Object (E : Entity_Id) return Boolean;\n+   --  Return True if E is the return object of a function and is handled in a\n+   --  special way by the expander. In most cases, return objects are handled\n+   --  like any other variables or constants but, in a few special cases, they\n+   --  are further expanded into more elaborate constructs, whose common goal\n+   --  is to elide the copy operation associated with the return.\n+\n    procedure Make_Build_In_Place_Call_In_Allocator\n      (Allocator     : Node_Id;\n       Function_Call : Node_Id);\n@@ -265,6 +303,11 @@ package Exp_Ch6 is\n    --  to reference the secondary dispatch table of an interface; otherwise\n    --  return Empty.\n \n+   procedure Validate_Subprogram_Calls (N : Node_Id);\n+   --  Check that the number of actuals (including extra actuals) of calls in\n+   --  the subtree N match their corresponding formals; check also that the\n+   --  names of BIP extra actuals and formals match.\n+\n private\n    pragma Inline (Is_Build_In_Place_Return_Object);\n "}, {"sha": "b20d7dbed5ffecaafaecfef54bbad58802311fc5", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -4452,7 +4452,7 @@ package body Exp_Ch7 is\n    begin\n       if Is_Derived_Type (Typ)\n         and then Comes_From_Source (E)\n-        and then not Present (Overridden_Operation (E))\n+        and then No (Overridden_Operation (E))\n       then\n          --  We know that the explicit operation on the type does not override\n          --  the inherited operation of the parent, and that the derivation"}, {"sha": "7d76144ceff0c2f82f752a49a7a7338aa6c7ddd0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Atree;          use Atree;\n with Aspects;        use Aspects;\n with Checks;         use Checks;\n@@ -3207,10 +3208,45 @@ package body Exp_Ch9 is\n          Find_Enclosing_Context (Par, Context, Context_Id, Decls);\n       end if;\n \n+      --  When the enclosing context is a BIP function whose result type has\n+      --  tasks, the function has an extra formal that is the master of the\n+      --  tasks to be created by its returned object (that is, when its\n+      --  enclosing context is a return statement). However, if the body of\n+      --  the function creates tasks before its return statements, such tasks\n+      --  need their own master.\n+\n+      if Has_Master_Entity (Context_Id)\n+        and then Ekind (Context_Id) = E_Function\n+        and then Is_Build_In_Place_Function (Context_Id)\n+        and then Needs_BIP_Task_Actuals (Context_Id)\n+      then\n+         --  No need to add it again if previously added\n+\n+         declare\n+            Master_Present : Boolean;\n+\n+         begin\n+            --  Handle transient scopes\n+\n+            if Context_Id /= Current_Scope then\n+               Push_Scope (Context_Id);\n+               Master_Present :=\n+                 Present (Current_Entity_In_Scope (Name_uMaster));\n+               Pop_Scope;\n+            else\n+               Master_Present :=\n+                 Present (Current_Entity_In_Scope (Name_uMaster));\n+            end if;\n+\n+            if Master_Present then\n+               return;\n+            end if;\n+         end;\n+\n       --  Nothing to do if the context already has a master; internally built\n       --  finalizers don't need a master.\n \n-      if Has_Master_Entity (Context_Id)\n+      elsif Has_Master_Entity (Context_Id)\n         or else Is_Finalizer (Context_Id)\n       then\n          return;"}, {"sha": "3ab68885bfe053f68d2acca1302c691941db3843", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -415,7 +415,7 @@ package body Exp_Dbug is\n                | N_Identifier\n             =>\n                if No (Entity (Ren))\n-                 or else not Present (Renamed_Entity_Or_Object (Entity (Ren)))\n+                 or else No (Renamed_Entity_Or_Object (Entity (Ren)))\n                then\n                   exit;\n                end if;"}, {"sha": "e0ad27e0677cbc6033a65efa4e200623301b42b4", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Atree;          use Atree;\n with Checks;         use Checks;\n with Debug;          use Debug;\n@@ -1304,17 +1305,24 @@ package body Exp_Disp is\n            and then Is_Ancestor (Iface_Typ, Opnd, Use_Full_View => True)\n          then\n             return;\n-         end if;\n \n-         --  When the type of the operand and the target interface type match,\n-         --  it is generally safe to skip generating code to displace the\n-         --  pointer to the object to reference the secondary dispatch table\n-         --  associated with the target interface type. The exception to this\n-         --  general rule is when the underlying object of the type conversion\n-         --  is an object built by means of a dispatching constructor (since in\n-         --  such case the expansion of the constructor call is a direct call\n-         --  to an object primitive, i.e. without thunks, and the expansion of\n-         --  the constructor call adds an explicit conversion to the target\n+         --  When the target type is an interface type that is an ancestor of\n+         --  the operand type, it is generally safe to skip generating code to\n+         --  displace the pointer to the object to reference the secondary\n+         --  dispatch table of the target interface type. Two scenarios are\n+         --  possible here:\n+         --    1) The operand type is a regular tagged type\n+         --    2) The operand type is an interface type\n+         --  In the former case the target interface and the regular tagged\n+         --  type share the primary dispatch table of the object; in the latter\n+         --  case the operand interface has all the primitives of the ancestor\n+         --  interface type (and exactly in the same dispatch table slots).\n+         --\n+         --  The exception to this general rule is when the underlying object\n+         --  is built by means of a dispatching constructor (since in such case\n+         --  the expansion of the constructor call is a direct call to an\n+         --  object primitive, i.e. without thunks, and the expansion of\n+         --  the constructor call adds this explicit conversion to the target\n          --  interface type to force the displacement of the pointer to the\n          --  object to reference the corresponding secondary dispatch table\n          --  (cf. Make_DT and Expand_Dispatching_Constructor_Call)).\n@@ -1326,7 +1334,10 @@ package body Exp_Disp is\n          --  to the object, because generic dispatching constructors are not\n          --  supported.\n \n-         if Opnd = Iface_Typ and then not RTE_Available (RE_Displace) then\n+         elsif Is_Interface (Iface_Typ)\n+           and then Is_Ancestor (Iface_Typ, Opnd, Use_Full_View => True)\n+           and then not RTE_Available (RE_Displace)\n+         then\n             return;\n          end if;\n       end;\n@@ -4052,8 +4063,7 @@ package body Exp_Disp is\n                     and then not Is_Abstract_Subprogram (Prim)\n                     and then not Is_Eliminated (Prim)\n                     and then not Generate_SCIL\n-                    and then not\n-                      Present (Prim_Table (UI_To_Int (DT_Position (Prim))))\n+                    and then No (Prim_Table (UI_To_Int (DT_Position (Prim))))\n                   then\n                      if not Build_Thunks then\n                         E := Ultimate_Alias (Prim);\n@@ -5269,7 +5279,7 @@ package body Exp_Disp is\n             E       : Entity_Id;\n \n          begin\n-            if not Present (Def)\n+            if No (Def)\n               or else Entity (Name (Def)) /= First_Subtype (Typ)\n             then\n                New_Node :=\n@@ -5872,8 +5882,7 @@ package body Exp_Disp is\n                     and then not Is_Abstract_Subprogram (Prim)\n                     and then not Is_Eliminated (Prim)\n                     and then not Generate_SCIL\n-                    and then not Present (Prim_Table\n-                                           (UI_To_Int (DT_Position (Prim))))\n+                    and then No (Prim_Table (UI_To_Int (DT_Position (Prim))))\n                   then\n                      E := Ultimate_Alias (Prim);\n                      pragma Assert (not Is_Abstract_Subprogram (E));\n@@ -6038,7 +6047,7 @@ package body Exp_Disp is\n                     --  those are only required to build secondary dispatch\n                     --  tables.\n \n-                    and then not Present (Interface_Alias (Prim))\n+                    and then No (Interface_Alias (Prim))\n \n                     --  Skip abstract and eliminated primitives\n \n@@ -7496,7 +7505,7 @@ package body Exp_Disp is\n \n       --  Primitive associated with a tagged type\n \n-      if not Present (Interface_Alias (Prim)) then\n+      if No (Interface_Alias (Prim)) then\n          Tag_Typ := Scope (DTC_Entity (Prim));\n          Pos     := DT_Position (Prim);\n          Tag     := First_Tag_Component (Tag_Typ);\n@@ -8023,7 +8032,7 @@ package body Exp_Disp is\n             --  same dispatch table slot, but if it renames an operation in a\n             --  nested package it's a new primitive and will have its own slot.\n \n-            elsif not Present (Interface_Alias (Prim))\n+            elsif No (Interface_Alias (Prim))\n               and then Present (Alias (Prim))\n               and then Chars (Prim) = Chars (Alias (Prim))\n               and then Nkind (Unit_Declaration_Node (Prim)) /=\n@@ -8191,7 +8200,7 @@ package body Exp_Disp is\n            and then Present (Alias (Prim))\n            and then not Is_Interface\n                           (Find_Dispatching_Type (Ultimate_Alias (Prim)))\n-           and then not Present (Interface_Alias (Prim))\n+           and then No (Interface_Alias (Prim))\n            and then Is_Derived_Type (Typ)\n            and then In_Private_Part (Current_Scope)\n            and then"}, {"sha": "398e4771c147c5aaf9333a6da3de949a24448bbe", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -938,12 +938,12 @@ package body Exp_Imgv is\n          --    P3 : constant Natural := call_put_enumN (P1 + 1);\n \n          declare\n-            Add_Node : constant Node_Id := New_Op_Node (N_Op_Add, Loc);\n+            Add_Node : constant Node_Id :=\n+              Make_Op_Add (Loc,\n+                Left_Opnd  => New_Occurrence_Of (P1_Id, Loc),\n+                Right_Opnd => Make_Integer_Literal (Loc, Uint_1));\n \n          begin\n-            Set_Left_Opnd  (Add_Node, New_Occurrence_Of (P1_Id, Loc));\n-            Set_Right_Opnd (Add_Node, Make_Integer_Literal (Loc, 1));\n-\n             Append_To (Ins_List,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => P3_Id,\n@@ -963,12 +963,12 @@ package body Exp_Imgv is\n          --    P4 : String renames call_put_enumS (P2 .. P3 - 1);\n \n          declare\n-            Sub_Node : constant Node_Id := New_Op_Node (N_Op_Subtract, Loc);\n+            Sub_Node : constant Node_Id :=\n+              Make_Op_Subtract (Loc,\n+                Left_Opnd  => New_Occurrence_Of (P3_Id, Loc),\n+                Right_Opnd => Make_Integer_Literal (Loc, Uint_1));\n \n          begin\n-            Set_Left_Opnd  (Sub_Node, New_Occurrence_Of (P3_Id, Loc));\n-            Set_Right_Opnd (Sub_Node, Make_Integer_Literal (Loc, 1));\n-\n             Append_To (Ins_List,\n               Make_Object_Renaming_Declaration (Loc,\n                 Defining_Identifier => P4_Id,\n@@ -988,12 +988,12 @@ package body Exp_Imgv is\n          --    subtype S1 is String (1 .. P3 - P2);\n \n          declare\n-            HB : constant Node_Id := New_Op_Node (N_Op_Subtract, Loc);\n+            HB : constant Node_Id :=\n+              Make_Op_Subtract (Loc,\n+                Left_Opnd  => New_Occurrence_Of (P3_Id, Loc),\n+                Right_Opnd => New_Occurrence_Of (P2_Id, Loc));\n \n          begin\n-            Set_Left_Opnd  (HB, New_Occurrence_Of (P3_Id, Loc));\n-            Set_Right_Opnd (HB, New_Occurrence_Of (P2_Id, Loc));\n-\n             Append_To (Ins_List,\n               Make_Subtype_Declaration (Loc,\n                 Defining_Identifier => S1_Id,\n@@ -1842,6 +1842,15 @@ package body Exp_Imgv is\n          return;\n       end if;\n \n+      --  If Image should be transformed using Put_Image, then do so. See\n+      --  Exp_Put_Image for details.\n+\n+      if Exp_Put_Image.Image_Should_Call_Put_Image (N) then\n+         Rewrite (N, Exp_Put_Image.Build_Image_Call (N));\n+         Analyze_And_Resolve (N, Standard_Wide_String, Suppress => All_Checks);\n+         return;\n+      end if;\n+\n       Rtyp := Root_Type (Entity (Pref));\n \n       Insert_Actions (N, New_List (\n@@ -1942,6 +1951,16 @@ package body Exp_Imgv is\n          return;\n       end if;\n \n+      --  If Image should be transformed using Put_Image, then do so. See\n+      --  Exp_Put_Image for details.\n+\n+      if Exp_Put_Image.Image_Should_Call_Put_Image (N) then\n+         Rewrite (N, Exp_Put_Image.Build_Image_Call (N));\n+         Analyze_And_Resolve\n+           (N, Standard_Wide_Wide_String, Suppress => All_Checks);\n+         return;\n+      end if;\n+\n       Rtyp := Root_Type (Entity (Pref));\n \n       Insert_Actions (N, New_List ("}, {"sha": "d18ed69eeae6aed2c1d89537e260feae85c2fa83", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -24,13 +24,16 @@\n ------------------------------------------------------------------------------\n \n with Atree;          use Atree;\n+with Aspects;        use Aspects;\n with Checks;         use Checks;\n with Einfo;          use Einfo;\n with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n with Elists;         use Elists;\n+with Errout;         use Errout;\n with Expander;       use Expander;\n with Exp_Atag;       use Exp_Atag;\n+with Exp_Ch6;        use Exp_Ch6;\n with Exp_Ch7;        use Exp_Ch7;\n with Exp_Ch11;       use Exp_Ch11;\n with Exp_Code;       use Exp_Code;\n@@ -277,6 +280,50 @@ package body Exp_Intr is\n       Result_Typ : Entity_Id;\n \n    begin\n+      pragma Assert (Is_Class_Wide_Type (Etype (Entity (Name (N)))));\n+\n+      --  Report case where we know that the generated code is wrong; that\n+      --  is a dispatching constructor call whose controlling type has tasks\n+      --  but its root type does not have tasks. In such case the constructor\n+      --  subprogram of the root type does not have extra formals but the\n+      --  constructor of the derivation must have extra formals.\n+\n+      if not Global_No_Tasking\n+        and then not No_Run_Time_Mode\n+        and then Is_Build_In_Place_Function (Entity (Name (N)))\n+        and then not Has_Task (Root_Type (Etype (Entity (Name (N)))))\n+        and then not Has_Aspect (Root_Type (Etype (Entity (Name (N)))),\n+                       Aspect_No_Task_Parts)\n+      then\n+         --  Case 1: Explicit tag reference (which allows static check)\n+\n+         if Nkind (Tag_Arg) = N_Identifier\n+           and then Present (Entity (Tag_Arg))\n+           and then Is_Tag (Entity (Tag_Arg))\n+         then\n+            if Has_Task (Related_Type (Entity (Tag_Arg))) then\n+               Error_Msg_N (\"unsupported dispatching constructor call\", N);\n+               Error_Msg_NE\n+                 (\"\\work around this problem by defining task component \"\n+                  & \"type& using access-to-task-type\",\n+                  N, Related_Type (Entity (Tag_Arg)));\n+            end if;\n+\n+         --  Case 2: Dynamic tag which may fail at run time\n+\n+         else\n+            Error_Msg_N\n+              (\"unsupported dispatching constructor call if the type \"\n+               & \"of the built object has task components??\", N);\n+\n+            Error_Msg_Sloc := Sloc (Root_Type (Etype (Entity (Name (N)))));\n+            Error_Msg_NE\n+              (\"\\work around this by adding ''with no_task_parts'' to \"\n+               & \"the declaration of the root type& defined#???\",\n+               N, Root_Type (Etype (Entity (Name (N)))));\n+         end if;\n+      end if;\n+\n       --  Remove side effects from tag argument early, before rewriting\n       --  the dispatching constructor call, as Remove_Side_Effects relies\n       --  on Tag_Arg's Parent link properly attached to the tree (once the"}, {"sha": "29735c07a88b34f71d4820b0e6f20e66d1fcdea5", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -671,11 +671,11 @@ package body Exp_Pakd is\n          return;\n       end if;\n \n-      --  If our immediate ancestor subtype is constrained, and it already\n-      --  has a packed array type, then just share the same type, since the\n-      --  bounds must be the same. If the ancestor is not an array type but\n-      --  a private type, as can happen with multiple instantiations, create\n-      --  a new packed type, to avoid privacy issues.\n+      --  If our immediate ancestor subtype is constrained, and it already has\n+      --  a packed array type, and it has the same size, then just share the\n+      --  same type, since the bounds must be the same. If the ancestor is not\n+      --  an array type but a private type, as can happen with multiple\n+      --  instantiations, create a new packed type, to avoid privacy issues.\n \n       if Ekind (Typ) = E_Array_Subtype then\n          Ancest := Ancestor_Subtype (Typ);\n@@ -684,6 +684,9 @@ package body Exp_Pakd is\n            and then Is_Array_Type (Ancest)\n            and then Is_Constrained (Ancest)\n            and then Present (Packed_Array_Impl_Type (Ancest))\n+           and then Known_Esize (Typ)\n+           and then Known_Esize (Ancest)\n+           and then Esize (Typ) = Esize (Ancest)\n          then\n             Set_Packed_Array_Impl_Type (Typ, Packed_Array_Impl_Type (Ancest));\n             return;"}, {"sha": "cce0aa58a212c817054a731e6a158b2631cf2079", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -58,6 +58,7 @@ with Stand;          use Stand;\n with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n with Validsw;        use Validsw;\n+with Warnsw;         use Warnsw;\n \n package body Exp_Prag is\n "}, {"sha": "eaedebe40019713374d30edbcfc2521f6b04f257", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1039,13 +1039,13 @@ package body Exp_Put_Image is\n       end if;\n \n       --  In Ada 2022, T'Image calls T'Put_Image if there is an explicit\n-      --  aspect_specification for Put_Image, or if U_Type'Image is illegal\n-      --  in pre-2022 versions of Ada.\n+      --  (or inherited) aspect_specification for Put_Image, or if\n+      --  U_Type'Image is illegal in pre-2022 versions of Ada.\n \n       declare\n          U_Type : constant Entity_Id := Underlying_Type (Entity (Prefix (N)));\n       begin\n-         if Present (TSS (U_Type, TSS_Put_Image)) then\n+         if Has_Aspect (U_Type, Aspect_Put_Image) then\n             return True;\n          end if;\n \n@@ -1058,12 +1058,14 @@ package body Exp_Put_Image is\n    ----------------------\n \n    function Build_Image_Call (N : Node_Id) return Node_Id is\n-      --  For T'Image (X) Generate an Expression_With_Actions node:\n+      --  For T'[[Wide_]Wide_]Image (X) Generate an Expression_With_Actions\n+      --  node:\n       --\n       --     do\n       --        S : Buffer;\n       --        U_Type'Put_Image (S, X);\n-      --        Result : constant String := Get (S);\n+      --        Result : constant [[Wide_]Wide_]String :=\n+      --          [[Wide_[Wide_]]Get (S);\n       --        Destroy (S);\n       --     in Result end\n       --\n@@ -1091,14 +1093,33 @@ package body Exp_Put_Image is\n             Image_Prefix));\n       Result_Entity : constant Entity_Id :=\n         Make_Temporary (Loc, 'R');\n+\n+      subtype Image_Name_Id is Name_Id with Static_Predicate =>\n+        Image_Name_Id in Name_Image | Name_Wide_Image | Name_Wide_Wide_Image;\n+      --  Attribute names that will be mapped to the corresponding result types\n+      --  and functions.\n+\n+      Attribute_Name_Id : constant Name_Id := Attribute_Name (N);\n+\n+      Result_Typ    : constant Entity_Id :=\n+        (case Image_Name_Id'(Attribute_Name_Id) is\n+            when Name_Image           => Stand.Standard_String,\n+            when Name_Wide_Image      => Stand.Standard_Wide_String,\n+            when Name_Wide_Wide_Image => Stand.Standard_Wide_Wide_String);\n+      Get_Func_Id   : constant RE_Id :=\n+        (case Image_Name_Id'(Attribute_Name_Id) is\n+            when Name_Image           => RE_Get,\n+            when Name_Wide_Image      => RE_Wide_Get,\n+            when Name_Wide_Wide_Image => RE_Wide_Wide_Get);\n+\n       Result_Decl : constant Node_Id :=\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Result_Entity,\n           Object_Definition =>\n-            New_Occurrence_Of (Stand.Standard_String, Loc),\n+            New_Occurrence_Of (Result_Typ, Loc),\n           Expression =>\n             Make_Function_Call (Loc,\n-              Name => New_Occurrence_Of (RTE (RE_Get), Loc),\n+              Name => New_Occurrence_Of (RTE (Get_Func_Id), Loc),\n               Parameter_Associations => New_List (\n                 New_Occurrence_Of (Sink_Entity, Loc))));\n       Actions : List_Id;"}, {"sha": "d4055d10b96751538dcfc5a075e21a4f48bf7b85", "filename": "gcc/ada/exp_put_image.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_put_image.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_put_image.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -91,9 +91,9 @@ package Exp_Put_Image is\n    --  T'Image.\n \n    function Build_Image_Call (N : Node_Id) return Node_Id;\n-   --  N is a call to T'Image, and this translates it into the appropriate code\n-   --  to call T'Put_Image into a buffer and then extract the string from the\n-   --  buffer.\n+   --  N is a call to T'[[Wide_]Wide_]Image, and this translates it into the\n+   --  appropriate code to call T'Put_Image into a buffer and then extract the\n+   --  [[wide] wide] string from the buffer.\n \n    procedure Preload_Root_Buffer_Type (Compilation_Unit : Node_Id);\n    --  Call RTE (RE_Root_Buffer_Type) if necessary, to load the packages"}, {"sha": "ba7bd7fe5d26f216e4f22d01aac07a57338a0fb7", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -895,7 +895,7 @@ package body Exp_SPARK is\n    procedure SPARK_Freeze_Type (N : Entity_Id) is\n       Typ : constant Entity_Id := Entity (N);\n \n-      Renamed_Eq : Node_Id;\n+      Renamed_Eq : Entity_Id;\n       --  Defining unit name for the predefined equality function in the case\n       --  where the type has a primitive operation that is a renaming of\n       --  predefined equality (but only if there is also an overriding"}, {"sha": "fd4c543ddfcbc4fd269e56d1f38a0a14281fdab5", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -2225,7 +2225,7 @@ package body Exp_Unst is\n \n             if No (UPJ.Ref)\n               or else not Is_Entity_Name (UPJ.Ref)\n-              or else not Present (Entity (UPJ.Ref))\n+              or else No (Entity (UPJ.Ref))\n               or else not Opt.Generate_C_Code\n             then\n                goto Continue;"}, {"sha": "84b0c0e29412b0c1f3d5b78441b11e54f9beeff9", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -67,6 +67,7 @@ with Stringt;        use Stringt;\n with Tbuild;         use Tbuild;\n with Ttypes;         use Ttypes;\n with Validsw;        use Validsw;\n+with Warnsw;         use Warnsw;\n \n with GNAT.HTable;\n package body Exp_Util is\n@@ -1700,7 +1701,7 @@ package body Exp_Util is\n          --  type attributes.\n \n       begin\n-         if not Present (Priv_Typ) and then not Present (Full_Typ) then\n+         if No (Priv_Typ) and then No (Full_Typ) then\n             return;\n          end if;\n \n@@ -1787,7 +1788,7 @@ package body Exp_Util is\n                --  full type doesn't have its own DIC, but is inherited from\n                --  a type with DIC), get the full DIC procedure.\n \n-               if not Present (Par_Proc) then\n+               if No (Par_Proc) then\n                   Par_Proc := DIC_Procedure (Par_Typ);\n                end if;\n \n@@ -2745,7 +2746,7 @@ package body Exp_Util is\n          --  type attributes.\n \n       begin\n-         if not Present (Priv_Typ) and then not Present (Full_Typ) then\n+         if No (Priv_Typ) and then No (Full_Typ) then\n             return;\n          end if;\n \n@@ -2966,7 +2967,7 @@ package body Exp_Util is\n          --  Output an info message when inheriting an invariant and the\n          --  listing option is enabled.\n \n-         if Inherited and Opt.List_Inherited_Aspects then\n+         if Inherited and List_Inherited_Aspects then\n             Error_Msg_Sloc := Sloc (Prag);\n             Error_Msg_N\n               (\"info: & inherits `Invariant''Class` aspect from #?.l?\", Typ);\n@@ -3072,7 +3073,7 @@ package body Exp_Util is\n          Prag_Typ_Arg  : Node_Id;\n \n       begin\n-         if not Present (T) then\n+         if No (T) then\n             return;\n          end if;\n \n@@ -9165,7 +9166,11 @@ package body Exp_Util is\n       return\n         Present (Expr)\n           and then Nkind (Unqual_Conv (Expr)) = N_Explicit_Dereference\n-          and then Nkind (Parent (Expr)) = N_Simple_Return_Statement;\n+          and then (Nkind (Parent (Expr)) = N_Simple_Return_Statement\n+                     or else\n+                       (Nkind (Parent (Expr)) = N_Object_Renaming_Declaration\n+                         and then\n+                        Is_Return_Object (Defining_Entity (Parent (Expr)))));\n    end Is_Related_To_Func_Return;\n \n    --------------------------------\n@@ -11367,7 +11372,7 @@ package body Exp_Util is\n          --  Create a label for the block in case the block needs to manage the\n          --  secondary stack. A label allows for flag Uses_Sec_Stack to be set.\n \n-         Add_Block_Identifier (Block_Nod, Block_Id);\n+         Add_Block_Identifier (Block_Nod, Block_Id, Scop);\n \n          --  When wrapping the statements of an iterator loop, check whether\n          --  the loop requires secondary stack management and if so, propagate"}, {"sha": "12ad15b6d3548b37c7864404a5e5a1d7e2cf30d9", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -366,9 +366,9 @@ extern Boolean Stack_Check_Probes_On_Target;\n \n /* warnsw: */\n \n-#define Warn_On_Questionable_Layout\twarnsw__warn_on_questionable_layout\n+#define Get_Warn_On_Questionable_Layout\twarnsw__get_warn_on_questionable_layout\n \n-extern Boolean Warn_On_Questionable_Layout;\n+extern Boolean Get_Warn_On_Questionable_Layout (void);\n \n // The following corresponds to Ada code in Einfo.Utils.\n "}, {"sha": "7f78b4315a840e5a1fe0a9fa169ec7b9b496f9a0", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 42, "deletions": 103, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1718,11 +1718,16 @@ package body Freeze is\n                end;\n             end if;\n \n-            New_Prag := New_Copy_Tree (A_Post);\n-            Rewrite\n-              (Expression (First (Pragma_Argument_Associations (New_Prag))),\n-               Class_Post);\n-            Append (New_Prag, Decls);\n+            --  A_Post can be null here if the postcondition was inlined in the\n+            --  called subprogram.\n+\n+            if Present (A_Post) then\n+               New_Prag := New_Copy_Tree (A_Post);\n+               Rewrite\n+                 (Expression (First (Pragma_Argument_Associations (New_Prag))),\n+                  Class_Post);\n+               Append (New_Prag, Decls);\n+            end if;\n          end if;\n       end Build_Inherited_Condition_Pragmas;\n \n@@ -3183,6 +3188,9 @@ package body Freeze is\n                if Has_Task (Typ) then\n                   Error_Msg_N\n                     (\"aspect % applied to task type &\", Typ);\n+                  Error_Msg_N\n+                    (\"\\replace task components with access-to-task-type \"\n+                     & \"components??\", Typ);\n                end if;\n \n             else\n@@ -3793,7 +3801,7 @@ package body Freeze is\n                      --  Set component size if not already set by a component\n                      --  size clause.\n \n-                     if not Present (Comp_Size_C) then\n+                     if No (Comp_Size_C) then\n                         Set_Component_Size (Arr, Csiz);\n                      end if;\n \n@@ -3805,7 +3813,7 @@ package body Freeze is\n                      --  explicitly, then generate a warning.\n \n                      if Has_Pragma_Pack (Arr)\n-                       and then not Present (Comp_Size_C)\n+                       and then No (Comp_Size_C)\n                        and then (Csiz = 7 or else Csiz = 15 or else Csiz = 31)\n                        and then Known_Esize (Base_Type (Ctyp))\n                        and then Esize (Base_Type (Ctyp)) = Csiz + 1\n@@ -4979,6 +4987,7 @@ package body Freeze is\n               and then Convention (Desig) /= Convention_Protected\n             then\n                Set_Is_Frozen (Desig);\n+               Create_Extra_Formals (Desig);\n             end if;\n          end Check_Itype;\n \n@@ -7059,7 +7068,7 @@ package body Freeze is\n             --  end of a declarative part.\n \n             if Is_Library_Level_Tagged_Type (E)\n-              and then not Present (Full_View (E))\n+              and then No (Full_View (E))\n             then\n                Set_Is_Frozen (E, False);\n                goto Leave;\n@@ -7126,11 +7135,11 @@ package body Freeze is\n \n                Check_Debug_Info_Needed (E);\n \n-               --  AI-117 requires that the convention of a partial view be the\n-               --  same as the convention of the full view. Note that this is a\n-               --  recognized breach of privacy, but it's essential for logical\n-               --  consistency of representation, and the lack of a rule in\n-               --  RM95 was an oversight.\n+               --  AI95-117 requires that the convention of a partial view be\n+               --  the same as the convention of the full view. Note that this\n+               --  is a recognized breach of privacy, but it's essential for\n+               --  logical consistency of representation, and the lack of a\n+               --  rule in RM95 was an oversight.\n \n                Set_Convention (E, Convention (Full_View (E)));\n \n@@ -7355,7 +7364,7 @@ package body Freeze is\n \n          if Is_Composite_Type (E) then\n \n-            --  AI-117 requires that all new primitives of a tagged type must\n+            --  AI95-117 requires that all new primitives of a tagged type must\n             --  inherit the convention of the full view of the type. Inherited\n             --  and overriding operations are defined to inherit the convention\n             --  of their parent or overridden subprogram (also specified in\n@@ -7467,7 +7476,7 @@ package body Freeze is\n                      --  If no formal is passed in, then issue an error for a\n                      --  missing formal.\n \n-                     elsif not Present (Pool_Op_Formal) then\n+                     elsif No (Pool_Op_Formal) then\n                         Error_Msg_NE\n                           (\"simple storage pool op missing formal \" &\n                            Formal_Name & \" of type&\", Pool_Op, Expected_Type);\n@@ -7599,7 +7608,7 @@ package body Freeze is\n                            --  and no excess formals are present, then this\n                            --  operation has been validated, so record it.\n \n-                           if not Present (Formal) and then Is_OK then\n+                           if No (Formal) and then Is_OK then\n                               Found_Op := Op;\n                            end if;\n                         end if;\n@@ -7611,7 +7620,7 @@ package body Freeze is\n                      --  so issue an error if none was found.\n \n                      if Op_Name = Name_Allocate\n-                       and then not Present (Found_Op)\n+                       and then No (Found_Op)\n                      then\n                         Error_Msg_N (\"missing % operation for simple \" &\n                                      \"storage pool type\", Pool_Type);\n@@ -8263,7 +8272,7 @@ package body Freeze is\n             if Present (Nam)\n               and then Ekind (Nam) = E_Function\n               and then Nkind (Parent (N)) = N_Function_Call\n-              and then Convention (Nam) = Convention_Ada\n+              and then not Has_Foreign_Convention (Nam)\n             then\n                Create_Extra_Formals (Nam);\n             end if;\n@@ -9870,77 +9879,11 @@ package body Freeze is\n    -----------------------\n \n    procedure Freeze_Subprogram (E : Entity_Id) is\n-      function Check_Extra_Formals (E : Entity_Id) return Boolean;\n-      --  Return True if the decoration of the attributes associated with extra\n-      --  formals are properly set.\n \n       procedure Set_Profile_Convention (Subp_Id : Entity_Id);\n       --  Set the conventions of all anonymous access-to-subprogram formals and\n       --  result subtype of subprogram Subp_Id to the convention of Subp_Id.\n \n-      -------------------------\n-      -- Check_Extra_Formals --\n-      -------------------------\n-\n-      function Check_Extra_Formals (E : Entity_Id) return Boolean is\n-         Last_Formal       : Entity_Id := Empty;\n-         Formal            : Entity_Id;\n-         Has_Extra_Formals : Boolean := False;\n-\n-      begin\n-         --  No check required if expansion is disabled because extra\n-         --  formals are only generated when we are generating code.\n-         --  See Create_Extra_Formals.\n-\n-         if not Expander_Active then\n-            return True;\n-         end if;\n-\n-         --  Check attribute Extra_Formal: If available, it must be set only\n-         --  on the last formal of E.\n-\n-         Formal := First_Formal (E);\n-         while Present (Formal) loop\n-            if Present (Extra_Formal (Formal)) then\n-               if Has_Extra_Formals then\n-                  return False;\n-               end if;\n-\n-               Has_Extra_Formals := True;\n-            end if;\n-\n-            Last_Formal := Formal;\n-            Next_Formal (Formal);\n-         end loop;\n-\n-         --  Check attribute Extra_Accessibility_Of_Result\n-\n-         if Ekind (E) in E_Function | E_Subprogram_Type\n-           and then Needs_Result_Accessibility_Level (E)\n-           and then No (Extra_Accessibility_Of_Result (E))\n-         then\n-            return False;\n-         end if;\n-\n-         --  Check attribute Extra_Formals: If E has extra formals, then this\n-         --  attribute must point to the first extra formal of E.\n-\n-         if Has_Extra_Formals then\n-            return Present (Extra_Formals (E))\n-              and then Present (Extra_Formal (Last_Formal))\n-              and then Extra_Formal (Last_Formal) = Extra_Formals (E);\n-\n-         --  When E has no formals, the first extra formal is available through\n-         --  the Extra_Formals attribute.\n-\n-         elsif Present (Extra_Formals (E)) then\n-            return No (First_Formal (E));\n-\n-         else\n-            return True;\n-         end if;\n-      end Check_Extra_Formals;\n-\n       ----------------------------\n       -- Set_Profile_Convention --\n       ----------------------------\n@@ -10079,30 +10022,26 @@ package body Freeze is\n       --  that we know the convention.\n \n       if not Has_Foreign_Convention (E) then\n-         if No (Extra_Formals (E)) then\n \n-            --  Extra formals are shared by derived subprograms; therefore, if\n-            --  the ultimate alias of E has been frozen before E then the extra\n-            --  formals have been added, but the attribute Extra_Formals is\n-            --  still unset (and must be set now).\n+         --  Extra formals of dispatching operations are added later by\n+         --  Expand_Freeze_Record_Type, which also adds extra formals to\n+         --  internal entities built to handle interface types.\n \n-            if Present (Alias (E))\n-              and then Is_Frozen (Ultimate_Alias (E))\n-              and then Present (Extra_Formals (Ultimate_Alias (E)))\n-              and then Last_Formal (Ultimate_Alias (E)) = Last_Formal (E)\n-            then\n-               Set_Extra_Formals (E, Extra_Formals (Ultimate_Alias (E)));\n+         if not Is_Dispatching_Operation (E) then\n+            Create_Extra_Formals (E);\n \n-               if Ekind (E) = E_Function then\n-                  Set_Extra_Accessibility_Of_Result (E,\n-                    Extra_Accessibility_Of_Result (Ultimate_Alias (E)));\n-               end if;\n-            else\n-               Create_Extra_Formals (E);\n-            end if;\n+            pragma Assert\n+              ((Ekind (E) = E_Subprogram_Type\n+                  and then Extra_Formals_OK (E))\n+               or else\n+                 (Is_Subprogram (E)\n+                   and then Extra_Formals_OK (E)\n+                   and then\n+                     (No (Overridden_Operation (E))\n+                       or else Extra_Formals_Match_OK (E,\n+                                 Ultimate_Alias (Overridden_Operation (E))))));\n          end if;\n \n-         pragma Assert (Check_Extra_Formals (E));\n          Set_Mechanisms (E);\n \n          --  If this is convention Ada and a Valued_Procedure, that's odd"}, {"sha": "033ecf3b7be750620451bcabb5e6d8a9f5e497fb", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -30,6 +30,7 @@ with Checks;\n with CStand;\n with Debug;          use Debug;\n with Elists;\n+with Exp_Ch6;\n with Exp_Dbug;\n with Exp_Unst;\n with Fmap;\n@@ -68,6 +69,7 @@ with SCIL_LL;\n with Tbuild;         use Tbuild;\n with Types;          use Types;\n with VAST;\n+with Warnsw;         use Warnsw;\n \n procedure Frontend is\n begin\n@@ -523,6 +525,16 @@ begin\n       VAST.Check_Tree (Cunit (Main_Unit));\n    end if;\n \n+   --  Validate all the subprogram calls; this work will be done by VAST; in\n+   --  the meantime it is done to check extra formals and it can be disabled\n+   --  using -gnatd_X (which also disables all the other assertions on extra\n+   --  formals). It is invoked using pragma Debug to avoid adding any cost\n+   --  when the compiler is built with assertions disabled.\n+\n+   if not Debug_Flag_Underscore_XX then\n+      pragma Debug (Exp_Ch6.Validate_Subprogram_Calls (Cunit (Main_Unit)));\n+   end if;\n+\n    --  Dump the source now. Note that we do this as soon as the analysis\n    --  of the tree is complete, because it is not just a dump in the case\n    --  of -gnatD, where it rewrites all source locations in the tree."}, {"sha": "2acd195017ea0746c236899b9d694d9823a739fc", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -399,6 +399,7 @@ GNAT_ADA_OBJS =\t\\\n  ada/sem_ch12.o\t\\\n  ada/sem_ch13.o\t\\\n  ada/sem_ch2.o\t\\\n+ ada/accessibility.o\t\\\n  ada/sem_ch3.o\t\\\n  ada/sem_ch4.o\t\\\n  ada/sem_ch5.o\t\\\n@@ -601,7 +602,6 @@ GNATBIND_OBJS = \\\n  ada/osint-b.o    \\\n  ada/osint.o      \\\n  ada/output.o     \\\n- ada/restrict.o   \\\n  ada/rident.o     \\\n  ada/scans.o      \\\n  ada/scil_ll.o    \\\n@@ -629,6 +629,7 @@ GNATBIND_OBJS = \\\n  ada/uintp.o      \\\n  ada/uname.o      \\\n  ada/urealp.o     \\\n+ ada/warnsw.o     \\\n  ada/widechar.o   \\\n  ada/gnat.o       \\\n  ada/g-dynhta.o   \\"}, {"sha": "5137ebaa0c6c814250f20a61ac443f972e1bfd7b", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -333,7 +333,7 @@ GNATMAKE_OBJS = a-except.o ali.o ali-util.o aspects.o s-casuti.o alloc.o \\\n  s-purexc.o s-htable.o scil_ll.o sem_aux.o sinfo.o sinput.o sinput-c.o \\\n  snames.o stand.o stringt.o styleg.o stylesw.o system.o validsw.o \\\n  switch.o switch-m.o table.o targparm.o tempdir.o types.o uintp.o \\\n- uname.o urealp.o usage.o widechar.o \\\n+ uname.o urealp.o usage.o widechar.o warnsw.o \\\n  seinfo.o einfo-entities.o einfo-utils.o sinfo-nodes.o sinfo-utils.o \\\n  $(EXTRA_GNATMAKE_OBJS)\n "}, {"sha": "c383f9b218a921e52354ecee181c18995c8bcd3f", "filename": "gcc/ada/gcc-interface/decl.cc", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.cc?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -637,17 +637,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n       break;\n \n     case E_Constant:\n-      /* If this is a constant related to a return in a function returning by\n-\t invisible reference without expression, get the return object.  */\n-      if (Is_Related_To_Func_Return (gnat_entity)\n-\t  && current_function_decl\n-\t  && TREE_ADDRESSABLE (TREE_TYPE (current_function_decl))\n-\t  && !gnu_expr)\n-\t{\n-\t  gnu_decl = DECL_RESULT (current_function_decl);\n-\t  break;\n-\t}\n-\n       /* Ignore constant definitions already marked with the error node.  See\n \t the N_Object_Declaration case of gnat_to_gnu for the rationale.  */\n       if (definition\n@@ -8363,7 +8352,7 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n        && !Debug_Flag_Dot_R);\n   const bool w_reorder\n     = (Convention (gnat_record_type) == Convention_Ada\n-       && Warn_On_Questionable_Layout\n+       && Get_Warn_On_Questionable_Layout ()\n        && !(No_Reordering (gnat_record_type) && GNAT_Mode));\n   tree gnu_zero_list = NULL_TREE;\n   tree gnu_self_list = NULL_TREE;"}, {"sha": "59332f93614a97995a9072eba10bf8c76af40616", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -4400,6 +4400,11 @@ get_storage_model_access (Node_Id gnat_node, Entity_Id *gnat_smo)\n       return;\n     }\n \n+  /* Now strip any type conversion from GNAT_NODE.  */\n+  if (Nkind (gnat_node) == N_Type_Conversion\n+      || Nkind (gnat_node) == N_Unchecked_Type_Conversion)\n+    gnat_node = Expression (gnat_node);\n+\n   while (node_is_component (gnat_node))\n     gnat_node = Prefix (gnat_node);\n \n@@ -6482,9 +6487,10 @@ gnat_to_gnu (Node_Id gnat_node)\n \n \t then elide the temporary by forwarding the return object to Func:\n \n+\t   result_type *Rnn = (result_type *) <retval>;\n \t   *<retval> = Func (); [return slot optimization]\n \t   [...]\n-\t   return <retval>;\n+\t   return Rnn;\n \n \t That's necessary if the result type needs finalization because the\n \t temporary would never be adjusted as Expand_Simple_Function_Return\n@@ -6496,8 +6502,12 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  && current_function_decl\n \t  && TREE_ADDRESSABLE (TREE_TYPE (current_function_decl)))\n \t{\n-\t  gnu_result = gnat_to_gnu_entity (gnat_temp, NULL_TREE, true);\n-\t  gnu_result = build_unary_op (INDIRECT_REF, NULL_TREE, gnu_result);\n+\t  gnat_to_gnu_entity (gnat_temp,\n+\t\t\t      DECL_RESULT (current_function_decl),\n+\t\t\t      true);\n+\t  gnu_result\n+\t    = build_unary_op (INDIRECT_REF, NULL_TREE,\n+\t\t\t      DECL_RESULT (current_function_decl));\n \t  gnu_result\n \t    = Call_to_gnu (Prefix (Expression (gnat_node)),\n \t\t\t   &gnu_result_type, gnu_result,\n@@ -7445,6 +7455,9 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  else if (Present (gnat_smo)\n \t\t   && Present (Storage_Model_Copy_To (gnat_smo)))\n \t    {\n+\t      /* We obviously cannot use memset in this case.  */\n+\t      gcc_assert (!use_memset_p);\n+\n \t      tree t = remove_conversions (gnu_rhs, false);\n \n \t      /* If a storage model load is present on the RHS then instantiate\n@@ -8460,9 +8473,10 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  declaration, return the result unmodified because we want to use the\n \t  return slot optimization in this case.\n \n-       5. If this is a reference to an unconstrained array which is used as the\n-\t  prefix of an attribute reference that requires an lvalue, return the\n-\t  result unmodified because we want to return the original bounds.\n+       5. If this is a reference to an unconstrained array which is used either\n+\t  as the prefix of an attribute reference that requires an lvalue or in\n+\t  a return statement, then return the result unmodified because we want\n+\t  to return the original bounds.\n \n        6. Finally, if the type of the result is already correct.  */\n \n@@ -8526,8 +8540,9 @@ gnat_to_gnu (Node_Id gnat_node)\n \n   else if (TREE_CODE (TREE_TYPE (gnu_result)) == UNCONSTRAINED_ARRAY_TYPE\n \t   && Present (Parent (gnat_node))\n-\t   && Nkind (Parent (gnat_node)) == N_Attribute_Reference\n-\t   && lvalue_required_for_attribute_p (Parent (gnat_node)))\n+\t   && ((Nkind (Parent (gnat_node)) == N_Attribute_Reference\n+\t        && lvalue_required_for_attribute_p (Parent (gnat_node)))\n+\t       || Nkind (Parent (gnat_node)) == N_Simple_Return_Statement))\n     ;\n \n   else if (TREE_TYPE (gnu_result) != gnu_result_type)"}, {"sha": "80d550c91e190119c4439f833bcc830a9555de63", "filename": "gcc/ada/gcc-interface/utils2.cc", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2Futils2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgcc-interface%2Futils2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.cc?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -2439,8 +2439,8 @@ build_allocator (tree type, tree init, tree result_type, Entity_Id gnat_proc,\n       tree storage_ptr_type = build_pointer_type (storage_type);\n       tree lhs, rhs;\n \n-      size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (TYPE_SIZE_UNIT (storage_type),\n-\t\t\t\t\t     init);\n+      size = TYPE_SIZE_UNIT (storage_type);\n+      size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, init);\n \n       /* If the size overflows, pass -1 so Storage_Error will be raised.  */\n       if (TREE_CODE (size) == INTEGER_CST && !valid_constant_size_p (size))\n@@ -2454,8 +2454,10 @@ build_allocator (tree type, tree init, tree result_type, Entity_Id gnat_proc,\n \n       /* If there is an initializing expression, then make a constructor for\n \t the entire object including the bounds and copy it into the object.\n-\t If there is no initializing expression, just set the bounds.  */\n-      if (init)\n+\t If there is no initializing expression, just set the bounds.  Note\n+\t that, if we have a storage model, we need to copy the initializing\n+\t expression separately from the bounds.  */\n+      if (init && !pool_is_storage_model)\n \t{\n \t  vec<constructor_elt, va_gc> *v;\n \t  vec_alloc (v, 2);\n@@ -2472,11 +2474,28 @@ build_allocator (tree type, tree init, tree result_type, Entity_Id gnat_proc,\n \t{\n \t  lhs = build_component_ref (storage_deref, TYPE_FIELDS (storage_type),\n \t\t\t\t     false);\n-\t  rhs = build_template (template_type, type, NULL_TREE);\n+\t  rhs = build_template (template_type, type, init);\n \t}\n \n       if (pool_is_storage_model)\n-\tstorage_init = build_storage_model_store (gnat_pool, lhs, rhs);\n+\t{\n+\t  storage_init = build_storage_model_store (gnat_pool, lhs, rhs);\n+\t  if (init)\n+\t    {\n+\t      start_stmt_group ();\n+\t      add_stmt (storage_init);\n+\t      lhs\n+\t\t= build_component_ref (storage_deref,\n+\t\t\t\t       DECL_CHAIN (TYPE_FIELDS (storage_type)),\n+\t\t\t\t       false);\n+\t      rhs = init;\n+\t      size = TYPE_SIZE_UNIT (TREE_TYPE (lhs));\n+\t      size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, init);\n+\t      tree t = build_storage_model_store (gnat_pool, lhs, rhs, size);\n+\t      add_stmt (t);\n+\t      storage_init = end_stmt_group ();\n+\t    }\n+\t}\n       else\n \tstorage_init = build_binary_op (INIT_EXPR, NULL_TREE, lhs, rhs);\n \n@@ -2520,7 +2539,7 @@ build_allocator (tree type, tree init, tree result_type, Entity_Id gnat_proc,\n       TREE_THIS_NOTRAP (storage_deref) = 1;\n       if (pool_is_storage_model)\n \tstorage_init\n-\t  = build_storage_model_store (gnat_pool, storage_deref, init);\n+\t  = build_storage_model_store (gnat_pool, storage_deref, init, size);\n       else\n \tstorage_init\n \t  = build_binary_op (INIT_EXPR, NULL_TREE, storage_deref, init);"}, {"sha": "bc424ab3c3b472e80a65e5898795f8472f8977f1", "filename": "gcc/ada/gen_il-fields.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgen_il-fields.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgen_il-fields.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-fields.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -69,7 +69,6 @@ package Gen_IL.Fields is\n       Address_Warning_Posted,\n       Aggregate_Bounds,\n       Aliased_Present,\n-      Alloc_For_BIP_Return,\n       All_Others,\n       All_Present,\n       Alternatives,\n@@ -98,6 +97,7 @@ package Gen_IL.Fields is\n       Cleanup_Actions,\n       Comes_From_Check_Or_Contract,\n       Comes_From_Extended_Return_Statement,\n+      Comes_From_Iterator,\n       Compile_Time_Known_Aggregate,\n       Component_Associations,\n       Component_Clauses,\n@@ -188,6 +188,7 @@ package Gen_IL.Fields is\n       Float_Truncate,\n       Formal_Type_Definition,\n       Forwards_OK,\n+      For_Special_Return_Object,\n       From_Aspect_Specification,\n       From_At_Mod,\n       From_Conditional_Expression,"}, {"sha": "ec0eba74d06b0fedcd359bd9d96951effb8df9f4", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -494,7 +494,7 @@ begin -- Gen_IL.Gen.Gen_Nodes\n        (Sy (Expression, Node_Id, Default_Empty),\n         Sy (Subpool_Handle_Name, Node_Id, Default_Empty),\n         Sy (Null_Exclusion_Present, Flag, Default_False),\n-        Sm (Alloc_For_BIP_Return, Flag),\n+        Sm (For_Special_Return_Object, Flag),\n         Sm (Do_Storage_Check, Flag),\n         Sm (Is_Dynamic_Coextension, Flag),\n         Sm (Is_Static_Coextension, Flag),\n@@ -906,6 +906,7 @@ begin -- Gen_IL.Gen.Gen_Nodes\n         Sy (Subtype_Mark, Node_Id, Default_Empty),\n         Sy (Access_Definition, Node_Id, Default_Empty),\n         Sy (Name, Node_Id, Default_Empty),\n+        Sm (Comes_From_Iterator, Flag),\n         Sm (Corresponding_Generic_Association, Node_Id)));\n \n    Cc (N_Package_Renaming_Declaration, N_Renaming_Declaration,"}, {"sha": "09fe99f44bcd84adc1e6320f32338336d16859a9", "filename": "gcc/ada/gen_il-internals.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgen_il-internals.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgen_il-internals.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -257,8 +257,6 @@ package body Gen_IL.Internals is\n          --  Special cases for the same reason as in the above Image\n          --  function for Opt_Type_Enum.\n \n-         when Alloc_For_BIP_Return =>\n-            return \"Alloc_For_BIP_Return\";\n          when Assignment_OK =>\n             return \"Assignment_OK\";\n          when Backwards_OK =>"}, {"sha": "0b29c6f04c3e6311591ee0732c52a7162704c1c2", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -562,9 +562,10 @@ procedure Gnat1drv is\n          --    - suspicious contracts, which are useful for SPARK code\n \n          Reset_Style_Check_Options;\n-         Restore_Warnings (W => (Elab_Warnings               => True,\n-                                 Warn_On_Suspicious_Contract => True,\n-                                 others                      => False));\n+         Restore_Warnings\n+           ((Warnings_Package.Elab_Warnings => True,\n+             Warnings_Package.Warn_On_Suspicious_Contract => True,\n+             others => False));\n \n          --  Suppress the generation of name tables for enumerations, which are\n          --  not needed for formal verification, and fall outside the SPARK"}, {"sha": "ed763f912b6eec1370a2c13f030e1425e5d86bcf", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 252, "deletions": 136, "changes": 388, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -19,7 +19,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Oct 04, 2022\n+GNAT Reference Manual , Dec 01, 2022\n \n AdaCore\n \n@@ -135,9 +135,9 @@ Implementation Defined Pragmas\n * Pragma CPP_Vtable:: \n * Pragma CPU:: \n * Pragma Deadline_Floor:: \n-* Pragma Default_Initial_Condition:: \n * Pragma Debug:: \n * Pragma Debug_Policy:: \n+* Pragma Default_Initial_Condition:: \n * Pragma Default_Scalar_Storage_Order:: \n * Pragma Default_Storage_Pool:: \n * Pragma Depends:: \n@@ -215,8 +215,8 @@ Implementation Defined Pragmas\n * Pragma Ordered:: \n * Pragma Overflow_Mode:: \n * Pragma Overriding_Renamings:: \n-* Pragma Partition_Elaboration_Policy:: \n * Pragma Part_Of:: \n+* Pragma Partition_Elaboration_Policy:: \n * Pragma Passive:: \n * Pragma Persistent_BSS:: \n * Pragma Post:: \n@@ -284,8 +284,8 @@ Implementation Defined Pragmas\n * Pragma Unreferenced_Objects:: \n * Pragma Unreserve_All_Interrupts:: \n * Pragma Unsuppress:: \n-* Pragma Use_VADS_Size:: \n * Pragma Unused:: \n+* Pragma Use_VADS_Size:: \n * Pragma Validity_Checks:: \n * Pragma Volatile:: \n * Pragma Volatile_Full_Access:: \n@@ -690,7 +690,7 @@ The GNAT Library\n \n * Ada.Characters.Latin_9 (a-chlat9.ads): Ada Characters Latin_9 a-chlat9 ads. \n * Ada.Characters.Wide_Latin_1 (a-cwila1.ads): Ada Characters Wide_Latin_1 a-cwila1 ads. \n-* Ada.Characters.Wide_Latin_9 (a-cwila1.ads): Ada Characters Wide_Latin_9 a-cwila1 ads. \n+* Ada.Characters.Wide_Latin_9 (a-cwila9.ads): Ada Characters Wide_Latin_9 a-cwila9 ads. \n * Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads): Ada Characters Wide_Wide_Latin_1 a-chzla1 ads. \n * Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads): Ada Characters Wide_Wide_Latin_9 a-chzla9 ads. \n * Ada.Containers.Bounded_Holders (a-coboho.ads): Ada Containers Bounded_Holders a-coboho ads. \n@@ -809,8 +809,8 @@ The GNAT Library\n * GNAT.Threads (g-thread.ads): GNAT Threads g-thread ads. \n * GNAT.Traceback (g-traceb.ads): GNAT Traceback g-traceb ads. \n * GNAT.Traceback.Symbolic (g-trasym.ads): GNAT Traceback Symbolic g-trasym ads. \n-* GNAT.UTF_32 (g-table.ads): GNAT UTF_32 g-table ads. \n-* GNAT.Wide_Spelling_Checker (g-u3spch.ads): GNAT Wide_Spelling_Checker g-u3spch ads. \n+* GNAT.UTF_32 (g-utf_32.ads): GNAT UTF_32 g-utf_32 ads. \n+* GNAT.UTF_32_Spelling_Checker (g-u3spch.ads): GNAT UTF_32_Spelling_Checker g-u3spch ads. \n * GNAT.Wide_Spelling_Checker (g-wispch.ads): GNAT Wide_Spelling_Checker g-wispch ads. \n * GNAT.Wide_String_Split (g-wistsp.ads): GNAT Wide_String_Split g-wistsp ads. \n * GNAT.Wide_Wide_Spelling_Checker (g-zspche.ads): GNAT Wide_Wide_Spelling_Checker g-zspche ads. \n@@ -1220,9 +1220,9 @@ consideration, the use of these pragmas should be minimized.\n * Pragma CPP_Vtable:: \n * Pragma CPU:: \n * Pragma Deadline_Floor:: \n-* Pragma Default_Initial_Condition:: \n * Pragma Debug:: \n * Pragma Debug_Policy:: \n+* Pragma Default_Initial_Condition:: \n * Pragma Default_Scalar_Storage_Order:: \n * Pragma Default_Storage_Pool:: \n * Pragma Depends:: \n@@ -1300,8 +1300,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Ordered:: \n * Pragma Overflow_Mode:: \n * Pragma Overriding_Renamings:: \n-* Pragma Partition_Elaboration_Policy:: \n * Pragma Part_Of:: \n+* Pragma Partition_Elaboration_Policy:: \n * Pragma Passive:: \n * Pragma Persistent_BSS:: \n * Pragma Post:: \n@@ -1369,8 +1369,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Unreferenced_Objects:: \n * Pragma Unreserve_All_Interrupts:: \n * Pragma Unsuppress:: \n-* Pragma Use_VADS_Size:: \n * Pragma Unused:: \n+* Pragma Use_VADS_Size:: \n * Pragma Validity_Checks:: \n * Pragma Volatile:: \n * Pragma Volatile_Full_Access:: \n@@ -2787,7 +2787,7 @@ that is, they never return an object whose type is a descendant of type T.\n This pragma is now obsolete and, other than generating a warning if warnings\n on obsolescent features are enabled, is completely ignored.\n It is retained for compatibility\n-purposes. It used to be required to ensure compoatibility with C++, but\n+purposes. It used to be required to ensure compatibility with C++, but\n is no longer required for that purpose because GNAT generates\n the same object layout as the G++ compiler by default.\n \n@@ -2823,7 +2823,7 @@ This pragma is standard in Ada 2012, but is available in all earlier\n versions of Ada as an implementation-defined pragma.\n See Ada 2012 Reference Manual for details.\n \n-@node Pragma Deadline_Floor,Pragma Default_Initial_Condition,Pragma CPU,Implementation Defined Pragmas\n+@node Pragma Deadline_Floor,Pragma Debug,Pragma CPU,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-deadline-floor}@anchor{4c}\n @section Pragma Deadline_Floor\n \n@@ -2838,22 +2838,8 @@ This pragma applies only to protected types and specifies the floor\n deadline inherited by a task when the task enters a protected object.\n It is effective only when the EDF scheduling policy is used.\n \n-@node Pragma Default_Initial_Condition,Pragma Debug,Pragma Deadline_Floor,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas id8}@anchor{4d}@anchor{gnat_rm/implementation_defined_pragmas pragma-default-initial-condition}@anchor{4e}\n-@section Pragma Default_Initial_Condition\n-\n-\n-Syntax:\n-\n-@example\n-pragma Default_Initial_Condition [ (null | boolean_EXPRESSION) ];\n-@end example\n-\n-For the semantics of this pragma, see the entry for aspect\n-@code{Default_Initial_Condition} in the SPARK 2014 Reference Manual, section 7.3.3.\n-\n-@node Pragma Debug,Pragma Debug_Policy,Pragma Default_Initial_Condition,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas pragma-debug}@anchor{4f}\n+@node Pragma Debug,Pragma Debug_Policy,Pragma Deadline_Floor,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas pragma-debug}@anchor{4d}\n @section Pragma Debug\n \n \n@@ -2880,8 +2866,8 @@ pragmas can be enabled either by use of the command line switch `-gnata'\n or by use of the pragma @code{Check_Policy} with a first argument of\n @code{Debug}.\n \n-@node Pragma Debug_Policy,Pragma Default_Scalar_Storage_Order,Pragma Debug,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas pragma-debug-policy}@anchor{50}\n+@node Pragma Debug_Policy,Pragma Default_Initial_Condition,Pragma Debug,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas pragma-debug-policy}@anchor{4e}\n @section Pragma Debug_Policy\n \n \n@@ -2895,7 +2881,21 @@ This pragma is equivalent to a corresponding @code{Check_Policy} pragma\n with a first argument of @code{Debug}. It is retained for historical\n compatibility reasons.\n \n-@node Pragma Default_Scalar_Storage_Order,Pragma Default_Storage_Pool,Pragma Debug_Policy,Implementation Defined Pragmas\n+@node Pragma Default_Initial_Condition,Pragma Default_Scalar_Storage_Order,Pragma Debug_Policy,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas id8}@anchor{4f}@anchor{gnat_rm/implementation_defined_pragmas pragma-default-initial-condition}@anchor{50}\n+@section Pragma Default_Initial_Condition\n+\n+\n+Syntax:\n+\n+@example\n+pragma Default_Initial_Condition [ (null | boolean_EXPRESSION) ];\n+@end example\n+\n+For the semantics of this pragma, see the entry for aspect\n+@code{Default_Initial_Condition} in the SPARK 2014 Reference Manual, section 7.3.3.\n+\n+@node Pragma Default_Scalar_Storage_Order,Pragma Default_Storage_Pool,Pragma Default_Initial_Condition,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-default-scalar-storage-order}@anchor{51}\n @section Pragma Default_Scalar_Storage_Order\n \n@@ -3608,16 +3608,19 @@ GNAT User\u2019s Guide.\n Syntax:\n \n @example\n-pragma Extensions_Allowed (On | Off);\n+pragma Extensions_Allowed (On | Off | All);\n @end example\n \n-This configuration pragma enables or disables the implementation\n-extension mode (the use of Off as a parameter cancels the effect\n-of the `-gnatX' command switch).\n+This configuration pragma enables (via the \u201cOn\u201d or \u201cAll\u201d argument) or disables\n+(via the \u201cOff\u201d argument) the implementation extension mode; the pragma takes\n+precedence over the `-gnatX' and `-gnatX0' command switches.\n \n-In extension mode, the latest version of the Ada language is\n-implemented (currently Ada 2022), and in addition a number\n-of GNAT specific extensions are recognized as follows:\n+If an argument of \u201cAll\u201d is specified, the latest version of the Ada language\n+is implemented (currently Ada 2022) and, in addition, a number\n+of GNAT specific extensions are recognized. These extensions are listed\n+below. An argument of \u201cOn\u201d has the same effect except that only\n+some, not all, of the listed extensions are enabled; those extensions\n+are identified below.\n \n \n @itemize *\n@@ -3636,11 +3639,7 @@ The Ada 202x @code{Static} aspect can be specified on Intrinsic imported\n functions and the compiler will evaluate some of these intrinsic statically,\n in particular the @code{Shift_Left} and @code{Shift_Right} intrinsics.\n \n-@item \n-@code{'Reduce} attribute\n-\n-This attribute part of the Ada 202x language definition is provided for\n-now under -gnatX to confirm and potentially refine its usage and syntax.\n+An Extensions_Allowed pragma argument of \u201cOn\u201d enables this extension.\n \n @item \n @code{[]} aggregates\n@@ -3785,6 +3784,8 @@ define the same set of bindings and the component subtypes for\n for a given identifer must all statically match. Currently, the case\n of a binding for a nondiscrete component is not implemented.\n \n+An Extensions_Allowed pragma argument of \u201cOn\u201d enables this extension.\n+\n @item \n Fixed lower bounds for array types and subtypes\n \n@@ -3833,6 +3834,8 @@ improve the efficiency of indexing operations, since the compiler statically\n knows the lower bound of unconstrained array formals when the formal\u2019s\n subtype has index ranges with static fixed lower bounds.\n \n+An Extensions_Allowed pragma argument of \u201cOn\u201d enables this extension.\n+\n @item \n Prefixed-view notation for calls to primitive subprograms of untagged types\n \n@@ -3851,6 +3854,8 @@ component is visible at the point of a selected_component using that\n name, preference is given to the component in a selected_component\n (as is currently the case for tagged types with such component names).\n \n+An Extensions_Allowed pragma argument of \u201cOn\u201d enables this extension.\n+\n @item \n Expression defaults for generic formal functions\n \n@@ -5384,7 +5389,7 @@ decrease or increase in successive iterations of the loop. In its simplest\n form, just one expression is specified, whose value must increase or decrease\n on each iteration of the loop.\n \n-In a more complex form, multiple arguments can be given which are intepreted\n+In a more complex form, multiple arguments can be given which are interpreted\n in a nesting lexicographic manner. For example:\n \n @example\n@@ -6101,7 +6106,7 @@ overflow checking, but does not affect the overflow mode.\n The pragma @code{Unsuppress (Overflow_Check)} unsuppresses (enables)\n overflow checking, but does not affect the overflow mode.\n \n-@node Pragma Overriding_Renamings,Pragma Partition_Elaboration_Policy,Pragma Overflow_Mode,Implementation Defined Pragmas\n+@node Pragma Overriding_Renamings,Pragma Part_Of,Pragma Overflow_Mode,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-overriding-renamings}@anchor{b0}\n @section Pragma Overriding_Renamings\n \n@@ -6136,40 +6141,40 @@ even though\n RM 8.3 (15) stipulates that an overridden operation is not visible within the\n declaration of the overriding operation.\n \n-@node Pragma Partition_Elaboration_Policy,Pragma Part_Of,Pragma Overriding_Renamings,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas pragma-partition-elaboration-policy}@anchor{b1}\n-@section Pragma Partition_Elaboration_Policy\n+@node Pragma Part_Of,Pragma Partition_Elaboration_Policy,Pragma Overriding_Renamings,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas id28}@anchor{b1}@anchor{gnat_rm/implementation_defined_pragmas pragma-part-of}@anchor{b2}\n+@section Pragma Part_Of\n \n \n Syntax:\n \n @example\n-pragma Partition_Elaboration_Policy (POLICY_IDENTIFIER);\n+pragma Part_Of (ABSTRACT_STATE);\n \n-POLICY_IDENTIFIER ::= Concurrent | Sequential\n+ABSTRACT_STATE ::= NAME\n @end example\n \n-This pragma is standard in Ada 2005, but is available in all earlier\n-versions of Ada as an implementation-defined pragma.\n-See Ada 2012 Reference Manual for details.\n+For the semantics of this pragma, see the entry for aspect @code{Part_Of} in the\n+SPARK 2014 Reference Manual, section 7.2.6.\n \n-@node Pragma Part_Of,Pragma Passive,Pragma Partition_Elaboration_Policy,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas id28}@anchor{b2}@anchor{gnat_rm/implementation_defined_pragmas pragma-part-of}@anchor{b3}\n-@section Pragma Part_Of\n+@node Pragma Partition_Elaboration_Policy,Pragma Passive,Pragma Part_Of,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas pragma-partition-elaboration-policy}@anchor{b3}\n+@section Pragma Partition_Elaboration_Policy\n \n \n Syntax:\n \n @example\n-pragma Part_Of (ABSTRACT_STATE);\n+pragma Partition_Elaboration_Policy (POLICY_IDENTIFIER);\n \n-ABSTRACT_STATE ::= NAME\n+POLICY_IDENTIFIER ::= Concurrent | Sequential\n @end example\n \n-For the semantics of this pragma, see the entry for aspect @code{Part_Of} in the\n-SPARK 2014 Reference Manual, section 7.2.6.\n+This pragma is standard in Ada 2005, but is available in all earlier\n+versions of Ada as an implementation-defined pragma.\n+See Ada 2012 Reference Manual for details.\n \n-@node Pragma Passive,Pragma Persistent_BSS,Pragma Part_Of,Implementation Defined Pragmas\n+@node Pragma Passive,Pragma Persistent_BSS,Pragma Partition_Elaboration_Policy,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-passive}@anchor{b4}\n @section Pragma Passive\n \n@@ -6442,7 +6447,7 @@ appear at the start of the declarations in a subprogram body\n Note: This pragma is called @code{Post_Class} rather than\n @code{Post'Class} because the latter would not be strictly\n conforming to the allowed syntax for pragmas. The motivation\n-for provinding pragmas equivalent to the aspects is to allow a program\n+for providing pragmas equivalent to the aspects is to allow a program\n to be written using the pragmas, and then compiled if necessary\n using an Ada compiler that does not recognize the pragmas or\n aspects, but is prepared to ignore the pragmas. The assertion\n@@ -7758,7 +7763,7 @@ replacement of any dots in the unit name by the specified string literal.\n \n Note that Source_File_Name pragmas should not be used if you are using\n project files. The reason for this rule is that the project manager is not\n-aware of these pragmas, and so other tools that use the projet file would not\n+aware of these pragmas, and so other tools that use the project file would not\n be aware of the intended naming conventions. If you are using project files,\n file naming is controlled by Source_File_Name_Project pragmas, which are\n usually supplied automatically by the project manager. A pragma\n@@ -8407,7 +8412,7 @@ pragma Thread_Local_Storage ([Entity =>] LOCAL_NAME);\n This pragma specifies that the specified entity, which must be\n a variable declared in a library-level package, is to be marked as\n \u201cThread Local Storage\u201d (@code{TLS}). On systems supporting this (which\n-include Windows, Solaris, GNU/Linux, and VxWorks 6), this causes each\n+include Windows, Solaris, GNU/Linux, and VxWorks), this causes each\n thread (and hence each Ada task) to see a distinct copy of the variable.\n \n The variable must not have default initialization, and if there is\n@@ -8785,7 +8790,7 @@ For a more general facility for controlling what interrupts can be\n handled, see pragma @code{Interrupt_State}, which subsumes the functionality\n of the @code{Unreserve_All_Interrupts} pragma.\n \n-@node Pragma Unsuppress,Pragma Use_VADS_Size,Pragma Unreserve_All_Interrupts,Implementation Defined Pragmas\n+@node Pragma Unsuppress,Pragma Unused,Pragma Unreserve_All_Interrupts,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-unsuppress}@anchor{10e}\n @section Pragma Unsuppress\n \n@@ -8817,36 +8822,12 @@ pragma Unsuppress (Duplicated_Tag_Check);\n This pragma is standard in Ada 2005. It is available in all earlier versions\n of Ada as an implementation-defined pragma.\n \n-Note that in addition to the checks defined in the Ada RM, GNAT recogizes a\n+Note that in addition to the checks defined in the Ada RM, GNAT recognizes a\n number of implementation-defined check names. See the description of pragma\n @code{Suppress} for full details.\n \n-@node Pragma Use_VADS_Size,Pragma Unused,Pragma Unsuppress,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas pragma-use-vads-size}@anchor{10f}\n-@section Pragma Use_VADS_Size\n-\n-\n-@geindex Size\n-@geindex VADS compatibility\n-\n-@geindex Rational profile\n-\n-Syntax:\n-\n-@example\n-pragma Use_VADS_Size;\n-@end example\n-\n-This is a configuration pragma.  In a unit to which it applies, any use\n-of the \u2018Size attribute is automatically interpreted as a use of the\n-\u2018VADS_Size attribute.  Note that this may result in incorrect semantic\n-processing of valid Ada 95 or Ada 2005 programs.  This is intended to aid in\n-the handling of existing code which depends on the interpretation of Size\n-as implemented in the VADS compiler.  See description of the VADS_Size\n-attribute for further details.\n-\n-@node Pragma Unused,Pragma Validity_Checks,Pragma Use_VADS_Size,Implementation Defined Pragmas\n-@anchor{gnat_rm/implementation_defined_pragmas id52}@anchor{110}@anchor{gnat_rm/implementation_defined_pragmas pragma-unused}@anchor{111}\n+@node Pragma Unused,Pragma Use_VADS_Size,Pragma Unsuppress,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas id52}@anchor{10f}@anchor{gnat_rm/implementation_defined_pragmas pragma-unused}@anchor{110}\n @section Pragma Unused\n \n \n@@ -8879,7 +8860,31 @@ are typically to be used in cases where such warnings are expected.\n Thus it is never necessary to use @code{pragma Unused} for such\n variables, though it is harmless to do so.\n \n-@node Pragma Validity_Checks,Pragma Volatile,Pragma Unused,Implementation Defined Pragmas\n+@node Pragma Use_VADS_Size,Pragma Validity_Checks,Pragma Unused,Implementation Defined Pragmas\n+@anchor{gnat_rm/implementation_defined_pragmas pragma-use-vads-size}@anchor{111}\n+@section Pragma Use_VADS_Size\n+\n+\n+@geindex Size\n+@geindex VADS compatibility\n+\n+@geindex Rational profile\n+\n+Syntax:\n+\n+@example\n+pragma Use_VADS_Size;\n+@end example\n+\n+This is a configuration pragma.  In a unit to which it applies, any use\n+of the \u2018Size attribute is automatically interpreted as a use of the\n+\u2018VADS_Size attribute.  Note that this may result in incorrect semantic\n+processing of valid Ada 95 or Ada 2005 programs.  This is intended to aid in\n+the handling of existing code which depends on the interpretation of Size\n+as implemented in the VADS compiler.  See description of the VADS_Size\n+attribute for further details.\n+\n+@node Pragma Validity_Checks,Pragma Volatile,Pragma Use_VADS_Size,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-validity-checks}@anchor{112}\n @section Pragma Validity_Checks\n \n@@ -9109,7 +9114,7 @@ expression (which does not exist in Ada 83).\n Note if the second argument of @code{DETAILS} is a @code{local_NAME} then the\n second form is always understood. If the intention is to use\n the fourth form, then you can write @code{NAME & \"\"} to force the\n-intepretation as a `static_string_EXPRESSION'.\n+interpretation as a `static_string_EXPRESSION'.\n \n Note: if the first argument is a valid @code{TOOL_NAME}, it will be interpreted\n that way. The use of the @code{TOOL_NAME} argument is relevant only to users\n@@ -9172,7 +9177,7 @@ also be used as a configuration pragma.\n The fourth form, with an @code{On|Off} parameter and a string, is used to\n control individual messages, based on their text. The string argument\n is a pattern that is used to match against the text of individual\n-warning messages (not including the initial \u201cwarning: \u201c tag).\n+warning messages (not including the initial \u201cwarning: \u201d tag).\n \n The pattern may contain asterisks, which match zero or more characters in\n the message. For example, you can use\n@@ -9531,7 +9536,7 @@ This aspect is equivalent to @ref{54,,pragma Depends}.\n \n @geindex Default_Initial_Condition\n \n-This aspect is equivalent to @ref{4e,,pragma Default_Initial_Condition}.\n+This aspect is equivalent to @ref{50,,pragma Default_Initial_Condition}.\n \n @node Aspect Dimension,Aspect Dimension_System,Aspect Default_Initial_Condition,Implementation Defined Aspects\n @anchor{gnat_rm/implementation_defined_aspects aspect-dimension}@anchor{129}\n@@ -9925,7 +9930,7 @@ This aspect is equivalent to @ref{141,,attribute Object_Size}.\n @section Aspect Obsolescent\n \n \n-@geindex Obsolsecent\n+@geindex Obsolescent\n \n This aspect is equivalent to @ref{ac,,pragma Obsolescent}. Note that the\n evaluation of this aspect happens at the point of occurrence, it is not\n@@ -9938,7 +9943,7 @@ delayed until the freeze point.\n \n @geindex Part_Of\n \n-This aspect is equivalent to @ref{b3,,pragma Part_Of}.\n+This aspect is equivalent to @ref{b2,,pragma Part_Of}.\n \n @node Aspect Persistent_BSS,Aspect Predicate,Aspect Part_Of,Implementation Defined Aspects\n @anchor{gnat_rm/implementation_defined_aspects aspect-persistent-bss}@anchor{144}\n@@ -10981,7 +10986,7 @@ this attribute.\n @code{P'Library_Level}, where P is an entity name,\n returns a Boolean value which is True if the entity is declared\n at the library level, and False otherwise. Note that within a\n-generic instantition, the name of the generic unit denotes the\n+generic instantiation, the name of the generic unit denotes the\n instance, which means that this attribute can be used to test\n if a generic is instantiated at the library level, as shown\n in this example:\n@@ -11707,7 +11712,7 @@ an implicit dependency on this unit.\n @geindex System_Allocator_Alignment\n \n @code{Standard'System_Allocator_Alignment} (@code{Standard} is the only\n-allowed prefix) provides the observable guaranted to be honored by\n+allowed prefix) provides the observable guaranteed to be honored by\n the system allocator (malloc). This is a static value that can be used\n in user storage pools based on malloc either to reject allocation\n with alignment too large or to enable a realignment circuitry if the\n@@ -17856,7 +17861,7 @@ a distributed application.\n \u201cThe range of type System.RPC.Partition_Id.  See E.5(14).\u201d\n @end itemize\n \n-System.RPC.Partion_ID\u2019Last is Integer\u2019Last. See source file @code{s-rpc.ads}.\n+System.RPC.Partition_ID\u2019Last is Integer\u2019Last. See source file @code{s-rpc.ads}.\n \n \n @itemize *\n@@ -20874,7 +20879,7 @@ This package provides operations on directories.\n @item @code{Ada.Directories.Hierarchical_File_Names} `(A.16.1)'\n \n This package provides additional directory operations handling\n-hiearchical file names.\n+hierarchical file names.\n \n @item @code{Ada.Directories.Information} `(A.16)'\n \n@@ -21340,7 +21345,7 @@ only the tag value.\n This package provides the capability of associating arbitrary\n task-specific data with separate tasks.\n \n-@item @code{Ada.Task_Identifification} `(C.7.1)'\n+@item @code{Ada.Task_Identification} `(C.7.1)'\n \n This package provides capabilities for task identification.\n \n@@ -23100,7 +23105,7 @@ of GNAT, and will generate a warning message.\n @menu\n * Ada.Characters.Latin_9 (a-chlat9.ads): Ada Characters Latin_9 a-chlat9 ads. \n * Ada.Characters.Wide_Latin_1 (a-cwila1.ads): Ada Characters Wide_Latin_1 a-cwila1 ads. \n-* Ada.Characters.Wide_Latin_9 (a-cwila1.ads): Ada Characters Wide_Latin_9 a-cwila1 ads. \n+* Ada.Characters.Wide_Latin_9 (a-cwila9.ads): Ada Characters Wide_Latin_9 a-cwila9 ads. \n * Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads): Ada Characters Wide_Wide_Latin_1 a-chzla1 ads. \n * Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads): Ada Characters Wide_Wide_Latin_9 a-chzla9 ads. \n * Ada.Containers.Bounded_Holders (a-coboho.ads): Ada Containers Bounded_Holders a-coboho ads. \n@@ -23219,8 +23224,8 @@ of GNAT, and will generate a warning message.\n * GNAT.Threads (g-thread.ads): GNAT Threads g-thread ads. \n * GNAT.Traceback (g-traceb.ads): GNAT Traceback g-traceb ads. \n * GNAT.Traceback.Symbolic (g-trasym.ads): GNAT Traceback Symbolic g-trasym ads. \n-* GNAT.UTF_32 (g-table.ads): GNAT UTF_32 g-table ads. \n-* GNAT.Wide_Spelling_Checker (g-u3spch.ads): GNAT Wide_Spelling_Checker g-u3spch ads. \n+* GNAT.UTF_32 (g-utf_32.ads): GNAT UTF_32 g-utf_32 ads. \n+* GNAT.UTF_32_Spelling_Checker (g-u3spch.ads): GNAT UTF_32_Spelling_Checker g-u3spch ads. \n * GNAT.Wide_Spelling_Checker (g-wispch.ads): GNAT Wide_Spelling_Checker g-wispch ads. \n * GNAT.Wide_String_Split (g-wistsp.ads): GNAT Wide_String_Split g-wistsp ads. \n * GNAT.Wide_Wide_Spelling_Checker (g-zspche.ads): GNAT Wide_Wide_Spelling_Checker g-zspche ads. \n@@ -23261,12 +23266,12 @@ of GNAT, and will generate a warning message.\n This child of @code{Ada.Characters}\n provides a set of definitions corresponding to those in the\n RM-defined package @code{Ada.Characters.Latin_1} but with the\n-few modifications required for @code{Latin-9}\n+few modifications required for @code{Latin-9}.\n The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n-@node Ada Characters Wide_Latin_1 a-cwila1 ads,Ada Characters Wide_Latin_9 a-cwila1 ads,Ada Characters Latin_9 a-chlat9 ads,The GNAT Library\n+@node Ada Characters Wide_Latin_1 a-cwila1 ads,Ada Characters Wide_Latin_9 a-cwila9 ads,Ada Characters Latin_9 a-chlat9 ads,The GNAT Library\n @anchor{gnat_rm/the_gnat_library ada-characters-wide-latin-1-a-cwila1-ads}@anchor{2d9}@anchor{gnat_rm/the_gnat_library id3}@anchor{2da}\n @section @code{Ada.Characters.Wide_Latin_1} (@code{a-cwila1.ads})\n \n@@ -23283,12 +23288,12 @@ instead of @code{Character}.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n-@node Ada Characters Wide_Latin_9 a-cwila1 ads,Ada Characters Wide_Wide_Latin_1 a-chzla1 ads,Ada Characters Wide_Latin_1 a-cwila1 ads,The GNAT Library\n-@anchor{gnat_rm/the_gnat_library ada-characters-wide-latin-9-a-cwila1-ads}@anchor{2db}@anchor{gnat_rm/the_gnat_library id4}@anchor{2dc}\n-@section @code{Ada.Characters.Wide_Latin_9} (@code{a-cwila1.ads})\n+@node Ada Characters Wide_Latin_9 a-cwila9 ads,Ada Characters Wide_Wide_Latin_1 a-chzla1 ads,Ada Characters Wide_Latin_1 a-cwila1 ads,The GNAT Library\n+@anchor{gnat_rm/the_gnat_library ada-characters-wide-latin-9-a-cwila9-ads}@anchor{2db}@anchor{gnat_rm/the_gnat_library id4}@anchor{2dc}\n+@section @code{Ada.Characters.Wide_Latin_9} (@code{a-cwila9.ads})\n \n \n-@geindex Ada.Characters.Wide_Latin_9 (a-cwila1.ads)\n+@geindex Ada.Characters.Wide_Latin_9 (a-cwila9.ads)\n \n @geindex Latin_9 constants for Wide_Character\n \n@@ -23300,7 +23305,7 @@ instead of @code{Character}.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n-@node Ada Characters Wide_Wide_Latin_1 a-chzla1 ads,Ada Characters Wide_Wide_Latin_9 a-chzla9 ads,Ada Characters Wide_Latin_9 a-cwila1 ads,The GNAT Library\n+@node Ada Characters Wide_Wide_Latin_1 a-chzla1 ads,Ada Characters Wide_Wide_Latin_9 a-chzla9 ads,Ada Characters Wide_Latin_9 a-cwila9 ads,The GNAT Library\n @anchor{gnat_rm/the_gnat_library ada-characters-wide-wide-latin-1-a-chzla1-ads}@anchor{2dd}@anchor{gnat_rm/the_gnat_library id5}@anchor{2de}\n @section @code{Ada.Characters.Wide_Wide_Latin_1} (@code{a-chzla1.ads})\n \n@@ -23374,8 +23379,8 @@ where this concept makes sense.\n This child of @code{Ada.Command_Line}\n provides a mechanism for logically removing\n arguments from the argument list.  Once removed, an argument is not visible\n-to further calls on the subprograms in @code{Ada.Command_Line} will not\n-see the removed argument.\n+to further calls to the subprograms in @code{Ada.Command_Line}. These calls\n+will not see the removed argument.\n \n @node Ada Command_Line Response_File a-clrefi ads,Ada Direct_IO C_Streams a-diocst ads,Ada Command_Line Remove a-colire ads,The GNAT Library\n @anchor{gnat_rm/the_gnat_library ada-command-line-response-file-a-clrefi-ads}@anchor{2e7}@anchor{gnat_rm/the_gnat_library id10}@anchor{2e8}\n@@ -24067,7 +24072,7 @@ obtaining information about exceptions provided by Ada 83 compilers.\n \n @geindex Memory corruption debugging\n \n-Provide a debugging storage pools that helps tracking memory corruption\n+Provides a debugging storage pools that helps tracking memory corruption\n problems.\n See @code{The GNAT Debug_Pool Facility} section in the @cite{GNAT User\u2019s Guide}.\n \n@@ -24280,7 +24285,7 @@ a message from a subprogram in a pure package, since the\n necessary types and subprograms are in @code{Ada.Exceptions}\n which is not a pure unit. @code{GNAT.Exceptions} provides a\n facility for getting around this limitation for a few\n-predefined exceptions, and for example allow raising\n+predefined exceptions, and for example allows raising\n @code{Constraint_Error} with a message from a pure subprogram.\n \n @node GNAT Expect g-expect ads,GNAT Expect TTY g-exptty ads,GNAT Exceptions g-except ads,The GNAT Library\n@@ -24335,7 +24340,7 @@ in this package can be used to reestablish the required mode.\n @geindex Formatted String\n \n Provides support for C/C++ printf() formatted strings. The format is\n-copied from the printf() routine and should therefore gives identical\n+copied from the printf() routine and should therefore give identical\n output. Some generic routines are provided to be able to use types\n derived from Integer, Float or enumerations as values for the\n formatted string.\n@@ -24552,7 +24557,7 @@ Provides a generator of static minimal perfect hash functions. No\n collisions occur and each item can be retrieved from the table in one\n probe (perfect property). The hash table size corresponds to the exact\n size of the key set and no larger (minimal property). The key set has to\n-be know in advance (static property). The hash functions are also order\n+be known in advance (static property). The hash functions are also order\n preserving. If w2 is inserted after w1 in the generator, their\n hashcode are in the same order. These hashing functions are very\n convenient for use with realtime applications.\n@@ -24637,7 +24642,7 @@ this interface usable for large files or socket streams.\n \n @geindex Secondary Stack Info\n \n-Provide the capability to query the high water mark of the current task\u2019s\n+Provides the capability to query the high water mark of the current task\u2019s\n secondary stack.\n \n @node GNAT Semaphores g-semaph ads,GNAT Serial_Communications g-sercom ads,GNAT Secondary_Stack_Info g-sestin ads,The GNAT Library\n@@ -24752,7 +24757,7 @@ targets.\n A high level and portable interface to develop sockets based applications.\n This package is based on the sockets thin binding found in\n @code{GNAT.Sockets.Thin}. Currently @code{GNAT.Sockets} is implemented\n-on all native GNAT ports and on VxWorks cross prots.  It is not implemented for\n+on all native GNAT ports and on VxWorks cross ports.  It is not implemented for\n the LynxOS cross port.\n \n @node GNAT Source_Info g-souinf ads,GNAT Spelling_Checker g-speche ads,GNAT Sockets g-socket ads,The GNAT Library\n@@ -25012,7 +25017,7 @@ environment which then accesses Ada code.\n Provides a facility for obtaining non-symbolic traceback information, useful\n in various debugging situations.\n \n-@node GNAT Traceback Symbolic g-trasym ads,GNAT UTF_32 g-table ads,GNAT Traceback g-traceb ads,The GNAT Library\n+@node GNAT Traceback Symbolic g-trasym ads,GNAT UTF_32 g-utf_32 ads,GNAT Traceback g-traceb ads,The GNAT Library\n @anchor{gnat_rm/the_gnat_library gnat-traceback-symbolic-g-trasym-ads}@anchor{3c6}@anchor{gnat_rm/the_gnat_library id122}@anchor{3c7}\n @section @code{GNAT.Traceback.Symbolic} (@code{g-trasym.ads})\n \n@@ -25021,12 +25026,12 @@ in various debugging situations.\n \n @geindex Trace back facilities\n \n-@node GNAT UTF_32 g-table ads,GNAT Wide_Spelling_Checker g-u3spch ads,GNAT Traceback Symbolic g-trasym ads,The GNAT Library\n-@anchor{gnat_rm/the_gnat_library gnat-utf-32-g-table-ads}@anchor{3c8}@anchor{gnat_rm/the_gnat_library id123}@anchor{3c9}\n-@section @code{GNAT.UTF_32} (@code{g-table.ads})\n+@node GNAT UTF_32 g-utf_32 ads,GNAT UTF_32_Spelling_Checker g-u3spch ads,GNAT Traceback Symbolic g-trasym ads,The GNAT Library\n+@anchor{gnat_rm/the_gnat_library gnat-utf-32-g-utf-32-ads}@anchor{3c8}@anchor{gnat_rm/the_gnat_library id123}@anchor{3c9}\n+@section @code{GNAT.UTF_32} (@code{g-utf_32.ads})\n \n \n-@geindex GNAT.UTF_32 (g-table.ads)\n+@geindex GNAT.UTF_32 (g-utf_32.ads)\n \n @geindex Wide character codes\n \n@@ -25040,20 +25045,20 @@ lexical rules for identifiers and strings, and also a\n lower case to upper case fold routine corresponding to\n the Ada 2005 rules for identifier equivalence.\n \n-@node GNAT Wide_Spelling_Checker g-u3spch ads,GNAT Wide_Spelling_Checker g-wispch ads,GNAT UTF_32 g-table ads,The GNAT Library\n-@anchor{gnat_rm/the_gnat_library gnat-wide-spelling-checker-g-u3spch-ads}@anchor{3ca}@anchor{gnat_rm/the_gnat_library id124}@anchor{3cb}\n-@section @code{GNAT.Wide_Spelling_Checker} (@code{g-u3spch.ads})\n+@node GNAT UTF_32_Spelling_Checker g-u3spch ads,GNAT Wide_Spelling_Checker g-wispch ads,GNAT UTF_32 g-utf_32 ads,The GNAT Library\n+@anchor{gnat_rm/the_gnat_library gnat-utf-32-spelling-checker-g-u3spch-ads}@anchor{3ca}@anchor{gnat_rm/the_gnat_library id124}@anchor{3cb}\n+@section @code{GNAT.UTF_32_Spelling_Checker} (@code{g-u3spch.ads})\n \n \n-@geindex GNAT.Wide_Spelling_Checker (g-u3spch.ads)\n+@geindex GNAT.UTF_32_Spelling_Checker (g-u3spch.ads)\n \n @geindex Spell checking\n \n Provides a function for determining whether one wide wide string is a plausible\n near misspelling of another wide wide string, where the strings are represented\n using the UTF_32_String type defined in System.Wch_Cnv.\n \n-@node GNAT Wide_Spelling_Checker g-wispch ads,GNAT Wide_String_Split g-wistsp ads,GNAT Wide_Spelling_Checker g-u3spch ads,The GNAT Library\n+@node GNAT Wide_Spelling_Checker g-wispch ads,GNAT Wide_String_Split g-wistsp ads,GNAT UTF_32_Spelling_Checker g-u3spch ads,The GNAT Library\n @anchor{gnat_rm/the_gnat_library gnat-wide-spelling-checker-g-wispch-ads}@anchor{3cc}@anchor{gnat_rm/the_gnat_library id125}@anchor{3cd}\n @section @code{GNAT.Wide_Spelling_Checker} (@code{g-wispch.ads})\n \n@@ -29032,11 +29037,122 @@ For each block that is marked as visited, the mechanism checks that at\n least one of its predecessors, and at least one of its successors, are\n also marked as visited.\n \n-Verification is performed just before returning.  Subprogram\n-executions that complete by raising or propagating an exception bypass\n-verification-and-return points.  A subprogram that can only complete\n-by raising or propagating an exception may have instrumentation\n-disabled altogether.\n+Verification is performed just before a subprogram returns.  The\n+following fragment:\n+\n+@example\n+if X then\n+  Y := F (Z);\n+  return;\n+end if;\n+@end example\n+\n+gets turned into:\n+\n+@example\n+type Visited_Bitmap is array (1..N) of Boolean with Pack;\n+Visited : aliased Visited_Bitmap := (others => False);\n+--  Bitmap of visited blocks.  N is the basic block count.\n+[...]\n+--  Basic block #I\n+Visited(I) := True;\n+if X then\n+  --  Basic block #J\n+  Visited(J) := True;\n+  Y := F (Z);\n+  CFR.Check (N, Visited'Access, CFG'Access);\n+  --  CFR is a hypothetical package whose Check procedure calls\n+  --  libgcc's __hardcfr_check, that traps if the Visited bitmap\n+  --  does not hold a valid path in CFG, the run-time\n+  --  representation of the control flow graph in the enclosing\n+  --  subprogram.\n+  return;\n+end if;\n+--  Basic block #K\n+Visited(K) := True;\n+@end example\n+\n+Verification would also be performed before tail calls, if any\n+front-ends marked them as mandatory or desirable, but none do.\n+Regular calls are optimized into tail calls too late for this\n+transformation to act on it.\n+\n+In order to avoid adding verification after potential tail calls,\n+which would prevent tail-call optimization, we recognize returning\n+calls, i.e., calls whose result, if any, is returned by the calling\n+subprogram to its caller immediately after the call returns.\n+Verification is performed before such calls, whether or not they are\n+ultimately optimized to tail calls.  This behavior is enabled by\n+default whenever sibcall optimization is enabled (see\n+@code{-foptimize-sibling-calls}); it may be disabled with\n+@code{-fno-hardcfr-check-returning-calls}, or enabled with\n+@code{-fhardcfr-check-returning-calls}, regardless of the\n+optimization, but the lack of other optimizations may prevent calls\n+from being recognized as returning calls:\n+\n+@example\n+--  CFR.Check here, with -fhardcfr-check-returning-calls.\n+P (X);\n+--  CFR.Check here, with -fno-hardcfr-check-returning-calls.\n+return;\n+@end example\n+\n+or:\n+\n+@example\n+--  CFR.Check here, with -fhardcfr-check-returning-calls.\n+R := F (X);\n+--  CFR.Check here, with -fno-hardcfr-check-returning-calls.\n+return R;\n+@end example\n+\n+Any subprogram from which an exception may escape, i.e., that may\n+raise or propagate an exception that isn\u2019t handled internally, is\n+conceptually enclosed by a cleanup handler that performs verification,\n+unless this is disabled with @code{-fno-hardcfr-check-exceptions}.\n+With this feature enabled, a subprogram body containing:\n+\n+@example\n+--  ...\n+  Y := F (X);  -- May raise exceptions.\n+--  ...\n+  raise E;  -- Not handled internally.\n+--  ...\n+@end example\n+\n+gets modified as follows:\n+\n+@example\n+begin\n+  --  ...\n+    Y := F (X);  -- May raise exceptions.\n+  --  ...\n+    raise E;  -- Not handled internally.\n+  --  ...\n+exception\n+  when others =>\n+    CFR.Check (N, Visited'Access, CFG'Access);\n+    raise;\n+end;\n+@end example\n+\n+Verification may also be performed before No_Return calls, whether\n+only nothrow ones, with\n+@code{-fhardcfr-check-noreturn-calls=nothrow}, or all of them, with\n+@code{-fhardcfr-check-noreturn-calls=always}.  The default is\n+@code{-fhardcfr-check-noreturn-calls=never} for this feature, that\n+disables checking before No_Return calls.\n+\n+When a No_Return call returns control to its caller through an\n+exception, verification may have already been performed before the\n+call, if @code{-fhardcfr-check-noreturn-calls=always} is in effect.\n+The compiler arranges for already-checked No_Return calls without a\n+preexisting handler to bypass the implicitly-added cleanup handler and\n+thus the redundant check, but a local exception or cleanup handler, if\n+present, will modify the set of visited blocks, and checking will take\n+place again when the caller reaches the next verification point,\n+whether it is a return or reraise statement after the exception is\n+otherwise handled, or even another No_Return call.\n \n The instrumentation for hardening with control flow redundancy can be\n observed in dump files generated by the command-line option"}, {"sha": "dfe44b0937c0b04e74f47b768f8b73c0b348fb46", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 115, "deletions": 49, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -3,7 +3,7 @@\n @setfilename gnat_ugn.info\n @documentencoding UTF-8\n @ifinfo\n-@*Generated by Sphinx 5.1.1.@*\n+@*Generated by Sphinx 5.2.3.@*\n @end ifinfo\n @settitle GNAT User's Guide for Native Platforms\n @defindex ge\n@@ -19,7 +19,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Sep 26, 2022\n+GNAT User's Guide for Native Platforms , Dec 01, 2022\n \n AdaCore\n \n@@ -9881,7 +9881,17 @@ Suppress generation of cross-reference information.\n \n @item @code{-gnatX}\n \n-Enable GNAT implementation extensions and latest Ada version.\n+Enable core GNAT implementation extensions and latest Ada version.\n+@end table\n+\n+@geindex -gnatX0 (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatX0}\n+\n+Enable all GNAT implementation extensions and latest Ada version.\n @end table\n \n @geindex -gnaty (gcc)\n@@ -10722,6 +10732,9 @@ switch are:\n @item \n @code{-gnatw.q} (questionable layout of record types)\n \n+@item \n+@code{-gnatw_q} (ignored equality)\n+\n @item \n @code{-gnatw_r} (out-of-order record representation clauses)\n \n@@ -10912,7 +10925,7 @@ This switch activates warnings for conditional expressions used in\n tests that are known to be True or False at compile time. The default\n is that such warnings are not generated.\n Note that this warning does\n-not get issued for the use of boolean variables or constants whose\n+not get issued for the use of boolean constants whose\n values are known at compile time, since this is a standard technique\n for conditional compilation in Ada, and this would generate too many\n false positive warnings.\n@@ -11087,7 +11100,7 @@ of the pragma @code{Restriction_Warnings}.\n `[warning-as-error]'\n Used to tag warning messages that have been converted to error messages by\n use of the pragma Warning_As_Error. Note that such warnings are prefixed by\n-the string \u201cerror: \u201c rather than \u201cwarning: \u201c.\n+the string \u201cerror: \u201d rather than \u201cwarning: \u201c.\n \n @item \n `[enabled by default]'\n@@ -11292,8 +11305,13 @@ This switch suppresses warnings on hiding declarations.\n \n This switch activates warnings on component clauses in record\n representation clauses that leave holes (gaps) in the record layout.\n-If this warning option is active, then record representation clauses\n-should specify a contiguous layout, adding unused fill fields if needed.\n+If a record representation clause does not specify a location for\n+every component of the record type, then the warnings generated (or not\n+generated) are unspecified. For example, there may be gaps for which\n+either no warning is generated or a warning is generated that\n+incorrectly describes the location of the gap. This undesirable situation\n+can sometimes be avoided by adding (and specifying the location for) unused\n+fill fields.\n @end table\n \n @geindex -gnatw.H (gcc)\n@@ -11938,6 +11956,34 @@ This switch suppresses warnings for cases where the default layout of\n a record type would very likely cause inefficiencies.\n @end table\n \n+@geindex -gnatw_q (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatw_q}\n+\n+`Activate warnings for ignored equality operators.'\n+\n+This switch activates warnings for a user-defined \u201c=\u201d function that does\n+not compose (i.e. is ignored for a predefined \u201c=\u201d for a composite type\n+containing a component whose type has the user-defined \u201c=\u201d as\n+primitive). Note that the user-defined \u201c=\u201d must be a primitive operator\n+in order to trigger the warning.\n+\n+The default is that these warnings are not given.\n+@end table\n+\n+@geindex -gnatw_Q (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatw_Q}\n+\n+`Suppress warnings for ignored equality operators.'\n+@end table\n+\n @geindex -gnatwr (gcc)\n \n \n@@ -14416,7 +14462,7 @@ This switch directs the compiler to implement the Ada 2022 version of the\n language.\n @end table\n \n-@geindex -gnatX (gcc)\n+@geindex -gnatX0 (gcc)\n \n @geindex Ada language extensions\n \n@@ -14425,14 +14471,32 @@ language.\n \n @table @asis\n \n-@item @code{-gnatX} (Enable GNAT Extensions)\n+@item @code{-gnatX0} (Enable GNAT Extensions)\n \n This switch directs the compiler to implement the latest version of the\n language (currently Ada 2022) and also to enable certain GNAT implementation\n extensions that are not part of any Ada standard. For a full list of these\n extensions, see the GNAT reference manual, @code{Pragma Extensions_Allowed}.\n @end table\n \n+@geindex -gnatX (gcc)\n+\n+@geindex Ada language extensions\n+\n+@geindex GNAT extensions\n+\n+\n+@table @asis\n+\n+@item @code{-gnatX} (Enable core GNAT Extensions)\n+\n+This switch is similar to -gnatX0 except that only some, not all, of the\n+GNAT-defined language extensions are enabled. For a list of the\n+extensions enabled by this switch, see the GNAT reference manual\n+@code{Pragma Extensions_Allowed} and the description of that pragma\u2019s\n+\u201cOn\u201d (as opposed to \u201cAll\u201d) argument.\n+@end table\n+\n @node Character Set Control,File Naming Control,Compiling Different Versions of Ada,Compiler Switches\n @anchor{gnat_ugn/building_executable_programs_with_gnat character-set-control}@anchor{31}@anchor{gnat_ugn/building_executable_programs_with_gnat id23}@anchor{fb}\n @subsection Character Set Control\n@@ -16689,7 +16753,7 @@ development environments much more flexible.\n @subsection Examples of @code{gnatbind} Usage\n \n \n-Here are some examples of @code{gnatbind} invovations:\n+Here are some examples of @code{gnatbind} invocations:\n \n @quotation\n \n@@ -17934,7 +17998,6 @@ instr.ads\n \n \n \n-\n @c -- Example: A |withing| unit has a |with| clause, it |withs| a |withed| unit\n \n @node GNAT and Program Execution,Platform-Specific Information,GNAT Utility Programs,Top\n@@ -19065,16 +19128,18 @@ bug occurs, and then be able to retrieve the sequence of calls with the same\n program compiled with debug information.\n \n However the @code{addr2line} tool does not work with Position-Independent Code\n-(PIC), the historical example being Windows DLLs, which nowadays encompasses\n-Position-Independent Executables (PIE) on recent Windows versions.\n+(PIC), the historical example being Linux dynamic libraries and Windows DLLs,\n+which nowadays encompasse Position-Independent Executables (PIE) on recent\n+Linux and Windows versions.\n \n-In order to translate addresses into the source lines with Position-Independent\n-Executables on recent Windows versions, in other words without using the switch\n-@code{-no-pie} during linking, you need to use the @code{gnatsymbolize} tool\n-with @code{--load} instead of the @code{addr2line} tool. The main difference\n-is that you need to copy the Load Address output in the traceback ahead of the\n-sequence of addresses. And the default mode of @code{gnatsymbolize} is equivalent\n-to that of @code{addr2line} with the above switches, so none of them is needed:\n+In order to translate addresses the source lines with Position-Independent\n+Executables on recent Linux and Windows versions, in other words without\n+using the switch @code{-no-pie} during linking, you need to use the\n+@code{gnatsymbolize} tool with @code{--load} instead of the @code{addr2line}\n+tool. The main difference is that you need to copy the Load Address output\n+in the traceback ahead of the sequence of addresses. And the default mode\n+of @code{gnatsymbolize} is equivalent to that of @code{addr2line} with the above\n+switches, so none of them is needed:\n \n @example\n $ gnatmake stb -g -bargs -E\n@@ -19086,7 +19151,7 @@ Load address: 0x400000\n Call stack traceback locations:\n 0x401373 0x40138b 0x40139c 0x401335 0x4011c4 0x4011f1 0x77e892a4\n \n-$ gnatsymbolize --load stb 0x400000 0x401373 0x40138b 0x40139c 0x401335\n+$ gnatsymbolize --load stb 0x400000 0x401373 0x40138b 0x40139c 0x401335 \\\n    0x4011c4 0x4011f1 0x77e892a4\n \n 0x00401373 Stb.P1 at stb.adb:5\n@@ -19135,13 +19200,9 @@ begin\n    P2;\n end STB;\n @end example\n-@end quotation\n-\n-This program will output:\n-\n-@quotation\n \n @example\n+$ gnatmake stb -g -bargs -E -largs -no-pie\n $ stb\n \n raised CONSTRAINT_ERROR : stb.adb:12 range check failed\n@@ -19171,12 +19232,17 @@ addresses to strings:\n with Ada.Text_IO;\n with GNAT.Traceback;\n with GNAT.Debug_Utilities;\n+with System;\n \n procedure STB is\n \n    use Ada;\n+   use Ada.Text_IO;\n    use GNAT;\n    use GNAT.Traceback;\n+   use System;\n+\n+   LA : constant Address := Executable_Load_Address;\n \n    procedure P1 is\n       TB  : Tracebacks_Array (1 .. 10);\n@@ -19186,14 +19252,14 @@ procedure STB is\n    begin\n       Call_Chain (TB, Len);\n \n-      Text_IO.Put (\"In STB.P1 : \");\n+      Put (\"In STB.P1 : \");\n \n       for K in 1 .. Len loop\n-         Text_IO.Put (Debug_Utilities.Image (TB (K)));\n-         Text_IO.Put (' ');\n+         Put (Debug_Utilities.Image_C (TB (K)));\n+         Put (' ');\n       end loop;\n \n-      Text_IO.New_Line;\n+      New_Line;\n    end P1;\n \n    procedure P2 is\n@@ -19202,6 +19268,10 @@ procedure STB is\n    end P2;\n \n begin\n+   if LA /= Null_Address then\n+      Put_Line (\"Load address: \" & Debug_Utilities.Image_C (LA));\n+   end if;\n+\n    P2;\n end STB;\n @end example\n@@ -19210,8 +19280,9 @@ end STB;\n $ gnatmake stb -g\n $ stb\n \n-In STB.P1 : 16#0040_F1E4# 16#0040_14F2# 16#0040_170B# 16#0040_171C#\n-16#0040_1461# 16#0040_11C4# 16#0040_11F1# 16#77E8_92A4#\n+Load address: 0x400000\n+In STB.P1 : 0x40F1E4 0x4014F2 0x40170B 0x40171C 0x401461 0x4011C4 \\\n+  0x4011F1 0x77E892A4\n @end example\n @end quotation\n \n@@ -19275,7 +19346,7 @@ end STB;\n @end example\n \n @example\n-$ gnatmake -g .\\stb -bargs -E\n+$ gnatmake -g stb -bargs -E\n $ stb\n \n 0040149F in stb.p1 at stb.adb:8\n@@ -19289,15 +19360,6 @@ $ stb\n @end example\n @end quotation\n \n-In the above example the @code{.\\} syntax in the @code{gnatmake} command\n-is currently required by @code{addr2line} for files that are in\n-the current working directory.\n-Moreover, the exact sequence of linker options may vary from platform\n-to platform.\n-The above @code{-largs} section is for Windows platforms. By contrast,\n-under Unix there is no need for the @code{-largs} section.\n-Differences across platforms are due to details of linker implementation.\n-\n @subsubheading Tracebacks From Anywhere in a Program\n \n \n@@ -19493,10 +19555,10 @@ It is currently supported on the following platforms\n @itemize *\n \n @item \n-linux x86/x86_64\n+Linux x86/x86_64\n \n @item \n-windows x86\n+Windows x86/x86_64 (without PIE support)\n @end itemize\n \n In order to profile a program using @code{gprof}, several steps are needed:\n@@ -19555,6 +19617,9 @@ Note that only the objects that were compiled with the @code{-pg} switch will\n be profiled; if you need to profile your whole project, use the @code{-f}\n gnatmake switch to force full recompilation.\n \n+Note that on Windows, gprof does not support PIE. The @code{-no-pie} switch\n+should be added to the linker flags to disable this feature.\n+\n @node Program execution,Running gprof,Compilation for profiling,Profiling an Ada Program with gprof\n @anchor{gnat_ugn/gnat_and_program_execution id23}@anchor{175}@anchor{gnat_ugn/gnat_and_program_execution program-execution}@anchor{176}\n @subsubsection Program execution\n@@ -20765,7 +20830,7 @@ erroneous, and the compiler would be entitled to assume that\n \n However, in practice, this would cause some existing code that\n seems to work with no optimization to start failing at high\n-levels of optimzization.\n+levels of optimization.\n \n What the compiler does for such cases is to assume that marking\n a variable as aliased indicates that some \u201cfunny business\u201d may\n@@ -21216,7 +21281,7 @@ To deal with the portability issue, and with the problem of\n mathematical versus run-time interpretation of the expressions in\n assertions, GNAT provides comprehensive control over the handling\n of intermediate overflow. GNAT can operate in three modes, and\n-furthemore, permits separate selection of operating modes for\n+furthermore, permits separate selection of operating modes for\n the expressions within assertions (here the term \u2018assertions\u2019\n is used in the technical sense, which includes preconditions and so forth)\n and for expressions appearing outside assertions.\n@@ -27296,8 +27361,9 @@ change pragma Elaborate_All for unit \"...\" to Elaborate in unit \"...\"\n @end example\n \n This tactic is always suggested with the pragma @code{Elaborate_All} elimination\n-tactic. It offers a different alernative of guaranteeing that the argument of\n-the pragma will still be elaborated prior to the unit containing the pragma.\n+tactic. It offers a different alternative of guaranteeing that the argument\n+of the pragma will still be elaborated prior to the unit containing the\n+pragma.\n \n The programmer should update the pragma as advised, and rebuild the program.\n \n@@ -27670,7 +27736,7 @@ checks. The example above will still fail at run time with an ABE.\n \n A programmer should first compile the program with the default options, using\n none of the binder or compiler switches. If the binder succeeds in finding an\n-elaboration order, then apart from possible cases involing dispatching calls\n+elaboration order, then apart from possible cases involving dispatching calls\n and access-to-subprogram types, the program is free of elaboration errors.\n \n If it is important for the program to be portable to compilers other than GNAT,"}, {"sha": "509b4d368a81520ab3add660f764ec332b413c8a", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -215,6 +215,9 @@ procedure Gnatbind is\n          No_Specification_Of_Aspect      => False,\n          --  Requires a parameter value, not a count\n \n+         No_Task_Hierarchy_Implicit      => False,\n+         --  A compiler implementation artifact, not a documented restriction\n+\n          No_Use_Of_Attribute             => False,\n          --  Requires a parameter value, not a count\n "}, {"sha": "d33f5b4558e33c3ebf8ee9d1f4c8c0b607f45912", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -3013,14 +3013,10 @@ package body Inline is\n             Temp_Typ := Etype (A);\n          end if;\n \n-         --  If the actual is a simple name or a literal, no need to\n-         --  create a temporary, object can be used directly.\n-\n-         --  If the actual is a literal and the formal has its address taken,\n-         --  we cannot pass the literal itself as an argument, so its value\n-         --  must be captured in a temporary. Skip this optimization in\n-         --  GNATprove mode, to make sure any check on a type conversion\n-         --  will be issued.\n+         --  If the actual is a simple name or a literal, no need to create a\n+         --  temporary, object can be used directly. Skip this optimization in\n+         --  GNATprove mode, to make sure any check on a type conversion will\n+         --  be issued.\n \n          if (Is_Entity_Name (A)\n               and then\n@@ -3039,6 +3035,10 @@ package body Inline is\n                and then Formal_Is_Used_Once (F)\n                and then not GNATprove_Mode)\n \n+         --  If the actual is a literal and the formal has its address taken,\n+         --  we cannot pass the literal itself as an argument, so its value\n+         --  must be captured in a temporary.\n+\n            or else\n              (Nkind (A) in\n                 N_Real_Literal | N_Integer_Literal | N_Character_Literal\n@@ -4723,8 +4723,8 @@ package body Inline is\n       --------------------\n \n       function Replace_Formal (N : Node_Id) return Traverse_Result is\n-         A   : Entity_Id;\n-         E   : Entity_Id;\n+         A : Entity_Id;\n+         E : Entity_Id;\n \n       begin\n          if Is_Entity_Name (N) and then Present (Entity (N)) then"}, {"sha": "82d48077625fe5508ce2028cf15c89eff194d3b1", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -94,7 +94,7 @@ package Inline is\n       --  This means we have to capture this information from the current scope\n       --  at the point of instantiation.\n \n-      Warnings : Warning_Record;\n+      Warnings : Warnings_State;\n       --  Capture values of warning flags\n    end record;\n "}, {"sha": "b352c0643f4da020845cfc2b7eab31652a980369", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -40,6 +40,7 @@ with Sinfo.Utils;    use Sinfo.Utils;\n with Snames;         use Snames;\n with Ttypes;         use Ttypes;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n package body Layout is\n \n@@ -500,7 +501,7 @@ package body Layout is\n          if Is_Array_Type (E)\n            and then Present (First_Index (E))  --  Skip types in error\n            and then Number_Dimensions (E) = 1\n-           and then not Present (Packed_Array_Impl_Type (E))\n+           and then No (Packed_Array_Impl_Type (E))\n            and then Has_Pragma_Pack (E)\n            and then Is_Constrained (E)\n            and then Compile_Time_Known_Bounds (E)"}, {"sha": "182ea2fa9ec1bf68a2cd48225ecbac82ee959047", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -47,6 +47,7 @@ with Snames;         use Snames;\n with Stringt;        use Stringt;\n with Stand;          use Stand;\n with Table;          use Table;\n+with Warnsw;         use Warnsw;\n \n with GNAT.Heap_Sort_G;\n with GNAT.HTable;\n@@ -775,7 +776,7 @@ package body Lib.Xref is\n                Set_Referenced_As_LHS (E, False);\n \n             --  For OUT parameter not covered by the above cases, we simply\n-            --  regard it as a non-reference.\n+            --  regard it as a reference.\n \n             else\n                Set_Referenced_As_Out_Parameter (E);\n@@ -1271,10 +1272,10 @@ package body Lib.Xref is\n       XE : Xref_Entry renames Xrefs.Table (F);\n       type M is mod 2**32;\n \n-      H : constant M := M (XE.Key.Ent) + 2 ** 7 * M (abs XE.Key.Loc);\n+      H : constant M := 3 * M (XE.Key.Ent) + 5 * M (abs XE.Key.Loc);\n       --  It would be more natural to write:\n       --\n-      --    H : constant M := M'Mod (XE.Key.Ent) + 2**7 * M'Mod (XE.Key.Loc);\n+      --    H : constant M := 3 * M'Mod (XE.Key.Ent) + 5 * M'Mod (XE.Key.Loc);\n       --\n       --  But we can't use M'Mod, because it prevents bootstrapping with older\n       --  compilers. Loc can be negative, so we do \"abs\" before converting."}, {"sha": "2fbb1406936751e2d5882209d31c33cf61487c0e", "filename": "gcc/ada/libgnarl/s-interr.adb", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnarl%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnarl%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-interr.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -54,27 +54,22 @@\n \n with Ada.Exceptions;\n with Ada.Task_Identification;\n+with Ada.Unchecked_Conversion;\n \n-with System.Task_Primitives;\n with System.Interrupt_Management;\n-\n with System.Interrupt_Management.Operations;\n-pragma Elaborate_All (System.Interrupt_Management.Operations);\n-\n with System.IO;\n-\n+with System.Parameters;\n+with System.Task_Primitives;\n with System.Task_Primitives.Operations;\n with System.Task_Primitives.Interrupt_Operations;\n with System.Storage_Elements;\n+with System.Tasking.Initialization;\n with System.Tasking.Utilities;\n-\n with System.Tasking.Rendezvous;\n-pragma Elaborate_All (System.Tasking.Rendezvous);\n \n-with System.Tasking.Initialization;\n-with System.Parameters;\n-\n-with Ada.Unchecked_Conversion;\n+pragma Elaborate_All (System.Interrupt_Management.Operations);\n+pragma Elaborate_All (System.Tasking.Rendezvous);\n \n package body System.Interrupts is\n \n@@ -114,8 +109,8 @@ package body System.Interrupts is\n          Static      : Boolean);\n \n       entry Detach_Handler\n-        (Interrupt   : Interrupt_ID;\n-         Static      : Boolean);\n+        (Interrupt : Interrupt_ID;\n+         Static    : Boolean);\n \n       entry Bind_Interrupt_To_Entry\n         (T         : Task_Id;\n@@ -179,15 +174,14 @@ package body System.Interrupts is\n    pragma Atomic_Components (Ignored);\n    --  True iff the corresponding interrupt is blocked in the process level\n \n-   Last_Unblocker :\n-     array (Interrupt_ID'Range) of Task_Id := [others => Null_Task];\n+   Last_Unblocker : array (Interrupt_ID'Range) of Task_Id :=\n+                      [others => Null_Task];\n    pragma Atomic_Components (Last_Unblocker);\n    --  Holds the ID of the last Task which Unblocked this Interrupt. It\n    --  contains Null_Task if no tasks have ever requested the Unblocking\n    --  operation or the Interrupt is currently Blocked.\n \n-   Server_ID : array (Interrupt_ID'Range) of Task_Id :=\n-                 [others => Null_Task];\n+   Server_ID : array (Interrupt_ID'Range) of Task_Id := [others => Null_Task];\n    pragma Atomic_Components (Server_ID);\n    --  Holds the Task_Id of the Server_Task for each interrupt. Task_Id is\n    --  needed to accomplish locking per Interrupt base. Also is needed to"}, {"sha": "1b9118cd3b2606e84c9d617d0d48daba489d9b3d", "filename": "gcc/ada/libgnat/a-ngcoar.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-ngcoar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-ngcoar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ngcoar.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -902,7 +902,7 @@ package body Ada.Numerics.Generic_Complex_Arrays is\n    function \"-\"\n      (Left  : Real_Vector;\n       Right : Complex_Vector) return Complex_Vector\n-      renames Instantiations.\"-\";\n+     renames Instantiations.\"-\";\n \n    function \"-\"\n      (Left  : Complex_Vector;\n@@ -956,7 +956,7 @@ package body Ada.Numerics.Generic_Complex_Arrays is\n    -----------\n \n    function \"abs\" (Right : Complex_Vector) return Real'Base\n-      renames Instantiations.\"abs\";\n+     renames Instantiations.\"abs\";\n \n    --------------\n    -- Argument --"}, {"sha": "05295caa655e35965b7fcf5e9dc8d607b3fbf990", "filename": "gcc/ada/libgnat/a-ngcoar.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-ngcoar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-ngcoar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ngcoar.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -135,7 +135,7 @@ package Ada.Numerics.Generic_Complex_Arrays is\n    function Compose_From_Cartesian (Re : Real_Matrix) return Complex_Matrix;\n \n    function Compose_From_Cartesian\n-     (Re, Im : Real_Matrix) return  Complex_Matrix;\n+     (Re, Im : Real_Matrix) return Complex_Matrix;\n \n    function Modulus (X : Complex_Matrix) return Real_Matrix;\n    function \"abs\" (Right : Complex_Matrix) return Real_Matrix renames Modulus;\n@@ -229,7 +229,7 @@ package Ada.Numerics.Generic_Complex_Arrays is\n \n    function \"*\"\n      (Left  : Complex;\n-      Right : Complex_Matrix) return  Complex_Matrix;\n+      Right : Complex_Matrix) return Complex_Matrix;\n \n    function \"*\"\n      (Left  : Complex_Matrix;"}, {"sha": "0210b45c4c7c7edc91586206fd8a752a70995362", "filename": "gcc/ada/libgnat/a-strsup.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -303,6 +303,17 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n       return Left <= Super_To_String (Right);\n    end Less_Or_Equal;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String) is\n+   begin\n+      String'Put_Image (S, Super_To_String (Source));\n+   end Put_Image;\n+\n    ----------------------\n    -- Set_Super_String --\n    ----------------------"}, {"sha": "600f097c2bfe7e2060f55e78439ccd26184f7e14", "filename": "gcc/ada/libgnat/a-strsup.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-strsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-strsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -49,6 +49,7 @@ pragma Assertion_Policy (Pre            => Ignore,\n \n with Ada.Strings.Maps; use type Ada.Strings.Maps.Character_Mapping_Function;\n with Ada.Strings.Search;\n+with Ada.Strings.Text_Buffers;\n \n package Ada.Strings.Superbounded with SPARK_Mode is\n    pragma Preelaborate;\n@@ -69,7 +70,8 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n    with\n      Predicate =>\n        Current_Length <= Max_Length\n-         and then Data (1 .. Current_Length)'Initialized;\n+         and then Data (1 .. Current_Length)'Initialized,\n+     Put_Image => Put_Image;\n \n    --  The subprograms defined for Super_String are similar to those\n    --  defined for Bounded_String, except that they have different names, so\n@@ -2695,6 +2697,10 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n                        - (Item.Max_Length - K) mod Super_Length (Item)))),\n      Global         => null;\n \n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String);\n+\n private\n       --  Pragma Inline declarations\n "}, {"sha": "acca2923443ac8e4b1895e0833fb84da48e07874", "filename": "gcc/ada/libgnat/a-sttebu.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -29,6 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Strings.UTF_Encoding.Strings;\n with Ada.Strings.UTF_Encoding.Wide_Strings;\n with Ada.Strings.UTF_Encoding.Wide_Wide_Strings;\n \n@@ -59,7 +60,7 @@ package body Ada.Strings.Text_Buffers is\n \n       procedure Put (Buffer : in out Buffer_Type; Item : String) is\n       begin\n-         Put_UTF_8 (Buffer, Item);\n+         Put_UTF_8 (Buffer, UTF_Encoding.Strings.Encode (Item));\n       end Put;\n \n       procedure Wide_Put (Buffer : in out Buffer_Type; Item : Wide_String) is"}, {"sha": "cf27ca9f190d1fd7d76029cf1f4389d735d5fb5e", "filename": "gcc/ada/libgnat/a-stwisu.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -297,6 +297,17 @@ package body Ada.Strings.Wide_Superbounded is\n       return Left <= Right.Data (1 .. Right.Current_Length);\n    end Less_Or_Equal;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String) is\n+   begin\n+      Wide_String'Put_Image (S, Super_To_String (Source));\n+   end Put_Image;\n+\n    ----------------------\n    -- Set_Super_String --\n    ----------------------"}, {"sha": "7437cbda22423860f7b56eeca094c22b8e4f5bb0", "filename": "gcc/ada/libgnat/a-stwisu.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stwisu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stwisu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwisu.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -37,6 +37,7 @@\n --  Strings.Wide_Bounded.Generic_Bounded_Length use this type with\n --  an appropriate discriminant value set.\n \n+with Ada.Strings.Text_Buffers;\n with Ada.Strings.Wide_Maps;\n \n package Ada.Strings.Wide_Superbounded is\n@@ -54,7 +55,8 @@ package Ada.Strings.Wide_Superbounded is\n       --  no longer necessary, because we now special-case this type in the\n       --  compiler, so \"=\" composes properly for descendants of this type.\n       --  Leaving it out is more efficient.\n-   end record;\n+   end record\n+   with Put_Image => Put_Image;\n \n    --  The subprograms defined for Super_String are similar to those defined\n    --  for Bounded_Wide_String, except that they have different names, so that\n@@ -477,6 +479,10 @@ package Ada.Strings.Wide_Superbounded is\n       Item  : Super_String;\n       Drop  : Truncation := Error) return Super_String;\n \n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String);\n+\n private\n       --  Pragma Inline declarations\n "}, {"sha": "a4fa9968befe8d49502afb989cf7d18580a3863e", "filename": "gcc/ada/libgnat/a-stzsup.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -297,6 +297,17 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n       return Left <= Right.Data (1 .. Right.Current_Length);\n    end Less_Or_Equal;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String) is\n+   begin\n+      Wide_Wide_String'Put_Image (S, Super_To_String (Source));\n+   end Put_Image;\n+\n    ----------------------\n    -- Set_Super_String --\n    ----------------------"}, {"sha": "b50d21ad6ae8b54a8be642408a1831b3fcb3e7c2", "filename": "gcc/ada/libgnat/a-stzsup.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stzsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-stzsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzsup.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -37,6 +37,7 @@\n --  Strings.Wide_Wide_Bounded.Generic_Bounded_Length use this type with\n --  an appropriate discriminant value set.\n \n+with Ada.Strings.Text_Buffers;\n with Ada.Strings.Wide_Wide_Maps;\n \n package Ada.Strings.Wide_Wide_Superbounded is\n@@ -55,7 +56,8 @@ package Ada.Strings.Wide_Wide_Superbounded is\n       --  no longer necessary, because we now special-case this type in the\n       --  compiler, so \"=\" composes properly for descendants of this type.\n       --  Leaving it out is more efficient.\n-   end record;\n+   end record\n+   with Put_Image => Put_Image;\n \n    --  The subprograms defined for Super_String are similar to those defined\n    --  for Bounded_Wide_Wide_String, except that they have different names, so\n@@ -486,6 +488,10 @@ package Ada.Strings.Wide_Wide_Superbounded is\n       Item  : Super_String;\n       Drop  : Truncation := Error) return Super_String;\n \n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String);\n+\n private\n       --  Pragma Inline declarations\n "}, {"sha": "a9af942fc640b27b9aaf435547e627e8d130a46b", "filename": "gcc/ada/libgnat/a-tags.adb", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tags.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -554,13 +554,18 @@ package body Ada.Tags is\n    -----------------------------\n \n    function Interface_Ancestor_Tags (T : Tag) return Tag_Array is\n-      TSD_Ptr     : constant Addr_Ptr :=\n-                      To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n-      TSD         : constant Type_Specific_Data_Ptr :=\n-                      To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n-      Iface_Table : constant Interface_Data_Ptr := TSD.Interfaces_Table;\n-\n+      TSD_Ptr     : Addr_Ptr;\n+      TSD         : Type_Specific_Data_Ptr;\n+      Iface_Table : Interface_Data_Ptr;\n    begin\n+      if T = No_Tag then\n+         raise Tag_Error;\n+      end if;\n+\n+      TSD_Ptr     := To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n+      TSD         := To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n+      Iface_Table := TSD.Interfaces_Table;\n+\n       if Iface_Table = null then\n          declare\n             Table : Tag_Array (1 .. 0);\n@@ -731,7 +736,10 @@ package body Ada.Tags is\n       Ancestor   : Tag) return Boolean\n    is\n    begin\n-      if Descendant = Ancestor then\n+      if Descendant = No_Tag or else Ancestor = No_Tag then\n+         raise Tag_Error;\n+\n+      elsif Descendant = Ancestor then\n          return True;\n \n       else"}, {"sha": "c2e0b30b1da8217fe0099b4218b8e39c2ea031f0", "filename": "gcc/ada/libgnat/g-excact.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fg-excact.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fg-excact.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-excact.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -71,8 +71,7 @@ package GNAT.Exception_Actions is\n    --  If Action is null, this will in effect cancel all exception actions.\n \n    procedure Register_Global_Unhandled_Action (Action : Exception_Action);\n-   --  Similar to Register_Global_Action, called on unhandled exceptions\n-   --  only.\n+   --  Similar to Register_Global_Action, called on unhandled exceptions only\n \n    procedure Register_Id_Action\n      (Id     : Exception_Id;\n@@ -90,7 +89,7 @@ package GNAT.Exception_Actions is\n    --  an exception that is declared within an unlabeled block.\n    --\n    --  Note: All non-predefined exceptions will return Null_Id for programs\n-   --  compiled with pragma Restriction (No_Exception_Registration)\n+   --  compiled with pragma Restrictions (No_Exception_Registration).\n \n    function Is_Foreign_Exception (E : Exception_Occurrence) return Boolean;\n    --  Tell whether the exception occurrence E represents a foreign exception,"}, {"sha": "6b72a6497f1360e183a7362d976a9c2052a80ce0", "filename": "gcc/ada/libgnat/g-souinf.ads", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fg-souinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fg-souinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-souinf.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -36,7 +36,13 @@\n --  and logging purposes. For example, an exception handler can print out\n --  the name of the source file in which the exception is handled.\n \n-package GNAT.Source_Info is\n+package GNAT.Source_Info with\n+   SPARK_Mode,\n+   Abstract_State =>\n+     (Source_Code_Information with\n+         External => (Async_Writers, Async_Readers)),\n+   Annotate => (GNATprove, Always_Return)\n+is\n    pragma Preelaborate;\n    --  Note that this unit is Preelaborate, but not Pure, that's because the\n    --  functions here such as Line are clearly not pure functions, and normally\n@@ -47,6 +53,8 @@ package GNAT.Source_Info is\n    --  intrinsics as not Pure, even in Pure units, so no problems arose.\n \n    function File return String with\n+     Volatile_Function,\n+     Global => Source_Code_Information,\n      Import, Convention => Intrinsic;\n    --  Return the name of the current file, not including the path information.\n    --  The result is considered to be a static string constant.\n@@ -57,6 +65,8 @@ package GNAT.Source_Info is\n    --  static expression.\n \n    function Source_Location return String with\n+     Volatile_Function,\n+     Global => Source_Code_Information,\n      Import, Convention => Intrinsic;\n    --  Return a string literal of the form \"name:line\", where name is the\n    --  current source file name without path information, and line is the\n@@ -66,6 +76,8 @@ package GNAT.Source_Info is\n    --  string constant.\n \n    function Enclosing_Entity return String with\n+     Volatile_Function,\n+     Global => Source_Code_Information,\n      Import, Convention => Intrinsic;\n    --  Return the name of the current subprogram, package, task, entry or\n    --  protected subprogram. The string is in exactly the form used for the\n@@ -80,15 +92,21 @@ package GNAT.Source_Info is\n    --  from within generic templates.\n \n    function Compilation_ISO_Date return String with\n+     Volatile_Function,\n+     Global => Source_Code_Information,\n      Import, Convention => Intrinsic;\n    --  Returns date of compilation as a static string \"yyyy-mm-dd\".\n \n    function Compilation_Date return String with\n+     Volatile_Function,\n+     Global => Source_Code_Information,\n      Import, Convention => Intrinsic;\n    --  Returns date of compilation as a static string \"mmm dd yyyy\". This is\n    --  in local time form, and is exactly compatible with C macro __DATE__.\n \n    function Compilation_Time return String with\n+     Volatile_Function,\n+     Global => Source_Code_Information,\n      Import, Convention => Intrinsic;\n    --  Returns GMT time of compilation as a static string \"hh:mm:ss\". This is\n    --  in local time form, and is exactly compatible with C macro __TIME__."}, {"sha": "163201c5befb64f564b3f0926b5f8aa7699e7afa", "filename": "gcc/ada/libgnat/g-traceb.ads", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-traceb.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -38,38 +38,36 @@\n \n --  The traceback information is in the form of absolute code locations.\n --  These code locations may be converted to corresponding source locations\n---  using the external addr2line utility, or from within GDB.\n+--  using the addr2line or gnatsymbolize utilities, or from within GDB.\n \n --  In order to use this facility, in some cases the binder must be invoked\n --  with -E switch (store the backtrace with exception occurrence). Please\n --  refer to gnatbind documentation for more information.\n \n---  To analyze the code locations later using addr2line or gdb, the necessary\n---  units must be compiled with the debugging switch -g in the usual manner.\n---  Note that it is not necessary to compile with -g to use Call_Chain. In\n---  other words, the following sequence of steps can be used:\n+--  To analyze the code locations later using addr2line, gnatsymbolize or GDB,\n+--  the necessary units must be compiled with the debugging switch -g in the\n+--  usual manner. Note that it is not necessary to compile with -g to use\n+--  Call_Chain. In other words, the following sequence of steps can be used:\n \n --     Compile without -g\n --     Run the program, and call Call_Chain\n --     Recompile with -g\n---     Use addr2line to interpret the absolute call locations (note that\n---      addr2line expects addresses in hexadecimal format).\n+--     Use addr2line or gnatsymbolize to interpret the absolute call locations\n+--     (note that addr2line expects addresses in hexadecimal format).\n \n --  This capability is currently supported on the following targets:\n \n---     AiX PowerPC\n+--     AIX PowerPC\n --     GNU/Linux x86\n --     GNU/Linux PowerPC\n --     LynxOS x86\n---     LynxOS 178 xcoff PowerPC\n---     LynxOS 178 elf PowerPC\n+--     LynxOS-178 PowerPC\n --     Solaris x86\n---     Solaris sparc\n+--     Solaris SPARC\n --     VxWorks ARM\n---     VxWorks7 ARM\n --     VxWorks PowerPC\n --     VxWorks x86\n---     Windows XP\n+--     Windows\n \n --  Note: see also GNAT.Traceback.Symbolic, a child unit in file g-trasym.ads\n --  providing symbolic trace back capability for a subset of the above targets.\n@@ -101,11 +99,21 @@ package GNAT.Traceback is\n    function Call_Chain\n      (Max_Len     : Positive;\n       Skip_Frames : Natural := 1) return Tracebacks_Array;\n-   --  Returns up to Max_Len tracebacks corresponding to the current call\n+   --  Return up to Max_Len tracebacks corresponding to the current call\n    --  chain. Result array order is the same as in above procedure Call_Chain\n    --  except that Skip_Frames says how many of the most recent calls should be\n    --  excluded from the result, starting with this procedure itself: 1 means\n    --  exclude the frame for this procedure, 2 means 1 + exclude the frame for\n    --  this procedure's caller, ...\n \n+   function Executable_Load_Address return System.Address;\n+   pragma Import (C,\n+                  Executable_Load_Address,\n+                  \"__gnat_get_executable_load_address\");\n+   --  Return the load address of the executable or System.Null_Address if the\n+   --  executable has been loaded at the address computed by the static linker.\n+   --  This address is needed to interpret the absolute call locations given by\n+   --  the subprograms of this unit when Position-Independent Executables (PIE)\n+   --  are used on recent GNU/Linux and Windows versions.\n+\n end GNAT.Traceback;"}, {"sha": "28660219b6e6abd7aa5f9de9d9d7b99f5e1ddff3", "filename": "gcc/ada/libgnat/i-c.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fi-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fi-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-c.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -186,7 +186,7 @@ is\n      (Item     : char_array;\n       Trim_Nul : Boolean := True) return String\n    is\n-      Count : Natural;\n+      Count : Natural := 0;\n       From  : size_t;\n \n    begin\n@@ -1177,7 +1177,7 @@ is\n       To : size_t;\n \n    begin\n-      if Target'Length < Item'Length then\n+      if Target'Length < Item'Length + (if Append_Nul then 1 else 0) then\n          raise Constraint_Error;\n \n       else\n@@ -1210,17 +1210,14 @@ is\n                      Target'First + (Item'Length - 1))'Initialized);\n \n          if Append_Nul then\n-            if To > Target'Last then\n-               raise Constraint_Error;\n-            else\n-               Target (To) := char32_nul;\n-               Count := Item'Length + 1;\n-            end if;\n-\n+            Target (To) := char32_nul;\n+            Count := Item'Length + 1;\n          else\n             Count := Item'Length;\n          end if;\n       end if;\n    end To_C;\n+   pragma Annotate (CodePeer, False_Positive, \"validity check\",\n+     \"Count is only uninitialized on abnormal return.\");\n \n end Interfaces.C;"}, {"sha": "3e9f880cd4e3dff1c93e3b7fda590ce8005dd0ae", "filename": "gcc/ada/libgnat/s-regpat.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-regpat.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -920,18 +920,16 @@ package body System.Regpat is\n             if Capturing then\n                Ender := Emit_Node (CLOSE);\n                Emit (Character'Val (Par_No));\n-               Link_Tail (IP, Ender);\n-\n             else\n-               --  Need to keep looking after the closing parenthesis\n-               Ender := Emit_Ptr;\n+               Ender := Emit_Node (NOTHING);\n             end if;\n \n          else\n             Ender := Emit_Node (EOP);\n-            Link_Tail (IP, Ender);\n          end if;\n \n+         Link_Tail (IP, Ender);\n+\n          if Have_Branch and then Emit_Ptr <= PM.Size + 1 then\n \n             --  Hook the tails of the branches to the closing node"}, {"sha": "1c6f2e7156ebe81d8d3434234b335a0364ec153c", "filename": "gcc/ada/libgnat/s-rident.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rident.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -107,7 +107,7 @@ package System.Rident is\n       No_Dispatching_Calls,                      -- GNAT\n       No_Dynamic_Accessibility_Checks,           -- GNAT\n       No_Dynamic_Attachment,                     -- Ada 2012 (RM E.7(10/3))\n-      No_Dynamic_CPU_Assignment,                 -- Ada 202x (RM D.7(10/3))\n+      No_Dynamic_CPU_Assignment,                 -- Ada 2022 (RM D.7(10/3))\n       No_Dynamic_Priorities,                     -- (RM D.9(9))\n       No_Enumeration_Maps,                       -- GNAT\n       No_Entry_Calls_In_Elaboration_Code,        -- GNAT\n@@ -152,8 +152,9 @@ package System.Rident is\n       No_Task_Attributes_Package,                -- GNAT\n       No_Task_At_Interrupt_Priority,             -- GNAT\n       No_Task_Hierarchy,                         -- (RM D.7(3), H.4(3))\n+      No_Task_Hierarchy_Implicit,                -- GNAT\n       No_Task_Termination,                       -- Ada 2005 (D.7(15.1/2))\n-      No_Tasks_Unassigned_To_CPU,                -- Ada 202x (D.7(10.10/4))\n+      No_Tasks_Unassigned_To_CPU,                -- Ada 2022 (D.7(10.10/4))\n       No_Tasking,                                -- GNAT\n       No_Terminate_Alternatives,                 -- (RM D.7(6))\n       No_Unchecked_Access,                       -- (RM H.4(18))"}, {"sha": "749384f9fd1bb5e0bd5204237d8588e79f749ede", "filename": "gcc/ada/libgnat/system-qnx-arm.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-qnx-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-qnx-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-qnx-arm.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -142,7 +142,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "52ee299c26084d8f2924cf7cd2f8fa5da200d6f5", "filename": "gcc/ada/libgnat/system-rtems.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -150,6 +150,7 @@ private\n    Stack_Check_Probes        : constant Boolean := False;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "46b740eadf633e59f15b9e8b22c340cdc74e0c24", "filename": "gcc/ada/libgnat/system-vxworks7-aarch64-rtp-smp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -151,7 +151,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "1aba15b212ed916f234deddcdd1aca158010829c", "filename": "gcc/ada/libgnat/system-vxworks7-aarch64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -148,7 +148,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "e81348e8f62c2dcdf3357dbd83407e0bb2c10e6e", "filename": "gcc/ada/libgnat/system-vxworks7-arm-rtp-smp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -148,7 +148,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "4ced0f1e606da80fc67260d7159efe7421d3bb59", "filename": "gcc/ada/libgnat/system-vxworks7-arm.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -146,7 +146,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "ef290c06c6d5e97c4150bda93707e2f5c1b160d4", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-kernel.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -146,6 +146,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := False;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "5bab2e8faca98b885337c7430bf305e5f7cdacb3", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-rtp-smp.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -151,6 +151,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := False;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "768fbee4bd52fda5ca38b06ae22c63ccbe345065", "filename": "gcc/ada/libgnat/system-vxworks7-ppc64-kernel.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -148,6 +148,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "75abe4c584d302ee545bcfe66ffb35972674e009", "filename": "gcc/ada/libgnat/system-vxworks7-ppc64-rtp-smp.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -151,6 +151,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "42ae9838b5d3c3ec9036d9007c407299f24093f0", "filename": "gcc/ada/libgnat/system-vxworks7-x86-kernel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -146,7 +146,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "47dd3aef8ff08198b2bf03ac58bed62b6ff77d71", "filename": "gcc/ada/libgnat/system-vxworks7-x86-rtp-smp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -149,7 +149,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "7931241652e28d662fcc5e94aadf3534045d13ee", "filename": "gcc/ada/libgnat/system-vxworks7-x86_64-kernel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-kernel.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -146,7 +146,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "3c98b4c2ff3ebc25fc0ddc560e5014da6d19c931", "filename": "gcc/ada/libgnat/system-vxworks7-x86_64-rtp-smp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-rtp-smp.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -149,7 +149,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := False;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "88f8f96927c116664c1d296e315c65afe0908ede", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 26, "deletions": 42, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -448,57 +448,41 @@ package body MDLL is\n      (Lib_Filename : String;\n       Def_Filename : String)\n    is\n-      procedure Build_Import_Library (Lib_Filename : String);\n-      --  Build an import library. This is to build only a .a library to link\n-      --  against a DLL.\n+      function Strip_Lib_Prefix (Filename : String) return String;\n+      --  Return Filename without the lib prefix if present\n \n-      --------------------------\n-      -- Build_Import_Library --\n-      --------------------------\n-\n-      procedure Build_Import_Library (Lib_Filename : String) is\n-\n-         function No_Lib_Prefix (Filename : String) return String;\n-         --  Return Filename without the lib prefix if present\n-\n-         -------------------\n-         -- No_Lib_Prefix --\n-         -------------------\n-\n-         function No_Lib_Prefix (Filename : String) return String is\n-         begin\n-            if Filename (Filename'First .. Filename'First + 2) = \"lib\" then\n-               return Filename (Filename'First + 3 .. Filename'Last);\n-            else\n-               return Filename;\n-            end if;\n-         end No_Lib_Prefix;\n-\n-         --  Local variables\n-\n-         Def_File      : String renames Def_Filename;\n-         Dll_File      : constant String := Get_Dll_Name (Lib_Filename);\n-         Base_Filename : constant String :=\n-                           MDLL.Fil.Ext_To (No_Lib_Prefix (Lib_Filename));\n-         Lib_File      : constant String := \"lib\" & Base_Filename & \".dll.a\";\n-\n-      --  Start of processing for Build_Import_Library\n+      ----------------------\n+      -- Strip_Lib_Prefix --\n+      ----------------------\n \n+      function Strip_Lib_Prefix (Filename : String) return String is\n       begin\n-         if not Quiet then\n-            Text_IO.Put_Line (\"Building import library...\");\n-            Text_IO.Put_Line\n-              (\"make \" & Lib_File & \" to use dynamic library \" & Dll_File);\n+         if Filename (Filename'First .. Filename'First + 2) = \"lib\" then\n+            return Filename (Filename'First + 3 .. Filename'Last);\n+         else\n+            return Filename;\n          end if;\n+      end Strip_Lib_Prefix;\n \n-         Utl.Dlltool\n-           (Def_File, Dll_File, Lib_File, Build_Import => True);\n-      end Build_Import_Library;\n+      --  Local variables\n+\n+      Def_File      : String renames Def_Filename;\n+      Dll_File      : constant String := Get_Dll_Name (Lib_Filename);\n+      Base_Filename : constant String :=\n+                        MDLL.Fil.Ext_To (Strip_Lib_Prefix (Lib_Filename));\n+      Lib_File      : constant String := \"lib\" & Base_Filename & \".dll.a\";\n \n    --  Start of processing for Build_Import_Library\n \n    begin\n-      Build_Import_Library (Lib_Filename);\n+      if not Quiet then\n+         Text_IO.Put_Line (\"Building import library...\");\n+         Text_IO.Put_Line\n+           (\"make \" & Lib_File & \" to use dynamic library \" & Dll_File);\n+      end if;\n+\n+      Utl.Dlltool\n+        (Def_File, Dll_File, Lib_File, Build_Import => True);\n    end Build_Import_Library;\n \n    ------------------"}, {"sha": "9f080c0cafe6268eaa3dcbbc905ad84a3b47669b", "filename": "gcc/ada/mdll.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fmdll.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fmdll.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -74,7 +74,7 @@ package MDLL is\n    procedure Build_Import_Library\n      (Lib_Filename : String;\n       Def_Filename : String);\n-   --  Build an import library (.a) from a definition files. An import library\n-   --  is needed to link against a DLL.\n+   --  Build an import library (.a) from definition files. An import library is\n+   --  needed to link against a DLL.\n \n end MDLL;"}, {"sha": "2ae9dd99f56513ccaf4aa0f36ae43e5375da422a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 17, "deletions": 280, "changes": 297, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -73,15 +73,16 @@ package Opt is\n    --  Ada_xxx) or generate an error (in case of -gnat83/95/xx switches).\n \n    type Ada_Version_Type is\n-     (Ada_83, Ada_95, Ada_2005, Ada_2012, Ada_2022, Ada_With_Extensions);\n+     (Ada_83, Ada_95, Ada_2005, Ada_2012, Ada_2022,\n+      Ada_With_Core_Extensions, Ada_With_All_Extensions);\n    pragma Ordered (Ada_Version_Type);\n    pragma Convention (C, Ada_Version_Type);\n    --  Versions of Ada for Ada_Version below. Note that these are ordered,\n    --  so that tests like Ada_Version >= Ada_95 are legitimate and useful.\n    --  Think twice before using \"=\"; Ada_Version >= Ada_2012 is more likely\n    --  what you want, because it will apply to future versions of the language.\n-   --  Note that Ada_With_Extensions should always be last since it should\n-   --  always be a superset of the latest Ada version.\n+   --  Note that Ada_With_All_Extensions should always be last since it should\n+   --  always be a superset of the other Ada versions.\n \n    --  WARNING: There is a matching C declaration of this type in fe.h\n \n@@ -111,7 +112,7 @@ package Opt is\n    --  remains set to Ada_Version_Default). This is used in the rare cases\n    --  (notably pragma Obsolescent) where we want the explicit version set.\n \n-   Ada_Version_Runtime : Ada_Version_Type := Ada_With_Extensions;\n+   Ada_Version_Runtime : Ada_Version_Type := Ada_With_All_Extensions;\n    --  GNAT\n    --  Ada version used to compile the runtime. Used to set Ada_Version (but\n    --  not Ada_Version_Explicit) when compiling predefined or internal units.\n@@ -140,11 +141,6 @@ package Opt is\n    --  The name of the Ada package generated by the binder (when in Ada mode).\n    --  This variable may be modified by Gnatbind.Scan_Bind_Arg.\n \n-   Address_Clause_Overlay_Warnings : Boolean := True;\n-   --  GNAT\n-   --  Set False to disable address clause warnings. Modified by use of\n-   --  -gnatwo/O.\n-\n    Address_Is_Private : Boolean := False;\n    --  GNAT, GNATBIND\n    --  Set True if package System has the line \"type Address is private;\"\n@@ -316,28 +312,11 @@ package Opt is\n    --  GNATMAKE, GPBUILD\n    --  Set to True to check compiler options during the make process\n \n-   Check_Unreferenced : Boolean := False;\n-   --  GNAT\n-   --  Set to True to enable checking for unreferenced entities other\n-   --  than formal parameters (for which see Check_Unreferenced_Formals)\n-   --  Modified by use of -gnatwu/U.\n-\n-   Check_Unreferenced_Formals : Boolean := False;\n-   --  GNAT\n-   --  Set to True to check for unreferenced formals. This is turned on by\n-   --  -gnatwa/wf/wu and turned off by -gnatwA/wF/wU.\n-\n    Check_Validity_Of_Parameters : Boolean := False;\n    --  GNAT\n    --  Set to True to check for proper scalar initialization of subprogram\n    --  parameters on both entry and exit. This is turned on by -gnateV.\n \n-   Check_Withs : Boolean := False;\n-   --  GNAT\n-   --  Set to True to enable checking for unused withs, and also the case\n-   --  of withing a package and using none of the entities in the package.\n-   --  Modified by use of -gnatwu/U.\n-\n    CodePeer_Mode : Boolean := False;\n    --  GNAT, GNATBIND, GPRBUILD\n    --  Enable full CodePeer mode (SCIL generation, disable switches that\n@@ -384,16 +363,15 @@ package Opt is\n    --  True, or if pragma No_Run_Time is used. See the spec of Rtsfind for\n    --  details on the handling of the latter pragma.\n \n-   Constant_Condition_Warnings : Boolean := False;\n-   --  GNAT\n-   --  Set to True to activate warnings on constant conditions. Modified by\n-   --  use of -gnatwc/C.\n-\n    Create_Mapping_File : Boolean := False;\n    --  GNATMAKE\n    --  Set to True (-C switch) to indicate that the compiler will be invoked\n    --  with a mapping file (-gnatem compiler switch).\n \n+   CUDA_Device_Library_Name : String_Ptr := null;\n+   --  GNATBIND\n+   --  Non-null only if Enable_CUDA_Expansion is True.\n+\n    subtype Debug_Level_Value is Nat range 0 .. 3;\n    Debugger_Level : Debug_Level_Value := 0;\n    --  GNAT, GNATBIND\n@@ -520,18 +498,6 @@ package Opt is\n    --  GNATBIND\n    --  Set to True to output chosen elaboration order\n \n-   Elab_Info_Messages : Boolean := False;\n-   --  GNAT\n-   --  Set to True to output info messages for static elabmodel (-gnatel)\n-\n-   Elab_Warnings : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate elaboration warnings (-gnatwl). The warnings are\n-   --  enabled by default because they carry the same importance as errors. The\n-   --  compiler cannot emit actual errors because elaboration diagnostics need\n-   --  dataflow analysis, which is not available. This behavior parallels that\n-   --  of the old ABE mechanism.\n-\n    Enable_128bit_Types : Boolean := False;\n    --  GNAT\n    --  Set to True to enable the support for 128-bit types in the compiler.\n@@ -548,9 +514,7 @@ package Opt is\n \n    Enable_CUDA_Device_Expansion : Boolean := False;\n    --  GNATBIND\n-   --  Set to True to enable CUDA device (as opposed to host) expansion:\n-   --    - Binder generates elaboration/finalization code that can be\n-   --      invoked from corresponding binder-generated host-side code.\n+   --  Set to True to enable CUDA device (as opposed to host) expansion.\n \n    Error_Msg_Line_Length : Nat := 0;\n    --  GNAT\n@@ -630,11 +594,16 @@ package Opt is\n    --  Set to True to convert nonbinary modular additions into code\n    --  that relies on the front-end expansion of operator Mod.\n \n-   function Extensions_Allowed return Boolean is\n-     (Ada_Version = Ada_With_Extensions);\n+   function All_Extensions_Allowed return Boolean is\n+     (Ada_Version = Ada_With_All_Extensions);\n    --  True if GNAT specific language extensions are allowed. See GNAT RM for\n    --  details.\n \n+   function Core_Extensions_Allowed return Boolean is\n+     (Ada_Version >= Ada_With_Core_Extensions);\n+   --  True if some but not all GNAT specific language extensions are allowed.\n+   --  See GNAT RM for details.\n+\n    type External_Casing_Type is (\n      As_Is,       -- External names cased as they appear in the Ada source\n      Uppercase,   -- External names forced to all uppercase letters\n@@ -846,11 +815,6 @@ package Opt is\n    --  reflect the starting node of the outermost ignored Ghost region. If a\n    --  nested ignored Ghost region is entered, the value must remain unchanged.\n \n-   Implementation_Unit_Warnings : Boolean := True;\n-   --  GNAT\n-   --  Set True to active warnings for use of implementation internal units.\n-   --  Modified by use of -gnatwi/-gnatwI.\n-\n    Implicit_Packing : Boolean := False;\n    --  GNAT\n    --  If set True, then a Size attribute clause on an array is allowed to\n@@ -861,14 +825,6 @@ package Opt is\n    --  GNAT\n    --  Set True to include the enclosing subprogram in compiler messages.\n \n-   Ineffective_Inline_Warnings : Boolean := False;\n-   --  GNAT\n-   --  Set True to activate warnings if front-end inlining (-gnatN) is not able\n-   --  to actually inline a particular call (or all calls). Can be controlled\n-   --  by use of -gnatwp/-gnatwP. Also set True to activate warnings if\n-   --  frontend inlining is not able to inline a subprogram expected to\n-   --  be inlined in GNATprove mode.\n-\n    Init_Or_Norm_Scalars : Boolean := False;\n    --  GNAT, GNATBIND\n    --  Set True if a pragma Initialize_Scalars applies to the current unit.\n@@ -954,17 +910,6 @@ package Opt is\n    --  Set to True to skip compile and bind steps (except when Bind_Only is\n    --  set to True).\n \n-   List_Body_Required_Info : Boolean := False;\n-   --  GNATMAKE\n-   --  List info messages about why a package requires a body. Modified by use\n-   --  of -gnatw.y/.Y.\n-\n-   List_Inherited_Aspects : Boolean := False;\n-   --  GNAT\n-   --  List inherited invariants, preconditions, and postconditions from\n-   --  Invariant'Class, Pre'Class, and Post'Class aspects. Also list inherited\n-   --  subtype predicates. Modified by use of -gnatw.l/.L.\n-\n    List_Restrictions : Boolean := False;\n    --  GNATBIND\n    --  Set to True to list restrictions pragmas that could apply to partition\n@@ -1711,214 +1656,6 @@ package Opt is\n    --  In High Verbosity, additional lines are output when the ALI file\n    --  is part of an Ada library, is read-only or is part of the runtime.\n \n-   Warn_On_Ada_2005_Compatibility : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate all warnings on Ada 2005 compatibility issues,\n-   --  including warnings on Ada 2005 obsolescent features used in Ada 2005\n-   --  mode. Set by default, modified by use of -gnatwy/Y.\n-\n-   Warn_On_Ada_2012_Compatibility : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate all warnings on Ada 2012 compatibility issues,\n-   --  including warnings on Ada 2012 obsolescent features used in Ada 2012\n-   --  mode. Modified by use of -gnatwy/Y.\n-\n-   Warn_On_Ada_2022_Compatibility : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate all warnings on Ada 2022 compatibility issues,\n-   --  including warnings on Ada 2022 obsolescent features used in Ada 2022\n-   --  mode.\n-\n-   Warn_On_All_Unread_Out_Parameters : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings in all cases where a variable is\n-   --  modified by being passed as to an OUT formal, but the resulting value is\n-   --  never read. The default is that this warning is suppressed. Modified\n-   --  by use of gnatw.o/.O.\n-\n-   Warn_On_Assertion_Failure : Boolean := True;\n-   --  GNAT\n-   --  Set to True to activate warnings on assertions that can be determined\n-   --  at compile time will always fail. Modified by use of -gnatw.a/.A.\n-\n-   Warn_On_Assumed_Low_Bound : Boolean := True;\n-   --  GNAT\n-   --  Set to True to activate warnings for string parameters that are indexed\n-   --  with literals or S'Length, presumably assuming a lower bound of one.\n-   --  Modified by use of -gnatww/W.\n-\n-   Warn_On_Atomic_Synchronization : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate information messages for atomic synchronization.\n-   --  Modified by use of -gnatw.n/.N.\n-\n-   Warn_On_Bad_Fixed_Value : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for static fixed-point expression\n-   --  values that are not an exact multiple of the small value of the type.\n-   --  Odd by default, modified by use of -gnatwb/B.\n-\n-   Warn_On_Biased_Representation : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for size clauses, component clauses\n-   --  and component_size clauses that force biased representation. Modified\n-   --  by use of -gnatw.b/.B.\n-\n-   Warn_On_Constant : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for variables that could be declared\n-   --  as constants. Modified by use of -gnatwk/K.\n-\n-   Warn_On_Deleted_Code : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for code deleted by the front end\n-   --  for conditional statements whose outcome is known at compile time.\n-   --  Modified by use of -gnatwt/T.\n-\n-   Warn_On_Dereference : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for implicit dereferences for array\n-   --  indexing and record component access. Modified by use of -gnatwd/D.\n-\n-   Warn_On_Export_Import : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for suspicious use of export or\n-   --  import pragmas. Modified by use of -gnatwx/X.\n-\n-   Warn_On_Elab_Access : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for P'Access in the case where\n-   --  subprogram P is in the same package as the P'Access, and the P'Access is\n-   --  evaluated at package elaboration time, and occurs before the body of P\n-   --  has been elaborated.\n-\n-   Warn_On_Hiding : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings if a declared entity hides another\n-   --  entity. The default is that this warning is suppressed. Modified by\n-   --  use of -gnatwh/H.\n-\n-   Warn_On_Modified_Unread : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings if a variable is assigned but is never\n-   --  read. Also controls warnings for similar cases involving out parameters,\n-   --  but only if there is only one out parameter for the procedure involved.\n-   --  The default is that this warning is suppressed, modified by use of\n-   --  -gnatwm/M.\n-\n-   Warn_On_No_Value_Assigned : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings if no value is ever assigned to a\n-   --  variable that is at least partially uninitialized. Set to false to\n-   --  suppress such warnings. The default is that such warnings are enabled.\n-   --  Modified by use of -gnatwv/V.\n-\n-   Warn_On_Non_Local_Exception : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for non-local exception raises and also\n-   --  handlers that can never handle a local raise. This warning is only ever\n-   --  generated if pragma Restrictions (No_Exception_Propagation) is set. The\n-   --  default is not to generate the warnings except that if the source has\n-   --  at least one exception handler, and this restriction is set, and the\n-   --  warning was not explicitly turned off, then it is turned on by default.\n-   --  Modified by use of -gnatw.x/.X.\n-\n-   No_Warn_On_Non_Local_Exception : Boolean := False;\n-   --  GNAT\n-   --  This is set to True if the above warning is explicitly suppressed. We\n-   --  use this to avoid turning it on by default when No_Exception_Propagation\n-   --  restriction is set and an exception handler is present.\n-\n-   Warn_On_Object_Renames_Function : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings when a function result is renamed as\n-   --  an object. The default is that this warning is disabled. Modified by\n-   --  use of -gnatw.r/.R.\n-\n-   Warn_On_Obsolescent_Feature : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings on use of any feature in Annex or if a\n-   --  subprogram is called for which a pragma Obsolescent applies. Modified\n-   --  by use of -gnatwj/J.\n-\n-   Warn_On_Overlap : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings when a writable actual overlaps with\n-   --  another actual in a subprogram call. This applies only in modes before\n-   --  Ada 2012. Starting with Ada 2012, such overlaps are illegal.\n-   --  Modified by use of -gnatw.i/.I.\n-\n-   Warn_On_Questionable_Missing_Parens : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for cases where parentheses are missing\n-   --  and the usage is questionable, because the intent is unclear. On by\n-   --  default, modified by use of -gnatwq/Q.\n-\n-   Warn_On_Parameter_Order : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for cases where the argument list for\n-   --  a call is a sequence of identifiers that match the formal identifiers,\n-   --  but are in the wrong order.\n-\n-   Warn_On_Redundant_Constructs : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for redundant constructs (e.g. useless\n-   --  assignments/conversions). The default is that this warning is disabled.\n-   --  Modified by use of -gnatwr/R.\n-\n-   Warn_On_Reverse_Bit_Order : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warning (informational) messages for component\n-   --  clauses that are affected by non-standard bit-order. The default is\n-   --  that this warning is enabled. Modified by -gnatw.v/.V.\n-\n-   Warn_On_Suspicious_Contract : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for suspicious contracts expressed as\n-   --  pragmas or aspects precondition and postcondition, as well as other\n-   --  suspicious cases of expressions typically found in contracts like\n-   --  quantified expressions and uses of Update attribute. The default is that\n-   --  this warning is enabled. Modified by use of -gnatw.t/.T.\n-\n-   Warn_On_Suspicious_Modulus_Value : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for suspicious modulus values, as well\n-   --  as negative literals of a modular type. The default is that this warning\n-   --  is enabled. Modified by -gnatw.m/.M.\n-\n-   Warn_On_Unchecked_Conversion : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for unchecked conversions that may have\n-   --  non-portable semantics (e.g. because sizes of types differ). Modified\n-   --  by use of -gnatwz/Z.\n-\n-   Warn_On_Unordered_Enumeration_Type : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for inappropriate uses (comparisons\n-   --  and explicit ranges) on unordered enumeration types (which includes\n-   --  all enumeration types for which pragma Ordered is not given). The\n-   --  default is that this warning is disabled. Modified by -gnat.u/.U.\n-\n-   Warn_On_Unrecognized_Pragma : Boolean := True;\n-   --  GNAT\n-   --  Set to True to generate warnings for unrecognized pragmas. The default\n-   --  is that this warning is enabled. Modified by use of -gnatwg/G.\n-\n-   Warn_On_Unrepped_Components : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for the case of components of record\n-   --  which have a record representation clause but this component does not\n-   --  have a component clause. Modified by use of -gnatw.c/.C.\n-\n-   Warn_On_Warnings_Off : Boolean := False;\n-   --  GNAT\n-   --  Set to True to generate warnings for use of Pragma Warnings (Off, ent),\n-   --  where either the pragma is never used, or it could be replaced by a\n-   --  pragma Unmodified or Unreferenced. Also generates warnings for pragma\n-   --  Warning (Off, string) which either has no matching pragma Warning On,\n-   --  or where no warning has been suppressed by the use of the pragma.\n-   --  Modified by use of -gnatw.w/.W.\n-\n    type Warning_Mode_Type is\n      (Suppress, Normal, Treat_As_Error, Treat_Run_Time_Warnings_As_Errors);\n    Warning_Mode : Warning_Mode_Type := Normal;"}, {"sha": "483f96d041f11583c64d1c6f3b084b20fad5c6cc", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -2839,7 +2839,8 @@ package body Ch3 is\n             else\n                P_Index_Subtype_Def_With_Fixed_Lower_Bound (Subtype_Mark_Node);\n \n-               Error_Msg_GNAT_Extension (\"fixed-lower-bound array\", Token_Ptr);\n+               Error_Msg_GNAT_Extension (\"fixed-lower-bound array\", Token_Ptr,\n+                                         Is_Core_Extension => True);\n             end if;\n \n             exit when Token in Tok_Right_Paren | Tok_Of;\n@@ -2909,7 +2910,8 @@ package body Ch3 is\n                        (Subtype_Mark_Node);\n \n                      Error_Msg_GNAT_Extension\n-                       (\"fixed-lower-bound array\", Token_Ptr);\n+                       (\"fixed-lower-bound array\", Token_Ptr,\n+                        Is_Core_Extension => True);\n                   end if;\n \n                   exit when Token in Tok_Right_Paren | Tok_Of;\n@@ -3412,7 +3414,8 @@ package body Ch3 is\n             --  later during analysis), and scan to the next token.\n \n             if Token = Tok_Box then\n-               Error_Msg_GNAT_Extension (\"fixed-lower-bound array\", Token_Ptr);\n+               Error_Msg_GNAT_Extension (\"fixed-lower-bound array\", Token_Ptr,\n+                                         Is_Core_Extension => True);\n \n                Expr_Node := Empty;\n                Scan;\n@@ -4679,7 +4682,7 @@ package body Ch3 is\n          when Tok_With =>\n             Check_Bad_Layout;\n \n-            if Aspect_Specifications_Present then\n+            if Aspect_Specifications_Present (Strict => True) then\n \n                --  If we are after a semicolon, complain that it was ignored.\n                --  But we don't really ignore it, since we dump the aspects,"}, {"sha": "82b09b29bea0afd8b8a4f6394ed1402684b108e1", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1775,7 +1775,7 @@ package body Ch4 is\n             if Token = Tok_Identifier then\n                Id := P_Defining_Identifier;\n                if Token = Tok_Greater then\n-                  if Extensions_Allowed then\n+                  if Core_Extensions_Allowed then\n                      Set_Box_Present (Assoc_Node);\n                      Set_Binding_Chars (Assoc_Node, Chars (Id));\n                      Box_Present := True;\n@@ -1813,7 +1813,7 @@ package body Ch4 is\n             if Token = Tok_Identifier then\n                Id := P_Defining_Identifier;\n \n-               if not Extensions_Allowed then\n+               if not Core_Extensions_Allowed then\n                   Error_Msg_GNAT_Extension\n                     (\"IS following component association\", Token_Ptr);\n                elsif Box_With_Identifier_Present then"}, {"sha": "0adb702740becc46d69585cc2964c3ee1e4959a0", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -73,10 +73,12 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n    --  Check the expression of the specified argument to make sure that it\n    --  is a string literal. If not give error and raise Error_Resync.\n \n-   procedure Check_Arg_Is_On_Or_Off (Arg : Node_Id);\n+   procedure Check_Arg_Is_On_Or_Off\n+     (Arg : Node_Id; All_OK_Too : Boolean := False);\n    --  Check the expression of the specified argument to make sure that it\n    --  is an identifier which is either ON or OFF, and if not, then issue\n-   --  an error message and raise Error_Resync.\n+   --  an error message and raise Error_Resync. If All_OK_Too is True,\n+   --  then an ALL identifer is also acceptable.\n \n    procedure Check_No_Identifier (Arg : Node_Id);\n    --  Checks that the given argument does not have an identifier. If\n@@ -167,17 +169,26 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n    -- Check_Arg_Is_On_Or_Off --\n    ----------------------------\n \n-   procedure Check_Arg_Is_On_Or_Off (Arg : Node_Id) is\n+   procedure Check_Arg_Is_On_Or_Off\n+     (Arg : Node_Id; All_OK_Too : Boolean := False)\n+   is\n       Argx : constant Node_Id := Expression (Arg);\n-\n+      Error : Boolean := Nkind (Expression (Arg)) /= N_Identifier;\n    begin\n-      if Nkind (Expression (Arg)) /= N_Identifier\n-        or else Chars (Argx) not in Name_On | Name_Off\n-      then\n+      if not Error then\n+         Error := (Chars (Argx) not in Name_On | Name_Off)\n+           and then not (All_OK_Too and Chars (Argx) = Name_All);\n+      end if;\n+      if Error then\n          Error_Msg_Name_2 := Name_On;\n          Error_Msg_Name_3 := Name_Off;\n \n-         Error_Msg_N (\"argument for pragma% must be% or%\", Argx);\n+         if All_OK_Too then\n+            Error_Msg_Name_4 := Name_All;\n+            Error_Msg_N (\"argument for pragma% must be% or% or%\", Argx);\n+         else\n+            Error_Msg_N (\"argument for pragma% must be% or%\", Argx);\n+         end if;\n          raise Error_Resync;\n       end if;\n    end Check_Arg_Is_On_Or_Off;\n@@ -414,18 +425,20 @@ begin\n       -- Extensions_Allowed (GNAT) --\n       -------------------------------\n \n-      --  pragma Extensions_Allowed (Off | On)\n+      --  pragma Extensions_Allowed (Off | On | All)\n \n       --  The processing for pragma Extensions_Allowed must be done at\n       --  parse time, since extensions mode may affect what is accepted.\n \n       when Pragma_Extensions_Allowed =>\n          Check_Arg_Count (1);\n          Check_No_Identifier (Arg1);\n-         Check_Arg_Is_On_Or_Off (Arg1);\n+         Check_Arg_Is_On_Or_Off (Arg1, All_OK_Too => True);\n \n          if Chars (Expression (Arg1)) = Name_On then\n-            Ada_Version := Ada_With_Extensions;\n+            Ada_Version := Ada_With_Core_Extensions;\n+         elsif Chars (Expression (Arg1)) = Name_All then\n+            Ada_Version := Ada_With_All_Extensions;\n          else\n             Ada_Version := Ada_Version_Explicit;\n          end if;"}, {"sha": "43939a23197ae741308c28200397367df679e56b", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -114,7 +114,7 @@ package body Pprint is\n             Num       : Natural := 1) return String\n          is\n          begin\n-            if not Present (List) then\n+            if No (List) then\n                if First or else not Add_Paren then\n                   return \"\";\n                else\n@@ -229,7 +229,7 @@ package body Pprint is\n                --  is not prepared to deal with a zero-length result.\n \n                elsif Null_Record_Present (Expr)\n-                 or else not Present (First (Component_Associations (Expr)))\n+                 or else No (First (Component_Associations (Expr)))\n                then\n                   return (\"(null record)\");\n "}, {"sha": "9965321c75e27c3776aaa0ce3fe9f672f54b53d4", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -41,6 +41,7 @@ with Sinput;         use Sinput;\n with Stand;          use Stand;\n with Targparm;       use Targparm;\n with Uname;          use Uname;\n+with Warnsw;         use Warnsw;\n \n package body Restrict is\n \n@@ -896,7 +897,10 @@ package body Restrict is\n          declare\n             S : constant String := Restriction_Id'Image (J);\n          begin\n-            if S = Name_Buffer (1 .. Name_Len) then\n+            if S = Name_Buffer (1 .. Name_Len)\n+              --  users cannot name the N_T_H_Implicit restriction\n+              and then J /= No_Task_Hierarchy_Implicit\n+            then\n                return J;\n             end if;\n          end;\n@@ -1103,7 +1107,12 @@ package body Restrict is\n \n    function Restriction_Active (R : All_Restrictions) return Boolean is\n    begin\n-      return Restrictions.Set (R) and then not Restriction_Warnings (R);\n+      if Restrictions.Set (R) and then not Restriction_Warnings (R) then\n+         return True;\n+      else\n+         return R = No_Task_Hierarchy\n+           and then Restriction_Active (No_Task_Hierarchy_Implicit);\n+      end if;\n    end Restriction_Active;\n \n    --------------------------------"}, {"sha": "2c2293812ee37d5da1a25cbfe41f3fb1872b823f", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1668,7 +1668,7 @@ package body Rtsfind is\n \n       --  Load unit if unit not previously loaded\n \n-      if not Present (U.Entity) then\n+      if No (U.Entity) then\n          Load_RTU (U_Id, Id => E);\n       end if;\n \n@@ -1687,7 +1687,7 @@ package body Rtsfind is\n             E1 := First_Entity (Pkg_Ent);\n             while Present (E1) loop\n                if Ename = Chars (E1) then\n-                  pragma Assert (not Present (Found_E));\n+                  pragma Assert (No (Found_E));\n                   Found_E := E1;\n                end if;\n "}, {"sha": "ce49e2df14938c0f77f36d59d4684fdd2b86221d", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -609,6 +609,8 @@ package Rtsfind is\n \n      RE_Buffer_Type,                     -- Ada.Strings.Text_Buffers.Unbounded\n      RE_Get,                             -- Ada.Strings.Text_Buffers.Unbounded\n+     RE_Wide_Get,                        -- Ada.Strings.Text_Buffers.Unbounded\n+     RE_Wide_Wide_Get,                   -- Ada.Strings.Text_Buffers.Unbounded\n \n      RE_Wait_For_Release,                -- Ada.Synchronous_Barriers\n \n@@ -2245,6 +2247,8 @@ package Rtsfind is\n \n      RE_Buffer_Type                      => Ada_Strings_Text_Buffers_Unbounded,\n      RE_Get                              => Ada_Strings_Text_Buffers_Unbounded,\n+     RE_Wide_Get                         => Ada_Strings_Text_Buffers_Unbounded,\n+     RE_Wide_Wide_Get                    => Ada_Strings_Text_Buffers_Unbounded,\n \n      RE_Wait_For_Release                 => Ada_Synchronous_Barriers,\n "}, {"sha": "b9b4e932b431a1d693a082774b7a6c48bf203c15", "filename": "gcc/ada/sa_messages.adb", "status": "removed", "additions": 0, "deletions": 539, "changes": 539, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d1620c91053438399064fa4eddb15d09cbabf4/gcc%2Fada%2Fsa_messages.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d1620c91053438399064fa4eddb15d09cbabf4/gcc%2Fada%2Fsa_messages.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsa_messages.adb?ref=62d1620c91053438399064fa4eddb15d09cbabf4", "patch": "@@ -1,539 +0,0 @@\n-------------------------------------------------------------------------------\n---                       C O D E P E E R / S P A R K                        --\n---                                                                          --\n---                     Copyright (C) 2015-2022, AdaCore                     --\n---                                                                          --\n--- This is free software;  you can redistribute it  and/or modify it  under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  This software is distributed in the hope  that it will be useful, --\n--- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --\n--- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --\n--- License for  more details.  You should have  received  a copy of the GNU --\n--- General  Public  License  distributed  with  this  software;   see  file --\n--- COPYING3.  If not, go to http://www.gnu.org/licenses for a complete copy --\n--- of the license.                                                          --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-pragma Ada_2012;\n-\n-with Ada.Directories; use Ada.Directories;\n-with Ada.Strings.Unbounded.Hash;\n-\n-with Ada.Text_IO;     use Ada.Text_IO;\n-with GNATCOLL.JSON;   use GNATCOLL.JSON;\n-\n-package body SA_Messages is\n-\n-   -----------------------\n-   -- Local subprograms --\n-   -----------------------\n-\n-   function \"<\" (Left, Right : SA_Message) return Boolean is\n-     (if Left.Kind /= Right.Kind then\n-         Left.Kind < Right.Kind\n-      else\n-         Left.Kind in Check_Kind\n-           and then Left.Check_Result < Right.Check_Result);\n-\n-   function \"<\" (Left, Right : Simple_Source_Location) return Boolean is\n-      (if Left.File_Name /= Right.File_Name then\n-          Left.File_Name < Right.File_Name\n-       elsif Left.Line /= Right.Line then\n-          Left.Line < Right.Line\n-       else\n-          Left.Column < Right.Column);\n-\n-   function \"<\" (Left, Right : Source_Locations) return Boolean is\n-     (if Left'Length /= Right'Length then\n-         Left'Length < Right'Length\n-      elsif Left'Length = 0 then\n-         False\n-      elsif Left (Left'Last) /= Right (Right'Last) then\n-         Left (Left'Last) < Right (Right'Last)\n-      else\n-         Left (Left'First .. Left'Last - 1) <\n-           Right (Right'First .. Right'Last - 1));\n-\n-   function \"<\" (Left, Right : Source_Location) return Boolean is\n-     (Left.Locations < Right.Locations);\n-\n-   function Base_Location\n-     (Location : Source_Location) return Simple_Source_Location is\n-     (Location.Locations (1));\n-\n-   function Hash (Key : SA_Message) return Hash_Type;\n-   function Hash (Key : Source_Location) return Hash_Type;\n-\n-   ---------\n-   -- \"<\" --\n-   ---------\n-\n-   function \"<\" (Left, Right : Message_And_Location) return Boolean is\n-     (if Left.Message = Right.Message\n-      then Left.Location < Right.Location\n-      else Left.Message < Right.Message);\n-\n-   ------------\n-   -- Column --\n-   ------------\n-\n-   function Column (Location : Source_Location) return Column_Number is\n-     (Base_Location (Location).Column);\n-\n-   ---------------\n-   -- File_Name --\n-   ---------------\n-\n-   function File_Name (Location : Source_Location) return String is\n-     (To_String (Base_Location (Location).File_Name));\n-\n-   function File_Name (Location : Source_Location) return Unbounded_String is\n-     (Base_Location (Location).File_Name);\n-\n-   ------------------------\n-   -- Enclosing_Instance --\n-   ------------------------\n-\n-   function Enclosing_Instance\n-     (Location : Source_Location) return Source_Location_Or_Null is\n-     (Count     => Location.Count - 1,\n-      Locations => Location.Locations (2 .. Location.Count));\n-\n-   ----------\n-   -- Hash --\n-   ----------\n-\n-   function Hash (Key : Message_And_Location) return Hash_Type is\n-     (Hash (Key.Message) + Hash (Key.Location));\n-\n-   function Hash (Key : SA_Message) return Hash_Type is\n-   begin\n-      return Result : Hash_Type :=\n-                        Hash_Type'Mod (Message_Kind'Pos (Key.Kind))\n-      do\n-         if Key.Kind in Check_Kind then\n-            Result := Result +\n-              Hash_Type'Mod (SA_Check_Result'Pos (Key.Check_Result));\n-         end if;\n-      end return;\n-   end Hash;\n-\n-   function Hash (Key : Source_Location) return Hash_Type is\n-   begin\n-      return Result : Hash_Type := Hash_Type'Mod (Key.Count) do\n-         for Loc of Key.Locations loop\n-            Result := Result + Hash (Loc.File_Name);\n-            Result := Result + Hash_Type'Mod (Loc.Line);\n-            Result := Result + Hash_Type'Mod (Loc.Column);\n-         end loop;\n-      end return;\n-   end Hash;\n-\n-   ---------------\n-   -- Iteration --\n-   ---------------\n-\n-   function Iteration (Location : Source_Location) return Iteration_Id is\n-     (Base_Location (Location).Iteration);\n-\n-   ----------\n-   -- Line --\n-   ----------\n-\n-   function Line (Location : Source_Location) return Line_Number is\n-     (Base_Location (Location).Line);\n-\n-   --------------\n-   -- Location --\n-   --------------\n-\n-   function Location\n-     (Item : Message_And_Location) return Source_Location is\n-     (Item.Location);\n-\n-   ----------\n-   -- Make --\n-   ----------\n-\n-   function Make\n-     (File_Name          : String;\n-      Line               : Line_Number;\n-      Column             : Column_Number;\n-      Iteration          : Iteration_Id;\n-      Enclosing_Instance : Source_Location_Or_Null) return Source_Location\n-   is\n-   begin\n-      return Result : Source_Location\n-                        (Count => Enclosing_Instance.Count + 1)\n-      do\n-         Result.Locations (1) :=\n-           (File_Name => To_Unbounded_String (File_Name),\n-            Line      => Line,\n-            Column    => Column,\n-            Iteration => Iteration);\n-\n-         Result.Locations (2 .. Result.Count) := Enclosing_Instance.Locations;\n-      end return;\n-   end Make;\n-\n-   ------------------\n-   -- Make_Msg_Loc --\n-   ------------------\n-\n-   function Make_Msg_Loc\n-     (Msg : SA_Message;\n-      Loc : Source_Location) return Message_And_Location\n-   is\n-   begin\n-      return Message_And_Location'(Count    => Loc.Count,\n-                                   Message  => Msg,\n-                                   Location => Loc);\n-   end Make_Msg_Loc;\n-\n-   -------------\n-   -- Message --\n-   -------------\n-\n-   function Message (Item : Message_And_Location) return SA_Message is\n-     (Item.Message);\n-\n-   package Field_Names is\n-\n-      --  A Source_Location value is represented in JSON as a two or three\n-      --  field value having fields Message_Kind (a string) and Locations (an\n-      --  array); if the Message_Kind indicates a check kind, then a third\n-      --  field is present: Check_Result (a string). The element type of the\n-      --  Locations array is a value having at least 4 fields:\n-      --  File_Name (a string), Line (an integer), Column (an integer),\n-      --  and Iteration_Kind (an integer); if the Iteration_Kind field\n-      --  has the value corresponding to the enumeration literal Numbered,\n-      --  then two additional integer fields are present, Iteration_Number\n-      --  and Iteration_Of_Total.\n-\n-      Check_Result       : constant String := \"Check_Result\";\n-      Column             : constant String := \"Column\";\n-      File_Name          : constant String := \"File_Name\";\n-      Iteration_Kind     : constant String := \"Iteration_Kind\";\n-      Iteration_Number   : constant String := \"Iteration_Number\";\n-      Iteration_Of_Total : constant String := \"Iteration_Total\";\n-      Line               : constant String := \"Line\";\n-      Locations          : constant String := \"Locations\";\n-      Message_Kind       : constant String := \"Message_Kind\";\n-      Messages           : constant String := \"Messages\";\n-   end Field_Names;\n-\n-   package body Writing is\n-      File : File_Type;\n-      --  The file to which output will be written (in Close, not in Write)\n-\n-      Messages : JSON_Array;\n-      --  Successive calls to Write append messages to this list\n-\n-      -----------------------\n-      -- Local subprograms --\n-      -----------------------\n-\n-      function To_JSON_Array\n-        (Locations : Source_Locations) return JSON_Array;\n-      --  Represent a Source_Locations array as a JSON_Array\n-\n-      function To_JSON_Value\n-        (Location : Simple_Source_Location) return JSON_Value;\n-      --  Represent a Simple_Source_Location as a JSON_Value\n-\n-      -----------\n-      -- Close --\n-      -----------\n-\n-      procedure Close is\n-         Value : constant JSON_Value := Create_Object;\n-\n-      begin\n-         --  only one field for now\n-         Set_Field (Value, Field_Names.Messages, Messages);\n-         Put_Line (File, Write (Item => Value, Compact => False));\n-         Clear (Messages);\n-         Close (File => File);\n-      end Close;\n-\n-      -------------\n-      -- Is_Open --\n-      -------------\n-\n-      function Is_Open return Boolean is (Is_Open (File));\n-\n-      ----------\n-      -- Open --\n-      ----------\n-\n-      procedure Open (File_Name : String) is\n-      begin\n-         Create (File => File, Mode => Out_File, Name => File_Name);\n-         Clear (Messages);\n-      end Open;\n-\n-      -------------------\n-      -- To_JSON_Array --\n-      -------------------\n-\n-      function To_JSON_Array\n-        (Locations : Source_Locations) return JSON_Array\n-      is\n-      begin\n-         return Result : JSON_Array := Empty_Array do\n-            for Location of Locations loop\n-               Append (Result, To_JSON_Value (Location));\n-            end loop;\n-         end return;\n-      end To_JSON_Array;\n-\n-      -------------------\n-      -- To_JSON_Value --\n-      -------------------\n-\n-      function To_JSON_Value\n-        (Location : Simple_Source_Location) return JSON_Value\n-      is\n-      begin\n-         return Result : constant JSON_Value := Create_Object do\n-            Set_Field (Result, Field_Names.File_Name, Location.File_Name);\n-            Set_Field (Result, Field_Names.Line, Integer (Location.Line));\n-            Set_Field (Result, Field_Names.Column, Integer (Location.Column));\n-            Set_Field (Result, Field_Names.Iteration_Kind, Integer'(\n-                       Iteration_Kind'Pos (Location.Iteration.Kind)));\n-\n-            if Location.Iteration.Kind = Numbered then\n-               Set_Field (Result, Field_Names.Iteration_Number,\n-                          Location.Iteration.Number);\n-               Set_Field (Result, Field_Names.Iteration_Of_Total,\n-                          Location.Iteration.Of_Total);\n-            end if;\n-         end return;\n-      end To_JSON_Value;\n-\n-      -----------\n-      -- Write --\n-      -----------\n-\n-      procedure Write (Message : SA_Message; Location : Source_Location) is\n-         Value : constant JSON_Value := Create_Object;\n-\n-      begin\n-         Set_Field (Value, Field_Names.Message_Kind, Message.Kind'Img);\n-\n-         if Message.Kind in Check_Kind then\n-            Set_Field\n-              (Value, Field_Names.Check_Result, Message.Check_Result'Img);\n-         end if;\n-\n-         Set_Field\n-           (Value, Field_Names.Locations, To_JSON_Array (Location.Locations));\n-         Append (Messages, Value);\n-      end Write;\n-   end Writing;\n-\n-   package body Reading is\n-      File       : File_Type;\n-      --  The file from which messages are read (in Open, not in Read)\n-\n-      Messages   : JSON_Array;\n-      --  The list of messages that were read in from File\n-\n-      Next_Index : Positive;\n-      --  The index of the message in Messages which will be returned by the\n-      --  next call to Get.\n-\n-      Parse_Full_Path : Boolean := True;\n-      --  if the full path or only the base name of the file should be parsed\n-\n-      -----------\n-      -- Close --\n-      -----------\n-\n-      procedure Close is\n-      begin\n-         Clear (Messages);\n-         Close (File);\n-      end Close;\n-\n-      ----------\n-      -- Done --\n-      ----------\n-\n-      function Done return Boolean is (Next_Index > Length (Messages));\n-\n-      ---------\n-      -- Get --\n-      ---------\n-\n-      function Get return Message_And_Location is\n-         Value : constant JSON_Value := Get (Messages, Next_Index);\n-\n-         function Get_Message (Kind :  Message_Kind) return SA_Message;\n-         --  Return SA_Message of given kind, filling in any non-discriminant\n-         --  by reading from Value.\n-\n-         function Make\n-           (Location : Source_Location;\n-            Message  : SA_Message) return Message_And_Location;\n-         --  Constructor\n-\n-         function To_Location\n-           (Encoded   : JSON_Array;\n-            Full_Path : Boolean) return Source_Location;\n-         --  Decode a Source_Location from JSON_Array representation\n-\n-         function To_Simple_Location\n-           (Encoded   : JSON_Value;\n-            Full_Path : Boolean) return Simple_Source_Location;\n-         --  Decode a Simple_Source_Location from JSON_Value representation\n-\n-         -----------------\n-         -- Get_Message --\n-         -----------------\n-\n-         function Get_Message (Kind :  Message_Kind) return SA_Message is\n-         begin\n-            --  If we had AI12-0086, then we could use aggregates here (which\n-            --  would be better than field-by-field assignment for the usual\n-            --  maintainability reasons). But we don't, so we won't.\n-\n-            return Result : SA_Message (Kind => Kind) do\n-               if Kind in Check_Kind then\n-                  Result.Check_Result :=\n-                    SA_Check_Result'Value\n-                      (Get (Value, Field_Names.Check_Result));\n-               end if;\n-            end return;\n-         end Get_Message;\n-\n-         ----------\n-         -- Make --\n-         ----------\n-\n-         function Make\n-           (Location : Source_Location;\n-            Message  : SA_Message) return Message_And_Location\n-         is\n-           (Count => Location.Count, Message => Message, Location => Location);\n-\n-         -----------------\n-         -- To_Location --\n-         -----------------\n-\n-         function To_Location\n-           (Encoded   : JSON_Array;\n-            Full_Path : Boolean) return Source_Location is\n-         begin\n-            return Result : Source_Location (Count => Length (Encoded)) do\n-               for I in Result.Locations'Range loop\n-                  Result.Locations (I) :=\n-                    To_Simple_Location (Get (Encoded, I), Full_Path);\n-               end loop;\n-            end return;\n-         end To_Location;\n-\n-         ------------------------\n-         -- To_Simple_Location --\n-         ------------------------\n-\n-         function To_Simple_Location\n-           (Encoded   : JSON_Value;\n-            Full_Path : Boolean) return Simple_Source_Location\n-         is\n-            function Get_Iteration_Id\n-              (Kind : Iteration_Kind) return Iteration_Id;\n-            --  Given the discriminant for an Iteration_Id value, return the\n-            --  entire value.\n-\n-            ----------------------\n-            -- Get_Iteration_Id --\n-            ----------------------\n-\n-            function Get_Iteration_Id (Kind : Iteration_Kind)\n-              return Iteration_Id\n-            is\n-            begin\n-               --  Initialize non-discriminant fields, if any\n-\n-               return Result : Iteration_Id (Kind => Kind) do\n-                  if Kind = Numbered then\n-                     Result :=\n-                       (Kind     => Numbered,\n-                        Number   =>\n-                          Get (Encoded, Field_Names.Iteration_Number),\n-                        Of_Total =>\n-                          Get (Encoded, Field_Names.Iteration_Of_Total));\n-                  end if;\n-               end return;\n-            end Get_Iteration_Id;\n-\n-            --  Local variables\n-\n-            FN : constant Unbounded_String :=\n-                   Get (Encoded, Field_Names.File_Name);\n-\n-         --  Start of processing for To_Simple_Location\n-\n-         begin\n-            return\n-              (File_Name =>\n-                 (if Full_Path then\n-                     FN\n-                  else\n-                     To_Unbounded_String (Simple_Name (To_String (FN)))),\n-               Line      =>\n-                 Line_Number (Integer'(Get (Encoded, Field_Names.Line))),\n-               Column    =>\n-                 Column_Number (Integer'(Get (Encoded, Field_Names.Column))),\n-               Iteration =>\n-                 Get_Iteration_Id\n-                   (Kind => Iteration_Kind'Val (Integer'(Get\n-                              (Encoded, Field_Names.Iteration_Kind)))));\n-         end To_Simple_Location;\n-\n-      --  Start of processing for Get\n-\n-      begin\n-         Next_Index := Next_Index + 1;\n-\n-         return Make\n-           (Message  =>\n-              Get_Message\n-                (Message_Kind'Value (Get (Value, Field_Names.Message_Kind))),\n-            Location =>\n-              To_Location\n-                (Get (Value, Field_Names.Locations), Parse_Full_Path));\n-      end Get;\n-\n-      -------------\n-      -- Is_Open --\n-      -------------\n-\n-      function Is_Open return Boolean is (Is_Open (File));\n-\n-      ----------\n-      -- Open --\n-      ----------\n-\n-      procedure Open (File_Name : String; Full_Path : Boolean := True) is\n-         File_Text : Unbounded_String := Null_Unbounded_String;\n-\n-      begin\n-         Parse_Full_Path := Full_Path;\n-         Open (File => File, Mode => In_File, Name => File_Name);\n-\n-         --  File read here, not in Get, but that's an implementation detail\n-\n-         while not End_Of_File (File) loop\n-            Append (File_Text, Get_Line (File));\n-         end loop;\n-\n-         Messages   := Get (Read (File_Text), Field_Names.Messages);\n-         Next_Index := 1;\n-      end Open;\n-   end Reading;\n-\n-end SA_Messages;"}, {"sha": "c4483974984ba4636fc9adb1a2b5818650696bbe", "filename": "gcc/ada/sa_messages.ads", "status": "removed", "additions": 0, "deletions": 267, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d1620c91053438399064fa4eddb15d09cbabf4/gcc%2Fada%2Fsa_messages.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d1620c91053438399064fa4eddb15d09cbabf4/gcc%2Fada%2Fsa_messages.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsa_messages.ads?ref=62d1620c91053438399064fa4eddb15d09cbabf4", "patch": "@@ -1,267 +0,0 @@\n-------------------------------------------------------------------------------\n---                       C O D E P E E R / S P A R K                        --\n---                                                                          --\n---                     Copyright (C) 2015-2022, AdaCore                     --\n---                                                                          --\n--- This is free software;  you can redistribute it  and/or modify it  under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  This software is distributed in the hope  that it will be useful, --\n--- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --\n--- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --\n--- License for  more details.  You should have  received  a copy of the GNU --\n--- General  Public  License  distributed  with  this  software;   see  file --\n--- COPYING3.  If not, go to http://www.gnu.org/licenses for a complete copy --\n--- of the license.                                                          --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-pragma Ada_2012;\n-\n-with Ada.Containers;        use Ada.Containers;\n-with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;\n-\n-package SA_Messages is\n-\n-   --  This package can be used for reading/writing a file containing a\n-   --  sequence of static anaysis results. Each element can describe a runtime\n-   --  check whose outcome has been statically determined, or it might be a\n-   --  warning or diagnostic message. It is expected that typically CodePeer\n-   --  will do the writing and SPARK will do the reading; this will allow SPARK\n-   --  to get the benefit of CodePeer's analysis.\n-   --\n-   --  Each item is represented as a pair consisting of a message and an\n-   --  associated source location. Source locations may refer to a location\n-   --  within the expansion of an instance of a generic; this is represented\n-   --  by combining the corresponding location within the generic with the\n-   --  location of the instance (repeated if the instance itself occurs within\n-   --  a generic). In addition, the type Iteration_Id is intended for use in\n-   --  distinguishing messages which refer to a specific iteration of a loop\n-   --  (this case can arise, for example, if CodePeer chooses to unroll a\n-   --  for-loop). This data structure is only general enough to support the\n-   --  kinds of unrolling that are currently planned for CodePeer. For\n-   --  example, an Iteration_Id can only identify an iteration of the nearest\n-   --  enclosing loop of the associated File/Line/Column source location.\n-   --  This is not a problem because CodePeer doesn't unroll loops which\n-   --  contain other loops.\n-\n-   type Message_Kind is (\n-\n-      --  Check kinds\n-\n-      Array_Index_Check,\n-      Divide_By_Zero_Check,\n-      Tag_Check,\n-      Discriminant_Check,\n-      Range_Check,\n-      Overflow_Check,\n-      Assertion_Check,\n-\n-      --  Warning kinds\n-\n-      Suspicious_Range_Precondition_Warning,\n-      Suspicious_First_Precondition_Warning,\n-      Suspicious_Input_Warning,\n-      Suspicious_Constant_Operation_Warning,\n-      Unread_In_Out_Parameter_Warning,\n-      Unassigned_In_Out_Parameter_Warning,\n-      Non_Analyzed_Call_Warning,\n-      Procedure_Does_Not_Return_Warning,\n-      Check_Fails_On_Every_Call_Warning,\n-      Unknown_Call_Warning,\n-      Dead_Store_Warning,\n-      Dead_Outparam_Store_Warning,\n-      Potentially_Dead_Store_Warning,\n-      Same_Value_Dead_Store_Warning,\n-      Dead_Block_Warning,\n-      Infinite_Loop_Warning,\n-      Dead_Edge_Warning,\n-      Plain_Dead_Edge_Warning,\n-      True_Dead_Edge_Warning,\n-      False_Dead_Edge_Warning,\n-      True_Condition_Dead_Edge_Warning,\n-      False_Condition_Dead_Edge_Warning,\n-      Unrepeatable_While_Loop_Warning,\n-      Dead_Block_Continuation_Warning,\n-      Local_Lock_Of_Global_Object_Warning,\n-      Analyzed_Module_Warning,\n-      Non_Analyzed_Module_Warning,\n-      Non_Analyzed_Procedure_Warning,\n-      Incompletely_Analyzed_Procedure_Warning);\n-\n-   --  Assertion_Check includes checks for user-defined PPCs (both specific\n-   --  and class-wide), Assert pragma checks, subtype predicate checks,\n-   --  type invariant checks (specific and class-wide), and checks for\n-   --  implementation-defined assertions such as Assert_And_Cut, Assume,\n-   --  Contract_Cases, Default_Initial_Condition, Initial_Condition,\n-   --  Loop_Invariant, Loop_Variant, Refined_Post, and Subprogram_Variant.\n-   --\n-   --  It might be nice to distinguish these different kinds of assertions\n-   --  as is done in SPARK's VC_Kind enumeration type, but any distinction\n-   --  which isn't already present in CP's BE_Message_Subkind enumeration type\n-   --  would require more work on the CP side.\n-   --\n-   --  The warning kinds are pretty much a copy of the set of\n-   --  Be_Message_Subkind values for which CP's Is_Warning predicate returns\n-   --  True; see descriptive comment for each in CP's message_kinds.ads .\n-\n-   subtype Check_Kind is Message_Kind\n-     range Array_Index_Check .. Assertion_Check;\n-   subtype Warning_Kind is Message_Kind\n-     range Message_Kind'Succ (Check_Kind'Last) .. Message_Kind'Last;\n-\n-   --  Possible outcomes of the static analysis of a runtime check\n-   --\n-   --  Not_Statically_Known_With_Low_Severity could be used instead of of\n-   --  Not_Statically_Known if there is some reason to believe that (although\n-   --  the tool couldn't prove it) the check is likely to always pass (in CP\n-   --  terms, if the corresponding CP message has severity Low as opposed to\n-   --  Medium). It's not clear yet whether SPARK will care about this\n-   --  distinction.\n-\n-   type SA_Check_Result is\n-     (Statically_Known_Success,\n-      Not_Statically_Known_With_Low_Severity,\n-      Not_Statically_Known,\n-      Statically_Known_Failure);\n-\n-   type SA_Message (Kind : Message_Kind := Message_Kind'Last) is record\n-      case Kind is\n-         when Check_Kind =>\n-            Check_Result : SA_Check_Result;\n-\n-         when Warning_Kind =>\n-            null;\n-      end case;\n-   end record;\n-\n-   type Source_Location_Or_Null (<>) is private;\n-   Null_Location : constant Source_Location_Or_Null;\n-   subtype Source_Location is Source_Location_Or_Null with\n-     Dynamic_Predicate => Source_Location /= Null_Location;\n-\n-   type Line_Number is new Positive;\n-   type Column_Number is new Positive;\n-\n-   function File_Name (Location : Source_Location) return String;\n-   function File_Name (Location : Source_Location) return Unbounded_String;\n-   function Line      (Location : Source_Location) return Line_Number;\n-   function Column    (Location : Source_Location) return Column_Number;\n-\n-   type Iteration_Kind is (None, Initial, Subsequent, Numbered);\n-   --  None is for the usual no-unrolling case.\n-   --  Initial and Subsequent are for use in the case where only the first\n-   --  iteration of a loop (or some part thereof, such as the termination\n-   --  test of a while-loop) is unrolled.\n-   --  Numbered is for use in the case where a for-loop with a statically\n-   --  known number of iterations is fully unrolled.\n-\n-   subtype Iteration_Number is Integer range 1 .. 255;\n-   subtype Iteration_Total  is Integer range 2 .. 255;\n-\n-   type Iteration_Id (Kind : Iteration_Kind := None) is record\n-      case Kind is\n-         when Numbered =>\n-            Number   : Iteration_Number;\n-            Of_Total : Iteration_Total;\n-         when others =>\n-            null;\n-      end case;\n-   end record;\n-\n-   function Iteration (Location : Source_Location) return Iteration_Id;\n-\n-   function Enclosing_Instance\n-     (Location : Source_Location) return Source_Location_Or_Null;\n-   --  For a source location occurring within the expansion of an instance of a\n-   --  generic unit, the Line, Column, and File_Name selectors will indicate a\n-   --  location within the generic; the Enclosing_Instance selector yields the\n-   --  location of the declaration of the instance.\n-\n-   function Make\n-     (File_Name : String;\n-      Line      : Line_Number;\n-      Column    : Column_Number;\n-      Iteration : Iteration_Id;\n-      Enclosing_Instance : Source_Location_Or_Null) return Source_Location;\n-   --  Constructor\n-\n-   type Message_And_Location (<>) is private;\n-\n-   function Location (Item : Message_And_Location) return Source_Location;\n-   function Message (Item : Message_And_Location) return SA_Message;\n-\n-   function Make_Msg_Loc\n-     (Msg : SA_Message;\n-      Loc : Source_Location) return Message_And_Location;\n-   --  Selectors\n-\n-   function \"<\" (Left, Right : Message_And_Location) return Boolean;\n-   function Hash (Key : Message_And_Location) return Hash_Type;\n-   --  Actuals for container instances\n-\n-   File_Extension : constant String; -- \".json\" (but could change in future)\n-   --  Clients may wish to use File_Extension in constructing\n-   --  File_Name parameters for calls to Open.\n-\n-   package Writing is\n-      function Is_Open return Boolean;\n-\n-      procedure Open (File_Name : String) with\n-        Precondition  => not Is_Open,\n-        Postcondition => Is_Open;\n-      --  Behaves like Text_IO.Create with respect to error cases\n-\n-      procedure Write (Message : SA_Message; Location : Source_Location);\n-\n-      procedure Close with\n-        Precondition  => Is_Open,\n-        Postcondition => not Is_Open;\n-      --  Behaves like Text_IO.Close with respect to error cases\n-   end Writing;\n-\n-   package Reading is\n-      function Is_Open return Boolean;\n-\n-      procedure Open (File_Name : String; Full_Path : Boolean := True) with\n-        Precondition  => not Is_Open,\n-        Postcondition => Is_Open;\n-      --  Behaves like Text_IO.Open with respect to error cases\n-\n-      function Done return Boolean with\n-        Precondition => Is_Open;\n-\n-      function Get return Message_And_Location with\n-        Precondition => not Done;\n-\n-      procedure Close with\n-        Precondition  => Is_Open,\n-        Postcondition => not Is_Open;\n-      --  Behaves like Text_IO.Close with respect to error cases\n-   end Reading;\n-\n-private\n-   type Simple_Source_Location is record\n-      File_Name : Unbounded_String := Null_Unbounded_String;\n-      Line      : Line_Number      := Line_Number'Last;\n-      Column    : Column_Number    := Column_Number'Last;\n-      Iteration : Iteration_Id     := (Kind => None);\n-   end record;\n-\n-   type Source_Locations is\n-     array (Natural range <>) of Simple_Source_Location;\n-\n-   type Source_Location_Or_Null (Count : Natural) is record\n-      Locations : Source_Locations (1 .. Count);\n-   end record;\n-\n-   Null_Location : constant Source_Location_Or_Null :=\n-                     (Count => 0, Locations => (others => <>));\n-\n-   type Message_And_Location (Count : Positive) is record\n-      Message  : SA_Message;\n-      Location : Source_Location (Count => Count);\n-   end record;\n-\n-   File_Extension : constant String := \".json\";\n-end SA_Messages;"}, {"sha": "ddb4c3efb7231eeaf8a5a98226885c1a3b51a71a", "filename": "gcc/ada/scans.ads", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fscans.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fscans.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscans.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -358,38 +358,35 @@ package Scans is\n    --  Note: these variables can only be referenced during the parsing of a\n    --  file. Reference to any of them from Sem or the expander is wrong.\n \n-   --  These variables are initialized as required by Scn.Initialize_Scanner,\n-   --  and should not be referenced before such a call. However, there are\n-   --  situations in which these variables are saved and restored, and this\n-   --  may happen before the first Initialize_Scanner call, resulting in the\n-   --  assignment of invalid values. To avoid this, and allow building with\n-   --  the -gnatVa switch, we initialize some variables to known valid values.\n-\n-   Scan_Ptr : Source_Ptr := No_Location; -- init for -gnatVa\n+   --  These variables are initialized by Scn.Initialize_Scanner, and should\n+   --  not be referenced before such a call, except for saving and restoring\n+   --  them.\n+\n+   Scan_Ptr : Source_Ptr := No_Location;\n    --  Current scan pointer location. After a call to Scan, this points\n    --  just past the end of the token just scanned.\n \n-   Token : Token_Type := No_Token; -- init for -gnatVa\n+   Token : Token_Type := No_Token;\n    --  Type of current token\n \n-   Token_Ptr : Source_Ptr := No_Location; -- init for -gnatVa\n+   Token_Ptr : Source_Ptr := No_Location;\n    --  Pointer to first character of current token\n \n-   Current_Line_Start : Source_Ptr := No_Location; -- init for -gnatVa\n+   Current_Line_Start : Source_Ptr := No_Location;\n    --  Pointer to first character of line containing current token\n \n-   Start_Column : Column_Number := No_Column_Number; -- init for -gnatVa\n+   Start_Column : Column_Number := No_Column_Number;\n    --  Starting column number (zero origin) of the first non-blank character\n    --  on the line containing the current token. This is used for error\n    --  recovery circuits which depend on looking at the column line up.\n \n-   Type_Token_Location : Source_Ptr := No_Location; -- init for -gnatVa\n+   Type_Token_Location : Source_Ptr := No_Location;\n    --  Within a type declaration, gives the location of the TYPE keyword that\n    --  opened the type declaration. Used in checking the end column of a record\n    --  declaration, which can line up either with the TYPE keyword, or with the\n    --  start of the line containing the RECORD keyword.\n \n-   Checksum : Word := 0; -- init for -gnatVa\n+   Checksum : Word := 0;\n    --  Used to accumulate a CRC representing the tokens in the source\n    --  file being compiled. This CRC includes only program tokens, and\n    --  excludes comments.\n@@ -399,7 +396,7 @@ package Scans is\n    --  limited view of a package, i.e. visible type names and related\n    --  tagged indicators.\n \n-   First_Non_Blank_Location : Source_Ptr := No_Location; -- init for -gnatVa\n+   First_Non_Blank_Location : Source_Ptr := No_Location;\n    --  Location of first non-blank character on the line containing the\n    --  current token (i.e. the location of the character whose column number\n    --  is stored in Start_Column)."}, {"sha": "35d6981ad5c0403284fe52cde17f62327c6063df", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -26,14 +26,14 @@\n with Atree;          use Atree;\n with Csets;          use Csets;\n with Namet;          use Namet;\n-with Opt;            use Opt;\n with Restrict;       use Restrict;\n with Rident;         use Rident;\n with Scans;          use Scans;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinput;         use Sinput;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n package body Scn is\n "}, {"sha": "433f1ac84ca3ad4f7a351c42e65d1c0220225937", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 44, "deletions": 5, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -70,6 +70,7 @@ with Targparm;       use Targparm;\n with Tbuild;         use Tbuild;\n with Ttypes;         use Ttypes;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n package body Sem_Aggr is\n \n@@ -1052,7 +1053,7 @@ package body Sem_Aggr is\n       elsif Is_Array_Type (Typ) and then Null_Record_Present (N) then\n          Error_Msg_N (\"null record forbidden in array aggregate\", N);\n \n-      elsif Present (Find_Aspect (Typ, Aspect_Aggregate))\n+      elsif Has_Aspect (Typ, Aspect_Aggregate)\n         and then Ekind (Typ) /= E_Record_Type\n         and then Ada_Version >= Ada_2022\n       then\n@@ -2355,7 +2356,7 @@ package body Sem_Aggr is\n                --  duplicate the expression tree to analyze the copy and\n                --  perform the required check.\n \n-               elsif not Present (Etype (Expression (Assoc))) then\n+               elsif No (Etype (Expression (Assoc))) then\n                   declare\n                      Save_Analysis : constant Boolean := Full_Analysis;\n                      Expr          : constant Node_Id :=\n@@ -3241,7 +3242,7 @@ package body Sem_Aggr is\n             end loop;\n          end;\n \n-      else\n+      elsif Present (Assign_Indexed_Subp) then\n          --  Indexed Aggregate. Positional or indexed component\n          --  can be present, but not both. Choices must be static\n          --  values or ranges with static bounds.\n@@ -3421,6 +3422,18 @@ package body Sem_Aggr is\n       Analyze_And_Resolve (Base, Typ);\n \n       if Is_Array_Type (Typ) then\n+         --  For an array_delta_aggregate, the base_expression and each\n+         --  expression in every array_component_association shall be of a\n+         --  nonlimited type; RM 4.3.4(13/5). However, to prevent repeated\n+         --  errors we only check the base expression and not array component\n+         --  associations.\n+\n+         if Is_Limited_Type (Etype (Base)) then\n+            Error_Msg_N\n+              (\"array delta aggregate shall be of a nonlimited type\", Base);\n+            Explain_Limited_Type (Etype (Base), Base);\n+         end if;\n+\n          Resolve_Delta_Array_Aggregate (N, Typ);\n       else\n \n@@ -3432,6 +3445,11 @@ package body Sem_Aggr is\n               (\"delta aggregates for record types must use (), not '[']\", N);\n          end if;\n \n+         --  The base_expression of a record_delta_aggregate can be of a\n+         --  limited type only if it is newly constructed; RM 7.5(2.1/5).\n+\n+         Check_Expr_OK_In_Limited_Aggregate (Base);\n+\n          Resolve_Delta_Record_Aggregate (N, Typ);\n       end if;\n \n@@ -3531,7 +3549,18 @@ package body Sem_Aggr is\n                Next (Choice);\n             end loop;\n \n-            Analyze_And_Resolve (Expression (Assoc), Component_Type (Typ));\n+            --  For an array_delta_aggregate, the array_component_association\n+            --  shall not use the box symbol <>; RM 4.3.4(11/5).\n+\n+            pragma Assert\n+              (Box_Present (Assoc) xor Present (Expression (Assoc)));\n+\n+            if Box_Present (Assoc) then\n+               Error_Msg_N\n+                 (\"'<'> in array delta aggregate is not allowed\", Assoc);\n+            else\n+               Analyze_And_Resolve (Expression (Assoc), Component_Type (Typ));\n+            end if;\n          end if;\n \n          Next (Assoc);\n@@ -3735,7 +3764,17 @@ package body Sem_Aggr is\n               (\"'<'> in record delta aggregate is not allowed\", Assoc);\n          else\n             Analyze_And_Resolve (Expression (Assoc), Comp_Type);\n+\n+            --  The expression must not be of a limited type; RM 4.3.1(17.4/5)\n+\n+            if Is_Limited_Type (Etype (Expression (Assoc))) then\n+               Error_Msg_N\n+                 (\"expression of a limited type in record delta aggregate \" &\n+                    \"is not allowed\",\n+                  Expression (Assoc));\n+            end if;\n          end if;\n+\n          Next (Assoc);\n       end loop;\n    end Resolve_Delta_Record_Aggregate;\n@@ -5747,7 +5786,7 @@ package body Sem_Aggr is\n             --  Ignore hidden components associated with the position of the\n             --  interface tags: these are initialized dynamically.\n \n-            if not Present (Related_Type (Component)) then\n+            if No (Related_Type (Component)) then\n                Error_Msg_NE\n                  (\"no value supplied for component &!\", N, Component);\n             end if;"}, {"sha": "7c76f0fef0aeb14cbcd90320b493f56a1de54c1e", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 42, "deletions": 135, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -25,6 +25,7 @@\n \n with Ada.Characters.Latin_1; use Ada.Characters.Latin_1;\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Casing;         use Casing;\n@@ -84,6 +85,7 @@ with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n with Uname;          use Uname;\n with Urealp;         use Urealp;\n+with Warnsw;         use Warnsw;\n \n with System.CRC32;   use System.CRC32;\n \n@@ -1138,7 +1140,7 @@ package body Sem_Attr is\n                   --  pointer can be used to modify the variable, and we might\n                   --  not detect this, leading to some junk warnings.\n \n-                  --  We only do this for source references, since otherwise\n+                  --  We do this only for source references, since otherwise\n                   --  we can suppress warnings, e.g. from the unrestricted\n                   --  access generated for validity checks in -gnatVa mode.\n \n@@ -3429,7 +3431,34 @@ package body Sem_Attr is\n          Check_E0;\n          Address_Checks;\n          Check_Not_Incomplete_Type;\n-         Set_Etype (N, RTE (RE_Address));\n+\n+         --  If the prefix is a dereference of a value whose associated access\n+         --  type has been specified with aspect Designated_Storage_Model, then\n+         --  use the associated Storage_Model_Type's address type as the type\n+         --  of the attribute. Otherwise we use System.Address as usual. This\n+         --  isn't normally legit for a predefined attribute, but this is for\n+         --  our own extension to addressing and currently requires extensions\n+         --  to be enabled (such as with -gnatX0).\n+\n+         declare\n+            Prefix_Obj : constant Node_Id := Get_Referenced_Object (P);\n+            Addr_Type  : Entity_Id        := RTE (RE_Address);\n+         begin\n+            if Nkind (Prefix_Obj) = N_Explicit_Dereference then\n+               declare\n+                  P_Type : constant Entity_Id := Etype (Prefix (Prefix_Obj));\n+\n+                  use Storage_Model_Support;\n+               begin\n+                  if Has_Designated_Storage_Model_Aspect (P_Type) then\n+                     Addr_Type := Storage_Model_Address_Type\n+                                    (Storage_Model_Object (P_Type));\n+                  end if;\n+               end;\n+            end if;\n+\n+            Set_Etype (N, Addr_Type);\n+         end;\n \n       ------------------\n       -- Address_Size --\n@@ -3888,7 +3917,7 @@ package body Sem_Attr is\n \n             elsif (Is_Generic_Type (P_Type)\n                     or else Is_Generic_Actual_Type (P_Type))\n-              and then Extensions_Allowed\n+              and then All_Extensions_Allowed\n             then\n                return;\n             end if;\n@@ -5996,8 +6025,8 @@ package body Sem_Attr is\n                --  Verify that prefix can be iterated upon.\n \n                if Is_Array_Type (Typ)\n-                 or else Present (Find_Aspect (Typ, Aspect_Default_Iterator))\n-                 or else Present (Find_Aspect (Typ, Aspect_Iterable))\n+                 or else Has_Aspect (Typ, Aspect_Default_Iterator)\n+                 or else Has_Aspect (Typ, Aspect_Iterable)\n                then\n                   null;\n                else\n@@ -6425,7 +6454,7 @@ package body Sem_Attr is\n             --  type to the pool object's type.\n \n             else\n-               if not Present (Get_Rep_Pragma (Etype (Entity (N)),\n+               if No (Get_Rep_Pragma (Etype (Entity (N)),\n                                                Name_Simple_Storage_Pool_Type))\n                then\n                   Error_Attr_P\n@@ -9203,13 +9232,15 @@ package body Sem_Attr is\n       --  Image is a scalar attribute, but is never static, because it is\n       --  not a static function (having a non-scalar argument (RM 4.9(22))\n       --  However, we can constant-fold the image of an enumeration literal\n-      --  if names are available.\n+      --  if names are available and default Image implementation has not\n+      --  been overridden.\n \n       when Attribute_Image =>\n          if Is_Entity_Name (E1)\n            and then Ekind (Entity (E1)) = E_Enumeration_Literal\n            and then not Discard_Names (First_Subtype (Etype (E1)))\n            and then not Global_Discard_Names\n+           and then not Has_Aspect (Etype (E1), Aspect_Put_Image)\n          then\n             declare\n                Lit : constant Entity_Id := Entity (E1);\n@@ -10906,72 +10937,12 @@ package body Sem_Attr is\n       It       : Interp;\n       Nom_Subt : Entity_Id;\n \n-      procedure Accessibility_Message;\n-      --  Error, or warning within an instance, if the static accessibility\n-      --  rules of 3.10.2 are violated.\n-\n       function Declared_Within_Generic_Unit\n         (Entity       : Entity_Id;\n          Generic_Unit : Node_Id) return Boolean;\n       --  Returns True if Declared_Entity is declared within the declarative\n       --  region of Generic_Unit; otherwise returns False.\n \n-      function Prefix_With_Safe_Accessibility_Level return Boolean;\n-      --  Return True if the prefix does not have a value conversion of an\n-      --  array because a value conversion is like an aggregate with respect\n-      --  to determining accessibility level (RM 3.10.2); even if evaluation\n-      --  of a value conversion is guaranteed to not create a new object,\n-      --  accessibility rules are defined as if it might.\n-\n-      ---------------------------\n-      -- Accessibility_Message --\n-      ---------------------------\n-\n-      procedure Accessibility_Message is\n-         Indic : Node_Id := Parent (Parent (N));\n-\n-      begin\n-         --  In an instance, this is a runtime check, but one we\n-         --  know will fail, so generate an appropriate warning.\n-\n-         if In_Instance_Body then\n-            Error_Msg_Warn := SPARK_Mode /= On;\n-            Error_Msg_F\n-              (\"non-local pointer cannot point to local object<<\", P);\n-            Error_Msg_F (\"\\Program_Error [<<\", P);\n-            Rewrite (N,\n-              Make_Raise_Program_Error (Loc,\n-                Reason => PE_Accessibility_Check_Failed));\n-            Set_Etype (N, Typ);\n-            return;\n-\n-         else\n-            Error_Msg_F (\"non-local pointer cannot point to local object\", P);\n-\n-            --  Check for case where we have a missing access definition\n-\n-            if Is_Record_Type (Current_Scope)\n-              and then\n-                Nkind (Parent (N)) in N_Discriminant_Association\n-                                    | N_Index_Or_Discriminant_Constraint\n-            then\n-               Indic := Parent (Parent (N));\n-               while Present (Indic)\n-                 and then Nkind (Indic) /= N_Subtype_Indication\n-               loop\n-                  Indic := Parent (Indic);\n-               end loop;\n-\n-               if Present (Indic) then\n-                  Error_Msg_NE\n-                    (\"\\use an access definition for\" &\n-                     \" the access discriminant of&\",\n-                     N, Entity (Subtype_Mark (Indic)));\n-               end if;\n-            end if;\n-         end if;\n-      end Accessibility_Message;\n-\n       ----------------------------------\n       -- Declared_Within_Generic_Unit --\n       ----------------------------------\n@@ -10999,70 +10970,6 @@ package body Sem_Attr is\n          return False;\n       end Declared_Within_Generic_Unit;\n \n-      ------------------------------------------\n-      -- Prefix_With_Safe_Accessibility_Level --\n-      ------------------------------------------\n-\n-      function Prefix_With_Safe_Accessibility_Level return Boolean is\n-         function Safe_Value_Conversions return Boolean;\n-         --  Return False if the prefix has a value conversion of an array type\n-\n-         ----------------------------\n-         -- Safe_Value_Conversions --\n-         ----------------------------\n-\n-         function Safe_Value_Conversions return Boolean is\n-            PP : Node_Id := P;\n-\n-         begin\n-            loop\n-               if Nkind (PP) in N_Selected_Component | N_Indexed_Component then\n-                  PP := Prefix (PP);\n-\n-               elsif Comes_From_Source (PP)\n-                 and then Nkind (PP) in N_Type_Conversion\n-                                      | N_Unchecked_Type_Conversion\n-                 and then Is_Array_Type (Etype (PP))\n-               then\n-                  return False;\n-\n-               elsif Comes_From_Source (PP)\n-                 and then Nkind (PP) = N_Qualified_Expression\n-                 and then Is_Array_Type (Etype (PP))\n-                 and then Nkind (Original_Node (Expression (PP))) in\n-                            N_Aggregate | N_Extension_Aggregate\n-               then\n-                  return False;\n-\n-               else\n-                  exit;\n-               end if;\n-            end loop;\n-\n-            return True;\n-         end Safe_Value_Conversions;\n-\n-      --  Start of processing for Prefix_With_Safe_Accessibility_Level\n-\n-      begin\n-         --  No check required for unchecked and unrestricted access\n-\n-         if Attr_Id = Attribute_Unchecked_Access\n-           or else Attr_Id = Attribute_Unrestricted_Access\n-         then\n-            return True;\n-\n-         --  Check value conversions\n-\n-         elsif Ekind (Btyp) = E_General_Access_Type\n-           and then not Safe_Value_Conversions\n-         then\n-            return False;\n-         end if;\n-\n-         return True;\n-      end Prefix_With_Safe_Accessibility_Level;\n-\n    --  Start of processing for Resolve_Attribute\n \n    begin\n@@ -11748,7 +11655,7 @@ package body Sem_Attr is\n                       Intval (Accessibility_Level (P, Dynamic_Level))\n                         > Deepest_Type_Access_Level (Btyp)\n                   then\n-                     Accessibility_Message;\n+                     Accessibility_Message (N, Typ);\n                      return;\n                   end if;\n                end;\n@@ -11774,7 +11681,7 @@ package body Sem_Attr is\n                  and then Ekind (Btyp) = E_Access_Protected_Subprogram_Type\n                  and then Attr_Id /= Attribute_Unrestricted_Access\n                then\n-                  Accessibility_Message;\n+                  Accessibility_Message (N, Typ);\n                   return;\n \n                --  AI05-0225: If the context is not an access to protected\n@@ -11933,8 +11840,8 @@ package body Sem_Attr is\n             --  array type since a value conversion is like an aggregate with\n             --  respect to determining accessibility level (RM 3.10.2).\n \n-            if not Prefix_With_Safe_Accessibility_Level then\n-               Accessibility_Message;\n+            if not Prefix_With_Safe_Accessibility_Level (N, Typ) then\n+               Accessibility_Message (N, Typ);\n                return;\n             end if;\n "}, {"sha": "004aadbd70401ec8071a4078bd11797094f6e898", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -279,7 +279,7 @@ package Sem_Aux is\n    --  or subtype. This is true if Suppress_Initialization is set either for\n    --  the subtype itself, or for the corresponding base type.\n \n-   function Is_Body (N : Node_Id) return Boolean;\n+   function Is_Body (N : Node_Id) return Boolean with Inline;\n    --  Determine whether an arbitrary node denotes a body\n \n    function Is_By_Copy_Type (Ent : Entity_Id) return Boolean;"}, {"sha": "9577921a9ab1fd79e022ee122c0e9a34d4feca54", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -48,6 +48,7 @@ with Stringt;        use Stringt;\n with Table;\n with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n with Ada.Unchecked_Deallocation;\n \n@@ -192,8 +193,13 @@ package body Sem_Case is\n            record\n               Low, High : Uint;\n            end record;\n+         function \"=\" (X, Y : Discrete_Range_Info) return Boolean is abstract;\n+         --  Here (and below), we don't use \"=\", which is a good thing,\n+         --  because it wouldn't work, because the user-defined \"=\" on\n+         --  Uint does not compose according to Ada rules.\n \n          type Composite_Range_Info is array (Part_Id) of Discrete_Range_Info;\n+         function \"=\" (X, Y : Composite_Range_Info) return Boolean is abstract;\n \n          type Choice_Range_Info (Is_Others : Boolean := False) is\n            record\n@@ -204,6 +210,9 @@ package body Sem_Case is\n                     null;\n               end case;\n            end record;\n+         pragma Annotate (CodePeer, False_Positive, \"raise exception\",\n+                          \"function is abstract, hence never called\");\n+         function \"=\" (X, Y : Choice_Range_Info) return Boolean is abstract;\n \n          type Choices_Range_Info is array (Choice_Id) of Choice_Range_Info;\n \n@@ -1611,7 +1620,7 @@ package body Sem_Case is\n                   begin\n                      while Present (Comp) loop\n                         if Chars (First (Choices (Comp))) = Orig_Name then\n-                           pragma Assert (not Present (Matching_Comp));\n+                           pragma Assert (No (Matching_Comp));\n                            Matching_Comp := Comp;\n                         end if;\n \n@@ -3581,7 +3590,7 @@ package body Sem_Case is\n \n             --  Hold on, maybe it isn't a complete mess after all.\n \n-            if Extensions_Allowed and then Subtyp /= Any_Type then\n+            if Core_Extensions_Allowed and then Subtyp /= Any_Type then\n                Check_Composite_Case_Selector;\n                Check_Case_Pattern_Choices;\n             end if;\n@@ -3864,7 +3873,7 @@ package body Sem_Case is\n    function Is_Case_Choice_Pattern (Expr : Node_Id) return Boolean is\n       E : Node_Id := Expr;\n    begin\n-      if not Extensions_Allowed then\n+      if not Core_Extensions_Allowed then\n          return False;\n       end if;\n "}, {"sha": "a93808370c20e1759f42126410f01daf2f0be29e", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -74,6 +74,7 @@ with Style;          use Style;\n with Stylesw;        use Stylesw;\n with Tbuild;         use Tbuild;\n with Uname;          use Uname;\n+with Warnsw;         use Warnsw;\n \n package body Sem_Ch10 is\n "}, {"sha": "ea6f9c872af93644cfcea283557b6a863f1eb630", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -50,6 +50,7 @@ with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n with Stand;          use Stand;\n+with Warnsw;         use Warnsw;\n \n package body Sem_Ch11 is\n "}, {"sha": "1ea95845a16011136804aed9f7485c37a2e6611c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 45, "deletions": 28, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -1151,7 +1151,7 @@ package body Sem_Ch12 is\n       --  in which case the predefined operations will be used. This merits\n       --  a warning because of the special semantics of fixed point ops.\n \n-      procedure Check_Overloaded_Formal_Subprogram (Formal : Entity_Id);\n+      procedure Check_Overloaded_Formal_Subprogram (Formal : Node_Id);\n       --  Apply RM 12.3(9): if a formal subprogram is overloaded, the instance\n       --  cannot have a named association for it. AI05-0025 extends this rule\n       --  to formals of formal packages by AI05-0025, and it also applies to\n@@ -1203,12 +1203,31 @@ package body Sem_Ch12 is\n       -------------------------------\n \n       procedure Build_Subprogram_Wrappers is\n+         function Adjust_Aspect_Sloc (N : Node_Id) return Traverse_Result;\n+         --  Adjust sloc so that errors located at N will be reported with\n+         --  information about the instance and not just about the generic.\n+\n+         ------------------------\n+         -- Adjust_Aspect_Sloc --\n+         ------------------------\n+\n+         function Adjust_Aspect_Sloc (N : Node_Id) return Traverse_Result is\n+         begin\n+            Adjust_Instantiation_Sloc (N, S_Adjustment);\n+            return OK;\n+         end Adjust_Aspect_Sloc;\n+\n+         procedure Adjust_Aspect_Slocs is new\n+           Traverse_Proc (Adjust_Aspect_Sloc);\n+\n          Formal : constant Entity_Id :=\n            Defining_Unit_Name (Specification (Analyzed_Formal));\n          Aspect_Spec : Node_Id;\n          Decl_Node   : Node_Id;\n          Actual_Name : Node_Id;\n \n+      --  Start of processing for Build_Subprogram_Wrappers\n+\n       begin\n          --  Create declaration for wrapper subprogram\n          --  The actual can be overloaded, in which case it will be\n@@ -1247,6 +1266,7 @@ package body Sem_Ch12 is\n \n          Aspect_Spec := First (Aspect_Specifications (Decl_Node));\n          while Present (Aspect_Spec) loop\n+            Adjust_Aspect_Slocs (Aspect_Spec);\n             Set_Analyzed (Aspect_Spec, False);\n             Next (Aspect_Spec);\n          end loop;\n@@ -1259,15 +1279,15 @@ package body Sem_Ch12 is\n          --  actuals.\n \n          Append_To (Assoc_List,\n-            Build_Subprogram_Body_Wrapper (Formal, Actual_Name));\n+           Build_Subprogram_Body_Wrapper (Formal, Actual_Name));\n       end Build_Subprogram_Wrappers;\n \n       ----------------------------------------\n       -- Check_Overloaded_Formal_Subprogram --\n       ----------------------------------------\n \n-      procedure Check_Overloaded_Formal_Subprogram (Formal : Entity_Id) is\n-         Temp_Formal : Entity_Id;\n+      procedure Check_Overloaded_Formal_Subprogram (Formal : Node_Id) is\n+         Temp_Formal : Node_Id;\n \n       begin\n          Temp_Formal := First (Formals);\n@@ -1449,8 +1469,8 @@ package body Sem_Ch12 is\n         (F   : Entity_Id;\n          A_F : Entity_Id) return Node_Id\n       is\n-         Prev  : Node_Id;\n-         Act   : Node_Id;\n+         Prev : Node_Id;\n+         Act  : Node_Id;\n \n       begin\n          Is_Named_Assoc := False;\n@@ -1937,7 +1957,7 @@ package body Sem_Ch12 is\n                      --  take place e.g. within an enclosing generic unit.\n \n                      if Has_Contracts (Analyzed_Formal)\n-                       and then Expander_Active\n+                       and then (Expander_Active or GNATprove_Mode)\n                      then\n                         Build_Subprogram_Wrappers;\n                      end if;\n@@ -3121,7 +3141,6 @@ package body Sem_Ch12 is\n       if Present (Aspect_Specifications (Gen_Decl)) then\n          if No (Aspect_Specifications (N)) then\n             Set_Aspect_Specifications (N, New_List);\n-            Set_Has_Aspects (N);\n          end if;\n \n          declare\n@@ -6253,7 +6272,7 @@ package body Sem_Ch12 is\n \n       while Present (Act) loop\n          Append_To (Actuals,\n-            Make_Identifier  (Loc, Chars (Defining_Identifier (Act))));\n+            Make_Identifier (Loc, Chars (Defining_Identifier (Act))));\n          Next (Act);\n       end loop;\n \n@@ -6274,8 +6293,8 @@ package body Sem_Ch12 is\n         Specification => Spec_Node,\n         Declarations  => New_List,\n         Handled_Statement_Sequence =>\n-           Make_Handled_Sequence_Of_Statements (Loc,\n-             Statements    => New_List (Stmt)));\n+          Make_Handled_Sequence_Of_Statements (Loc,\n+            Statements => New_List (Stmt)));\n \n       return Body_Node;\n    end Build_Subprogram_Body_Wrapper;\n@@ -7024,7 +7043,7 @@ package body Sem_Ch12 is\n                Astype := First_Subtype (E);\n             end if;\n \n-            Set_Size_Info      (E, (Astype));\n+            Set_Size_Info      (E, Astype);\n             Copy_RM_Size       (To => E, From => Astype);\n             Set_First_Rep_Item (E, First_Rep_Item (Astype));\n \n@@ -7055,12 +7074,10 @@ package body Sem_Ch12 is\n             elsif Present (Associated_Formal_Package (E))\n               and then not Is_Generic_Formal (E)\n             then\n-               if Box_Present (Parent (Associated_Formal_Package (E))) then\n-                  Check_Generic_Actuals (Renamed_Entity (E), True);\n-\n-               else\n-                  Check_Generic_Actuals (Renamed_Entity (E), False);\n-               end if;\n+               Check_Generic_Actuals\n+                 (Renamed_Entity (E),\n+                  Is_Formal_Box =>\n+                    Box_Present (Parent (Associated_Formal_Package (E))));\n \n                Set_Is_Hidden (E, False);\n             end if;\n@@ -11091,6 +11108,8 @@ package body Sem_Ch12 is\n \n          Set_Convention (Defining_Unit_Name (New_Spec), Convention_Intrinsic);\n \n+         Copy_Ghost_Aspect (Formal, To => Decl_Node);\n+\n          --  Eliminate the calls to it when optimization is enabled\n \n          Set_Is_Inlined (Defining_Unit_Name (New_Spec));\n@@ -11873,7 +11892,7 @@ package body Sem_Ch12 is\n       Saved_SM   : constant SPARK_Mode_Type          := SPARK_Mode;\n       Saved_SMP  : constant Node_Id                  := SPARK_Mode_Pragma;\n       Saved_SS   : constant Suppress_Record          := Scope_Suppress;\n-      Saved_Warn : constant Warning_Record           := Save_Warnings;\n+      Saved_Warn : constant Warnings_State           := Save_Warnings;\n \n       Act_Body      : Node_Id;\n       Act_Body_Id   : Entity_Id;\n@@ -12410,7 +12429,7 @@ package body Sem_Ch12 is\n       Saved_SM   : constant SPARK_Mode_Type          := SPARK_Mode;\n       Saved_SMP  : constant Node_Id                  := SPARK_Mode_Pragma;\n       Saved_SS   : constant Suppress_Record          := Scope_Suppress;\n-      Saved_Warn : constant Warning_Record           := Save_Warnings;\n+      Saved_Warn : constant Warnings_State           := Save_Warnings;\n \n       Act_Body      : Node_Id;\n       Act_Body_Id   : Entity_Id;\n@@ -14086,7 +14105,7 @@ package body Sem_Ch12 is\n             --  a full view, then we'll retrieve that.\n \n             if Ekind (A_Gen_T) = E_Incomplete_Type\n-              and then not Present (Full_View (Act_T))\n+              and then No (Full_View (Act_T))\n             then\n                null;\n \n@@ -14413,7 +14432,7 @@ package body Sem_Ch12 is\n    is\n       Comp_Unit          : constant Node_Id := Cunit (Get_Source_Unit (Spec));\n       Saved_Style_Check  : constant Boolean := Style_Check;\n-      Saved_Warnings     : constant Warning_Record := Save_Warnings;\n+      Saved_Warn         : constant Warnings_State := Save_Warnings;\n       True_Parent        : Node_Id;\n       Inst_Node          : Node_Id;\n       OK                 : Boolean;\n@@ -14744,7 +14763,7 @@ package body Sem_Ch12 is\n             Expander_Mode_Save_And_Set (True);\n             Load_Needed_Body (Comp_Unit, OK);\n             Opt.Style_Check := Saved_Style_Check;\n-            Restore_Warnings (Saved_Warnings);\n+            Restore_Warnings (Saved_Warn);\n             Expander_Mode_Restore;\n \n             if not OK\n@@ -15458,7 +15477,7 @@ package body Sem_Ch12 is\n             end loop;\n          end if;\n \n-         Exchange_Declarations (Node (M));\n+         Exchange_Declarations (Typ);\n          Next_Elmt (M);\n       end loop;\n \n@@ -17306,13 +17325,11 @@ package body Sem_Ch12 is\n \n             else\n                declare\n-                  Act_Iface_List : Elist_Id;\n-                  Iface          : Node_Id;\n-                  Iface_Ent      : Entity_Id;\n+                  Iface     : Node_Id;\n+                  Iface_Ent : Entity_Id;\n \n                begin\n                   Iface := First (Abstract_Interface_List (Formal));\n-                  Collect_Interfaces (Def_Sub, Act_Iface_List);\n \n                   while Present (Iface) loop\n                      Iface_Ent := Entity (Iface);"}, {"sha": "69c9d6404e6514a9f01a6ebb4af06ee80479d371", "filename": "gcc/ada/sem_ch12.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.ads?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -27,15 +27,15 @@ with Inline; use Inline;\n with Types;  use Types;\n \n package Sem_Ch12 is\n-   procedure Analyze_Generic_Package_Declaration        (N : Node_Id);\n-   procedure Analyze_Generic_Subprogram_Declaration     (N : Node_Id);\n-   procedure Analyze_Package_Instantiation              (N : Node_Id);\n-   procedure Analyze_Procedure_Instantiation            (N : Node_Id);\n-   procedure Analyze_Function_Instantiation             (N : Node_Id);\n-   procedure Analyze_Formal_Object_Declaration          (N : Node_Id);\n-   procedure Analyze_Formal_Type_Declaration            (N : Node_Id);\n-   procedure Analyze_Formal_Subprogram_Declaration      (N : Node_Id);\n-   procedure Analyze_Formal_Package_Declaration         (N : Node_Id);\n+   procedure Analyze_Generic_Package_Declaration    (N : Node_Id);\n+   procedure Analyze_Generic_Subprogram_Declaration (N : Node_Id);\n+   procedure Analyze_Package_Instantiation          (N : Node_Id);\n+   procedure Analyze_Procedure_Instantiation        (N : Node_Id);\n+   procedure Analyze_Function_Instantiation         (N : Node_Id);\n+   procedure Analyze_Formal_Object_Declaration      (N : Node_Id);\n+   procedure Analyze_Formal_Type_Declaration        (N : Node_Id);\n+   procedure Analyze_Formal_Subprogram_Declaration  (N : Node_Id);\n+   procedure Analyze_Formal_Package_Declaration     (N : Node_Id);\n \n    procedure Start_Generic;\n    --  Must be invoked before starting to process a generic spec or body"}, {"sha": "618f935e4fe1ebee68f851a3848626dc22da4143", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;    use Accessibility;\n with Aspects;          use Aspects;\n with Atree;            use Atree;\n with Checks;           use Checks;\n@@ -1271,7 +1272,7 @@ package body Sem_Ch13 is\n                                   | Aspect_Full_Access_Only\n                                   | Aspect_Import\n                        and then (A_Id /= Aspect_Preelaborable_Initialization\n-                                  or else not Present (Expression (ASN)))\n+                                  or else No (Expression (ASN)))\n                      then\n                         Make_Pragma_From_Boolean_Aspect (ASN);\n                      end if;\n@@ -1327,7 +1328,7 @@ package body Sem_Ch13 is\n                      if not Is_Entity_Name (Expression (ASN))\n                        or else not Is_Object (Entity (Expression (ASN)))\n                        or else\n-                         not Present (Find_Aspect (Etype (Expression (ASN)),\n+                         No (Find_Aspect (Etype (Expression (ASN)),\n                                                    Aspect_Storage_Model_Type))\n                      then\n                         Error_Msg_N\n@@ -1915,7 +1916,7 @@ package body Sem_Ch13 is\n                --  aspects are replaced with pragmas at the freeze point in\n                --  Make_Pragma_From_Boolean_Aspect.\n \n-               if not Present (Expr)\n+               if No (Expr)\n                  or else Is_True (Static_Boolean (Expr))\n                then\n                   if A_Id = Aspect_Import then\n@@ -2399,16 +2400,17 @@ package body Sem_Ch13 is\n \n                if not Is_Expression_Function (E)\n                  and then\n-                   not (Extensions_Allowed and then Is_Imported_Intrinsic)\n+                   not (All_Extensions_Allowed and then Is_Imported_Intrinsic)\n                then\n-                  if Extensions_Allowed then\n+                  if All_Extensions_Allowed then\n                      Error_Msg_N\n                        (\"aspect % requires intrinsic or expression function\",\n                         Aspect);\n \n                   elsif Is_Imported_Intrinsic then\n                      Error_Msg_GNAT_Extension\n-                       (\"aspect % on intrinsic function\", Sloc (Aspect));\n+                       (\"aspect % on intrinsic function\", Sloc (Aspect),\n+                        Is_Core_Extension => True);\n \n                   else\n                      Error_Msg_N\n@@ -4212,7 +4214,7 @@ package body Sem_Ch13 is\n                   goto Continue;\n \n                when Aspect_Designated_Storage_Model =>\n-                  if not Extensions_Allowed then\n+                  if not All_Extensions_Allowed then\n                      Error_Msg_GNAT_Extension (\"aspect %\", Sloc (Aspect));\n \n                   elsif not Is_Type (E)\n@@ -4227,7 +4229,7 @@ package body Sem_Ch13 is\n                   goto Continue;\n \n                when Aspect_Storage_Model_Type =>\n-                  if not Extensions_Allowed then\n+                  if not All_Extensions_Allowed then\n                      Error_Msg_GNAT_Extension (\"aspect %\", Sloc (Aspect));\n \n                   elsif not Is_Type (E)\n@@ -7309,6 +7311,21 @@ package body Sem_Ch13 is\n                      Set_Esize (U_Ent, Size);\n                   end if;\n \n+                  --  As of RM 13.1, only confirming size\n+                  --  (i.e. (Size = Esize (Etyp))) for aliased object of\n+                  --  elementary type must be supported.\n+                  --  GNAT rejects nonconfirming size for such object.\n+\n+                  if Is_Aliased (U_Ent)\n+                    and then Is_Elementary_Type (Etyp)\n+                    and then Known_Esize (U_Ent)\n+                    and then Size /= Esize (Etyp)\n+                  then\n+                     Error_Msg_N\n+                       (\"nonconfirming Size for aliased object is not \"\n+                        & \"supported\", N);\n+                  end if;\n+\n                   Set_Has_Size_Clause (U_Ent);\n                end;\n             end if;\n@@ -7547,7 +7564,7 @@ package body Sem_Ch13 is\n             else\n                Analyze_And_Resolve (Expr);\n \n-               if not Present (Get_Rep_Pragma\n+               if No (Get_Rep_Pragma\n                                  (Etype (Expr), Name_Simple_Storage_Pool_Type))\n                then\n                   Error_Msg_N\n@@ -9927,9 +9944,9 @@ package body Sem_Ch13 is\n             --  generally suppress the message in instantiations, and also\n             --  if it involves internal names.\n \n-            if Opt.List_Inherited_Aspects\n+            if List_Inherited_Aspects\n               and then not Is_Generic_Actual_Type (Typ)\n-              and then Instantiation_Depth (Sloc (Typ)) = 0\n+              and then Instantiation_Location (Sloc (Typ)) = No_Location\n               and then not Is_Internal_Name (Chars (T))\n               and then not Is_Internal_Name (Chars (Typ))\n             then\n@@ -15713,6 +15730,12 @@ package body Sem_Ch13 is\n             return;\n          end if;\n \n+      elsif No (Add_Named_Subp)\n+        and then No (Add_Unnamed_Subp)\n+        and then No (Assign_Indexed_Subp)\n+      then\n+         Error_Msg_N (\"incomplete specification for aggregate\", N);\n+\n       elsif Present (New_Indexed_Subp) /= Present (Assign_Indexed_Subp) then\n          Error_Msg_N (\"incomplete specification for indexed aggregate\", N);\n       end if;\n@@ -16511,7 +16534,7 @@ package body Sem_Ch13 is\n \n       begin\n          for FP of Profiles loop\n-            if not Present (Formal) then\n+            if No (Formal) then\n                Is_Error := True;\n                Report_Argument_Error (\"missing formal of }\", Subt => FP.Subt);\n                exit;\n@@ -16582,7 +16605,7 @@ package body Sem_Ch13 is\n       --  If Addr_Type is not present as the first association, then we default\n       --  it to System.Address.\n \n-      elsif not Present (Addr_Type) then\n+      elsif No (Addr_Type) then\n          Addr_Type := RTE (RE_Address);\n       end if;\n \n@@ -17251,7 +17274,7 @@ package body Sem_Ch13 is\n          Param_Type := Standard_String;\n       end if;\n \n-      if not Overloaded and then not Present (Entity (Func_Name)) then\n+      if not Overloaded and then No (Entity (Func_Name)) then\n          --  The aspect is specified by a subprogram name, which\n          --  may be an operator name given originally by a string.\n "}, {"sha": "5334e486800addc1f2c356934aeadf9ee19da6d5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 194, "deletions": 32, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n@@ -87,6 +88,7 @@ with Tbuild;         use Tbuild;\n with Ttypes;         use Ttypes;\n with Uintp;          use Uintp;\n with Urealp;         use Urealp;\n+with Warnsw;         use Warnsw;\n \n package body Sem_Ch3 is\n \n@@ -1318,7 +1320,8 @@ package body Sem_Ch3 is\n \n       Check_Restriction (No_Access_Subprograms, T_Def);\n \n-      Create_Extra_Formals (Desig_Type);\n+      --  Addition of extra formals must be delayed till the freeze point so\n+      --  that we know the convention.\n    end Access_Subprogram_Declaration;\n \n    ----------------------------\n@@ -2668,7 +2671,7 @@ package body Sem_Ch3 is\n                   --  Is_Conjunction_Of_Formal_Preelab_Init_Attributes goes to\n                   --  Original_Node if needed, hence test for Standard_False.)\n \n-                  if not Present (Expr)\n+                  if No (Expr)\n                     or else (Is_Entity_Name (Expr)\n                               and then Entity (Expr) = Standard_True)\n                     or else\n@@ -2940,7 +2943,8 @@ package body Sem_Ch3 is\n          --  Verify that all abstract states found in any package declared in\n          --  the input declarative list have proper refinements. The check is\n          --  performed only when the context denotes a block, entry, package,\n-         --  protected, subprogram, or task body (SPARK RM 7.2.2(3)).\n+         --  protected, subprogram, or task body (SPARK RM 7.1.4(4) and SPARK\n+         --  RM 7.2.2(3)).\n \n          Check_State_Refinements (Context);\n \n@@ -3519,7 +3523,7 @@ package body Sem_Ch3 is\n       --  Initialize the list of primitive operations to an empty list,\n       --  to cover tagged types as well as untagged types. For untagged\n       --  types this is used either to analyze the call as legal when\n-      --  Extensions_Allowed is True, or to issue a better error message\n+      --  Core_Extensions_Allowed is True, or to issue a better error message\n       --  otherwise.\n \n       Set_Direct_Primitive_Operations (T, New_Elmt_List);\n@@ -3777,6 +3781,11 @@ package body Sem_Ch3 is\n       --  Obj_Decl carrying type Obj_Typ has explicit initialization. Emit\n       --  a compile-time warning if this is not the case.\n \n+      procedure Check_Return_Subtype_Indication (Obj_Decl : Node_Id);\n+      --  Check that the return subtype indication properly matches the result\n+      --  subtype of the function in an extended return object declaration, as\n+      --  required by RM 6.5(5.1/2-5.3/2).\n+\n       function Count_Tasks (T : Entity_Id) return Uint;\n       --  This function is called when a non-generic library level object of a\n       --  task type is declared. Its function is to count the static number of\n@@ -3950,6 +3959,134 @@ package body Sem_Ch3 is\n          Check_Component (Obj_Typ, Obj_Decl);\n       end Check_For_Null_Excluding_Components;\n \n+      -------------------------------------\n+      -- Check_Return_Subtype_Indication --\n+      -------------------------------------\n+\n+      procedure Check_Return_Subtype_Indication (Obj_Decl : Node_Id) is\n+         Obj_Id  : constant Entity_Id := Defining_Identifier (Obj_Decl);\n+         Obj_Typ : constant Entity_Id := Etype (Obj_Id);\n+         Func_Id : constant Entity_Id := Return_Applies_To (Scope (Obj_Id));\n+         R_Typ   : constant Entity_Id := Etype (Func_Id);\n+         Indic   : constant Node_Id   :=\n+                     Object_Definition (Original_Node (Obj_Decl));\n+\n+         procedure Error_No_Match (N : Node_Id);\n+         --  Output error messages for case where types do not statically\n+         --  match. N is the location for the messages.\n+\n+         --------------------\n+         -- Error_No_Match --\n+         --------------------\n+\n+         procedure Error_No_Match (N : Node_Id) is\n+         begin\n+            Error_Msg_N\n+              (\"subtype must statically match function result subtype\", N);\n+\n+            if not Predicates_Match (Obj_Typ, R_Typ) then\n+               Error_Msg_Node_2 := R_Typ;\n+               Error_Msg_NE\n+                 (\"\\predicate of& does not match predicate of&\",\n+                  N, Obj_Typ);\n+            end if;\n+         end Error_No_Match;\n+\n+      --  Start of processing for Check_Return_Subtype_Indication\n+\n+      begin\n+         --  First, avoid cascaded errors\n+\n+         if Error_Posted (Obj_Decl) or else Error_Posted (Indic) then\n+            return;\n+         end if;\n+\n+         --  \"return access T\" case; check that the return statement also has\n+         --  \"access T\", and that the subtypes statically match:\n+         --   if this is an access to subprogram the signatures must match.\n+\n+         if Is_Anonymous_Access_Type (R_Typ) then\n+            if Is_Anonymous_Access_Type (Obj_Typ) then\n+               if Ekind (Designated_Type (Obj_Typ)) /= E_Subprogram_Type\n+               then\n+                  if Base_Type (Designated_Type (Obj_Typ)) /=\n+                     Base_Type (Designated_Type (R_Typ))\n+                    or else not Subtypes_Statically_Match (Obj_Typ, R_Typ)\n+                  then\n+                     Error_No_Match (Subtype_Mark (Indic));\n+                  end if;\n+\n+               else\n+                  --  For two anonymous access to subprogram types, the types\n+                  --  themselves must be type conformant.\n+\n+                  if not Conforming_Types\n+                           (Obj_Typ, R_Typ, Fully_Conformant)\n+                  then\n+                     Error_No_Match (Indic);\n+                  end if;\n+               end if;\n+\n+            else\n+               Error_Msg_N (\"must use anonymous access type\", Indic);\n+            end if;\n+\n+         --  If the return object is of an anonymous access type, then report\n+         --  an error if the function's result type is not also anonymous.\n+\n+         elsif Is_Anonymous_Access_Type (Obj_Typ) then\n+            pragma Assert (not Is_Anonymous_Access_Type (R_Typ));\n+            Error_Msg_N\n+              (\"anonymous access not allowed for function with named access \"\n+               & \"result\", Indic);\n+\n+         --  Subtype indication case: check that the return object's type is\n+         --  covered by the result type, and that the subtypes statically match\n+         --  when the result subtype is constrained. Also handle record types\n+         --  with unknown discriminants for which we have built the underlying\n+         --  record view. Coverage is needed to allow specific-type return\n+         --  objects when the result type is class-wide (see AI05-32).\n+\n+         elsif Covers (Base_Type (R_Typ), Base_Type (Obj_Typ))\n+           or else (Is_Underlying_Record_View (Base_Type (Obj_Typ))\n+                     and then\n+                       Covers\n+                         (Base_Type (R_Typ),\n+                          Underlying_Record_View (Base_Type (Obj_Typ))))\n+         then\n+            --  A null exclusion may be present on the return type, on the\n+            --  function specification, on the object declaration or on the\n+            --  subtype itself.\n+\n+            if Is_Access_Type (R_Typ)\n+              and then\n+                (Can_Never_Be_Null (R_Typ)\n+                  or else Null_Exclusion_Present (Parent (Func_Id))) /=\n+                            Can_Never_Be_Null (Obj_Typ)\n+            then\n+               Error_No_Match (Indic);\n+            end if;\n+\n+            --  AI05-103: for elementary types, subtypes must statically match\n+\n+            if Is_Constrained (R_Typ) or else Is_Access_Type (R_Typ) then\n+               if not Subtypes_Statically_Match (Obj_Typ, R_Typ) then\n+                  Error_No_Match (Indic);\n+               end if;\n+            end if;\n+\n+         --  All remaining cases are illegal\n+\n+         --  Note: previous versions of this subprogram allowed the return\n+         --  value to be the ancestor of the return type if the return type\n+         --  was a null extension. This was plainly incorrect.\n+\n+         else\n+            Error_Msg_N\n+              (\"wrong type for return_subtype_indication\", Indic);\n+         end if;\n+      end Check_Return_Subtype_Indication;\n+\n       -----------------\n       -- Count_Tasks --\n       -----------------\n@@ -4721,6 +4858,26 @@ package body Sem_Ch3 is\n                   Expand_Sliding_Conversion (E, T);\n                end if;\n \n+               if In_Spec_Expression and then In_Declare_Expr > 0 then\n+                  --  It is too early to be doing expansion-ish things,\n+                  --  so exit early. But we have to set Ekind (Id) now so\n+                  --  that subsequent uses of this entity are not rejected\n+                  --  via the same mechanism that (correctly) rejects\n+                  --  \"X : Integer := X;\".\n+\n+                  if Constant_Present (N) then\n+                     Mutate_Ekind         (Id, E_Constant);\n+                     Set_Is_True_Constant (Id);\n+                  else\n+                     Mutate_Ekind (Id, E_Variable);\n+                     if Present (E) then\n+                        Set_Has_Initial_Value (Id);\n+                     end if;\n+                  end if;\n+\n+                  goto Leave;\n+               end if;\n+\n                Expand_Subtype_From_Expr\n                  (N             => N,\n                   Unc_Type      => T,\n@@ -5023,6 +5180,12 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n+      --  Check specific legality rules for a return object\n+\n+      if Is_Return_Object (Id) then\n+         Check_Return_Subtype_Indication (N);\n+      end if;\n+\n       --  Some simple constant-propagation: if the expression is a constant\n       --  string initialized with a literal, share the literal. This avoids\n       --  a run-time copy.\n@@ -5730,7 +5893,7 @@ package body Sem_Ch3 is\n                   --  operations to an empty list.\n \n                   if Is_Tagged_Type (Id)\n-                    or else Extensions_Allowed\n+                    or else Core_Extensions_Allowed\n                   then\n                      Set_Direct_Primitive_Operations (Id, New_Elmt_List);\n                   end if;\n@@ -11050,7 +11213,7 @@ package body Sem_Ch3 is\n             --  with the aliased entity (otherwise we generate a duplicated\n             --  error message).\n \n-           and then not Present (Interface_Alias (Subp))\n+           and then No (Interface_Alias (Subp))\n          then\n             if Present (Alias_Subp) then\n \n@@ -11768,11 +11931,9 @@ package body Sem_Ch3 is\n          Insert_Before (Typ_Decl, Decl);\n          Analyze (Decl);\n \n-         --  If an access to subprogram, create the extra formals\n-\n-         if Present (Acc_Def) then\n-            Create_Extra_Formals (Designated_Type (Anon_Access));\n-         end if;\n+         --  At first sight we could add here the extra formals of an access to\n+         --  subprogram; however, it must delayed till the freeze point so that\n+         --  we know the convention.\n \n          if Nkind (Comp_Def) = N_Component_Definition then\n             Rewrite (Comp_Def,\n@@ -14541,7 +14702,7 @@ package body Sem_Ch3 is\n          --  in various places for an Empty upper bound, and in any case it\n          --  accurately characterizes the index's range of values.\n \n-         if Nkind (S) = N_Range and then not Present (High_Bound (S)) then\n+         if Nkind (S) = N_Range and then No (High_Bound (S)) then\n             Is_FLB_Index := True;\n             Set_High_Bound (S, Type_High_Bound (T));\n          end if;\n@@ -16033,12 +16194,12 @@ package body Sem_Ch3 is\n          Next_Formal (Formal);\n       end loop;\n \n-      --  Extra formals are shared between the parent subprogram and the\n-      --  derived subprogram (implicit in the above copy of formals), unless\n-      --  the parent type is a limited interface type; hence we must inherit\n-      --  also the reference to the first extra formal. When the parent type is\n-      --  an interface the extra formals will be added when the subprogram is\n-      --  frozen (see Freeze.Freeze_Subprogram).\n+      --  Extra formals are shared between the parent subprogram and this\n+      --  internal entity built by Derive_Subprogram (implicit in the above\n+      --  copy of formals), unless the parent type is a limited interface type;\n+      --  hence we must inherit also the reference to the first extra formal.\n+      --  When the parent type is an interface, the extra formals will be added\n+      --  when the tagged type is frozen (see Expand_Freeze_Record_Type).\n \n       if not Is_Limited_Interface (Parent_Type) then\n          Set_Extra_Formals (New_Subp, Extra_Formals (Parent_Subp));\n@@ -16079,7 +16240,7 @@ package body Sem_Ch3 is\n       Copy_Strub_Mode (New_Subp, Alias (New_Subp));\n \n       --  Derived subprograms of a tagged type must inherit the convention\n-      --  of the parent subprogram (a requirement of AI-117). Derived\n+      --  of the parent subprogram (a requirement of AI95-117). Derived\n       --  subprograms of untagged types simply get convention Ada by default.\n \n       --  If the derived type is a tagged generic formal type with unknown\n@@ -16497,15 +16658,15 @@ package body Sem_Ch3 is\n \n       --  Local variables\n \n-      Alias_Subp   : Entity_Id;\n-      Act_List     : Elist_Id;\n-      Act_Elmt     : Elmt_Id;\n-      Act_Subp     : Entity_Id := Empty;\n-      Elmt         : Elmt_Id;\n-      Need_Search  : Boolean   := False;\n-      New_Subp     : Entity_Id := Empty;\n-      Parent_Base  : Entity_Id;\n-      Subp         : Entity_Id;\n+      Alias_Subp  : Entity_Id;\n+      Act_List    : Elist_Id;\n+      Act_Elmt    : Elmt_Id;\n+      Act_Subp    : Entity_Id := Empty;\n+      Elmt        : Elmt_Id;\n+      Need_Search : Boolean   := False;\n+      New_Subp    : Entity_Id;\n+      Parent_Base : Entity_Id;\n+      Subp        : Entity_Id;\n \n    --  Start of processing for Derive_Subprograms\n \n@@ -16720,9 +16881,9 @@ package body Sem_Ch3 is\n                        (Is_Generic_Unit\n                           (Scope (Find_Dispatching_Type (Alias_Subp)))\n                          or else\n-                           Instantiation_Depth\n-                             (Sloc (Find_Dispatching_Type (Alias_Subp))) > 0);\n-\n+                           Instantiation_Location\n+                             (Sloc (Find_Dispatching_Type (Alias_Subp)))\n+                               /= No_Location);\n                      declare\n                         Iface_Prim_Loc : constant Source_Ptr :=\n                                          Original_Location (Sloc (Alias_Subp));\n@@ -16784,7 +16945,7 @@ package body Sem_Ch3 is\n             --   have such primitives.\n \n             if Present (Generic_Actual)\n-              and then not Present (Act_Subp)\n+              and then No (Act_Subp)\n               and then Is_Limited_Interface (Parent_Base)\n               and then Is_Predefined_Interface_Primitive (Subp)\n             then\n@@ -20145,6 +20306,7 @@ package body Sem_Ch3 is\n \n       case Nkind (Original_Node (Exp)) is\n          when N_Aggregate\n+            | N_Delta_Aggregate\n             | N_Extension_Aggregate\n             | N_Function_Call\n             | N_Op"}, {"sha": "da5aa5fe88f969938ef8547c52e22fc2031c13cb", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 134, "deletions": 113, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Accessibility;  use Accessibility;\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Debug;          use Debug;\n@@ -43,6 +44,7 @@ with Opt;            use Opt;\n with Output;         use Output;\n with Restrict;       use Restrict;\n with Rident;         use Rident;\n+with Rtsfind;        use Rtsfind;\n with Sem;            use Sem;\n with Sem_Aux;        use Sem_Aux;\n with Sem_Case;       use Sem_Case;\n@@ -65,6 +67,7 @@ with Sinfo.Utils;    use Sinfo.Utils;\n with Snames;         use Snames;\n with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n package body Sem_Ch4 is\n \n@@ -731,43 +734,16 @@ package body Sem_Ch4 is\n             end;\n          end if;\n \n-         --  Check for missing initialization. Skip this check if we already\n-         --  had errors on analyzing the allocator, since in that case these\n-         --  are probably cascaded errors.\n+         --  Check for missing initialization. Skip this check if the allocator\n+         --  is made for a special return object or if we already had errors on\n+         --  analyzing the allocator since, in that case, these are very likely\n+         --  cascaded errors.\n \n          if not Is_Definite_Subtype (Type_Id)\n+           and then not For_Special_Return_Object (N)\n            and then Serious_Errors_Detected = Sav_Errs\n          then\n-            --  The build-in-place machinery may produce an allocator when\n-            --  the designated type is indefinite but the underlying type is\n-            --  not. In this case the unknown discriminants are meaningless\n-            --  and should not trigger error messages. Check the parent node\n-            --  because the allocator is marked as coming from source.\n-\n-            if Present (Underlying_Type (Type_Id))\n-              and then Is_Definite_Subtype (Underlying_Type (Type_Id))\n-              and then not Comes_From_Source (Parent (N))\n-            then\n-               null;\n-\n-            --  An unusual case arises when the parent of a derived type is\n-            --  a limited record extension  with unknown discriminants, and\n-            --  its full view has no discriminants.\n-            --\n-            --  A more general fix might be to create the proper underlying\n-            --  type for such a derived type, but it is a record type with\n-            --  no private attributes, so this required extending the\n-            --  meaning of this attribute. ???\n-\n-            elsif Ekind (Etype (Type_Id)) = E_Record_Type_With_Private\n-              and then Present (Underlying_Type (Etype (Type_Id)))\n-              and then\n-                not Has_Discriminants (Underlying_Type (Etype (Type_Id)))\n-              and then not Comes_From_Source (Parent (N))\n-            then\n-               null;\n-\n-            elsif Is_Class_Wide_Type (Type_Id) then\n+            if Is_Class_Wide_Type (Type_Id) then\n                Error_Msg_N\n                  (\"initialization required in class-wide allocation\", N);\n \n@@ -840,6 +816,27 @@ package body Sem_Ch4 is\n          Error_Msg_N (\"cannot allocate abstract object\", E);\n       end if;\n \n+      Set_Etype (N, Acc_Type);\n+\n+      --  If this is an allocator for the return stack, then no restriction may\n+      --  be violated since it's just a low-level access to the primary stack.\n+\n+      if Nkind (Parent (N)) = N_Object_Declaration\n+        and then Is_Entity_Name (Object_Definition (Parent (N)))\n+        and then Is_Access_Type (Entity (Object_Definition (Parent (N))))\n+      then\n+         declare\n+            Pool : constant Entity_Id :=\n+              Associated_Storage_Pool\n+                (Root_Type (Entity (Object_Definition (Parent (N)))));\n+\n+         begin\n+            if Present (Pool) and then Is_RTE (Pool, RE_RS_Pool) then\n+               goto Leave;\n+            end if;\n+         end;\n+      end if;\n+\n       if Has_Task (Designated_Type (Acc_Type)) then\n          Check_Restriction (No_Tasking, N);\n          Check_Restriction (Max_Tasks, N);\n@@ -891,12 +888,11 @@ package body Sem_Ch4 is\n          end if;\n       end if;\n \n-      Set_Etype (N, Acc_Type);\n-\n       if not Is_Library_Level_Entity (Acc_Type) then\n          Check_Restriction (No_Local_Allocators, N);\n       end if;\n \n+   <<Leave>>\n       if Serious_Errors_Detected > Sav_Errs then\n          Set_Error_Posted (N);\n          Set_Etype (N, Any_Type);\n@@ -1740,6 +1736,70 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n+      --  The expression must be of a discrete type which must be determinable\n+      --  independently of the context in which the expression occurs, but\n+      --  using the fact that the expression must be of a discrete type.\n+      --  Moreover, the type this expression must not be a character literal\n+      --  (which is always ambiguous).\n+\n+      --  If error already reported by Resolve, nothing more to do\n+\n+      if Exp_Btype = Any_Discrete or else Exp_Btype = Any_Type then\n+         return;\n+\n+      --  Special case message for character literal\n+\n+      elsif Exp_Btype = Any_Character then\n+         Error_Msg_N\n+           (\"character literal as case expression is ambiguous\", Expr);\n+         return;\n+      end if;\n+\n+      --  If the case expression is a formal object of mode in out, then\n+      --  treat it as having a nonstatic subtype by forcing use of the base\n+      --  type (which has to get passed to Check_Case_Choices below). Also\n+      --  use base type when the case expression is parenthesized.\n+\n+      if Paren_Count (Expr) > 0\n+        or else (Is_Entity_Name (Expr)\n+                  and then Ekind (Entity (Expr)) = E_Generic_In_Out_Parameter)\n+      then\n+         Exp_Type := Exp_Btype;\n+      end if;\n+\n+      --  The case expression alternatives cover the range of a static subtype\n+      --  subject to aspect Static_Predicate. Do not check the choices when the\n+      --  case expression has not been fully analyzed yet because this may lead\n+      --  to bogus errors.\n+\n+      if Is_OK_Static_Subtype (Exp_Type)\n+        and then Has_Static_Predicate_Aspect (Exp_Type)\n+        and then In_Spec_Expression\n+      then\n+         null;\n+\n+      --  Call Analyze_Choices and Check_Choices to do the rest of the work\n+\n+      else\n+         Analyze_Choices (Alternatives (N), Exp_Type);\n+         Check_Choices (N, Alternatives (N), Exp_Type, Others_Present);\n+\n+         if Exp_Type = Universal_Integer and then not Others_Present then\n+            Error_Msg_N\n+              (\"case on universal integer requires OTHERS choice\", Expr);\n+            return;\n+         end if;\n+      end if;\n+\n+      --  RM 4.5.7(10/3): If the case_expression is the operand of a type\n+      --  conversion, the type of the case_expression is the target type\n+      --  of the conversion.\n+\n+      if Nkind (Parent (N)) = N_Type_Conversion then\n+         Set_Etype (N, Etype (Parent (N)));\n+         return;\n+      end if;\n+\n       --  Loop through the interpretations of the first expression and check\n       --  the other expressions if present.\n \n@@ -1763,25 +1823,6 @@ package body Sem_Ch4 is\n          end loop;\n       end if;\n \n-      --  The expression must be of a discrete type which must be determinable\n-      --  independently of the context in which the expression occurs, but\n-      --  using the fact that the expression must be of a discrete type.\n-      --  Moreover, the type this expression must not be a character literal\n-      --  (which is always ambiguous).\n-\n-      --  If error already reported by Resolve, nothing more to do\n-\n-      if Exp_Btype = Any_Discrete or else Exp_Btype = Any_Type then\n-         return;\n-\n-      --  Special casee message for character literal\n-\n-      elsif Exp_Btype = Any_Character then\n-         Error_Msg_N\n-           (\"character literal as case expression is ambiguous\", Expr);\n-         return;\n-      end if;\n-\n       --  If no possible interpretation has been found, the type of the wrong\n       --  alternative doesn't match any interpretation of the FIRST expression.\n \n@@ -1829,43 +1870,6 @@ package body Sem_Ch4 is\n                   Etype (Second_Expr));\n             end if;\n          end if;\n-\n-         return;\n-      end if;\n-\n-      --  If the case expression is a formal object of mode in out, then\n-      --  treat it as having a nonstatic subtype by forcing use of the base\n-      --  type (which has to get passed to Check_Case_Choices below). Also\n-      --  use base type when the case expression is parenthesized.\n-\n-      if Paren_Count (Expr) > 0\n-        or else (Is_Entity_Name (Expr)\n-                  and then Ekind (Entity (Expr)) = E_Generic_In_Out_Parameter)\n-      then\n-         Exp_Type := Exp_Btype;\n-      end if;\n-\n-      --  The case expression alternatives cover the range of a static subtype\n-      --  subject to aspect Static_Predicate. Do not check the choices when the\n-      --  case expression has not been fully analyzed yet because this may lead\n-      --  to bogus errors.\n-\n-      if Is_OK_Static_Subtype (Exp_Type)\n-        and then Has_Static_Predicate_Aspect (Exp_Type)\n-        and then In_Spec_Expression\n-      then\n-         null;\n-\n-      --  Call Analyze_Choices and Check_Choices to do the rest of the work\n-\n-      else\n-         Analyze_Choices (Alternatives (N), Exp_Type);\n-         Check_Choices (N, Alternatives (N), Exp_Type, Others_Present);\n-\n-         if Exp_Type = Universal_Integer and then not Others_Present then\n-            Error_Msg_N\n-              (\"case on universal integer requires OTHERS choice\", Expr);\n-         end if;\n       end if;\n    end Analyze_Case_Expression;\n \n@@ -2555,6 +2559,15 @@ package body Sem_Ch4 is\n          Analyze_Expression (Else_Expr);\n       end if;\n \n+      --  RM 4.5.7(10/3): If the if_expression is the operand of a type\n+      --  conversion, the type of the if_expression is the target type\n+      --  of the conversion.\n+\n+      if Nkind (Parent (N)) = N_Type_Conversion then\n+         Set_Etype (N, Etype (Parent (N)));\n+         return;\n+      end if;\n+\n       --  Loop through the interpretations of the THEN expression and check the\n       --  ELSE expression if present.\n \n@@ -4323,16 +4336,14 @@ package body Sem_Ch4 is\n    ----------------------------------\n \n    procedure Analyze_Qualified_Expression (N : Node_Id) is\n-      Mark : constant Entity_Id := Subtype_Mark (N);\n       Expr : constant Node_Id   := Expression (N);\n+      Mark : constant Entity_Id := Subtype_Mark (N);\n+\n       I    : Interp_Index;\n       It   : Interp;\n       T    : Entity_Id;\n \n    begin\n-      Analyze_Expression (Expr);\n-\n-      Set_Etype (N, Any_Type);\n       Find_Type (Mark);\n       T := Entity (Mark);\n \n@@ -4353,6 +4364,8 @@ package body Sem_Ch4 is\n \n       Set_Etype (N, T);\n \n+      Analyze_Expression (Expr);\n+\n       if T = Any_Type then\n          return;\n       end if;\n@@ -4389,8 +4402,6 @@ package body Sem_Ch4 is\n             end loop;\n          end if;\n       end if;\n-\n-      Set_Etype  (N, T);\n    end Analyze_Qualified_Expression;\n \n    -----------------------------------\n@@ -5423,7 +5434,8 @@ package body Sem_Ch4 is\n          --  untagged record types.\n \n          if Ada_Version >= Ada_2005\n-           and then (Is_Tagged_Type (Prefix_Type) or else Extensions_Allowed)\n+           and then (Is_Tagged_Type (Prefix_Type)\n+                       or else Core_Extensions_Allowed)\n            and then not Is_Concurrent_Type (Prefix_Type)\n          then\n             if Nkind (Parent (N)) = N_Generic_Association\n@@ -5499,7 +5511,7 @@ package body Sem_Ch4 is\n          --  Extension feature: Also support calls with prefixed views for\n          --  untagged private types.\n \n-         if Extensions_Allowed then\n+         if Core_Extensions_Allowed then\n             if Try_Object_Operation (N) then\n                return;\n             end if;\n@@ -5760,7 +5772,7 @@ package body Sem_Ch4 is\n       --  Extension feature: Also support calls with prefixed views for\n       --  untagged types.\n \n-      elsif Extensions_Allowed\n+      elsif Core_Extensions_Allowed\n         and then Try_Object_Operation (N)\n       then\n          return;\n@@ -5949,9 +5961,9 @@ package body Sem_Ch4 is\n       It  : Interp;\n \n    begin\n+      Set_Etype (N, Any_Type);\n       Analyze_Expression (L);\n       Analyze_Expression (R);\n-      Set_Etype (N, Any_Type);\n \n       if not Is_Overloaded (L) then\n          if Root_Type (Etype (L)) = Standard_Boolean\n@@ -6084,7 +6096,9 @@ package body Sem_Ch4 is\n    -----------------------------\n \n    procedure Analyze_Type_Conversion (N : Node_Id) is\n-      Expr : constant Node_Id := Expression (N);\n+      Expr : constant Node_Id   := Expression (N);\n+      Mark : constant Entity_Id := Subtype_Mark (N);\n+\n       Typ  : Entity_Id;\n \n    begin\n@@ -6101,11 +6115,13 @@ package body Sem_Ch4 is\n       --  Otherwise full type analysis is required, as well as some semantic\n       --  checks to make sure the argument of the conversion is appropriate.\n \n-      Find_Type (Subtype_Mark (N));\n-      Typ := Entity (Subtype_Mark (N));\n+      Find_Type (Mark);\n+      Typ := Entity (Mark);\n       Set_Etype (N, Typ);\n-      Check_Fully_Declared (Typ, N);\n+\n       Analyze_Expression (Expr);\n+\n+      Check_Fully_Declared (Typ, N);\n       Validate_Remote_Type_Type_Conversion (N);\n \n       --  Only remaining step is validity checks on the argument. These\n@@ -6228,21 +6244,26 @@ package body Sem_Ch4 is\n    ----------------------------------\n \n    procedure Analyze_Unchecked_Expression (N : Node_Id) is\n+      Expr : constant Node_Id := Expression (N);\n+\n    begin\n-      Analyze (Expression (N), Suppress => All_Checks);\n-      Set_Etype (N, Etype (Expression (N)));\n-      Save_Interps (Expression (N), N);\n+      Analyze (Expr, Suppress => All_Checks);\n+      Set_Etype (N, Etype (Expr));\n+      Save_Interps (Expr, N);\n    end Analyze_Unchecked_Expression;\n \n    ---------------------------------------\n    -- Analyze_Unchecked_Type_Conversion --\n    ---------------------------------------\n \n    procedure Analyze_Unchecked_Type_Conversion (N : Node_Id) is\n+      Expr : constant Node_Id   := Expression (N);\n+      Mark : constant Entity_Id := Subtype_Mark (N);\n+\n    begin\n-      Find_Type (Subtype_Mark (N));\n-      Analyze_Expression (Expression (N));\n-      Set_Etype (N, Entity (Subtype_Mark (N)));\n+      Find_Type (Mark);\n+      Set_Etype (N, Entity (Mark));\n+      Analyze_Expression (Expr);\n    end Analyze_Unchecked_Type_Conversion;\n \n    ------------------------------------\n@@ -9862,7 +9883,7 @@ package body Sem_Ch4 is\n \n          if (not Is_Tagged_Type (Obj_Type)\n               and then\n-                (not (Extensions_Allowed or Allow_Extensions)\n+                (not (Core_Extensions_Allowed or Allow_Extensions)\n                   or else not Present (Primitive_Operations (Obj_Type))))\n            or else Is_Incomplete_Type (Obj_Type)\n          then\n@@ -9891,7 +9912,7 @@ package body Sem_Ch4 is\n                --  have homographic prefixed-view operations that could result\n                --  in an ambiguity, but handling properly may be tricky. ???)\n \n-               if (Extensions_Allowed or Allow_Extensions)\n+               if (Core_Extensions_Allowed or Allow_Extensions)\n                  and then not Prim_Result\n                  and then Is_Named_Access_Type (Prev_Obj_Type)\n                  and then Present (Direct_Primitive_Operations (Prev_Obj_Type))"}, {"sha": "344b3ebfdb2dfebc3c473394d673879da220cf7e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=74e16385964d6c03d99916654389edf39e768147", "patch": "@@ -66,6 +66,7 @@ with Targparm;       use Targparm;\n with Tbuild;         use Tbuild;\n with Ttypes;         use Ttypes;\n with Uintp;          use Uintp;\n+with Warnsw;         use Warnsw;\n \n package body Sem_Ch5 is\n \n@@ -306,7 +307,8 @@ package body Sem_Ch5 is\n          --  get the actual subtype (needed for the unconstrained case). If the\n          --  operand is the actual in an entry declaration, then within the\n          --  accept statement it is replaced with a local renaming, which may\n-         --  also have an actual subtype.\n+         --  also have an actual subtype. Likewise for a return object that\n+         --  lives on the secondary stack.\n \n          if Is_Entity_Name (Opnd)\n            and then (Ekind (Entity (Opnd)) in E_Out_Parameter\n@@ -317,7 +319,8 @@ package body Sem_Ch5 is\n                           and then Nkind (Parent (Entity (Opnd))) =\n                                      N_Object_Renaming_Declaration\n                           and then Nkind (Parent (Parent (Entity (Opnd)))) =\n-                                     N_Accept_Statement))\n+                                     N_Accept_Statement)\n+                      or else Is_Secondary_Stack_Return_Object (Entity (Opnd)))\n          then\n             Opnd_Type := Get_Actual_Subtype (Opnd);\n \n@@ -1042,8 +1045,7 @@ package body Sem_Ch5 is\n                         if Ekind (Comp_Id) = E_Component\n                           and then Nkind (Parent (Comp_Id))\n                                      = N_Component_Declaration\n-                          and then\n-                            not Present (Expression (Parent (Comp_Id)))\n+                          and then No (Expression (Parent (Comp_Id)))\n                         then\n                            return True;\n                         end if;\n@@ -1614,7 +1616,7 @@ package body Sem_Ch5 is\n       --  out non-discretes may resolve the ambiguity.\n       --  But GNAT extensions allow casing on non-discretes.\n \n-      elsif Extensions_Allowed and then Is_Overloaded (Exp) then\n+      elsif Core_Extensions_Allowed and then Is_Overloaded (Exp) then\n \n          --  It would be nice if we could generate all the right error\n          --  messages by calling \"Resolve (Exp, Any_Type);\" in the\n@@ -1632,7 +1634,7 @@ package body Sem_Ch5 is\n       --  Check for a GNAT-extension \"general\" case statement (i.e., one where\n       --  the type of the selecting expression is not discrete).\n \n-      elsif Extensions_Allowed\n+      elsif Core_Extensions_Allowed\n          and then not Is_Discrete_Type (Etype (Exp))\n       then\n          Resolve (Exp, Etype (Exp));\n@@ -1670,7 +1672,7 @@ package body Sem_Ch5 is\n            (\"(Ada 83) case expression cannot be of a generic type\", Exp);\n          return;\n \n-      elsif not Extensions_Allowed\n+      elsif not Core_Extensions_Allowed\n         and then not Is_Discrete_Type (Exp_Type)\n       then\n          Error_Msg_N\n@@ -2192,7 +2194,7 @@ package body Sem_Ch5 is\n             if Is_Array_Type (Typ)\n               or else Is_Reversible_Iterator (Typ)\n               or else\n-                (Present (Find_Aspect (Typ, Aspect_Iterable))\n+                (Has_Aspect (Typ, Aspect_Iterable)\n                   and then\n                     Present\n                       (Get_Iterable_Type_Primitive (Typ, Name_Previous)))\n@@ -2523,6 +2525,7 @@ package body Sem_Ch5 is\n                 Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n                 Name                =>\n                   New_Copy_Tree (Iter_Name, New_Sloc => Loc));\n+            Set_Comes_From_Iterator (Decl);\n \n             Insert_Actions (Parent (Parent (N)), New_List (Decl));\n             Rewrite (Name (N), New_Occurrence_Of (Id, Loc));"}, {"sha": "f46ca46fc6447245985e4023f10725204bb5ff63", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "5f0e1baa4f98b059b1402aff1baf4cb62b86f78f", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "284706981d65d2b5a1f339a679ea1b08fb5760e2", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "841076bbd01d52ea350a66502c41201f311fdd56", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 21, "deletions": 25, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "aad86fab3281c4fdd82f30c02b3ba2ae7bbf1d36", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "801339aeca24a76e31302f05c7ca24ef41840ec0", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "af260136bc0a1507f35a4747bc2769480bcd5a9a", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "9bf8614fd5276b06761e1246386c084516c737cc", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "bec91add25c3325fb5370e2fd58e4a67e8bd2c9d", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "f3c23caeae45180b0099db14497d6b5f44e68dbf", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 138, "deletions": 73, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b54ed93a7f76873c012db3c3738953b8d11b9de2", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 137, "deletions": 70, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "718c29754c1a0d2b627b6e6da9ffd73135f162ed", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "a1cebb082916685631e6525621d9183cc49d1408", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 146, "deletions": 1382, "changes": 1528, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b647e68ff7fa02a1de55ec5814df70e2d877430e", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 24, "deletions": 140, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "cb2a3819df604e511b3edb92daa3f361fcd7a010", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 123, "deletions": 161, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "8ee9a0968f343e7c481e594d30ac16cf50e998ed", "filename": "gcc/ada/sfn_scan.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsfn_scan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsfn_scan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "104ee663c0e82be52688c17a800a36a96dea92ce", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "c96049b26782faecde6ec64ce4aa20e5cc89ef93", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "febb2ef781bad221eb3f5f49bbfb9b7f48774b1b", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "7a732ae3122d04561321c24b7dfe2b4efb02499a", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "db01d53ef292c0413066a2c8c1748dab34802df8", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "a0f45c422befc2bddbd2d0591435e3c867447e63", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "642cfda1b270664a9e8e34300a67a82c8fa39298", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "6fabafb909641d3372655080a7031e8f566c9e65", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 236, "deletions": 698, "changes": 934, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "46ae75211e5e93ca11c4aeda51bf3c81c49101ab", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 430, "deletions": 107, "changes": 537, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "911803549c93fb01c8f2699001f08afdeb3d5167", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 1371, "deletions": 3, "changes": 1374, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "aa75bd6b67eece327b1fa4d85eb77a5de7bf0e4b", "filename": "gcc/analyzer/analysis-plan.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalysis-plan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalysis-plan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalysis-plan.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "0fb43443ffddc5c12316cdbbb909f648930f7ad0", "filename": "gcc/analyzer/analyzer-language.cc", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-language.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-language.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer-language.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "33c4dd60623e43965b6c0454ea1b62553fa37685", "filename": "gcc/analyzer/analyzer-language.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-language.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-language.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer-language.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "423595f45f05feeb9a6952cc79cf347e41058175", "filename": "gcc/analyzer/analyzer-pass.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-pass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-pass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer-pass.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "028cc5ed009a2415a7b16c45e5c8638542288496", "filename": "gcc/analyzer/analyzer-selftests.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-selftests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer-selftests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer-selftests.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "77d622d19e6dc0fb8156449a2c9be209aca7bef8", "filename": "gcc/analyzer/analyzer.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "19e5b9011fe7b5a5b391dd760b32325e3ede61ca", "filename": "gcc/analyzer/analyzer.h", "status": "modified", "additions": 42, "deletions": 8, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "c4e79069dfaf4ad80d8b86e891b99cf883406617", "filename": "gcc/analyzer/analyzer.opt", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fanalyzer.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.opt?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "4b43c43acf5ed36d27d8c9561425cd1140ebbb21", "filename": "gcc/analyzer/bounds-checking.cc", "status": "added", "additions": 943, "deletions": 0, "changes": 943, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fbounds-checking.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fbounds-checking.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fbounds-checking.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b63b8a38d8852116c167378dd215524c9a47a36f", "filename": "gcc/analyzer/call-details.cc", "status": "added", "additions": 231, "deletions": 0, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-details.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-details.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-details.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "144ca0ce868994c92c219443d03c370b0b197dbb", "filename": "gcc/analyzer/call-details.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-details.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-details.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-details.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "cbd21f7472b57f11d22bd800031e5b1a37f447fb", "filename": "gcc/analyzer/call-info.cc", "status": "modified", "additions": 17, "deletions": 22, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-info.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-info.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-info.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "2fd50776f0a2cf61e45eb9986e4f9d4b9e0b0d3a", "filename": "gcc/analyzer/call-info.h", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-info.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-info.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-info.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d78ae81bd7db091ce94493066e810518e9b9def2", "filename": "gcc/analyzer/call-string.cc", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-string.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d97ff84ce779cb9623856c99a092540f9e232e1f", "filename": "gcc/analyzer/call-string.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-string.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "a18a1b1b40a7a5e769fff9881ee81918e5e18525", "filename": "gcc/analyzer/call-summary.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-summary.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-summary.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-summary.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "73f21ac72826cf8db0d7a30c3729fcc00ab73390", "filename": "gcc/analyzer/call-summary.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-summary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcall-summary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcall-summary.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "4985f632f20682be66c74e746dd12edd5e8fd9af", "filename": "gcc/analyzer/checker-event.cc", "status": "added", "additions": 1209, "deletions": 0, "changes": 1209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-event.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-event.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fchecker-event.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "6dac647b8722695f1ef290fe346ead6234db5fbc", "filename": "gcc/analyzer/checker-event.h", "status": "added", "additions": 689, "deletions": 0, "changes": 689, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-event.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-event.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fchecker-event.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "c229e4675e0b0adc7db1698515f382bad38487c8", "filename": "gcc/analyzer/checker-path.cc", "status": "modified", "additions": 29, "deletions": 1156, "changes": 1185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fchecker-path.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "de1f6203b03044bb48ca0170d4f7adb1d23fbc06", "filename": "gcc/analyzer/checker-path.h", "status": "modified", "additions": 9, "deletions": 591, "changes": 600, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fchecker-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fchecker-path.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "2756f961d80bdc7acf987a1bcc2a9f544b0ff3a1", "filename": "gcc/analyzer/complexity.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcomplexity.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fcomplexity.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fcomplexity.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b4e51b089432fc1f5c9b060d9375524101c4caf5", "filename": "gcc/analyzer/constraint-manager.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fconstraint-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fconstraint-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fconstraint-manager.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "9cc02da4691065452e7072922682d546b2ba825b", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 174, "deletions": 162, "changes": 336, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "56a233b9fa3b30da373b5a07557726be2b591d42", "filename": "gcc/analyzer/diagnostic-manager.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fdiagnostic-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fdiagnostic-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b3b81cca8565d3e53393a417658bf995cada5d5b", "filename": "gcc/analyzer/engine.cc", "status": "modified", "additions": 220, "deletions": 174, "changes": 394, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fengine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fengine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fengine.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "86644c10835518ffc28c7f0fab8bfb9074ef9343", "filename": "gcc/analyzer/exploded-graph.h", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fexploded-graph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fexploded-graph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fexploded-graph.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "7c3dcf8bbc10b4b3999d3693c569d4eb8a469b5e", "filename": "gcc/analyzer/feasible-graph.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Ffeasible-graph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Ffeasible-graph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Ffeasible-graph.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "9f37b08969e27a88728a6b81285d900d5aeb87ed", "filename": "gcc/analyzer/feasible-graph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Ffeasible-graph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Ffeasible-graph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Ffeasible-graph.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "1a17d31fa7b33620d84f450f1d0bf6cab0928828", "filename": "gcc/analyzer/infinite-recursion.cc", "status": "added", "additions": 482, "deletions": 0, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Finfinite-recursion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Finfinite-recursion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Finfinite-recursion.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b233418beb7c58fdc8870f0c79c4fca6bf99b056", "filename": "gcc/analyzer/kf-analyzer.cc", "status": "added", "additions": 386, "deletions": 0, "changes": 386, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fkf-analyzer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fkf-analyzer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fkf-analyzer.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "9dca36699944c0e5d01f56fc64d32043da020b05", "filename": "gcc/analyzer/kf-lang-cp.cc", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fkf-lang-cp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fkf-lang-cp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fkf-lang-cp.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "ff2f1b1ef9c1263574bb7342f73601535e8f11ee", "filename": "gcc/analyzer/kf.cc", "status": "added", "additions": 991, "deletions": 0, "changes": 991, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fkf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fkf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fkf.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "dc514a7fe57715fe2e7a9b71fc693a66d21a7450", "filename": "gcc/analyzer/known-function-manager.cc", "status": "modified", "additions": 90, "deletions": 11, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fknown-function-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fknown-function-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fknown-function-manager.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "7bacafe8e24973c1ce0e292c230fc22550a9170f", "filename": "gcc/analyzer/known-function-manager.h", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fknown-function-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fknown-function-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fknown-function-manager.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "5ff32c09511dceeea03c1bc79fb572f4d06c7f61", "filename": "gcc/analyzer/pending-diagnostic.cc", "status": "modified", "additions": 57, "deletions": 7, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fpending-diagnostic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fpending-diagnostic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fpending-diagnostic.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "be446a4ac0296ba3a92d801c55c281e3caa9d4b3", "filename": "gcc/analyzer/pending-diagnostic.h", "status": "modified", "additions": 31, "deletions": 32, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fpending-diagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fpending-diagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fpending-diagnostic.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "23635a18de1ea4a41e07dde46724e27cfd1a3067", "filename": "gcc/analyzer/program-point.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fprogram-point.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fprogram-point.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-point.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "3942b5fdc18fe429c1313f9d675323714173d228", "filename": "gcc/analyzer/program-state.cc", "status": "modified", "additions": 79, "deletions": 11, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fprogram-state.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fprogram-state.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-state.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "79643278ee82e8cdbcd3009457bc48f2a6d717d5", "filename": "gcc/analyzer/program-state.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fprogram-state.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fprogram-state.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-state.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "171b2496f588f08b17e14d987d5c75c19ecaf218", "filename": "gcc/analyzer/region-model-asm.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-asm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-asm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-asm.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "52c4205cbeb52cb0cc54c984e15adafa81ab1309", "filename": "gcc/analyzer/region-model-impl-calls.cc", "status": "removed", "additions": 0, "deletions": 1150, "changes": 1150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d1620c91053438399064fa4eddb15d09cbabf4/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d1620c91053438399064fa4eddb15d09cbabf4/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc?ref=62d1620c91053438399064fa4eddb15d09cbabf4"}, {"sha": "dad7c4114460de0f601199afbb84d8e1624a35a1", "filename": "gcc/analyzer/region-model-manager.cc", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "ca9a498f12f2b587f518045dbc3c8cede64797f4", "filename": "gcc/analyzer/region-model-manager.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "6d2711a01812a10abd3ec4508fe0128002470aa5", "filename": "gcc/analyzer/region-model-reachability.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-reachability.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model-reachability.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-reachability.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "f6cd34f4c22c34d34d1af97ada6d8b82d85fd082", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 237, "deletions": 1066, "changes": 1303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "626b10d253862df0aba646a55d43fd0f46a597d6", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 78, "deletions": 131, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "67ba9486980b263478e3f3f9ea0284bd117d7df6", "filename": "gcc/analyzer/region.cc", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "6d8bcfb8868a24ec8396926a77c92bd29e035e0d", "filename": "gcc/analyzer/region.h", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fregion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "50e1313f85b1457de6fd75fa9acafe8c2f1e09da", "filename": "gcc/analyzer/sm-fd.cc", "status": "modified", "additions": 1484, "deletions": 48, "changes": 1532, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-fd.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-fd.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-fd.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d7676b1f77927ebe7dd781e36dc6c9c91fac111c", "filename": "gcc/analyzer/sm-fd.dot", "status": "modified", "additions": 71, "deletions": 1, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-fd.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-fd.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-fd.dot?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "1bd594b1263c89a189914072408ee62c0bf2224c", "filename": "gcc/analyzer/sm-file.cc", "status": "modified", "additions": 166, "deletions": 4, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-file.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-file.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-file.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "ac0f3610f146bf4f43ae434b3ec749d4203a6a87", "filename": "gcc/analyzer/sm-file.dot", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-file.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-file.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-file.dot?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b520c9b5566d054ffcf7a6b2a8dd61b5b4e7beae", "filename": "gcc/analyzer/sm-malloc.cc", "status": "modified", "additions": 340, "deletions": 32, "changes": 372, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-malloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-malloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-malloc.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "cb1c54aa351c05e13f5eb4da8f83cc6812881c5b", "filename": "gcc/analyzer/sm-malloc.dot", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-malloc.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-malloc.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-malloc.dot?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "704f628f5b7511b544476d22aaa12b08a5b0d543", "filename": "gcc/analyzer/sm-pattern-test.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-pattern-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-pattern-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-pattern-test.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d19765fc4a9890d1d82fac7cc5830963beb1829e", "filename": "gcc/analyzer/sm-sensitive.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-sensitive.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-sensitive.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-sensitive.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "38db6c0228aafa813f3da62e3dcca2a3b9f96ff9", "filename": "gcc/analyzer/sm-signal.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-signal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-signal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-signal.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "a2b442a4ef28e2a92150606f24b366ca49a8d71f", "filename": "gcc/analyzer/sm-taint.cc", "status": "modified", "additions": 183, "deletions": 22, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-taint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm-taint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-taint.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "1f329cb11d07fe6b802e4504559a47f861d6ae92", "filename": "gcc/analyzer/sm.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "085a3a1514b447940d97f7366c9e3478be4c8db3", "filename": "gcc/analyzer/sm.h", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "e9bcb4b0345478248ff079d718462a7521e0a5b3", "filename": "gcc/analyzer/state-purge.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fstate-purge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fstate-purge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstate-purge.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "dd8ebaa73742779bcc242f173c8557ef5d980bb9", "filename": "gcc/analyzer/store.cc", "status": "modified", "additions": 51, "deletions": 6, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "30284eb78038f37b6305d01784c251e43c884062", "filename": "gcc/analyzer/store.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fstore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fstore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "8195fe8e7f898f684f87c2c52af45e87ee2e301c", "filename": "gcc/analyzer/supergraph.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsupergraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsupergraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsupergraph.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "aa03b049724da8ff17797e1991a21a015229840b", "filename": "gcc/analyzer/svalue.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fsvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsvalue.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "9a42248e6fa05c6f780eead0434fe347a0e4fc5a", "filename": "gcc/analyzer/trimmed-graph.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Ftrimmed-graph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Ftrimmed-graph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Ftrimmed-graph.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "1a3bddee4b29dddbbf535a8353bbb3fc3d849e22", "filename": "gcc/analyzer/varargs.cc", "status": "modified", "additions": 113, "deletions": 62, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fvarargs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fvarargs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fvarargs.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b456c9675c6fb11ee98b95524163610eccba37e2", "filename": "gcc/analyzer/varargs.dot", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fvarargs.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fanalyzer%2Fvarargs.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fvarargs.dot?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "dc7b7f4bcf1803dd2ffbbaad782cf1b515d61ed8", "filename": "gcc/asan.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fasan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fasan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "095def4d6b053668eb16a68bfe9274cb6ac02424", "filename": "gcc/attribs.cc", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fattribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fattribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "742811e6fdac73fc8306a37e791ff911a6f5196b", "filename": "gcc/attribs.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fattribs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fattribs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "02c4fefa86f486fc977f5be993e436f1cda72c49", "filename": "gcc/builtins.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fbuiltins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fbuiltins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "3fb66a7d6adc57d839e2897573d1753ed9b11d26", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 122, "deletions": 5, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "b36dd97802b9c2003afdbe67a120aba322d2766c", "filename": "gcc/c-family/c-attribs.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-attribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-attribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "f08c89142e502d7cdfdfe4037011a10e4960bf8b", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "64956fc2ca1208535ef0e5f0603e37b6dffa140b", "filename": "gcc/c-family/c-common.def", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-common.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-common.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.def?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "333f3e138d611cff55610a952e21405617a237ed", "filename": "gcc/c-family/c-cppbuiltin.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-cppbuiltin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-cppbuiltin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "0034d41d33ad1b4b6c470dcda2fe3058803c954a", "filename": "gcc/c-family/c-gimplify.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "2fe562c7ccfbacbfebd1db13ead3c968b619e996", "filename": "gcc/c-family/c-lex.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-lex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-lex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "2ab991126963f0967e7bd359fd71c65c162c4584", "filename": "gcc/c-family/c-omp.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-omp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-omp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "70745aa4e7c2d73a8c27907e270fb19a0f37e3d1", "filename": "gcc/c-family/c-opts.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-opts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-opts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "6e054358e9e7deb9c640aac7011dd56a506f528b", "filename": "gcc/c-family/c-ppoutput.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-ppoutput.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-ppoutput.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ppoutput.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "142a46441ac2d65fd95aa05a89b8f8c3be0eba4b", "filename": "gcc/c-family/c-pragma.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-pragma.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc-pragma.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "0d0ad0a6374aefaedf6e6e4e72361bd475aa0dea", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "20dbbe362e68a672477acc30bdfdbb9479196939", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "e47ca6718b3ea004e8437fbc5a93ae4d663dda82", "filename": "gcc/c/c-decl.cc", "status": "modified", "additions": 271, "deletions": 40, "changes": 311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "1bbb39f9b08749a48fc8cf88facb67d4aeb70763", "filename": "gcc/c/c-parser.cc", "status": "modified", "additions": 329, "deletions": 43, "changes": 372, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-parser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-parser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "c287124c990b40f92d907883b821ed278a8591be", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "e06f052eb46a72d3d50835330c5af975e7c52084", "filename": "gcc/c/c-typeck.cc", "status": "modified", "additions": 336, "deletions": 28, "changes": 364, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-typeck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fc%2Fc-typeck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "646a066143dfba725efe98167411bb205e2ab3be", "filename": "gcc/cfgbuild.cc", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcfgbuild.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcfgbuild.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "f8fa13c1d69fe37554572383242b5a9469522adb", "filename": "gcc/cfghooks.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcfghooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcfghooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "f15cb47c8b8816028f60342ef8c9e4fab630c557", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "562d73d7f552a13d30c1ce360d058edf72fda7c3", "filename": "gcc/common.opt", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "4d1bcffb97875c4a5612bf9d1bf690c3ef12f990", "filename": "gcc/common/config/i386/cpuinfo.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "660a977b68b499edf4beb3bdafe3196ee157ede0", "filename": "gcc/common/config/i386/i386-common.cc", "status": "modified", "additions": 86, "deletions": 3, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "fe2e9e21fd2a0c648c1cceb692d30c0319a7d154", "filename": "gcc/common/config/i386/i386-cpuinfo.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "ba2c2d94534aa537506dd1393d768cfde2691ef2", "filename": "gcc/common/config/i386/i386-isas.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-isas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-isas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-isas.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "4b7f777c103e4e7c80babf9f73a9090be678f14d", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "531592cff7d2e2ff4ea39c7a12c2129862c30b7c", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "e47b6a870e20867003393d7496f761e47057e804", "filename": "gcc/config/aarch64/aarch64-c.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-c.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "81401158968f8efcf7e03dea260b2c5cc2e3565c", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "48522606fbef93efb0523ce900cd0b6b9b65210e", "filename": "gcc/config/aarch64/aarch64-cost-tables.h", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d91f8a2babd8927416f9315f1998e9d3d512afa9", "filename": "gcc/config/aarch64/aarch64-fusion-pairs.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-fusion-pairs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-fusion-pairs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-fusion-pairs.def?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "8d1a703fb8c9379c5eca82d69b8058d436932fac", "filename": "gcc/config/aarch64/aarch64-option-extensions.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "fcc3a66cdf2cf8d87da4cd027e3d6ed04741c514", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "c0e6164b3bde97c8ce1ebfae05aacb0409365f18", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 117, "deletions": 28, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d52ec083ed06b068739abdd579d7917f76a29e58", "filename": "gcc/config/aarch64/aarch64-sve-builtins-base.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "dadd046b832606f50119d1bfed33c95b287ff821", "filename": "gcc/config/aarch64/aarch64-sve2.md", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "4fd35fa4884617b901b9ae6faea2f39975c4f4b2", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "73515c174fa4fe7830527e7eabd91c4648130ff4", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 319, "deletions": 121, "changes": 440, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "db6ec5c48d8f57d57c983f410315cdffe8d45a27", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "d749c98eef63de4b92e589a167af823416f6a71d", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 140, "deletions": 48, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "5407cf7be49949c18577bc0e637bb06ccba1d49d", "filename": "gcc/config/aarch64/atomics.md", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fatomics.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fatomics.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fatomics.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "ad2e5e05f4268c5d1ecc0c27b9d88b54169a1953", "filename": "gcc/config/aarch64/constraints.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fconstraints.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "a521dbde1ec42c0c442a9ca3dd52c9727d116399", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "ff7f73d3f300bdb4727b9a34307e5d34b4bf0294", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "5ed4db340bc5d7c9a41e6d1a3f660bf2a97b058b", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=74e16385964d6c03d99916654389edf39e768147"}, {"sha": "a10a09e36cd004165b6f1efddeb3bfc29d8337ac", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e16385964d6c03d99916654389edf39e768147/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=74e16385964d6c03d99916654389edf39e768147"}]}