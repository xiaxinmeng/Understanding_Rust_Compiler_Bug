{"sha": "10aa83c7dfd66aa96357c0951572b1c3c1192fa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBhYTgzYzdkZmQ2NmFhOTYzNTdjMDk1MTU3MmIxYzNjMTE5MmZhNA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-04-15T09:25:29Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-04-15T09:25:29Z"}, "message": "re PR java/6085 (gcj SEGVs on complicated inner class structures)\n\n        Fix for PR java/6085:\n        * parse.y (patch_method_invocation): Always use build_access_to_thisn\n        to get enclosing \"this\" argument for inner-class constructor\n        invocation. Pass correct arguments to build_access_to_thisn.\n\nFrom-SVN: r52318", "tree": {"sha": "c5b617427a61e67cbbeb9d9a804c1af659f1bc55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5b617427a61e67cbbeb9d9a804c1af659f1bc55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10aa83c7dfd66aa96357c0951572b1c3c1192fa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aa83c7dfd66aa96357c0951572b1c3c1192fa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10aa83c7dfd66aa96357c0951572b1c3c1192fa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aa83c7dfd66aa96357c0951572b1c3c1192fa4/comments", "author": null, "committer": null, "parents": [{"sha": "fe55a037f6af64c8a5533aa73d92c0958553f083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe55a037f6af64c8a5533aa73d92c0958553f083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe55a037f6af64c8a5533aa73d92c0958553f083"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "519b2aad000db2600418a84dbd4ac56fa42307b6", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10aa83c7dfd66aa96357c0951572b1c3c1192fa4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10aa83c7dfd66aa96357c0951572b1c3c1192fa4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=10aa83c7dfd66aa96357c0951572b1c3c1192fa4", "patch": "@@ -1,3 +1,10 @@\n+2002-04-15  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\tFix for PR java/6085:\n+\t* parse.y (patch_method_invocation): Always use build_access_to_thisn\n+\tto get enclosing \"this\" argument for inner-class constructor\n+\tinvocation. Pass correct arguments to build_access_to_thisn.\n+\n 2002-04-10  Andreas Jaeger  <aj@suse.de>\n \n \t* gcj.texi (Input Options): Fix extdirs patch.\n@@ -26,6 +33,7 @@\n \t* Make-lang.in: Compile jcf-path with version info for use in\n \tidentifying the appropriate libgcj.jar.\n \n+>>>>>>> 1.982\n 2002-04-08  Tom Tromey  <tromey@redhat.com>\n \n \tFor PR libgcj/5303:"}, {"sha": "b230abb250ead9c7d55a5076a41fe61824be143d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10aa83c7dfd66aa96357c0951572b1c3c1192fa4/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10aa83c7dfd66aa96357c0951572b1c3c1192fa4/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=10aa83c7dfd66aa96357c0951572b1c3c1192fa4", "patch": "@@ -105,7 +105,6 @@ static void check_inner_class_access PARAMS ((tree, tree, tree));\n static int check_pkg_class_access PARAMS ((tree, tree, bool));\n static void register_package PARAMS ((tree));\n static tree resolve_package PARAMS ((tree, tree *, tree *));\n-static tree lookup_package_type PARAMS ((const char *, int));\n static tree resolve_class PARAMS ((tree, tree, tree, tree));\n static void declare_local_variables PARAMS ((int, tree, tree));\n static void dump_java_tree PARAMS ((enum tree_dump_index, tree));\n@@ -10466,27 +10465,15 @@ patch_method_invocation (patch, primary, where, from_super,\n \n   /* This handles the situation where a constructor invocation needs\n      to have an enclosing context passed as a second parameter (the\n-     constructor is one of an inner class. We extract it from the\n-     current function.  */\n+     constructor is one of an inner class). */\n   if ((is_super_init || \n        (TREE_CODE (patch) == CALL_EXPR && name == this_identifier_node))\n       && PURE_INNER_CLASS_TYPE_P (DECL_CONTEXT (list)))\n     {\n-      tree enclosing_decl = DECL_CONTEXT (TYPE_NAME (current_class));\n-      tree extra_arg;\n-\n-      if (ANONYMOUS_CLASS_P (current_class) || !DECL_CONTEXT (enclosing_decl))\n-\t{\n-\t  extra_arg = DECL_FUNCTION_BODY (current_function_decl);\n-\t  extra_arg = TREE_CHAIN (BLOCK_EXPR_DECLS (extra_arg));\n-\t}\n-      else\n-\t{\n-\t  tree dest = TREE_TYPE (DECL_CONTEXT (enclosing_decl));\n-\t  extra_arg = \n-\t    build_access_to_thisn (TREE_TYPE (enclosing_decl), dest, 0);\n-\t  extra_arg = java_complete_tree (extra_arg);\n-\t}\n+      tree dest = TYPE_NAME (DECL_CONTEXT (list));\n+      tree extra_arg = \n+\tbuild_access_to_thisn (current_class, DECL_CONTEXT (dest), 0);\n+      extra_arg = java_complete_tree (extra_arg);\n       args = tree_cons (NULL_TREE, extra_arg, args);\n     }\n "}]}