{"sha": "1096ab1775636f35de9c6661f8f71f03299af998", "node_id": "C_kwDOANBUbNoAKDEwOTZhYjE3NzU2MzZmMzVkZTljNjY2MWY4ZjcxZjAzMjk5YWY5OTg", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-01-03T19:58:16Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-01-03T19:59:19Z"}, "message": "i386: Always enable mov<V_32:mode> patterns [PR103894]\n\nMiddle end tries to generate V4QImode moves to implement V2QImode inserts\nand calls emit_move_multi_word when V4QImode moves are unavailable, as is\nthe case with 32-bit vector moves, constrainted with TARGET_SSE2.\n\nHowever, this triggers\n\n  gcc_assert (mode_size >= UNITS_PER_WORD);\n\nin emit_move_multi_word, since mode_size of V4QImode operand is less than\nUNITS_PER_WORD of 64-bit targets.\n\nThe patch unconditionally enables 32-bit vector moves to match 16-bit\nvector moves.  This also enables implementation of 32-bit vector logic\noperations with GPR in a follow-up patch.\n\n2022-01-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/103894\n\t* config/i386/mmx.md (mov<V_32:mode>): Remove TARGET_SSE2 constraint.\n\t(mov<V_32:mode>_internal): Ditto.\n\t(*push<V_32:mode>_rex64): Ditto.\n\t(movmisalign<V_32:mode>): Ditto.\n\t(*push<V_32:mode>_rex64 splitter): Enable for\n\tTARGET_64BIT && TARGET_SSE.\n\t(*push<V_32:mode>2): Remove insn pattern.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/103894\n\t* gcc.target/i386/pr103894.c: New test.", "tree": {"sha": "36ae2da3429df604850a758fff00d4cc23e04c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36ae2da3429df604850a758fff00d4cc23e04c1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1096ab1775636f35de9c6661f8f71f03299af998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1096ab1775636f35de9c6661f8f71f03299af998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1096ab1775636f35de9c6661f8f71f03299af998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1096ab1775636f35de9c6661f8f71f03299af998/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "122a75488c98b898df1a6f2ed4e48836a5d72d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122a75488c98b898df1a6f2ed4e48836a5d72d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122a75488c98b898df1a6f2ed4e48836a5d72d7a"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "5b33d3cfc1cabdd9f1e942a081e01ab5f6a8fad2", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1096ab1775636f35de9c6661f8f71f03299af998/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1096ab1775636f35de9c6661f8f71f03299af998/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=1096ab1775636f35de9c6661f8f71f03299af998", "patch": "@@ -250,7 +250,7 @@\n (define_expand \"mov<mode>\"\n   [(set (match_operand:V_32 0 \"nonimmediate_operand\")\n \t(match_operand:V_32 1 \"nonimmediate_operand\"))]\n-  \"TARGET_SSE2\"\n+  \"\"\n {\n   ix86_expand_vector_move (<MODE>mode, operands);\n   DONE;\n@@ -261,8 +261,7 @@\n     \"=r ,m ,v,v,v,m,r,v\")\n \t(match_operand:V_32 1 \"general_operand\"\n     \"rmC,rC,C,v,m,v,v,r\"))]\n-  \"TARGET_SSE2\n-   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n   switch (get_attr_type (insn))\n     {\n@@ -321,29 +320,19 @@\n (define_insn \"*push<mode>2_rex64\"\n   [(set (match_operand:V_32 0 \"push_operand\" \"=X,X\")\n \t(match_operand:V_32 1 \"nonmemory_no_elim_operand\" \"rC,*v\"))]\n-  \"TARGET_SSE2 && TARGET_64BIT\"\n+  \"TARGET_64BIT\"\n   \"@\n    push{q}\\t%q1\n    #\"\n   [(set_attr \"type\" \"push,multi\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*push<mode>2\"\n-  [(set (match_operand:V_32 0 \"push_operand\" \"=<,<\")\n-\t(match_operand:V_32 1 \"general_no_elim_operand\" \"rC*m,*v\"))]\n-  \"TARGET_SSE2 && !TARGET_64BIT\"\n-  \"@\n-   push{l}\\t%1\n-   #\"\n-  [(set_attr \"type\" \"push,multi\")\n-   (set_attr \"mode\" \"SI\")])\n-\n (define_split\n   [(set (match_operand:V_32 0 \"push_operand\")\n \t(match_operand:V_32 1 \"sse_reg_operand\"))]\n-  \"TARGET_SSE2 && reload_completed\"\n+  \"TARGET_64BIT && TARGET_SSE && reload_completed\"\n   [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (match_dup 2)))\n-    (set (match_dup 0) (match_dup 1))]\n+   (set (match_dup 0) (match_dup 1))]\n {\n   operands[2] = GEN_INT (-PUSH_ROUNDING (GET_MODE_SIZE (<V_32:MODE>mode)));\n   /* Preserve memory attributes. */\n@@ -353,7 +342,7 @@\n (define_expand \"movmisalign<mode>\"\n   [(set (match_operand:V_32 0 \"nonimmediate_operand\")\n \t(match_operand:V_32 1 \"nonimmediate_operand\"))]\n-  \"TARGET_SSE2\"\n+  \"\"\n {\n   ix86_expand_vector_move (<MODE>mode, operands);\n   DONE;"}, {"sha": "69c81046930abedca290c4cd7aa04b7aa2994f43", "filename": "gcc/testsuite/gcc.target/i386/pr103894.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1096ab1775636f35de9c6661f8f71f03299af998/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103894.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1096ab1775636f35de9c6661f8f71f03299af998/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103894.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103894.c?ref=1096ab1775636f35de9c6661f8f71f03299af998", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/103894 */\n+/* { dg-do compile } */\n+/* { dg-options \"-msse -mno-sse2\" } */\n+\n+typedef unsigned char __attribute__((__vector_size__ (32))) V;\n+typedef unsigned char __attribute__((__vector_size__ (2))) W;\n+\n+V v;\n+\n+W foo (W w)\n+{\n+  return __builtin_shufflevector (v, w, 3, 4);\n+}"}]}