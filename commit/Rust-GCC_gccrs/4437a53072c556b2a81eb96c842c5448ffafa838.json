{"sha": "4437a53072c556b2a81eb96c842c5448ffafa838", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzN2E1MzA3MmM1NTZiMmE4MWViOTZjODQyYzU0NDhmZmFmYTgzOA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2011-08-03T09:36:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:36:24Z"}, "message": "gnatcmd.adb, [...] (Prj.Tree.Environment): new type.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnatcmd.adb, prj-proc.adb, prj-proc.ads, make.adb, prj-part.adb,\n\tprj-part.ads, switch-m.adb, switch-m.ads, prj-makr.adb, clean.adb,\n\tprj-pars.adb, prj-pars.ads, prj-conf.adb, prj-conf.ads, prj-tree.adb,\n\tprj-tree.ads (Prj.Tree.Environment): new type.\n\nFrom-SVN: r177248", "tree": {"sha": "26be5ac589a2f9898be35b1657335ce04c95f003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26be5ac589a2f9898be35b1657335ce04c95f003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4437a53072c556b2a81eb96c842c5448ffafa838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4437a53072c556b2a81eb96c842c5448ffafa838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4437a53072c556b2a81eb96c842c5448ffafa838", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4437a53072c556b2a81eb96c842c5448ffafa838/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "804fe3c4e68b9ab02f60ee33acfc325cfda76591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804fe3c4e68b9ab02f60ee33acfc325cfda76591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804fe3c4e68b9ab02f60ee33acfc325cfda76591"}], "stats": {"total": 462, "additions": 226, "deletions": 236}, "files": [{"sha": "4287e95e1e86fee854f27b62070f240069f40c33", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -1,3 +1,10 @@\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnatcmd.adb, prj-proc.adb, prj-proc.ads, make.adb, prj-part.adb,\n+\tprj-part.ads, switch-m.adb, switch-m.ads, prj-makr.adb, clean.adb,\n+\tprj-pars.adb, prj-pars.ads, prj-conf.adb, prj-conf.ads, prj-tree.adb,\n+\tprj-tree.ads (Prj.Tree.Environment): new type.\n+\n 2011-08-03  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, prj.ads, makeutl.adb, makeutl.ads, prj-conf.adb,"}, {"sha": "49cc5cc24ba2a57090a6618c4bf8e79c6475d078", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 13, "deletions": 27, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -93,6 +93,8 @@ package body Clean is\n \n    Project_Node_Tree : Project_Node_Tree_Ref;\n \n+   Root_Environment : Prj.Tree.Environment;\n+\n    Main_Project : Prj.Project_Id := Prj.No_Project;\n \n    All_Projects : Boolean := False;\n@@ -1400,15 +1402,12 @@ package body Clean is\n          --  Parse the project file. If there is an error, Main_Project\n          --  will still be No_Project.\n \n-         Prj.Env.Initialize_Default_Project_Path\n-            (Project_Node_Tree.Project_Path, Target_Name => \"\");\n-\n          Prj.Pars.Parse\n            (Project           => Main_Project,\n             In_Tree           => Project_Tree,\n             In_Node_Tree      => Project_Node_Tree,\n             Project_File_Name => Project_File_Name.all,\n-            Flags             => Gnatmake_Flags,\n+            Env               => Root_Environment,\n             Packages_To_Check => Packages_To_Check_By_Gnatmake);\n \n          if Main_Project = No_Project then\n@@ -1561,6 +1560,10 @@ package body Clean is\n          Csets.Initialize;\n          Snames.Initialize;\n \n+         Prj.Tree.Initialize (Root_Environment, Gnatmake_Flags);\n+         Prj.Env.Initialize_Default_Project_Path\n+            (Root_Environment.Project_Path, Target_Name => \"\");\n+\n          Project_Node_Tree := new Project_Node_Tree_Data;\n          Prj.Tree.Initialize (Project_Node_Tree);\n \n@@ -1696,7 +1699,7 @@ package body Clean is\n \n                         elsif Arg (3) = 'P' then\n                            Prj.Env.Add_Directories\n-                             (Project_Node_Tree.Project_Path,\n+                             (Root_Environment.Project_Path,\n                               Arg (4 .. Arg'Last));\n \n                         else\n@@ -1858,7 +1861,6 @@ package body Clean is\n                            Ext_Asgn  : constant String := Arg (3 .. Arg'Last);\n                            Start     : Positive := Ext_Asgn'First;\n                            Stop      : Natural  := Ext_Asgn'Last;\n-                           Equal_Pos : Natural;\n                            OK        : Boolean  := True;\n \n                         begin\n@@ -1872,27 +1874,11 @@ package body Clean is\n                               end if;\n                            end if;\n \n-                           Equal_Pos := Start;\n-\n-                           while Equal_Pos <= Stop\n-                             and then Ext_Asgn (Equal_Pos) /= '='\n-                           loop\n-                              Equal_Pos := Equal_Pos + 1;\n-                           end loop;\n-\n-                           if Equal_Pos = Start or else Equal_Pos > Stop then\n-                              OK := False;\n-                           end if;\n-\n-                           if OK then\n-                              Prj.Ext.Add\n-                                (Project_Node_Tree.External,\n-                                 External_Name =>\n-                                   Ext_Asgn (Start .. Equal_Pos - 1),\n-                                 Value         =>\n-                                   Ext_Asgn (Equal_Pos + 1 .. Stop));\n-\n-                           else\n+                           if not OK\n+                              or else not Prj.Ext.Check\n+                                (Root_Environment.External,\n+                                 Ext_Asgn (Start .. Stop))\n+                           then\n                               Fail\n                                 (\"illegal external assignment '\"\n                                  & Ext_Asgn"}, {"sha": "2f72c8d584cbb7efc5d5710b806873ca7f4d1590", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 11, "deletions": 40, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -58,6 +58,7 @@ with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n procedure GNATCmd is\n    Project_Node_Tree : Project_Node_Tree_Ref;\n+   Root_Environment  : Prj.Tree.Environment;\n    Project_File      : String_Access;\n    Project           : Prj.Project_Id;\n    Current_Verbosity : Prj.Verbosity := Prj.Default;\n@@ -246,9 +247,6 @@ procedure GNATCmd is\n    --  Get the sources in the closure of the ASIS_Main and add them to the\n    --  list of arguments.\n \n-   function Index (Char : Character; Str : String) return Natural;\n-   --  Returns first occurrence of Char in Str, returns 0 if Char not in Str\n-\n    procedure Non_VMS_Usage;\n    --  Display usage for platforms other than VMS\n \n@@ -922,21 +920,6 @@ procedure GNATCmd is\n       end if;\n    end Get_Closure;\n \n-   -----------\n-   -- Index --\n-   -----------\n-\n-   function Index (Char : Character; Str : String) return Natural is\n-   begin\n-      for Index in Str'Range loop\n-         if Str (Index) = Char then\n-            return Index;\n-         end if;\n-      end loop;\n-\n-      return 0;\n-   end Index;\n-\n    ------------------\n    -- Mapping_File --\n    ------------------\n@@ -1364,10 +1347,11 @@ begin\n    Csets.Initialize;\n    Snames.Initialize;\n \n-   Project_Node_Tree := new Project_Node_Tree_Data;\n+   Prj.Tree.Initialize (Root_Environment, Gnatmake_Flags);\n    Prj.Env.Initialize_Default_Project_Path\n-      (Project_Node_Tree.Project_Path, Target_Name => \"\");\n+      (Root_Environment.Project_Path, Target_Name => \"\");\n \n+   Project_Node_Tree := new Project_Node_Tree_Data;\n    Prj.Tree.Initialize (Project_Node_Tree);\n \n    Prj.Initialize (Project_Tree);\n@@ -1725,7 +1709,7 @@ begin\n                     and then Argv (Argv'First + 1 .. Argv'First + 2) = \"aP\"\n                   then\n                      Prj.Env.Add_Directories\n-                       (Project_Node_Tree.Project_Path,\n+                       (Root_Environment.Project_Path,\n                         Argv (Argv'First + 3 .. Argv'Last));\n \n                      Remove_Switch (Arg_Num);\n@@ -1813,25 +1797,12 @@ begin\n                   elsif Argv'Length >= 5\n                     and then Argv (Argv'First + 1) = 'X'\n                   then\n-                     declare\n-                        Equal_Pos : constant Natural :=\n-                                      Index\n-                                        ('=',\n-                                         Argv (Argv'First + 2 .. Argv'Last));\n-                     begin\n-                        if Equal_Pos >= Argv'First + 3\n-                          and then Equal_Pos /= Argv'Last\n-                        then\n-                           Add (Project_Node_Tree.External,\n-                                External_Name =>\n-                                  Argv (Argv'First + 2 .. Equal_Pos - 1),\n-                                Value => Argv (Equal_Pos + 1 .. Argv'Last));\n-                        else\n-                           Fail\n-                             (Argv.all\n+                     if not Check (Root_Environment.External,\n+                                    Argv (Argv'First + 2 .. Argv'Last))\n+                     then\n+                        Fail (Argv.all\n                               & \" is not a valid external assignment.\");\n-                        end if;\n-                     end;\n+                     end if;\n \n                      Remove_Switch (Arg_Num);\n \n@@ -1884,7 +1855,7 @@ begin\n             In_Tree           => Project_Tree,\n             In_Node_Tree      => Project_Node_Tree,\n             Project_File_Name => Project_File.all,\n-            Flags             => Gnatmake_Flags,\n+            Env               => Root_Environment,\n             Packages_To_Check => Packages_To_Check);\n \n          if Project = Prj.No_Project then"}, {"sha": "4901928ccd689a91d9192b12c0318c467e30c0d0", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 39, "deletions": 30, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -645,7 +645,7 @@ package body Make is\n    --  directory of the ultimate extending project. If it is not, we ignore\n    --  the fact that this ALI file is read-only.\n \n-   procedure Process_Multilib (Project_Node_Tree : Project_Node_Tree_Ref);\n+   procedure Process_Multilib (Env : in out Prj.Tree.Environment);\n    --  Add appropriate --RTS argument to handle multilib\n \n    ----------------------------------------------------\n@@ -723,7 +723,8 @@ package body Make is\n       Index                            : Int;\n       Program                          : Make_Program_Type;\n       Unknown_Switches_To_The_Compiler : Boolean := True;\n-      Project_Node_Tree                : Project_Node_Tree_Ref);\n+      Project_Node_Tree                : Project_Node_Tree_Ref;\n+      Env                              : in out Prj.Tree.Environment);\n    procedure Add_Switch\n      (S             : String_Access;\n       Program       : Make_Program_Type;\n@@ -1021,7 +1022,9 @@ package body Make is\n    --  Call the CodePeer globalizer on all the project's object directories,\n    --  or on the current directory if no projects.\n \n-   procedure Initialize (Project_Node_Tree : out Project_Node_Tree_Ref);\n+   procedure Initialize\n+      (Project_Node_Tree : out Project_Node_Tree_Ref;\n+       Env               : out Prj.Tree.Environment);\n    --  Performs default and package initialization. Therefore,\n    --  Compile_Sources can be called by an external unit.\n \n@@ -1034,7 +1037,7 @@ package body Make is\n    --  succeeded or not.\n \n    procedure Scan_Make_Arg\n-     (Project_Node_Tree : Project_Node_Tree_Ref;\n+     (Env               : in out Prj.Tree.Environment;\n       Argv              : String;\n       And_Save          : Boolean);\n    --  Scan make arguments. Argv is a single argument to be processed.\n@@ -1262,7 +1265,8 @@ package body Make is\n       Index                            : Int;\n       Program                          : Make_Program_Type;\n       Unknown_Switches_To_The_Compiler : Boolean := True;\n-      Project_Node_Tree                : Project_Node_Tree_Ref)\n+      Project_Node_Tree                : Project_Node_Tree_Ref;\n+      Env                              : in out Prj.Tree.Environment)\n    is\n       Switches    : Variable_Value;\n       Switch_List : String_List_Id;\n@@ -1303,8 +1307,7 @@ package body Make is\n                         Write_Line (Argv);\n                      end if;\n \n-                     Scan_Make_Arg\n-                       (Project_Node_Tree, Argv, And_Save => False);\n+                     Scan_Make_Arg (Env, Argv, And_Save => False);\n \n                      if not Gnatmake_Switch_Found\n                        and then not Switch_May_Be_Passed_To_The_Compiler\n@@ -4234,6 +4237,7 @@ package body Make is\n       --  The path name of the mapping file\n \n       Project_Node_Tree : Project_Node_Tree_Ref;\n+      Root_Environment  : Prj.Tree.Environment;\n \n       Discard : Boolean;\n       pragma Warnings (Off, Discard);\n@@ -4397,7 +4401,7 @@ package body Make is\n \n       Obsoleted.Reset;\n \n-      Make.Initialize (Project_Node_Tree);\n+      Make.Initialize (Project_Node_Tree, Root_Environment);\n \n       Bind_Shared := No_Shared_Switch'Access;\n       Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n@@ -4880,6 +4884,7 @@ package body Make is\n \n                   Add_Switches\n                     (Project_Node_Tree                => Project_Node_Tree,\n+                     Env                              => Root_Environment,\n                      File_Name                        => Main_Unit_File_Name,\n                      Index                            => Main_Index,\n                      The_Package                      => Builder_Package,\n@@ -4936,6 +4941,7 @@ package body Make is\n \n                         Add_Switches\n                           (Project_Node_Tree              => Project_Node_Tree,\n+                           Env                            => Root_Environment,\n                            File_Name                        => \" \",\n                            Index                            => 0,\n                            The_Package                      => Builder_Package,\n@@ -4953,6 +4959,7 @@ package body Make is\n \n                         Add_Switches\n                           (Project_Node_Tree => Project_Node_Tree,\n+                           Env               => Root_Environment,\n                            File_Name   => \" \",\n                            Index       => 0,\n                            The_Package => Builder_Package,\n@@ -5045,6 +5052,7 @@ package body Make is\n \n                Add_Switches\n                  (Project_Node_Tree => Project_Node_Tree,\n+                  Env               => Root_Environment,\n                   File_Name         => Main_Unit_File_Name,\n                   Index             => Main_Index,\n                   The_Package       => Binder_Package,\n@@ -5062,6 +5070,7 @@ package body Make is\n \n                Add_Switches\n                  (Project_Node_Tree => Project_Node_Tree,\n+                  Env               => Root_Environment,\n                   File_Name         => Main_Unit_File_Name,\n                   Index             => Main_Index,\n                   The_Package       => Linker_Package,\n@@ -6401,6 +6410,7 @@ package body Make is\n \n                      Add_Switches\n                        (Project_Node_Tree => Project_Node_Tree,\n+                        Env               => Root_Environment,\n                         File_Name         => Main_Unit_File_Name,\n                         Index             => Main_Index,\n                         The_Package       => Binder_Package,\n@@ -6419,6 +6429,7 @@ package body Make is\n \n                      Add_Switches\n                        (Project_Node_Tree => Project_Node_Tree,\n+                        Env               => Root_Environment,\n                         File_Name         => Main_Unit_File_Name,\n                         Index             => Main_Index,\n                         The_Package       => Linker_Package,\n@@ -6623,8 +6634,10 @@ package body Make is\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize (Project_Node_Tree : out Project_Node_Tree_Ref) is\n-\n+   procedure Initialize\n+      (Project_Node_Tree : out Project_Node_Tree_Ref;\n+       Env               : out Prj.Tree.Environment)\n+   is\n       procedure Check_Version_And_Help is\n          new Check_Version_And_Help_G (Makeusg);\n \n@@ -6635,10 +6648,11 @@ package body Make is\n       --  references, project path and other attributes that can be impacted by\n       --  the command line switches\n \n-      Project_Node_Tree := new Project_Node_Tree_Data;\n+      Prj.Tree.Initialize (Env, Gnatmake_Flags);\n       Prj.Env.Initialize_Default_Project_Path\n-         (Project_Node_Tree.Project_Path, Target_Name => \"\");\n+         (Env.Project_Path, Target_Name => \"\");\n \n+      Project_Node_Tree := new Project_Node_Tree_Data;\n       Prj.Tree.Initialize (Project_Node_Tree);\n \n       --  Override default initialization of Check_Object_Consistency since\n@@ -6721,12 +6735,11 @@ package body Make is\n       --  do not include --version or --help.\n \n       Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n-         Scan_Make_Arg\n-           (Project_Node_Tree, Argument (Next_Arg), And_Save => True);\n+         Scan_Make_Arg (Env, Argument (Next_Arg), And_Save => True);\n       end loop Scan_Args;\n \n       if N_M_Switch > 0 and RTS_Specified = null then\n-         Process_Multilib (Project_Node_Tree);\n+         Process_Multilib (Env);\n       end if;\n \n       if Commands_To_Stdout then\n@@ -6811,7 +6824,7 @@ package body Make is\n             In_Tree           => Project_Tree,\n             Project_File_Name => Project_File_Name.all,\n             Packages_To_Check => Packages_To_Check_By_Gnatmake,\n-            Flags             => Gnatmake_Flags,\n+            Env               => Env,\n             In_Node_Tree      => Project_Node_Tree);\n \n          --  The parsing of project files may have changed the current output\n@@ -7347,9 +7360,7 @@ package body Make is\n    -- Process_Multilib --\n    ----------------------\n \n-   procedure Process_Multilib\n-     (Project_Node_Tree : Project_Node_Tree_Ref)\n-   is\n+   procedure Process_Multilib (Env : in out Prj.Tree.Environment) is\n       Output_FD         : File_Descriptor;\n       Output_Name       : String_Access;\n       Arg_Index         : Natural := 0;\n@@ -7450,9 +7461,8 @@ package body Make is\n \n       --  Otherwise add -margs --RTS=output\n \n-      Scan_Make_Arg (Project_Node_Tree, \"-margs\", And_Save => True);\n-      Scan_Make_Arg\n-        (Project_Node_Tree, \"--RTS=\" & Line (1 .. N_Read), And_Save => True);\n+      Scan_Make_Arg (Env, \"-margs\", And_Save => True);\n+      Scan_Make_Arg (Env, \"--RTS=\" & Line (1 .. N_Read), And_Save => True);\n    end Process_Multilib;\n \n    -----------\n@@ -7839,7 +7849,7 @@ package body Make is\n    -------------------\n \n    procedure Scan_Make_Arg\n-     (Project_Node_Tree : Project_Node_Tree_Ref;\n+     (Env               : in out Prj.Tree.Environment;\n       Argv              : String;\n       And_Save          : Boolean)\n    is\n@@ -8129,7 +8139,7 @@ package body Make is\n                 (Argv (Create_Map_File_Switch'Length + 2 .. Argv'Last));\n \n          else\n-            Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n+            Scan_Make_Switches (Env, Argv, Success);\n          end if;\n \n       --  If we have seen a regular switch process it\n@@ -8265,7 +8275,7 @@ package body Make is\n                  (\"-D cannot be used in conjunction with a project file\");\n \n             else\n-               Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n+               Scan_Make_Switches (Env, Argv, Success);\n             end if;\n \n          --  -d\n@@ -8280,13 +8290,13 @@ package body Make is\n                Make_Failed\n                  (\"-i cannot be used in conjunction with a project file\");\n             else\n-               Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n+               Scan_Make_Switches (Env, Argv, Success);\n             end if;\n \n          --  -j (need to save the result)\n \n          elsif Argv (2) = 'j' then\n-            Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n+            Scan_Make_Switches (Env, Argv, Success);\n \n             if And_Save then\n                Saved_Maximum_Processes := Maximum_Processes;\n@@ -8371,7 +8381,7 @@ package body Make is\n          --  -Xext=val  (External assignment)\n \n          elsif Argv (2) = 'X'\n-           and then Is_External_Assignment (Project_Node_Tree, Argv)\n+           and then Is_External_Assignment (Env, Argv)\n          then\n             --  Is_External_Assignment has side effects when it returns True\n \n@@ -8419,8 +8429,7 @@ package body Make is\n          --  is passed to the compiler.\n \n          else\n-            Scan_Make_Switches\n-              (Project_Node_Tree, Argv, Gnatmake_Switch_Found);\n+            Scan_Make_Switches (Env, Argv, Gnatmake_Switch_Found);\n \n             if not Gnatmake_Switch_Found then\n                Add_Switch (Argv, Compiler, And_Save => And_Save);"}, {"sha": "978d4130ddf91e54836e0d0f6126b7df4ae311c0", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -573,7 +573,7 @@ package body Prj.Conf is\n      (Project                    : Project_Id;\n       Project_Tree               : Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n-      Env                        : Prj.Tree.Environment;\n+      Env                        : in out Prj.Tree.Environment;\n       Allow_Automatic_Generation : Boolean;\n       Config_File_Name           : String := \"\";\n       Autoconf_Specified         : Boolean;\n@@ -583,7 +583,6 @@ package body Prj.Conf is\n       Config                     : out Prj.Project_Id;\n       Config_File_Path           : out String_Access;\n       Automatically_Generated    : out Boolean;\n-      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null)\n    is\n \n@@ -933,13 +932,13 @@ package body Prj.Conf is\n             end if;\n \n             if not Is_Directory (Obj_Dir) then\n-               case Flags.Require_Obj_Dirs is\n+               case Env.Flags.Require_Obj_Dirs is\n                   when Error =>\n                      Raise_Invalid_Config\n                        (\"object directory \" & Obj_Dir & \" does not exist\");\n                   when Warning =>\n                      Prj.Err.Error_Msg\n-                       (Flags,\n+                       (Env.Flags,\n                         \"?object directory \" & Obj_Dir & \" does not exist\");\n                      Obj_Dir_Exists := False;\n                   when Silent =>\n@@ -1124,7 +1123,7 @@ package body Prj.Conf is\n             Packages_To_Check      => Packages_To_Check,\n             Current_Directory      => Current_Directory,\n             Is_Config_File         => True,\n-            Flags                  => Flags);\n+            Env                    => Env);\n       else\n          Config_Project_Node := Empty_Node;\n       end if;\n@@ -1136,7 +1135,7 @@ package body Prj.Conf is\n             Success                => Success,\n             From_Project_Node      => Config_Project_Node,\n             From_Project_Node_Tree => Project_Node_Tree,\n-            Flags                  => Flags,\n+            Env                    => Env,\n             Reset_Tree             => False);\n       end if;\n \n@@ -1190,17 +1189,17 @@ package body Prj.Conf is\n       Project_File_Name          : String;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Env                        : in out Prj.Tree.Environment;\n       Packages_To_Check          : String_List_Access;\n       Allow_Automatic_Generation : Boolean := True;\n       Automatically_Generated    : out Boolean;\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null)\n    is\n    begin\n-      pragma Assert (Prj.Env.Is_Initialized (Project_Node_Tree.Project_Path));\n+      pragma Assert (Prj.Env.Is_Initialized (Env.Project_Path));\n \n       --  Parse the user project tree\n \n@@ -1217,7 +1216,7 @@ package body Prj.Conf is\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Directory,\n          Is_Config_File         => False,\n-         Flags                  => Flags);\n+         Env                    => Env);\n \n       if User_Project_Node = Empty_Node then\n          User_Project_Node := Empty_Node;\n@@ -1231,13 +1230,13 @@ package body Prj.Conf is\n          Autoconf_Specified         => Autoconf_Specified,\n          Project_Tree               => Project_Tree,\n          Project_Node_Tree          => Project_Node_Tree,\n+         Env                        => Env,\n          Packages_To_Check          => Packages_To_Check,\n          Allow_Automatic_Generation => Allow_Automatic_Generation,\n          Automatically_Generated    => Automatically_Generated,\n          Config_File_Path           => Config_File_Path,\n          Target_Name                => Target_Name,\n          Normalized_Hostname        => Normalized_Hostname,\n-         Flags                      => Flags,\n          On_Load_Config             => On_Load_Config);\n    end Parse_Project_And_Apply_Config;\n \n@@ -1252,13 +1251,13 @@ package body Prj.Conf is\n       Autoconf_Specified         : Boolean;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Env                        : in out Prj.Tree.Environment;\n       Packages_To_Check          : String_List_Access;\n       Allow_Automatic_Generation : Boolean := True;\n       Automatically_Generated    : out Boolean;\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null;\n       Reset_Tree                 : Boolean := True)\n    is\n@@ -1275,7 +1274,7 @@ package body Prj.Conf is\n          Success                => Success,\n          From_Project_Node      => User_Project_Node,\n          From_Project_Node_Tree => Project_Node_Tree,\n-         Flags                  => Flags,\n+         Env                    => Env,\n          Reset_Tree             => Reset_Tree);\n \n       if not Success then\n@@ -1326,6 +1325,7 @@ package body Prj.Conf is\n          Project                    => Main_Project,\n          Project_Tree               => Project_Tree,\n          Project_Node_Tree          => Project_Node_Tree,\n+         Env                        => Env,\n          Allow_Automatic_Generation => Allow_Automatic_Generation,\n          Config_File_Name           => Config_File_Name,\n          Autoconf_Specified         => Autoconf_Specified,\n@@ -1334,7 +1334,6 @@ package body Prj.Conf is\n          Packages_To_Check          => Packages_To_Check,\n          Config_File_Path           => Config_File_Path,\n          Automatically_Generated    => Automatically_Generated,\n-         Flags                      => Flags,\n          On_Load_Config             => On_Load_Config);\n \n       Apply_Config_File (Main_Config_Project, Project_Tree);\n@@ -1347,7 +1346,7 @@ package body Prj.Conf is\n          Success                    => Success,\n          From_Project_Node          => User_Project_Node,\n          From_Project_Node_Tree     => Project_Node_Tree,\n-         Flags                      => Flags);\n+         Env                        => Env);\n \n       if Success then\n          if Project_Tree.Source_Info_File_Name /= null and then"}, {"sha": "af331846ce43f8a8246141c55f545aa005d4e83f", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2011, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,13 +48,13 @@ package Prj.Conf is\n       Project_File_Name          : String;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Env                        : in out Prj.Tree.Environment;\n       Packages_To_Check          : String_List_Access;\n       Allow_Automatic_Generation : Boolean := True;\n       Automatically_Generated    : out Boolean;\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null);\n    --  Find the main configuration project and parse the project tree rooted at\n    --  this configuration project.\n@@ -93,13 +93,13 @@ package Prj.Conf is\n       Autoconf_Specified         : Boolean;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Env                        : in out Prj.Tree.Environment;\n       Packages_To_Check          : String_List_Access;\n       Allow_Automatic_Generation : Boolean := True;\n       Automatically_Generated    : out Boolean;\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null;\n       Reset_Tree                 : Boolean := True);\n    --  Same as above, except the project must already have been parsed through\n@@ -121,6 +121,7 @@ package Prj.Conf is\n      (Project                    : Prj.Project_Id;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Env                        : in out Prj.Tree.Environment;\n       Allow_Automatic_Generation : Boolean;\n       Config_File_Name           : String := \"\";\n       Autoconf_Specified         : Boolean;\n@@ -130,7 +131,6 @@ package Prj.Conf is\n       Config                     : out Prj.Project_Id;\n       Config_File_Path           : out String_Access;\n       Automatically_Generated    : out Boolean;\n-      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null);\n    --  Compute the name of the configuration file that should be used. If no\n    --  default configuration file is found, a new one will be automatically"}, {"sha": "439ac0598a4f79fc0d0e8fdf98f4f007f095712f", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -61,6 +61,8 @@ package body Prj.Makr is\n    Tree : constant Project_Node_Tree_Ref := new Project_Node_Tree_Data;\n    --  The project tree where the project file is parsed\n \n+   Root_Environment : Prj.Tree.Environment;\n+\n    Args : Argument_List_Access;\n    --  The list of arguments for calls to the compiler to get the unit names\n    --  and kinds (spec or body) in the Ada sources.\n@@ -795,10 +797,14 @@ package body Prj.Makr is\n \n       Csets.Initialize;\n       Snames.Initialize;\n+\n       Prj.Initialize (No_Project_Tree);\n-      Prj.Tree.Initialize (Tree);\n+\n+      Prj.Tree.Initialize (Root_Environment, Flags);\n       Prj.Env.Initialize_Default_Project_Path\n-         (Tree.Project_Path, Target_Name => \"\");\n+         (Root_Environment.Project_Path, Target_Name => \"\");\n+\n+      Prj.Tree.Initialize (Tree);\n \n       Sources.Set_Last (0);\n       Source_Directories.Set_Last (0);\n@@ -866,7 +872,7 @@ package body Prj.Makr is\n                Errout_Handling        => Part.Finalize_If_Error,\n                Store_Comments         => True,\n                Is_Config_File         => False,\n-               Flags                  => Flags,\n+               Env                    => Root_Environment,\n                Current_Directory      => Get_Current_Dir,\n                Packages_To_Check      => Packages_To_Check_By_Gnatname);\n "}, {"sha": "f2d289f5c3872ba76c2a60af5ef621a3bd28893c", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -28,7 +28,6 @@ with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with Output;   use Output;\n with Prj.Conf; use Prj.Conf;\n-with Prj.Env;\n with Prj.Err;  use Prj.Err;\n with Prj.Part;\n with Prj.Tree; use Prj.Tree;\n@@ -45,9 +44,9 @@ package body Prj.Pars is\n       Project           : out Project_Id;\n       Project_File_Name : String;\n       Packages_To_Check : String_List_Access := All_Packages;\n-      Flags             : Processing_Flags;\n       Reset_Tree        : Boolean := True;\n-      In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null)\n+      In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null;\n+      Env               : in out Prj.Tree.Environment)\n    is\n       Project_Node            : Project_Node_Id := Empty_Node;\n       The_Project             : Project_Id      := No_Project;\n@@ -61,8 +60,6 @@ package body Prj.Pars is\n       if Project_Node_Tree = null then\n          Project_Node_Tree := new Project_Node_Tree_Data;\n          Prj.Tree.Initialize (Project_Node_Tree);\n-         Prj.Env.Initialize_Default_Project_Path\n-            (Project_Node_Tree.Project_Path, Target_Name => \"\");\n       end if;\n \n       --  Parse the main project file into a tree\n@@ -75,7 +72,7 @@ package body Prj.Pars is\n          Errout_Handling        => Prj.Part.Finalize_If_Error,\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Dir,\n-         Flags                  => Flags,\n+         Env                    => Env,\n          Is_Config_File         => False);\n \n       --  If there were no error, process the tree\n@@ -97,7 +94,7 @@ package body Prj.Pars is\n                Allow_Automatic_Generation => False,\n                Automatically_Generated    => Automatically_Generated,\n                Config_File_Path           => Config_File_Path,\n-               Flags                      => Flags,\n+               Env                        => Env,\n                Normalized_Hostname        => \"\",\n                On_Load_Config             =>\n                  Add_Default_GNAT_Naming_Scheme'Access,"}, {"sha": "fcfde9161179f37743f18c81bd9b8901bb7304ce", "filename": "gcc/ada/prj-pars.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-pars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-pars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.ads?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,9 +37,9 @@ package Prj.Pars is\n       Project           : out Project_Id;\n       Project_File_Name : String;\n       Packages_To_Check : String_List_Access := All_Packages;\n-      Flags             : Processing_Flags;\n       Reset_Tree        : Boolean := True;\n-      In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null);\n+      In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null;\n+      Env               : in out Prj.Tree.Environment);\n    --  Parse and process a project files and all its imported project files, in\n    --  the project tree In_Tree.\n    --  All the project files are parsed (through Prj.Tree) to create a tree in"}, {"sha": "b75716729b74ffd1b4a0a4fb876b44b21b038fa5", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 41, "deletions": 39, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -185,7 +185,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags);\n+      Env               : in out Environment);\n    --  Parse a project file. This is a recursive procedure: it calls itself for\n    --  imported and extended projects. When From_Extended is not None, if the\n    --  project has already been parsed and is an extended project A, return the\n@@ -220,7 +220,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags);\n+      Env               : in out Environment);\n    --  Parse the imported projects that have been stored in table Withs, if\n    --  any. From_Extended is used for the call to Parse_Single_Project below.\n    --  When In_Limited is True, the importing path includes at least one\n@@ -448,7 +448,7 @@ package body Prj.Part is\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n       Is_Config_File         : Boolean;\n-      Flags                  : Processing_Flags;\n+      Env                    : in out Prj.Tree.Environment;\n       Target_Name            : String := \"\")\n    is\n       Dummy : Boolean;\n@@ -460,9 +460,9 @@ package body Prj.Part is\n       Path_Name_Id : Path_Name_Type;\n \n    begin\n-      if not Is_Initialized (In_Tree.Project_Path) then\n+      if not Is_Initialized (Env.Project_Path) then\n          Prj.Env.Initialize_Default_Project_Path\n-           (In_Tree.Project_Path, Target_Name);\n+           (Env.Project_Path, Target_Name);\n       end if;\n \n       if Real_Project_File_Name = null then\n@@ -471,7 +471,7 @@ package body Prj.Part is\n \n       Project := Empty_Node;\n \n-      Find_Project (In_Tree.Project_Path,\n+      Find_Project (Env.Project_Path,\n                     Project_File_Name => Real_Project_File_Name.all,\n                     Directory         => Current_Directory,\n                     Path              => Path_Name_Id);\n@@ -488,7 +488,7 @@ package body Prj.Part is\n          declare\n             P : String_Access;\n          begin\n-            Get_Path (In_Tree.Project_Path, Path => P);\n+            Get_Path (Env.Project_Path, Path => P);\n \n             Prj.Com.Fail\n               (\"project file \"\"\"\n@@ -515,7 +515,7 @@ package body Prj.Part is\n             Depth             => 0,\n             Current_Dir       => Current_Directory,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags);\n+            Env               => Env);\n \n       exception\n          when Types.Unrecoverable_Error =>\n@@ -755,7 +755,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags)\n+      Env               : in out Environment)\n    is\n       Current_With_Clause : With_Id := Context_Clause;\n \n@@ -788,7 +788,7 @@ package body Prj.Part is\n \n          if Limited_Withs = Current_With.Limited_With then\n             Find_Project\n-              (In_Tree.Project_Path,\n+              (Env.Project_Path,\n                Project_File_Name => Get_Name_String (Current_With.Path),\n                Directory         => Project_Directory_Path,\n                Path              => Imported_Path_Name_Id);\n@@ -799,7 +799,7 @@ package body Prj.Part is\n \n                Error_Msg_File_1 := File_Name_Type (Current_With.Path);\n                Error_Msg\n-                 (Flags, \"unknown project file: {\", Current_With.Location);\n+                 (Env.Flags, \"unknown project file: {\", Current_With.Location);\n \n                --  If this is not imported by the main project file, display\n                --  the import path.\n@@ -810,7 +810,7 @@ package body Prj.Part is\n                        File_Name_Type\n                          (Project_Stack.Table (Index).Path_Name);\n                      Error_Msg\n-                       (Flags, \"\\imported by {\", Current_With.Location);\n+                       (Env.Flags, \"\\imported by {\", Current_With.Location);\n                   end loop;\n                end if;\n \n@@ -895,7 +895,7 @@ package body Prj.Part is\n                         Depth             => Depth,\n                         Current_Dir       => Current_Dir,\n                         Is_Config_File    => Is_Config_File,\n-                        Flags             => Flags);\n+                        Env               => Env);\n \n                   else\n                      Extends_All := Is_Extending_All (Withed_Project, In_Tree);\n@@ -1138,7 +1138,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags)\n+      Env               : in out Environment)\n    is\n       Path_Name : constant String := Get_Name_String (Path_Name_Id);\n \n@@ -1196,7 +1196,7 @@ package body Prj.Part is\n       end;\n \n       if Has_Circular_Dependencies\n-           (Flags, Normed_Path_Name, Canonical_Path_Name)\n+           (Env.Flags, Normed_Path_Name, Canonical_Path_Name)\n       then\n          Project := Empty_Node;\n          return;\n@@ -1221,13 +1221,13 @@ package body Prj.Part is\n                if A_Project_Name_And_Node.Extended then\n                   if A_Project_Name_And_Node.Proj_Qualifier /= Dry then\n                      Error_Msg\n-                       (Flags,\n+                       (Env.Flags,\n                         \"cannot extend the same project file several times\",\n                         Token_Ptr);\n                   end if;\n                else\n                   Error_Msg\n-                    (Flags,\n+                    (Env.Flags,\n                      \"cannot extend an already imported project file\",\n                      Token_Ptr);\n                end if;\n@@ -1268,7 +1268,7 @@ package body Prj.Part is\n                   end;\n                else\n                   Error_Msg\n-                    (Flags,\n+                    (Env.Flags,\n                      \"cannot import an already extended project file\",\n                      Token_Ptr);\n                end if;\n@@ -1308,7 +1308,7 @@ package body Prj.Part is\n          --  following Ada identifier's syntax).\n \n          Error_Msg_File_1 := File_Name_Type (Canonical_Path_Name);\n-         Error_Msg (Flags,\n+         Error_Msg (Env.Flags,\n                     \"?{ is not a valid path name for a project file\",\n                     Token_Ptr);\n       end if;\n@@ -1326,7 +1326,7 @@ package body Prj.Part is\n         (In_Tree        => In_Tree,\n          Is_Config_File => Is_Config_File,\n          Context_Clause => First_With,\n-         Flags          => Flags);\n+         Flags          => Env.Flags);\n \n       Project := Default_Project_Node\n                    (Of_Kind => N_Project, In_Tree => In_Tree);\n@@ -1335,7 +1335,7 @@ package body Prj.Part is\n       Set_Path_Name_Of (Project, In_Tree,  Normed_Path_Name);\n \n       Read_Project_Qualifier\n-        (Flags, In_Tree, Is_Config_File, Qualifier_Location, Project);\n+        (Env.Flags, In_Tree, Is_Config_File, Qualifier_Location, Project);\n \n       Set_Location_Of (Project, In_Tree, Token_Ptr);\n \n@@ -1388,7 +1388,7 @@ package body Prj.Part is\n \n          if Is_Config_File then\n             Error_Msg\n-              (Flags,\n+              (Env.Flags,\n                \"extending configuration project not allowed\", Token_Ptr);\n          end if;\n \n@@ -1451,7 +1451,7 @@ package body Prj.Part is\n                end if;\n \n                Error_Msg\n-                 (Flags,\n+                 (Env.Flags,\n                   \"?file name does not match project name, should be `%%\"\n                   & Extension.all & \"`\",\n                   Token_Ptr);\n@@ -1501,7 +1501,7 @@ package body Prj.Part is\n                Depth             => Depth + 1,\n                Current_Dir       => Current_Dir,\n                Is_Config_File    => Is_Config_File,\n-               Flags             => Flags);\n+               Env               => Env);\n             Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n          end;\n \n@@ -1530,12 +1530,13 @@ package body Prj.Part is\n                   Duplicated := True;\n                   Error_Msg_Name_1 := Project_Name;\n                   Error_Msg\n-                    (Flags, \"duplicate project name %%\",\n+                    (Env.Flags, \"duplicate project name %%\",\n                      Location_Of (Project, In_Tree));\n                   Error_Msg_Name_1 :=\n                     Name_Id (Path_Name_Of (Name_And_Node.Node, In_Tree));\n                   Error_Msg\n-                    (Flags, \"\\already in %%\", Location_Of (Project, In_Tree));\n+                    (Env.Flags,\n+                     \"\\already in %%\", Location_Of (Project, In_Tree));\n                end if;\n             end;\n          end if;\n@@ -1559,7 +1560,7 @@ package body Prj.Part is\n \n             begin\n                Find_Project\n-                 (In_Tree.Project_Path,\n+                 (Env.Project_Path,\n                   Project_File_Name => Original_Path_Name,\n                   Directory         => Get_Name_String (Project_Directory),\n                   Path              => Extended_Project_Path_Name_Id);\n@@ -1570,21 +1571,21 @@ package body Prj.Part is\n \n                   Error_Msg_Name_1 := Token_Name;\n \n-                  Error_Msg (Flags, \"unknown project file: %%\", Token_Ptr);\n+                  Error_Msg (Env.Flags, \"unknown project file: %%\", Token_Ptr);\n \n                   --  If not in the main project file, display the import path\n \n                   if Project_Stack.Last > 1 then\n                      Error_Msg_Name_1 :=\n                        Name_Id\n                          (Project_Stack.Table (Project_Stack.Last).Path_Name);\n-                     Error_Msg (Flags, \"\\extended by %%\", Token_Ptr);\n+                     Error_Msg (Env.Flags, \"\\extended by %%\", Token_Ptr);\n \n                      for Index in reverse 1 .. Project_Stack.Last - 1 loop\n                         Error_Msg_Name_1 :=\n                           Name_Id\n                             (Project_Stack.Table (Index).Path_Name);\n-                        Error_Msg (Flags, \"\\imported by %%\", Token_Ptr);\n+                        Error_Msg (Env.Flags, \"\\imported by %%\", Token_Ptr);\n                      end loop;\n                   end if;\n \n@@ -1609,7 +1610,7 @@ package body Prj.Part is\n                         Depth             => Depth + 1,\n                         Current_Dir       => Current_Dir,\n                         Is_Config_File    => Is_Config_File,\n-                        Flags             => Flags);\n+                        Env               => Env);\n                   end;\n \n                   if Present (Extended_Project) then\n@@ -1630,7 +1631,7 @@ package body Prj.Part is\n                        Project_Qualifier_Of (Extended_Project, In_Tree) /= Dry\n                      then\n                         Error_Msg\n-                          (Flags, \"an abstract project can only extend \" &\n+                          (Env.Flags, \"an abstract project can only extend \" &\n                            \"another abstract project\",\n                            Qualifier_Location);\n                      end if;\n@@ -1642,8 +1643,8 @@ package body Prj.Part is\n          end if;\n       end if;\n \n-      Check_Extending_All_Imports (Flags, In_Tree, Project);\n-      Check_Aggregate_Imports (Flags, In_Tree, Project);\n+      Check_Extending_All_Imports (Env.Flags, In_Tree, Project);\n+      Check_Aggregate_Imports (Env.Flags, In_Tree, Project);\n \n       --  Check that a project with a name including a dot either imports\n       --  or extends the project whose name precedes the last dot.\n@@ -1710,7 +1711,7 @@ package body Prj.Part is\n \n                Error_Msg_Name_1 := Name_Of_Project;\n                Error_Msg_Name_2 := Parent_Name;\n-               Error_Msg (Flags,\n+               Error_Msg (Env.Flags,\n                           \"project %% does not import or extend project %%\",\n                           Location_Of (Project, In_Tree));\n             end if;\n@@ -1735,7 +1736,7 @@ package body Prj.Part is\n             Extends           => Extended_Project,\n             Packages_To_Check => Packages_To_Check,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags);\n+            Flags             => Env.Flags);\n          Set_Project_Declaration_Of (Project, In_Tree, Project_Declaration);\n \n          if Present (Extended_Project)\n@@ -1794,7 +1795,7 @@ package body Prj.Part is\n          then\n             --  Invalid name: report an error\n \n-            Error_Msg (Flags, \"expected \"\"\" &\n+            Error_Msg (Env.Flags, \"expected \"\"\" &\n                        Get_Name_String (Name_Of (Project, In_Tree)) & \"\"\"\",\n                        Token_Ptr);\n          end if;\n@@ -1811,7 +1812,8 @@ package body Prj.Part is\n \n          if Token /= Tok_EOF then\n             Error_Msg\n-              (Flags, \"unexpected text following end of project\", Token_Ptr);\n+              (Env.Flags,\n+               \"unexpected text following end of project\", Token_Ptr);\n          end if;\n       end if;\n \n@@ -1859,7 +1861,7 @@ package body Prj.Part is\n             Depth             => Depth + 1,\n             Current_Dir       => Current_Dir,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags);\n+            Env               => Env);\n          Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n       end;\n "}, {"sha": "16b84abb502c14720b4bd5a937e222ffa3548962", "filename": "gcc/ada/prj-part.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-part.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-part.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.ads?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -46,7 +46,7 @@ package Prj.Part is\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n       Is_Config_File         : Boolean;\n-      Flags                  : Processing_Flags;\n+      Env                    : in out Prj.Tree.Environment;\n       Target_Name            : String := \"\");\n    --  Parse project file and all its imported project files and create a tree.\n    --  Return the node for the project (or Empty_Node if parsing failed). If"}, {"sha": "6dd3ca7311df4aabf5e23b4f50fc1f845eedea89", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 42, "deletions": 44, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -104,9 +104,9 @@ package body Prj.Proc is\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n+      Env                    : Prj.Tree.Environment;\n       Pkg                    : Package_Id;\n       First_Term             : Project_Node_Id;\n       Kind                   : Variable_Kind) return Variable_Value;\n@@ -127,9 +127,9 @@ package body Prj.Proc is\n    procedure Process_Declarative_Items\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       Node_Tree              : Project_Node_Tree_Ref;\n+      Env                    : Prj.Tree.Environment;\n       Pkg                    : Package_Id;\n       Item                   : Project_Node_Id);\n    --  Process declarative items starting with From_Project_Node, and put them\n@@ -139,9 +139,9 @@ package body Prj.Proc is\n    procedure Recursive_Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n-      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n+      Env                    : in out Prj.Tree.Environment;\n       Extended_By            : Project_Id);\n    --  Process project with node From_Project_Node in the tree. Do nothing if\n    --  From_Project_Node is Empty_Node. If project has already been processed,\n@@ -502,9 +502,9 @@ package body Prj.Proc is\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n+      Env                    : Prj.Tree.Environment;\n       Pkg                    : Package_Id;\n       First_Term             : Project_Node_Id;\n       Kind                   : Variable_Kind) return Variable_Value\n@@ -607,9 +607,9 @@ package body Prj.Proc is\n                      Value := Expression\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n-                        Flags                  => Flags,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n+                        Env                    => Env,\n                         Pkg                    => Pkg,\n                         First_Term             =>\n                           Tree.First_Term\n@@ -657,9 +657,9 @@ package body Prj.Proc is\n                           Expression\n                             (Project                => Project,\n                              In_Tree                => In_Tree,\n-                             Flags                  => Flags,\n                              From_Project_Node      => From_Project_Node,\n                              From_Project_Node_Tree => From_Project_Node_Tree,\n+                             Env                    => Env,\n                              Pkg                    => Pkg,\n                              First_Term             =>\n                                Tree.First_Term\n@@ -1044,9 +1044,9 @@ package body Prj.Proc is\n                      Def_Var := Expression\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n-                        Flags                  => Flags,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n+                        Env                    => Env,\n                         Pkg                    => Pkg,\n                         First_Term             =>\n                           Tree.First_Term\n@@ -1063,9 +1063,7 @@ package body Prj.Proc is\n                                 From_Project_Node_Tree) = List;\n \n                   if Ext_List then\n-                     Value :=\n-                       Prj.Ext.Value_Of\n-                         (From_Project_Node_Tree.External, Name, No_Name);\n+                     Value := Prj.Ext.Value_Of (Env.External, Name, No_Name);\n \n                      if Value /= No_Name then\n                         declare\n@@ -1169,14 +1167,12 @@ package body Prj.Proc is\n                   else\n                      --  Get the value\n \n-                     Value :=\n-                       Prj.Ext.Value_Of\n-                         (From_Project_Node_Tree.External, Name, Default);\n+                     Value := Prj.Ext.Value_Of (Env.External, Name, Default);\n \n                      if Value = No_Name then\n                         if not Quiet_Output then\n                            Error_Msg\n-                             (Flags, \"?undefined external reference\",\n+                             (Env.Flags, \"?undefined external reference\",\n                               Location_Of\n                                 (The_Current_Term, From_Project_Node_Tree),\n                               Project);\n@@ -1387,7 +1383,7 @@ package body Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Flags                  : Processing_Flags;\n+      Env                    : in out Prj.Tree.Environment;\n       Reset_Tree             : Boolean       := True)\n    is\n    begin\n@@ -1397,7 +1393,7 @@ package body Prj.Proc is\n          Success                => Success,\n          From_Project_Node      => From_Project_Node,\n          From_Project_Node_Tree => From_Project_Node_Tree,\n-         Flags                  => Flags,\n+         Env                    => Env,\n          Reset_Tree             => Reset_Tree);\n \n       if Project_Qualifier_Of (From_Project_Node, From_Project_Node_Tree) /=\n@@ -1409,7 +1405,7 @@ package body Prj.Proc is\n             Success                => Success,\n             From_Project_Node      => From_Project_Node,\n             From_Project_Node_Tree => From_Project_Node_Tree,\n-            Flags                  => Flags);\n+            Env                    => Env);\n       end if;\n    end Process;\n \n@@ -1420,9 +1416,9 @@ package body Prj.Proc is\n    procedure Process_Declarative_Items\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n-      Node_Tree : Project_Node_Tree_Ref;\n+      Node_Tree              : Project_Node_Tree_Ref;\n+      Env                    : Prj.Tree.Environment;\n       Pkg                    : Package_Id;\n       Item                   : Project_Node_Id)\n    is\n@@ -1470,12 +1466,14 @@ package body Prj.Proc is\n          if Value.Value = Empty_String then\n             Error_Msg_Name_1 := Name_Of (Declaration, Node_Tree);\n \n-            case Flags.Allow_Invalid_External is\n+            case Env.Flags.Allow_Invalid_External is\n                when Error =>\n-                  Error_Msg (Flags, \"no value defined for %%\", Loc, Project);\n+                  Error_Msg\n+                    (Env.Flags, \"no value defined for %%\", Loc, Project);\n                when Warning =>\n                   Reset_Value := True;\n-                  Error_Msg (Flags, \"?no value defined for %%\", Loc, Project);\n+                  Error_Msg\n+                    (Env.Flags, \"?no value defined for %%\", Loc, Project);\n                when Silent =>\n                   Reset_Value := True;\n             end case;\n@@ -1501,14 +1499,14 @@ package body Prj.Proc is\n                Error_Msg_Name_1 := Value.Value;\n                Error_Msg_Name_2 := Name_Of (Declaration, Node_Tree);\n \n-               case Flags.Allow_Invalid_External is\n+               case Env.Flags.Allow_Invalid_External is\n                   when Error =>\n                      Error_Msg\n-                       (Flags, \"value %% is illegal for typed string %%\",\n+                       (Env.Flags, \"value %% is illegal for typed string %%\",\n                         Loc, Project);\n                   when Warning =>\n                      Error_Msg\n-                       (Flags, \"?value %% is illegal for typed string %%\",\n+                       (Env.Flags, \"?value %% is illegal for typed string %%\",\n                         Loc, Project);\n                      Reset_Value := True;\n                   when Silent =>\n@@ -1618,9 +1616,9 @@ package body Prj.Proc is\n                Process_Declarative_Items\n                  (Project                => Project,\n                   In_Tree                => In_Tree,\n-                  Flags                  => Flags,\n                   From_Project_Node      => From_Project_Node,\n-                  Node_Tree => Node_Tree,\n+                  Node_Tree              => Node_Tree,\n+                  Env                    => Env,\n                   Pkg                    => New_Pkg,\n                   Item                   =>\n                     First_Declarative_Item_Of (Current_Item, Node_Tree));\n@@ -1778,7 +1776,7 @@ package body Prj.Proc is\n \n          if Orig_Array = No_Array then\n             Error_Msg\n-              (Flags,\n+              (Env.Flags,\n                \"associative array value not found\",\n                Location_Of (Current_Item, Node_Tree),\n                Project);\n@@ -2085,9 +2083,9 @@ package body Prj.Proc is\n            Expression\n              (Project                => Project,\n               In_Tree                => In_Tree,\n-              Flags                  => Flags,\n               From_Project_Node      => From_Project_Node,\n               From_Project_Node_Tree => Node_Tree,\n+              Env                    => Env,\n               Pkg                    => Pkg,\n               First_Term             =>\n                 Tree.First_Term\n@@ -2275,9 +2273,9 @@ package body Prj.Proc is\n             Process_Declarative_Items\n               (Project                => Project,\n                In_Tree                => In_Tree,\n-               Flags                  => Flags,\n                From_Project_Node      => From_Project_Node,\n                Node_Tree              => Node_Tree,\n+               Env                    => Env,\n                Pkg                    => Pkg,\n                Item                   => Decl_Item);\n          end if;\n@@ -2330,7 +2328,7 @@ package body Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Flags                  : Processing_Flags;\n+      Env                    : in out Prj.Tree.Environment;\n       Reset_Tree             : Boolean := True)\n    is\n    begin\n@@ -2351,9 +2349,9 @@ package body Prj.Proc is\n       Recursive_Process\n         (Project                => Project,\n          In_Tree                => In_Tree,\n-         Flags                  => Flags,\n          From_Project_Node      => From_Project_Node,\n          From_Project_Node_Tree => From_Project_Node_Tree,\n+         Env                    => Env,\n          Extended_By            => No_Project);\n \n       Success :=\n@@ -2377,7 +2375,7 @@ package body Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Flags                  : Processing_Flags)\n+      Env                    : Environment)\n    is\n       Obj_Dir    : Path_Name_Type;\n       Extending  : Project_Id;\n@@ -2392,7 +2390,7 @@ package body Prj.Proc is\n       Debug_Increase_Indent (\"Process tree, phase 2\");\n \n       if Project /= No_Project then\n-         Check (In_Tree, Project, From_Project_Node_Tree, Flags);\n+         Check (In_Tree, Project, From_Project_Node_Tree, Env.Flags);\n       end if;\n \n       --  If main project is an extending all project, set object directory of\n@@ -2441,7 +2439,7 @@ package body Prj.Proc is\n                      if Extending2.Virtual then\n                         Error_Msg_Name_1 := Prj.Project.Display_Name;\n                         Error_Msg\n-                          (Flags,\n+                          (Env.Flags,\n                            \"project %% cannot be extended by a virtual\" &\n                            \" project with the same object directory\",\n                            Prj.Project.Location, Project);\n@@ -2450,11 +2448,11 @@ package body Prj.Proc is\n                         Error_Msg_Name_1 := Extending2.Display_Name;\n                         Error_Msg_Name_2 := Prj.Project.Display_Name;\n                         Error_Msg\n-                          (Flags,\n+                          (Env.Flags,\n                            \"project %% cannot extend project %%\",\n                            Extending2.Location, Project);\n                         Error_Msg\n-                          (Flags,\n+                          (Env.Flags,\n                            \"\\they share the same object directory\",\n                            Extending2.Location, Project);\n                      end if;\n@@ -2485,9 +2483,9 @@ package body Prj.Proc is\n    procedure Recursive_Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n-      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n+      Env                    : in out Prj.Tree.Environment;\n       Extended_By            : Project_Id)\n    is\n       procedure Process_Imported_Projects\n@@ -2537,11 +2535,11 @@ package body Prj.Proc is\n                Recursive_Process\n                  (In_Tree                => In_Tree,\n                   Project                => New_Project,\n-                  Flags                  => Flags,\n                   From_Project_Node      =>\n                     Project_Node_Of\n                       (With_Clause, From_Project_Node_Tree),\n                   From_Project_Node_Tree => From_Project_Node_Tree,\n+                  Env                    => Env,\n                   Extended_By            => No_Project);\n \n                --  Imported is the id of the last imported project. If\n@@ -2585,7 +2583,7 @@ package body Prj.Proc is\n            (Tree         => In_Tree,\n             Project      => Project,\n             Node_Tree    => From_Project_Node_Tree,\n-            Flags        => Flags);\n+            Flags        => Env.Flags);\n \n          List := Project.Aggregated_Projects;\n          while Success and then List /= null loop\n@@ -2596,17 +2594,17 @@ package body Prj.Proc is\n                Errout_Handling   => Prj.Part.Never_Finalize,\n                Current_Directory => Get_Name_String (Project.Directory.Name),\n                Is_Config_File    => False,\n-               Flags             => Flags);\n+               Env               => Env);\n \n             Success := not Prj.Tree.No (Loaded_Tree);\n \n             if Success then\n                Recursive_Process\n                  (In_Tree                => In_Tree,\n                   Project                => List.Project,\n-                  Flags                  => Flags,\n                   From_Project_Node      => Loaded_Tree,\n                   From_Project_Node_Tree => From_Project_Node_Tree,\n+                  Env                    => Env,\n                   Extended_By            => No_Project);\n             else\n                Debug_Output (\"Failed to parse\", Name_Id (List.Path));\n@@ -2812,18 +2810,18 @@ package body Prj.Proc is\n             Recursive_Process\n               (In_Tree                => In_Tree,\n                Project                => Project.Extends,\n-               Flags                  => Flags,\n                From_Project_Node      => Extended_Project_Of\n                  (Declaration_Node, From_Project_Node_Tree),\n                From_Project_Node_Tree => From_Project_Node_Tree,\n+               Env                    => Env,\n                Extended_By            => Project);\n \n             Process_Declarative_Items\n               (Project                => Project,\n                In_Tree                => In_Tree,\n-               Flags                  => Flags,\n                From_Project_Node      => From_Project_Node,\n                Node_Tree              => From_Project_Node_Tree,\n+               Env                    => Env,\n                Pkg                    => No_Package,\n                Item                   => First_Declarative_Item_Of\n                  (Declaration_Node, From_Project_Node_Tree));"}, {"sha": "4610fdfc99b10c159d97c291fb87cb71fab27047", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@ package Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Flags                  : Prj.Processing_Flags;\n+      Env                    : in out Prj.Tree.Environment;\n       Reset_Tree             : Boolean := True);\n    --  Process a project tree (ie the direct resulting of parsing a .gpr file)\n    --  based on the current external references.\n@@ -57,7 +57,7 @@ package Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Flags                  : Processing_Flags);\n+      Env                    : Prj.Tree.Environment);\n    --  Perform the second phase of the processing, filling the rest of the\n    --  project with the information extracted from the project tree. This phase\n    --  requires that the configuration file has already been parsed (in fact\n@@ -71,7 +71,7 @@ package Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Flags                  : Processing_Flags;\n+      Env                    : in out Prj.Tree.Environment;\n       Reset_Tree             : Boolean       := True);\n    --  Performs the two phases of the processing\n "}, {"sha": "2d1b55633b323cc3a38973fff945ad0e4c2336ae", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -982,19 +982,28 @@ package body Prj.Tree is\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize\n-     (Tree : Project_Node_Tree_Ref; Env : in out Environment) is\n+   procedure Initialize (Tree : Project_Node_Tree_Ref) is\n    begin\n       Project_Node_Table.Init (Tree.Project_Nodes);\n       Projects_Htable.Reset (Tree.Projects_HT);\n-      Initialize (Env);\n    end Initialize;\n \n+   --------------------\n+   -- Override_Flags --\n+   --------------------\n+\n+   procedure Override_Flags\n+     (Self : in out Environment; Flags : Prj.Processing_Flags) is\n+   begin\n+      Self.Flags := Flags;\n+   end Override_Flags;\n+\n    ----------------\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize (Self : in out Environment) is\n+   procedure Initialize\n+     (Self : in out Environment; Flags : Processing_Flags) is\n    begin\n       --  Do not reset the external references, in case we are reloading a\n       --  project, since we want to preserve the current environment.\n@@ -1003,6 +1012,8 @@ package body Prj.Tree is\n \n       Prj.Ext.Initialize (Self.External);\n       --  Prj.Ext.Reset (Tree.External);\n+\n+      Self.Flags := Flags;\n    end Initialize;\n \n    ----------\n@@ -1019,10 +1030,7 @@ package body Prj.Tree is\n    -- Free --\n    ----------\n \n-   procedure Free\n-     (Proj : in out Project_Node_Tree_Ref;\n-      Env  : in out Environment)\n-   is\n+   procedure Free (Proj : in out Project_Node_Tree_Ref) is\n       procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n         (Project_Node_Tree_Data, Project_Node_Tree_Ref);\n    begin\n@@ -1031,7 +1039,6 @@ package body Prj.Tree is\n          Projects_Htable.Reset (Proj.Projects_HT);\n          Unchecked_Free (Proj);\n       end if;\n-      Free (Env);\n    end Free;\n \n    -------------------------------"}, {"sha": "f391e9d64fe3358fdc051c574ccf8a1c57f86025", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -41,7 +41,7 @@ package Prj.Tree is\n    -----------------\n \n    type Environment is record\n-      External : Prj.Ext.External_References;\n+      External     : Prj.Ext.External_References;\n       --  External references are stored in this hash table (and manipulated\n       --  through subprograms in prj-ext.ads). External references are\n       --  project-tree specific so that one can load the same tree twice but\n@@ -52,16 +52,26 @@ package Prj.Tree is\n       --  simultaneously multiple projects, each with its own search path, in\n       --  particular when using different compilers with different default\n       --  search directories.\n+\n+      Flags        : Prj.Processing_Flags;\n+      --  Configure errors and warnings\n    end record;\n    --  This record contains the context in which projects are parsed and\n    --  processed (finding importing project, resolving external values,...)\n \n-   procedure Initialize (Self : in out Environment);\n+   procedure Initialize (Self : in out Environment; Flags : Processing_Flags);\n    --  Initialize a new environment\n \n    procedure Free (Self : in out Environment);\n    --  Free the memory used by Self\n \n+   procedure Override_Flags\n+     (Self : in out Environment; Flags : Prj.Processing_Flags);\n+   --  Override the subprogram called in case there are parsing errors. This\n+   --  is needed in applications that do their own error handling, since the\n+   --  error handler is likely to be a local subprogram in this case (which\n+   --  can't be stored when the flags are created).\n+\n    -------------------\n    -- Project nodes --\n    -------------------\n@@ -130,8 +140,7 @@ package Prj.Tree is\n    pragma Inline (No);\n    --  Return True if Node = Empty_Node\n \n-   procedure Initialize (Tree : Project_Node_Tree_Ref;\n-                         Env : in out Environment);\n+   procedure Initialize (Tree : Project_Node_Tree_Ref);\n    --  Initialize the Project File tree: empty the Project_Nodes table\n    --  and reset the Projects_Htable.\n \n@@ -1490,8 +1499,7 @@ package Prj.Tree is\n       Projects_HT   : Tree_Private_Part.Projects_Htable.Instance;\n    end record;\n \n-   procedure Free (Proj : in out Project_Node_Tree_Ref;\n-                   Env : in out Environment);\n+   procedure Free (Proj : in out Project_Node_Tree_Ref);\n    --  Free memory used by Prj\n \n private"}, {"sha": "4d2751c53d6f2365169bd2a459c03239b0e812ae", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -602,7 +602,7 @@ package body Switch.M is\n    ------------------------\n \n    procedure Scan_Make_Switches\n-     (Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref;\n+     (Env               : in out Prj.Tree.Environment;\n       Switch_Chars      : String;\n       Success           : out Boolean)\n    is\n@@ -667,7 +667,7 @@ package body Switch.M is\n            and then Switch_Chars (Ptr .. Ptr + 1) = \"aP\"\n          then\n             Add_Directories\n-              (Project_Node_Tree.Project_Path,\n+              (Env.Project_Path,\n                Switch_Chars (Ptr + 2 .. Switch_Chars'Last));\n \n          elsif C = 'v' and then Switch_Chars'Length = 3 then"}, {"sha": "b1daf1491c0b913a7d942d367711de375caeeaa1", "filename": "gcc/ada/switch-m.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fswitch-m.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4437a53072c556b2a81eb96c842c5448ffafa838/gcc%2Fada%2Fswitch-m.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.ads?ref=4437a53072c556b2a81eb96c842c5448ffafa838", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ with Prj.Tree;\n package Switch.M is\n \n    procedure Scan_Make_Switches\n-     (Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref;\n+     (Env               : in out Prj.Tree.Environment;\n       Switch_Chars      : String;\n       Success           : out Boolean);\n    --  Scan a gnatmake switch and act accordingly. For switches that are"}]}