{"sha": "8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY5NDllN2UxMmNmYmE2MGE5NTljZjZkZGMyNDUzMTg2YjlmZmI4Yw==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-01-08T03:02:47Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-01-08T03:02:47Z"}, "message": "pa.c (FUNC_BEGIN_PROLOG_LABEL, [...]): Define.\n\n\t* pa.c (FUNC_BEGIN_PROLOG_LABEL, current_function_number): Define.\n\t(pa_output_function_prologue): Output local label at the beginning of\n\tthe prologue when profiling.\n\t(hppa_profile_hook): Use the local label rather than the function label.\n\t* pa.h (PROFILE_BEFORE_PROLOGUE): Define.\n\nFrom-SVN: r48621", "tree": {"sha": "6698da525f6a84b4a450c44b3f2cb12e54d4c29a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6698da525f6a84b4a450c44b3f2cb12e54d4c29a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/comments", "author": null, "committer": null, "parents": [{"sha": "c62f2db5485b158c20dc731dd390152a2b6511e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62f2db5485b158c20dc731dd390152a2b6511e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62f2db5485b158c20dc731dd390152a2b6511e8"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "87ba57cced325ac09fca4dc609bd422d20049149", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "patch": "@@ -1,3 +1,11 @@\n+2002-01-07  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa.c (FUNC_BEGIN_PROLOG_LABEL, current_function_number): Define.\n+\t(pa_output_function_prologue): Output local label at the beginning of\n+\tthe prologue when profiling.\n+\t(hppa_profile_hook): Use the local label rather than the function label.\n+\t* pa.h (PROFILE_BEFORE_PROLOGUE): Define.\n+\n 2002-01-07  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/rs6000.c (print_operand): Remove extra space."}, {"sha": "fd2099fa6ebbd776f8715438526da6d7dd8a5a60", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for HPPA.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n+   2002 Free Software Foundation, Inc.\n    Contributed by Tim Moore (moore@cs.utah.edu), based on sparc.c\n \n This file is part of GNU CC.\n@@ -55,6 +55,10 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #endif\n \n+#ifndef FUNC_BEGIN_PROLOG_LABEL\n+#define FUNC_BEGIN_PROLOG_LABEL        \"LFBP\"\n+#endif\n+\n static inline rtx force_mode PARAMS ((enum machine_mode, rtx));\n static void pa_combine_instructions PARAMS ((rtx));\n static int pa_can_combine_p PARAMS ((rtx, rtx, rtx, int, rtx, rtx, rtx));\n@@ -96,6 +100,11 @@ const char *pa_arch_string;\n    registers which were saved by the current function's prologue.  */\n static int gr_saved, fr_saved;\n \n+/* The number of the current function for which profile information\n+   is to be collected.  These numbers are used to create unique label\n+   id's for labels emitted at the beginning of profiled functions.  */\n+static unsigned int current_function_number = 0;\n+\n static rtx find_addr_reg PARAMS ((rtx));\n \n /* Keep track of the number of bytes we have output in the CODE subspaces\n@@ -3007,6 +3016,16 @@ pa_output_function_prologue (file, size)\n \n   fputs (\"\\n\\t.ENTRY\\n\", file);\n \n+  /* When profiling, we need a local label at the beginning of the\n+     prologue because GAS can't handle the difference of a global symbol\n+     and a local symbol.  */\n+  if (current_function_profile)\n+    {\n+      ASM_OUTPUT_INTERNAL_LABEL (file, FUNC_BEGIN_PROLOG_LABEL,\n+\t\t\t\t current_function_number);\n+      current_function_number++;\n+    }\n+\n   /* If we're using GAS and not using the portable runtime model, then\n      we don't need to accumulate the total number of code bytes.  */\n   if (TARGET_GAS && ! TARGET_PORTABLE_RUNTIME)\n@@ -3459,14 +3478,12 @@ void\n hppa_profile_hook (label_no)\n      int label_no ATTRIBUTE_UNUSED;\n {\n-  rtx call_insn;\n+  rtx begin_label_rtx, call_insn;\n+  char begin_label_name[16];\n \n-  /* No profiling for inline functions.  We don't want extra calls to\n-     _mcount when the inline function is expanded.  Even if that made\n-     sense, it wouldn't work here as there is no function label for\n-     the inline expansion.  */\n-  if (DECL_INLINE (cfun->decl))\n-    return;\n+  ASM_GENERATE_INTERNAL_LABEL (begin_label_name, FUNC_BEGIN_PROLOG_LABEL,\n+\t\t\t       current_function_number);\n+  begin_label_rtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (begin_label_name));\n \n   if (TARGET_64BIT)\n     emit_move_insn (arg_pointer_rtx,\n@@ -3478,10 +3495,10 @@ hppa_profile_hook (label_no)\n #ifndef NO_PROFILE_COUNTERS\n   {\n     rtx count_label_rtx, addr, r24;\n-    char label_name[16];\n+    char count_label_name[16];\n \n-    ASM_GENERATE_INTERNAL_LABEL (label_name, \"LP\", label_no);\n-    count_label_rtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (label_name));\n+    ASM_GENERATE_INTERNAL_LABEL (count_label_name, \"LP\", label_no);\n+    count_label_rtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (count_label_name));\n \n     if (flag_pic)\n       {\n@@ -3508,7 +3525,7 @@ hppa_profile_hook (label_no)\n     call_insn =\n       emit_call_insn (gen_call_profiler (gen_rtx_SYMBOL_REF (Pmode, \"_mcount\"),\n \t\t\t\t\t GEN_INT (TARGET_64BIT ? 24 : 12),\n-\t\t\t\t\t XEXP (DECL_RTL (cfun->decl), 0)));\n+\t\t\t\t\t begin_label_rtx));\n \n     use_reg (&CALL_INSN_FUNCTION_USAGE (call_insn), r24);\n   }\n@@ -3517,7 +3534,7 @@ hppa_profile_hook (label_no)\n   call_insn =\n     emit_call_insn (gen_call_profiler (gen_rtx_SYMBOL_REF (Pmode, \"_mcount\"),\n \t\t\t\t       GEN_INT (TARGET_64BIT ? 16 : 8),\n-\t\t\t\t       XEXP (DECL_RTL (cfun->decl), 0)));\n+\t\t\t\t       begin_label_rtx));\n #endif\n \n   /* Indicate the _mcount call cannot throw, nor will it execute a"}, {"sha": "f948c09b3dc36381a6ca8253f2b837ff3e790cbd", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f949e7e12cfba60a959cf6ddc2453186b9ffb8c/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=8f949e7e12cfba60a959cf6ddc2453186b9ffb8c", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for the HP Spectrum.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001 Free Software Foundation, Inc.\n+   2001, 2002 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) of Cygnus Support\n    and Tim Moore (moore@defmacro.cs.utah.edu) of the Center for\n    Software Science at the University of Utah.\n@@ -889,6 +889,9 @@ extern enum cmp_type hppa_branch_type;\n #define PROFILE_HOOK(label_no) hppa_profile_hook (label_no)\n void hppa_profile_hook PARAMS ((int label_no));\n \n+/* The profile counter if emitted must come before the prologue.  */\n+#define PROFILE_BEFORE_PROLOGUE 1\n+\n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n    the stack pointer does not matter.  The value is tested only in\n    functions that have frame pointers."}]}