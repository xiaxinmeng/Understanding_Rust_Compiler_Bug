{"sha": "6c6705a90426f383208a482263812cfe2894fa74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2NzA1YTkwNDI2ZjM4MzIwOGE0ODIyNjM4MTJjZmUyODk0ZmE3NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-10-27T17:49:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-10-27T17:49:36Z"}, "message": "Simplify _Node_insert_return to avoid including <tuple>\n\n\t* include/bits/node_handle.h (_Node_insert_return::get): Avoid\n\tuse of std::tie and std::get.\n\nFrom-SVN: r254162", "tree": {"sha": "dcb96f4ec0c1fd68cfc510e5efab18f42fef21f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcb96f4ec0c1fd68cfc510e5efab18f42fef21f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c6705a90426f383208a482263812cfe2894fa74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6705a90426f383208a482263812cfe2894fa74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6705a90426f383208a482263812cfe2894fa74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6705a90426f383208a482263812cfe2894fa74/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5880ce184a6fd92a426d1ca7c48d0a4213a9d8e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5880ce184a6fd92a426d1ca7c48d0a4213a9d8e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5880ce184a6fd92a426d1ca7c48d0a4213a9d8e2"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "796e32c1ba35900f764c0cef817585b543999447", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6705a90426f383208a482263812cfe2894fa74/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6705a90426f383208a482263812cfe2894fa74/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6c6705a90426f383208a482263812cfe2894fa74", "patch": "@@ -1,5 +1,8 @@\n 2017-10-27  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/node_handle.h (_Node_insert_return::get): Avoid\n+\tuse of std::tie and std::get.\n+\n \t* include/Makefile.am: Put headers in alphabetical order.\n \t* include/Makefile.in: Regenerate.\n "}, {"sha": "f93bfd7f686e01e56b845e49c743c5f9f593218a", "filename": "libstdc++-v3/include/bits/node_handle.h", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6705a90426f383208a482263812cfe2894fa74/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fnode_handle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6705a90426f383208a482263812cfe2894fa74/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fnode_handle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fnode_handle.h?ref=6c6705a90426f383208a482263812cfe2894fa74", "patch": "@@ -37,7 +37,6 @@\n # define __cpp_lib_node_extract 201606\n \n #include <optional>\n-#include <tuple>\n #include <bits/alloc_traits.h>\n #include <bits/ptr_traits.h>\n \n@@ -286,22 +285,50 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       template<size_t _Idx>\n \tdecltype(auto) get() &\n-\t{ return std::get<_Idx>(std::tie(inserted, position, node)); }\n+\t{\n+\t  static_assert(_Idx < 3);\n+\t  if constexpr (_Idx == 0)\n+\t    return inserted;\n+\t  else if constexpr (_Idx == 1)\n+\t    return position;\n+\t  else if constexpr (_Idx == 2)\n+\t    return node;\n+\t}\n \n       template<size_t _Idx>\n \tdecltype(auto) get() const &\n-\t{ return std::get<_Idx>(std::tie(inserted, position, node)); }\n+\t{\n+\t  static_assert(_Idx < 3);\n+\t  if constexpr (_Idx == 0)\n+\t    return inserted;\n+\t  else if constexpr (_Idx == 1)\n+\t    return position;\n+\t  else if constexpr (_Idx == 2)\n+\t    return node;\n+\t}\n \n       template<size_t _Idx>\n \tdecltype(auto) get() &&\n \t{\n-\t  return std::move(std::get<_Idx>(std::tie(inserted, position, node)));\n+\t  static_assert(_Idx < 3);\n+\t  if constexpr (_Idx == 0)\n+\t    return std::move(inserted);\n+\t  else if constexpr (_Idx == 1)\n+\t    return std::move(position);\n+\t  else if constexpr (_Idx == 2)\n+\t    return std::move(node);\n \t}\n \n       template<size_t _Idx>\n \tdecltype(auto) get() const &&\n \t{\n-\t  return std::move(std::get<_Idx>(std::tie(inserted, position, node)));\n+\t  static_assert(_Idx < 3);\n+\t  if constexpr (_Idx == 0)\n+\t    return std::move(inserted);\n+\t  else if constexpr (_Idx == 1)\n+\t    return std::move(position);\n+\t  else if constexpr (_Idx == 2)\n+\t    return std::move(node);\n \t}\n     };\n "}]}