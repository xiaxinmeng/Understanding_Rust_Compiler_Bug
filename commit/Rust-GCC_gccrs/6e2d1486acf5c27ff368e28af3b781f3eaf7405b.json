{"sha": "6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyZDE0ODZhY2Y1YzI3ZmYzNjhlMjhhZjNiNzgxZjNlYWY3NDA1Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:44:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:44:06Z"}, "message": "(try_combine): Restrict combining on CALL_INSNs.\n\n(distribute_{notes,links}): Look at CALL_INSN_FUNCTION_USAGE.\n\nFrom-SVN: r7236", "tree": {"sha": "a23475c6a0d4cb8bcbd13671673c0e84cb912c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a23475c6a0d4cb8bcbd13671673c0e84cb912c65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2d1486acf5c27ff368e28af3b781f3eaf7405b/comments", "author": null, "committer": null, "parents": [{"sha": "8f3e7a26bde8797649fff46419ac6c6b71c95f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3e7a26bde8797649fff46419ac6c6b71c95f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f3e7a26bde8797649fff46419ac6c6b71c95f78"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "c9a0b3bcd24954656486579e734d08b15ebb5352", "filename": "gcc/combine.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2d1486acf5c27ff368e28af3b781f3eaf7405b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2d1486acf5c27ff368e28af3b781f3eaf7405b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "patch": "@@ -1218,6 +1218,17 @@ try_combine (i3, i2, i1)\n       || find_reg_note (i3, REG_LIBCALL, NULL_RTX))\n     return 0;\n \n+  /* If I1 or I2 is an argument set insn, and I3 is the actual\n+     CALL_INSN using it as argument, never combine the two.\n+     This to prevent the elimination of insns that setup a\n+     parameter register for a CALL_INSN.  */\n+  if (GET_CODE (i3) == CALL_INSN\n+      && (((temp = single_set (i2))\n+            && find_reg_fusage (i3, USE, SET_DEST (temp)))\n+\t  || (i1 && (temp = single_set (i1))\n+              && find_reg_fusage (i3, USE, SET_DEST (temp)))))\n+    return 0;\n+\n   combine_attempts++;\n \n   undobuf.num_undo = previous_num_undos = 0;\n@@ -10423,7 +10434,11 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t     In both cases, we must search to see if we can find a previous\n \t     use of A and put the death note there.  */\n \n-\t  if (reg_referenced_p (XEXP (note, 0), PATTERN (i3)))\n+\t  if (from_insn\n+\t      && GET_CODE (from_insn) == CALL_INSN\n+              && find_reg_fusage (from_insn, USE, XEXP (note, 0)))\n+\t    place = from_insn;\n+\t  else if (reg_referenced_p (XEXP (note, 0), PATTERN (i3)))\n \t    place = i3;\n \t  else if (i2 != 0 && next_nonnote_insn (i2) == i3\n \t\t   && reg_referenced_p (XEXP (note, 0), PATTERN (i2)))\n@@ -10697,6 +10712,12 @@ distribute_links (links)\n \t      place = insn;\n \t    break;\n \t  }\n+\telse if (GET_CODE (insn) == CALL_INSN\n+\t      && find_reg_fusage (insn, USE, reg))\n+\t  {\n+\t    place = insn;\n+\t    break;\n+\t  }\n \n       /* If we found a place to put the link, place it there unless there\n \t is already a link to the same insn as LINK at that point.  */"}]}