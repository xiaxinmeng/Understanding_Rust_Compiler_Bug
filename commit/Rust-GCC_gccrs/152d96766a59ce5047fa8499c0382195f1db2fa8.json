{"sha": "152d96766a59ce5047fa8499c0382195f1db2fa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyZDk2NzY2YTU5Y2U1MDQ3ZmE4NDk5YzAzODIxOTVmMWRiMmZhOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-04-28T22:35:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-04-28T22:35:09Z"}, "message": "type_traits (is_convertible): Adjust according to the resolution of TR1 issue 3.20.\n\n2005-04-29  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/type_traits (is_convertible): Adjust according\n\tto the resolution of TR1 issue 3.20.\n\t* testsuite/tr1/4_metaprogramming/relationships_between_types/\n\tis_convertible/is_convertible.cc: Add tests.\n\nFrom-SVN: r98944", "tree": {"sha": "3198b8780e3748cf55bd8e2e50c630f2342e98ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3198b8780e3748cf55bd8e2e50c630f2342e98ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/152d96766a59ce5047fa8499c0382195f1db2fa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152d96766a59ce5047fa8499c0382195f1db2fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152d96766a59ce5047fa8499c0382195f1db2fa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152d96766a59ce5047fa8499c0382195f1db2fa8/comments", "author": null, "committer": null, "parents": [{"sha": "973a384d4fb0083ec8a222595f131028f3b68f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973a384d4fb0083ec8a222595f131028f3b68f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973a384d4fb0083ec8a222595f131028f3b68f79"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "9797785e2605815046d369fa77a520c7c0ad9aa8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/152d96766a59ce5047fa8499c0382195f1db2fa8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/152d96766a59ce5047fa8499c0382195f1db2fa8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=152d96766a59ce5047fa8499c0382195f1db2fa8", "patch": "@@ -1,3 +1,10 @@\n+2005-04-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/type_traits (is_convertible): Adjust according\n+\tto the resolution of TR1 issue 3.20.\n+\t* testsuite/tr1/4_metaprogramming/relationships_between_types/\n+\tis_convertible/is_convertible.cc: Add tests.\n+\n 2005-04-28  Paolo Carlini  <pcarlini@suse.de>\n \t    Gabriel Dos Reis  <gdr@integrable-solutions.net>\n "}, {"sha": "176a4c334004939efb4c6d2fc405054d99be441d", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/152d96766a59ce5047fa8499c0382195f1db2fa8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/152d96766a59ce5047fa8499c0382195f1db2fa8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=152d96766a59ce5047fa8499c0382195f1db2fa8", "patch": "@@ -501,7 +501,8 @@ namespace tr1\n     };\n \n   template<typename _From, typename _To,\n-\t   bool = (is_function<_To>::value || is_array<_To>::value\n+\t   bool = (is_void<_From>::value || is_void<_To>::value\n+\t\t   || is_function<_To>::value || is_array<_To>::value\n \t\t   // This special case is here only to avoid warnings.\t\t   \n \t\t   || (is_floating_point<typename\n \t\t       remove_reference<_From>::type>::value\n@@ -515,7 +516,9 @@ namespace tr1\n \n   template<typename _From, typename _To>\n     struct __is_convertible_helper<_From, _To, true>\n-    { static const bool __value = __is_int_or_cref<_To>::__value; };\n+    { static const bool __value = (is_void<_To>::value\n+\t\t\t\t   || (__is_int_or_cref<_To>::__value\n+\t\t\t\t       && !is_void<_From>::value)); };\n \n   template<typename _From, typename _To>\n     struct is_convertible"}, {"sha": "19b360aca8da4ad394ee4673aa6c14dff240b785", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/relationships_between_types/is_convertible/is_convertible.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/152d96766a59ce5047fa8499c0382195f1db2fa8/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frelationships_between_types%2Fis_convertible%2Fis_convertible.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/152d96766a59ce5047fa8499c0382195f1db2fa8/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frelationships_between_types%2Fis_convertible%2Fis_convertible.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Frelationships_between_types%2Fis_convertible%2Fis_convertible.cc?ref=152d96766a59ce5047fa8499c0382195f1db2fa8", "patch": "@@ -54,6 +54,10 @@ void test01()\n   VERIFY( (test_relationship<is_convertible, DerivedType*, ClassType*>(true)) );\n   VERIFY( (test_relationship<is_convertible, DerivedType&, ClassType&>(true)) );\n \n+  VERIFY( (test_relationship<is_convertible, void, void>(true)) );\n+  VERIFY( (test_relationship<is_convertible, int, void>(true)) );\n+  VERIFY( (test_relationship<is_convertible, int[4], void>(true)) );  \n+\n   // Negative tests.\n   VERIFY( (test_relationship<is_convertible, const int*, int*>(false)) );\n   VERIFY( (test_relationship<is_convertible, int*, float*>(false)) );\n@@ -69,7 +73,11 @@ void test01()\n   VERIFY( (test_relationship<is_convertible, int, ClassType>(false)) );\n   VERIFY( (test_relationship<is_convertible, ClassType, DerivedType>(false)) );\n   VERIFY( (test_relationship<is_convertible, ClassType*, DerivedType*>(false)) );\n-  VERIFY( (test_relationship<is_convertible, ClassType&, DerivedType&>(false)) );  \n+  VERIFY( (test_relationship<is_convertible, ClassType&, DerivedType&>(false)) );\n+\n+  VERIFY( (test_relationship<is_convertible, void, int>(false)) );\n+  VERIFY( (test_relationship<is_convertible, void, float>(false)) );  \n+  VERIFY( (test_relationship<is_convertible, void, int(*)(int)>(false)) );  \n }\n \n int main()"}]}