{"sha": "731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMxYzRjZTBlOTMwNjVmYjcwZGI1ZmFhMmJkNmM5YzZiYWQ1NjczOA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-05-23T21:41:45Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-05-23T21:59:02Z"}, "message": "libcpp, libdecnumber: configure and substitute AR\n\nAIX supports \"FAT\" libraries containing 32 bit and 64 bit objects\n(similar to Darwin), but commands for manipulating libraries do not\ndefault to accept both 32 bit and 64 bit object files.  While updating\nthe AIX configuration to support building and running GCC as a 64 bit\napplication, I have encountered some build libraries that hard code\nAR=ar instead of testing the environment.\n\nThis patch adds AR_CHECK_TOOL(AR, ar) to configure.ac for the two\nlibraries and updates Makefile.in to accept the substitution.\n\n2020-05-23  David Edelsohn  <dje.gcc@gmail.com>\n\nlibcpp/ChangeLog:\n\t* Makefile.in (AR): Substitute @AR@.\n\t* configure.ac (CHECK_PROG AR): New.\n\t* configure: Regenerate.\n\nlibdecnumber/ChangeLog:\n\t* Makefile.in (AR): Substitute @AR@.\n\t* configure.ac (CHECK_PROG AR): New.\n\t* configure: Regenerate.", "tree": {"sha": "30ee8c3aec27830439dd3cb670f4c8b7ef145f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30ee8c3aec27830439dd3cb670f4c8b7ef145f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a57aa11191617754c8d43b3eb6a2576e970a0668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57aa11191617754c8d43b3eb6a2576e970a0668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a57aa11191617754c8d43b3eb6a2576e970a0668"}], "stats": {"total": 204, "additions": 202, "deletions": 2}, "files": [{"sha": "4c2eee4411d42de3fd8f82ab9b389fbda71b93c1", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -1,3 +1,9 @@\n+2020-05-23  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* Makefile.in (AR): Substitute @AR@.\n+\t* configure.ac (CHECK_PROG AR): New.\n+\t* configure: Regenerate.\n+\n 2020-05-20  Nathan Sidwell  <nathan@acm.org>\n \n \t* internal.h (typedef _cpp_file): Delete, unnecessary in C++."}, {"sha": "5fbba9b9c769ee2ecfa18330e41e3693ee6af577", "filename": "libcpp/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FMakefile.in?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -25,7 +25,7 @@ srcdir = @srcdir@\n top_builddir = .\n VPATH = @srcdir@\n INSTALL = @INSTALL@\n-AR = ar\n+AR = @AR@\n ARFLAGS = cru\n ACLOCAL = @ACLOCAL@\n AUTOCONF = @AUTOCONF@"}, {"sha": "6a967cff6acb253ab89da6a961b8715f778e17c0", "filename": "libcpp/configure", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -658,6 +658,7 @@ ACLOCAL\n EGREP\n GREP\n CPP\n+AR\n RANLIB\n ac_ct_CXX\n CXXFLAGS\n@@ -4011,6 +4012,98 @@ else\n   RANLIB=\"$ac_cv_prog_RANLIB\"\n fi\n \n+if test -n \"$ac_tool_prefix\"; then\n+  # Extract the first word of \"${ac_tool_prefix}ar\", so it can be a program name with args.\n+set dummy ${ac_tool_prefix}ar; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_AR+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$AR\"; then\n+  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_AR=\"${ac_tool_prefix}ar\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+AR=$ac_cv_prog_AR\n+if test -n \"$AR\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n+$as_echo \"$AR\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+if test -z \"$ac_cv_prog_AR\"; then\n+  ac_ct_AR=$AR\n+  # Extract the first word of \"ar\", so it can be a program name with args.\n+set dummy ar; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_ac_ct_AR+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$ac_ct_AR\"; then\n+  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ac_ct_AR=\"ar\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+ac_ct_AR=$ac_cv_prog_ac_ct_AR\n+if test -n \"$ac_ct_AR\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n+$as_echo \"$ac_ct_AR\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+  if test \"x$ac_ct_AR\" = x; then\n+    AR=\"\"\n+  else\n+    case $cross_compiling:$ac_tool_warned in\n+yes:)\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n+$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n+ac_tool_warned=yes ;;\n+esac\n+    AR=$ac_ct_AR\n+  fi\n+else\n+  AR=\"$ac_cv_prog_AR\"\n+fi\n+\n \n \n ac_ext=c"}, {"sha": "1efa96f7ca3fb8f8600d58f126c2717469d1d406", "filename": "libcpp/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -12,6 +12,7 @@ AC_PROG_INSTALL\n AC_PROG_CC\n AC_PROG_CXX\n AC_PROG_RANLIB\n+AC_CHECK_TOOL(AR, ar)\n \n AC_USE_SYSTEM_EXTENSIONS\n AC_SYS_LARGEFILE"}, {"sha": "d9d276784f7399eb16529e947357e81208284d04", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -1,3 +1,9 @@\n+2020-05-23  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* Makefile.in (AR): Substitute @AR@.\n+\t* configure.ac (CHECK_PROG AR): New.\n+\t* configure: Regenerate.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "9da028d7f2f462936a73bea84beae53a71cb8775", "filename": "libdecnumber/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FMakefile.in?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -25,7 +25,7 @@ srcdir = @srcdir@\n top_builddir = .\n VPATH = @srcdir@\n INSTALL = @INSTALL@\n-AR = ar\n+AR = @AR@\n ARFLAGS = cru\n ACLOCAL = @ACLOCAL@\n AUTOCONF = @AUTOCONF@"}, {"sha": "577b250930c0189669ce763d096d6fb0a16ae921", "filename": "libdecnumber/configure", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -651,6 +651,7 @@ WARN_CFLAGS\n AUTOHEADER\n AUTOCONF\n ACLOCAL\n+AR\n RANLIB\n OBJEXT\n EXEEXT\n@@ -3247,6 +3248,98 @@ else\n   RANLIB=\"$ac_cv_prog_RANLIB\"\n fi\n \n+if test -n \"$ac_tool_prefix\"; then\n+  # Extract the first word of \"${ac_tool_prefix}ar\", so it can be a program name with args.\n+set dummy ${ac_tool_prefix}ar; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_AR+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$AR\"; then\n+  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_AR=\"${ac_tool_prefix}ar\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+AR=$ac_cv_prog_AR\n+if test -n \"$AR\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n+$as_echo \"$AR\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+if test -z \"$ac_cv_prog_AR\"; then\n+  ac_ct_AR=$AR\n+  # Extract the first word of \"ar\", so it can be a program name with args.\n+set dummy ar; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_ac_ct_AR+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$ac_ct_AR\"; then\n+  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ac_ct_AR=\"ar\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+ac_ct_AR=$ac_cv_prog_ac_ct_AR\n+if test -n \"$ac_ct_AR\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n+$as_echo \"$ac_ct_AR\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+  if test \"x$ac_ct_AR\" = x; then\n+    AR=\"\"\n+  else\n+    case $cross_compiling:$ac_tool_warned in\n+yes:)\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n+$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n+ac_tool_warned=yes ;;\n+esac\n+    AR=$ac_ct_AR\n+  fi\n+else\n+  AR=\"$ac_cv_prog_AR\"\n+fi\n+\n \n MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing\n for ac_prog in aclocal"}, {"sha": "ae475a02c23d179fa631e26a6d8899c3e877f48b", "filename": "libdecnumber/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731c4ce0e93065fb70db5faa2bd6c9c6bad56738/libdecnumber%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure.ac?ref=731c4ce0e93065fb70db5faa2bd6c9c6bad56738", "patch": "@@ -28,6 +28,7 @@ AC_CONFIG_AUX_DIR(..)\n AC_PROG_MAKE_SET\n AC_PROG_CC\n AC_PROG_RANLIB\n+AC_CHECK_TOOL(AR, ar)\n \n MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing\n AC_CHECK_PROGS([ACLOCAL], [aclocal], [$MISSING aclocal])"}]}