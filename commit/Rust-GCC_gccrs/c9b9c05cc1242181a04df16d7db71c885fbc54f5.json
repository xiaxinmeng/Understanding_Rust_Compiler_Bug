{"sha": "c9b9c05cc1242181a04df16d7db71c885fbc54f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzliOWMwNWNjMTI0MjE4MWEwNGRmMTZkN2RiNzFjODg1ZmJjNTRmNQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-09-30T17:33:18Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-09-30T17:33:18Z"}, "message": "m68hc11.md (\"cmpqi_1\"): Fix constraints.\n\n\t* config/m68hc11/m68hc11.md (\"cmpqi_1\"): Fix constraints.\n\t(\"tsthi_1\"): Avoid allocation in register y.\n\t(\"*movqi_68hc12\"): Reorganize and fix constraints.\n\t(\"zero_extendqisi2\"): Prefer d over x and y for operand 1.\n\t(\"addqi3\"): Likewise.\n\t(\"addhi3\"): Fix constraints.\n\t(\"*logicalhi3_zexthi\"): Disparage soft registers.\n\nFrom-SVN: r45908", "tree": {"sha": "c8ba270ccbc6dcc46c6753a011c0332d7979dcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8ba270ccbc6dcc46c6753a011c0332d7979dcc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9b9c05cc1242181a04df16d7db71c885fbc54f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b9c05cc1242181a04df16d7db71c885fbc54f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9b9c05cc1242181a04df16d7db71c885fbc54f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b9c05cc1242181a04df16d7db71c885fbc54f5/comments", "author": null, "committer": null, "parents": [{"sha": "713b2058151af2403186126a0e60cf80ed3425c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713b2058151af2403186126a0e60cf80ed3425c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713b2058151af2403186126a0e60cf80ed3425c4"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "c6f6f39d336dc6f712b5beb9f92fe72a3026ea12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b9c05cc1242181a04df16d7db71c885fbc54f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b9c05cc1242181a04df16d7db71c885fbc54f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9b9c05cc1242181a04df16d7db71c885fbc54f5", "patch": "@@ -1,3 +1,13 @@\n+2001-09-30  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"cmpqi_1\"): Fix constraints.\n+\t(\"tsthi_1\"): Avoid allocation in register y.\n+\t(\"*movqi_68hc12\"): Reorganize and fix constraints.\n+\t(\"zero_extendqisi2\"): Prefer d over x and y for operand 1.\n+\t(\"addqi3\"): Likewise.\n+\t(\"addhi3\"): Fix constraints.\n+\t(\"*logicalhi3_zexthi\"): Disparage soft registers.\n+\n 2001-09-30  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.c (m68hc11_gen_movhi): Fix move of sp"}, {"sha": "a5e178726e8d8db26b58887be2ef606e278b2371", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b9c05cc1242181a04df16d7db71c885fbc54f5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b9c05cc1242181a04df16d7db71c885fbc54f5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=c9b9c05cc1242181a04df16d7db71c885fbc54f5", "patch": "@@ -170,7 +170,7 @@\n \n (define_insn \"tsthi_1\"\n   [(set (cc0)\n-\t(match_operand:HI 0 \"tst_operand\" \"dx,y\"))]\n+\t(match_operand:HI 0 \"tst_operand\" \"dx,*y\"))]\n   \"\"\n   \"*\n {\n@@ -484,8 +484,8 @@\n \n (define_insn \"cmpqi_1\"\n   [(set (cc0)\n-\t(compare (match_operand:QI 0 \"tst_operand\" \"d,m,d,!u,*B,d\")\n-\t\t (match_operand:QI 1 \"cmp_operand\" \"im,d,!u,d,?dim*B,*u\")))]\n+\t(compare (match_operand:QI 0 \"tst_operand\" \"d,m,d,!u,*B,d*B\")\n+\t\t (match_operand:QI 1 \"cmp_operand\" \"im,d,!u,d,dim*A,*u\")))]\n   \"\"\n   \"*\n {\n@@ -1002,8 +1002,10 @@\n }\")\n \n (define_insn \"*movqi_68hc12\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d*AuU*q,d*A*qu,d*A*q,m,m\")\n-\t(match_operand:QI 1 \"general_operand\" \"rui*q,U,m,d*q,!A\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \n+\t\t\t\t\"=d*AU*q,d*A*q,*u,d*A*q,m,m\")\n+\t(match_operand:QI 1 \"general_operand\" \n+\t\t\t\t\"*ri*q,U,*ri*qU,m,d*q,!A\"))]\n   \"TARGET_M6812\"\n   \"*\n {\n@@ -1270,9 +1272,9 @@\n }\")\n \n (define_insn \"zero_extendqisi2\"\n-  [(set (match_operand:SI 0 \"non_push_operand\" \"=D,m,u\")\n+  [(set (match_operand:SI 0 \"non_push_operand\" \"=D,D,m,m,u\")\n       (zero_extend:SI \n-\t  (match_operand:QI 1 \"nonimmediate_operand\" \"dxymu,dxy,dxy\")))]\n+\t  (match_operand:QI 1 \"nonimmediate_operand\" \"dmu,xy,d,xy,dxy\")))]\n   \"\"\n   \"#\")\n \n@@ -2307,7 +2309,7 @@\n   \"\")\n \n (define_insn \"*addhi3\"\n-  [(set (match_operand:HI 0 \"hard_reg_operand\" \"=A,d,!A,d*A,!d\")\n+  [(set (match_operand:HI 0 \"hard_reg_operand\" \"=A,d,!A,d*A,!d*A\")\n \t(plus:HI (match_operand:HI 1 \"general_operand\" \"%0,0,0,0,0\")\n \t\t (match_operand:HI 2 \"general_operand\" \"N,i,I,mi*A*d,!u*d*w\")))]\n   \"TARGET_M6811\"\n@@ -2430,9 +2432,9 @@\n   \"\")\n \n (define_insn \"addqi3\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=!*rm,dq*A\")\n-        (plus:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:QI 2 \"general_operand\" \"N,ium*A*d\")))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=!d*rm,dq,!*A\")\n+        (plus:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                 (match_operand:QI 2 \"general_operand\" \"N,ium*A*d,ium*A*d\")))]\n   \"\"\n   \"*\n {\n@@ -3451,11 +3453,11 @@\n   \"#\")\n \n (define_insn \"*logicalhi3_zexthi\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=d,d\")\n \t(match_operator:HI 3 \"m68hc11_logical_operator\"\n \t\t[(zero_extend:HI\n-\t\t     (match_operand:QI 1 \"general_operand\" \"imud\"))\n-\t\t (match_operand:HI 2 \"general_operand\" \"dimu\")]))]\n+\t\t     (match_operand:QI 1 \"general_operand\" \"imd*A,?u\"))\n+\t\t (match_operand:HI 2 \"general_operand\" \"dim,?dimu\")]))]\n   \"\"\n   \"#\")\n "}]}