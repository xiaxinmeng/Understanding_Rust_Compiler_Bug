{"sha": "0cc71b488a98162b4344c6809f26157cf6e346c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNjNzFiNDg4YTk4MTYyYjQzNDRjNjgwOWYyNjE1N2NmNmUzNDZjMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:56:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:56:44Z"}, "message": "[multiple changes]\n\n2012-10-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* warnsw.adb (Set_GNAT_Mode_Warnings): Unset\n\tWarn_On_Standard_Redefinition.\n\n2012-10-29  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Derive_Progenitor_Subprograms): Complete documentation.\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch11.adb (Warn_If_Standard_Redefinition): Add calls.\n\t* par-ch3.adb (P_Defining_Identifier): Call\n\tWarn_If_Standard_Redefinition if not inside record definition.\n\t* par-ch6.adb (Warn_If_Standard_Redefinition): Add calls.\n\t* par-util.adb (Warn_If_Standard_Redefinition): New procedure.\n\t* par.adb (Inside_Record_Definition): New flag.\n\t(Warn_If_Standard_Redefinition): New procedure.\n\t* sinfo-cn.adb (Change_Identifier_To_Defining_Identifier): Remove\n\thandling of warning for redefining standard name (moved to Par*).\n\nFrom-SVN: r192927", "tree": {"sha": "910788a359ee7d5cadc748af3e41a98d7eb5dc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/910788a359ee7d5cadc748af3e41a98d7eb5dc6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cc71b488a98162b4344c6809f26157cf6e346c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc71b488a98162b4344c6809f26157cf6e346c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cc71b488a98162b4344c6809f26157cf6e346c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc71b488a98162b4344c6809f26157cf6e346c0/comments", "author": null, "committer": null, "parents": [{"sha": "f0b741b6e73d812ddbe0c4f91154646cea567df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b741b6e73d812ddbe0c4f91154646cea567df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b741b6e73d812ddbe0c4f91154646cea567df3"}], "stats": {"total": 117, "additions": 83, "deletions": 34}, "files": [{"sha": "76b143dc7cbfea4f4dba35e844ae93b942b2109b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -1,3 +1,24 @@\n+2012-10-29  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* warnsw.adb (Set_GNAT_Mode_Warnings): Unset\n+\tWarn_On_Standard_Redefinition.\n+\n+2012-10-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Derive_Progenitor_Subprograms): Complete documentation.\n+\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch11.adb (Warn_If_Standard_Redefinition): Add calls.\n+\t* par-ch3.adb (P_Defining_Identifier): Call\n+\tWarn_If_Standard_Redefinition if not inside record definition.\n+\t* par-ch6.adb (Warn_If_Standard_Redefinition): Add calls.\n+\t* par-util.adb (Warn_If_Standard_Redefinition): New procedure.\n+\t* par.adb (Inside_Record_Definition): New flag.\n+\t(Warn_If_Standard_Redefinition): New procedure.\n+\t* sinfo-cn.adb (Change_Identifier_To_Defining_Identifier): Remove\n+\thandling of warning for redefining standard name (moved to Par*).\n+\n 2012-10-29  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch3.adb (Derive_Progenitor_Subprograms): Disable small"}, {"sha": "c255325699f1e7c506bf360d23c7efd04f4d3e0d", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,12 +137,14 @@ package body Ch11 is\n \n             Scan; -- past :\n             Change_Identifier_To_Defining_Identifier (Choice_Param_Node);\n+            Warn_If_Standard_Redefinition (Choice_Param_Node);\n             Set_Choice_Parameter (Handler_Node, Choice_Param_Node);\n \n          elsif Token = Tok_Others then\n             Error_Msg_AP -- CODEFIX\n               (\"missing \"\":\"\"\");\n             Change_Identifier_To_Defining_Identifier (Choice_Param_Node);\n+            Warn_If_Standard_Redefinition (Choice_Param_Node);\n             Set_Choice_Parameter (Handler_Node, Choice_Param_Node);\n \n          else"}, {"sha": "728a704f5f670cca1b1be88666d61de07b120abc", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -243,6 +243,13 @@ package body Ch3 is\n \n       if Ident_Node /= Error then\n          Change_Identifier_To_Defining_Identifier (Ident_Node);\n+\n+         --  Warn if standard redefinition, except that we never warn on a\n+         --  record field definition (since this is always a harmless case).\n+\n+         if not Inside_Record_Definition then\n+            Warn_If_Standard_Redefinition (Ident_Node);\n+         end if;\n       end if;\n \n       return Ident_Node;\n@@ -3191,6 +3198,7 @@ package body Ch3 is\n       Rec_Node : Node_Id;\n \n    begin\n+      Inside_Record_Definition := True;\n       Rec_Node := New_Node (N_Record_Definition, Token_Ptr);\n \n       --  Null record case\n@@ -3235,6 +3243,7 @@ package body Ch3 is\n          end loop;\n       end if;\n \n+      Inside_Record_Definition := False;\n       return Rec_Node;\n    end P_Record_Definition;\n "}, {"sha": "c0fc7734e72862444f4dbf8c6e060572fad71505", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -1139,6 +1139,7 @@ package body Ch6 is\n \n       if Token /= Tok_Dot then\n          Change_Identifier_To_Defining_Identifier (Ident_Node);\n+         Warn_If_Standard_Redefinition (Ident_Node);\n          return Ident_Node;\n \n       --  Child library unit name case\n@@ -1176,6 +1177,7 @@ package body Ch6 is\n          Change_Node (Prefix_Node, N_Defining_Program_Unit_Name);\n          Set_Name (Prefix_Node, Name_Node);\n          Change_Identifier_To_Defining_Identifier (Ident_Node);\n+         Warn_If_Standard_Redefinition (Ident_Node);\n          Set_Defining_Identifier (Prefix_Node, Ident_Node);\n \n          --  All set with unit name parsed\n@@ -1667,6 +1669,7 @@ package body Ch6 is\n    begin\n       Return_Obj := Token_Node;\n       Change_Identifier_To_Defining_Identifier (Return_Obj);\n+      Warn_If_Standard_Redefinition (Return_Obj);\n       Decl_Node := New_Node (N_Object_Declaration, Token_Ptr);\n       Set_Defining_Identifier (Decl_Node, Return_Obj);\n "}, {"sha": "0c23f93d90bf2f80bd1b7d830bc7553da60bc2c3", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -27,6 +27,7 @@ with Csets;    use Csets;\n with Namet.Sp; use Namet.Sp;\n with Stylesw;  use Stylesw;\n with Uintp;    use Uintp;\n+with Warnsw;   use Warnsw;\n \n with GNAT.Spelling_Checker; use GNAT.Spelling_Checker;\n \n@@ -762,4 +763,21 @@ package body Util is\n       return (Token_Ptr = First_Non_Blank_Location or else Token = Tok_EOF);\n    end Token_Is_At_Start_Of_Line;\n \n+   -----------------------------------\n+   -- Warn_If_Standard_Redefinition --\n+   -----------------------------------\n+\n+   procedure Warn_If_Standard_Redefinition (N : Node_Id) is\n+   begin\n+      if Warn_On_Standard_Redefinition then\n+         declare\n+            C : constant Entity_Id := Current_Entity (N);\n+         begin\n+            if Present (C) and then Sloc (C) = Standard_Location then\n+               Error_Msg_N (\"redefinition of entity& in Standard?\", N);\n+            end if;\n+         end;\n+      end if;\n+   end Warn_If_Standard_Redefinition;\n+\n end Util;"}, {"sha": "571713f3d513ea2bf8523287a60d88ae15dd1a0b", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -59,15 +59,19 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n \n    Num_Library_Units : Natural := 0;\n    --  Count number of units parsed (relevant only in syntax check only mode,\n-   --  since in semantics check mode only a single unit is permitted anyway)\n+   --  since in semantics check mode only a single unit is permitted anyway).\n \n    Save_Config_Switches : Config_Switches_Type;\n    --  Variable used to save values of config switches while we parse the\n    --  new unit, to be restored on exit for proper recursive behavior.\n \n    Loop_Block_Count : Nat := 0;\n    --  Counter used for constructing loop/block names (see the routine\n-   --  Par.Ch5.Get_Loop_Block_Name)\n+   --  Par.Ch5.Get_Loop_Block_Name).\n+\n+   Inside_Record_Definition : Boolean := False;\n+   --  Flag set True within a record definition. Used to control warning\n+   --  for redefinition of standard entities (not issued for field names).\n \n    --------------------\n    -- Error Recovery --\n@@ -1264,6 +1268,11 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       function Token_Is_At_End_Of_Line return Boolean;\n       --  Determines if the current token is the last token on the line\n \n+      procedure Warn_If_Standard_Redefinition (N : Node_Id);\n+      --  Issues a warning if Warn_On_Standard_Redefinition is set True, and\n+      --  the Node N (which is a Defining_Identifier node with the Chars field\n+      --  set) is a renaming of an entity in package Standard.\n+\n    end Util;\n \n    --------------"}, {"sha": "a3b7f3ee2b94f702a7dd06cc91e52e361eb5dce0", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -12804,25 +12804,30 @@ package body Sem_Ch3 is\n       --  done here because interfaces must be visible in the partial and\n       --  private view (RM 7.3(7.3/2)).\n \n-      --  Small optimization: This work is only required if the parent\n-      --  is abstract or a generic formal type. If the tagged type is not\n-      --  abstract, it cannot have abstract primitives (the only entities\n-      --  in the list of primitives of non-abstract tagged types that can\n-      --  reference abstract primitives through its Alias attribute are the\n-      --  internal entities that have attribute Interface_Alias, and these\n-      --  entities are generated later by Add_Internal_Interface_Entities).\n-      --  Need explanation for the generic case ???\n+      --  Small optimization: This work is only required if the parent may\n+      --  have entities whose Alias attribute reference an interface primitive.\n+      --  Such a situation may occur if the parent is an abstract type and the\n+      --  primitive has not been yet overridden or if the parent is a generic\n+      --  formal type covering interfaces.\n+\n+      --  If the tagged type is not abstract, it cannot have abstract\n+      --  primitives (the only entities in the list of primitives of\n+      --  non-abstract tagged types that can reference abstract primitives\n+      --  through its Alias attribute are the internal entities that have\n+      --  attribute Interface_Alias, and these entities are generated later\n+      --  by Add_Internal_Interface_Entities).\n \n       if In_Private_Part (Current_Scope)\n         and then (Is_Abstract_Type (Parent_Type)\n-                    or else Is_Generic_Type (Parent_Type))\n+                    or else\n+                  Is_Generic_Type  (Parent_Type))\n       then\n          Elmt := First_Elmt (Primitive_Operations (Tagged_Type));\n          while Present (Elmt) loop\n             Subp := Node (Elmt);\n \n             --  At this stage it is not possible to have entities in the list\n-            --  of primitives that have attribute Interface_Alias\n+            --  of primitives that have attribute Interface_Alias.\n \n             pragma Assert (No (Interface_Alias (Subp)));\n \n@@ -12846,7 +12851,7 @@ package body Sem_Ch3 is\n       end if;\n \n       --  Step 2: Add primitives of progenitors that are not implemented by\n-      --  parents of Tagged_Type\n+      --  parents of Tagged_Type.\n \n       if Present (Interfaces (Base_Type (Tagged_Type))) then\n          Iface_Elmt := First_Elmt (Interfaces (Base_Type (Tagged_Type)));\n@@ -12873,7 +12878,7 @@ package body Sem_Ch3 is\n                           Iface_Prim  => Iface_Subp);\n \n                   --  If not found we derive a new primitive leaving its alias\n-                  --  attribute referencing the interface primitive\n+                  --  attribute referencing the interface primitive.\n \n                   if No (E) then\n                      Derive_Subprogram\n@@ -12896,7 +12901,7 @@ package body Sem_Ch3 is\n                        Is_Abstract_Subprogram (E));\n \n                   --  Propagate to the full view interface entities associated\n-                  --  with the partial view\n+                  --  with the partial view.\n \n                   elsif In_Private_Part (Current_Scope)\n                     and then Present (Alias (E))"}, {"sha": "f581eaaaa4369b303784359c617a85669b799755", "filename": "gcc/ada/sinfo-cn.adb", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fsinfo-cn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fsinfo-cn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-cn.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -31,10 +31,7 @@\n --  have been deliberately layed out in a manner that permits such alteration.\n \n with Atree;    use Atree;\n-with Errout;   use Errout;\n-with Sem_Util; use Sem_Util;\n with Snames;   use Snames;\n-with Warnsw;   use Warnsw;\n \n package body Sinfo.CN is\n \n@@ -74,20 +71,6 @@ package body Sinfo.CN is\n \n    procedure Change_Identifier_To_Defining_Identifier (N : in out Node_Id) is\n    begin\n-      --  Check for redefinition of standard entity (requiring a warning)\n-\n-      if Warn_On_Standard_Redefinition then\n-         declare\n-            C : constant Entity_Id := Current_Entity (N);\n-         begin\n-            if Present (C) and then Sloc (C) = Standard_Location then\n-               Error_Msg_N (\"redefinition of entity& in Standard?\", N);\n-            end if;\n-         end;\n-      end if;\n-\n-      --  Go ahead with the change\n-\n       Set_Nkind (N, N_Defining_Identifier);\n       N := Extend_Node (N);\n    end Change_Identifier_To_Defining_Identifier;"}, {"sha": "7920ac902690394d9690b721deff0aeb1f0c8b72", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc71b488a98162b4344c6809f26157cf6e346c0/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=0cc71b488a98162b4344c6809f26157cf6e346c0", "patch": "@@ -236,7 +236,6 @@ package body Warnsw is\n       Warn_On_Record_Holes                := False;\n       Warn_On_Redundant_Constructs        := True;\n       Warn_On_Reverse_Bit_Order           := False;\n-      Warn_On_Standard_Redefinition       := True;\n       Warn_On_Suspicious_Contract         := True;\n       Warn_On_Unchecked_Conversion        := True;\n       Warn_On_Unordered_Enumeration_Type  := False;"}]}