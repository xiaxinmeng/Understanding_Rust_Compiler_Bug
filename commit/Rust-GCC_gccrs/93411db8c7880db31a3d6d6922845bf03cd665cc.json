{"sha": "93411db8c7880db31a3d6d6922845bf03cd665cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM0MTFkYjhjNzg4MGRiMzFhM2Q2ZDY5MjI4NDViZjAzY2Q2NjVjYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-08-03T15:56:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-08-03T15:56:17Z"}, "message": "re PR libstdc++/67078 (FAIL: 24_iterators/container_access.cc (test for excess errors) on aarch64-none-elf)\n\n\tPR libstdc++/67078\n\t* include/bits/range_access.h (size, empty, data): Fix _N bad name.\n\nFrom-SVN: r226515", "tree": {"sha": "79c57ab4020cc17fd082ed0210d67c496862dec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79c57ab4020cc17fd082ed0210d67c496862dec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93411db8c7880db31a3d6d6922845bf03cd665cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93411db8c7880db31a3d6d6922845bf03cd665cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93411db8c7880db31a3d6d6922845bf03cd665cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93411db8c7880db31a3d6d6922845bf03cd665cc/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0027ed3d7a77b75fd85176d9c72cde295056bc18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0027ed3d7a77b75fd85176d9c72cde295056bc18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0027ed3d7a77b75fd85176d9c72cde295056bc18"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "f7b1c6bb40e03e5f92a60940f1dc95bedc78788f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93411db8c7880db31a3d6d6922845bf03cd665cc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93411db8c7880db31a3d6d6922845bf03cd665cc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=93411db8c7880db31a3d6d6922845bf03cd665cc", "patch": "@@ -1,3 +1,8 @@\n+2015-08-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/67078\n+\t* include/bits/range_access.h (size, empty, data): Fix _N bad name.\n+\n 2015-07-30  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/experimental/filesystem/operations/current_path.cc: Use"}, {"sha": "586d162bc8cb41bdc88084221f291aaff981a67c", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93411db8c7880db31a3d6d6922845bf03cd665cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93411db8c7880db31a3d6d6922845bf03cd665cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=93411db8c7880db31a3d6d6922845bf03cd665cc", "patch": "@@ -237,10 +237,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @brief  Return the size of an array.\n    *  @param  __array  Array.\n    */\n-  template <typename _Tp, size_t _N>\n+  template <typename _Tp, size_t _Nm>\n     constexpr size_t\n-    size(const _Tp (&/*__array*/)[_N]) noexcept\n-    { return _N; }\n+    size(const _Tp (&/*__array*/)[_Nm]) noexcept\n+    { return _Nm; }\n \n   /**\n    *  @brief  Return whether a container is empty.\n@@ -255,9 +255,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @brief  Return whether an array is empty (always false).\n    *  @param  __array  Container.\n    */\n-  template <typename _Tp, size_t _N>\n+  template <typename _Tp, size_t _Nm>\n     constexpr bool\n-    empty(const _Tp (&/*__array*/)[_N]) noexcept\n+    empty(const _Tp (&/*__array*/)[_Nm]) noexcept\n     { return false; }\n \n   /**\n@@ -291,9 +291,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @brief  Return the data pointer of an array.\n    *  @param  __array  Array.\n    */\n-  template <typename _Tp, size_t _N>\n+  template <typename _Tp, size_t _Nm>\n     constexpr _Tp*\n-    data(_Tp (&__array)[_N]) noexcept\n+    data(_Tp (&__array)[_Nm]) noexcept\n     { return __array; }\n \n   /**"}]}