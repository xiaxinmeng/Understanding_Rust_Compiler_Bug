{"sha": "b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhYWE2MTc5MTc5N2Q5NTlhZmUyNDhmMzRjYmZjNWU3YzVjYzViMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2008-02-10T15:48:10Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-02-10T15:48:10Z"}, "message": "re PR libstdc++/16251 (bogus default constructor for std::basic_iostream)\n\n2008-02-10  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/16251\n\t* include/std/istream (basic_istream<>::basic_istream()): Call\n\tthis->init().\n\t(basic_iostream<>::basic_iostream(basic_streambuf<>*)): Don't\n\tdo it here, per 27.6.1.5.1/1.\n\t* include/std/ostream (basic_ostream<>::basic_ostream()): Call\n\tthis->init().\n\t* testsuite/27_io/basic_iostream/cons/16251.C: New.\n\n\t* testsuite/27_io/basic_iostream/cons/2020.cc: Minor tweaks.\n\nFrom-SVN: r132214", "tree": {"sha": "077ed2a47177325057f56a1bd722271cc32c6e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077ed2a47177325057f56a1bd722271cc32c6e5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/comments", "author": null, "committer": null, "parents": [{"sha": "3d39d4151c97209560943f8342070ca7be64b72d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d39d4151c97209560943f8342070ca7be64b72d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d39d4151c97209560943f8342070ca7be64b72d"}], "stats": {"total": 91, "additions": 73, "deletions": 18}, "files": [{"sha": "b3442e60e8f9daa4896d15184390f796b5b351a7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "patch": "@@ -1,3 +1,16 @@\n+2008-02-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/16251\n+\t* include/std/istream (basic_istream<>::basic_istream()): Call\n+\tthis->init().\n+\t(basic_iostream<>::basic_iostream(basic_streambuf<>*)): Don't\n+\tdo it here, per 27.6.1.5.1/1.\n+\t* include/std/ostream (basic_ostream<>::basic_ostream()): Call\n+\tthis->init().\n+\t* testsuite/27_io/basic_iostream/cons/16251.C: New.\n+\n+\t* testsuite/27_io/basic_iostream/cons/2020.cc: Minor tweaks.\n+\n 2008-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n     \n \t* include/backward/auto_ptr.h: Fix comment typos."}, {"sha": "caf670b0e35d5f9b912106656c33134c30d48709", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "patch": "@@ -1,7 +1,7 @@\n // Input streams -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007\n+// 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -91,8 +91,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  derived classes' initialization lists, which pass a pointer to\n        *  their own stream buffer.\n       */\n-      explicit \n-      basic_istream(__streambuf_type* __sb): _M_gcount(streamsize(0))\n+      explicit\n+      basic_istream(__streambuf_type* __sb)\n+      : _M_gcount(streamsize(0))\n       { this->init(__sb); }\n \n       /**\n@@ -581,8 +582,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       //@}\n \n     protected:\n-      explicit \n-      basic_istream(): _M_gcount(streamsize(0)) { }\n+      basic_istream()\n+      : _M_gcount(streamsize(0))\n+      { this->init(0); }\n \n       template<typename _ValueT>\n         __istream_type&\n@@ -665,7 +667,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  If the stream state is still good, then the sentry state becomes\n        *  true (\"okay\").\n       */\n-      explicit \n+      explicit\n       sentry(basic_istream<_CharT, _Traits>& __is, bool __noskipws = false);\n \n       /**\n@@ -788,10 +790,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  Both of the parent classes are initialized with the same\n        *  streambuf pointer passed to this constructor.\n       */\n-      explicit \n+      explicit\n       basic_iostream(basic_streambuf<_CharT, _Traits>* __sb)\n-      : __istream_type(), __ostream_type()\n-      { this->init(__sb); }\n+      : __istream_type(__sb), __ostream_type(__sb) { }\n \n       /**\n        *  @brief  Destructor does nothing.\n@@ -800,9 +801,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       ~basic_iostream() { }\n \n     protected:\n-      explicit \n-      basic_iostream() : __istream_type(), __ostream_type()\n-      { }\n+      basic_iostream()\n+      : __istream_type(), __ostream_type() { }\n     };\n \n   // [27.6.1.4] standard basic_istream manipulators"}, {"sha": "ffbb0e121f41e1dfd4c735ef3c4f9f10f6a7f811", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "patch": "@@ -1,7 +1,7 @@\n // Output streams -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007\n+// 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -366,8 +366,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       seekp(off_type, ios_base::seekdir);\n       \n     protected:\n-      explicit \n-      basic_ostream() { }\n+      basic_ostream()\n+      { this->init(0); }\n \n       template<typename _ValueT>\n         __ostream_type&"}, {"sha": "0167d1db790a307d910fe55796c0bc1be28726c7", "filename": "libstdc++-v3/testsuite/27_io/basic_iostream/cons/16251.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_iostream%2Fcons%2F16251.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_iostream%2Fcons%2F16251.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_iostream%2Fcons%2F16251.C?ref=b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "patch": "@@ -0,0 +1,42 @@\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 27.6.1.5 - Template class basic_iostream \n+\n+#include <iostream>\n+\n+class mystream\n+: public std::iostream\n+{\n+public:\n+  mystream () { };\n+};\n+\n+// libstdc++/16251\n+void test01()\n+{\n+  mystream x;\n+  x.rdbuf(std::cout.rdbuf());\n+  x << std::endl;\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "014ab7164a80673fa3c9450959a05aecc649bed4", "filename": "libstdc++-v3/testsuite/27_io/basic_iostream/cons/2020.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_iostream%2Fcons%2F2020.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aaa61791797d959afe248f34cbfc5e7c5cc5b2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_iostream%2Fcons%2F2020.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_iostream%2Fcons%2F2020.cc?ref=b3aaa61791797d959afe248f34cbfc5e7c5cc5b2", "patch": "@@ -1,6 +1,7 @@\n // 1999-01-17 bkoz test functionality of basic_filebuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -19,8 +20,7 @@\n // Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n // USA.\n \n-// 27.8.1.1 - Template class basic_filebuf \n-// NB: This file is for testing basic_filebuf with NO OTHER INCLUDES.\n+// 27.6.1.5 - Template class basic_iostream \n \n #include <iostream>\n #include <testsuite_hooks.h>"}]}