{"sha": "82e3a7199574db824fc468831c6db6378fb7f87e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlM2E3MTk5NTc0ZGI4MjRmYzQ2ODgzMWM2ZGI2Mzc4ZmI3Zjg3ZQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-07-26T09:00:31Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-07-26T09:00:31Z"}, "message": "re PR target/44551 ([missed optimization] AVX vextractf128 after vinsertf128)\n\n2014-07-26  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR target/44551\ngcc/\n\t* simplify-rtx.c (simplify_binary_operation_1) <VEC_SELECT>:\n\tOptimize inverse of a VEC_CONCAT.\ngcc/testsuite/\n\t* gcc.target/i386/pr44551-1.c: New file.\n\nFrom-SVN: r213076", "tree": {"sha": "e8b9693bc900f0d8aad8815a34289112f63059e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b9693bc900f0d8aad8815a34289112f63059e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82e3a7199574db824fc468831c6db6378fb7f87e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e3a7199574db824fc468831c6db6378fb7f87e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e3a7199574db824fc468831c6db6378fb7f87e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e3a7199574db824fc468831c6db6378fb7f87e/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e39a6482962a81d206b36ac9c3881c380c8d5241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e39a6482962a81d206b36ac9c3881c380c8d5241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e39a6482962a81d206b36ac9c3881c380c8d5241"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "9013ce80c615d18fdb78018d4a92a888da7089e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82e3a7199574db824fc468831c6db6378fb7f87e", "patch": "@@ -1,3 +1,9 @@\n+2014-07-26  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR target/44551\n+\t* simplify-rtx.c (simplify_binary_operation_1) <VEC_SELECT>:\n+\tOptimize inverse of a VEC_CONCAT.\n+\n 2014-07-25  Xinliang David Li  <davidxl@google.com>\n \n \t* params.def: New parameter."}, {"sha": "9f6dbe119c67416f7fadfe533b5af646873b8c5e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=82e3a7199574db824fc468831c6db6378fb7f87e", "patch": "@@ -3368,6 +3368,50 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \n \t      return simplify_gen_binary (VEC_CONCAT, mode, subop0, subop1);\n \t    }\n+\n+\t  /* If we select one half of a vec_concat, return that.  */\n+\t  if (GET_CODE (trueop0) == VEC_CONCAT\n+\t      && CONST_INT_P (XVECEXP (trueop1, 0, 0)))\n+\t    {\n+\t      rtx subop0 = XEXP (trueop0, 0);\n+\t      rtx subop1 = XEXP (trueop0, 1);\n+\t      enum machine_mode mode0 = GET_MODE (subop0);\n+\t      enum machine_mode mode1 = GET_MODE (subop1);\n+\t      int li = GET_MODE_SIZE (GET_MODE_INNER (mode0));\n+\t      int l0 = GET_MODE_SIZE (mode0) / li;\n+\t      int l1 = GET_MODE_SIZE (mode1) / li;\n+\t      int i0 = INTVAL (XVECEXP (trueop1, 0, 0));\n+\t      if (i0 == 0 && !side_effects_p (op1) && mode == mode0)\n+\t\t{\n+\t\t  bool success = true;\n+\t\t  for (int i = 1; i < l0; ++i)\n+\t\t    {\n+\t\t      rtx j = XVECEXP (trueop1, 0, i);\n+\t\t      if (!CONST_INT_P (j) || INTVAL (j) != i)\n+\t\t\t{\n+\t\t\t  success = false;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t    }\n+\t\t  if (success)\n+\t\t    return subop0;\n+\t\t}\n+\t      if (i0 == l0 && !side_effects_p (op0) && mode == mode1)\n+\t\t{\n+\t\t  bool success = true;\n+\t\t  for (int i = 1; i < l1; ++i)\n+\t\t    {\n+\t\t      rtx j = XVECEXP (trueop1, 0, i);\n+\t\t      if (!CONST_INT_P (j) || INTVAL (j) != i0 + i)\n+\t\t\t{\n+\t\t\t  success = false;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t    }\n+\t\t  if (success)\n+\t\t    return subop1;\n+\t\t}\n+\t    }\n \t}\n \n       if (XVECLEN (trueop1, 0) == 1"}, {"sha": "f63bd99a7bf054f2b93581b7af9fa0eef2fde8e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82e3a7199574db824fc468831c6db6378fb7f87e", "patch": "@@ -1,3 +1,8 @@\n+2014-07-26  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR target/44551\n+\t* gcc.target/i386/pr44551-1.c: New file.\n+\n 2014-07-25  Xinliang David Li  <davidxl@google.com>\n \n \t* g++.dg/tree-prof/tree-prof.exp: Define macros."}, {"sha": "b65c7bb586c07f06312aba0a2ed397dc539534b8", "filename": "gcc/testsuite/gcc.target/i386/pr44551-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44551-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e3a7199574db824fc468831c6db6378fb7f87e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44551-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44551-1.c?ref=82e3a7199574db824fc468831c6db6378fb7f87e", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include <immintrin.h>\n+\n+__m128i\n+foo (__m256i x, __m128i y)\n+{\n+  __m256i r = _mm256_insertf128_si256(x, y, 1);\n+  __m128i a = _mm256_extractf128_si256(r, 1);\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler-not \"vinsertf\" } } */\n+/* { dg-final { scan-assembler-not \"vextractf\" } } */"}]}