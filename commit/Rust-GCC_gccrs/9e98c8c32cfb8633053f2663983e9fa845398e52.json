{"sha": "9e98c8c32cfb8633053f2663983e9fa845398e52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5OGM4YzMyY2ZiODYzMzA1M2YyNjYzOTgzZTlmYTg0NTM5OGU1Mg==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2014-10-15T15:23:31Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2014-10-15T15:23:31Z"}, "message": "[AARCH64] Add ACLE 2.0 predefined macros\n\n2014-10-15  Renlin Li <renlin.li@arm.com>\n\n\t* config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define\n\t__ARM_BIG_ENDIAN, __ARM_SIZEOF_MINIMAL_ENUM. Add __ARM_64BIT_STATE,\n\t__ARM_ARCH_ISA_A64, __ARM_FEATURE_CLZ, __ARM_FEATURE_IDIV,\n\t__ARM_FEATURE_UNALIGNED, __ARM_PCS_AAPCS64, __ARM_SIZEOF_WCHAR_T.\n\nFrom-SVN: r216267", "tree": {"sha": "1b7c6f2c8d007e1755c3d9114c9d7423e8b94225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b7c6f2c8d007e1755c3d9114c9d7423e8b94225"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e98c8c32cfb8633053f2663983e9fa845398e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e98c8c32cfb8633053f2663983e9fa845398e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e98c8c32cfb8633053f2663983e9fa845398e52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e98c8c32cfb8633053f2663983e9fa845398e52/comments", "author": null, "committer": null, "parents": [{"sha": "42e52a51c4d34c11b2400137f196076ba6eda9b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e52a51c4d34c11b2400137f196076ba6eda9b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42e52a51c4d34c11b2400137f196076ba6eda9b4"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "16817d4307d70db05068f90937b885512e3c52e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e98c8c32cfb8633053f2663983e9fa845398e52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e98c8c32cfb8633053f2663983e9fa845398e52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e98c8c32cfb8633053f2663983e9fa845398e52", "patch": "@@ -1,3 +1,10 @@\n+2014-10-15  Renlin Li <renlin.li@arm.com>\n+\n+\t* config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define\n+\t__ARM_BIG_ENDIAN, __ARM_SIZEOF_MINIMAL_ENUM. Add __ARM_64BIT_STATE,\n+\t__ARM_ARCH_ISA_A64, __ARM_FEATURE_CLZ, __ARM_FEATURE_IDIV,\n+\t__ARM_FEATURE_UNALIGNED, __ARM_PCS_AAPCS64, __ARM_SIZEOF_WCHAR_T.\n+\n 2014-10-15  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-fold.c (gimple_fold_call): Properly keep virtual"}, {"sha": "11aa10b03f5500dd45d87dc8543583fc1adeec6b", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e98c8c32cfb8633053f2663983e9fa845398e52/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e98c8c32cfb8633053f2663983e9fa845398e52/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=9e98c8c32cfb8633053f2663983e9fa845398e52", "patch": "@@ -26,9 +26,23 @@\n #define TARGET_CPU_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n-      builtin_define (\"__aarch64__\");\t\t\t\\\n+      builtin_define (\"__aarch64__\");                   \\\n+      builtin_define (\"__ARM_64BIT_STATE\");             \\\n+      builtin_define (\"__ARM_ARCH_ISA_A64\");            \\\n+      builtin_define (\"__ARM_FEATURE_CLZ\");             \\\n+      builtin_define (\"__ARM_FEATURE_IDIV\");            \\\n+      builtin_define (\"__ARM_FEATURE_UNALIGNED\");       \\\n+      builtin_define (\"__ARM_PCS_AAPCS64\");             \\\n+      builtin_define_with_int_value                     \\\n+        (\"__ARM_SIZEOF_WCHAR_T\", WCHAR_TYPE_SIZE / 8);  \\\n+      builtin_define_with_int_value                     \\\n+        (\"__ARM_SIZEOF_MINIMAL_ENUM\",                   \\\n+         flag_short_enums? 1 : 4);                      \\\n       if (TARGET_BIG_END)\t\t\t\t\\\n-\tbuiltin_define (\"__AARCH64EB__\");\t\t\\\n+        {                                               \\\n+          builtin_define (\"__AARCH64EB__\");             \\\n+          builtin_define (\"__ARM_BIG_ENDIAN\");          \\\n+        }                                               \\\n       else\t\t\t\t\t\t\\\n \tbuiltin_define (\"__AARCH64EL__\");\t\t\\\n \t\t\t\t\t\t\t\\"}]}