{"sha": "62112e35c6368eeb4fe5192d9240958e4c477287", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxMTJlMzVjNjM2OGVlYjRmZTUxOTJkOTI0MDk1OGU0YzQ3NzI4Nw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-29T17:53:48Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-29T17:53:48Z"}, "message": "tree-if-conv.c (replace_phi_with_cond_modify_expr): Use EDGE_PRED instead of PHI_ARG_EDGE.\n\n\t* tree-if-conv.c (replace_phi_with_cond_modify_expr): Use\n\tEDGE_PRED instead of PHI_ARG_EDGE.\n\t* tree-ssa-live.c: Likewise.\n\t* tree-ssa-loop-manip.c: Likewise.\n\t* tree-ssa.c: Likewise.\n\nFrom-SVN: r91473", "tree": {"sha": "da2fe01010d192699501790da6990b71dcc5f540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da2fe01010d192699501790da6990b71dcc5f540"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62112e35c6368eeb4fe5192d9240958e4c477287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62112e35c6368eeb4fe5192d9240958e4c477287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62112e35c6368eeb4fe5192d9240958e4c477287", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62112e35c6368eeb4fe5192d9240958e4c477287/comments", "author": null, "committer": null, "parents": [{"sha": "67bbb1e12241eba7dca619c2984d6abb08214137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bbb1e12241eba7dca619c2984d6abb08214137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bbb1e12241eba7dca619c2984d6abb08214137"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "5b5606469a9ff1fc006d1cb5f68c262288d67a98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62112e35c6368eeb4fe5192d9240958e4c477287", "patch": "@@ -1,3 +1,11 @@\n+2004-11-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-if-conv.c (replace_phi_with_cond_modify_expr): Use\n+\tEDGE_PRED instead of PHI_ARG_EDGE.\n+\t* tree-ssa-live.c: Likewise.\n+\t* tree-ssa-loop-manip.c: Likewise.\n+\t* tree-ssa.c: Likewise.\n+\n 2004-11-29  Alan Modra  <amodra@bigpond.net.au>\n \n \t* varasm.c (default_elf_select_section_1): Only pass DECL_P decl"}, {"sha": "36e9c758b53322711153033fcc6cd64859ba7093", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=62112e35c6368eeb4fe5192d9240958e4c477287", "patch": "@@ -757,7 +757,7 @@ replace_phi_with_cond_modify_expr (tree phi, tree cond, basic_block true_bb,\n   arg_1 = NULL_TREE;\n \n   /* Use condition that is not TRUTH_NOT_EXPR in conditional modify expr.  */\n-  if (PHI_ARG_EDGE(phi, 1)->src == true_bb)\n+  if (EDGE_PRED (bb, 1)->src == true_bb)\n     {\n       arg_0 = PHI_ARG_DEF (phi, 1);\n       arg_1 = PHI_ARG_DEF (phi, 0);"}, {"sha": "15c8b4820828cf152f7118dccbf106a54fafb28b", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=62112e35c6368eeb4fe5192d9240958e4c477287", "patch": "@@ -589,7 +589,7 @@ calculate_live_on_entry (var_map map)\n \t      if (!phi_ssa_name_p (var))\n \t        continue;\n \t      stmt = SSA_NAME_DEF_STMT (var);\n-\t      e = PHI_ARG_EDGE (phi, i);\n+\t      e = EDGE_PRED (bb, i);\n \n \t      /* Any uses in PHIs which either don't have def's or are not\n \t         defined in the block from which the def comes, will be live"}, {"sha": "fe9c43c58605a819f5d1f55bc86d27f91cad9261", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=62112e35c6368eeb4fe5192d9240958e4c477287", "patch": "@@ -274,7 +274,7 @@ find_uses_to_rename (bitmap *use_blocks)\n     {\n       for (phi = phi_nodes (bb); phi; phi = PHI_CHAIN (phi))\n \tfor (i = 0; i < (unsigned) PHI_NUM_ARGS (phi); i++)\n-\t  find_uses_to_rename_use (PHI_ARG_EDGE (phi, i)->src,\n+\t  find_uses_to_rename_use (EDGE_PRED (bb, i)->src,\n \t\t\t\t   PHI_ARG_DEF (phi, i), use_blocks);\n \n       for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))"}, {"sha": "24b5697f2203b11292d38427cf9fe8c3610146e0", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62112e35c6368eeb4fe5192d9240958e4c477287/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=62112e35c6368eeb4fe5192d9240958e4c477287", "patch": "@@ -289,7 +289,7 @@ verify_phi_args (tree phi, basic_block bb, basic_block *definition_block)\n     {\n       tree op = PHI_ARG_DEF (phi, i);\n \n-      e = PHI_ARG_EDGE (phi, i);\n+      e = EDGE_PRED (bb, i);\n \n       if (op == NULL_TREE)\n \t{"}]}