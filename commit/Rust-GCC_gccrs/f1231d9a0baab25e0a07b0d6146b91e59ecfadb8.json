{"sha": "f1231d9a0baab25e0a07b0d6146b91e59ecfadb8", "node_id": "C_kwDOANBUbNoAKGYxMjMxZDlhMGJhYWIyNWUwYTA3YjBkNjE0NmI5MWU1OWVjZmFkYjg", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2021-12-14T14:44:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:33Z"}, "message": "[Ada] Fix check for looking for user defined literals\n\nRecall that Has_Possible_Literal_Aspects only comes in if a given node\ndoes not have any visible interpretation. If one operand is a literal we\nassume that there may be a user-defined literal defined for some type to\nbe determined during the downward pass of resolution, but that depends\non the existence of some user-defined function or operator that can take\nthat literal as an actual. If analysis did not find such, the call is\nillegal. I think that the following must be added to Operator_Check to\nrecover the proper error.\n\nNote that this breaks current partial implementation of user-defined\nliterals.\n\ngcc/ada/\n\n\t* sem_ch4.adb (Operator_Check): Fix condition.", "tree": {"sha": "98c46cf63b1868891eadb818c92566203d3e7ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98c46cf63b1868891eadb818c92566203d3e7ac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1231d9a0baab25e0a07b0d6146b91e59ecfadb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1231d9a0baab25e0a07b0d6146b91e59ecfadb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1231d9a0baab25e0a07b0d6146b91e59ecfadb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1231d9a0baab25e0a07b0d6146b91e59ecfadb8/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28fffc452eedb284d047b83adc7f8772b15bb0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fffc452eedb284d047b83adc7f8772b15bb0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28fffc452eedb284d047b83adc7f8772b15bb0f8"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "915a7b48eca6dc745bb2c06e8f5954954a9f7a0b", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1231d9a0baab25e0a07b0d6146b91e59ecfadb8/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1231d9a0baab25e0a07b0d6146b91e59ecfadb8/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f1231d9a0baab25e0a07b0d6146b91e59ecfadb8", "patch": "@@ -7260,7 +7260,9 @@ package body Sem_Ch4 is\n             then\n                return;\n \n-            elsif Has_Possible_Literal_Aspects (N) then\n+            elsif Present (Entity (N))\n+              and then Has_Possible_Literal_Aspects (N)\n+            then\n                return;\n \n             --  If we have a logical operator, one of whose operands is"}]}