{"sha": "eab1ff73c813a9eb0f7e6e8c784d8d41b37af687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiMWZmNzNjODEzYTllYjBmN2U2ZThjNzg0ZDhkNDFiMzdhZjY4Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-05-19T18:12:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-05-19T18:12:34Z"}, "message": "4.cc: New file, testing that upon filebuf::close() 27.8.1.1,3 is enforced.\n\n2003-05-19  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* testsuite/27_io/basic_filebuf/close/char/4.cc: New file, testing\n\tthat upon filebuf::close() 27.8.1.1,3 is enforced.\n\nFrom-SVN: r66970", "tree": {"sha": "cec848614b69fc82efc4de6d631184c74f9bc912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cec848614b69fc82efc4de6d631184c74f9bc912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687/comments", "author": null, "committer": null, "parents": [{"sha": "f2a0e225a24d7f58c29ca311c5e3cea85cd17d97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a0e225a24d7f58c29ca311c5e3cea85cd17d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a0e225a24d7f58c29ca311c5e3cea85cd17d97"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "6fc5fe7205c14ab373004797d821ab94274db291", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=eab1ff73c813a9eb0f7e6e8c784d8d41b37af687", "patch": "@@ -1,3 +1,8 @@\n+2003-05-19  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* testsuite/27_io/basic_filebuf/close/char/4.cc: New file, testing\n+\tthat upon filebuf::close() 27.8.1.1,3 is enforced.\n+\n 2003-05-15  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* testsuite/thread/pthread4.cc: Further tweak to avoid fini race."}, {"sha": "a5712526f9debe78b4c8f5ac49e1d2e1b52b6b02", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/4.cc", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab1ff73c813a9eb0f7e6e8c784d8d41b37af687/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F4.cc?ref=eab1ff73c813a9eb0f7e6e8c784d8d41b37af687", "patch": "@@ -0,0 +1,72 @@\n+// 2003-05-19  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.3 filebuf member functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+// Test that upon filebuf::close() 27.8.1.1,3 is enforced.\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+const char name_01[] = \"filebuf_virtuals-1.txt\"; // file with data in it\n+const char name_02[] = \"filebuf_virtuals-2.txt\"; // empty file, need to create\n+\n+void test_04()\n+{\n+  typedef std::filebuf::traits_type \ttraits_type;\n+\n+  bool test = true;\n+\n+  std::filebuf fb_01, fb_02;\n+  char buffer[] = \"xxxxxxxxxx\";\n+\n+  // 'in'\n+  fb_01.open(name_01, std::ios_base::in);\n+  VERIFY( fb_01.sgetc() != traits_type::eof() );\n+  VERIFY( fb_01.sbumpc() != traits_type::eof() );\n+  VERIFY( fb_01.snextc() != traits_type::eof() );\n+  VERIFY( fb_01.sgetn(buffer, sizeof(buffer)) == sizeof(buffer) );\n+\n+  fb_01.close();\n+\n+  VERIFY( fb_01.sgetc() == traits_type::eof() );\n+  VERIFY( fb_01.sbumpc() == traits_type::eof() );\n+  VERIFY( fb_01.snextc() == traits_type::eof() );\n+  VERIFY( fb_01.sgetn(buffer, sizeof(buffer)) == 0 );\n+\n+  // 'out'\n+  fb_02.open(name_02, std::ios_base::out);\n+  VERIFY( fb_02.sputc('T') != traits_type::eof() );\n+  VERIFY( fb_02.sputn(buffer, sizeof(buffer)) == sizeof(buffer) );\n+\n+  fb_02.close();\n+  \n+  VERIFY( fb_02.sputc('T') == traits_type::eof() );\n+  VERIFY( fb_01.sputn(buffer, sizeof(buffer)) == 0 );\n+}\n+\n+int\n+main()\n+{\n+  test_04();\n+  return 0;\n+}"}]}