{"sha": "cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2MzMyMzMzODU0YTY5OGNiZmMyZWE0YjFlNTJjZTliZDU5ZjY2NA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2017-12-21T18:14:06Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2017-12-21T18:14:06Z"}, "message": "[SFN] propagate single-nondebug-stmt's side effects to enclosing list\n\nStatements without side effects, preceded by debug begin stmt markers,\nwould become a statement list with side effects, although the stmt on\nits own would be extracted from the list and remain not having side\neffects.  This causes debug info and possibly codegen differences.\nThis patch fixes it, identifying the situation in which the stmt would\nhave been extracted from the stmt list, and propagating the side\neffects flag from the stmt to the list.\n\nfor  gcc/ChangeLog\n\n\tPR debug/83419\n\t* c-family/c-semantics.c (pop_stmt_list): Propagate side\n\teffects from single nondebug stmt to container list.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR debug/83419\n\t* gcc.dg/pr83419.c: New.\n\nFrom-SVN: r255947", "tree": {"sha": "1fc2746b579d67b45f98cfb65ac4f0839237650a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc2746b579d67b45f98cfb65ac4f0839237650a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/comments", "author": null, "committer": null, "parents": [{"sha": "6b6d8f38f7b3bd8a2f4e4dbeb3014ba1339afa89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6d8f38f7b3bd8a2f4e4dbeb3014ba1339afa89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6d8f38f7b3bd8a2f4e4dbeb3014ba1339afa89"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "2851eb67cc473f55632b44a64a28a137226e4302", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "patch": "@@ -1,3 +1,9 @@\n+2017-12-21  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR debug/83419\n+\t* c-family/c-semantics.c (pop_stmt_list): Propagate side\n+\teffects from single nondebug stmt to container list.\n+\n 2017-12-21  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_expand_vector_init): Modify code"}, {"sha": "3a972c32c8ea3641afa25a31a964052fe7860e33", "filename": "gcc/c-family/c-semantics.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2Fc-family%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2Fc-family%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-semantics.c?ref=cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "patch": "@@ -96,6 +96,15 @@ pop_stmt_list (tree t)\n \t      t = l;\n \t      tsi_link_before (&i, u, TSI_SAME_STMT);\n \t    }\n+\t  while (!tsi_end_p (i)\n+\t\t && TREE_CODE (tsi_stmt (i)) == DEBUG_BEGIN_STMT)\n+\t    tsi_next (&i);\n+\t  /* If there's only one nondebug stmt in the list, we'd have\n+\t     extracted the stmt and dropped the list, and we'd take\n+\t     TREE_SIDE_EFFECTS from that statement, so keep the list's\n+\t     TREE_SIDE_EFFECTS in sync.  */\n+\t  if (tsi_one_before_end_p (i))\n+\t    TREE_SIDE_EFFECTS (t) = TREE_SIDE_EFFECTS (tsi_stmt (i));\n \t}\n     }\n "}, {"sha": "8cc163adac0e0fb3c358eaa5421b9c93e6a91443", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "patch": "@@ -1,3 +1,8 @@\n+2017-12-21  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR debug/83419\n+\t* gcc.dg/pr83419.c: New.\n+\n 2017-12-21  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/vect-slp-dup.c: New."}, {"sha": "3d4f1d2770111310f5ddb997abf70fe485571a20", "filename": "gcc/testsuite/gcc.dg/pr83419.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83419.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6332333854a698cbfc2ea4b1e52ce9bd59f664/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83419.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83419.c?ref=cb6332333854a698cbfc2ea4b1e52ce9bd59f664", "patch": "@@ -0,0 +1,16 @@\n+/* PR debug/83419 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcompare-debug\" } */\n+\n+int a, b;\n+void foo (int, ...);\n+\n+void\n+bar (void)\n+{\n+  if (a || 1 == b)\n+    foo (1);\n+  else\n+    0;\n+  foo (1, 0);\n+}"}]}