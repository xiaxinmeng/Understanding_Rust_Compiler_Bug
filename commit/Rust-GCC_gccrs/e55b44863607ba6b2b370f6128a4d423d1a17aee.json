{"sha": "e55b44863607ba6b2b370f6128a4d423d1a17aee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU1YjQ0ODYzNjA3YmE2YjJiMzcwZjYxMjhhNGQ0MjNkMWExN2FlZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-03-25T16:54:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-03-25T16:54:31Z"}, "message": "combine.c (distribute_notes): Place REG_LABEL also where REG_EQUAL indicates.\n\n        * combine.c (distribute_notes): Place REG_LABEL also where\n        REG_EQUAL indicates.\n\nFrom-SVN: r25984", "tree": {"sha": "da3b123547f3d3f2fe8e620677ebc2c507c18920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da3b123547f3d3f2fe8e620677ebc2c507c18920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e55b44863607ba6b2b370f6128a4d423d1a17aee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55b44863607ba6b2b370f6128a4d423d1a17aee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55b44863607ba6b2b370f6128a4d423d1a17aee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55b44863607ba6b2b370f6128a4d423d1a17aee/comments", "author": null, "committer": null, "parents": [{"sha": "cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc29143343f0b7dc59c9d0f8399ac1135e947b0c"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "bd7977526b9102b81afb2458df592dd31c906e00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55b44863607ba6b2b370f6128a4d423d1a17aee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55b44863607ba6b2b370f6128a4d423d1a17aee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e55b44863607ba6b2b370f6128a4d423d1a17aee", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar 25 16:53:53 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* combine.c (distribute_notes): Place REG_LABEL also where\n+\tREG_EQUAL indicates.\n+\n Thu Mar 25 12:46:37 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* a29k/a29k.h (TARGET_SWITCHES): Add doc strings."}, {"sha": "0b64a86a548cea520f790ed0b947e1beb20399c2", "filename": "gcc/combine.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55b44863607ba6b2b370f6128a4d423d1a17aee/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55b44863607ba6b2b370f6128a4d423d1a17aee/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e55b44863607ba6b2b370f6128a4d423d1a17aee", "patch": "@@ -11508,7 +11508,6 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \n \tcase REG_INC:\n \tcase REG_NO_CONFLICT:\n-\tcase REG_LABEL:\n \t  /* These notes say something about how a register is used.  They must\n \t     be present on any use of the register in I2 or I3.  */\n \t  if (reg_mentioned_p (XEXP (note, 0), PATTERN (i3)))\n@@ -11523,6 +11522,30 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t    }\n \t  break;\n \n+\tcase REG_LABEL:\n+\t  /* This can show up in several ways -- either directly in the\n+\t     pattern, or hidden off in the constant pool with (or without?)\n+\t     a REG_EQUAL note.  */\n+\t  /* ??? Ignore the without-reg_equal-note problem for now.  */\n+\t  if (reg_mentioned_p (XEXP (note, 0), PATTERN (i3))\n+\t      || ((tem = find_reg_note (i3, REG_EQUAL, NULL_RTX))\n+\t\t  && GET_CODE (XEXP (tem, 0)) == LABEL_REF\n+\t\t  && XEXP (XEXP (tem, 0), 0) == XEXP (note, 0)))\n+\t    place = i3;\n+\n+\t  if (i2\n+\t      && (reg_mentioned_p (XEXP (note, 0), PATTERN (i2))\n+\t          || ((tem = find_reg_note (i2, REG_EQUAL, NULL_RTX))\n+\t\t      && GET_CODE (XEXP (tem, 0)) == LABEL_REF\n+\t\t      && XEXP (XEXP (tem, 0), 0) == XEXP (note, 0))))\n+\t    {\n+\t      if (place)\n+\t\tplace2 = i2;\n+\t      else\n+\t\tplace = i2;\n+\t    }\n+\t  break;\n+\n \tcase REG_WAS_0:\n \t  /* It is too much trouble to try to see if this note is still\n \t     correct in all situations.  It is better to simply delete it.  */"}]}