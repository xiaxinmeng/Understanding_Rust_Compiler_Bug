{"sha": "cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlMTdiZDkzYmExNzgyNzNmZGU2OWZkOWE1MzQzNzFiNWUyYTdkNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2002-11-11T01:10:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2002-11-11T01:10:44Z"}, "message": "howto.html: Make \"chapter 22 notes\" a link.\n\n\t* docs/html/17_intro/howto.html: Make \"chapter 22 notes\" a link.\n\t* docs/html/faq/index.html: Mention that GCC ships with a newer\n\tversion of the library than the last snapshot. Make \"see below\" a\n\tlink. Add missing <html> tag.\n\t* docs/html/faq/index.txt: Regenerate.\n\t* docs/html/22_locale/locale.html, docs/html/22_locale/messages.html,\n\tdocs/html/23_containers/howto.html, docs/html/24_iterators/howto.html,\n\tdocs/html/25_algorithms/howto.html, docs/html/26_numerics/howto.html,\n\tdocs/html/27_io/howto.html, docs/html/ext/howto.html,\n\tdocs/html/ext/sgiexts.html: Add missing <html> tag.\n\nFrom-SVN: r59000", "tree": {"sha": "282edd2579e7a21949ad553b5bfa37900be6ab59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/282edd2579e7a21949ad553b5bfa37900be6ab59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d47839991f4387a1d0f95c0cf0fe5fe9076a9bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47839991f4387a1d0f95c0cf0fe5fe9076a9bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47839991f4387a1d0f95c0cf0fe5fe9076a9bb3"}], "stats": {"total": 768, "additions": 398, "deletions": 370}, "files": [{"sha": "19bc60ab71ff36fe00e06668a12895728a0a3d3f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -1,3 +1,16 @@\n+2002-11-11  Jonathan Wakely <redi@gcc.gnu.org>\n+\n+\t* docs/html/17_intro/howto.html: Make \"chapter 22 notes\" a link.\n+\t* docs/html/faq/index.html: Mention that GCC ships with a newer\n+\tversion of the library than the last snapshot. Make \"see below\" a\n+\tlink. Add missing <html> tag.\n+\t* docs/html/faq/index.txt: Regenerate.\n+\t* docs/html/22_locale/locale.html, docs/html/22_locale/messages.html,\n+\tdocs/html/23_containers/howto.html, docs/html/24_iterators/howto.html,\n+\tdocs/html/25_algorithms/howto.html, docs/html/26_numerics/howto.html,\n+\tdocs/html/27_io/howto.html, docs/html/ext/howto.html,\n+\tdocs/html/ext/sgiexts.html: Add missing <html> tag.\n+\n 2002-11-07  Phil Edwards  <pme@gcc.gnu.org>\n             Richard Earnshaw  <rearnsha@arm.com>\n "}, {"sha": "5888a54e61ba0a8f51fc669016360d1c9765b18b", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -242,7 +242,8 @@ <h2><a name=\"5\">Behavior specific to libstdc++-v3</a></h2>\n       here would defeat the purpose.  :-)\n    </p>\n    <p><strong>[21.1.3.1]/5</strong> I don't really know about the mbstate_t\n-      stuff... see the chapter 22 notes for what does exist.\n+      stuff... see the <a href=\"../22_locale/howto.html\">chapter 22 notes</a>\n+      for what does exist.\n    </p>\n    <p><strong>[22.*]</strong> Anything and everything we have on locale\n       implemenation will be described"}, {"sha": "66a2827a3f452ef51af775f630729c4ca8223254", "filename": "libstdc++-v3/docs/html/22_locale/locale.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"bkoz@redhat.com (Benjamin Kosnik)\" />"}, {"sha": "b57f45411835f4cd06c72dcc05db3c1253761b77", "filename": "libstdc++-v3/docs/html/22_locale/messages.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"bkoz@redhat.com (Benjamin Kosnik)\" />"}, {"sha": "27314fbafc3daf247ff04ac6f637d9c36f560f1f", "filename": "libstdc++-v3/docs/html/23_containers/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />"}, {"sha": "c22df9acf4208a6551be5d5c5f9dc2a97fddba2c", "filename": "libstdc++-v3/docs/html/24_iterators/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />"}, {"sha": "9b2f24812b840a13c393d55076e95dd100e0b22c", "filename": "libstdc++-v3/docs/html/25_algorithms/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />"}, {"sha": "ef0b36a8eacb48379b9953166d44b05f403ba0a4", "filename": "libstdc++-v3/docs/html/26_numerics/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />"}, {"sha": "b4a59251b302ee43884e1a10c269c42def510ff2", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />"}, {"sha": "3d08c5703854a540d1eba2f87ef15de4322e7aa4", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />"}, {"sha": "3f65aa340bb74bd7d2c1cb6ba0963e0a0d057e61", "filename": "libstdc++-v3/docs/html/ext/sgiexts.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n    <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++, STL, SGI\" />\n@@ -28,7 +29,7 @@ <h1 class=\"centered\"><a name=\"top\">SGI extensions to the library in\n    for a description).  Not every chapter may have extensions, and the\n    extensions may come and go.  Also, this page is incomplete because the\n    author is pressed for time.  Check back often; the latest change was on\n-   $Date: 2002/09/05 15:47:53 $ (UTC).\n+   $Date: 2002/10/07 18:11:22 $ (UTC).\n </p>\n \n <p>Descriptions range from the scanty to the verbose.  You should also check"}, {"sha": "6e5266c5e0b3a637149a8229b91f7feef610cefc", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -3,6 +3,7 @@\n           PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n \n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n    <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++, libg++, STL\" />\n@@ -123,12 +124,14 @@ <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n          ongoing project to implement the ISO 14882 Standard C++ library \n          as described in chapters 17 through 27 and annex D.  As the \n          library reaches stable plateaus, it is captured in a snapshot\n-         and released.  The current release is\n+         and released.  The latest release is\n          <a href=\"http://gcc.gnu.org/libstdc++/index.html#download\">the\n-         fourteenth snapshot</a>.  For those who want to see exactly how\n+         fourteenth snapshot</a> but newer versions have been included\n+         in recent GCC releases.  For those who want to see exactly how\n          far the project has come, or just want the latest\n          bleeding-edge code, the up-to-date source is available over\n-         anonymous CVS, and can even be browsed over the Web (see below). \n+         anonymous CVS, and can even be browsed over the Web (see\n+         <a href=\"#1_4\">1.4</a> below). \n       </p>\n       <p>The older libstdc++-v2 project is no longer maintained; the code\n          has been completely replaced and rewritten."}, {"sha": "b3ca4fcae7f4441ca100cb45af96bb20ef6c58df", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 367, "deletions": 365, "changes": 732, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe17bd93ba178273fde69fd9a534371b5e2a7d6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=cfe17bd93ba178273fde69fd9a534371b5e2a7d6", "patch": "@@ -1,8 +1,8 @@\n \n                      libstdc++ Frequently Asked Questions\n \n-   The latest version of this document is always available at\n-   [1]http://gcc.gnu.org/onlinedocs/libstdc++/faq/. The main\n+   The   latest   version   of  this  document  is  always  available  at\n+   [1]http://gcc.gnu.org/onlinedocs/libstdc++/faq/.        The       main\n    documentation page is at\n    [2]http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html.\n \n@@ -41,12 +41,12 @@\n          4. [31]Things in libstdc++ that only look like bugs\n                o [32]reopening a stream fails\n                o [33]-Weffc++ complains too much\n-               o [34]\"ambiguous overloads\" after including an old-style\n+               o [34]\"ambiguous  overloads\"  after including an old-style\n                  header\n                o [35]The g++-3 headers are not ours\n                o [36]compilation errors from streambuf.h\n                o [37]errors about *Concept and constraints in the STL...\n-               o [38]program crashes when using library code in a\n+               o [38]program   crashes  when  using  library  code  in  a\n                  dynamically-loaded library\n          5. [39]Aw, that's easy to fix!\n     5. [40]Miscellaneous\n@@ -66,182 +66,183 @@\n 1.1 What is libstdc++-v3?\n \n    The GNU Standard C++ Library v3 is an ongoing project to implement the\n-   ISO 14882 Standard C++ library as described in chapters 17 through 27\n+   ISO  14882 Standard C++ library as described in chapters 17 through 27\n    and annex D. As the library reaches stable plateaus, it is captured in\n-   a snapshot and released. The current release is [49]the fourteenth\n-   snapshot. For those who want to see exactly how far the project has\n-   come, or just want the latest bleeding-edge code, the up-to-date\n-   source is available over anonymous CVS, and can even be browsed over\n-   the Web (see below).\n-\n-   The older libstdc++-v2 project is no longer maintained; the code has\n-   been completely replaced and rewritten. [50]If you are using V2, then\n+   a  snapshot  and  released.  The  latest release is [49]the fourteenth\n+   snapshot but newer versions have been included in recent GCC releases.\n+   For  those  who  want  to see exactly how far the project has come, or\n+   just  want  the  latest  bleeding-edge  code, the up-to-date source is\n+   available  over  anonymous  CVS,  and can even be browsed over the Web\n+   (see [50]1.4 below).\n+\n+   The  older  libstdc++-v2 project is no longer maintained; the code has\n+   been  completely replaced and rewritten. [51]If you are using V2, then\n    you need to report bugs to your system vendor, not to the V3 list.\n \n    A more formal description of the V3 goals can be found in the official\n-   [51]design document.\n+   [52]design document.\n      _________________________________________________________________\n \n 1.2 Why should I use libstdc++?\n \n    The completion of the ISO C++ standardization gave the C++ community a\n-   powerful set of reuseable tools in the form of the C++ Standard\n-   Library. However, all existing C++ implementations are (as the Draft\n-   Standard used to say) \"incomplet and incorrekt,\" and many suffer from\n+   powerful  set  of  reuseable  tools  in  the  form of the C++ Standard\n+   Library.  However,  all existing C++ implementations are (as the Draft\n+   Standard  used to say) \"incomplet and incorrekt,\" and many suffer from\n    limitations of the compilers that use them.\n \n-   The GNU C/C++/FORTRAN/<pick-a-language> compiler (gcc, g++, etc) is\n+   The  GNU  C/C++/FORTRAN/<pick-a-language>  compiler (gcc, g++, etc) is\n    widely considered to be one of the leading compilers in the world. Its\n-   development has recently been taken over by the [52]GCC team. All of\n-   the rapid development and near-legendary [53]portability that are the\n+   development  has  recently been taken over by the [53]GCC team. All of\n+   the  rapid development and near-legendary [54]portability that are the\n    hallmarks of an open-source project are being applied to libstdc++.\n \n-   That means that all of the Standard classes and functions (such as\n-   string, vector<>, iostreams, and algorithms) will be freely available\n-   and fully compliant. Programmers will no longer need to \"roll their\n+   That  means  that  all  of the Standard classes and functions (such as\n+   string,  vector<>, iostreams, and algorithms) will be freely available\n+   and  fully  compliant.  Programmers will no longer need to \"roll their\n    own\" nor be worried about platform-specific incompatibilities.\n      _________________________________________________________________\n \n 1.3 Who's in charge of it?\n \n    The libstdc++ project is contributed to by several developers all over\n-   the world, in the same way as GCC or Linux. Benjamin Kosnik, Gabriel\n-   Dos Reis, Phil Edwards, Ulrich Drepper, Loren James Rittle, and Paolo\n+   the  world,  in the same way as GCC or Linux. Benjamin Kosnik, Gabriel\n+   Dos  Reis, Phil Edwards, Ulrich Drepper, Loren James Rittle, and Paolo\n    Carlini are the lead maintainers of the CVS archive.\n \n-   Development and discussion is held on the libstdc++ mailing list.\n-   Subscribing to the list, or searching the list archives, is open to\n-   everyone. You can read instructions for doing so on the [54]homepage.\n+   Development  and  discussion  is  held  on the libstdc++ mailing list.\n+   Subscribing  to  the  list, or searching the list archives, is open to\n+   everyone.  You can read instructions for doing so on the [55]homepage.\n    If you have questions, ideas, code, or are just curious, sign up!\n      _________________________________________________________________\n \n 1.4 How do I get libstdc++?\n \n-   The fourteenth (and latest) snapshot of libstdc++-v3 is [55]available\n+   The  fourteenth (and latest) snapshot of libstdc++-v3 is [56]available\n    via ftp.\n \n-   The [56]homepage has instructions for retrieving the latest CVS\n+   The  [57]homepage  has  instructions  for  retrieving  the  latest CVS\n    sources, and for browsing the CVS sources over the web.\n \n-   The subset commonly known as the Standard Template Library (chapters\n-   23 through 25, mostly) is adapted from the final release of the SGI\n+   The  subset  commonly known as the Standard Template Library (chapters\n+   23  through  25,  mostly) is adapted from the final release of the SGI\n    STL.\n      _________________________________________________________________\n \n 1.5 When is libstdc++ going to be finished?\n \n-   Nathan Myers gave the best of all possible answers, responding to a\n+   Nathan  Myers  gave  the best of all possible answers, responding to a\n    Usenet article asking this question: Sooner, if you help.\n      _________________________________________________________________\n \n 1.6 How do I contribute to the effort?\n \n-   Here is [57]a page devoted to this topic. Subscribing to the mailing\n-   list (see above, or the homepage) is a very good idea if you have\n-   something to contribute, or if you have spare time and want to help.\n+   Here  is  [58]a page devoted to this topic. Subscribing to the mailing\n+   list  (see  above,  or  the  homepage) is a very good idea if you have\n+   something  to  contribute, or if you have spare time and want to help.\n    Contributions don't have to be in the form of source code; anybody who\n-   is willing to help write documentation, for example, or has found a\n+   is  willing  to  help write documentation, for example, or has found a\n    bug in code that we all thought was working, is more than welcome!\n      _________________________________________________________________\n \n 1.7 What happened to libg++? I need that!\n \n-   The most recent libg++ README states that libg++ is no longer being\n-   actively maintained. It should not be used for new projects, and is\n+   The  most  recent  libg++ README states that libg++ is no longer being\n+   actively  maintained.  It  should not be used for new projects, and is\n    only being kicked along to support older code.\n \n-   The libg++ was designed and created when there was no Standard to\n-   provide guidance. Classes like linked lists are now provided for by\n-   list<T> and do not need to be created by genclass. (For that matter,\n-   templates exist now and are well-supported, whereas genclass (mostly)\n+   The  libg++  was  designed  and  created when there was no Standard to\n+   provide  guidance.  Classes  like linked lists are now provided for by\n+   list<T>  and  do not need to be created by genclass. (For that matter,\n+   templates  exist now and are well-supported, whereas genclass (mostly)\n    predates them.)\n \n-   There are other classes in libg++ that are not specified in the ISO\n+   There  are  other  classes in libg++ that are not specified in the ISO\n    Standard (e.g., statistical analysis). While there are a lot of really\n-   useful things that are used by a lot of people (e.g., statistics :-),\n-   the Standards Committee couldn't include everything, and so a lot of\n+   useful  things that are used by a lot of people (e.g., statistics :-),\n+   the  Standards  Committee couldn't include everything, and so a lot of\n    those \"obvious\" classes didn't get included.\n \n-   Since libstdc++ is an implementation of the Standard Library, we have\n-   no plans at this time to include non-Standard utilities in the\n-   implementation, however handy they are. (The extensions provided in\n-   the SGI STL aren't maintained by us and don't get a lot of our\n-   attention, because they don't require a lot of our time.) It is\n-   entirely plausable that the \"useful stuff\" from libg++ might be\n-   extracted into an updated utilities library, but nobody has stated\n+   Since  libstdc++ is an implementation of the Standard Library, we have\n+   no  plans  at  this  time  to  include  non-Standard  utilities in the\n+   implementation,  however  handy  they are. (The extensions provided in\n+   the  SGI  STL  aren't  maintained  by  us  and  don't get a lot of our\n+   attention,  because  they  don't  require  a  lot  of our time.) It is\n+   entirely  plausable  that  the  \"useful  stuff\"  from  libg++ might be\n+   extracted  into  an  updated  utilities library, but nobody has stated\n    such a project yet.\n \n-   (The [58]Boost site houses free C++ libraries that do varying things,\n-   and happened to be started by members of the Standards Committee.\n+   (The  [59]Boost site houses free C++ libraries that do varying things,\n+   and  happened  to  be  started  by members of the Standards Committee.\n    Certain \"useful stuff\" classes will probably migrate there.)\n \n-   For the bold and/or desperate, the [59]GCC FAQ describes where to find\n+   For the bold and/or desperate, the [60]GCC FAQ describes where to find\n    the last libg++ source.\n      _________________________________________________________________\n \n 1.8 What if I have more questions?\n \n    If you have read the README and RELEASE-NOTES files, and your question\n    remains unanswered, then just ask the mailing list. At present, you do\n-   not need to be subscribed to the list to send a message to it. More\n-   information is available on the homepage (including how to browse the\n-   list archives); to send to the list, use [60]libstdc++@gcc.gnu.org.\n+   not  need  to  be subscribed to the list to send a message to it. More\n+   information  is available on the homepage (including how to browse the\n+   list archives); to send to the list, use [61]libstdc++@gcc.gnu.org.\n \n-   If you have a question that you think should be included here, or if\n-   you have a question about a question/answer here, contact [61]Phil\n-   Edwards or [62]Gabriel Dos Reis.\n+   If  you  have a question that you think should be included here, or if\n+   you  have  a  question  about a question/answer here, contact [62]Phil\n+   Edwards or [63]Gabriel Dos Reis.\n      _________________________________________________________________\n \n 1.9 What are the license terms for libstdc++-v3?\n \n-   See [63]our license description for these and related questions.\n+   See [64]our license description for these and related questions.\n      _________________________________________________________________\n \n                                2.0 Installation\n \n 2.1 How do I install libstdc++-v3?\n \n-   Complete instructions are not given here (this is a FAQ, not an\n+   Complete  instructions  are  not  given  here  (this  is a FAQ, not an\n    installation document), but the tools required are few:\n-     * A 3.x release of GCC. Note that building GCC is much easier and\n+     * A  3.x  release  of GCC. Note that building GCC is much easier and\n        more automated than building the GCC 2.[78] series was. If you are\n-       using GCC 2.95, you can still build earlier snapshots of\n+       using   GCC  2.95,  you  can  still  build  earlier  snapshots  of\n        libstdc++.\n      * GNU Make is recommended, but should not be required.\n      * The GNU Autotools are needed if you are messing with the configury\n        or makefiles.\n \n-   The file [64]documentation.html provides a good overview of the steps\n-   necessary to build, install, and use the library. Instructions for\n-   configuring the library with new flags such as --enable-threads are\n-   there also, as well as patches and instructions for working with GCC\n+   The  file [65]documentation.html provides a good overview of the steps\n+   necessary  to  build,  install,  and use the library. Instructions for\n+   configuring  the  library  with new flags such as --enable-threads are\n+   there  also,  as well as patches and instructions for working with GCC\n    2.95.\n \n-   The top-level install.html and [65]RELEASE-NOTES files contain the\n-   exact build and installation instructions. You may wish to browse\n-   those files over CVSweb ahead of time to get a feel for what's\n-   required. RELEASE-NOTES is located in the \".../docs/17_intro/\"\n+   The  top-level  install.html  and  [66]RELEASE-NOTES files contain the\n+   exact  build  and  installation  instructions.  You may wish to browse\n+   those  files  over  CVSweb  ahead  of  time  to  get a feel for what's\n+   required.   RELEASE-NOTES   is  located  in  the  \".../docs/17_intro/\"\n    directory of the distribution.\n      _________________________________________________________________\n \n 2.2 [removed]\n \n-   This question has become moot and has been removed. The stub is here\n+   This  question  has become moot and has been removed. The stub is here\n    to preserve numbering (and hence links/bookmarks).\n      _________________________________________________________________\n \n 2.3 What is this CVS thing that you keep mentioning?\n \n-   The Concurrent Versions System is one of several revision control\n+   The  Concurrent  Versions  System  is  one of several revision control\n    packages. It was selected for GNU projects because it's free (speech),\n-   free (beer), and very high quality. The [66]CVS entry in the GNU\n-   software catalogue has a better description as well as a [67]link to\n+   free  (beer),  and  very  high  quality.  The [67]CVS entry in the GNU\n+   software  catalogue  has a better description as well as a [68]link to\n    the makers of CVS.\n \n    The \"anonymous client checkout\" feature of CVS is similar to anonymous\n    FTP in that it allows anyone to retrieve the latest libstdc++ sources.\n \n-   After the first of April, American users will have a \"/pharmacy\"\n+   After  the  first  of  April,  American  users will have a \"/pharmacy\"\n    command-line option...\n      _________________________________________________________________\n \n@@ -250,61 +251,61 @@\n    libstdc++-v3 comes with its own testsuite. You do not need to actually\n    install the library (\"make install\") to run the testsuite.\n \n-   To run the testsuite on the library after building it, use \"make\n-   check\" while in your build directory. To run the testsuite on the\n-   library after building and installing it, use \"make check-install\"\n+   To  run  the  testsuite  on  the  library after building it, use \"make\n+   check\"  while  in  your  build  directory. To run the testsuite on the\n+   library  after  building  and  installing it, use \"make check-install\"\n    instead.\n \n    If you find bugs in the testsuite programs themselves, or if you think\n-   of a new test program that should be added to the suite, please write\n+   of  a new test program that should be added to the suite, please write\n    up your idea and send it to the list!\n      _________________________________________________________________\n \n 2.4 This library is HUGE! And what's libsupc++?\n \n-   Usually the size of libraries on disk isn't noticeable. When a link\n-   editor (or simply \"linker\") pulls things from a static archive\n-   library, only the necessary object files are copied into your\n-   executable, not the entire library. Unfortunately, even if you only\n-   need a single function or variable from an object file, the entire\n-   object file is extracted. (There's nothing unique to C++ or\n-   libstdc++-v3 about this; it's just common behavior, given here for\n+   Usually  the  size  of libraries on disk isn't noticeable. When a link\n+   editor  (or  simply  \"linker\")  pulls  things  from  a  static archive\n+   library,  only  the  necessary  object  files  are  copied  into  your\n+   executable,  not  the  entire library. Unfortunately, even if you only\n+   need  a  single  function  or variable from an object file, the entire\n+   object   file   is  extracted.  (There's  nothing  unique  to  C++  or\n+   libstdc++-v3  about  this;  it's  just common behavior, given here for\n    background reasons.)\n \n-   Some of the object files which make up libstdc++.a are rather large.\n+   Some  of  the object files which make up libstdc++.a are rather large.\n    If you create a statically-linked executable with -static, those large\n-   object files are suddenly part of your executable. Historically the\n-   best way around this was to only place a very few functions (often\n-   only a single one) in each source/object file; then extracting a\n-   single function is the same as extracting a single .o file. For\n-   libstdc++-v3 this is only possible to a certain extent; the object\n-   files in question contain template classes and template functions,\n-   pre-instantiated, and splitting those up causes severe maintenance\n+   object  files  are  suddenly part of your executable. Historically the\n+   best  way  around  this  was to only place a very few functions (often\n+   only  a  single  one)  in  each  source/object file; then extracting a\n+   single  function  is  the  same  as  extracting  a single .o file. For\n+   libstdc++-v3  this  is  only  possible to a certain extent; the object\n+   files  in  question  contain  template classes and template functions,\n+   pre-instantiated,  and  splitting  those  up causes severe maintenance\n    headaches.\n \n-   It's not a bug, and it's not really a problem. Nevertheless, some\n+   It's  not  a  bug,  and  it's not really a problem. Nevertheless, some\n    people don't like it, so here are two pseudo-solutions:\n \n-   If the only functions from libstdc++.a which you need are language\n-   support functions (those listed in [68]clause 18 of the standard,\n-   e.g., new and delete), then try linking against libsupc++.a (usually\n-   specifying -lsupc++ when calling g++ for the final link step will do\n+   If  the  only  functions  from libstdc++.a which you need are language\n+   support  functions  (those  listed  in  [69]clause 18 of the standard,\n+   e.g.,  new  and delete), then try linking against libsupc++.a (usually\n+   specifying  -lsupc++  when calling g++ for the final link step will do\n    it). This library contains only those support routines, one per object\n    file. But if you are using anything from the rest of the library, such\n-   as IOStreams or vectors, then you'll still need pieces from\n+   as   IOStreams   or  vectors,  then  you'll  still  need  pieces  from\n    libstdc++.a.\n \n    The second method is one we hope to incorporate into the library build\n-   process. Some platforms can place each function and variable into its\n-   own section in a .o file. The GNU linker can then perform garbage\n-   collection on unused sections; this reduces the situation to only\n-   copying needed functions into the executable, as before, but all\n+   process.  Some platforms can place each function and variable into its\n+   own  section  in  a  .o  file. The GNU linker can then perform garbage\n+   collection  on  unused  sections;  this  reduces the situation to only\n+   copying  needed  functions  into  the  executable,  as before, but all\n    happens automatically.\n \n-   Unfortunately the garbage collection in GNU ld is buggy; sections\n-   (corresponding to functions and variables) which are used are\n-   mistakenly removed, leading to horrible crashes when your executable\n-   starts up. For the time being, this feature is not used when building\n+   Unfortunately  the  garbage  collection  in  GNU ld is buggy; sections\n+   (corresponding   to  functions  and  variables)  which  are  used  are\n+   mistakenly  removed,  leading to horrible crashes when your executable\n+   starts  up. For the time being, this feature is not used when building\n    the library.\n      _________________________________________________________________\n \n@@ -314,112 +315,112 @@\n \n    Probably not. Yet.\n \n-   Because GCC advances so rapidly, development and testing of libstdc++\n-   is being done almost entirely under that compiler. If you are curious\n-   about whether other, lesser compilers (*grin*) support libstdc++, you\n-   are more than welcome to try. Configuring and building the library\n-   (see above) will still require certain tools, however. Also keep in\n+   Because  GCC advances so rapidly, development and testing of libstdc++\n+   is  being done almost entirely under that compiler. If you are curious\n+   about  whether other, lesser compilers (*grin*) support libstdc++, you\n+   are  more  than  welcome  to try. Configuring and building the library\n+   (see  above)  will  still require certain tools, however. Also keep in\n    mind that building libstdc++ does not imply that your compiler will be\n    able to use all of the features found in the C++ Standard Library.\n \n-   Since the goal of ISO Standardization is for all C++ implementations\n-   to be able to share code, the final libstdc++ should, in theory, be\n+   Since  the  goal of ISO Standardization is for all C++ implementations\n+   to  be  able  to share code, the final libstdc++ should, in theory, be\n    usable under any ISO-compliant compiler. It will still be targeted and\n    optimized for GCC/g++, however.\n      _________________________________________________________________\n \n 3.2 [removed]\n \n-   This question has become moot and has been removed. The stub is here\n+   This  question  has become moot and has been removed. The stub is here\n    to preserve numbering (and hence links/bookmarks).\n      _________________________________________________________________\n \n 3.3 [removed]\n \n-   This question has become moot and has been removed. The stub is here\n+   This  question  has become moot and has been removed. The stub is here\n    to preserve numbering (and hence links/bookmarks).\n      _________________________________________________________________\n \n 3.4 I can't use 'long long' on Solaris\n \n-   By default we try to support the C99 long long type. This requires\n+   By  default  we  try  to support the C99 long long type. This requires\n    that certain functions from your C library be present.\n \n-   Up through release 3.0.2 the tests performed were too general, and\n-   this feature was disabled when it did not need to be. The most\n+   Up  through  release  3.0.2  the tests performed were too general, and\n+   this  feature  was  disabled  when  it  did  not  need to be. The most\n    commonly reported platform affected was Solaris.\n \n    This has been fixed for 3.0.3 and onwards.\n      _________________________________________________________________\n \n 3.5 _XOPEN_SOURCE / _GNU_SOURCE / etc is always defined\n \n-   On Solaris, g++ (but not gcc) always defines the preprocessor macro\n-   _XOPEN_SOURCE. On GNU/Linux, the same happens with _GNU_SOURCE. (This\n-   is not an exhaustive list; other macros and other platforms are also\n+   On  Solaris,  g++  (but not gcc) always defines the preprocessor macro\n+   _XOPEN_SOURCE.  On GNU/Linux, the same happens with _GNU_SOURCE. (This\n+   is  not  an exhaustive list; other macros and other platforms are also\n    affected.)\n \n-   These macros are typically used in C library headers, guarding new\n-   versions of functions from their older versions. The C++ standard\n-   library includes the C standard library, but it requires the C90\n-   version, which for backwards-compatability reasons is often not the\n+   These  macros  are  typically  used in C library headers, guarding new\n+   versions  of  functions  from  their  older versions. The C++ standard\n+   library  includes  the  C  standard  library,  but it requires the C90\n+   version,  which  for  backwards-compatability reasons is often not the\n    default for many vendors.\n \n-   More to the point, the C++ standard requires behavior which is only\n-   available on certain platforms after certain symbols are defined.\n-   Usually the issue involves I/O-related typedefs. In order to ensure\n+   More  to  the  point, the C++ standard requires behavior which is only\n+   available  on  certain  platforms  after  certain symbols are defined.\n+   Usually  the  issue  involves I/O-related typedefs. In order to ensure\n    correctness, the compiler simply predefines those symbols.\n \n-   Note that it's not enough to #define them only when the library is\n-   being built (during installation). Since we don't have an 'export'\n-   keyword, much of the library exists as headers, which means that the\n+   Note  that  it's  not  enough to #define them only when the library is\n+   being  built  (during  installation).  Since we don't have an 'export'\n+   keyword,  much  of the library exists as headers, which means that the\n    symbols must also be defined as your programs are parsed and compiled.\n \n-   To see which symbols are defined, look for CPLUSPLUS_CPP_SPEC in the\n-   gcc config headers for your target (and try changing them to see what\n-   happens when building complicated code). You can also run \"g++ -E -dM\n-   - < /dev/null\" to display a list of predefined macros for any\n+   To  see  which symbols are defined, look for CPLUSPLUS_CPP_SPEC in the\n+   gcc  config headers for your target (and try changing them to see what\n+   happens  when building complicated code). You can also run \"g++ -E -dM\n+   -  <  /dev/null\"  to  display  a  list  of  predefined  macros for any\n    particular installation.\n \n-   This has been discussed on the mailing lists [69]quite a bit.\n+   This has been discussed on the mailing lists [70]quite a bit.\n \n-   This method is something of a wart. We'd like to find a cleaner\n+   This  method  is  something  of  a  wart.  We'd like to find a cleaner\n    solution, but nobody yet has contributed the time.\n      _________________________________________________________________\n \n 3.6 OS X ctype.h is broken! How can I hack it?\n \n-   This is a long-standing bug in the OS X support. Fortunately, the\n-   patch is quite simple, and well-known. [70]Here's a link to the\n+   This  is  a  long-standing  bug  in the OS X support. Fortunately, the\n+   patch  is  quite  simple,  and  well-known.  [71]Here's  a link to the\n    solution.\n      _________________________________________________________________\n \n                           4.0 Known Bugs and Non-Bugs\n \n-   Note that this section can get rapdily outdated -- such is the nature\n-   of an open-source project. For the latest information, join the\n-   mailing list or look through recent archives. The RELEASE- NOTES and\n+   Note  that this section can get rapdily outdated -- such is the nature\n+   of  an  open-source  project.  For  the  latest  information, join the\n+   mailing  list  or look through recent archives. The RELEASE- NOTES and\n    BUGS files are generally kept up-to-date.\n \n-   For 3.0.1, the most common \"bug\" is an apparently missing \"../\" in\n+   For  3.0.1,  the  most  common \"bug\" is an apparently missing \"../\" in\n    include/Makefile, resulting in files like gthr.h and gthr-single.h not\n-   being found. Please read [71]the configuration instructions for GCC,\n+   being  found.  Please read [72]the configuration instructions for GCC,\n    specifically the part about configuring in a separate build directory,\n-   and how strongly recommended it is. Building in the source directory\n-   is fragile, is rarely tested, and tends to break, as in this case.\n+   and  how  strongly recommended it is. Building in the source directory\n+   is  fragile,  is  rarely  tested, and tends to break, as in this case.\n    This was fixed for 3.0.2.\n \n-   For 3.1, the most common \"bug\" is a parse error when using <fstream>,\n-   ending with a message, \"bits/basic_file.h:52: parse error before `{'\n-   token.\" Please read [72]the installation instructions for GCC,\n-   specifically the part about not installing newer versions on top of\n-   older versions. If you install 3.1 over a 3.0.x release, then the\n-   wrong basic_file.h header will be found (its location changed between\n+   For  3.1, the most common \"bug\" is a parse error when using <fstream>,\n+   ending  with  a message, \"bits/basic_file.h:52: parse error before `{'\n+   token.\"   Please  read  [73]the  installation  instructions  for  GCC,\n+   specifically  the  part  about not installing newer versions on top of\n+   older  versions.  If  you  install  3.1 over a 3.0.x release, then the\n+   wrong  basic_file.h header will be found (its location changed between\n    releases).\n \n    Please do not report these as bugs. We know about them. Reporting this\n-   -- or any other problem that's already been fixed -- hinders the\n-   development of GCC, because we have to take time to respond to your\n+   --  or  any  other  problem  that's  already been fixed -- hinders the\n+   development  of  GCC,  because we have to take time to respond to your\n    report. Thank you.\n \n 4.1 What works already?\n@@ -475,51 +476,51 @@ New:\n \n 4.2 Bugs in gcc/g++ (not libstdc++-v3)\n \n-   This is by no means meant to be complete nor exhaustive, but mentions\n-   some problems that users may encounter when building or using\n+   This  is by no means meant to be complete nor exhaustive, but mentions\n+   some  problems  that  users  may  encounter  when  building  or  using\n    libstdc++. If you are experiencing one of these problems, you can find\n    more information on the libstdc++ and the GCC mailing lists.\n \n-   Before reporting a bug, examine the [73]bugs database with the\n-   category set to \"libstdc++\". The BUGS file in the source tree also\n+   Before  reporting  a  bug,  examine  the  [74]bugs  database  with the\n+   category  set  to  \"libstdc++\".  The BUGS file in the source tree also\n    tracks known serious problems.\n-     * Debugging is problematic, due to bugs in line-number generation\n+     * Debugging  is  problematic,  due to bugs in line-number generation\n        (mostly fixed in the compiler) and gdb lagging behind the compiler\n-       (lack of personnel). We recommend configuring the compiler using\n-       --with-dwarf2 if the DWARF2 debugging format is not already the\n-       default on your platform. Also, [74]changing your GDB settings can\n+       (lack  of  personnel). We recommend configuring the compiler using\n+       --with-dwarf2  if  the  DWARF2 debugging format is not already the\n+       default on your platform. Also, [75]changing your GDB settings can\n        have a profound effect on your C++ debugging experiences. :-)\n      _________________________________________________________________\n \n 4.3 Bugs in the C++ language/lib specification\n \n-   Yes, unfortunately, there are some. In a [75]message to the list,\n-   Nathan Myers announced that he has started a list of problems in the\n-   ISO C++ Standard itself, especially with regard to the chapters that\n-   concern the library. The list itself is [76]posted on his website.\n-   Developers who are having problems interpreting the Standard may wish\n+   Yes,  unfortunately,  there  are  some.  In a [76]message to the list,\n+   Nathan  Myers  announced that he has started a list of problems in the\n+   ISO  C++  Standard itself, especially with regard to the chapters that\n+   concern  the  library.  The  list itself is [77]posted on his website.\n+   Developers  who are having problems interpreting the Standard may wish\n    to consult his notes.\n \n-   For those people who are not part of the ISO Library Group (i.e.,\n-   nearly all of us needing to read this page in the first place :-), a\n-   public list of the library defects is occasionally published [77]here.\n-   Some of these have resulted in [78]code changes.\n+   For  those  people  who  are  not part of the ISO Library Group (i.e.,\n+   nearly  all  of us needing to read this page in the first place :-), a\n+   public list of the library defects is occasionally published [78]here.\n+   Some of these have resulted in [79]code changes.\n      _________________________________________________________________\n \n 4.4 Things in libstdc++ that only look like bugs\n \n-   There are things which are not bugs in the compiler (4.2) nor the\n-   language specification (4.3), but aren't really bugs in libstdc++,\n+   There  are  things  which  are  not bugs in the compiler (4.2) nor the\n+   language  specification  (4.3),  but  aren't really bugs in libstdc++,\n    either. Really! Please do not report these as bugs.\n \n-   -Weffc++ The biggest of these is the quadzillions of warnings about\n-   the library headers emitted when -Weffc++ is used. Making libstdc++\n-   \"-Weffc++-clean\" is not a goal of the project, for a few reasons.\n-   Mainly, that option tries to enforce object-oriented programming,\n+   -Weffc++  The  biggest  of these is the quadzillions of warnings about\n+   the  library  headers  emitted when -Weffc++ is used. Making libstdc++\n+   \"-Weffc++-clean\"  is  not  a  goal  of the project, for a few reasons.\n+   Mainly,  that  option  tries  to  enforce object-oriented programming,\n    while the Standard Library isn't necessarily trying to be OO.\n \n-   reopening a stream fails Did I just say that -Weffc++ was our biggest\n-   false-bug report? I lied. (It used to be.) Today it seems to be\n+   reopening  a stream fails Did I just say that -Weffc++ was our biggest\n+   false-bug  report?  I  lied.  (It  used  to  be.) Today it seems to be\n    reports that after executing a sequence like\n     #include <fstream>\n     ...\n@@ -530,43 +531,43 @@ New:\n     fs.close();\n     fs.open(\"a_new_file\");\n \n-   all operations on the re-opened fs will fail, or at least act very\n-   strangely. Yes, they often will, especially if fs reached the EOF\n+   all  operations  on  the  re-opened fs will fail, or at least act very\n+   strangely.  Yes,  they  often  will,  especially if fs reached the EOF\n    state on the previous file. The reason is that the state flags are not\n    cleared on a successful call to open(). The standard unfortunately did\n-   not specify behavior in this case, and to everybody's great sorrow,\n-   the [79]proposed LWG resolution (see DR #22) is to leave the flags\n-   unchanged. You must insert a call to fs.clear() between the calls to\n-   close() and open(), and then everything will work like we all expect\n+   not  specify  behavior  in this case, and to everybody's great sorrow,\n+   the  [80]proposed  LWG  resolution  (see DR #22) is to leave the flags\n+   unchanged.  You  must insert a call to fs.clear() between the calls to\n+   close()  and  open(), and then everything will work like we all expect\n    it to work.\n \n-   rel_ops Another is the rel_ops namespace and the template comparison\n-   operator functions contained therein. If they become visible in the\n-   same namespace as other comparison functions (e.g., 'using' them and\n-   the <iterator> header), then you will suddenly be faced with huge\n-   numbers of ambiguity errors. This was discussed on the -v3 list;\n-   Nathan Myers [80]sums things up here. The collisions with\n+   rel_ops  Another  is the rel_ops namespace and the template comparison\n+   operator  functions  contained  therein. If they become visible in the\n+   same  namespace  as other comparison functions (e.g., 'using' them and\n+   the  <iterator>  header),  then  you  will suddenly be faced with huge\n+   numbers  of  ambiguity  errors.  This  was  discussed on the -v3 list;\n+   Nathan   Myers   [81]sums   things   up   here.  The  collisions  with\n    vector/string iterator types have been fixed for 3.1.\n \n   The g++-3 headers are not ours\n \n-   If you have found an extremely broken header file which is causing\n-   problems for you, look carefully before submitting a \"high\" priority\n-   bug report (which you probably shouldn't do anyhow; see the last\n-   paragraph of the page describing [81]the GCC bug database).\n+   If  you  have  found  an extremely broken header file which is causing\n+   problems  for  you, look carefully before submitting a \"high\" priority\n+   bug  report  (which  you  probably  shouldn't  do anyhow; see the last\n+   paragraph of the page describing [82]the GCC bug database).\n \n-   If the headers are in ${prefix}/include/g++-3, or if the installed\n+   If  the  headers  are  in ${prefix}/include/g++-3, or if the installed\n    library's name looks like libstdc++-2.10.a or libstdc++-libc6-2.10.so,\n-   then you are using the old libstdc++-v2 library, which is nonstandard\n-   and unmaintained. Do not report problems with -v2 to the -v3 mailing\n+   then  you are using the old libstdc++-v2 library, which is nonstandard\n+   and  unmaintained.  Do not report problems with -v2 to the -v3 mailing\n    list.\n \n-   Currently our header files are installed in ${prefix}/include/g++-v3\n-   (see the 'v'?). This may change with the next release of GCC, as it\n-   may be too confusing, but [82]the question has not yet been decided.\n+   Currently  our  header files are installed in ${prefix}/include/g++-v3\n+   (see  the  'v'?).  This may change with the next release of GCC, as it\n+   may be too confusing, but [83]the question has not yet been decided.\n \n-   glibc If you're on a GNU/Linux system and have just upgraded to glibc\n-   2.2, but are still using gcc 2.95.2, then you should have read the\n+   glibc  If you're on a GNU/Linux system and have just upgraded to glibc\n+   2.2,  but  are  still  using gcc 2.95.2, then you should have read the\n    glibc FAQ, specifically 2.34:\n 2.34.   When compiling C++ programs, I get a compilation error in streambuf.h.\n \n@@ -576,23 +577,23 @@ type has changed in glibc 2.2.  The patch is at\n http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n \n-   Note that 2.95.x shipped with the [83]old v2 library which is no\n-   longer maintained. Also note that gcc 2.95.3 fixes this problem, but\n+   Note  that  2.95.x  shipped  with  the  [84]old v2 library which is no\n+   longer  maintained.  Also note that gcc 2.95.3 fixes this problem, but\n    requires a separate patch for libstdc++-v3.\n \n    concept checks If you see compilation errors containing messages about\n-   fooConcept and a constraints member function, then most likely you\n-   have violated one of the requirements for types used during\n-   instantiation of template containers and functions. For example,\n-   EqualityComparableConcept appears if your types must be comparable\n-   with == and you have not provided this capability (a typo, or wrong\n+   fooConcept  and  a  constraints  member function, then most likely you\n+   have   violated   one  of  the  requirements  for  types  used  during\n+   instantiation  of  template  containers  and  functions.  For example,\n+   EqualityComparableConcept  appears  if  your  types must be comparable\n+   with  ==  and  you have not provided this capability (a typo, or wrong\n    visibility, or you just plain forgot, etc).\n \n-   More information, including how to optionally enable/disable the\n-   checks, is available [84]here.\n+   More  information,  including  how  to  optionally  enable/disable the\n+   checks, is available [85]here.\n \n-   dlopen/dlsym If you are using the C++ library across\n-   dynamically-loaded objects, make certain that you are passing the\n+   dlopen/dlsym    If    you   are   using   the   C++   library   across\n+   dynamically-loaded  objects,  make  certain  that  you are passing the\n    correct options when compiling and linking:\n     // compile the library components\n     g++ -fPIC -c a.cc\n@@ -609,80 +610,80 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n 4.5 Aw, that's easy to fix!\n \n-   If you have found a bug in the library and you think you have a\n-   working fix, then send it in! The main GCC site has a page on\n-   [85]submitting patches that covers the procedure, but for libstdc++\n-   you should also send the patch to our mailing list in addition to the\n-   GCC patches mailing list. The libstdc++ [86]contributors' page also\n+   If  you  have  found  a  bug  in  the library and you think you have a\n+   working  fix,  then  send  it  in!  The  main  GCC  site has a page on\n+   [86]submitting  patches  that  covers the procedure, but for libstdc++\n+   you  should also send the patch to our mailing list in addition to the\n+   GCC  patches  mailing  list. The libstdc++ [87]contributors' page also\n    talks about how to submit patches.\n \n    In addition to the description, the patch, and the ChangeLog entry, it\n    is a Good Thing if you can additionally create a small test program to\n-   test for the presence of the bug that your patch fixes. Bugs have a\n-   way of being reintroduced; if an old bug creeps back in, it will be\n-   caught immediately by the [87]testsuite -- but only if such a test\n+   test  for  the  presence of the bug that your patch fixes. Bugs have a\n+   way  of  being  reintroduced; if an old bug creeps back in, it will be\n+   caught  immediately  by  the  [88]testsuite -- but only if such a test\n    exists.\n      _________________________________________________________________\n \n                                5.0 Miscellaneous\n \n 5.1 string::iterator is not char*; vector<T>::iterator is not T*\n \n-   If you have code that depends on container<T> iterators being\n+   If  you  have  code  that  depends  on  container<T>  iterators  being\n    implemented as pointer-to-T, your code is broken.\n \n-   While there are arguments for iterators to be implemented in that\n-   manner, A) they aren't very good ones in the long term, and B) they\n+   While  there  are  arguments  for  iterators to be implemented in that\n+   manner,  A)  they  aren't very good ones in the long term, and B) they\n    were never guaranteed by the Standard anyway. The type-safety achieved\n-   by making iterators a real class rather than a typedef for T*\n+   by  making  iterators  a  real  class  rather  than  a  typedef for T*\n    outweighs nearly all opposing arguments.\n \n    Code which does assume that a vector iterator i is a pointer can often\n-   be fixed by changing i in certain expressions to &*i . Future\n-   revisions of the Standard are expected to bless this usage for\n+   be  fixed  by  changing  i  in  certain  expressions  to  &*i . Future\n+   revisions  of  the  Standard  are  expected  to  bless  this usage for\n    vector<> (but not for basic_string<>).\n      _________________________________________________________________\n \n 5.2 What's next after libstdc++-v3?\n \n-   Hopefully, not much. The goal of libstdc++-v3 is to produce a\n-   fully-compliant, fully-portable Standard Library. After that, we're\n+   Hopefully,  not  much.  The  goal  of  libstdc++-v3  is  to  produce a\n+   fully-compliant,  fully-portable  Standard  Library. After that, we're\n    mostly done: there won't be any more compliance work to do. However:\n-    1. The ISO Committee will meet periodically to review Defect Reports\n-       in the C++ Standard. Undoubtedly some of these will result in\n-       changes to the Standard, which will be reflected in patches to\n-       libstdc++. Some of that is already happening, see 4.2. Some of\n-       those changes are being predicted by the library maintainers, and\n-       we add code to the library based on what the current proposed\n-       resolution specifies. Those additions are listed in [88]the\n+    1. The  ISO Committee will meet periodically to review Defect Reports\n+       in  the  C++  Standard.  Undoubtedly  some of these will result in\n+       changes  to  the  Standard,  which will be reflected in patches to\n+       libstdc++.  Some  of  that  is already happening, see 4.2. Some of\n+       those  changes are being predicted by the library maintainers, and\n+       we  add  code  to  the  library based on what the current proposed\n+       resolution  specifies.  Those  additions  are  listed  in  [89]the\n        extensions page.\n-    2. Performance tuning. Lots of performance tuning. This too is\n-       already underway for post-3.0 releases, starting with memory\n-       expansion in container classes and buffer usage in synchronized\n+    2. Performance  tuning.  Lots  of  performance  tuning.  This  too is\n+       already  underway  for  post-3.0  releases,  starting  with memory\n+       expansion  in  container  classes and buffer usage in synchronized\n        stream objects.\n-    3. An ABI for libstdc++ is being developed, so that multiple\n-       binary-incompatible copies of the library can be replaced with a\n+    3. An  ABI  for  libstdc++  is  being  developed,  so  that  multiple\n+       binary-incompatible  copies  of the library can be replaced with a\n        single backwards-compatible library, like libgcc_s.so is.\n-    4. The current libstdc++ contains extensions to the Library which\n+    4. The  current  libstdc++  contains  extensions to the Library which\n        must be explicitly requested by client code (for example, the hash\n        tables from SGI). Other extensions may be added to libstdc++-v3 if\n-       they seem to be \"standard\" enough. (For example, the \"long long\"\n-       type from C99.) Bugfixes and rewrites (to improve or fix thread\n+       they  seem  to be \"standard\" enough. (For example, the \"long long\"\n+       type  from  C99.)  Bugfixes and rewrites (to improve or fix thread\n        safety, for instance) will of course be a continuing task.\n \n-   [89]This question about the next libstdc++ prompted some brief but\n-   interesting [90]speculation.\n+   [90]This  question  about  the  next libstdc++ prompted some brief but\n+   interesting [91]speculation.\n      _________________________________________________________________\n \n 5.3 What about the STL from SGI?\n \n-   The [91]STL from SGI, version 3.3, was the most recent merge of the\n-   STL codebase. The code in libstdc++ contains many fixes and changes,\n-   and it is very likely that the SGI code is no longer under active\n+   The  [92]STL  from  SGI, version 3.3, was the most recent merge of the\n+   STL  codebase.  The code in libstdc++ contains many fixes and changes,\n+   and  it  is  very  likely  that the SGI code is no longer under active\n    development. We expect that no future merges will take place.\n \n    In particular, string is not from SGI and makes no use of their \"rope\"\n-   class (which is included as an optional extension), nor is valarray\n+   class  (which  is  included as an optional extension), nor is valarray\n    and some others. Classes like vector<> are, however.\n \n    The FAQ for SGI's STL (one jump off of their main page) is recommended\n@@ -691,34 +692,34 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n 5.4 Extensions and Backward Compatibility\n \n-   Headers in the ext and backward subdirectories should be referred to\n+   Headers  in  the ext and backward subdirectories should be referred to\n    by their relative paths:\n       #include <ext/hash_map>\n \n-   rather than using -I or other options. This is more portable and\n-   forward-compatible. (The situation is the same as that of other\n-   headers whose directories are not searched directly, e.g.,\n+   rather  than  using  -I  or  other  options. This is more portable and\n+   forward-compatible.  (The  situation  is  the  same  as  that of other\n+   headers   whose   directories   are   not   searched  directly,  e.g.,\n    <sys/stat.h>, <X11/Xlib.h>.\n \n-   Extensions to the library have [92]their own page.\n+   Extensions to the library have [93]their own page.\n      _________________________________________________________________\n \n 5.5 [removed]\n \n-   This question has become moot and has been removed. The stub is here\n+   This  question  has become moot and has been removed. The stub is here\n    to preserve numbering (and hence links/bookmarks).\n      _________________________________________________________________\n \n 5.6 Is libstdc++-v3 thread-safe?\n \n-   When the system's libc is itself thread-safe, a non-generic\n-   implementation of atomicity.h exists for the architecture, and gcc\n-   itself reports a thread model other than single; libstdc++-v3 strives\n-   to be thread-safe. The user-code must guard against concurrent method\n-   calls which may access any particular library object's state.\n+   When   the   system's   libc  is  itself  thread-safe,  a  non-generic\n+   implementation  of  atomicity.h  exists  for the architecture, and gcc\n+   itself  reports a thread model other than single; libstdc++-v3 strives\n+   to  be thread-safe. The user-code must guard against concurrent method\n+   calls   which  may  access  any  particular  library  object's  state.\n    Typically, the application programmer may infer what object locks must\n-   be held based on the objects referenced in a method call. Without\n-   getting into great detail, here is an example which requires\n+   be  held  based  on  the  objects referenced in a method call. Without\n+   getting   into  great  detail,  here  is  an  example  which  requires\n    user-level locks:\n      library_class_a shared_object_a;\n \n@@ -732,8 +733,8 @@ a\n \n      // Multiple copies of thread_main() are started in independent threads.\n \n-   Under the assumption that object_a and object_b are never exposed to\n-   another thread, here is an example that should not require any\n+   Under  the  assumption that object_a and object_b are never exposed to\n+   another  thread,  here  is  an  example  that  should  not require any\n    user-level locks:\n      thread_main () {\n        library_class_a object_a;\n@@ -744,80 +745,80 @@ a\n \n    All library objects are safe to use in a multithreaded program as long\n    as each thread carefully locks out access by any other thread while it\n-   uses any object visible to another thread. In general, this\n-   requirement includes both read and write access to objects; unless\n-   otherwise documented as safe, do not assume that two threads may\n+   uses   any   object  visible  to  another  thread.  In  general,  this\n+   requirement  includes  both  read  and write access to objects; unless\n+   otherwise  documented  as  safe,  do  not  assume that two threads may\n    access a shared standard library object at the same time.\n \n-   See chapters [93]17 (library introduction), [94]23 (containers), and\n-   [95]27 (I/O) for more information.\n+   See  chapters  [94]17 (library introduction), [95]23 (containers), and\n+   [96]27 (I/O) for more information.\n      _________________________________________________________________\n \n 5.7 How do I get a copy of the ISO C++ Standard?\n \n-   Copies of the full ISO 14882 standard are available on line via the\n-   ISO mirror site for committee members. Non-members, or those who have\n-   not paid for the privilege of sitting on the committee and sustained\n-   their two-meeting commitment for voting rights, may get a copy of the\n+   Copies  of  the  full ISO 14882 standard are available on line via the\n+   ISO  mirror site for committee members. Non-members, or those who have\n+   not  paid  for the privilege of sitting on the committee and sustained\n+   their  two-meeting commitment for voting rights, may get a copy of the\n    standard from their respective national standards organization. In the\n    USA, this national standards organization is ANSI and their website is\n-   right [96]here. (And if you've already registered with them, clicking\n-   this link will take you to directly to the place where you can [97]buy\n+   right  [97]here. (And if you've already registered with them, clicking\n+   this link will take you to directly to the place where you can [98]buy\n    the standard on-line.\n \n-   Who is your country's member body? Visit the [98]ISO homepage and find\n+   Who is your country's member body? Visit the [99]ISO homepage and find\n    out!\n      _________________________________________________________________\n \n 5.8 What's an ABI and why is it so messy?\n \n-   \"ABI\" stands for \"Application Binary Interface.\" Conventionally, it\n-   refers to a great mass of details about how arguments are arranged on\n+   \"ABI\"  stands  for  \"Application Binary Interface.\" Conventionally, it\n+   refers  to a great mass of details about how arguments are arranged on\n    the call stack and/or in registers, and how various types are arranged\n-   and padded in structs. A single CPU design may suffer multiple ABIs\n-   designed by different development tool vendors who made different\n-   choices, or even by the same vendor for different target applications\n+   and  padded  in  structs. A single CPU design may suffer multiple ABIs\n+   designed  by  different  development  tool  vendors who made different\n+   choices,  or even by the same vendor for different target applications\n    or compiler versions. In ideal circumstances the CPU designer presents\n-   one ABI and all the OSes and compilers use it. In practice every ABI\n+   one  ABI  and all the OSes and compilers use it. In practice every ABI\n    omits details that compiler implementers (consciously or accidentally)\n    must choose for themselves.\n \n-   That ABI definition suffices for compilers to generate code so a\n+   That  ABI  definition  suffices  for  compilers  to generate code so a\n    program can interact safely with an OS and its lowest-level libraries.\n    Users usually want an ABI to encompass more detail, allowing libraries\n-   built with different compilers (or different releases of the same\n-   compiler!) to be linked together. For C++, this includes many more\n-   details than for C, and CPU designers (for good reasons elaborated\n-   below) have not stepped up to publish C++ ABIs. The details include\n-   virtual function implementation, struct inheritance layout, name\n+   built  with  different  compilers  (or  different releases of the same\n+   compiler!)  to  be  linked  together. For C++, this includes many more\n+   details  than  for  C,  and CPU designers (for good reasons elaborated\n+   below)  have  not  stepped up to publish C++ ABIs. The details include\n+   virtual  function  implementation,  struct  inheritance  layout,  name\n    mangling, and exception handling. Such an ABI has been defined for GNU\n-   C++, and is immediately useful for embedded work relying only on a\n-   \"free-standing implementation\" that doesn't include (much of) the\n+   C++,  and  is  immediately  useful for embedded work relying only on a\n+   \"free-standing  implementation\"  that  doesn't  include  (much of) the\n    standard library. It is a good basis for the work to come.\n \n-   A useful C++ ABI must also incorporate many details of the standard\n-   library implementation. For a C ABI, the layouts of a few structs\n-   (such as FILE, stat, jmpbuf, and the like) and a few macros suffice.\n-   For C++, the details include the complete set of names of functions\n-   and types used, the offsets of class members and virtual functions,\n-   and the actual definitions of all inlines. C++ exposes many more\n-   library details to the caller than C does. It makes defining a\n-   complete ABI a much bigger undertaking, and requires not just\n-   documenting library implementation details, but carefully designing\n-   those details so that future bug fixes and optimizations don't force\n+   A  useful  C++  ABI must also incorporate many details of the standard\n+   library  implementation.  For  a  C  ABI, the layouts of a few structs\n+   (such  as  FILE, stat, jmpbuf, and the like) and a few macros suffice.\n+   For  C++,  the  details include the complete set of names of functions\n+   and  types  used,  the offsets of class members and virtual functions,\n+   and  the  actual  definitions  of  all  inlines. C++ exposes many more\n+   library  details  to  the  caller  than  C  does.  It makes defining a\n+   complete  ABI  a  much  bigger  undertaking,  and  requires  not  just\n+   documenting  library  implementation  details, but carefully designing\n+   those  details  so that future bug fixes and optimizations don't force\n    breaking the ABI.\n \n    There are ways to help isolate library implementation details from the\n-   ABI, but they trade off against speed. Library details used in inner\n-   loops (e.g., getchar) must be exposed and frozen for all time, but\n-   many others may reasonably be kept hidden from user code, so they may\n+   ABI,  but  they trade off against speed. Library details used in inner\n+   loops  (e.g.,  getchar)  must  be exposed and frozen for all time, but\n+   many  others may reasonably be kept hidden from user code, so they may\n    later be changed. Deciding which, and implementing the decisions, must\n-   happen before you can reasonably document a candidate C++ ABI that\n+   happen  before  you  can  reasonably document a candidate C++ ABI that\n    encompasses the standard library.\n      _________________________________________________________________\n \n-   See [99]license.html for copying conditions. Comments and suggestions\n-   are welcome, and may be sent to [100]the libstdc++ mailing list. \n+   See [100]license.html for copying conditions. Comments and suggestions\n+   are welcome, and may be sent to [101]the libstdc++ mailing list. \n \n References\n \n@@ -870,54 +871,55 @@ References\n   47. ../faq/index.html#5_7\n   48. ../faq/index.html#5_8\n   49. http://gcc.gnu.org/libstdc++/index.html#download\n-  50. ../faq/index.html#4_4_interface\n-  51. ../17_intro/DESIGN\n-  52. http://gcc.gnu.org/\n-  53. http://gcc.gnu.org/gcc-3.0/buildstat.html\n-  54. http://gcc.gnu.org/libstdc++/\n-  55. http://gcc.gnu.org/libstdc++/index.html#download\n-  56. http://gcc.gnu.org/libstdc++/\n-  57. ../17_intro/contribute.html\n-  58. http://www.boost.org/\n-  59. http://gcc.gnu.org/fom_serv/cache/33.html\n-  60. mailto:libstdc++@gcc.gnu.org\n-  61. mailto:pme@gcc.gnu.org\n-  62. mailto:gdr@gcc.gnu.org\n-  63. ../17_intro/license.html\n-  64. ../documentation.html\n-  65. ../17_intro/RELEASE-NOTES\n-  66. http://www.gnu.org/software/cvs/cvs.html\n-  67. http://www.cvshome.org/\n-  68. ../18_support/howto.html\n-  69. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n-  70. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n-  71. http://gcc.gnu.org/install/configure.html\n-  72. http://gcc.gnu.org/install/\n-  73. http://gcc.gnu.org/bugs.html\n-  74. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n-  75. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n-  76. http://www.cantrip.org/draft-bugs.txt\n-  77. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  78. ../faq/index.html#5_2\n-  79. ../ext/howto.html#5\n-  80. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n-  81. http://gcc.gnu.org/gnatswrite.html\n-  82. http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\n-  83. ../faq/index.html#4_4_interface\n-  84. ../19_diagnostics/howto.html#3\n-  85. http://gcc.gnu.org/contribute.html\n-  86. ../17_intro/contribute.html\n-  87. ../faq/index.html#2_4\n-  88. ../ext/howto.html#5\n-  89. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n-  90. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n-  91. http://www.sgi.com/Technology/STL/\n-  92. ../ext/howto.html\n-  93. ../17_intro/howto.html#3\n-  94. ../23_containers/howto.html#3\n-  95. ../27_io/howto.html#9\n-  96. http://www.ansi.org/\n-  97. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n-  98. http://www.iso.ch/\n-  99. ../17_intro/license.html\n- 100. mailto:libstdc++@gcc.gnu.org\n+  50. ../faq/index.html#1_4\n+  51. ../faq/index.html#4_4_interface\n+  52. ../17_intro/DESIGN\n+  53. http://gcc.gnu.org/\n+  54. http://gcc.gnu.org/gcc-3.0/buildstat.html\n+  55. http://gcc.gnu.org/libstdc++/\n+  56. http://gcc.gnu.org/libstdc++/index.html#download\n+  57. http://gcc.gnu.org/libstdc++/\n+  58. ../17_intro/contribute.html\n+  59. http://www.boost.org/\n+  60. http://gcc.gnu.org/fom_serv/cache/33.html\n+  61. mailto:libstdc++@gcc.gnu.org\n+  62. mailto:pme@gcc.gnu.org\n+  63. mailto:gdr@gcc.gnu.org\n+  64. ../17_intro/license.html\n+  65. ../documentation.html\n+  66. ../17_intro/RELEASE-NOTES\n+  67. http://www.gnu.org/software/cvs/cvs.html\n+  68. http://www.cvshome.org/\n+  69. ../18_support/howto.html\n+  70. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n+  71. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n+  72. http://gcc.gnu.org/install/configure.html\n+  73. http://gcc.gnu.org/install/\n+  74. http://gcc.gnu.org/bugs.html\n+  75. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n+  76. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n+  77. http://www.cantrip.org/draft-bugs.txt\n+  78. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n+  79. ../faq/index.html#5_2\n+  80. ../ext/howto.html#5\n+  81. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n+  82. http://gcc.gnu.org/gnatswrite.html\n+  83. http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\n+  84. ../faq/index.html#4_4_interface\n+  85. ../19_diagnostics/howto.html#3\n+  86. http://gcc.gnu.org/contribute.html\n+  87. ../17_intro/contribute.html\n+  88. ../faq/index.html#2_4\n+  89. ../ext/howto.html#5\n+  90. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n+  91. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n+  92. http://www.sgi.com/Technology/STL/\n+  93. ../ext/howto.html\n+  94. ../17_intro/howto.html#3\n+  95. ../23_containers/howto.html#3\n+  96. ../27_io/howto.html#9\n+  97. http://www.ansi.org/\n+  98. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n+  99. http://www.iso.ch/\n+ 100. ../17_intro/license.html\n+ 101. mailto:libstdc++@gcc.gnu.org"}]}