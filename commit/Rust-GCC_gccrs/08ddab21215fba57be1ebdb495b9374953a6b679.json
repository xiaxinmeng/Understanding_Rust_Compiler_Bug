{"sha": "08ddab21215fba57be1ebdb495b9374953a6b679", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkZGFiMjEyMTVmYmE1N2JlMWViZGI0OTViOTM3NDk1M2E2YjY3OQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-10-13T21:43:49Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-10-13T21:43:49Z"}, "message": "re PR fortran/33254 (Diagnose different string lengths in array constructors at run time)\n\n2007-10-13  Tobias Schlueter  <tobi@gcc.gnu.org>\n    Paul Thomas  <pault@gcc.gnu.org>\n\nPR fortran/33254\nPR fortran/33727\nfortran/\n* trans-array.c (get_array_ctor_var_strlen): Check upper bound for\nconstness instead of lower bound.\n(get_array_ctor_strlen): Add bounds-checking code.\ntestsuite/\n* bounds_check_10.f90: New.\n\nCo-Authored-By: Paul Thomas <pault@gcc.gnu.org>\n\nFrom-SVN: r129286", "tree": {"sha": "6b594a4e30b35f8484ca497241d85bc81bf45595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b594a4e30b35f8484ca497241d85bc81bf45595"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08ddab21215fba57be1ebdb495b9374953a6b679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ddab21215fba57be1ebdb495b9374953a6b679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ddab21215fba57be1ebdb495b9374953a6b679", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ddab21215fba57be1ebdb495b9374953a6b679/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca94e524220617cadc4b32290474c50a0964fd46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca94e524220617cadc4b32290474c50a0964fd46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca94e524220617cadc4b32290474c50a0964fd46"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "eddaa91fb09b800f94aa4a997ab14b990292bb80", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=08ddab21215fba57be1ebdb495b9374953a6b679", "patch": "@@ -1,3 +1,12 @@\n+2007-10-13  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33254\n+\tPR fortran/33727\n+\t* trans-array.c (get_array_ctor_var_strlen): Check upper bound for\n+\tconstness instead of lower bound.\n+\t(get_array_ctor_strlen): Add bounds-checking code.\n+\n 2007-10-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/33542"}, {"sha": "4fb1fdaab5321e65c1a84dfd12d1befb98315103", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=08ddab21215fba57be1ebdb495b9374953a6b679", "patch": "@@ -1340,7 +1340,7 @@ get_array_ctor_var_strlen (gfc_expr * expr, tree * len)\n \n \tcase REF_SUBSTRING:\n \t  if (ref->u.ss.start->expr_type != EXPR_CONSTANT\n-\t\t|| ref->u.ss.start->expr_type != EXPR_CONSTANT)\n+\t      || ref->u.ss.end->expr_type != EXPR_CONSTANT)\n \t    break;\n \t  mpz_init_set_ui (char_len, 1);\n \t  mpz_add (char_len, char_len, ref->u.ss.end->value.integer);\n@@ -1413,6 +1413,7 @@ bool\n get_array_ctor_strlen (stmtblock_t *block, gfc_constructor * c, tree * len)\n {\n   bool is_const;\n+  tree first_len = NULL_TREE;\n   \n   is_const = TRUE;\n \n@@ -1447,6 +1448,23 @@ get_array_ctor_strlen (stmtblock_t *block, gfc_constructor * c, tree * len)\n \t  get_array_ctor_all_strlen (block, c->expr, len);\n \t  break;\n \t}\n+      if (flag_bounds_check)\n+\t{\n+\t  if (!first_len)\n+\t    first_len = *len;\n+\t  else\n+\t    {\n+\t      /* Verify that all constructor elements are of the same\n+\t\t length.  */\n+\t      tree cond = fold_build2 (NE_EXPR, boolean_type_node,\n+\t\t\t\t       first_len, *len);\n+\t      gfc_trans_runtime_check\n+\t\t(cond, block, &c->expr->where,\n+\t\t \"Different CHARACTER lengths (%ld/%ld) in array constructor\",\n+\t\t fold_convert (long_integer_type_node, first_len),\n+\t\t fold_convert (long_integer_type_node, *len));\n+\t    }\n+\t}\n     }\n \n   return is_const;"}, {"sha": "83f025c9a80deeb10796400327fc58f0cddfc385", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08ddab21215fba57be1ebdb495b9374953a6b679", "patch": "@@ -1,3 +1,10 @@\n+2007-10-13  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33254\n+\tPR fortran/33727\n+\t* bounds_check_10.f90: New.\n+\n 2007-10-13  David Edelsohn  <edelsohn@gnu.org>\n \n \t* gcc.target/powerpc/parity-1.c: POWER5 feature, not POWER6."}, {"sha": "02101afeacb187e49ff08cd264f5f8e12ccf7eaa", "filename": "gcc/testsuite/gfortran.dg/bounds_check_10.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ddab21215fba57be1ebdb495b9374953a6b679/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_10.f90?ref=08ddab21215fba57be1ebdb495b9374953a6b679", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! { dg-shouldfail \"Different CHARACTER lengths\" }\n+! PR fortran/33254: No bounds checking for array constructors\n+program array_char\n+implicit none\n+character (len=2) :: x, y\n+character (len=2) :: z(3)\n+x = \"a \"\n+y = \"cd\"\n+z = [y(1:1), x(1:len(trim(x)))]  ! should work\n+z = [trim(x), trim(y), \"aaaa\"] ! [ \"a\", \"cd\", \"aaaa\" ] should catch first error\n+end program array_char\n+\n+! { dg-output \"Different CHARACTER lengths .1/2. in array constructor\" }"}]}