{"sha": "27d7d0422ce932e1f531fec5de9b81bced2f369b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkN2QwNDIyY2U5MzJlMWY1MzFmZWM1ZGU5YjgxYmNlZDJmMzY5Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-24T09:15:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-24T09:15:07Z"}, "message": "re PR middle-end/28796 (__builtin_nan() and __builtin_unordered() inconsistent)\n\n2006-10-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/28796\n\t* builtins.c (fold_builtin_classify): Use HONOR_INFINITIES\n\tand HONOR_NANS instead of MODE_HAS_INFINITIES and MODE_HAS_NANS\n\tfor deciding optimizations in consistency with fold-const.c\n\t(fold_builtin_unordered_cmp): Likewise.\n\n        * gcc.dg/pr28796-1.c: New testcase.\n        * gcc.dg/pr28796-1.c: Likewise.\n\nFrom-SVN: r118001", "tree": {"sha": "7a70218041825ef460b80274878b0b9a76fd0182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a70218041825ef460b80274878b0b9a76fd0182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27d7d0422ce932e1f531fec5de9b81bced2f369b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d7d0422ce932e1f531fec5de9b81bced2f369b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d7d0422ce932e1f531fec5de9b81bced2f369b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d7d0422ce932e1f531fec5de9b81bced2f369b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1502f6e2de6e37603adb0e415a5d9847bfaf990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1502f6e2de6e37603adb0e415a5d9847bfaf990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1502f6e2de6e37603adb0e415a5d9847bfaf990"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "811fd4c16bc03fe00e86baa6631cf2f7768dc5f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27d7d0422ce932e1f531fec5de9b81bced2f369b", "patch": "@@ -1,3 +1,11 @@\n+2006-10-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/28796\n+\t* builtins.c (fold_builtin_classify): Use HONOR_INFINITIES\n+\tand HONOR_NANS instead of MODE_HAS_INFINITIES and MODE_HAS_NANS\n+\tfor deciding optimizations in consistency with fold-const.c\n+\t(fold_builtin_unordered_cmp): Likewise.\n+\n 2006-10-24  Richard Guenther  <rguenther@suse.de>\n \n \t* builtins.c (fold_builtin_floor): Fold floor (x) where"}, {"sha": "f77f8b24a1a0ce4b06549e4add8f7019095532dd", "filename": "gcc/builtins.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=27d7d0422ce932e1f531fec5de9b81bced2f369b", "patch": "@@ -8776,7 +8776,7 @@ fold_builtin_classify (tree fndecl, tree arglist, int builtin_index)\n   switch (builtin_index)\n     {\n     case BUILT_IN_ISINF:\n-      if (!MODE_HAS_INFINITIES (TYPE_MODE (TREE_TYPE (arg))))\n+      if (!HONOR_INFINITIES (TYPE_MODE (TREE_TYPE (arg))))\n \treturn omit_one_operand (type, integer_zero_node, arg);\n \n       if (TREE_CODE (arg) == REAL_CST)\n@@ -8792,8 +8792,8 @@ fold_builtin_classify (tree fndecl, tree arglist, int builtin_index)\n       return NULL_TREE;\n \n     case BUILT_IN_FINITE:\n-      if (!MODE_HAS_NANS (TYPE_MODE (TREE_TYPE (arg)))\n-\t  && !MODE_HAS_INFINITIES (TYPE_MODE (TREE_TYPE (arg))))\n+      if (!HONOR_NANS (TYPE_MODE (TREE_TYPE (arg)))\n+\t  && !HONOR_INFINITIES (TYPE_MODE (TREE_TYPE (arg))))\n \treturn omit_one_operand (type, integer_one_node, arg);\n \n       if (TREE_CODE (arg) == REAL_CST)\n@@ -8806,7 +8806,7 @@ fold_builtin_classify (tree fndecl, tree arglist, int builtin_index)\n       return NULL_TREE;\n \n     case BUILT_IN_ISNAN:\n-      if (!MODE_HAS_NANS (TYPE_MODE (TREE_TYPE (arg))))\n+      if (!HONOR_NANS (TYPE_MODE (TREE_TYPE (arg))))\n \treturn omit_one_operand (type, integer_zero_node, arg);\n \n       if (TREE_CODE (arg) == REAL_CST)\n@@ -8889,13 +8889,13 @@ fold_builtin_unordered_cmp (tree fndecl, tree arglist,\n \n   if (unordered_code == UNORDERED_EXPR)\n     {\n-      if (!MODE_HAS_NANS (TYPE_MODE (TREE_TYPE (arg0))))\n+      if (!HONOR_NANS (TYPE_MODE (TREE_TYPE (arg0))))\n \treturn omit_two_operands (type, integer_zero_node, arg0, arg1);\n       return fold_build2 (UNORDERED_EXPR, type, arg0, arg1);\n     }\n \n-  code = MODE_HAS_NANS (TYPE_MODE (TREE_TYPE (arg0))) ? unordered_code\n-\t\t\t\t\t\t      : ordered_code;\n+  code = HONOR_NANS (TYPE_MODE (TREE_TYPE (arg0))) ? unordered_code\n+\t\t\t\t\t\t   : ordered_code;\n   return fold_build1 (TRUTH_NOT_EXPR, type,\n \t\t      fold_build2 (code, type, arg0, arg1));\n }"}, {"sha": "e5533b0fd894e91d7d6d28b7d362820bf21f1d6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27d7d0422ce932e1f531fec5de9b81bced2f369b", "patch": "@@ -1,3 +1,9 @@\n+2006-10-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/28796\n+\t* gcc.dg/pr28796-1.c: New testcase.\n+\t* gcc.dg/pr28796-2.c: Likewise.\n+\n 2006-10-24  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/builtins-57.c: New testcase."}, {"sha": "a762becdafb3005123288cce08ced365f671d839", "filename": "gcc/testsuite/gcc.dg/pr28796-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28796-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28796-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28796-1.c?ref=27d7d0422ce932e1f531fec5de9b81bced2f369b", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do link } */\n+/* { dg-options \"-ffinite-math-only\" } */\n+\n+float f;\n+\n+int main()\n+{\n+  if (__builtin_isunordered (f, f) != 0)\n+    link_error ();\n+  if (__builtin_isnan (f) != 0)\n+    link_error ();\n+  if (__builtin_finite (f) != 1)\n+    link_error ();\n+  if (f != f)\n+    link_error ();\n+  return 0;\n+}"}, {"sha": "8847d78df3b941d6f5db3abc35aa8472850206da", "filename": "gcc/testsuite/gcc.dg/pr28796-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28796-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d7d0422ce932e1f531fec5de9b81bced2f369b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28796-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28796-2.c?ref=27d7d0422ce932e1f531fec5de9b81bced2f369b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -funsafe-math-optimizations\" } */\n+\n+extern void abort (void);\n+\n+void foo(float f)\n+{\n+  if (__builtin_isunordered (f, f) != 1)\n+    abort ();\n+  if (__builtin_isnan (f) != 1)\n+    abort ();\n+  if (__builtin_finite (f) != 0)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  float f = __builtin_nanf(\"\");\n+  foo(f);\n+  return 0;\n+}"}]}