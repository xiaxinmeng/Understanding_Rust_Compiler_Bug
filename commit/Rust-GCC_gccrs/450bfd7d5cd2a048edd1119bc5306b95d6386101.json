{"sha": "450bfd7d5cd2a048edd1119bc5306b95d6386101", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwYmZkN2Q1Y2QyYTA0OGVkZDExMTliYzUzMDZiOTVkNjM4NjEwMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-09-11T18:08:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-09-11T18:08:24Z"}, "message": "re PR c++/61489 (Wrong warning with -Wmissing-field-initializers.)\n\n2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61489\n\t* doc/invoke.texi ([-Wmissing-field-initializers]): Update.\n\n/cp\n2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61489\n\t* typeck2.c (process_init_constructor_record): Do not warn about\n\tmissing field initializer if EMPTY_CONSTRUCTOR_P (init).\n\n/testsuite\n2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61489\n\t* g++.dg/warn/Wmissing-field-initializers-1.C: New.\n\t* g++.old-deja/g++.other/warn5.C: Adjust.\n\nFrom-SVN: r215186", "tree": {"sha": "26b32d4a7c2b46ee245615c638135bc13711d88f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26b32d4a7c2b46ee245615c638135bc13711d88f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/450bfd7d5cd2a048edd1119bc5306b95d6386101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450bfd7d5cd2a048edd1119bc5306b95d6386101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450bfd7d5cd2a048edd1119bc5306b95d6386101", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450bfd7d5cd2a048edd1119bc5306b95d6386101/comments", "author": null, "committer": null, "parents": [{"sha": "bc138f7bee702b3cc0237add039923edda9fcc24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc138f7bee702b3cc0237add039923edda9fcc24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc138f7bee702b3cc0237add039923edda9fcc24"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "82d70dfc551fc505e5a5ba2d9eec1d94c3daaf38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -1,3 +1,8 @@\n+2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61489\n+\t* doc/invoke.texi ([-Wmissing-field-initializers]): Update.\n+\n 2014-09-11  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (aarch64_types_unop_su_qualifiers,"}, {"sha": "afefed4e62348480e7d1c979f11e9c147d10d2ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -1,3 +1,9 @@\n+2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61489\n+\t* typeck2.c (process_init_constructor_record): Do not warn about\n+\tmissing field initializer if EMPTY_CONSTRUCTOR_P (init).\n+\n 2014-09-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/63139"}, {"sha": "c6306b519aae288e3021b06beb5e4af4741f25f1", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -1359,7 +1359,8 @@ process_init_constructor_record (tree type, tree init,\n \t  next = massage_init_elt (TREE_TYPE (field), next, complain);\n \n \t  /* Warn when some struct elements are implicitly initialized.  */\n-\t  if (complain & tf_warning)\n+\t  if ((complain & tf_warning)\n+\t      && !EMPTY_CONSTRUCTOR_P (init))\n \t    warning (OPT_Wmissing_field_initializers,\n \t\t     \"missing initializer for member %qD\", field);\n \t}\n@@ -1382,7 +1383,8 @@ process_init_constructor_record (tree type, tree init,\n \n \t  /* Warn when some struct elements are implicitly initialized\n \t     to zero.  */\n-\t  if (complain & tf_warning)\n+\t  if ((complain & tf_warning)\n+\t      && !EMPTY_CONSTRUCTOR_P (init))\n \t    warning (OPT_Wmissing_field_initializers,\n \t\t     \"missing initializer for member %qD\", field);\n "}, {"sha": "68e992d1d50855e15077d50ed5d6e48b1645e715", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -4912,6 +4912,14 @@ struct s @{ int f, g, h; @};\n struct s x = @{ .f = 3, .g = 4 @};\n @end smallexample\n \n+In C++ this option does not warn either about the empty @{ @}\n+initializer, for example:\n+\n+@smallexample\n+struct s @{ int f, g, h; @};\n+s x = @{ @};\n+@end smallexample\n+\n This warning is included in @option{-Wextra}.  To get other @option{-Wextra}\n warnings without this one, use @option{-Wextra -Wno-missing-field-initializers}.\n "}, {"sha": "3f88bb66c7ee64a43b7ffa84a296f24fe451527e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -1,3 +1,9 @@\n+2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61489\n+\t* g++.dg/warn/Wmissing-field-initializers-1.C: New.\n+\t* g++.old-deja/g++.other/warn5.C: Adjust.\n+\n 2014-09-11  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/vset_lane_1.c: New test."}, {"sha": "47308d9d200c39ad78977f79f59a2f33a063708f", "filename": "gcc/testsuite/g++.dg/warn/Wmissing-field-initializers-1.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWmissing-field-initializers-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWmissing-field-initializers-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWmissing-field-initializers-1.C?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -0,0 +1,31 @@\n+// PR c++/61489\n+// { dg-options \"-Wmissing-field-initializers\" }\n+\n+struct mystruct1 {\n+  int a, b;\n+};\n+\n+struct aux2 {\n+  aux2();\n+};\n+\n+struct mystruct2 {\n+  aux2 a, b;\n+};\n+\n+struct aux3 {\n+  int x;\n+};\n+\n+struct mystruct3 {\n+  aux3 a, b;\n+};\n+\n+mystruct1 obj11 = {};\n+mystruct1 obj12 = {0};       // { dg-warning \"missing initializer\" }\n+\n+mystruct2 obj21 = {};\n+mystruct2 obj22 = {aux2()};  // { dg-warning \"missing initializer\" }\n+\n+mystruct3 obj31 = {};\n+mystruct3 obj32 = {0};       // { dg-warning \"missing initializer\" }"}, {"sha": "a4e07e8f2c57efa3562e8282fde748ae876e3487", "filename": "gcc/testsuite/g++.old-deja/g++.other/warn5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450bfd7d5cd2a048edd1119bc5306b95d6386101/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn5.C?ref=450bfd7d5cd2a048edd1119bc5306b95d6386101", "patch": "@@ -16,4 +16,4 @@ X *foo ()\n   return new X ();  // gets bogus warning\n }\n \n-X x = {};           // { dg-warning \"\" } missing initializer\n+X x = {};"}]}