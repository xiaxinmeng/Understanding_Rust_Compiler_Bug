{"sha": "3c52cd517a34b6b37eb17d4defd63bb31e60888b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M1MmNkNTE3YTM0YjZiMzdlYjE3ZDRkZWZkNjNiYjMxZTYwODg4Yg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-22T11:19:32Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-22T12:56:20Z"}, "message": "Darwin : Avoid a C++ ODR violation seen with LTO.\n\nWe have a similar code pattern in darwin-c.c to one in c-pragmas\n(most likely a cut & paste) with a struct type used locally to the\nTU.  With C++ we need to rename the type to avoid an ODR violation.\n\ngcc/ChangeLog:\n\n\t* config/darwin-c.c (struct f_align_stack): Rename\n\tto type from align_stack to f_align_stack.\n\t(push_field_alignment): Likewise.\n\t(pop_field_alignment): Likewise.", "tree": {"sha": "f7411892abebdc254d75d4de7046e3c4a12cebef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7411892abebdc254d75d4de7046e3c4a12cebef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c52cd517a34b6b37eb17d4defd63bb31e60888b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c52cd517a34b6b37eb17d4defd63bb31e60888b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c52cd517a34b6b37eb17d4defd63bb31e60888b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c52cd517a34b6b37eb17d4defd63bb31e60888b/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a97e2fcf7ca91b77686373ebfb2263a28885570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a97e2fcf7ca91b77686373ebfb2263a28885570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a97e2fcf7ca91b77686373ebfb2263a28885570"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "961723057117193b1d5503d6f3bb9de9363a4ca2", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c52cd517a34b6b37eb17d4defd63bb31e60888b/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c52cd517a34b6b37eb17d4defd63bb31e60888b/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=3c52cd517a34b6b37eb17d4defd63bb31e60888b", "patch": "@@ -44,21 +44,20 @@ static bool using_frameworks = false;\n static const char *find_subframework_header (cpp_reader *pfile, const char *header,\n \t\t\t\t\t     cpp_dir **dirp);\n \n-typedef struct align_stack\n-{\n-  int alignment;\n-  struct align_stack * prev;\n-} align_stack;\n+struct fld_align_stack {\n+  int\talignment;\n+  struct fld_align_stack * prev;\n+};\n \n-static struct align_stack * field_align_stack = NULL;\n+static struct fld_align_stack * field_align_stack;\n \n /* Maintain a small stack of alignments.  This is similar to pragma\n    pack's stack, but simpler.  */\n \n static void\n push_field_alignment (int bit_alignment)\n {\n-  align_stack *entry = XNEW (align_stack);\n+  fld_align_stack *entry = XNEW (fld_align_stack);\n \n   entry->alignment = maximum_field_alignment;\n   entry->prev = field_align_stack;\n@@ -72,7 +71,7 @@ pop_field_alignment (void)\n {\n   if (field_align_stack)\n     {\n-      align_stack *entry = field_align_stack;\n+      fld_align_stack *entry = field_align_stack;\n \n       maximum_field_alignment = entry->alignment;\n       field_align_stack = entry->prev;"}]}