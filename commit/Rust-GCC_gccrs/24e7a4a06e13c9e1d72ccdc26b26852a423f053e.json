{"sha": "24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRlN2E0YTA2ZTEzYzllMWQ3MmNjZGMyNmIyNjg1MmE0MjNmMDUzZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-01-09T21:08:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-01-09T21:08:53Z"}, "message": "trans.c (call_to_gnu): Create the temporary for the return value in the variable-sized return type...\n\n\t* gcc-interface/trans.c (call_to_gnu): Create the temporary for the\n\treturn value in the variable-sized return type case if the target is\n\tan array with fixed size.  However, do not create it if this is the\n\texpression of an object declaration.\n\nFrom-SVN: r183033", "tree": {"sha": "251ea15fe6dc8ace11d106256923db2dff8acb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/251ea15fe6dc8ace11d106256923db2dff8acb39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/comments", "author": null, "committer": null, "parents": [{"sha": "efd2e969f2571ba3e1bf9a04b88da7ee2144e1d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd2e969f2571ba3e1bf9a04b88da7ee2144e1d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd2e969f2571ba3e1bf9a04b88da7ee2144e1d9"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "15175d0caeb10e6e812aeefcac060b0c564bd758", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "patch": "@@ -1,3 +1,10 @@\n+2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (call_to_gnu): Create the temporary for the\n+\treturn value in the variable-sized return type case if the target is\n+\tan array with fixed size.  However, do not create it if this is the\n+\texpression of an object declaration.\n+\n 2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (addressable_p) <COMPONENT_REF>: Fix thinko."}, {"sha": "01fdd4968eea02f9b7d13b47597e7d3139d31267", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "patch": "@@ -3631,15 +3631,22 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target,\n     }\n \n   /* First, create the temporary for the return value if we need it: for a\n-     variable-sized return type if there is no target or if this is slice,\n-     because the gimplifier doesn't support these cases; or for a function\n-     with copy-in/copy-out parameters if there is no target, because we'll\n-     need to preserve the return value before copying back the parameters.\n-     This must be done before we push a new binding level around the call\n-     as we will pop it before copying the return value.  */\n+     variable-sized return type if there is no target and this is not an\n+     object declaration, or else there is a target and it is a slice or an\n+     array with fixed size, as the gimplifier doesn't handle these cases;\n+     otherwise for a function with copy-in/copy-out parameters if there is\n+     no target, because we need to preserve the return value before copying\n+     back the parameters.  This must be done before we push a binding level\n+     around the call as we will pop it before copying the return value.  */\n   if (function_call\n       && ((TREE_CODE (TYPE_SIZE (gnu_result_type)) != INTEGER_CST\n-\t   && (!gnu_target || TREE_CODE (gnu_target) == ARRAY_RANGE_REF))\n+\t   && ((!gnu_target\n+\t\t&& Nkind (Parent (gnat_node)) != N_Object_Declaration)\n+\t       || (gnu_target\n+\t\t   && (TREE_CODE (gnu_target) == ARRAY_RANGE_REF\n+\t\t       || (TREE_CODE (TREE_TYPE (gnu_target)) == ARRAY_TYPE\n+\t\t\t   && TREE_CODE (TYPE_SIZE (TREE_TYPE (gnu_target)))\n+\t\t\t      == INTEGER_CST)))))\n \t  || (!gnu_target && TYPE_CI_CO_LIST (gnu_subprog_type))))\n     gnu_retval = create_temporary (\"R\", gnu_result_type);\n "}, {"sha": "e9976b90e7fe4cc17715db82061a85f8655751a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "patch": "@@ -1,3 +1,8 @@\n+2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/array18.adb: New test.\n+\t* gnat.dg/array18_pkg.ads: New helper.\n+\n 2012-01-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/51791"}, {"sha": "54c7744cca9208fffa5bfe25dc72dea3e9cd9cad", "filename": "gcc/testsuite/gnat.dg/array18.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Ftestsuite%2Fgnat.dg%2Farray18.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Ftestsuite%2Fgnat.dg%2Farray18.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray18.adb?ref=24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+\n+with Array18_Pkg; use Array18_Pkg;\n+\n+procedure Array18 is\n+   A : String (1 .. 1);\n+begin\n+   A := F;\n+end;"}, {"sha": "9e441099f19322c49cd344a9085fd032214c522e", "filename": "gcc/testsuite/gnat.dg/array18_pkg.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Ftestsuite%2Fgnat.dg%2Farray18_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e7a4a06e13c9e1d72ccdc26b26852a423f053e/gcc%2Ftestsuite%2Fgnat.dg%2Farray18_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray18_pkg.ads?ref=24e7a4a06e13c9e1d72ccdc26b26852a423f053e", "patch": "@@ -0,0 +1,9 @@\n+package Array18_Pkg is\n+\n+   function N return Positive;\n+\n+   subtype S is String (1 .. N);\n+\n+   function F return S;\n+\n+end Array18_Pkg;"}]}