{"sha": "8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIyOWJkMjJkOTk2Y2NhNmZlMzllMmZjNDRiNGY4ZTEwNmNkODU3NA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-11-28T20:22:29Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-11-28T20:22:29Z"}, "message": "re PR fortran/46662 ([OOP] gfortran accepts \"CALL polymorphic%abstract_type%ppc()\")\n\n2010-11-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46662\n\t* resolve.c (update_ppc_arglist): Add check for abstract passed object.\n\n2010-11-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46662\n\t* gfortran.dg/proc_ptr_comp_pass_7.f90: New.\n\nFrom-SVN: r167225", "tree": {"sha": "f1f7d7d90c1033da9a4ebbb88e3039fc87786181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1f7d7d90c1033da9a4ebbb88e3039fc87786181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4ba38383ab9c8c7fc81c861ed6d25000c15d2d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ba38383ab9c8c7fc81c861ed6d25000c15d2d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ba38383ab9c8c7fc81c861ed6d25000c15d2d5"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "b7901ad417bb1cff1da5f667c697e5d9741fd0ea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "patch": "@@ -1,3 +1,8 @@\n+2010-11-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46662\n+\t* resolve.c (update_ppc_arglist): Add check for abstract passed object.\n+\n 2010-11-28  Paul Thomas  <pault@gcc.gnu.org>\n \n \t PR fortran/35810"}, {"sha": "9d8ee23ce8052f1e4965e5e54c7de1c0c32ae4d3", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "patch": "@@ -5383,12 +5383,21 @@ update_ppc_arglist (gfc_expr* e)\n   if (!po)\n     return FAILURE;\n \n+  /* F08:R739.  */\n   if (po->rank > 0)\n     {\n       gfc_error (\"Passed-object at %L must be scalar\", &e->where);\n       return FAILURE;\n     }\n \n+  /* F08:C611.  */\n+  if (po->ts.type == BT_DERIVED && po->ts.u.derived->attr.abstract)\n+    {\n+      gfc_error (\"Base object for procedure-pointer component call at %L is of\"\n+\t\t \" ABSTRACT type '%s'\", &e->where, po->ts.u.derived->name);\n+      return FAILURE;\n+    }\n+\n   gcc_assert (tb->pass_arg_num > 0);\n   e->value.compcall.actual = update_arglist_pass (e->value.compcall.actual, po,\n \t\t\t\t\t\t  tb->pass_arg_num,\n@@ -5413,22 +5422,24 @@ check_typebound_baseobject (gfc_expr* e)\n \n   gcc_assert (base->ts.type == BT_DERIVED || base->ts.type == BT_CLASS);\n \n+  /* F08:C611.  */\n   if (base->ts.type == BT_DERIVED && base->ts.u.derived->attr.abstract)\n     {\n       gfc_error (\"Base object for type-bound procedure call at %L is of\"\n \t\t \" ABSTRACT type '%s'\", &e->where, base->ts.u.derived->name);\n       goto cleanup;\n     }\n \n-  /* If the procedure called is NOPASS, the base object must be scalar.  */\n+  /* F08:C1230. If the procedure called is NOPASS,\n+     the base object must be scalar.  */\n   if (e->value.compcall.tbp->nopass && base->rank > 0)\n     {\n       gfc_error (\"Base object for NOPASS type-bound procedure call at %L must\"\n \t\t \" be scalar\", &e->where);\n       goto cleanup;\n     }\n \n-  /* FIXME: Remove once PR 41177 (this problem) is fixed completely.  */\n+  /* FIXME: Remove once PR 43214 is fixed (TBP with non-scalar PASS).  */\n   if (base->rank > 0)\n     {\n       gfc_error (\"Non-scalar base object at %L currently not implemented\","}, {"sha": "4a6ad47318088986309fb96a504fc868db5d5a96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "patch": "@@ -1,3 +1,8 @@\n+2010-11-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46662\n+\t* gfortran.dg/proc_ptr_comp_pass_7.f90: New.\n+\n 2010-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/aliasing2.adb (dg-final): Robustify pattern matching."}, {"sha": "a15018db34501b66ee97c1aa5b1828cda7a707d6", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_pass_7.f90", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29bd22d996cca6fe39e2fc44b4f8e106cd8574/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_7.f90?ref=8b29bd22d996cca6fe39e2fc44b4f8e106cd8574", "patch": "@@ -0,0 +1,65 @@\n+! { dg-do compile }\n+!\n+! PR 46662: [OOP] gfortran accepts \"CALL polymorphic%abstract_type%ppc()\"\n+!\n+! Contributed by Wolfgang Kilian <kilian@hep.physik.uni-siegen.de>\n+! cf. http://groups.google.com/group/comp.lang.fortran/browse_thread/thread/a0857fa4a692d518\n+\n+module types\n+  implicit none\n+\n+  type, abstract :: base_t\n+     integer :: i = 0\n+     procedure(base_write_i), pointer :: write_procptr\n+   contains\n+     procedure :: write_i => base_write_i\n+  end type base_t\n+\n+  type, extends (base_t) :: t\n+  end type t\n+\n+contains\n+\n+  subroutine base_write_i (obj)\n+    class (base_t), intent(in) :: obj\n+    print *, obj%i\n+  end subroutine base_write_i\n+\n+end module types\n+\n+\n+program main\n+  use types\n+  implicit none\n+\n+  type(t) :: obj\n+\n+  print *, \"Direct printing\"\n+  obj%i = 1\n+  print *, obj%i\n+\n+  print *, \"Direct printing via parent\"\n+  obj%base_t%i = 2\n+  print *, obj%base_t%i\n+\n+  print *, \"Printing via TBP\"\n+  obj%i = 3\n+  call obj%write_i\n+\n+  print *, \"Printing via parent TBP\"\n+  obj%base_t%i = 4\n+  call obj%base_t%write_i      ! { dg-error \"is of ABSTRACT type\" }\n+\n+  print *, \"Printing via OBP\"\n+  obj%i = 5\n+  obj%write_procptr => base_write_i\n+  call obj%write_procptr\n+\n+  print *, \"Printing via parent OBP\"\n+  obj%base_t%i = 6\n+  obj%base_t%write_procptr => base_write_i\n+  call obj%base_t%write_procptr               ! { dg-error \"is of ABSTRACT type\" }\n+\n+end program main\n+\n+! { dg-final { cleanup-modules \"types\" } }"}]}