{"sha": "ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM4N2YwZjM0NTlhNTdmMDM1MDNlNTFhZWZmYzU0YmI2ZWYzNmI5MA==", "commit": {"author": {"name": "Dmitrij Pochepko", "email": "dmitrij.pochepko@bell-sw.com", "date": "2019-10-08T21:50:05Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2019-10-08T21:50:05Z"}, "message": "re PR tree-optimization/90836 (Missing popcount pattern matching)\n\n2019-10-08  Dmitrij Pochepko <dmitrij.pochepko@bell-sw.com>\n\n\tPR tree-optimization/90836\n\t* gcc/match.pd (popcount): New pattern.\n\nFrom-SVN: r276721", "tree": {"sha": "17ab8394fbe1f478d4ccabe2f9aa8d5f28955f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17ab8394fbe1f478d4ccabe2f9aa8d5f28955f99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac87f0f3459a57f03503e51aeffc54bb6ef36b90/comments", "author": {"login": "dpochepk", "id": 60473343, "node_id": "MDQ6VXNlcjYwNDczMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/60473343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpochepk", "html_url": "https://github.com/dpochepk", "followers_url": "https://api.github.com/users/dpochepk/followers", "following_url": "https://api.github.com/users/dpochepk/following{/other_user}", "gists_url": "https://api.github.com/users/dpochepk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpochepk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpochepk/subscriptions", "organizations_url": "https://api.github.com/users/dpochepk/orgs", "repos_url": "https://api.github.com/users/dpochepk/repos", "events_url": "https://api.github.com/users/dpochepk/events{/privacy}", "received_events_url": "https://api.github.com/users/dpochepk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c3ed632601bf485335a7fe00d1db34b23ebacd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3ed632601bf485335a7fe00d1db34b23ebacd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3ed632601bf485335a7fe00d1db34b23ebacd2"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "1045a47b6b02cccbd449062a86fda8d7b53867cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac87f0f3459a57f03503e51aeffc54bb6ef36b90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac87f0f3459a57f03503e51aeffc54bb6ef36b90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "patch": "@@ -1,3 +1,8 @@\n+2019-10-08  Dmitrij Pochepko <dmitrij.pochepko@bell-sw.com>\n+\n+\tPR tree-optimization/90836\n+\t* gcc/match.pd (popcount): New pattern.\n+\n 2019-10-08  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/92026"}, {"sha": "2c82287f2164cccbef39eff8e4cae42f6c750372", "filename": "gcc/match.pd", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac87f0f3459a57f03503e51aeffc54bb6ef36b90/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac87f0f3459a57f03503e51aeffc54bb6ef36b90/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "patch": "@@ -5689,6 +5689,64 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       (cmp (popcount @0) integer_zerop)\n       (rep @0 { build_zero_cst (TREE_TYPE (@0)); }))))\n \n+#if GIMPLE\n+/* 64- and 32-bits branchless implementations of popcount are detected:\n+\n+   int popcount64c (uint64_t x)\n+   {\n+     x -= (x >> 1) & 0x5555555555555555ULL;\n+     x = (x & 0x3333333333333333ULL) + ((x >> 2) & 0x3333333333333333ULL);\n+     x = (x + (x >> 4)) & 0x0f0f0f0f0f0f0f0fULL;\n+     return (x * 0x0101010101010101ULL) >> 56;\n+   }\n+\n+   int popcount32c (uint32_t x)\n+   {\n+     x -= (x >> 1) & 0x55555555;\n+     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n+     x = (x + (x >> 4)) & 0x0f0f0f0f;\n+     return (x * 0x01010101) >> 24;\n+   }  */\n+(simplify\n+  (rshift\n+    (mult\n+      (bit_and\n+\t(plus:c\n+\t  (rshift @8 INTEGER_CST@5)\n+\t  (plus:c@8\n+\t    (bit_and @6 INTEGER_CST@7)\n+\t    (bit_and\n+\t      (rshift\n+\t\t(minus@6\n+\t\t  @0\n+\t\t  (bit_and\n+\t\t    (rshift @0 INTEGER_CST@4)\n+\t\t    INTEGER_CST@11))\n+\t      INTEGER_CST@10)\n+\t    INTEGER_CST@9)))\n+\tINTEGER_CST@3)\n+      INTEGER_CST@2)\n+    INTEGER_CST@1)\n+  /* Check constants and optab.  */\n+  (with\n+     {\n+       unsigned prec = TYPE_PRECISION (type);\n+       int shift = 64 - prec;\n+       const unsigned HOST_WIDE_INT c1 = 0x0101010101010101ULL >> shift,\n+\t\t\t\t    c2 = 0x0F0F0F0F0F0F0F0FULL >> shift,\n+\t\t\t\t    c3 = 0x3333333333333333ULL >> shift,\n+\t\t\t\t    c4 = 0x5555555555555555ULL >> shift;\n+     }\n+    (if (prec <= 64 && TYPE_UNSIGNED (type) && tree_to_uhwi (@4) == 1\n+          && tree_to_uhwi (@10) == 2 && tree_to_uhwi (@5) == 4\n+          && tree_to_uhwi (@1) == prec - 8 && tree_to_uhwi (@2) == c1\n+          && tree_to_uhwi (@3) == c2 && tree_to_uhwi (@9) == c3\n+          && tree_to_uhwi (@7) == c3 && tree_to_uhwi (@11) == c4\n+          && direct_internal_fn_supported_p (IFN_POPCOUNT, type,\n+\t    OPTIMIZE_FOR_BOTH))\n+        (convert (IFN_POPCOUNT:type @0)))))\n+#endif\n+\n /* Simplify:\n \n      a = a1 op a2"}]}