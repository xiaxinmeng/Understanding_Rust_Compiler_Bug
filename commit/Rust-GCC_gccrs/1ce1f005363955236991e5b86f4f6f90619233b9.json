{"sha": "1ce1f005363955236991e5b86f4f6f90619233b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlMWYwMDUzNjM5NTUyMzY5OTFlNWI4NmY0ZjZmOTA2MTkyMzNiOQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2008-05-26T15:50:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-26T15:50:54Z"}, "message": "exp_ch3.adb (Expand_N_Object_Declaration): Remove checks for No_Default_Initialization...\n\n2008-05-26  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Remove checks for\n\tNo_Default_Initialization, which is now delayed until the freeze point\n\tof the object. Add a comment about deferral of the check.\n\t\n\t* freeze.adb (Freeze_Entity): The check for No_Default_Initialization\n\ton objects is moved here.\n\nFrom-SVN: r135941", "tree": {"sha": "01fea713d5bd1d17b573ed1dc05f25ee213c31d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01fea713d5bd1d17b573ed1dc05f25ee213c31d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce1f005363955236991e5b86f4f6f90619233b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce1f005363955236991e5b86f4f6f90619233b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce1f005363955236991e5b86f4f6f90619233b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce1f005363955236991e5b86f4f6f90619233b9/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9019f3fcc7a4b2063fef3671cd133493acfbc7d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9019f3fcc7a4b2063fef3671cd133493acfbc7d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9019f3fcc7a4b2063fef3671cd133493acfbc7d2"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "71f09e4f3f1838dcc4b79e1942fc40ad9c94b07a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce1f005363955236991e5b86f4f6f90619233b9/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce1f005363955236991e5b86f4f6f90619233b9/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=1ce1f005363955236991e5b86f4f6f90619233b9", "patch": "@@ -4278,7 +4278,11 @@ package body Exp_Ch3 is\n \n             and then not Suppress_Init_Proc (Typ)\n          then\n-            Check_Restriction (No_Default_Initialization, N);\n+            --  Return without initializing when No_Default_Initialization\n+            --  applies. Note that the actual restriction check occurs later,\n+            --  when the object is frozen, because we don't know yet whether\n+            --  the object is imported, which is a case where the check does\n+            --  not apply.\n \n             if Restriction_Active (No_Default_Initialization) then\n                return;\n@@ -4324,7 +4328,6 @@ package body Exp_Ch3 is\n            and then not Is_Internal (Def_Id)\n            and then not Has_Init_Expression (N)\n          then\n-            Check_Restriction (No_Default_Initialization, N);\n             Set_No_Initialization (N, False);\n             Set_Expression (N, Get_Simple_Init_Val (Typ, N, Esize (Def_Id)));\n             Analyze_And_Resolve (Expression (N), Typ);"}, {"sha": "31f93985c44c492c0ef2a7e24338e244376bfc55", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce1f005363955236991e5b86f4f6f90619233b9/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce1f005363955236991e5b86f4f6f90619233b9/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=1ce1f005363955236991e5b86f4f6f90619233b9", "patch": "@@ -29,6 +29,7 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n+with Exp_Ch3;  use Exp_Ch3;\n with Exp_Ch7;  use Exp_Ch7;\n with Exp_Disp; use Exp_Disp;\n with Exp_Pakd; use Exp_Pakd;\n@@ -2651,10 +2652,31 @@ package body Freeze is\n \n                Validate_Object_Declaration (Declaration_Node (E));\n \n-               --  If there is an address clause, check it is valid\n+               --  If there is an address clause, check that it is valid\n \n                Check_Address_Clause (E);\n \n+               --  If the object needs any kind of default initialization, an\n+               --  error must be issued if No_Default_Initialization applies.\n+               --  The check doesn't apply to imported objects, which are not\n+               --  ever default initialized, and is why the check is deferred\n+               --  until freezing, at which point we know if Import applies.\n+\n+               if not Is_Imported (E)\n+                 and then not Has_Init_Expression (Declaration_Node (E))\n+                 and then\n+                   ((Has_Non_Null_Base_Init_Proc (Etype (E))\n+                      and then not No_Initialization (Declaration_Node (E))\n+                      and then not Is_Value_Type (Etype (E))\n+                      and then not Suppress_Init_Proc (Etype (E)))\n+                    or else\n+                      (Needs_Simple_Initialization (Etype (E))\n+                        and then not Is_Internal (E)))\n+               then\n+                  Check_Restriction\n+                    (No_Default_Initialization, Declaration_Node (E));\n+               end if;\n+\n                --  For imported objects, set Is_Public unless there is also an\n                --  address clause, which means that there is no external symbol\n                --  needed for the Import (Is_Public may still be set for other"}]}