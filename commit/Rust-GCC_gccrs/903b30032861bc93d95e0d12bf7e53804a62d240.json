{"sha": "903b30032861bc93d95e0d12bf7e53804a62d240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzYjMwMDMyODYxYmM5M2Q5NWUwZDEyYmY3ZTUzODA0YTYyZDI0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-08T09:53:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-08T09:53:52Z"}, "message": "re PR tree-optimization/35834 (building libiberty fails in build2_stat for -mcpu=m32c as of r133403)\n\n2008-04-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/35834\n\t* tree-ssa-address.c (create_mem_ref): Use POINTER_PLUS_EXPR\n\tfor adding index to base.\n\nFrom-SVN: r134090", "tree": {"sha": "6e0c149b6f8ca00cbe90a95deb0f77227f6eaac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e0c149b6f8ca00cbe90a95deb0f77227f6eaac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/903b30032861bc93d95e0d12bf7e53804a62d240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903b30032861bc93d95e0d12bf7e53804a62d240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/903b30032861bc93d95e0d12bf7e53804a62d240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903b30032861bc93d95e0d12bf7e53804a62d240/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b03b302ae4b9a2785e5011f5fa4c2c198a8eb4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b03b302ae4b9a2785e5011f5fa4c2c198a8eb4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b03b302ae4b9a2785e5011f5fa4c2c198a8eb4b"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "215cc83eb7a7011782ed5e1fc9fb06c3292f54d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903b30032861bc93d95e0d12bf7e53804a62d240/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903b30032861bc93d95e0d12bf7e53804a62d240/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=903b30032861bc93d95e0d12bf7e53804a62d240", "patch": "@@ -1,3 +1,9 @@\n+2008-04-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35834\n+\t* tree-ssa-address.c (create_mem_ref): Use POINTER_PLUS_EXPR\n+\tfor adding index to base.\n+\n 2008-04-08  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config/i386/mingw32.h (ENABLE_EXECUTE_STACK): New."}, {"sha": "a5119d8c2bde5d53c854aa227c890554a62d77c9", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903b30032861bc93d95e0d12bf7e53804a62d240/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903b30032861bc93d95e0d12bf7e53804a62d240/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=903b30032861bc93d95e0d12bf7e53804a62d240", "patch": "@@ -640,9 +640,9 @@ create_mem_ref (block_stmt_iterator *bsi, tree type, aff_tree *addr)\n \t{\n \t  atype = TREE_TYPE (parts.base);\n \t  parts.base = force_gimple_operand_bsi (bsi,\n-\t\t\tfold_build2 (PLUS_EXPR, atype,\n+\t\t\tfold_build2 (POINTER_PLUS_EXPR, atype,\n \t\t\t\t     parts.base,\n-\t\t\t    \t     fold_convert (atype, parts.index)),\n+\t\t\t    \t     parts.index),\n \t\t\ttrue, NULL_TREE, true, BSI_SAME_STMT);\n \t}\n       else"}]}