{"sha": "8993fde43241743b76372651364048d45ce2309e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5M2ZkZTQzMjQxNzQzYjc2MzcyNjUxMzY0MDQ4ZDQ1Y2UyMzA5ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-03-05T20:12:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-03-05T20:12:14Z"}, "message": "arm: Enable umull and ctz in longlong.h\n\n        * longlong.h [ARM] (umul_ppmm): Use umull for arm3m and later.\n        [ARM] (count_trailing_zeros): Use the builtin.\n\nFrom-SVN: r184957", "tree": {"sha": "77d460d8d56b319fade9b98a0b799c0597328876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77d460d8d56b319fade9b98a0b799c0597328876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8993fde43241743b76372651364048d45ce2309e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8993fde43241743b76372651364048d45ce2309e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8993fde43241743b76372651364048d45ce2309e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8993fde43241743b76372651364048d45ce2309e/comments", "author": null, "committer": null, "parents": [{"sha": "4999c62c838dde11b309da746a563b684fe325ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4999c62c838dde11b309da746a563b684fe325ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4999c62c838dde11b309da746a563b684fe325ea"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "e2452c1da3bbd6fcf349cd4ba5156a944c59d49c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8993fde43241743b76372651364048d45ce2309e/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8993fde43241743b76372651364048d45ce2309e/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8993fde43241743b76372651364048d45ce2309e", "patch": "@@ -1,3 +1,8 @@\n+2012-03-05  Richard Henderson  <rth@redhat.com>\n+\n+\t* longlong.h [ARM] (umul_ppmm): Use umull for arm3m and later.\n+\t[ARM] (count_trailing_zeros): Use the builtin.\n+\n 2012-03-01  Kai Tietz  <ktietz@redhat.com>\n \n \t* soft-fp: Imported from glibc upstream."}, {"sha": "1a839dd0d302069c880f398fd6f4503aa52c863b", "filename": "libgcc/longlong.h", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8993fde43241743b76372651364048d45ce2309e/libgcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8993fde43241743b76372651364048d45ce2309e/libgcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flonglong.h?ref=8993fde43241743b76372651364048d45ce2309e", "patch": "@@ -220,9 +220,12 @@ UDItype __umulsidi3 (USItype, USItype);\n \t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"r\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype) (bl)) __CLOBBER_CC)\n-#define umul_ppmm(xh, xl, a, b) \\\n-{register USItype __t0, __t1, __t2;\t\t\t\t\t\\\n-  __asm__ (\"%@ Inlined umul_ppmm\\n\"\t\t\t\t\t\\\n+# if defined(__ARM_ARCH_2__) || defined(__ARM_ARCH_2A__) \\\n+     || defined(__ARM_ARCH_3__)\n+#  define umul_ppmm(xh, xl, a, b)\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    register USItype __t0, __t1, __t2;\t\t\t\t\t\\\n+    __asm__ (\"%@ Inlined umul_ppmm\\n\"\t\t\t\t\t\\\n \t   \"\tmov\t%2, %5, lsr #16\\n\"\t\t\t\t\\\n \t   \"\tmov\t%0, %6, lsr #16\\n\"\t\t\t\t\\\n \t   \"\tbic\t%3, %5, %2, lsl #16\\n\"\t\t\t\t\\\n@@ -239,14 +242,26 @@ UDItype __umulsidi3 (USItype, USItype);\n \t     \"=r\" ((USItype) (xl)),\t\t\t\t\t\\\n \t     \"=&r\" (__t0), \"=&r\" (__t1), \"=r\" (__t2)\t\t\t\\\n \t   : \"r\" ((USItype) (a)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (b)) __CLOBBER_CC );}\n-#define UMUL_TIME 20\n-#define UDIV_TIME 100\n+\t     \"r\" ((USItype) (b)) __CLOBBER_CC );\t\t\t\\\n+  } while (0)\n+#  define UMUL_TIME 20\n+# else\n+#  define umul_ppmm(xh, xl, a, b)\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    /* Generate umull, under compiler control.  */\t\t\t\\\n+    register UDItype __t0 = (UDItype)(USItype)(a) * (USItype)(b);\t\\\n+    (xl) = (USItype)__t0;\t\t\t\t\t\t\\\n+    (xh) = (USItype)(__t0 >> 32);\t\t\t\t\t\\\n+  } while (0)\n+#  define UMUL_TIME 3\n+# endif\n+# define UDIV_TIME 100\n #endif /* __arm__ */\n \n #if defined(__arm__)\n /* Let gcc decide how best to implement count_leading_zeros.  */\n #define count_leading_zeros(COUNT,X)\t((COUNT) = __builtin_clz (X))\n+#define count_trailing_zeros(COUNT,X)   ((COUNT) = __builtin_ctz (X))\n #define COUNT_LEADING_ZEROS_0 32\n #endif\n "}]}