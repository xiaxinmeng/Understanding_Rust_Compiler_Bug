{"sha": "51041a8937f4576cbe78ab764618e72b94feb50c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwNDFhODkzN2Y0NTc2Y2JlNzhhYjc2NDYxOGU3MmI5NGZlYjUwYw==", "commit": {"author": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1992-05-28T20:30:28Z"}, "committer": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1992-05-28T20:30:28Z"}, "message": "entered into RCS\n\nFrom-SVN: r1116", "tree": {"sha": "d9848e0b84a49f58880da0a4612477897188a9b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9848e0b84a49f58880da0a4612477897188a9b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51041a8937f4576cbe78ab764618e72b94feb50c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51041a8937f4576cbe78ab764618e72b94feb50c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51041a8937f4576cbe78ab764618e72b94feb50c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51041a8937f4576cbe78ab764618e72b94feb50c/comments", "author": null, "committer": null, "parents": [{"sha": "7c546c94de5d0b784b8c3b44d5ec2d4bf88cec4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c546c94de5d0b784b8c3b44d5ec2d4bf88cec4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c546c94de5d0b784b8c3b44d5ec2d4bf88cec4c"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "07ccd16437b138cd8689ccff0daa7ad8b0cad380", "filename": "gcc/README.TRAD", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51041a8937f4576cbe78ab764618e72b94feb50c/gcc%2FREADME.TRAD", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51041a8937f4576cbe78ab764618e72b94feb50c/gcc%2FREADME.TRAD", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.TRAD?ref=51041a8937f4576cbe78ab764618e72b94feb50c", "patch": "@@ -0,0 +1,55 @@\n+This is a partial list of how `gcc -traditional' disagrees with\n+traditional C compilers (perhaps only some of them).  Most of these\n+differences are not bugs.\n+\n+---------------------------------------------------------------------------\n+K&R-1 (2.4.3) says:\n+\n+\t\"If the character following a backslash is not one of those\n+\tspecified {in the table above}, the backslash is ignored.\"\n+\n+Up until recently, `gcc -traditional' complained about \\x \\a and \\v\n+appearing in a character or string literal.  I believe however that\n+this non-feature has been eliminated (recently).\n+\n+---------------------------------------------------------------------------\n+When in -traditional mode, gcc allows the following erroneous pair of\n+declarations to appear together in a given scope:\n+\n+\ttypedef int foo;\n+\ttypedef foo foo;\n+\n+---------------------------------------------------------------------------\n+K&R-1 (8.5) says:\n+\n+\t\"No field may be wider than a word.\"\n+\n+Gcc however allows:\n+\n+\tstruct S { int i:33; };\n+\n+---------------------------------------------------------------------------\n+In K&R-1 there is no restriction against comments crossing include file\n+boundaries.  Gcc however doesn't allow this, even when in -traditional mode.\n+\n+---------------------------------------------------------------------------\n+Regarding the length of identifiers, K&R-1 (2.2) says:\n+\n+\t\"No more than the first eight characters are significant,\n+\talthough more may be used.\"\n+\n+Gcc treats all characters of identifiers as significant, even when in\n+-traditional mode.\n+\n+---------------------------------------------------------------------------\n+K&R-1 (2.2) says:\n+\n+\t\"An identifier is a sequence of letters and digits; the first\n+\tcharacter must be a letter.  The underscore _ counts as a letter.\"\n+\n+Gcc also allows dollar signs in identifiers.  (This may also be an issue\n+for the -pedantic option.)\n+\n+---------------------------------------------------------------------------\n+\n+"}]}