{"sha": "8e3cce32349c578ffd02306f3f16e0c78ba161d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzY2NlMzIzNDljNTc4ZmZkMDIzMDZmM2YxNmUwYzc4YmExNjFkMw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-10-03T17:17:39Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2002-10-03T17:17:39Z"}, "message": "InetAddress.java (class InetAddress): Removed final keyword.\n\n2002-10-03  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetAddress.java\n\t(class InetAddress): Removed final keyword.\n\t(equals): Fixed typo.\n\t(getByAddress): New method.\n\nFrom-SVN: r57779", "tree": {"sha": "c0d1c4c8a1b42f1f8f57815e6d86959c5be2b5f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0d1c4c8a1b42f1f8f57815e6d86959c5be2b5f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e3cce32349c578ffd02306f3f16e0c78ba161d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3cce32349c578ffd02306f3f16e0c78ba161d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3cce32349c578ffd02306f3f16e0c78ba161d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3cce32349c578ffd02306f3f16e0c78ba161d3/comments", "author": null, "committer": null, "parents": [{"sha": "bfc1eae300993c406f0a0cb67c10b22c06a7c993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc1eae300993c406f0a0cb67c10b22c06a7c993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfc1eae300993c406f0a0cb67c10b22c06a7c993"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "df909edde735d2f3b4282ff6667b0fdc53124122", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3cce32349c578ffd02306f3f16e0c78ba161d3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3cce32349c578ffd02306f3f16e0c78ba161d3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8e3cce32349c578ffd02306f3f16e0c78ba161d3", "patch": "@@ -1,3 +1,10 @@\n+2002-10-03  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetAddress.java\n+\t(class InetAddress): Removed final keyword.\n+\t(equals): Fixed typo.\n+\t(getByAddress): New method.\n+\n 2002-10-03  Michael Koch  <konqueror@gmx.de>\n \n \t* java/awt/dnd/Autoscroll.java:"}, {"sha": "91e34909cfc48f4b981f7e3ddc6fe04201214482", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3cce32349c578ffd02306f3f16e0c78ba161d3/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3cce32349c578ffd02306f3f16e0c78ba161d3/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=8e3cce32349c578ffd02306f3f16e0c78ba161d3", "patch": "@@ -23,9 +23,11 @@\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n  * (The latter turns out to have some errors ...)\n  * Status:  Believed complete and correct.\n+ *\n+ * @specnote This class is not final since JK 1.4\n  */\n \n-public final class InetAddress implements java.io.Serializable\n+public class InetAddress implements java.io.Serializable\n {\n   // The Serialized Form specifies that an int 'address' is saved/restored.\n   // This class uses a byte array internally so we'll just do the conversion\n@@ -190,7 +192,7 @@ public boolean equals (Object obj)\n     // multiple names instances of InetAddress for different name of\n     // that same machine are not equal.  This is because they have\n     // different host names.\"  This violates the description in the\n-    // JDK 1.2 API documentation.  A little experiementation\n+    // JDK 1.2 API documentation.  A little experimentation\n     // shows that the latter is correct.\n     byte[] addr1 = addr;\n     byte[] addr2 = ((InetAddress) obj).addr;\n@@ -206,7 +208,27 @@ public String toString()\n   {\n     return getHostName()+'/'+getHostAddress();\n   }\n+  \n+  /**\n+   * Returns an InetAddress object given the raw IP address.\n+   *\n+   * The argument is in network byte order: the highest order byte of the\n+   * address is in getAddress()[0].\n+   *\n+   * @exception UnknownHostException If no IP address for the host could\n+   * be found\n+   *\n+   * @since 1.4\n+   */\n+  public static InetAddress getByAddress(byte[] addr)\n+    throws UnknownHostException\n+  {\n+    if (addr.length != 4 && addr.length != 16)\n+      throw new UnknownHostException (\"IP address has illegal length\");\n \n+    return new InetAddress (addr, \"\");\n+  }\n+  \n   /** If host is a valid numeric IP address, return the numeric address.\n    * Otherwise, return null. */\n   private static native byte[] aton (String host);"}]}