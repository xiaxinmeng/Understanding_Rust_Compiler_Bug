{"sha": "beeda1d9c4518d0d6ef02db935720c9628b82b6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlZGExZDljNDUxOGQwZDZlZjAyZGI5MzU3MjBjOTYyOGI4MmI2ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-03-21T07:16:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-03-21T07:16:06Z"}, "message": "configure.ac: Move BUILD_CONFIG set up earlier.\n\n\t* configure.ac: Move BUILD_CONFIG set up earlier.  Add\n\t--enable-vtable-verify option parsing.  Don't add\n\ttarget-libsanitizer to bootstrap_target_libs unless\n\t--with-build-config=bootstrap-asan or\n\t--with-build-config=bootstrap-ubsan.  Don't add target-libvtv\n\tto bootstrap_target_libs unless --enable-vtable-verify.\n\t* configure: Regenerated.\n\nFrom-SVN: r208745", "tree": {"sha": "f22ab5788ac690e1b78ba761111b64b7fae3b523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f22ab5788ac690e1b78ba761111b64b7fae3b523"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beeda1d9c4518d0d6ef02db935720c9628b82b6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beeda1d9c4518d0d6ef02db935720c9628b82b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beeda1d9c4518d0d6ef02db935720c9628b82b6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beeda1d9c4518d0d6ef02db935720c9628b82b6e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6499b5d25e1606439a19d69b77b24d64ec79f92d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6499b5d25e1606439a19d69b77b24d64ec79f92d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6499b5d25e1606439a19d69b77b24d64ec79f92d"}], "stats": {"total": 257, "additions": 155, "deletions": 102}, "files": [{"sha": "2d50b501be0176d9967acb19671bfacd06447e74", "filename": "ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeda1d9c4518d0d6ef02db935720c9628b82b6e/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeda1d9c4518d0d6ef02db935720c9628b82b6e/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=beeda1d9c4518d0d6ef02db935720c9628b82b6e", "patch": "@@ -1,3 +1,13 @@\n+2014-03-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Move BUILD_CONFIG set up earlier.  Add\n+\t--enable-vtable-verify option parsing.  Don't add\n+\ttarget-libsanitizer to bootstrap_target_libs unless\n+\t--with-build-config=bootstrap-asan or\n+\t--with-build-config=bootstrap-ubsan.  Don't add target-libvtv\n+\tto bootstrap_target_libs unless --enable-vtable-verify.\n+\t* configure: Regenerated.\n+\n 2014-03-10  Anatoly Sokolov <aesok@post.ru>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "1c9e5cb6c24f3530a46c01a7c4c7d3cb4eea4c53", "filename": "configure", "status": "modified", "additions": 78, "deletions": 53, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeda1d9c4518d0d6ef02db935720c9628b82b6e/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeda1d9c4518d0d6ef02db935720c9628b82b6e/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=beeda1d9c4518d0d6ef02db935720c9628b82b6e", "patch": "@@ -783,6 +783,7 @@ enable_objc_gc\n with_build_sysroot\n with_debug_prefix_map\n with_build_config\n+enable_vtable_verify\n enable_serial_configure\n with_build_time_tools\n enable_maintainer_mode\n@@ -1481,6 +1482,7 @@ Optional Features:\n                           Mostly useful for compiler development\n   --enable-objc-gc        enable use of Boehm's garbage collector with the GNU\n                           Objective-C runtime\n+  --enable-vtable-verify    Enable vtable verification feature\n   --enable-serial-[{host,target,build}-]configure\n                           force sequential configuration of sub-packages for\n                           the host, target or build machine, or all\n@@ -7092,6 +7094,71 @@ else\n   GCC_SHLIB_SUBDIR=\n fi\n \n+# Adjust the toplevel makefile according to whether bootstrap was selected.\n+case $enable_bootstrap in\n+  yes)\n+    bootstrap_suffix=bootstrap\n+    BUILD_CONFIG=bootstrap-debug\n+    ;;\n+  no)\n+    bootstrap_suffix=no-bootstrap\n+    BUILD_CONFIG=\n+    ;;\n+esac\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for default BUILD_CONFIG\" >&5\n+$as_echo_n \"checking for default BUILD_CONFIG... \" >&6; }\n+\n+\n+# Check whether --with-build-config was given.\n+if test \"${with_build_config+set}\" = set; then :\n+  withval=$with_build_config; case $with_build_config in\n+   yes) with_build_config= ;;\n+   no) with_build_config= BUILD_CONFIG= ;;\n+   esac\n+fi\n+\n+\n+if test \"x${with_build_config}\" != x; then\n+  BUILD_CONFIG=$with_build_config\n+else\n+  case $BUILD_CONFIG in\n+  bootstrap-debug)\n+    if echo \"int f (void) { return 0; }\" > conftest.c &&\n+       ${CC} -c conftest.c &&\n+       mv conftest.o conftest.o.g0 &&\n+       ${CC} -c -g conftest.c &&\n+       mv conftest.o conftest.o.g &&\n+       ${srcdir}/contrib/compare-debug conftest.o.g0 conftest.o.g > /dev/null 2>&1; then\n+      :\n+    else\n+      BUILD_CONFIG=\n+    fi\n+    rm -f conftest.c conftest.o conftest.o.g0 conftest.o.g\n+    ;;\n+  esac\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $BUILD_CONFIG\" >&5\n+$as_echo \"$BUILD_CONFIG\" >&6; }\n+\n+\n+# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-vtable-verify\" >&5\n+$as_echo_n \"checking for --enable-vtable-verify... \" >&6; }\n+# Check whether --enable-vtable-verify was given.\n+if test \"${enable_vtable_verify+set}\" = set; then :\n+  enableval=$enable_vtable_verify; case \"$enableval\" in\n+ yes) enable_vtable_verify=yes ;;\n+ no)  enable_vtable_verify=no ;;\n+ *)   enable_vtable_verify=no;;\n+ esac\n+else\n+  enable_vtable_verify=no\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_vtable_verify\" >&5\n+$as_echo \"$enable_vtable_verify\" >&6; }\n+\n # Record target_configdirs and the configure arguments for target and\n # build configuration in Makefile.\n target_configdirs=`echo \"${target_configdirs}\" | sed -e 's/target-//g'`\n@@ -7102,13 +7169,19 @@ if echo \" ${target_configdirs} \" | grep \" libgomp \" > /dev/null 2>&1 ; then\n   bootstrap_target_libs=${bootstrap_target_libs}target-libgomp,\n fi\n \n-# If we are building libsanitizer, bootstrap it.\n-if echo \" ${target_configdirs} \" | grep \" libsanitizer \" > /dev/null 2>&1 ; then\n-  bootstrap_target_libs=${bootstrap_target_libs}target-libsanitizer,\n+# If we are building libsanitizer and $BUILD_CONFIG contains bootstrap-asan\n+# or bootstrap-ubsan, bootstrap it.\n+if echo \" ${target_configdirs} \" | grep \" libsanitizer \" > /dev/null 2>&1; then\n+  case \"$BUILD_CONFIG\" in\n+    *bootstrap-asan* | *bootstrap-ubsan* )\n+      bootstrap_target_libs=${bootstrap_target_libs}target-libsanitizer,\n+      ;;\n+  esac\n fi\n \n-# If we are building libvtv, bootstrap it.\n-if echo \" ${target_configdirs} \" | grep \" libvtv \" > /dev/null 2>&1 ; then\n+# If we are building libvtv and --enable-vtable-verify, bootstrap it.\n+if echo \" ${target_configdirs} \" | grep \" libvtv \" > /dev/null 2>&1 &&\n+   test \"$enable_vtable_verify\" != no; then\n   bootstrap_target_libs=${bootstrap_target_libs}target-libvtv,\n fi\n \n@@ -7161,54 +7234,6 @@ case \"$enable_bootstrap:$ENABLE_GOLD: $configdirs :,$stage1_languages,\" in\n     ;;\n esac\n \n-# Adjust the toplevel makefile according to whether bootstrap was selected.\n-case $enable_bootstrap in\n-  yes)\n-    bootstrap_suffix=bootstrap\n-    BUILD_CONFIG=bootstrap-debug\n-    ;;\n-  no)\n-    bootstrap_suffix=no-bootstrap\n-    BUILD_CONFIG=\n-    ;;\n-esac\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for default BUILD_CONFIG\" >&5\n-$as_echo_n \"checking for default BUILD_CONFIG... \" >&6; }\n-\n-\n-# Check whether --with-build-config was given.\n-if test \"${with_build_config+set}\" = set; then :\n-  withval=$with_build_config; case $with_build_config in\n-   yes) with_build_config= ;;\n-   no) with_build_config= BUILD_CONFIG= ;;\n-   esac\n-fi\n-\n-\n-if test \"x${with_build_config}\" != x; then\n-  BUILD_CONFIG=$with_build_config\n-else\n-  case $BUILD_CONFIG in\n-  bootstrap-debug)\n-    if echo \"int f (void) { return 0; }\" > conftest.c &&\n-       ${CC} -c conftest.c &&\n-       mv conftest.o conftest.o.g0 &&\n-       ${CC} -c -g conftest.c &&\n-       mv conftest.o conftest.o.g &&\n-       ${srcdir}/contrib/compare-debug conftest.o.g0 conftest.o.g > /dev/null 2>&1; then\n-      :\n-    else\n-      BUILD_CONFIG=\n-    fi\n-    rm -f conftest.c conftest.o conftest.o.g0 conftest.o.g\n-    ;;\n-  esac\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $BUILD_CONFIG\" >&5\n-$as_echo \"$BUILD_CONFIG\" >&6; }\n-\n-\n extrasub_build=\n for module in ${build_configdirs} ; do\n   if test -z \"${no_recursion}\" \\"}, {"sha": "b65bdeecf6db18370dee1e539a17a154aaabfdd6", "filename": "configure.ac", "status": "modified", "additions": 67, "deletions": 49, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeda1d9c4518d0d6ef02db935720c9628b82b6e/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeda1d9c4518d0d6ef02db935720c9628b82b6e/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=beeda1d9c4518d0d6ef02db935720c9628b82b6e", "patch": "@@ -2472,6 +2472,62 @@ else\n   GCC_SHLIB_SUBDIR=\n fi\n \n+# Adjust the toplevel makefile according to whether bootstrap was selected.\n+case $enable_bootstrap in\n+  yes)\n+    bootstrap_suffix=bootstrap\n+    BUILD_CONFIG=bootstrap-debug\n+    ;;\n+  no)\n+    bootstrap_suffix=no-bootstrap\n+    BUILD_CONFIG=\n+    ;;\n+esac\n+\n+AC_MSG_CHECKING(for default BUILD_CONFIG)\n+\n+AC_ARG_WITH([build-config],\n+  [AS_HELP_STRING([--with-build-config='NAME NAME2...'],\n+\t\t  [use config/NAME.mk build configuration])],\n+  [case $with_build_config in\n+   yes) with_build_config= ;;\n+   no) with_build_config= BUILD_CONFIG= ;;\n+   esac])\n+\n+if test \"x${with_build_config}\" != x; then\n+  BUILD_CONFIG=$with_build_config\n+else\n+  case $BUILD_CONFIG in\n+  bootstrap-debug)\n+    if echo \"int f (void) { return 0; }\" > conftest.c &&\n+       ${CC} -c conftest.c &&\n+       mv conftest.o conftest.o.g0 &&\n+       ${CC} -c -g conftest.c &&\n+       mv conftest.o conftest.o.g &&\n+       ${srcdir}/contrib/compare-debug conftest.o.g0 conftest.o.g > /dev/null 2>&1; then\n+      :\n+    else\n+      BUILD_CONFIG=\n+    fi\n+    rm -f conftest.c conftest.o conftest.o.g0 conftest.o.g\n+    ;;\n+  esac\n+fi\n+AC_MSG_RESULT($BUILD_CONFIG)\n+AC_SUBST(BUILD_CONFIG)\n+\n+# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n+AC_MSG_CHECKING([for --enable-vtable-verify])\n+AC_ARG_ENABLE(vtable-verify,\n+[  --enable-vtable-verify    Enable vtable verification feature ],\n+[case \"$enableval\" in\n+ yes) enable_vtable_verify=yes ;;\n+ no)  enable_vtable_verify=no ;;\n+ *)   enable_vtable_verify=no;;\n+ esac],\n+[enable_vtable_verify=no])\n+AC_MSG_RESULT($enable_vtable_verify)\n+\n # Record target_configdirs and the configure arguments for target and\n # build configuration in Makefile.\n target_configdirs=`echo \"${target_configdirs}\" | sed -e 's/target-//g'`\n@@ -2482,13 +2538,19 @@ if echo \" ${target_configdirs} \" | grep \" libgomp \" > /dev/null 2>&1 ; then\n   bootstrap_target_libs=${bootstrap_target_libs}target-libgomp,\n fi\n \n-# If we are building libsanitizer, bootstrap it.\n-if echo \" ${target_configdirs} \" | grep \" libsanitizer \" > /dev/null 2>&1 ; then\n-  bootstrap_target_libs=${bootstrap_target_libs}target-libsanitizer,\n+# If we are building libsanitizer and $BUILD_CONFIG contains bootstrap-asan\n+# or bootstrap-ubsan, bootstrap it.\n+if echo \" ${target_configdirs} \" | grep \" libsanitizer \" > /dev/null 2>&1; then\n+  case \"$BUILD_CONFIG\" in\n+    *bootstrap-asan* | *bootstrap-ubsan* )\n+      bootstrap_target_libs=${bootstrap_target_libs}target-libsanitizer,\n+      ;;\n+  esac\n fi\n \n-# If we are building libvtv, bootstrap it.\n-if echo \" ${target_configdirs} \" | grep \" libvtv \" > /dev/null 2>&1 ; then\n+# If we are building libvtv and --enable-vtable-verify, bootstrap it.\n+if echo \" ${target_configdirs} \" | grep \" libvtv \" > /dev/null 2>&1 &&\n+   test \"$enable_vtable_verify\" != no; then\n   bootstrap_target_libs=${bootstrap_target_libs}target-libvtv,\n fi\n \n@@ -2541,50 +2603,6 @@ case \"$enable_bootstrap:$ENABLE_GOLD: $configdirs :,$stage1_languages,\" in\n     ;;\n esac\n \n-# Adjust the toplevel makefile according to whether bootstrap was selected.\n-case $enable_bootstrap in\n-  yes)\n-    bootstrap_suffix=bootstrap\n-    BUILD_CONFIG=bootstrap-debug\n-    ;;\n-  no)\n-    bootstrap_suffix=no-bootstrap\n-    BUILD_CONFIG=\n-    ;;\n-esac\n-\n-AC_MSG_CHECKING(for default BUILD_CONFIG)\n-\n-AC_ARG_WITH([build-config],\n-  [AS_HELP_STRING([--with-build-config='NAME NAME2...'],\n-\t\t  [use config/NAME.mk build configuration])],\n-  [case $with_build_config in\n-   yes) with_build_config= ;;\n-   no) with_build_config= BUILD_CONFIG= ;;\n-   esac])\n-\n-if test \"x${with_build_config}\" != x; then\n-  BUILD_CONFIG=$with_build_config\n-else\n-  case $BUILD_CONFIG in\n-  bootstrap-debug)\n-    if echo \"int f (void) { return 0; }\" > conftest.c &&\n-       ${CC} -c conftest.c &&\n-       mv conftest.o conftest.o.g0 &&\n-       ${CC} -c -g conftest.c &&\n-       mv conftest.o conftest.o.g &&\n-       ${srcdir}/contrib/compare-debug conftest.o.g0 conftest.o.g > /dev/null 2>&1; then\n-      :\n-    else\n-      BUILD_CONFIG=\n-    fi\n-    rm -f conftest.c conftest.o conftest.o.g0 conftest.o.g\n-    ;;\n-  esac\n-fi\n-AC_MSG_RESULT($BUILD_CONFIG)\n-AC_SUBST(BUILD_CONFIG)\n-\n extrasub_build=\n for module in ${build_configdirs} ; do\n   if test -z \"${no_recursion}\" \\"}]}