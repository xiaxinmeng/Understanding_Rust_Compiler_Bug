{"sha": "800cd3b93229e01bc6376cbbe14da74b9504c6a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwY2QzYjkzMjI5ZTAxYmM2Mzc2Y2JiZTE0ZGE3NGI5NTA0YzZhMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-06T00:37:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-06T00:37:19Z"}, "message": "(convert_arguments): No -Wconversion warning\nif the function wants an enumeral type.\n\nFrom-SVN: r1456", "tree": {"sha": "1cb97b07f7235394104d1329a6dcf47e73199b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cb97b07f7235394104d1329a6dcf47e73199b8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/800cd3b93229e01bc6376cbbe14da74b9504c6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800cd3b93229e01bc6376cbbe14da74b9504c6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800cd3b93229e01bc6376cbbe14da74b9504c6a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800cd3b93229e01bc6376cbbe14da74b9504c6a2/comments", "author": null, "committer": null, "parents": [{"sha": "51b003476eaf2af216eaacccbdcd4031ce7e2405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b003476eaf2af216eaacccbdcd4031ce7e2405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51b003476eaf2af216eaacccbdcd4031ce7e2405"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "4d551f94546586f1433655b3daa3330e6936eecb", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800cd3b93229e01bc6376cbbe14da74b9504c6a2/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800cd3b93229e01bc6376cbbe14da74b9504c6a2/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=800cd3b93229e01bc6376cbbe14da74b9504c6a2", "patch": "@@ -1994,6 +1994,11 @@ convert_arguments (typelist, values, name)\n \t\t\twarn_for_assignment (\"%s with different width due to prototype\", (char *) 0, name, parmnum + 1);\n \t\t      else if (TREE_UNSIGNED (type) == TREE_UNSIGNED (type1))\n \t\t\t;\n+\t\t      /* Don't complain if the formal parameter type\n+\t\t\t is an enum, because we can't tell now whether\n+\t\t\t the value was an enum--even the same enum.  */\n+\t\t      else if (TREE_CODE (type) == ENUMERAL_TYPE)\n+\t\t\t;\n \t\t      else if (TREE_CODE (val) == INTEGER_CST\n \t\t\t       && int_fits_type_p (val, type))\n \t\t\t/* Change in signedness doesn't matter"}]}