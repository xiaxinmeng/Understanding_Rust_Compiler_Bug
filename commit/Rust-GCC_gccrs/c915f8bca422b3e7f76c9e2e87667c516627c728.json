{"sha": "c915f8bca422b3e7f76c9e2e87667c516627c728", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxNWY4YmNhNDIyYjNlN2Y3NmM5ZTJlODc2NjdjNTE2NjI3YzcyOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-09-13T14:57:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-09-13T14:57:38Z"}, "message": "re PR fortran/54556 (Marking implicitly pure variables as DECL_PURE_P leads to wrong code)\n\n2012-09-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54556\n        * resolve.c (resolve_formal_arglist): Allow VALUE arguments\n        with implicit_pure.\n        (gfc_impure_variable): Don't check gfc_pure such that the\n        function also works for gfc_implicit_pure procedures.\n\n2012-09-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54556\n        * gfortran.dg/implicit_pure_3.f90: New.\n\nFrom-SVN: r191259", "tree": {"sha": "456522c8d5e110e07f9646aef6c70490f0d67b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/456522c8d5e110e07f9646aef6c70490f0d67b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c915f8bca422b3e7f76c9e2e87667c516627c728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c915f8bca422b3e7f76c9e2e87667c516627c728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c915f8bca422b3e7f76c9e2e87667c516627c728", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c915f8bca422b3e7f76c9e2e87667c516627c728/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5c350d82e02bcc202d4c33a8a43cdf65c7d5d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c350d82e02bcc202d4c33a8a43cdf65c7d5d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c350d82e02bcc202d4c33a8a43cdf65c7d5d2e"}], "stats": {"total": 135, "additions": 129, "deletions": 6}, "files": [{"sha": "21e7dbe676d59c1f7994c981d6149c82561b6525", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c915f8bca422b3e7f76c9e2e87667c516627c728", "patch": "@@ -1,3 +1,11 @@\n+2012-09-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54556\n+\t* resolve.c (resolve_formal_arglist): Allow VALUE arguments\n+\twith implicit_pure.\n+\t(gfc_impure_variable): Don't check gfc_pure such that the\n+\tfunction also works for gfc_implicit_pure procedures.\n+\n 2012-09-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54225"}, {"sha": "0748b6af78b44d628e4ee42f10cae5c7ee51c33a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=c915f8bca422b3e7f76c9e2e87667c516627c728", "patch": "@@ -426,10 +426,12 @@ resolve_formal_arglist (gfc_symbol *proc)\n \t    }\n \t  else if (!sym->attr.pointer)\n \t    {\n-\t      if (proc->attr.function && sym->attr.intent != INTENT_IN)\n+\t      if (proc->attr.function && sym->attr.intent != INTENT_IN\n+\t\t  && !sym->value)\n \t\tproc->attr.implicit_pure = 0;\n \n-\t      if (proc->attr.subroutine && sym->attr.intent == INTENT_UNKNOWN)\n+\t      if (proc->attr.subroutine && sym->attr.intent == INTENT_UNKNOWN\n+\t\t  && !sym->value)\n \t\tproc->attr.implicit_pure = 0;\n \t    }\n \t}\n@@ -13565,10 +13567,9 @@ gfc_impure_variable (gfc_symbol *sym)\n     }\n \n   proc = sym->ns->proc_name;\n-  if (sym->attr.dummy && gfc_pure (proc)\n-\t&& ((proc->attr.subroutine && sym->attr.intent == INTENT_IN)\n-\t\t||\n-\t     proc->attr.function))\n+  if (sym->attr.dummy\n+      && ((proc->attr.subroutine && sym->attr.intent == INTENT_IN)\n+\t  || proc->attr.function))\n     return 1;\n \n   /* TODO: Sort out what can be storage associated, if anything, and include"}, {"sha": "d6c6e239f2e4f6de6dcf1f70cb767776bfac2b09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c915f8bca422b3e7f76c9e2e87667c516627c728", "patch": "@@ -1,3 +1,8 @@\n+2012-09-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54556\n+\t* gfortran.dg/implicit_pure_3.f90: New.\n+\n 2012-09-13  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-fre-37.c: New testcase."}, {"sha": "d9d7734dab3525cba26267c65ed2f8efd0c9c972", "filename": "gcc/testsuite/gfortran.dg/implicit_pure_3.f90", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c915f8bca422b3e7f76c9e2e87667c516627c728/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_3.f90?ref=c915f8bca422b3e7f76c9e2e87667c516627c728", "patch": "@@ -0,0 +1,109 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fdump-tree-optimized\" }\n+!\n+! PR fortran/54556\n+!\n+! Contributed by Joost VandeVondele\n+!\n+MODULE parallel_rng_types\n+\n+  IMPLICIT NONE\n+\n+  ! Global parameters in this module\n+  INTEGER, PARAMETER :: dp=8\n+\n+  TYPE rng_stream_type\n+    PRIVATE\n+    CHARACTER(LEN=40)             :: name\n+    INTEGER                       :: distribution_type\n+    REAL(KIND=dp), DIMENSION(3,2) :: bg,cg,ig\n+    LOGICAL                       :: antithetic,extended_precision\n+    REAL(KIND=dp)                 :: buffer\n+    LOGICAL                       :: buffer_filled\n+  END TYPE rng_stream_type\n+\n+  REAL(KIND=dp), DIMENSION(3,3) :: a1p0,a1p76,a1p127,&\n+                                   a2p0,a2p76,a2p127,&\n+                                   inv_a1,inv_a2\n+\n+  INTEGER, PARAMETER          :: GAUSSIAN = 1,&\n+                                 UNIFORM  = 2\n+\n+  REAL(KIND=dp), PARAMETER :: norm  = 2.328306549295727688e-10_dp,&\n+                              m1    = 4294967087.0_dp,&\n+                              m2    = 4294944443.0_dp,&\n+                              a12   = 1403580.0_dp,&\n+                              a13n  = 810728.0_dp,&\n+                              a21   = 527612.0_dp,&\n+                              a23n  = 1370589.0_dp,&\n+                              two17 = 131072.0_dp,&            ! 2**17\n+                              two53 = 9007199254740992.0_dp,&  ! 2**53\n+                              fact  = 5.9604644775390625e-8_dp ! 1/2**24\n+\n+\n+CONTAINS\n+\n+  FUNCTION rn32(rng_stream) RESULT(u)\n+\n+    TYPE(rng_stream_type), POINTER           :: rng_stream\n+    REAL(KIND=dp)                            :: u\n+\n+    INTEGER                                  :: k\n+    REAL(KIND=dp)                            :: p1, p2\n+\n+! -------------------------------------------------------------------------\n+! Component 1\n+\n+    p1 = a12*rng_stream%cg(2,1) - a13n*rng_stream%cg(1,1)\n+    k = INT(p1/m1)\n+    p1 = p1 - k*m1\n+    IF (p1 < 0.0_dp) p1 = p1 + m1\n+    rng_stream%cg(1,1) = rng_stream%cg(2,1)\n+    rng_stream%cg(2,1) = rng_stream%cg(3,1)\n+    rng_stream%cg(3,1) = p1\n+\n+    ! Component 2\n+\n+    p2 = a21*rng_stream%cg(3,2) - a23n*rng_stream%cg(1,2)\n+    k = INT(p2/m2)\n+    p2 = p2 - k*m2\n+    IF (p2 < 0.0_dp) p2 = p2 + m2\n+    rng_stream%cg(1,2) = rng_stream%cg(2,2)\n+    rng_stream%cg(2,2) = rng_stream%cg(3,2)\n+    rng_stream%cg(3,2) = p2\n+\n+    ! Combination\n+\n+    IF (p1 > p2) THEN\n+      u = (p1 - p2)*norm\n+    ELSE\n+      u = (p1 - p2 + m1)*norm\n+    END IF\n+\n+    IF (rng_stream%antithetic) u = 1.0_dp - u\n+\n+  END FUNCTION rn32\n+\n+! *****************************************************************************\n+  FUNCTION rn53(rng_stream) RESULT(u)\n+\n+    TYPE(rng_stream_type), POINTER           :: rng_stream\n+    REAL(KIND=dp)                            :: u\n+\n+    u = rn32(rng_stream)\n+\n+    IF (rng_stream%antithetic) THEN\n+      u = u + (rn32(rng_stream) - 1.0_dp)*fact\n+      IF (u < 0.0_dp) u = u + 1.0_dp\n+    ELSE\n+      u = u + rn32(rng_stream)*fact\n+      IF (u >= 1.0_dp) u = u - 1.0_dp\n+    END IF\n+\n+  END FUNCTION rn53\n+\n+END MODULE\n+\n+! { dg-final { scan-module-absence \"parallel_rng_types\" \"IMPLICIT_PURE\" } }\n+! { dg-final { scan-tree-dump-times \"rn32 \\\\(rng_stream\" 3 \"optimized\" } }\n+! { dg-final { cleanup-tree-dump \"optimized\" } }"}]}