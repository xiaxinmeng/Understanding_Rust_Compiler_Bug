{"sha": "19deaec9426ca88dcef09d23d18b0e16e07934e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlkZWFlYzk0MjZjYTg4ZGNlZjA5ZDIzZDE4YjBlMTZlMDc5MzRlOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-29T18:46:01Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-29T18:46:01Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1123", "tree": {"sha": "7e45fc54491f2271dd4948678a1e1b93c67e2704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e45fc54491f2271dd4948678a1e1b93c67e2704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19deaec9426ca88dcef09d23d18b0e16e07934e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19deaec9426ca88dcef09d23d18b0e16e07934e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19deaec9426ca88dcef09d23d18b0e16e07934e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19deaec9426ca88dcef09d23d18b0e16e07934e8/comments", "author": null, "committer": null, "parents": [{"sha": "dfa69feb2b589e5c5c4c47301d06060280ab226c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa69feb2b589e5c5c4c47301d06060280ab226c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfa69feb2b589e5c5c4c47301d06060280ab226c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2f5e680288d3ec2a6541c63fcb058e7bf22497e8", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19deaec9426ca88dcef09d23d18b0e16e07934e8/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19deaec9426ca88dcef09d23d18b0e16e07934e8/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=19deaec9426ca88dcef09d23d18b0e16e07934e8", "patch": "@@ -4854,9 +4854,9 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \tbreak;\n \n       if (arglist == 0\n-\t  /* Arg could be non-integer if user redeclared this fcn wrong.  */\n+\t  /* Arg could be wrong type if user redeclared this fcn wrong.  */\n \t  || TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) != REAL_TYPE)\n-\treturn const0_rtx;\n+\treturn CONST0_RTX (TYPE_MODE (TREE_TYPE (exp)));\n \n       /* Compute the argument.  */\n       op0 = expand_expr (TREE_VALUE (arglist), subtarget, VOIDmode, 0);"}]}