{"sha": "aa988991ba0aec1677612c76ca5998460e77891f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5ODg5OTFiYTBhZWMxNjc3NjEyYzc2Y2E1OTk4NDYwZTc3ODkxZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-16T07:20:33Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-16T07:20:33Z"}, "message": "(force_to_mode): Don't do right-shift in a narrower mode.\n\nFrom-SVN: r6105", "tree": {"sha": "10e41fdd7294ac9e9f0f2a9815128fe3abea46a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10e41fdd7294ac9e9f0f2a9815128fe3abea46a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa988991ba0aec1677612c76ca5998460e77891f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa988991ba0aec1677612c76ca5998460e77891f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa988991ba0aec1677612c76ca5998460e77891f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa988991ba0aec1677612c76ca5998460e77891f/comments", "author": null, "committer": null, "parents": [{"sha": "02b35b12a61e894e1fb1b6e98dbf9577049aa792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b35b12a61e894e1fb1b6e98dbf9577049aa792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b35b12a61e894e1fb1b6e98dbf9577049aa792"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "1d22a1358b398a02fadbd9731820f7956b374995", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa988991ba0aec1677612c76ca5998460e77891f/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa988991ba0aec1677612c76ca5998460e77891f/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=aa988991ba0aec1677612c76ca5998460e77891f", "patch": "@@ -5608,6 +5608,11 @@ force_to_mode (x, mode, mask, reg)\n \t      && (code_to_optab[(int) code]->handlers[(int) mode].insn_code\n \t\t  != CODE_FOR_nothing))\n \t     ? mode : GET_MODE (x));\n+  /* It is not valid to do a right-shift in a narrower mode\n+     than the one it came in with.  */\n+  if ((code == LSHIFTRT || code == ASHIFTRT)\n+      && GET_MODE_BITSIZE (mode) < GET_MODE_BITSIZE (GET_MODE (x)))\n+    op_mode = GET_MODE (x);\n \n   /* Truncate MASK to fit OP_MODE.  */\n   if (op_mode)"}]}