{"sha": "124eaa50e0a34f5f89572c1aa812c50979da58fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0ZWFhNTBlMGEzNGY1Zjg5NTcyYzFhYTgxMmM1MDk3OWRhNThmYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-20T17:15:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-20T19:34:47Z"}, "message": "libstdc++: Fix create_directories to resolve symlinks [PR101510]\n\nWhen filesystem__create_directories checks to see if the path already\nexists and resovles to a directory, it uses filesystem::symlink_status,\nwhich means it reports an error if the path is a symlink. It should use\nfilesystem::status, so that the target directory is detected, and no\nerror is reported.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/101510\n\t* src/c++17/fs_ops.cc (fs::create_directories): Use status\n\tinstead of symlink_status.\n\t* src/filesystem/ops.cc (fs::create_directories): Likewise.\n\t* testsuite/27_io/filesystem/operations/create_directories.cc:\n\t* testsuite/27_io/filesystem/operations/create_directory.cc: Do\n\tnot test with symlinks on Windows.\n\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n\t* testsuite/experimental/filesystem/operations/create_directory.cc:\n\tDo not test with symlinks on Windows.", "tree": {"sha": "83477330e7dcdfb005f08c179036658a82edf3c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83477330e7dcdfb005f08c179036658a82edf3c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/124eaa50e0a34f5f89572c1aa812c50979da58fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124eaa50e0a34f5f89572c1aa812c50979da58fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124eaa50e0a34f5f89572c1aa812c50979da58fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124eaa50e0a34f5f89572c1aa812c50979da58fc/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07d30fdcaec4906e0dcb948fc4748bf74c15c05"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "ceaf0291d64a9cf1604097dcb18962ade4b4fff2", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=124eaa50e0a34f5f89572c1aa812c50979da58fc", "patch": "@@ -496,7 +496,7 @@ fs::create_directories(const path& p, error_code& ec)\n       return false;\n     }\n \n-  file_status st = symlink_status(p, ec);\n+  file_status st = status(p, ec);\n   if (is_directory(st))\n     return false;\n   else if (ec && !status_known(st))"}, {"sha": "7c5b164fb7f92b7ab6a7a054dde618dc51461fe5", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=124eaa50e0a34f5f89572c1aa812c50979da58fc", "patch": "@@ -426,7 +426,7 @@ fs::create_directories(const path& p, error_code& ec) noexcept\n       return false;\n     }\n \n-  file_status st = symlink_status(p, ec);\n+  file_status st = status(p, ec);\n   if (is_directory(st))\n     return false;\n   else if (ec && !status_known(st))"}, {"sha": "304c1453afe650b1e5850114df4d86772d6eb4f4", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/create_directories.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directories.cc?ref=124eaa50e0a34f5f89572c1aa812c50979da58fc", "patch": "@@ -145,10 +145,33 @@ test03()\n   remove_all(p);\n }\n \n+void\n+test04()\n+{\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // no symlinks\n+#else\n+  // PR libstdc++/101510\n+  // create_directories reports an error if the path is a symlink to a dir\n+  std::error_code ec = make_error_code(std::errc::invalid_argument);\n+  const auto p = __gnu_test::nonexistent_path() / \"\";\n+  fs::create_directories(p/\"dir\");\n+  auto link = p/\"link\";\n+  fs::create_directory_symlink(\"dir\", link);\n+  bool created = fs::create_directories(link, ec);\n+  VERIFY( !created );\n+  VERIFY( !ec );\n+  created = fs::create_directories(link);\n+  VERIFY( !created );\n+  remove_all(p);\n+#endif\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}, {"sha": "afddccf5ed604c31543bd5d389298982062912fe", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/create_directory.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directory.cc?ref=124eaa50e0a34f5f89572c1aa812c50979da58fc", "patch": "@@ -70,6 +70,9 @@ test01()\n     VERIFY( e.path1() == f );\n   }\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // no symlinks\n+#else\n   // PR libstdc++/101510 create_directory on an existing symlink to a directory\n   fs::create_directory(p/\"dir\");\n   auto link = p/\"link\";\n@@ -80,6 +83,7 @@ test01()\n   VERIFY( !ec );\n   b = fs::create_directory(link);\n   VERIFY( !b );\n+#endif\n \n   remove_all(p, ec);\n }"}, {"sha": "fc134ad64a3881c9ec846e544a87bdb57b74d761", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directories.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc?ref=124eaa50e0a34f5f89572c1aa812c50979da58fc", "patch": "@@ -129,10 +129,33 @@ test03()\n   remove_all(p);\n }\n \n+void\n+test04()\n+{\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // no symlinks\n+#else\n+  // PR libstdc++/101510\n+  // create_directories reports an error if the path is a symlink to a dir\n+  std::error_code ec = make_error_code(std::errc::invalid_argument);\n+  const auto p = __gnu_test::nonexistent_path() / \"\";\n+  fs::create_directories(p/\"dir\");\n+  auto link = p/\"link\";\n+  fs::create_directory_symlink(\"dir\", link);\n+  bool created = fs::create_directories(link, ec);\n+  VERIFY( !created );\n+  VERIFY( !ec );\n+  created = fs::create_directories(link);\n+  VERIFY( !created );\n+  remove_all(p);\n+#endif\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}, {"sha": "8e36b762a25423c7008aae3d1c7b63dab668e03c", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directory.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124eaa50e0a34f5f89572c1aa812c50979da58fc/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc?ref=124eaa50e0a34f5f89572c1aa812c50979da58fc", "patch": "@@ -69,6 +69,9 @@ test01()\n     VERIFY( e.path1() == f );\n   }\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // no symlinks\n+#else\n   // PR libstdc++/101510 create_directory on an existing symlink to a directory\n   fs::create_directory(p/\"dir\");\n   auto link = p/\"link\";\n@@ -79,6 +82,7 @@ test01()\n   VERIFY( !ec );\n   b = fs::create_directory(link);\n   VERIFY( !b );\n+#endif\n \n   remove_all(p, ec);\n }"}]}