{"sha": "c909a4af728c7e1b2b93b99effcd7ba6e15290b7", "node_id": "C_kwDOANBUbNoAKGM5MDlhNGFmNzI4YzdlMWIyYjkzYjk5ZWZmY2Q3YmE2ZTE1MjkwYjc", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-13T20:58:31Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-14T08:35:05Z"}, "message": "Revert \"sphinx: add update_web_docs_git.py script\"\n\nThis reverts commit 6373b1fdf75ea0908dfaebdbfc54d8b55b08d409.", "tree": {"sha": "16039155020d16184a96e9f097844dba64acc944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16039155020d16184a96e9f097844dba64acc944"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c909a4af728c7e1b2b93b99effcd7ba6e15290b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c909a4af728c7e1b2b93b99effcd7ba6e15290b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c909a4af728c7e1b2b93b99effcd7ba6e15290b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c909a4af728c7e1b2b93b99effcd7ba6e15290b7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50b2e0fc3604e9f69a5e3b6ad1902e681764edc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50b2e0fc3604e9f69a5e3b6ad1902e681764edc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50b2e0fc3604e9f69a5e3b6ad1902e681764edc5"}], "stats": {"total": 81, "additions": 0, "deletions": 81}, "files": [{"sha": "f3f59953ac0bb2ff9845bfd8a30b94cd79fa3b81", "filename": "maintainer-scripts/update_web_docs_git.py", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50b2e0fc3604e9f69a5e3b6ad1902e681764edc5/maintainer-scripts%2Fupdate_web_docs_git.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50b2e0fc3604e9f69a5e3b6ad1902e681764edc5/maintainer-scripts%2Fupdate_web_docs_git.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_web_docs_git.py?ref=50b2e0fc3604e9f69a5e3b6ad1902e681764edc5", "patch": "@@ -1,81 +0,0 @@\n-#!/usr/bin/env python3\n-\n-# Generate documentation from Sphinx files.\n-\n-import argparse\n-import os\n-import shutil\n-import subprocess\n-import tempfile\n-from pathlib import Path\n-\n-GITROOT = '/git/gcc.git'\n-BUGURL = 'https://gcc.gnu.org/bugs/'\n-\n-parser = argparse.ArgumentParser(description='Update web documentation.')\n-parser.add_argument('output_folder', help='Output folder')\n-parser.add_argument('--gitrepo', help=f'Git repository (default: {GITROOT})',\n-                    default=GITROOT)\n-parser.add_argument('--sphinx-build', help='Path to sphinx-build binary')\n-parser.add_argument('-v', '--verbose', action='store_true',\n-                    help='Verbose output')\n-args = parser.parse_args()\n-\n-\n-def find_configs():\n-    for root, _, files in os.walk('.'):\n-        for f in files:\n-            full = os.path.join(root, f)\n-            if f == 'conf.py':\n-                # find name of the documentation\n-                lines = open(full).read().splitlines()\n-                docname = None\n-                for line in lines:\n-                    if line.startswith('name = '):\n-                        docname = line.split()[-1].strip(\"'\")\n-                        break\n-                assert docname\n-                yield (Path(root).resolve(), docname)\n-\n-\n-with tempfile.TemporaryDirectory() as folder:\n-    print(f'Using {folder} as temporary directory')\n-    os.chdir(folder)\n-    subprocess.check_output(f'git clone {args.gitrepo} --depth=1', shell=True)\n-    os.chdir('gcc')\n-    configs = list(find_configs())\n-\n-    # Prepare folders\n-    output = Path(args.output_folder)\n-    if not output.exists():\n-        output.mkdir()\n-\n-    temp = Path('tmp').resolve()\n-    temp.mkdir()\n-\n-    # Prepare default env. variables\n-    childenv = os.environ.copy()\n-    childenv['BUGURL'] = BUGURL\n-\n-    # Build and copy the documentation\n-    for i, (config_folder, docname) in enumerate(sorted(configs)):\n-        print(f'=== building {i + 1}/{len(configs)}: {docname} ===')\n-\n-        # Build HTML\n-        cmd = f'make -C doc html SOURCEDIR={config_folder} BUILDDIR={temp}/{docname}'\n-        if args.sphinx_build:\n-            cmd += f' SPHINXBUILD={args.sphinx_build}'\n-        subprocess.run(cmd, shell=True, env=childenv, check=True,\n-                       capture_output=not args.verbose)\n-        os.unlink(f'{temp}/{docname}/html/.buildinfo')\n-        shutil.copytree(f'{temp}/{docname}/html', f'{output}/{docname}',\n-                        dirs_exist_ok=True)\n-\n-        # Build PDF\n-        cmd = f'make -C doc latexpdf SOURCEDIR={config_folder} BUILDDIR={temp}/pdf/{docname}'\n-        if args.sphinx_build:\n-            cmd += f' SPHINXBUILD={args.sphinx_build}'\n-        subprocess.run(cmd, shell=True, env=childenv, check=True,\n-                       capture_output=not args.verbose)\n-        shutil.copyfile(f'{temp}/pdf/{docname}/latex/{docname}.pdf',\n-                        f'{output}/{docname}.pdf')"}]}