{"sha": "66c4f4d8c4399c499f1af5f550bf28878a8d69db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjNGY0ZDhjNDM5OWM0OTlmMWFmNWY1NTBiZjI4ODc4YThkNjlkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-08-22T08:07:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-08-22T08:07:36Z"}, "message": "re PR tree-optimization/86945 (BUG with optimisation of select case statement in gfortran)\n\n2018-08-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/86945\n\t* tree-cfg.c (generate_range_test): Use unsigned arithmetic.\n\n\t* gcc.dg/torture/pr86945.c: New testcase.\n\nFrom-SVN: r263761", "tree": {"sha": "ccf1184d6515c05526f1c1d696d6b0a13464e475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccf1184d6515c05526f1c1d696d6b0a13464e475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66c4f4d8c4399c499f1af5f550bf28878a8d69db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c4f4d8c4399c499f1af5f550bf28878a8d69db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c4f4d8c4399c499f1af5f550bf28878a8d69db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c4f4d8c4399c499f1af5f550bf28878a8d69db/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30379cbf93b793ecce02968a8db989e8c2b627b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30379cbf93b793ecce02968a8db989e8c2b627b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30379cbf93b793ecce02968a8db989e8c2b627b3"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "3a67b236a37fa91d3392cff53c035f5fa6c9c47d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66c4f4d8c4399c499f1af5f550bf28878a8d69db", "patch": "@@ -1,3 +1,8 @@\n+2018-08-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86945\n+\t* tree-cfg.c (generate_range_test): Use unsigned arithmetic.\n+\n 2018-08-22  Alexandre Oliva <oliva@adacore.com>\n \n \t* config/rs6000/rs6000.c (SMALL_DATA_RELOC, SMALL_DATA_REG): Add"}, {"sha": "4e38d714ef4724bff01364dde5bfae0b46cd3bca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66c4f4d8c4399c499f1af5f550bf28878a8d69db", "patch": "@@ -1,3 +1,8 @@\n+2018-08-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86945\n+\t* tree-cfg.c (generate_range_test): Use unsigned arithmetic.\n+\n 2018-08-21  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* gfortran.dg/nan_1.f90: Remove tests that test MAX/MIN with NaNs."}, {"sha": "4b722f5f685cfbb1c115888f47565402caeaeda9", "filename": "gcc/testsuite/gcc.dg/torture/pr86945.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86945.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86945.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86945.c?ref=66c4f4d8c4399c499f1af5f550bf28878a8d69db", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+\n+void __attribute__((noinline,noipa))\n+foo(int id)\n+{\n+  switch (id)\n+    {\n+    case (-__INT_MAX__ - 1)...-1:\n+      __builtin_abort ();\n+    default:;\n+    }\n+}\n+\n+int main()\n+{\n+  foo(1);\n+  return 0;\n+}"}, {"sha": "463dd8a3bf920ebbc0455d0cfc49e7e759ce7a87", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c4f4d8c4399c499f1af5f550bf28878a8d69db/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=66c4f4d8c4399c499f1af5f550bf28878a8d69db", "patch": "@@ -9131,20 +9131,16 @@ generate_range_test (basic_block bb, tree index, tree low, tree high,\n   tree type = TREE_TYPE (index);\n   tree utype = unsigned_type_for (type);\n \n-  low = fold_convert (type, low);\n-  high = fold_convert (type, high);\n+  low = fold_convert (utype, low);\n+  high = fold_convert (utype, high);\n \n-  tree tmp = make_ssa_name (type);\n-  gassign *sub1\n-    = gimple_build_assign (tmp, MINUS_EXPR, index, low);\n+  gimple_seq seq = NULL;\n+  index = gimple_convert (&seq, utype, index);\n+  *lhs = gimple_build (&seq, MINUS_EXPR, utype, index, low);\n+  *rhs = const_binop (MINUS_EXPR, utype, high, low);\n \n-  *lhs = make_ssa_name (utype);\n-  gassign *a = gimple_build_assign (*lhs, NOP_EXPR, tmp);\n-\n-  *rhs = fold_build2 (MINUS_EXPR, utype, high, low);\n   gimple_stmt_iterator gsi = gsi_last_bb (bb);\n-  gsi_insert_before (&gsi, sub1, GSI_SAME_STMT);\n-  gsi_insert_before (&gsi, a, GSI_SAME_STMT);\n+  gsi_insert_seq_before (&gsi, seq, GSI_SAME_STMT);\n }\n \n /* Emit return warnings.  */"}]}