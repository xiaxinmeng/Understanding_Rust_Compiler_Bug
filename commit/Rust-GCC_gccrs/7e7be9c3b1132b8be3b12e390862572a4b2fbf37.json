{"sha": "7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3YmU5YzNiMTEzMmI4YmUzYjEyZTM5MDg2MjU3MmE0YjJmYmYzNw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-16T01:02:01Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-16T01:02:01Z"}, "message": "(ASM_OUTPUT_SECTION_NAME): New arg DECL.\n\nFrom-SVN: r8461", "tree": {"sha": "b33df1f6f8379bf0cb3bcca85d2d37a2541c24d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33df1f6f8379bf0cb3bcca85d2d37a2541c24d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/comments", "author": null, "committer": null, "parents": [{"sha": "2ffe831c363dee219e8d9788b0c84c87c2d5a37d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ffe831c363dee219e8d9788b0c84c87c2d5a37d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ffe831c363dee219e8d9788b0c84c87c2d5a37d"}], "stats": {"total": 47, "additions": 28, "deletions": 19}, "files": [{"sha": "8208b2aad8f8b81308b5291b3e9ccda2709b85c1", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "patch": "@@ -576,9 +576,10 @@ handle_pragma (file)\n   if (strcmp (pbuf, \"saveall\") == 0)\n     pragma_saveall = 1;\n \n-  /* ??? This is deprecated.  Use section attributes.  */\n+  /* ??? This is deprecated.  Delete for gcc 2.8.  */\n   if (strcmp (pbuf, \"section\") == 0)\n     {\n+      warning (\"#pragma section is deprecated, use section attributes\");\n       while (c && !isalpha (c))\n \tc = getc (file);\n       psize = 0;\n@@ -589,7 +590,7 @@ handle_pragma (file)\n \t  c = getc (file);\n \t}\n       pbuf[psize] = 0;\n-      named_section (pbuf);\n+      named_section (NULL_TREE, pbuf);\n     }\n   ungetc (c, file);\n   return c;"}, {"sha": "1b24204782d4bdcd6843893163f3e9109f21d514", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "patch": "@@ -1022,14 +1022,9 @@ dtors_section() \t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \n-#if 0\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE, NAME) \\\n-  do { named_section(\".init\"); fprintf(FILE,\"\\t.word\\t%s\\n\", NAME); } while (0)\n-#else\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n   do { ctors_section();\t\t\t\t\\\n        fprintf(FILE, \"\\t%s\\t_%s\\n\", ASM_WORD_OP, NAME); } while (0)\n-#endif\n \n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)\t\\\n   do { dtors_section();\t\t\t\t\\\n@@ -1079,11 +1074,13 @@ dtors_section() \t\t\t\t\t\t\\\n #define SDB_DEBUGGING_INFO\n #define SDB_DELIM\t\"\\n\"\n \n-/* Assemble generic sections.\n-   This is currently only used to support section attributes.  */\n+/* A C statement to output something to the assembler file to switch to section\n+   NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or\n+   NULL_TREE.  Some target formats do not support arbitrary sections.  Do not\n+   define this macro in such cases.  */\n \n-#define ASM_OUTPUT_SECTION_NAME(FILE, NAME) \\\n-   fprintf (FILE, \".section\\t%s\\n\", NAME)\n+#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME) \\\n+  fprintf (FILE, \"\\t.section %s\\n\", NAME)\n \n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */"}, {"sha": "791ba6ca3026b7c953c40016d4b84a47402619ca", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "patch": "@@ -1244,10 +1244,12 @@ dtors_section() \t\t\t\t\t     \\\n     }\t\t\t\t\t\t\t     \\\n }                                                            \n \n-/* Assemble generic sections.\n-   This is currently only used to support section attributes.  */\n+/* A C statement to output something to the assembler file to switch to section\n+   NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or\n+   NULL_TREE.  Some target formats do not support arbitrary sections.  Do not\n+   define this macro in such cases.  */\n \n-#define ASM_OUTPUT_SECTION_NAME(FILE, NAME) \\\n+#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME) \\\n    do { fprintf (FILE, \".section\\t%s\\n\", NAME); } while (0)\n \n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\"}, {"sha": "f81a4f736cf4582ee41ca4c1c28389cd7090cdfd", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7be9c3b1132b8be3b12e390862572a4b2fbf37/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=7e7be9c3b1132b8be3b12e390862572a4b2fbf37", "patch": "@@ -175,11 +175,20 @@ do { ASM_OUTPUT_ALIGN ((FILE), Pmode == SImode ? 2 : 3);\t\t\\\n #define CTORS_SECTION_ASM_OP    \".section\\t\\\".ctors\\\",#alloc,#execinstr\"\n #define DTORS_SECTION_ASM_OP    \".section\\t\\\".dtors\\\",#alloc,#execinstr\"\n \n-/* Assemble generic sections.\n-   This is currently only used to support section attributes.  */\n-\n-#define ASM_OUTPUT_SECTION_NAME(FILE, NAME) \\\n-   fprintf (FILE, \".section\\t\\\"%s\\\",#alloc\\n\", NAME)\n+/* A C statement to output something to the assembler file to switch to section\n+   NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or\n+   NULL_TREE.  Some target formats do not support arbitrary sections.  Do not\n+   define this macro in such cases.  */\n+\n+#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME) \\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\t\\\n+    fprintf (FILE, \".section\\t\\\"%s\\\",#alloc,#execinstr\\n\", (NAME));\t\\\n+  else if (TREE_READONLY (DECL))\t\t\t\t\t\\\n+    fprintf (FILE, \".section\\t\\\"%s\\\",#alloc\\n\", (NAME));\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    fprintf (FILE, \".section\\t\\\"%s\\\",#alloc,#write\\n\", (NAME));\t\t\\\n+} while (0)\n \n /* If the host and target formats match, output the floats as hex.  */\n #if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT"}]}