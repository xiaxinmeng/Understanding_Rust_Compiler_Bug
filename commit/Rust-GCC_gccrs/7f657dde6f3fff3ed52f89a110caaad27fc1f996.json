{"sha": "7f657dde6f3fff3ed52f89a110caaad27fc1f996", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y2NTdkZGU2ZjNmZmYzZWQ1MmY4OWExMTBjYWFhZDI3ZmMxZjk5Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-26T12:29:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-26T12:29:09Z"}, "message": "re PR tree-optimization/42250 (segfault in ipa-type-escape.c for several cpu2000 tests)\n\n2010-01-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42250\n\t* ipa-type-escape.c (type_escape_execute): Do not analyze clones.\n\n\t* gcc.dg/pr42250.c: New testcase.\n\nFrom-SVN: r156244", "tree": {"sha": "2263c0e6cd79ee509ff9633ef13494172efecf8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2263c0e6cd79ee509ff9633ef13494172efecf8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f657dde6f3fff3ed52f89a110caaad27fc1f996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f657dde6f3fff3ed52f89a110caaad27fc1f996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f657dde6f3fff3ed52f89a110caaad27fc1f996", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f657dde6f3fff3ed52f89a110caaad27fc1f996/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec80da28b6bb82771044cf4c1120d24d30902873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec80da28b6bb82771044cf4c1120d24d30902873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec80da28b6bb82771044cf4c1120d24d30902873"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "da237e7e57d1d5478295cbc8c1b281493ba5a90a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f657dde6f3fff3ed52f89a110caaad27fc1f996", "patch": "@@ -1,3 +1,8 @@\n+2010-01-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42250\n+\t* ipa-type-escape.c (type_escape_execute): Do not analyze clones.\n+\n 2010-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/42866"}, {"sha": "8d9f26114d36066322ddbcd5ce5375b25a6d6e47", "filename": "gcc/ipa-type-escape.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2Fipa-type-escape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2Fipa-type-escape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-type-escape.c?ref=7f657dde6f3fff3ed52f89a110caaad27fc1f996", "patch": "@@ -1984,7 +1984,7 @@ type_escape_execute (void)\n      they may cause a type variable to escape.\n   */\n   for (node = cgraph_nodes; node; node = node->next)\n-    if (node->analyzed)\n+    if (node->analyzed && !node->clone_of)\n       analyze_function (node);\n \n "}, {"sha": "3cdaee3ea39820e9330c4b5d2f69248699e1f382", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f657dde6f3fff3ed52f89a110caaad27fc1f996", "patch": "@@ -1,3 +1,8 @@\n+2010-01-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42250\n+\t* gcc.dg/pr42250.c: New testcase.\n+\n 2010-01-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat.dg/array_bounds_test.adb: New test."}, {"sha": "d3d4bb7be2fa7f50a0986ea44703513a49d0ed52", "filename": "gcc/testsuite/gcc.dg/pr42250.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42250.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f657dde6f3fff3ed52f89a110caaad27fc1f996/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42250.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42250.c?ref=7f657dde6f3fff3ed52f89a110caaad27fc1f996", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fipa-type-escape\" } */\n+\n+extern double log10 (double __x);\n+extern double ceil (double __x);\n+extern double floor (double __x);\n+extern void free (void *__ptr);\n+extern void *my_malloc (unsigned int);\n+extern int num_rr_nodes;\n+static float get_cblock_trans (int *num_inputs_to_cblock,\n+\t\t\t       int max_inputs_to_cblock,\n+\t\t\t       float trans_cblock_to_lblock_buf,\n+\t\t\t       float trans_sram_bit);\n+static float trans_per_mux (int num_inputs, float trans_sram_bit);\n+void\n+count_routing_transistors (int num_switch, float R_minW_nmos,\n+\t\t\t   float R_minW_pmos)\n+{\n+  int *num_inputs_to_cblock;\n+  int iswitch, i, j, iseg, max_inputs_to_cblock;\n+  float input_cblock_trans;\n+  const float trans_sram_bit = 6.;\n+  float trans_cblock_to_lblock_buf;\n+  input_cblock_trans =\n+    get_cblock_trans (num_inputs_to_cblock, max_inputs_to_cblock,\n+\t\t      trans_cblock_to_lblock_buf, trans_sram_bit);\n+}\n+\n+static float\n+get_cblock_trans (int *num_inputs_to_cblock, int max_inputs_to_cblock,\n+\t\t  float trans_cblock_to_lblock_buf, float trans_sram_bit)\n+{\n+  float *trans_per_cblock;\n+  float trans_count;\n+  int i, num_inputs;\n+\n+  trans_per_cblock =\n+    (float *) my_malloc ((max_inputs_to_cblock + 1) * sizeof (float));\n+  for (i = 1; i <= max_inputs_to_cblock; i++)\n+    trans_per_cblock[i] =\n+      trans_per_mux (i, trans_sram_bit) + trans_cblock_to_lblock_buf;\n+  for (i = 0; i < num_rr_nodes; i++)\n+    {\n+      num_inputs = num_inputs_to_cblock[i];\n+      trans_count += trans_per_cblock[num_inputs];\n+    }\n+  free (trans_per_cblock);\n+  return (trans_count);\n+}\n+\n+static float\n+trans_per_mux (int num_inputs, float trans_sram_bit)\n+{\n+  int nlevels, ilevel, current_inps;\n+  float ntrans = 0;\n+\n+  if (num_inputs <= 1)\n+    return (0);\n+  nlevels = ceil (log10 (num_inputs) / log10 (2.) - 0.00001);\n+  current_inps = num_inputs;\n+  for (ilevel = 1; ilevel <= nlevels; ilevel++)\n+    {\n+      ntrans += 2 * floor (current_inps / 2.);\n+      current_inps = ceil (current_inps / 2.);\n+    }\n+  ntrans += trans_sram_bit * nlevels;\n+  return (ntrans);\n+}"}]}