{"sha": "73e8165a686cc74e51e53d28770f6064297e4c80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNlODE2NWE2ODZjYzc0ZTUxZTUzZDI4NzcwZjYwNjQyOTdlNGM4MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-04-26T13:43:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-26T13:43:13Z"}, "message": "i386.md (fix_trunc<mode>_i387_fisttp_with_temp): Use 'X' constraint for operand 2 when operand 0 is memory operand.\n\n        * config/i386/i386.md (fix_trunc<mode>_i387_fisttp_with_temp): Use 'X'\n        constraint for operand 2 when operand 0 is memory operand.\n        (fix_truncdi_i387_with_temp): : Use 'X' constraint for operand 4 when\n        operand 0 is memory operand.\n        (fix_trunc<mode>_i387_with_temp): Ditto.\n        (*floatsi<mode>2_vector_mixed_with_temp): Use 'X' constraint for\n        operand 2 when operand 1 is memory operand.\n        (*float<SSEMODEI24:mode><MODEF:mode>2_mixed_with_temp): Ditto.\n        (*floatsi<mode>2_vector_sse_with_temp): Ditto.\n        (*float<SSEMODEI24:mode><MODEF:mode>2_sse_with_temp): Ditto.\n        (*float<SSEMODEI24:mode><X87MODEF:mode>2_i387_with_temp): Ditto.\n        (floatdi<X87MODEF:mode>2_i387_with_xmm): Use 'X' constraint for\n        operands 2,3 and 4 when operand 1 is memory operand.\n        (fistdi2_with_temp): Use 'X' constraint for operand 2 when operand 0\n        is memory operand.\n        (fistdi2_floor_with_temp): Ditto.\n        (fist<mode>2_floor_with_temp): Ditto.\n        (fistdi2_ceil_with_temp): Ditto.\n        (fist<mode>2_ceil_with_temp): Ditto.\n        (*truncdfsf_fast_mixed): Merge alternatives 0 and 1.\n\nFrom-SVN: r134697", "tree": {"sha": "a7823e202e7793bff6b8f444c2773bf2a1d681c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7823e202e7793bff6b8f444c2773bf2a1d681c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73e8165a686cc74e51e53d28770f6064297e4c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e8165a686cc74e51e53d28770f6064297e4c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e8165a686cc74e51e53d28770f6064297e4c80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e8165a686cc74e51e53d28770f6064297e4c80/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da69cc9160391a75d646caf33d0c6a4074277646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da69cc9160391a75d646caf33d0c6a4074277646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da69cc9160391a75d646caf33d0c6a4074277646"}], "stats": {"total": 64, "additions": 43, "deletions": 21}, "files": [{"sha": "843a2e232df43cb16ef17e6c656dfd833ae4f4a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e8165a686cc74e51e53d28770f6064297e4c80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e8165a686cc74e51e53d28770f6064297e4c80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73e8165a686cc74e51e53d28770f6064297e4c80", "patch": "@@ -1,3 +1,26 @@\n+2008-04-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (fix_trunc<mode>_i387_fisttp_with_temp): Use 'X'\n+\tconstraint for operand 2 when operand 0 is memory operand.\n+\t(fix_truncdi_i387_with_temp): : Use 'X' constraint for operand 4 when\n+\toperand 0 is memory operand.\n+\t(fix_trunc<mode>_i387_with_temp): Ditto.\n+\t(*floatsi<mode>2_vector_mixed_with_temp): Use 'X' constraint for\n+\toperand 2 when operand 1 is memory operand.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_with_temp): Ditto.\n+\t(*floatsi<mode>2_vector_sse_with_temp): Ditto.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_with_temp): Ditto.\n+\t(*float<SSEMODEI24:mode><X87MODEF:mode>2_i387_with_temp): Ditto.\n+\t(floatdi<X87MODEF:mode>2_i387_with_xmm): Use 'X' constraint for\n+\toperands 2,3 and 4 when operand 1 is memory operand.\n+\t(fistdi2_with_temp): Use 'X' constraint for operand 2 when operand 0\n+\tis memory operand.\n+\t(fistdi2_floor_with_temp): Ditto.\n+\t(fist<mode>2_floor_with_temp): Ditto.\n+\t(fistdi2_ceil_with_temp): Ditto.\n+\t(fist<mode>2_ceil_with_temp): Ditto.\n+\t(*truncdfsf_fast_mixed): Merge alternatives 0 and 1.\n+\n 2008-04-26  David Daney  <ddaney@avtrex.com>\n \n \t* config/mips/mips.md (UNSPEC_COMPARE_AND_SWAP_12): New"}, {"sha": "71f6031320c48370b797fb57389e7590664cfb68", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e8165a686cc74e51e53d28770f6064297e4c80/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e8165a686cc74e51e53d28770f6064297e4c80/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=73e8165a686cc74e51e53d28770f6064297e4c80", "patch": "@@ -4206,23 +4206,22 @@\n   \"\")\n \n (define_insn \"*truncdfsf_fast_mixed\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,f,x\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=fm,x\")\n         (float_truncate:SF\n-          (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f,xm\")))]\n+          (match_operand:DF 1 \"nonimmediate_operand\" \"f  ,xm\")))]\n   \"TARGET_SSE2 && TARGET_MIX_SSE_I387 && flag_unsafe_math_optimizations\"\n {\n   switch (which_alternative)\n     {\n     case 0:\n-    case 1:\n       return output_387_reg_move (insn, operands);\n-    case 2:\n+    case 1:\n       return \"cvtsd2ss\\t{%1, %0|%0, %1}\";\n     default:\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"fmov,fmov,ssecvt\")\n+  [(set_attr \"type\" \"fmov,ssecvt\")\n    (set_attr \"mode\" \"SF\")])\n \n ;; Yes, this one doesn't depend on flag_unsafe_math_optimizations,\n@@ -4640,7 +4639,7 @@\n (define_insn \"fix_trunc<mode>_i387_fisttp_with_temp\"\n   [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f,f\")))\n-   (clobber (match_operand:X87MODEI 2 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_operand:X87MODEI 2 \"memory_operand\" \"=X,m\"))\n    (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_FISTTP\n@@ -4729,7 +4728,7 @@\n \t(fix:DI (match_operand 1 \"register_operand\" \"f,f\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n    (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !TARGET_FISTTP\n@@ -4786,7 +4785,7 @@\n \t(fix:X87MODEI12 (match_operand 1 \"register_operand\" \"f,f\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=m,m\"))]\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=X,m\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !TARGET_FISTTP\n    && !SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\"\n@@ -4963,7 +4962,7 @@\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f,x,x,x\")\n \t(float:MODEF\n \t  (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r,r,m,!x\")))\n-   (clobber (match_operand:SI 2 \"memory_operand\" \"=m,m,m,m,m\"))]\n+   (clobber (match_operand:SI 2 \"memory_operand\" \"=X,m,m,X,m\"))]\n   \"TARGET_SSE2 && TARGET_MIX_SSE_I387\n    && TARGET_USE_VECTOR_CONVERTS && !optimize_size\"\n   \"#\"\n@@ -4993,7 +4992,7 @@\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f,x,x\")\n \t(float:MODEF\n \t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"m,?r,r,m\")))\n-  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=m,m,m,m\"))]\n+  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=X,m,m,X\"))]\n   \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\"\n   \"#\"\n@@ -5071,7 +5070,7 @@\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x,x,x\")\n \t(float:MODEF\n \t  (match_operand:SI 1 \"nonimmediate_operand\" \"r,m,!x\")))\n-   (clobber (match_operand:SI 2 \"memory_operand\" \"=m,m,m\"))]\n+   (clobber (match_operand:SI 2 \"memory_operand\" \"=m,X,m\"))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && TARGET_USE_VECTOR_CONVERTS && !optimize_size\"\n   \"#\"\n@@ -5215,7 +5214,7 @@\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x,x\")\n \t(float:MODEF\n \t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"r,m\")))\n-  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=m,m\"))]\n+  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=m,X\"))]\n   \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\"\n   \"#\"\n@@ -5301,7 +5300,7 @@\n   [(set (match_operand:X87MODEF 0 \"register_operand\" \"=f,f\")\n \t(float:X87MODEF\n \t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"m,?r\")))\n-  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=m,m\"))]\n+  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n@@ -5349,9 +5348,9 @@\n   [(set (match_operand:X87MODEF 0 \"register_operand\" \"=f,f\")\n \t(float:X87MODEF\n \t  (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))\n-   (clobber (match_scratch:V4SI 3 \"=&x,x\"))\n-   (clobber (match_scratch:V4SI 4 \"=&x,x\"))\n-   (clobber (match_operand:DI 2 \"memory_operand\" \"=m,m\"))]\n+   (clobber (match_scratch:V4SI 3 \"=X,x\"))\n+   (clobber (match_scratch:V4SI 4 \"=X,x\"))\n+   (clobber (match_operand:DI 2 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_80387 && TARGET_SSE2 && TARGET_INTER_UNIT_MOVES\n    && !TARGET_64BIT && !optimize_size\"\n   \"#\"\n@@ -17530,7 +17529,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n \t\t   UNSPEC_FIST))\n-   (clobber (match_operand:DI 2 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_operand:DI 2 \"memory_operand\" \"=X,m\"))\n    (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"#\"\n@@ -17780,7 +17779,7 @@\n \t UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n    (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n@@ -17839,7 +17838,7 @@\n \t UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=m,m\"))]\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"#\"\n@@ -18045,7 +18044,7 @@\n \t UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n    (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n@@ -18104,7 +18103,7 @@\n \t UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=m,m\"))]\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"#\""}]}