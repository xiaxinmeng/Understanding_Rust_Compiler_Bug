{"sha": "a4c1cd80655ef876d7f8ff5944999492647ebab5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRjMWNkODA2NTVlZjg3NmQ3ZjhmZjU5NDQ5OTk0OTI2NDdlYmFiNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:26:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:26:04Z"}, "message": "debug.adb: Document that -gnatdA automatically sets -gnatR3m\n\n\t* debug.adb: Document that -gnatdA automatically sets -gnatR3m\n\n\t* gnat1drv.adb (Gnat1drv): If debug flag A set, then automatically\n\tset -gnatR3m mode.\n\n\t* repinfo.adb (List_Rep_Info): Remove special handling of -gnatdA\n\tflag. No longer needed now that we handle this in gnat1drv.adb.\n\n\t* repinfo.ads: Minor reformatting\n\nFrom-SVN: r91878", "tree": {"sha": "461af9a85521ad1dce6fbd6b3325059ef733bae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/461af9a85521ad1dce6fbd6b3325059ef733bae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c1cd80655ef876d7f8ff5944999492647ebab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c1cd80655ef876d7f8ff5944999492647ebab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c1cd80655ef876d7f8ff5944999492647ebab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c1cd80655ef876d7f8ff5944999492647ebab5/comments", "author": null, "committer": null, "parents": [{"sha": "44e1918abd19b6012e27acc89c85230797a2fc79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e1918abd19b6012e27acc89c85230797a2fc79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e1918abd19b6012e27acc89c85230797a2fc79"}], "stats": {"total": 124, "additions": 52, "deletions": 72}, "files": [{"sha": "90036e2332b416f9c97a0e7fc14fd40e5cd0aee2", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=a4c1cd80655ef876d7f8ff5944999492647ebab5", "patch": "@@ -345,7 +345,8 @@ package body Debug is\n    --  dA   Forces output of representation information, including full\n    --       information for all internal type and object entities, as well\n    --       as all user defined type and object entities including private\n-   --       and incomplete types.\n+   --       and incomplete types. This debug switch also automatically sets\n+   --       the equivalent of -gnatR3m.\n \n    --  dB   Output debug encodings for types and variants. See Exp_Dbug for\n    --       exact form of the generated output."}, {"sha": "0a31d559fae24c877d2c5accc1c8b0f6471bd186", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=a4c1cd80655ef876d7f8ff5944999492647ebab5", "patch": "@@ -78,7 +78,7 @@ procedure Gnat1drv is\n    --  Compilation unit node for main unit\n \n    Main_Kind : Node_Kind;\n-   --  Kind of main compilation unit node.\n+   --  Kind of main compilation unit node\n \n    Back_End_Mode : Back_End.Back_End_Mode_Type;\n    --  Record back end mode\n@@ -140,7 +140,7 @@ begin\n               (\"cannot locate file system.ads\");\n             raise Unrecoverable_Error;\n \n-         --  Here if system.ads successfully read. Remember its source index.\n+         --  Remember source index of system.ads (which was read successfully)\n \n          else\n             System_Source_File_Index := S;\n@@ -162,6 +162,14 @@ begin\n          Configurable_Run_Time_Mode := True;\n       end if;\n \n+      --  Set -gnatR3m mode if debug flag A set\n+\n+      if Debug_Flag_AA then\n+         Back_Annotate_Rep_Info := True;\n+         List_Representation_Info := 1;\n+         List_Representation_Info_Mechanisms := True;\n+      end if;\n+\n       --  Output copyright notice if full list mode\n \n       if (Verbose_Mode or Full_List)\n@@ -581,10 +589,10 @@ begin\n       --  the Java VM, since representations are largely symbolic there.\n \n       if Back_End_Mode = Declarations_Only\n-        and then (not (Back_Annotate_Rep_Info or Debug_Flag_AA)\n-                   or else Main_Kind = N_Subunit\n-                   or else Targparm.Frontend_Layout_On_Target\n-                   or else Hostparm.Java_VM)\n+        and then (not Back_Annotate_Rep_Info\n+                    or else Main_Kind = N_Subunit\n+                    or else Targparm.Frontend_Layout_On_Target\n+                    or else Hostparm.Java_VM)\n       then\n          Sem_Ch13.Validate_Unchecked_Conversions;\n          Errout.Finalize;"}, {"sha": "2ce0d661fc8d88908ac4e9b7f2ce526b0b4abe50", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 24, "deletions": 45, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=a4c1cd80655ef876d7f8ff5944999492647ebab5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,22 +31,22 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Alloc;    use Alloc;\n-with Atree;    use Atree;\n-with Casing;   use Casing;\n-with Debug;    use Debug;\n-with Einfo;    use Einfo;\n-with Lib;      use Lib;\n-with Namet;    use Namet;\n-with Opt;      use Opt;\n-with Output;   use Output;\n-with Sinfo;    use Sinfo;\n-with Sinput;   use Sinput;\n-with Snames;   use Snames;\n-with Stand;    use Stand;\n-with Table;    use Table;\n-with Uname;    use Uname;\n-with Urealp;   use Urealp;\n+with Alloc;  use Alloc;\n+with Atree;  use Atree;\n+with Casing; use Casing;\n+with Debug;  use Debug;\n+with Einfo;  use Einfo;\n+with Lib;    use Lib;\n+with Namet;  use Namet;\n+with Opt;    use Opt;\n+with Output; use Output;\n+with Sinfo;  use Sinfo;\n+with Sinput; use Sinput;\n+with Snames; use Snames;\n+with Stand;  use Stand;\n+with Table;  use Table;\n+with Uname;  use Uname;\n+with Urealp; use Urealp;\n \n package body Repinfo is\n \n@@ -199,13 +199,9 @@ package body Repinfo is\n    -- Create_Discrim_Ref --\n    ------------------------\n \n-   function Create_Discrim_Ref\n-     (Discr : Entity_Id)\n-      return  Node_Ref\n-   is\n+   function Create_Discrim_Ref (Discr : Entity_Id) return Node_Ref is\n       N : constant Uint := Discriminant_Number (Discr);\n       T : Nat;\n-\n    begin\n       Rep_Table.Increment_Last;\n       T := Rep_Table.Last;\n@@ -220,12 +216,8 @@ package body Repinfo is\n    -- Create_Dynamic_SO_Ref --\n    ---------------------------\n \n-   function Create_Dynamic_SO_Ref\n-     (E    : Entity_Id)\n-      return Dynamic_SO_Ref\n-   is\n+   function Create_Dynamic_SO_Ref (E : Entity_Id) return Dynamic_SO_Ref is\n       T : Nat;\n-\n    begin\n       Dynamic_SO_Entity_Table.Increment_Last;\n       T := Dynamic_SO_Entity_Table.Last;\n@@ -241,30 +233,24 @@ package body Repinfo is\n      (Expr : TCode;\n       Op1  : Node_Ref_Or_Val;\n       Op2  : Node_Ref_Or_Val := No_Uint;\n-      Op3  : Node_Ref_Or_Val := No_Uint)\n-      return  Node_Ref\n+      Op3  : Node_Ref_Or_Val := No_Uint) return Node_Ref\n    is\n       T : Nat;\n-\n    begin\n       Rep_Table.Increment_Last;\n       T := Rep_Table.Last;\n       Rep_Table.Table (T).Expr := Expr;\n       Rep_Table.Table (T).Op1  := Op1;\n       Rep_Table.Table (T).Op2  := Op2;\n       Rep_Table.Table (T).Op3  := Op3;\n-\n       return UI_From_Int (-T);\n    end Create_Node;\n \n    ---------------------------\n    -- Get_Dynamic_SO_Entity --\n    ---------------------------\n \n-   function Get_Dynamic_SO_Entity\n-     (U    : Dynamic_SO_Ref)\n-      return Entity_Id\n-   is\n+   function Get_Dynamic_SO_Entity (U : Dynamic_SO_Ref) return Entity_Id is\n    begin\n       return Dynamic_SO_Entity_Table.Table (-UI_To_Int (U));\n    end Get_Dynamic_SO_Entity;\n@@ -304,7 +290,6 @@ package body Repinfo is\n    procedure List_Array_Info (Ent : Entity_Id) is\n    begin\n       List_Type_Info (Ent);\n-\n       Write_Str (\"for \");\n       List_Name (Ent);\n       Write_Str (\"'Component_Size use \");\n@@ -330,9 +315,9 @@ package body Repinfo is\n \n       function Find_Declaration (E : Entity_Id) return Node_Id is\n          Decl : Node_Id;\n+\n       begin\n          Decl := Parent (E);\n-\n          while Present (Decl)\n            and then  Nkind (Decl) /= N_Package_Body\n            and then Nkind (Decl) /= N_Subprogram_Declaration\n@@ -972,11 +957,6 @@ package body Repinfo is\n       Col : Nat;\n \n    begin\n-      if Debug_Flag_AA then\n-         List_Representation_Info := 3;\n-         List_Representation_Info_Mechanisms := True;\n-      end if;\n-\n       if List_Representation_Info /= 0\n         or else List_Representation_Info_Mechanisms\n       then\n@@ -1094,9 +1074,8 @@ package body Repinfo is\n    ---------------\n \n    function Rep_Value\n-     (Val  : Node_Ref_Or_Val;\n-      D    : Discrim_List)\n-      return Uint\n+     (Val : Node_Ref_Or_Val;\n+      D   : Discrim_List) return Uint\n    is\n       function B (Val : Boolean) return Uint;\n       --  Returns Uint_0 for False, Uint_1 for True"}, {"sha": "bdc67b7a6f6b84c5737240c75537a094d3662479", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c1cd80655ef876d7f8ff5944999492647ebab5/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=a4c1cd80655ef876d7f8ff5944999492647ebab5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,7 +73,7 @@ package Repinfo is\n    -- Back-Annotation by Gigi --\n    -----------------------------\n \n-   --  The following interface is used by gigi if Backend_Layout is True.\n+   --  The following interface is used by gigi if Backend_Layout is True\n \n    --  As part of the processing in gigi, the types are laid out and\n    --  appropriate values computed for the sizes and component positions\n@@ -177,20 +177,17 @@ package Repinfo is\n    --  The following declarations are for use by gigi for back annotation\n \n    function Create_Node\n-     (Expr  : TCode;\n-      Op1   : Node_Ref_Or_Val;\n-      Op2   : Node_Ref_Or_Val := No_Uint;\n-      Op3   : Node_Ref_Or_Val := No_Uint)\n-      return  Node_Ref;\n+     (Expr : TCode;\n+      Op1  : Node_Ref_Or_Val;\n+      Op2  : Node_Ref_Or_Val := No_Uint;\n+      Op3  : Node_Ref_Or_Val := No_Uint) return Node_Ref;\n    --  Creates a node with using the tree code defined by Expr and from\n    --  1-3 operands as required (unused operands set as shown to No_Uint)\n    --  Note that this call can be used to create a discriminant reference\n    --  by using (Expr => Discrim_Val, Op1 => discriminant_number).\n \n-   function Create_Discrim_Ref\n-     (Discr : Entity_Id)\n-      return  Node_Ref;\n-   --  Creates a refrerence to the discriminant whose entity is Discr.\n+   function Create_Discrim_Ref (Discr : Entity_Id) return Node_Ref;\n+   --  Creates a refrerence to the discriminant whose entity is Discr\n \n    --------------------------------------------------------\n    -- Front-End Interface for Dynamic Size/Offset Values --\n@@ -249,17 +246,13 @@ package Repinfo is\n    --  Given a SO_Ref (Uint) value, returns True iff the SO_Ref value\n    --  represents a static Size/Offset value (i.e. it is non-negative).\n \n-   function Create_Dynamic_SO_Ref\n-     (E    : Entity_Id)\n-      return Dynamic_SO_Ref;\n+   function Create_Dynamic_SO_Ref (E : Entity_Id) return Dynamic_SO_Ref;\n    --  Given the Entity_Id for a constant (case 1), the Node_Id for an\n    --  expression (case 2), or the Entity_Id for a function (case 3),\n    --  this function returns a (negative) Uint value that can be used\n    --  to retrieve the entity or expression for later use.\n \n-   function Get_Dynamic_SO_Entity\n-     (U    : Dynamic_SO_Ref)\n-      return Entity_Id;\n+   function Get_Dynamic_SO_Entity (U : Dynamic_SO_Ref) return Entity_Id;\n    --  Retrieve the Node_Id or Entity_Id stored by a previous call to\n    --  Create_Dynamic_SO_Ref. The approach is that the front end makes\n    --  the necessary Create_Dynamic_SO_Ref calls to associate the node\n@@ -274,9 +267,8 @@ package Repinfo is\n    --  Type used to represent list of discriminant values\n \n    function Rep_Value\n-     (Val  : Node_Ref_Or_Val;\n-      D    : Discrim_List)\n-      return Uint;\n+     (Val : Node_Ref_Or_Val;\n+      D   : Discrim_List) return Uint;\n    --  Given the contents of a First_Bit_Position or Esize field containing\n    --  a node reference (i.e. a negative Uint value) and D, the list of\n    --  discriminant values, returns the interpreted value of this field."}]}