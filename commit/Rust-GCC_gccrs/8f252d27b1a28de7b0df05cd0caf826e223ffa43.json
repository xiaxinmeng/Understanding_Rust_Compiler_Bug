{"sha": "8f252d27b1a28de7b0df05cd0caf826e223ffa43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyNTJkMjdiMWEyOGRlN2IwZGYwNWNkMGNhZjgyNmUyMjNmZmE0Mw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2013-01-02T09:24:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:24:58Z"}, "message": "scos.ads (In_Decision): Add missing entry for 'a'.\n\n2013-01-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* scos.ads (In_Decision): Add missing entry for 'a'.\n\t* sem_prag.adb (Analyze_Pragma, case pragma Check): Omit\n\tcall to Set_SCO_Pragma_Enabled for Invariant and Predicate.\n\t* sem_ch13.adb: Minor comment update.\n\nFrom-SVN: r194777", "tree": {"sha": "b8fb011a72733bc5f7f95c3ff4f3c8d8186ae755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8fb011a72733bc5f7f95c3ff4f3c8d8186ae755"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f252d27b1a28de7b0df05cd0caf826e223ffa43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f252d27b1a28de7b0df05cd0caf826e223ffa43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f252d27b1a28de7b0df05cd0caf826e223ffa43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f252d27b1a28de7b0df05cd0caf826e223ffa43/comments", "author": null, "committer": null, "parents": [{"sha": "e0d7fe6dc7cd55a725891db4073df5d514e6d196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d7fe6dc7cd55a725891db4073df5d514e6d196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d7fe6dc7cd55a725891db4073df5d514e6d196"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "d9e57feb06ae76d86b19a6f9f63fa6b636c9cb37", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8f252d27b1a28de7b0df05cd0caf826e223ffa43", "patch": "@@ -1,3 +1,10 @@\n+2013-01-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* scos.ads (In_Decision): Add missing entry for 'a'.\n+\t* sem_prag.adb (Analyze_Pragma, case pragma Check): Omit\n+\tcall to Set_SCO_Pragma_Enabled for Invariant and Predicate.\n+\t* sem_ch13.adb: Minor comment update.\n+\n 2012-12-21  Ed Schonberg  <schonberg@adacore.com>\n \n \tPR ada/53737"}, {"sha": "dc4248e12d9029ec09f60c833563320b12b91e6e", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=8f252d27b1a28de7b0df05cd0caf826e223ffa43", "patch": "@@ -385,8 +385,8 @@ package SCOs is\n      Table_Increment      => 300);\n \n    Is_Decision : constant array (Character) of Boolean :=\n-     ('E' | 'G' | 'I' | 'P' | 'A' | 'W' | 'X' => True,\n-      others                                  => False);\n+     ('E' | 'G' | 'I' | 'P' | 'a' | 'A' | 'W' | 'X' => True,\n+      others                                        => False);\n    --  Indicates which C1 values correspond to decisions\n \n    --  The SCO_Table_Entry values appear as follows:"}, {"sha": "38be20c7426cac7ce553752af069455afbd1ffef", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8f252d27b1a28de7b0df05cd0caf826e223ffa43", "patch": "@@ -5229,8 +5229,7 @@ package body Sem_Ch13 is\n \n                Exp := New_Copy_Tree (Arg2);\n \n-               --  Preserve sloc of original pragma Invariant (this is required\n-               --  by Par_SCO).\n+               --  Preserve sloc of original pragma Invariant\n \n                Loc := Sloc (Ritem);\n "}, {"sha": "e405c3d388c731177f7667e1303ee0d7a564bf2c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f252d27b1a28de7b0df05cd0caf826e223ffa43/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8f252d27b1a28de7b0df05cd0caf826e223ffa43", "patch": "@@ -2233,7 +2233,7 @@ package body Sem_Prag is\n               (Get_Pragma_Arg (Arg2), Standard_String);\n          end if;\n \n-         --  For a pragma in the extended main source unit, record enabled\n+         --  For a pragma PPC in the extended main source unit, record enabled\n          --  status in SCO.\n \n          --  This may seem redundant with the call to Check_Enabled occurring\n@@ -7449,8 +7449,9 @@ package body Sem_Prag is\n          --              [,[Message =>] String_EXPRESSION]);\n \n          when Pragma_Check => Check : declare\n-            Expr : Node_Id;\n-            Eloc : Source_Ptr;\n+            Expr  : Node_Id;\n+            Eloc  : Source_Ptr;\n+            Cname : Name_Id;\n \n             Check_On : Boolean;\n             --  Set True if category of assertions referenced by Name enabled\n@@ -7477,14 +7478,28 @@ package body Sem_Prag is\n                return;\n             end if;\n \n-            --  Indicate if pragma is enabled. The Original_Node reference here\n-            --  is to deal with pragma Assert rewritten as a Check pragma.\n+            Cname := Chars (Get_Pragma_Arg (Arg1));\n+            Check_On := Check_Enabled (Cname);\n \n-            Check_On := Check_Enabled (Chars (Get_Pragma_Arg (Arg1)));\n+            case Cname is\n+               when Name_Predicate |\n+                    Name_Invariant =>\n \n-            if Check_On and then not Split_PPC (N) then\n-               Set_SCO_Pragma_Enabled (Loc);\n-            end if;\n+                  --  Nothing to do: since checks occur in client units,\n+                  --  the SCO for the aspect in the declaration unit is\n+                  --  conservatively always enabled.\n+\n+                  null;\n+\n+               when others =>\n+\n+                  if Check_On and then not Split_PPC (N) then\n+\n+                     --  Mark pragma/aspect SCO as enabled\n+\n+                     Set_SCO_Pragma_Enabled (Loc);\n+                  end if;\n+            end case;\n \n             --  If expansion is active and the check is not enabled then we\n             --  rewrite the Check as:"}]}