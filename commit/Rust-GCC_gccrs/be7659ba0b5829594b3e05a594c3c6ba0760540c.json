{"sha": "be7659ba0b5829594b3e05a594c3c6ba0760540c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU3NjU5YmEwYjU4Mjk1OTRiM2UwNWE1OTRjM2M2YmEwNzYwNTQwYw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2009-01-31T22:29:16Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2009-01-31T22:29:16Z"}, "message": "install.texi (hppa*-hp-hpux*): Update binutils and linker information.\n\n\t* doc/install.texi (hppa*-hp-hpux*): Update binutils and linker\n\tinformation.  Remove some obsolete information.  Reorganize.\n\nFrom-SVN: r143834", "tree": {"sha": "fb05e3480afcd0af81ae1ba992ac6335a9f4fe00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb05e3480afcd0af81ae1ba992ac6335a9f4fe00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be7659ba0b5829594b3e05a594c3c6ba0760540c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7659ba0b5829594b3e05a594c3c6ba0760540c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7659ba0b5829594b3e05a594c3c6ba0760540c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7659ba0b5829594b3e05a594c3c6ba0760540c/comments", "author": null, "committer": null, "parents": [{"sha": "30f3e4272acfb148d15d86ef43940def4c79558f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f3e4272acfb148d15d86ef43940def4c79558f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f3e4272acfb148d15d86ef43940def4c79558f"}], "stats": {"total": 114, "additions": 43, "deletions": 71}, "files": [{"sha": "efde6da487c7bcd74d27cfd7456b33b6870d745f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7659ba0b5829594b3e05a594c3c6ba0760540c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7659ba0b5829594b3e05a594c3c6ba0760540c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be7659ba0b5829594b3e05a594c3c6ba0760540c", "patch": "@@ -1,5 +1,8 @@\n 2009-01-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n+\t* doc/install.texi (hppa*-hp-hpux*): Update binutils and linker\n+\tinformation.  Remove some obsolete information.  Reorganize.\n+\n \t* config/pa/fptr.c: Revert license to GPL 2.\n \t* config/pa/milli64.S: Likewise.\n "}, {"sha": "b0c2e849c167f1188ac85c4e249381cef0a81a95", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 40, "deletions": 71, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7659ba0b5829594b3e05a594c3c6ba0760540c/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7659ba0b5829594b3e05a594c3c6ba0760540c/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=be7659ba0b5829594b3e05a594c3c6ba0760540c", "patch": "@@ -3049,17 +3049,27 @@ longer a multiple of 2 bytes.\n @heading @anchor{hppa-hp-hpux}hppa*-hp-hpux*\n Support for HP-UX version 9 and older was discontinued in GCC 3.4.\n \n-We require using gas/binutils on all hppa platforms;\n-you may encounter a variety of problems if you try to use the HP assembler.\n+We require using gas/binutils on all hppa platforms.  Version 2.19 or\n+later is recommended.\n \n-Specifically, @option{-g} does not work on HP-UX (since that system\n-uses a peculiar debugging format which GCC does not know about), unless\n-you use GAS and GDB@.  It may be helpful to configure GCC with the\n+It may be helpful to configure GCC with the\n @uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}} and\n @option{--with-as=@dots{}} options to ensure that GCC can find GAS@.\n \n-If you wish to use the pa-risc 2.0 architecture support with a 32-bit\n-runtime, you must use gas/binutils 2.11 or newer.\n+The HP assembler should not be used with GCC.  It is rarely tested and may\n+not work.  It shouldn't be used with any languages other than C due to its\n+many limitations.\n+\n+Specifically, @option{-g} does not work (HP-UX uses a peculiar debugging\n+format which GCC does not know about).  It also inserts timestamps\n+into each object file it creates, causing the 3-stage comparison test to\n+fail during a bootstrap.  You should be able to continue by saying\n+@samp{make all-host all-target} after getting the failure from @samp{make}.\n+\n+Various GCC features are not supported.  For example, it does not support weak\n+symbols or alias definitions.  As a result, explicit template instantiations\n+are required when using C++.  This makes it difficult if not impossible to\n+build many C++ applications.\n \n There are two default scheduling models for instructions.  These are\n PROCESSOR_7100LC and PROCESSOR_8000.  They are selected from the pa-risc\n@@ -3083,17 +3093,6 @@ or @samp{98}.  Another way is to add an appropriate set of predefines\n to @env{CC}.  The description for the @option{munix=} option contains\n a list of the predefines used with each standard.\n \n-As of GCC 4.1, @env{DWARF2} exception handling is available on HP-UX@.\n-It is now the default.  This exposed a bug in the handling of data\n-relocations in the GAS assembler.  The handling of 64-bit data relocations\n-was seriously broken, affecting debugging and exception support on all\n-@samp{hppa64-*-*} targets.  Under some circumstances, 32-bit data relocations\n-could also be handled incorrectly.  This problem is fixed in GAS version\n-2.16.91 20051125.\n-\n-GCC versions prior to 4.1 incorrectly passed and returned complex\n-values.  They are now passed in the same manner as aggregates.\n-\n More specific information to @samp{hppa*-hp-hpux*} targets follows.\n \n @html\n@@ -3119,15 +3118,6 @@ and Latin-America.\n @uref{http://europe.itrc.hp.com/service/home/home.do,,} Europe.\n @end itemize\n \n-The HP assembler on these systems has some problems.  Most notably the\n-assembler inserts timestamps into each object file it creates, causing\n-the 3-stage comparison test to fail during a bootstrap.\n-You should be able to continue by saying @samp{make all-host all-target}\n-after getting the failure from @samp{make}.\n-\n-GCC 4.0 requires CVS binutils as of April 28, 2004 or later.  Earlier\n-versions require binutils 2.8 or later.\n-\n The C++ ABI has changed incompatibly in GCC 4.0.  COMDAT subspaces are\n used for one-only code and data.  This resolves many of the previous\n problems in using C++ on this target.  However, the ABI is not compatible\n@@ -3141,11 +3131,13 @@ with the one implemented under HP-UX 11 using secondary definitions.\n GCC 3.0 and up support HP-UX 11.  GCC 2.95.x is not supported and cannot\n be used to compile GCC 3.0 and up.\n \n+The libffi and libjava libraries haven't been ported to 64-bit HP-UX@\n+and don't build.\n+\n Refer to @uref{binaries.html,,binaries} for information about obtaining\n precompiled GCC binaries for HP-UX@.  Precompiled binaries must be obtained\n to build the Ada language as it can't be bootstrapped using C@.  Ada is\n-only available for the 32-bit PA-RISC runtime.  The libffi and libjava\n-haven't been ported to HP-UX and don't build.\n+only available for the 32-bit PA-RISC runtime.\n \n Starting with GCC 3.4 an ISO C compiler is required to bootstrap.  The\n bundled compiler supports only traditional C; you will need either HP's\n@@ -3171,8 +3163,7 @@ installation prefixes must be used if both are to be installed on\n the same system.  The @samp{hppa[1-2]*-hp-hpux11*} target generates code\n for the 32-bit PA-RISC runtime architecture and uses the HP linker.\n The @samp{hppa64-hp-hpux11*} target generates 64-bit code for the\n-PA-RISC 2.0 architecture.  The HP and GNU linkers are both supported\n-for this target.\n+PA-RISC 2.0 architecture.\n \n The script config.guess now selects the target type based on the compiler\n detected during configuration.  You must define @env{PATH} or @env{CC} so\n@@ -3200,20 +3191,6 @@ result, it's not possible to switch linkers in the middle of a GCC build.\n This has been reported to sometimes occur in unified builds of binutils\n and GCC@.\n \n-GCC 3.0 through 3.2 require binutils 2.11 or above.  GCC 3.3 through\n-GCC 4.0 require binutils 2.14 or later.\n-\n-Although the HP assembler can be used for an initial build, it shouldn't\n-be used with any languages other than C and perhaps Fortran due to its\n-many limitations.  For example, it does not support weak symbols or alias\n-definitions.  As a result, explicit template instantiations are required\n-when using C++.  This makes it difficult if not impossible to build many\n-C++ applications.  You can't generate debugging information when using\n-the HP assembler.  Finally, bootstrapping fails in the final\n-comparison of object modules due to the time stamps that it inserts into\n-the modules.  The bootstrap can be continued from this point with\n-@samp{make all-host all-target}.\n-\n A recent linker patch must be installed for the correct operation of\n GCC 3.3 and later.  @code{PHSS_26559} and @code{PHSS_24304} are the\n oldest linker patches that are known to work.  They are for HP-UX\n@@ -3238,32 +3215,24 @@ options, including program core dumps.  Binutils 2.14 corrects a\n problem on the 64-bit port resulting from HP's non-standard use of\n the .init and .fini sections for array initializers and finalizers.\n \n-There are a number of issues to consider in selecting which linker to\n-use with the 64-bit port.  The GNU 64-bit linker can only create dynamic\n-binaries.  The @option{-static} option causes linking with archive\n-libraries but doesn't produce a truly static binary.  Dynamic binaries\n-still require final binding by the dynamic loader to resolve a set of\n-dynamic-loader-defined symbols.  The default behavior of the HP linker\n-is the same as the GNU linker.  However, it can generate true 64-bit\n-static binaries using the @option{+compat} option.\n-\n-The HP 64-bit linker doesn't support linkonce semantics.  As a\n-result, C++ programs have many more sections than they should.\n-\n-The GNU 64-bit linker has some issues with shared library support\n-and exceptions.  As a result, we only support libgcc in archive\n-format.  For similar reasons, dwarf2 unwind and exception support\n-are disabled.  The GNU linker also has problems creating binaries\n-with @option{-static}.  It doesn't provide stubs for internal\n-calls to global functions in shared libraries, so these calls\n-can't be overloaded.\n-\n-Thread support is not implemented in GCC 3.0 through 3.2, so the\n-@option{--enable-threads} configure option does not work.  In 3.3\n-and later, POSIX threads are supported.  The optional DCE thread\n-library is not supported.\n-\n-This port still is undergoing significant development.\n+Although the HP and GNU linkers are both supported for the\n+@samp{hppa64-hp-hpux11*} target, it is strongly recommended that the\n+HP linker be used for link editing on this target.\n+\n+At this time, the GNU linker does not support the creation of long\n+branch stubs.  As a result, it can't successfully link binaries\n+containing branch offsets larger than 8 megabytes.  In addition,\n+there are problems linking shared libraries, linking executables\n+with @option{-static}, and with dwarf2 unwind and exception support.\n+It also doesn't provide stubs for internal calls to global functions\n+in shared libraries, so these calls can't be overloaded.\n+\n+The HP dynamic loader does not support GNU symbol versioning, so symbol\n+versioning is not supported.  It may be necessary to disable symbol\n+versioning with @option{--disable-symvers} when using GNU ld.\n+\n+POSIX threads are the default.  The optional DCE thread library is not\n+supported, so @option{--enable-threads=dce} does not work.\n \n @html\n <hr />"}]}