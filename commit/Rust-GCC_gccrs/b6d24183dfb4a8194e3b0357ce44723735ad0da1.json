{"sha": "b6d24183dfb4a8194e3b0357ce44723735ad0da1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkMjQxODNkZmI0YTgxOTRlM2IwMzU3Y2U0NDcyMzczNWFkMGRhMQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-23T19:57:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-23T19:57:50Z"}, "message": "invoke.texi: Document -fdelete-null-pointer-checks\n\n        * invoke.texi: Document -fdelete-null-pointer-checks\n        * toplev.c (flag_delete_null_pointer_checks): New.\n        (f_options): Add entry for -fdelete-null-pointer-checks.\n        (rest_of_compilation): Conditionalize null pointer check\n        elimination on flag_delete_null_pointer_checks.\n        (main): If -O2 or greater, enable -fdelete-null-pointer-checks\n\nFrom-SVN: r29631", "tree": {"sha": "8d22611deeacd969fe704c6d8315277ed6b775f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d22611deeacd969fe704c6d8315277ed6b775f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6d24183dfb4a8194e3b0357ce44723735ad0da1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d24183dfb4a8194e3b0357ce44723735ad0da1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d24183dfb4a8194e3b0357ce44723735ad0da1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d24183dfb4a8194e3b0357ce44723735ad0da1/comments", "author": null, "committer": null, "parents": [{"sha": "0cffaca32c2a59f5a88bf4a0d463d84779aa9170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cffaca32c2a59f5a88bf4a0d463d84779aa9170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cffaca32c2a59f5a88bf4a0d463d84779aa9170"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "febde95d3dcc086a67e57da0f16d8c3ecb3c0f58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d24183dfb4a8194e3b0357ce44723735ad0da1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d24183dfb4a8194e3b0357ce44723735ad0da1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6d24183dfb4a8194e3b0357ce44723735ad0da1", "patch": "@@ -1,3 +1,12 @@\n+Thu Sep 23 13:55:21 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* invoke.texi: Document -fdelete-null-pointer-checks\n+\t* toplev.c (flag_delete_null_pointer_checks): New.\n+\t(f_options): Add entry for -fdelete-null-pointer-checks.\n+\t(rest_of_compilation): Conditionalize null pointer check\n+\telimination on flag_delete_null_pointer_checks.\n+\t(main): If -O2 or greater, enable -fdelete-null-pointer-checks\n+\n 1999-09-23 10:56 -0700  Zack Weinberg  <zack@bitmover.com>\n \n \t* iso646.h, stdarg.h, stdbool.h, stddef.h, varargs.h: Add"}, {"sha": "43339b8076920d72a645a570360e202ef541ce5e", "filename": "gcc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d24183dfb4a8194e3b0357ce44723735ad0da1/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d24183dfb4a8194e3b0357ce44723735ad0da1/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=b6d24183dfb4a8194e3b0357ce44723735ad0da1", "patch": "@@ -153,7 +153,7 @@ in the following sections.\n -falign-functions=@var{n}  -falign-labels=@var{n}  -falign-loops=@var{n} \n -falign-jumps=@var{n}  -fbranch-probabilities  \n -fcaller-saves  -fcse-follow-jumps  -fcse-skip-blocks\n--fdelayed-branch   -fexpensive-optimizations\n+-fdelayed-branch  -fdelete-null-pointer-checks -fexpensive-optimizations\n -ffast-math  -ffloat-store  -fforce-addr  -fforce-mem -fno-math-errno\n -fdata-sections  -ffunction-sections  -fgcse \n -finline-functions  -finline-limit=@var{n}  -fkeep-inline-functions\n@@ -2459,6 +2459,14 @@ Run the loop optimizer twice.\n Perform a global common subexpression elimination pass.\n This pass also performs global constant and copy propagation.\n \n+@item -fdelete-null-pointer-checks\n+Use global dataflow analysis to identify and eliminate useless null\n+pointer checks.  Programs which rely on NULL pointer dereferences @emph{not}\n+halting the program may not work properly with this option.  Use\n+-fno-delete-null-pointer-checks to disable this optimizing for programs\n+which depend on that behavior.\n+\n+\n @item -fexpensive-optimizations\n Perform a number of minor optimizations that are relatively expensive.\n "}, {"sha": "9f08f7d5aabc5e412a4ac01759fa3eb7193ffa11", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d24183dfb4a8194e3b0357ce44723735ad0da1/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d24183dfb4a8194e3b0357ce44723735ad0da1/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b6d24183dfb4a8194e3b0357ce44723735ad0da1", "patch": "@@ -568,6 +568,11 @@ int flag_syntax_only = 0;\n \n static int flag_gcse;\n \n+/* Nonzero means to use global dataflow analysis to eliminate\n+   useless null pointer tests.  */\n+\n+static int flag_delete_null_pointer_checks;\n+\n /* Nonzero means to rerun cse after loop optimization.  This increases\n    compilation time about 20% and picks up a few more common expressions.  */\n \n@@ -894,6 +899,8 @@ lang_independent_options f_options[] =\n    \"Run CSE pass after loop optimisations\"},\n   {\"rerun-loop-opt\", &flag_rerun_loop_opt, 1,\n    \"Run the loop optimiser twice\"},\n+  {\"delete-null-pointer-checks\", &flag_delete_null_pointer_checks, 1,\n+   \"Delete useless null pointer checks\" },\n   {\"pretend-float\", &flag_pretend_float, 1,\n    \"Pretend that host and target use the same FP format\"},\n   {\"schedule-insns\", &flag_schedule_insns, 1,\n@@ -3707,7 +3714,7 @@ rest_of_compilation (decl)\n     goto exit_rest_of_compilation;\n \n   /* Try to identify useless null pointer tests and delete them.  */\n-  if (optimize > 1)\n+  if (flag_delete_null_pointer_checks)\n     TIMEVAR (jump_time, delete_null_pointer_checks (get_insns ()));\n \n   /* Dump rtl code after jump, if we are doing that.  */\n@@ -3746,7 +3753,7 @@ rest_of_compilation (decl)\n \t\t\t\t\t   !JUMP_AFTER_REGSCAN));\n  \n       /* Try to identify useless null pointer tests and delete them.  */\n-      if (optimize > 1)\n+      if (flag_delete_null_pointer_checks)\n \tTIMEVAR (jump_time, delete_null_pointer_checks (get_insns ()));\n \n       /* Dump rtl code after cse, if we are doing that.  */\n@@ -5322,6 +5329,7 @@ main (argc, argv)\n #endif\n       flag_regmove = 1;\n       flag_strict_aliasing = 1;\n+      flag_delete_null_pointer_checks = 1;\n     }\n \n   if (optimize >= 3)"}]}