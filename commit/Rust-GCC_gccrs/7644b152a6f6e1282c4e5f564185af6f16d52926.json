{"sha": "7644b152a6f6e1282c4e5f564185af6f16d52926", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY0NGIxNTJhNmY2ZTEyODJjNGU1ZjU2NDE4NWFmNmYxNmQ1MjkyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-04-14T23:44:01Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-04-14T23:44:01Z"}, "message": "Reorganize va_arg\n\nFrom-SVN: r9387", "tree": {"sha": "fd05e86dba927fc25e09a1e9670daa9f6f7df6d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd05e86dba927fc25e09a1e9670daa9f6f7df6d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7644b152a6f6e1282c4e5f564185af6f16d52926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7644b152a6f6e1282c4e5f564185af6f16d52926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7644b152a6f6e1282c4e5f564185af6f16d52926", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7644b152a6f6e1282c4e5f564185af6f16d52926/comments", "author": null, "committer": null, "parents": [{"sha": "fa42ea0227fb2915d639c83c0adf770225081377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa42ea0227fb2915d639c83c0adf770225081377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa42ea0227fb2915d639c83c0adf770225081377"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "21ddc56288558d3cb15fd7d4f0723e8b14887a74", "filename": "gcc/ginclude/va-clipper.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-clipper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-clipper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-clipper.h?ref=7644b152a6f6e1282c4e5f564185af6f16d52926", "patch": "@@ -46,11 +46,11 @@ typedef struct\n   ((AP).__va_ap = ((AP).__va_ap + sizeof (int) - 1) & ~(sizeof (int) - 1)))\n \n #define va_arg(AP, TYPE) \\\n-  ((AP).__va_num < 2 && __builtin_classify_type (* (TYPE *)0) < 12\t\\\n+  (*((AP).__va_num < 2 && __builtin_classify_type (* (TYPE *)0) < 12\t\\\n    ? (__builtin_classify_type (* (TYPE *)0) == 8\t\t\t\\\n-      ? (*(TYPE *)(AP).__va_reg[2 * (AP).__va_num++ + 1])\t\t\\\n-      : (*(TYPE *)(AP).__va_reg[2 * (AP).__va_num++ ]))\t\t\t\\\n-   : ((AP).__va_num++, __va_round (AP,TYPE), *((TYPE *)((AP).__va_ap))++))\n+      ? ((TYPE *)(AP).__va_reg[2 * (AP).__va_num++ + 1])\t\t\\\n+      : ((TYPE *)(AP).__va_reg[2 * (AP).__va_num++ ]))\t\t\t\\\n+   : ((AP).__va_num++, __va_round (AP,TYPE), ((TYPE *)((AP).__va_ap))++)))\n \n #define va_end(AP)\t((void) 0)\n "}, {"sha": "b6b81dd09253e513ca9bbd7653deb2606e3b57b7", "filename": "gcc/ginclude/va-pa.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-pa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-pa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-pa.h?ref=7644b152a6f6e1282c4e5f564185af6f16d52926", "patch": "@@ -33,13 +33,13 @@ typedef double *__gnuc_va_list;\n #endif\n \n #define va_arg(AP,TYPE)\t\t\t\t\t\t\\\n-  (sizeof(TYPE) > 8 ?\t\t\t\t\t\t\\\n+  (*(sizeof(TYPE) > 8 ?\t\t\t\t\t\t\\\n    ((AP = (__gnuc_va_list) ((char *)AP - sizeof (int))),\t\\\n-    (*((TYPE *) (void *) (*((int *) (AP))))))\t\t\t\\\n+    (((TYPE *) (void *) (*((int *) (AP))))))\t\t\t\\\n    :((AP =\t\t\t\t\t\t\t\\\n       (__gnuc_va_list) ((long)((char *)AP - sizeof (TYPE))\t\\\n \t\t\t& (sizeof(TYPE) > 4 ? ~0x7 : ~0x3))),\t\\\n-     (*((TYPE *) (void *) ((char *)AP + ((8 - sizeof(TYPE)) % 4))))))\n+     (((TYPE *) (void *) ((char *)AP + ((8 - sizeof(TYPE)) % 4)))))))\n \n #ifndef va_end\n void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */"}, {"sha": "5ad4ba9d763ef56e246b4024d87e0058c829e58f", "filename": "gcc/ginclude/va-pyr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-pyr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-pyr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-pyr.h?ref=7644b152a6f6e1282c4e5f564185af6f16d52926", "patch": "@@ -111,7 +111,7 @@ typedef __va_buf __gnuc_va_list;\n    a warning about increasing the alignment requirement.  */\n #define va_arg(_AP, _MODE)\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n-({__voidptr *__ap = (__voidptr*)&_AP;\t\t\t\t\t\\\n+(*({__voidptr *__ap = (__voidptr*)&_AP;\t\t\t\t\t\\\n   register int __size = sizeof (_MODE);\t\t\t\t\t\\\n   register int __onstack =\t\t\t\t\t\t\\\n \t  (__size > 8 || ( (int)(__ap[2]) > 11) ||\t\t\t\\\n@@ -121,8 +121,8 @@ __extension__\t\t\t\t\t\t\t\t\\\n   ((void *)__ap[__onstack])+=__size;\t\t\t\t\t\\\n     if (__onstack==0 || (int)(__ap[2])==11)\t\t\t\t\\\n       __ap[2]+= (__size >> 2);\t\t\t\t\t\t\\\n-  *(( _MODE *) (void *) __param_addr);\t\t\t\t\t\\\n-})\n+  (( _MODE *) (void *) __param_addr);\t\t\t\t\t\\\n+}))\n \n void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n #define va_end(_X)\t((void)0)"}, {"sha": "525420a96e4251e39d4a8c1c77d335275c80dc1d", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=7644b152a6f6e1282c4e5f564185af6f16d52926", "patch": "@@ -132,7 +132,7 @@ enum __va_type_classes {\n \n #define va_arg(pvar,TYPE)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\\\n-({int __type = __builtin_classify_type (* (TYPE *) 0);\t\t\\\n+(*({int __type = __builtin_classify_type (* (TYPE *) 0);\t\\\n   void * __result;\t\t\t\t\t\t\\\n   if (__type == __real_type_class)\t\t/* float? */\t\\\n     {\t\t\t\t\t\t\t\t\\\n@@ -170,7 +170,7 @@ __extension__\t\t\t\t\t\t\t\\\n \t__r = (void **) pvar.__va_next_stack++;\t\t\t\\\n       __result = *__r;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n-  *(TYPE *) __result;})\n+  (TYPE *) __result;}))\n \n #else /* not __sparc_v9__ */\n \n@@ -184,18 +184,17 @@ __extension__\t\t\t\t\t\t\t\\\n    The casts to char * avoid warnings about invalid pointer arithmetic.  */\n #define va_arg(pvar,TYPE)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\\\n-({ TYPE __va_temp;\t\t\t\t\t\t\\\n-   ((__builtin_classify_type (__va_temp) >= __record_type_class) \\\n+(*({((__builtin_classify_type (*(TYPE*) 0) >= __record_type_class) \\\n     ? ((pvar) = (char *)(pvar) + __va_rounded_size (TYPE *),\t\\\n-       **(TYPE **) (void *) ((char *)(pvar) - __va_rounded_size (TYPE *))) \\\n+       *(TYPE **) (void *) ((char *)(pvar) - __va_rounded_size (TYPE *))) \\\n     : __va_rounded_size (TYPE) == 8\t\t\t\t\\\n     ? ({ union {char __d[sizeof (TYPE)]; int __i[2];} __u;\t\\\n \t __u.__i[0] = ((int *) (void *) (pvar))[0];\t\t\\\n \t __u.__i[1] = ((int *) (void *) (pvar))[1];\t\t\\\n \t (pvar) = (char *)(pvar) + 8;\t\t\t\t\\\n-\t *(TYPE *) (void *) __u.__d; })\t\t\t\t\\\n+\t (TYPE *) (void *) __u.__d; })\t\t\t\t\\\n     : ((pvar) = (char *)(pvar) + __va_rounded_size (TYPE),\t\\\n-       *((TYPE *) (void *) ((char *)(pvar) - __va_rounded_size (TYPE)))));})\n+       ((TYPE *) (void *) ((char *)(pvar) - __va_rounded_size (TYPE)))));}))\n #endif /* not __sparc_v9__ */\n \n #endif /* defined (_STDARG_H) || defined (_VARARGS_H) */"}, {"sha": "68cbc5ced64c1883f7ce1a1cb9312ba92a87b5eb", "filename": "gcc/ginclude/va-spur.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-spur.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7644b152a6f6e1282c4e5f564185af6f16d52926/gcc%2Fginclude%2Fva-spur.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-spur.h?ref=7644b152a6f6e1282c4e5f564185af6f16d52926", "patch": "@@ -38,24 +38,24 @@ typedef struct {\n \n #define va_arg(pvar,type)  \\\n __extension__ \\\n-    ({  type __va_result; \\\n+    (*({  type *__va_result; \\\n         if ((pvar).__pnt >= 20) { \\\n-           __va_result = *( (type *) ((pvar).__stack + (pvar).__pnt - 20)); \\\n+           __va_result = ( (type *) ((pvar).__stack + (pvar).__pnt - 20)); \\\n \t   (pvar).__pnt += (sizeof(type) + 7) & ~7; \\\n \t} \\\n \telse if ((pvar).__pnt + sizeof(type) > 20) { \\\n-\t   __va_result = * (type *) (pvar).__stack; \\\n+\t   __va_result = (type *) (pvar).__stack; \\\n \t   (pvar).__pnt = 20 + ( (sizeof(type) + 7) & ~7); \\\n \t} \\\n \telse if (sizeof(type) == 8) { \\\n \t   union {double d; int i[2];} __u; \\\n \t   __u.i[0] = *(int *) ((pvar).__regs + (pvar).__pnt); \\\n \t   __u.i[1] = *(int *) ((pvar).__regs + (pvar).__pnt + 4); \\\n-\t   __va_result = * (type *) &__u; \\\n+\t   __va_result = (type *) &__u; \\\n \t   (pvar).__pnt += 8; \\\n \t} \\\n \telse { \\\n-\t   __va_result = * (type *) ((pvar).__regs + (pvar).__pnt); \\\n+\t   __va_result = (type *) ((pvar).__regs + (pvar).__pnt); \\\n \t   (pvar).__pnt += (sizeof(type) + 3) & ~3; \\\n \t} \\\n-\t__va_result; })\n+\t__va_result; }))"}]}