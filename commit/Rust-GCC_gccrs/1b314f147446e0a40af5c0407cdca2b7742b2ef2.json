{"sha": "1b314f147446e0a40af5c0407cdca2b7742b2ef2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIzMTRmMTQ3NDQ2ZTBhNDBhZjVjMDQwN2NkY2EyYjc3NDJiMmVmMg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2017-10-08T18:02:31Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2017-10-08T18:02:31Z"}, "message": "check.c (gfc_check_x): Remove function.\n\n2017-10-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* check.c (gfc_check_x): Remove function.\n\t* intrinsic.c (add_functions): Use gfc_check_fn_r.\n\nFrom-SVN: r253528", "tree": {"sha": "5092e0f2e1e91f55bf619325c8b0eb69ff38bafe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5092e0f2e1e91f55bf619325c8b0eb69ff38bafe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b314f147446e0a40af5c0407cdca2b7742b2ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b314f147446e0a40af5c0407cdca2b7742b2ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b314f147446e0a40af5c0407cdca2b7742b2ef2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b314f147446e0a40af5c0407cdca2b7742b2ef2/comments", "author": null, "committer": null, "parents": [{"sha": "5759add46043e6df832cd59d80cde631caa63516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5759add46043e6df832cd59d80cde631caa63516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5759add46043e6df832cd59d80cde631caa63516"}], "stats": {"total": 50, "additions": 21, "deletions": 29}, "files": [{"sha": "aaebe17fb516d17f2ce1dc1eeb23b617a74e4bd0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b314f147446e0a40af5c0407cdca2b7742b2ef2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b314f147446e0a40af5c0407cdca2b7742b2ef2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1b314f147446e0a40af5c0407cdca2b7742b2ef2", "patch": "@@ -1,3 +1,8 @@\n+2017-10-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* check.c (gfc_check_x): Remove function.\n+\t* intrinsic.c (add_functions): Use gfc_check_fn_r.\n+\n 2017-10-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/82375"}, {"sha": "681950e782f96fc3dbea03d61b84c140b4ccd9c3", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b314f147446e0a40af5c0407cdca2b7742b2ef2/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b314f147446e0a40af5c0407cdca2b7742b2ef2/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=1b314f147446e0a40af5c0407cdca2b7742b2ef2", "patch": "@@ -2262,6 +2262,7 @@ gfc_check_fn_c (gfc_expr *a)\n   return true;\n }\n \n+\n /* A single real argument.  */\n \n bool\n@@ -5512,19 +5513,6 @@ gfc_check_ttynam (gfc_expr *unit)\n }\n \n \n-/* Common check function for the half a dozen intrinsics that have a\n-   single real argument.  */\n-\n-bool\n-gfc_check_x (gfc_expr *x)\n-{\n-  if (!type_check (x, 0, BT_REAL))\n-    return false;\n-\n-  return true;\n-}\n-\n-\n /************* Check functions for intrinsic subroutines *************/\n \n bool"}, {"sha": "da96e8ff30c4f8be4c8053a5a136a4d62278aebd", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b314f147446e0a40af5c0407cdca2b7742b2ef2/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b314f147446e0a40af5c0407cdca2b7742b2ef2/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=1b314f147446e0a40af5c0407cdca2b7742b2ef2", "patch": "@@ -1760,8 +1760,8 @@ add_functions (void)\n \n   make_generic (\"eoshift\", GFC_ISYM_EOSHIFT, GFC_STD_F95);\n \n-  add_sym_1 (\"epsilon\", GFC_ISYM_EPSILON, CLASS_INQUIRY, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n-\t     gfc_check_x, gfc_simplify_epsilon, NULL,\n+  add_sym_1 (\"epsilon\", GFC_ISYM_EPSILON, CLASS_INQUIRY, ACTUAL_NO, BT_REAL, dr,\n+\t     GFC_STD_F95, gfc_check_fn_r, gfc_simplify_epsilon, NULL,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_generic (\"epsilon\", GFC_ISYM_EPSILON, GFC_STD_F95);\n@@ -1827,8 +1827,8 @@ add_functions (void)\n \n   make_generic (\"exp\", GFC_ISYM_EXP, GFC_STD_F77);\n \n-  add_sym_1 (\"exponent\", GFC_ISYM_EXPONENT, CLASS_ELEMENTAL, ACTUAL_NO, BT_INTEGER, di, GFC_STD_F95,\n-\t     gfc_check_x, gfc_simplify_exponent, gfc_resolve_exponent,\n+  add_sym_1 (\"exponent\", GFC_ISYM_EXPONENT, CLASS_ELEMENTAL, ACTUAL_NO, BT_INTEGER, di,\n+\t     GFC_STD_F95, gfc_check_fn_r, gfc_simplify_exponent, gfc_resolve_exponent,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_generic (\"exponent\", GFC_ISYM_EXPONENT, GFC_STD_F95);\n@@ -1865,8 +1865,8 @@ add_functions (void)\n \n   make_generic (\"fnum\", GFC_ISYM_FNUM, GFC_STD_GNU);\n \n-  add_sym_1 (\"fraction\", GFC_ISYM_FRACTION, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n-\t     gfc_check_x, gfc_simplify_fraction, gfc_resolve_fraction,\n+  add_sym_1 (\"fraction\", GFC_ISYM_FRACTION, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr,\n+\t     GFC_STD_F95, gfc_check_fn_r, gfc_simplify_fraction, gfc_resolve_fraction,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_generic (\"fraction\", GFC_ISYM_FRACTION, GFC_STD_F95);\n@@ -2449,8 +2449,8 @@ add_functions (void)\n \n   make_generic (\"max\", GFC_ISYM_MAX, GFC_STD_F77);\n \n-  add_sym_1 (\"maxexponent\", GFC_ISYM_MAXEXPONENT, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER, di,\n-\t     GFC_STD_F95, gfc_check_x, gfc_simplify_maxexponent, NULL,\n+  add_sym_1 (\"maxexponent\", GFC_ISYM_MAXEXPONENT, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER,\n+\t     di, GFC_STD_F95, gfc_check_fn_r, gfc_simplify_maxexponent, NULL,\n \t     x, BT_UNKNOWN, dr, REQUIRED);\n \n   make_generic (\"maxexponent\", GFC_ISYM_MAXEXPONENT, GFC_STD_F95);\n@@ -2525,8 +2525,8 @@ add_functions (void)\n \n   make_generic (\"min\", GFC_ISYM_MIN, GFC_STD_F77);\n \n-  add_sym_1 (\"minexponent\", GFC_ISYM_MINEXPONENT, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER, di,\n-\t     GFC_STD_F95, gfc_check_x, gfc_simplify_minexponent, NULL,\n+  add_sym_1 (\"minexponent\", GFC_ISYM_MINEXPONENT, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER,\n+\t     di, GFC_STD_F95, gfc_check_fn_r, gfc_simplify_minexponent, NULL,\n \t     x, BT_UNKNOWN, dr, REQUIRED);\n \n   make_generic (\"minexponent\", GFC_ISYM_MINEXPONENT, GFC_STD_F95);\n@@ -2753,8 +2753,8 @@ add_functions (void)\n \n   make_generic (\"reshape\", GFC_ISYM_RESHAPE, GFC_STD_F95);\n \n-  add_sym_1 (\"rrspacing\", GFC_ISYM_RRSPACING, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n-\t     gfc_check_x, gfc_simplify_rrspacing, gfc_resolve_rrspacing,\n+  add_sym_1 (\"rrspacing\", GFC_ISYM_RRSPACING, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr,\n+\t     GFC_STD_F95, gfc_check_fn_r, gfc_simplify_rrspacing, gfc_resolve_rrspacing,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_generic (\"rrspacing\", GFC_ISYM_RRSPACING, GFC_STD_F95);\n@@ -2960,8 +2960,8 @@ add_functions (void)\n \t     NULL, gfc_simplify_compiler_version, NULL);\n   make_from_module();\n \n-  add_sym_1 (\"spacing\", GFC_ISYM_SPACING, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n-\t     gfc_check_x, gfc_simplify_spacing, gfc_resolve_spacing,\n+  add_sym_1 (\"spacing\", GFC_ISYM_SPACING, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr,\n+\t     GFC_STD_F95, gfc_check_fn_r, gfc_simplify_spacing, gfc_resolve_spacing,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_generic (\"spacing\", GFC_ISYM_SPACING, GFC_STD_F95);\n@@ -3070,8 +3070,7 @@ add_functions (void)\n   make_generic (\"time8\", GFC_ISYM_TIME8, GFC_STD_GNU);\n \n   add_sym_1 (\"tiny\", GFC_ISYM_TINY, CLASS_INQUIRY, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n-\t     gfc_check_x, gfc_simplify_tiny, NULL,\n-\t     x, BT_REAL, dr, REQUIRED);\n+\t     gfc_check_fn_r, gfc_simplify_tiny, NULL, x, BT_REAL, dr, REQUIRED);\n \n   make_generic (\"tiny\", GFC_ISYM_TINY, GFC_STD_F95);\n "}]}