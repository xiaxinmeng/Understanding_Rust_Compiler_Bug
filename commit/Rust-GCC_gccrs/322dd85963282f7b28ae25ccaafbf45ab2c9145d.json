{"sha": "322dd85963282f7b28ae25ccaafbf45ab2c9145d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIyZGQ4NTk2MzI4MmY3YjI4YWUyNWNjYWFmYmY0NWFiMmM5MTQ1ZA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-03-28T12:15:44Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-03-28T12:15:44Z"}, "message": "tree-inline.c (expand_call_inline): Do not check that destination node is analyzed.\n\n2011-03-28  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-inline.c (expand_call_inline): Do not check that destination\n\tnode is analyzed.\n\t(optimize_inline_calls): Assert that destination node is analyzed.\n\t* cgraph.c (cgraph_add_new_function): Call cgraph_analyze_function, do\n\tnot call tree_lowering_passes.\n\t* cgraph.h (cgraph_analyze_function): Declare.\n\t* cgraphunit.c (cgraph_analyze_function): Make public.\n\nFrom-SVN: r171602", "tree": {"sha": "af67dd327ad63f08a6c47d5f6e9ec258c665e64e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af67dd327ad63f08a6c47d5f6e9ec258c665e64e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/322dd85963282f7b28ae25ccaafbf45ab2c9145d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/322dd85963282f7b28ae25ccaafbf45ab2c9145d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/322dd85963282f7b28ae25ccaafbf45ab2c9145d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/322dd85963282f7b28ae25ccaafbf45ab2c9145d/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa53e58b920d4fe4bbdb26e227401ad827c52a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa53e58b920d4fe4bbdb26e227401ad827c52a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa53e58b920d4fe4bbdb26e227401ad827c52a57"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "dcc5e1ce15025b9e93b7c2ce2df34fcfddf42b71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=322dd85963282f7b28ae25ccaafbf45ab2c9145d", "patch": "@@ -1,3 +1,13 @@\n+2011-03-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-inline.c (expand_call_inline): Do not check that destination\n+\tnode is analyzed.\n+\t(optimize_inline_calls): Assert that destination node is analyzed.\n+\t* cgraph.c (cgraph_add_new_function): Call cgraph_analyze_function, do\n+\tnot call tree_lowering_passes.\n+\t* cgraph.h (cgraph_analyze_function): Declare.\n+\t* cgraphunit.c (cgraph_analyze_function): Make public.\n+\n 2011-03-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/sparc/sparc-opts.h: New."}, {"sha": "3cf75f293c9fc6c7cc8030e5644664f8163e9913", "filename": "gcc/cgraph.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=322dd85963282f7b28ae25ccaafbf45ab2c9145d", "patch": "@@ -2495,11 +2495,13 @@ cgraph_add_new_function (tree fndecl, bool lowered)\n       case CGRAPH_STATE_FINISHED:\n \t/* At the very end of compilation we have to do all the work up\n \t   to expansion.  */\n+\tnode = cgraph_node (fndecl);\n+\tif (lowered)\n+\t  node->lowered = true;\n+\tcgraph_analyze_function (node);\n \tpush_cfun (DECL_STRUCT_FUNCTION (fndecl));\n \tcurrent_function_decl = fndecl;\n \tgimple_register_cfg_hooks ();\n-\tif (!lowered)\n-          tree_lowering_passes (fndecl);\n \tbitmap_obstack_initialize (NULL);\n \tif (!gimple_in_ssa_p (DECL_STRUCT_FUNCTION (fndecl)))\n \t  execute_pass_list (pass_early_local_passes.pass.sub);"}, {"sha": "e774c00eb3850157de3629399e543dfc45773667", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=322dd85963282f7b28ae25ccaafbf45ab2c9145d", "patch": "@@ -618,6 +618,7 @@ bool varpool_used_from_object_file_p (struct varpool_node *node);\n extern FILE *cgraph_dump_file;\n void cgraph_finalize_function (tree, bool);\n void cgraph_mark_if_needed (tree);\n+void cgraph_analyze_function (struct cgraph_node *);\n void cgraph_finalize_compilation_unit (void);\n void cgraph_optimize (void);\n void cgraph_mark_needed_node (struct cgraph_node *);"}, {"sha": "c397fe53f6c8a0eff480b007e3d556e8fa655bef", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=322dd85963282f7b28ae25ccaafbf45ab2c9145d", "patch": "@@ -143,7 +143,6 @@ static void cgraph_expand_all_functions (void);\n static void cgraph_mark_functions_to_output (void);\n static void cgraph_expand_function (struct cgraph_node *);\n static void cgraph_output_pending_asms (void);\n-static void cgraph_analyze_function (struct cgraph_node *);\n \n FILE *cgraph_dump_file;\n \n@@ -773,7 +772,7 @@ cgraph_output_pending_asms (void)\n }\n \n /* Analyze the function scheduled to be output.  */\n-static void\n+void\n cgraph_analyze_function (struct cgraph_node *node)\n {\n   tree save = current_function_decl;"}, {"sha": "8c8aef662942d14dd47f731c604f27205aec7738", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322dd85963282f7b28ae25ccaafbf45ab2c9145d/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=322dd85963282f7b28ae25ccaafbf45ab2c9145d", "patch": "@@ -3766,11 +3766,6 @@ expand_call_inline (basic_block bb, gimple stmt, copy_body_data *id)\n   if (gimple_code (stmt) != GIMPLE_CALL)\n     goto egress;\n \n-  /* Objective C and fortran still calls tree_rest_of_compilation directly.\n-     Kill this check once this is fixed.  */\n-  if (!id->dst_node->analyzed)\n-    goto egress;\n-\n   cg_edge = cgraph_edge (id->dst_node, stmt);\n   gcc_checking_assert (cg_edge);\n   /* First, see if we can figure out what function is being called.\n@@ -4203,6 +4198,7 @@ optimize_inline_calls (tree fn)\n   memset (&id, 0, sizeof (id));\n \n   id.src_node = id.dst_node = cgraph_node (fn);\n+  gcc_assert (id.dst_node->analyzed);\n   id.dst_fn = fn;\n   /* Or any functions that aren't finished yet.  */\n   if (current_function_decl)"}]}