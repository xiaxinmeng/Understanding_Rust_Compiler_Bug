{"sha": "8fc6a63c64aeb6c6464f2419a67033acc693218d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjNmE2M2M2NGFlYjZjNjQ2NGYyNDE5YTY3MDMzYWNjNjkzMjE4ZA==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2001-05-16T06:41:10Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-05-16T06:41:10Z"}, "message": "expr.c (build_class_init): Move MODIFY_EXPR outside of COND_EXPR.\n\n2000-05-02  Jeff Sturm  <jsturm@one-point.com>\n\n\t* expr.c (build_class_init): Move MODIFY_EXPR\n\toutside of COND_EXPR.  Remove variable `call'.\n\nFrom-SVN: r42134", "tree": {"sha": "c5bc1f6f0e067a2ca8a365c7105a44e59edfcc57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5bc1f6f0e067a2ca8a365c7105a44e59edfcc57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fc6a63c64aeb6c6464f2419a67033acc693218d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc6a63c64aeb6c6464f2419a67033acc693218d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fc6a63c64aeb6c6464f2419a67033acc693218d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc6a63c64aeb6c6464f2419a67033acc693218d/comments", "author": null, "committer": null, "parents": [{"sha": "0b1cdaf229cff4b90492fcbfe25c98642368f185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1cdaf229cff4b90492fcbfe25c98642368f185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1cdaf229cff4b90492fcbfe25c98642368f185"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "7fd7de5b6e3614cdc205832c0ed06ef02e567714", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fc6a63c64aeb6c6464f2419a67033acc693218d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fc6a63c64aeb6c6464f2419a67033acc693218d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8fc6a63c64aeb6c6464f2419a67033acc693218d", "patch": "@@ -34,6 +34,11 @@\n         * lex.c (java_new_lexer): Call iconv_close on temp handle used to\n \tcheck for byte swap.\n \n+2000-05-02  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* expr.c (build_class_init): Move MODIFY_EXPR\n+\toutside of COND_EXPR.  Remove variable `call'.\n+\n 2001-05-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* decl.c: NULL_PTR -> NULL."}, {"sha": "9ba0739d7d76f80db6054d42e34fcdbca9173b18", "filename": "gcc/java/expr.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fc6a63c64aeb6c6464f2419a67033acc693218d/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fc6a63c64aeb6c6464f2419a67033acc693218d/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=8fc6a63c64aeb6c6464f2419a67033acc693218d", "patch": "@@ -1662,7 +1662,7 @@ tree\n build_class_init (clas, expr)\n      tree clas, expr;\n {\n-  tree init, call;\n+  tree init;\n   struct init_test_hash_entry *ite;\n   if (inherits_from_p (current_class, clas))\n     return expr;\n@@ -1693,14 +1693,14 @@ build_class_init (clas, expr)\n \t\t    build_tree_list (NULL_TREE, build_class_ref (clas)),\n \t\t    NULL_TREE);\n       TREE_SIDE_EFFECTS (init) = 1;\n-      call = build (COMPOUND_EXPR, TREE_TYPE (expr), init, \n-\t\t    build (MODIFY_EXPR, boolean_type_node,\n-\t\t\t   ite->init_test_decl, boolean_true_node));\n-      TREE_SIDE_EFFECTS (call) = 1;\n       init = build (COND_EXPR, void_type_node,\n \t\t    build (EQ_EXPR, boolean_type_node, \n \t\t\t   ite->init_test_decl, boolean_false_node),\n-\t\t    call, integer_zero_node);\n+\t\t    init, integer_zero_node);\n+      TREE_SIDE_EFFECTS (init) = 1;\n+      init = build (COMPOUND_EXPR, TREE_TYPE (expr), init, \n+\t\t    build (MODIFY_EXPR, boolean_type_node,\n+\t\t\t   ite->init_test_decl, boolean_true_node));\n       TREE_SIDE_EFFECTS (init) = 1;\n     }\n "}]}