{"sha": "f719e2f1d7675d997fda88be87f65e350d563bc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcxOWUyZjFkNzY3NWQ5OTdmZGE4OGJlODdmNjVlMzUwZDU2M2JjMw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2017-07-29T01:37:54Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2017-07-29T01:37:54Z"}, "message": "use c++ instead of make_node_stat\n\ngcc/ChangeLog:\n\n2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree.c (make_node_stat): rename to make_node.\n\t(build_tree_list_stat): Adjust.\n\t(build0_stat): Likewise.\n\t(build2_stat): Likewise.\n\t(build3_stat): Likewise.\n\t(build4_stat): Likewise.\n\t(build5_stat): Likewise.\n\t(build_decl_stat): Likewise.\n\t* tree.h (make_node_stat): Adjust prototype.\n\t(make_node): remove macro.\n\nFrom-SVN: r250694", "tree": {"sha": "b2fbc4aafde1508f5491c83d2b4f015dfa4c4698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2fbc4aafde1508f5491c83d2b4f015dfa4c4698"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f719e2f1d7675d997fda88be87f65e350d563bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f719e2f1d7675d997fda88be87f65e350d563bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f719e2f1d7675d997fda88be87f65e350d563bc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f719e2f1d7675d997fda88be87f65e350d563bc3/comments", "author": null, "committer": null, "parents": [{"sha": "57a93c6a66ad463be252bf46b4506445666680a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57a93c6a66ad463be252bf46b4506445666680a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57a93c6a66ad463be252bf46b4506445666680a4"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "8513aa079103bd1cca6d53883d4e3df2df71c1a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f719e2f1d7675d997fda88be87f65e350d563bc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f719e2f1d7675d997fda88be87f65e350d563bc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f719e2f1d7675d997fda88be87f65e350d563bc3", "patch": "@@ -1,3 +1,16 @@\n+2017-07-28  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree.c (make_node_stat): rename to make_node.\n+\t(build_tree_list_stat): Adjust.\n+\t(build0_stat): Likewise.\n+\t(build2_stat): Likewise.\n+\t(build3_stat): Likewise.\n+\t(build4_stat): Likewise.\n+\t(build5_stat): Likewise.\n+\t(build_decl_stat): Likewise.\n+\t* tree.h (make_node_stat): Adjust prototype.\n+\t(make_node): remove macro.\n+\n 2017-07-28  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/ppc-auxv.h (PPC_FEATURE2_DARN): New define."}, {"sha": "49c54bbb4c7c5bff50bdd1b60d64f94266636c94", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f719e2f1d7675d997fda88be87f65e350d563bc3/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f719e2f1d7675d997fda88be87f65e350d563bc3/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f719e2f1d7675d997fda88be87f65e350d563bc3", "patch": "@@ -997,7 +997,7 @@ allocate_decl_uid (void)\n    Achoo!  I got a code in the node.  */\n \n tree\n-make_node_stat (enum tree_code code MEM_STAT_DECL)\n+make_node (enum tree_code code MEM_STAT_DECL)\n {\n   tree t;\n   enum tree_code_class type = TREE_CODE_CLASS (code);\n@@ -2870,7 +2870,7 @@ nreverse (tree t)\n tree\n build_tree_list_stat (tree parm, tree value MEM_STAT_DECL)\n {\n-  tree t = make_node_stat (TREE_LIST PASS_MEM_STAT);\n+  tree t = make_node (TREE_LIST PASS_MEM_STAT);\n   TREE_PURPOSE (t) = parm;\n   TREE_VALUE (t) = value;\n   return t;\n@@ -4371,7 +4371,7 @@ build0_stat (enum tree_code code, tree tt MEM_STAT_DECL)\n \n   gcc_assert (TREE_CODE_LENGTH (code) == 0);\n \n-  t = make_node_stat (code PASS_MEM_STAT);\n+  t = make_node (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;\n \n   return t;\n@@ -4474,7 +4474,7 @@ build2_stat (enum tree_code code, tree tt, tree arg0, tree arg1 MEM_STAT_DECL)\n     gcc_assert (POINTER_TYPE_P (tt) && POINTER_TYPE_P (TREE_TYPE (arg0))\n \t\t&& ptrofftype_p (TREE_TYPE (arg1)));\n \n-  t = make_node_stat (code PASS_MEM_STAT);\n+  t = make_node (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;\n \n   /* Below, we automatically set TREE_SIDE_EFFECTS and TREE_READONLY for the\n@@ -4543,7 +4543,7 @@ build3_stat (enum tree_code code, tree tt, tree arg0, tree arg1,\n   gcc_assert (TREE_CODE_LENGTH (code) == 3);\n   gcc_assert (TREE_CODE_CLASS (code) != tcc_vl_exp);\n \n-  t = make_node_stat (code PASS_MEM_STAT);\n+  t = make_node (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;\n \n   read_only = 1;\n@@ -4583,7 +4583,7 @@ build4_stat (enum tree_code code, tree tt, tree arg0, tree arg1,\n \n   gcc_assert (TREE_CODE_LENGTH (code) == 4);\n \n-  t = make_node_stat (code PASS_MEM_STAT);\n+  t = make_node (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;\n \n   side_effects = TREE_SIDE_EFFECTS (t);\n@@ -4610,7 +4610,7 @@ build5_stat (enum tree_code code, tree tt, tree arg0, tree arg1,\n \n   gcc_assert (TREE_CODE_LENGTH (code) == 5);\n \n-  t = make_node_stat (code PASS_MEM_STAT);\n+  t = make_node (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;\n \n   side_effects = TREE_SIDE_EFFECTS (t);\n@@ -4745,7 +4745,7 @@ build_decl_stat (location_t loc, enum tree_code code, tree name,\n {\n   tree t;\n \n-  t = make_node_stat (code PASS_MEM_STAT);\n+  t = make_node (code PASS_MEM_STAT);\n   DECL_SOURCE_LOCATION (t) = loc;\n \n /*  if (type == error_mark_node)"}, {"sha": "554356c2ee107072b2b864ccb70cd3f64ca96228", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f719e2f1d7675d997fda88be87f65e350d563bc3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f719e2f1d7675d997fda88be87f65e350d563bc3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f719e2f1d7675d997fda88be87f65e350d563bc3", "patch": "@@ -3889,8 +3889,7 @@ extern int allocate_decl_uid (void);\n    The TREE_CODE is the only argument.  Contents are initialized\n    to zero except for a few of the common fields.  */\n \n-extern tree make_node_stat (enum tree_code MEM_STAT_DECL);\n-#define make_node(t) make_node_stat (t MEM_STAT_INFO)\n+extern tree make_node (enum tree_code CXX_MEM_STAT_INFO);\n \n /* Free tree node.  */\n "}]}