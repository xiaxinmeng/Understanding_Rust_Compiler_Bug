{"sha": "aaa64b5878adabd129ffd3e35a0445d21138f50e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFhNjRiNTg3OGFkYWJkMTI5ZmZkM2UzNWEwNDQ1ZDIxMTM4ZjUwZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-07-08T12:25:40Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-07-08T12:25:40Z"}, "message": "re PR bootstrap/66744 (Bootstrap failure due to conflicting access() on i686-w64-mingw32)\n\nFix PR bootstrap/66744.\n\n\tPR bootstrap/66744\n\t* tree-sra.c (create_access_1): Call ctor without brackets.\n\t(create_artificial_child_access): Likewise.\n\nFrom-SVN: r225547", "tree": {"sha": "342762a7b3fcb4314fa9259393b4a378b297c01b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/342762a7b3fcb4314fa9259393b4a378b297c01b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaa64b5878adabd129ffd3e35a0445d21138f50e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa64b5878adabd129ffd3e35a0445d21138f50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa64b5878adabd129ffd3e35a0445d21138f50e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa64b5878adabd129ffd3e35a0445d21138f50e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f5ef6939f8b45c42a90d1b14d7e686c739aba5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5ef6939f8b45c42a90d1b14d7e686c739aba5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5ef6939f8b45c42a90d1b14d7e686c739aba5c"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "33a2fa03099894cd9f3a1e345d8f55d0d1d953dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa64b5878adabd129ffd3e35a0445d21138f50e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa64b5878adabd129ffd3e35a0445d21138f50e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aaa64b5878adabd129ffd3e35a0445d21138f50e", "patch": "@@ -1,3 +1,9 @@\n+2015-07-08  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/66744\n+\t* tree-sra.c (create_access_1): Call ctor without brackets.\n+\t(create_artificial_child_access): Likewise.\n+\n 2015-07-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66793"}, {"sha": "3f6111c160f3f6b691c698655ca49e21b7b9d5f6", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa64b5878adabd129ffd3e35a0445d21138f50e/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa64b5878adabd129ffd3e35a0445d21138f50e/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=aaa64b5878adabd129ffd3e35a0445d21138f50e", "patch": "@@ -858,7 +858,7 @@ mark_parm_dereference (tree base, HOST_WIDE_INT dist, gimple stmt)\n static struct access *\n create_access_1 (tree base, HOST_WIDE_INT offset, HOST_WIDE_INT size)\n {\n-  struct access *access = new struct access ();\n+  struct access *access = new struct access;\n \n   memset (access, 0, sizeof (struct access));\n   access->base = base;\n@@ -2393,7 +2393,7 @@ create_artificial_child_access (struct access *parent, struct access *model,\n \n   gcc_assert (!model->grp_unscalarizable_region);\n \n-  struct access *access = new struct access ();\n+  struct access *access = new struct access;\n   memset (access, 0, sizeof (struct access));\n   if (!build_user_friendly_ref_for_offset (&expr, TREE_TYPE (expr), new_offset,\n \t\t\t\t\t   model->type))"}]}