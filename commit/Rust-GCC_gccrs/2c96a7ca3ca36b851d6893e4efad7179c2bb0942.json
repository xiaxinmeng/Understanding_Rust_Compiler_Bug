{"sha": "2c96a7ca3ca36b851d6893e4efad7179c2bb0942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM5NmE3Y2EzY2EzNmI4NTFkNjg5M2U0ZWZhZDcxNzljMmJiMDk0Mg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-06-11T12:00:41Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-06-11T12:00:41Z"}, "message": "* doc/c-tree.texi: Use more logical markup.\n\nFrom-SVN: r43180", "tree": {"sha": "6e9a9c3fcf60ef7f9f1cf82c291864852560691c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e9a9c3fcf60ef7f9f1cf82c291864852560691c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c96a7ca3ca36b851d6893e4efad7179c2bb0942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c96a7ca3ca36b851d6893e4efad7179c2bb0942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c96a7ca3ca36b851d6893e4efad7179c2bb0942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c96a7ca3ca36b851d6893e4efad7179c2bb0942/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f18b70f587310c161b81a159523cf13262b393c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18b70f587310c161b81a159523cf13262b393c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18b70f587310c161b81a159523cf13262b393c3"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "24d48aff127a8e9e6e3432a08df7fc86e175b736", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c96a7ca3ca36b851d6893e4efad7179c2bb0942/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c96a7ca3ca36b851d6893e4efad7179c2bb0942/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c96a7ca3ca36b851d6893e4efad7179c2bb0942", "patch": "@@ -1,3 +1,7 @@\n+2001-06-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* doc/c-tree.texi: Use more logical markup.\n+\n 2001-06-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-decl.c (xref_tag): Don't return previous tags of wrong type."}, {"sha": "7fe7b4c4e88bd344276ea26adbeaaf7e6eaaeed8", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c96a7ca3ca36b851d6893e4efad7179c2bb0942/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c96a7ca3ca36b851d6893e4efad7179c2bb0942/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=2c96a7ca3ca36b851d6893e4efad7179c2bb0942", "patch": "@@ -88,7 +88,7 @@ return trees as output.  However, most macros require a certain kinds of\n tree node as input.  In other words, there is a type-system for trees,\n but it is not reflected in the C type-system.\n \n-For safety, it is useful to configure G++ with @code{--enable-checking}.\n+For safety, it is useful to configure G++ with @option{--enable-checking}.\n Although this results in a significant performance penalty (since all\n tree types are checked at run-time), and is therefore inappropriate in a\n release version, it is extremely helpful during the development process.\n@@ -621,8 +621,8 @@ rather than the global namespace in particular.\n \n The @code{::std} namespace, however, @emph{is} special, unless\n @code{flag_honor_std} is set.  This variable is set by the use\n-@samp{-fhonor-std} (or an option that implies it, like\n-@samp{-fnew-abi}), when invoking G++.  When @code{flag_honor_std} is\n+@option{-fhonor-std} (or an option that implies it, like\n+@option{-fnew-abi}), when invoking G++.  When @code{flag_honor_std} is\n set, the @code{std} namespace is just like any other namespace.  When\n @code{flag_honor_std} is not set, however, the @code{::std} namespace is\n treated as a synonym for the global namespace, thereby allowing users to"}]}