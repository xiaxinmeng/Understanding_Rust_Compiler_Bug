{"sha": "e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThmZjhjNWFiODIxZWMwODY3Njg3ZmI0NmNiOGQwMTJjMGQ1YjMyNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-01-22T21:47:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-01-22T21:47:40Z"}, "message": "re PR target/43884 (Performance degradation for simple fibonacci numbers calculation)\n\n\tPR tree-optimization/43884\n\tPR lto/44334\n\t* predict.c (maybe_hot_frequency_p): Use entry block frequency as an base.\n\t* doc/invoke.texi (hot-bb-frequency-fraction): Update docs.\n\t* gcc.dg/autopar/outer-2.c: Increase array size.\n\t* gcc.dg/tree-ssa/ldist-pr45948.c: Update test.\n\nFrom-SVN: r169136", "tree": {"sha": "b5772c7378d64070137aeb9449a4d84467164354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5772c7378d64070137aeb9449a4d84467164354"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/comments", "author": null, "committer": null, "parents": [{"sha": "ccaed3ba91952bdc19aecce21d49714c5599ad2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccaed3ba91952bdc19aecce21d49714c5599ad2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccaed3ba91952bdc19aecce21d49714c5599ad2d"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "92f6d044b25532e0c8715461ea96db69273accbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "patch": "@@ -1,3 +1,10 @@\n+2011-01-22  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/43884\n+\tPR lto/44334\n+\t* predict.c (maybe_hot_frequency_p): Use entry block frequency as an base.\n+\t* doc/invoke.texi (hot-bb-frequency-fraction): Update docs.\n+\n 2011-01-22  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/s390/s390.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove."}, {"sha": "dc1104f850e18a27a0e374b75cc1a7727912fdcc", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "patch": "@@ -126,7 +126,7 @@ maybe_hot_frequency_p (int freq)\n   if (node->frequency == NODE_FREQUENCY_EXECUTED_ONCE\n       && freq <= (ENTRY_BLOCK_PTR->frequency * 2 / 3))\n     return false;\n-  if (freq < BB_FREQ_MAX / PARAM_VALUE (HOT_BB_FREQUENCY_FRACTION))\n+  if (freq < ENTRY_BLOCK_PTR->frequency / PARAM_VALUE (HOT_BB_FREQUENCY_FRACTION))\n     return false;\n   return true;\n }"}, {"sha": "841a1dd1dff7acecb356456e02351f5402d9c1e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "patch": "@@ -1,3 +1,10 @@\n+2011-01-22  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/43884\n+\tPR lto/44334\n+\t* gcc.dg/autopar/outer-2.c: Increase array size.\n+\t* gcc.dg/tree-ssa/ldist-pr45948.c: Update test.\n+\n 2011-01-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/38536"}, {"sha": "b2e5159820365a5b41ee959be585554dbe142bdd", "filename": "gcc/testsuite/gcc.dg/autopar/outer-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fouter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fouter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fouter-2.c?ref=e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "patch": "@@ -6,7 +6,7 @@ void abort (void);\n void parloop (int N)\n {\n   int i, j,ii;\n-  int x[400][10][400];\n+  int x[401][10][401];\n \n for (ii = 0; ii < N; ii++)\n   for (i = 0; i < N; i++)"}, {"sha": "f0d07cc1781bf206173f173248e549ad3f5c10d3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ldist-pr45948.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-pr45948.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff8c5ab821ec0867687fb46cb8d012c0d5b325/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-pr45948.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-pr45948.c?ref=e8ff8c5ab821ec0867687fb46cb8d012c0d5b325", "patch": "@@ -18,6 +18,6 @@ foo (int i, int n)\n \n /* We should apply loop distribution and generate 2 memset (0).  */\n \n-/* { dg-final { scan-tree-dump \"distributed: split to 3\" \"ldist\" } } */\n+/* { dg-final { scan-tree-dump \"distributed: split to 2\" \"ldist\" } } */\n /* { dg-final { scan-tree-dump-times \"__builtin_memset\" 4 \"ldist\" } } */\n /* { dg-final { cleanup-tree-dump \"ldist\" } } */"}]}