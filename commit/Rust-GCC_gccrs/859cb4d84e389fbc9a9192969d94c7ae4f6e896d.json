{"sha": "859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU5Y2I0ZDg0ZTM4OWZiYzlhOTE5Mjk2OWQ5NGM3YWU0ZjZlODk2ZA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-08-27T20:35:37Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-08-27T20:35:37Z"}, "message": "optabs.c (expand_binop): Correctly handle the carry in multiword add/subtract operations.\n\n\t* optabs.c (expand_binop): Correctly handle the carry in multiword\n\tadd/subtract operations.\n\nFrom-SVN: r45210", "tree": {"sha": "458f1faacf003439d19ad06c43e2732ffb34ee21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/458f1faacf003439d19ad06c43e2732ffb34ee21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859cb4d84e389fbc9a9192969d94c7ae4f6e896d/comments", "author": null, "committer": null, "parents": [{"sha": "b7a0c86f585f538a6d9f8f0877ae2a379e64fb05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a0c86f585f538a6d9f8f0877ae2a379e64fb05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7a0c86f585f538a6d9f8f0877ae2a379e64fb05"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "11395beeb8f747be39c0993558afa01f49ad4b56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859cb4d84e389fbc9a9192969d94c7ae4f6e896d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859cb4d84e389fbc9a9192969d94c7ae4f6e896d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "patch": "@@ -1,3 +1,8 @@\n+2001-08-27  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* optabs.c (expand_binop): Correctly handle the carry in multiword\n+\tadd/subtract operations.\n+\n 2001-08-27  Fred Fish  <fnf@be.com>\n \n \t* ginclude/stddef.h: Fix typo, __SIZE__TYPE__ should be"}, {"sha": "7957719b4f94730a2aa4c39ebbb1d209e15ecef4", "filename": "gcc/optabs.c", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859cb4d84e389fbc9a9192969d94c7ae4f6e896d/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859cb4d84e389fbc9a9192969d94c7ae4f6e896d/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "patch": "@@ -1185,7 +1185,6 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n       && binoptab->handlers[(int) word_mode].insn_code != CODE_FOR_nothing)\n     {\n       unsigned int i;\n-      rtx carry_tmp = gen_reg_rtx (word_mode);\n       optab otheroptab = binoptab == add_optab ? sub_optab : add_optab;\n       unsigned int nwords = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n       rtx carry_in = NULL_RTX, carry_out = NULL_RTX;\n@@ -1241,24 +1240,22 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \n \t  if (i > 0)\n \t    {\n+\t      rtx newx;\n+\t      \n \t      /* Add/subtract previous carry to main result.  */\n-\t      x = expand_binop (word_mode,\n-\t\t\t\tnormalizep == 1 ? binoptab : otheroptab,\n-\t\t\t\tx, carry_in,\n-\t\t\t\ttarget_piece, 1, next_methods);\n-\t      if (x == 0)\n-\t\tbreak;\n-\t      else if (target_piece != x)\n-\t\temit_move_insn (target_piece, x);\n+\t      newx = expand_binop (word_mode,\n+\t\t\t\t   normalizep == 1 ? binoptab : otheroptab,\n+\t\t\t\t   x, carry_in,\n+\t\t\t\t   NULL_RTX, 1, next_methods);\n \n \t      if (i + 1 < nwords)\n \t\t{\n-\t\t  /* THIS CODE HAS NOT BEEN TESTED.  */\n \t\t  /* Get out carry from adding/subtracting carry in.  */\n+\t\t  rtx carry_tmp = gen_reg_rtx (word_mode);\n \t\t  carry_tmp = emit_store_flag_force (carry_tmp,\n-\t\t\t\t\t\t     binoptab == add_optab\n-\t\t\t\t\t\t     ? LT : GT,\n-\t\t\t\t\t\t     x, carry_in,\n+\t\t\t\t\t\t     (binoptab == add_optab\n+\t\t\t\t\t\t      ? LT : GT),\n+\t\t\t\t\t\t     newx, x,\n \t\t\t\t\t\t     word_mode, 1, normalizep);\n \n \t\t  /* Logical-ior the two poss. carry together.  */\n@@ -1268,6 +1265,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\t  if (carry_out == 0)\n \t\t    break;\n \t\t}\n+\t      emit_move_insn (target_piece, newx);\n \t    }\n \n \t  carry_in = carry_out;"}]}