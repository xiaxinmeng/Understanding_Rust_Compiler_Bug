{"sha": "0af16535246ef8a9a814da6a3ae7a5bcae89dc30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFmMTY1MzUyNDZlZjhhOWE4MTRkYTZhM2FlN2E1YmNhZTg5ZGMzMA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-09-18T08:32:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:32:51Z"}, "message": "[Ada] Improve efficiency of copying bit-packed slices\n\nThis patch substantially improves the efficiency of copying large slices\nof bit-packed arrays, by copying 32 bits at a time instead of 1 at a\ntime.\n\n2019-09-18  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch5.adb (Expand_Assign_Array_Loop_Or_Bitfield): The call\n\tto Copy_Bitfield is now enabled.\n\t(Expand_Assign_Array_Bitfield): Multiply 'Length times\n\t'Component_Size \"by hand\" instead of using 'Size.\n\nFrom-SVN: r275855", "tree": {"sha": "6ac47113e2f600748107d7998842aa37d6447279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ac47113e2f600748107d7998842aa37d6447279"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0af16535246ef8a9a814da6a3ae7a5bcae89dc30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af16535246ef8a9a814da6a3ae7a5bcae89dc30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af16535246ef8a9a814da6a3ae7a5bcae89dc30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af16535246ef8a9a814da6a3ae7a5bcae89dc30/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6d677c65b999fd44446592cde9282b65772095a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d677c65b999fd44446592cde9282b65772095a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d677c65b999fd44446592cde9282b65772095a"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "561f6a845f264d206ee48a01de401243c27571aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af16535246ef8a9a814da6a3ae7a5bcae89dc30/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af16535246ef8a9a814da6a3ae7a5bcae89dc30/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0af16535246ef8a9a814da6a3ae7a5bcae89dc30", "patch": "@@ -1,3 +1,10 @@\n+2019-09-18  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Assign_Array_Loop_Or_Bitfield): The call\n+\tto Copy_Bitfield is now enabled.\n+\t(Expand_Assign_Array_Bitfield): Multiply 'Length times\n+\t'Component_Size \"by hand\" instead of using 'Size.\n+\n 2019-09-18  Vasiliy Fofanov  <fofanov@adacore.com>\n \n \t* doc/gnat_rm/implementation_defined_pragmas.rst: Fix minor"}, {"sha": "f5c1f211cb5ada592d44b44aa43fce0ee0977629", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af16535246ef8a9a814da6a3ae7a5bcae89dc30/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af16535246ef8a9a814da6a3ae7a5bcae89dc30/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=0af16535246ef8a9a814da6a3ae7a5bcae89dc30", "patch": "@@ -1411,12 +1411,21 @@ package body Exp_Ch5 is\n       --  Compute the Size of the bitfield\n \n       --  Note that the length check has already been done, so we can use the\n-      --  size of either L or R.\n+      --  size of either L or R; they are equal. We can't use 'Size here,\n+      --  because sometimes bit fields get copied into a temp, and the 'Size\n+      --  ends up being the size of the temp (e.g. an 8-bit temp containing\n+      --  a 4-bit bit field).\n \n       Size : constant Node_Id :=\n-        Make_Attribute_Reference (Loc,\n-          Prefix         => Duplicate_Subexpr (Name (N), True),\n-          Attribute_Name => Name_Size);\n+        Make_Op_Multiply (Loc,\n+          Make_Attribute_Reference (Loc,\n+            Prefix =>\n+              Duplicate_Subexpr (Name (N), True),\n+            Attribute_Name => Name_Length),\n+          Make_Attribute_Reference (Loc,\n+            Prefix =>\n+              Duplicate_Subexpr (Name (N), True),\n+            Attribute_Name => Name_Component_Size));\n \n    begin\n       return Make_Procedure_Call_Statement (Loc,\n@@ -1466,10 +1475,7 @@ package body Exp_Ch5 is\n       --  optimization in that case as well.  We could complicate this code by\n       --  actually looking for such volatile and independent components.\n \n-      --  Note that Expand_Assign_Array_Bitfield is disabled for now.\n-\n-      if False and then -- ???\n-        RTE_Available (RE_Copy_Bitfield)\n+      if RTE_Available (RE_Copy_Bitfield)\n         and then Is_Bit_Packed_Array (L_Type)\n         and then Is_Bit_Packed_Array (R_Type)\n         and then not Reverse_Storage_Order (L_Type)"}]}