{"sha": "922816220210c53eb889733b5832cbd39353ff8c", "node_id": "C_kwDOANBUbNoAKDkyMjgxNjIyMDIxMGM1M2ViODg5NzMzYjU4MzJjYmQzOTM1M2ZmOGM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-16T11:02:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-16T13:37:37Z"}, "message": "libstdc++: Improve comments on pretty printer code\n\nlibstdc++-v3/ChangeLog:\n\n\t* python/libstdcxx/v6/printers.py (is_specialization_of): Fix\n\tincorrect terminology in docstring and describe arguments.\n\t(FilteringTypePrinter): Add default argument for new parameter,\n\tenhance docstring.", "tree": {"sha": "da25031c41fd79f4717363ca3143f8649444abe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da25031c41fd79f4717363ca3143f8649444abe7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/922816220210c53eb889733b5832cbd39353ff8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922816220210c53eb889733b5832cbd39353ff8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922816220210c53eb889733b5832cbd39353ff8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922816220210c53eb889733b5832cbd39353ff8c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f83861cc1c4d09425aa6539877bfa50ef90f183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f83861cc1c4d09425aa6539877bfa50ef90f183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f83861cc1c4d09425aa6539877bfa50ef90f183"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "19c70d120350cd9e807fe68c7368a008b8d5b3fb", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922816220210c53eb889733b5832cbd39353ff8c/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922816220210c53eb889733b5832cbd39353ff8c/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=922816220210c53eb889733b5832cbd39353ff8c", "patch": "@@ -166,7 +166,12 @@ def is_member_of_namespace(typ, *namespaces):\n     return False\n \n def is_specialization_of(x, template_name):\n-    \"Test if a type is a given template instantiation.\"\n+    \"\"\"\n+    Test whether a type is a specialization of the named class template.\n+    The type can be specified as a string or a gdb.Type object.\n+    The template should be the name of a class template as a string,\n+    without any 'std' qualification.\n+    \"\"\"\n     global _versioned_namespace\n     if type(x) is gdb.Type:\n         x = x.tag\n@@ -2071,19 +2076,22 @@ class FilteringTypePrinter(object):\n     Args:\n         template (str): The class template to recognize.\n         name (str): The typedef-name that will be used instead.\n-        targ1 (str): The first template argument.\n-            If arg1 is provided (not None), match only template specializations\n-            with this type as the first template argument,\n-            e.g. if template='basic_string<targ1'\n+        targ1 (str, optional): The first template argument. Defaults to None.\n \n     Checks if a specialization of the class template 'template' is the same type\n     as the typedef 'name', and prints it as 'name' instead.\n \n     e.g. if an instantiation of std::basic_istream<C, T> is the same type as\n     std::istream then print it as std::istream.\n+\n+    If targ1 is provided (not None), match only template specializations with\n+    this type as the first template argument, e.g. if template='basic_string'\n+    and targ1='char' then only match 'basic_string<char,...>' and not\n+    'basic_string<wchar_t,...>'. This rejects non-matching specializations\n+    more quickly, without needing to do GDB type lookups.\n     \"\"\"\n \n-    def __init__(self, template, name, targ1):\n+    def __init__(self, template, name, targ1 = None):\n         self.template = template\n         self.name = name\n         self.targ1 = targ1"}]}