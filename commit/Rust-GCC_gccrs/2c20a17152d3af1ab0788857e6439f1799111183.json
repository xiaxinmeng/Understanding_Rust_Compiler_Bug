{"sha": "2c20a17152d3af1ab0788857e6439f1799111183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMyMGExNzE1MmQzYWYxYWIwNzg4ODU3ZTY0MzlmMTc5OTExMTE4Mw==", "commit": {"author": {"name": "Kim Ho", "email": "kho@redhat.com", "date": "2004-01-19T14:27:45Z"}, "committer": {"name": "Kim Ho", "email": "kho@gcc.gnu.org", "date": "2004-01-19T14:27:45Z"}, "message": "GtkFramePeer.java (getMenuBarHeight): Added MenuBarPeer parameter.\n\n2004-01-19  Kim Ho  <kho@redhat.com>\n\n        * gnu/java/awt/peer/gtk/GtkFramePeer.java (getMenuBarHeight): Added\n        MenuBarPeer parameter.\n        (removeMenuBarPeer): New native method.\n        (setMenuBar): Call remove if menu bar is null. Adjust insets\n        appropriately.\n        (postSizeAllocateEvent): New method. Called when menu bar size is\n        allocated. Adjust insets and redo layout.\n        (GtkFramePeer): Set menu bar during frame creation.\n        (postConfigureEvent): Adjust position and size to accomodate\n        menu bar.\n        * java/awt/Frame.java (setMenuBar): addNotify to create menu bar.\n        * java/awt/Menu.java (addSeparator): Use peer's addSeparator.\n        (addNotify): Create the peer if it doesn't exist and call addNotify\n        for the menu's items.\n        * java/awt/MenuBar.java (addNotify): Create this menu bar's menus.\n        * java/awt/MenuItem.java (addNotify): Create the peer if it\n        doesn't exist.\n        * jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n        (removeMenuBarPeer): New method. Remove menu bar on the current\n        frame.\n        (setMenuBarPeer): Add the menu bar to the current frame and the\n        callback for size-allocate events on the menu bar.\n        (getMenuBarHeight): Add menu bar parameter.\n        (menubar_resize_cb): New callback method for postSizeAllocate events.\n\n        Also: Fix indentation on last ChangeLog entry.\n\nFrom-SVN: r76149", "tree": {"sha": "34def173eca9b0823df6cf9bb1777b1bb4131cfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34def173eca9b0823df6cf9bb1777b1bb4131cfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c20a17152d3af1ab0788857e6439f1799111183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c20a17152d3af1ab0788857e6439f1799111183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c20a17152d3af1ab0788857e6439f1799111183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c20a17152d3af1ab0788857e6439f1799111183/comments", "author": {"login": "biscuitsandscones", "id": 133805869, "node_id": "U_kgDOB_m3LQ", "avatar_url": "https://avatars.githubusercontent.com/u/133805869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/biscuitsandscones", "html_url": "https://github.com/biscuitsandscones", "followers_url": "https://api.github.com/users/biscuitsandscones/followers", "following_url": "https://api.github.com/users/biscuitsandscones/following{/other_user}", "gists_url": "https://api.github.com/users/biscuitsandscones/gists{/gist_id}", "starred_url": "https://api.github.com/users/biscuitsandscones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/biscuitsandscones/subscriptions", "organizations_url": "https://api.github.com/users/biscuitsandscones/orgs", "repos_url": "https://api.github.com/users/biscuitsandscones/repos", "events_url": "https://api.github.com/users/biscuitsandscones/events{/privacy}", "received_events_url": "https://api.github.com/users/biscuitsandscones/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9543baba849d4a8820fde7d09a7f05e9f0bd3ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9543baba849d4a8820fde7d09a7f05e9f0bd3ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9543baba849d4a8820fde7d09a7f05e9f0bd3ecd"}], "stats": {"total": 220, "additions": 176, "deletions": 44}, "files": [{"sha": "4a173977216f2134d6a57a72a026211e1ee7ce64", "filename": "libjava/ChangeLog", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,9 +1,38 @@\n+2004-01-19  Kim Ho  <kho@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (getMenuBarHeight): Added\n+\tMenuBarPeer parameter.\n+\t(removeMenuBarPeer): New native method.\n+\t(setMenuBar): Call remove if menu bar is null. Adjust insets\n+\tappropriately.\n+\t(postSizeAllocateEvent): New method. Called when menu bar size is\n+\tallocated. Adjust insets and redo layout.\n+\t(GtkFramePeer): Set menu bar during frame creation.\n+\t(postConfigureEvent): Adjust position and size to accomodate\n+\tmenu bar.\n+\t* java/awt/Frame.java (setMenuBar): addNotify to create menu bar.\n+\t* java/awt/Menu.java (addSeparator): Use peer's addSeparator.\n+\t(addNotify): Create the peer if it doesn't exist and call addNotify\n+\tfor the menu's items.\n+\t* java/awt/MenuBar.java (addNotify): Create this menu bar's menus.\n+\t* java/awt/MenuItem.java (addNotify): Create the peer if it\n+\tdoesn't exist.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(removeMenuBarPeer): New method. Remove menu bar on the current\n+\tframe.\n+\t(setMenuBarPeer): Add the menu bar to the current frame and the\n+\tcallback for size-allocate events on the menu bar.\n+\t(getMenuBarHeight): Add menu bar parameter.\n+\t(menubar_resize_cb): New callback method for postSizeAllocate events.\n+\n+\tAlso: Fix indentation on last ChangeLog entry.\n+\n 2004-01-16  Kim Ho  <kho@redhat.com>\n \n-        * gnu/java/awt/peer/gtk/GtkFileDialogPeer.java\n-        (gtkWidgetGetDimensions): Remove.\n-        * jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n-        (gtkWidgetGetDimensions): Remove.\n+\t* gnu/java/awt/peer/gtk/GtkFileDialogPeer.java\n+\t(gtkWidgetGetDimensions): Remove.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(gtkWidgetGetDimensions): Remove.\n \n 2004-01-16  Tom Tromey  <tromey@redhat.com>\n "}, {"sha": "c5a6fc78388f38d21026998a565056cc950d324b", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 58, "deletions": 10, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,5 +1,5 @@\n /* GtkFramePeer.java -- Implements FramePeer with GTK\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,6 +45,7 @@\n import java.awt.Image;\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n+import java.awt.Window;\n import java.awt.event.PaintEvent;\n import java.awt.peer.FramePeer;\n import java.awt.peer.MenuBarPeer;\n@@ -53,16 +54,41 @@ public class GtkFramePeer extends GtkWindowPeer\n     implements FramePeer\n {\n   int menuBarHeight = 0;\n-  native int getMenuBarHeight ();\n+  private MenuBarPeer menuBar;\n+  native int getMenuBarHeight (MenuBarPeer bar);\n \n   native public void setMenuBarPeer (MenuBarPeer bar);\n+  native public void removeMenuBarPeer (MenuBarPeer bar);\n \n   public void setMenuBar (MenuBar bar)\n   {\n-    if (bar == null)\n-      setMenuBarPeer (null);\n-    else\n-      setMenuBarPeer ((MenuBarPeer) bar.getPeer ());\n+    if (bar == null && menuBar != null)\n+    {    \n+      removeMenuBarPeer(menuBar); \n+      menuBar = null;\n+      insets.top -= menuBarHeight;\n+      menuBarHeight = 0;      \n+      awtComponent.doLayout();\n+    }\n+    else if (bar != null)\n+    {\n+      if (menuBar != null)\n+        removeMenuBarPeer(menuBar);\n+      menuBar = (MenuBarPeer) ((MenuBar) bar).getPeer();\n+      setMenuBarPeer(menuBar);      \n+    }\n+  }\n+\n+  protected void postSizeAllocateEvent()\n+  {\n+    if (menuBar != null)\n+    {\n+      if (menuBarHeight != 0)\n+        insets.top -= menuBarHeight;\n+      menuBarHeight = getMenuBarHeight(menuBar);\n+      insets.top += menuBarHeight;\n+    }\n+    awtComponent.doLayout();\n   }\n \n   public GtkFramePeer (Frame frame)\n@@ -74,6 +100,7 @@ void create ()\n   {\n     // Create a normal decorated window.\n     create (GDK_WINDOW_TYPE_HINT_NORMAL, true);\n+    setMenuBar(((Frame) awtComponent).getMenuBar());\n   }\n \n   public void getArgs (Component component, GtkArgList args)\n@@ -102,10 +129,31 @@ public Graphics getGraphics ()\n     g.translate (-insets.left, -insets.top);\n     return g;\n   }\n-\n-  // FIXME: When MenuBars work, override postConfigureEvent and\n-  // setBounds to account for MenuBar dimensions.\n-\n+  \n+  protected void postConfigureEvent (int x, int y, int width, int height)\n+  {\n+    int frame_x = x - insets.left;\n+    // Add the height of the menubar (if none, menuBarHeight is 0 and has no\n+    // effect). To move the frame down a bit so as to still fit in the window.\n+    int frame_y = y - insets.top + menuBarHeight;\n+    int frame_width = width + insets.left + insets.right;\n+    // Add the height of the menubar to adjust the height so it still fits in\n+    // the window.\n+    int frame_height = height + insets.top + insets.bottom - menuBarHeight;\n+    if (frame_x != awtComponent.getX()\n+        || frame_y != awtComponent.getY()\n+        || frame_width != awtComponent.getWidth()\n+        || frame_height != awtComponent.getHeight())\n+      {\n+        setBoundsCallback ((Window) awtComponent,\n+                           frame_x,\n+                           frame_y,\n+                           frame_width,\n+                           frame_height);\n+      }\n+    awtComponent.validate();\n+  }\n+  \n   protected void postMouseEvent(int id, long when, int mods, int x, int y, \n \t\t\t\tint clickCount, boolean popupTrigger)\n   {"}, {"sha": "7a5c9d98f8e59c89fde214d81faf74f67f96a469", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,5 +1,5 @@\n /* Frame.java -- AWT toplevel window\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -342,6 +342,8 @@ public class Frame extends Window implements MenuContainer\n setMenuBar(MenuBar menuBar)\n {\n   this.menuBar = menuBar;\n+  if (menuBar != null)\n+    menuBar.addNotify(); \n   if (peer != null)\n     ((FramePeer) peer).setMenuBar(menuBar);\n }"}, {"sha": "6fdc22c8ccd470228f01da1371309a8d21ee3690", "filename": "libjava/java/awt/Menu.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenu.java?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,5 +1,5 @@\n /* Menu.java -- A Java AWT Menu\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -294,7 +294,8 @@ public int countItems ()\n public void\n addSeparator()\n {\n-  add(separator);\n+  if (peer != null)\n+    ((MenuPeer) peer).addSeparator();\n }\n \n /*************************************************************************/\n@@ -376,8 +377,14 @@ public int countItems ()\n public void\n addNotify()\n {\n-  if (peer != null)\n+  if (peer == null)\n     peer = getToolkit().createMenu(this);\n+  java.util.Enumeration e = items.elements();\n+  while (e.hasMoreElements())\n+  {\n+    MenuItem mi = (MenuItem)e.nextElement();\n+    mi.addNotify();\n+  }    \n   super.addNotify ();\n }\n "}, {"sha": "af5c9121b21609e0e584b5474ff9f9d3c5b0021c", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,5 +1,5 @@\n /* MenuBar.java -- An AWT menu bar class\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -263,6 +263,12 @@ public class MenuBar extends MenuComponent\n {\n   if (getPeer() == null)\n     setPeer((MenuComponentPeer)getToolkit().createMenuBar(this));\n+  Enumeration e = menus.elements();\n+  while (e.hasMoreElements())\n+  {\n+    Menu mi = (Menu)e.nextElement();\n+    mi.addNotify();\n+  }\n }\n \n /*************************************************************************/"}, {"sha": "bea3b4fd477002df7bd5da671275a1dd20405aea", "filename": "libjava/java/awt/MenuItem.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,5 +1,5 @@\n /* MenuItem.java -- An item in a menu\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -361,7 +361,7 @@ public class MenuItem extends MenuComponent\n public void\n addNotify()\n {\n-  if (peer != null)\n+  if (peer == null)\n     peer = getToolkit ().createMenuItem (this);\n }\n "}, {"sha": "8ad7a2cdcecd4a08541ed65f42e181deff07b26c", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 63, "deletions": 23, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c20a17152d3af1ab0788857e6439f1799111183/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=2c20a17152d3af1ab0788857e6439f1799111183", "patch": "@@ -1,5 +1,5 @@\n /* gtkwindowpeer.c -- Native implementation of GtkWindowPeer\n-   Copyright (C) 1998, 1999, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -72,6 +72,8 @@ static jint window_get_new_state (GtkWidget *widget);\n static gboolean window_property_changed_cb (GtkWidget *widget,\n \t\t\t\t\t    GdkEventProperty *event,\n \t\t\t\t\t    jobject peer);\n+static void menubar_resize_cb (GtkWidget *widget, GtkAllocation *alloc, \n+                               jobject peer);\t\t\t\t\t    \n \n /*\n  * Make a new window.\n@@ -358,45 +360,61 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetBounds\n }\n \n JNIEXPORT void JNICALL\n-Java_gnu_java_awt_peer_gtk_GtkFramePeer_setMenuBarPeer\n+Java_gnu_java_awt_peer_gtk_GtkFramePeer_removeMenuBarPeer\n   (JNIEnv *env, jobject obj, jobject menubar)\n {\n-  void *wptr, *mptr;\n-  GtkBox *box;\n+  void *wptr;\n+  GtkWidget *box;\n+  GtkWidget *mptr;\n \n-  if (!menubar) return;\n+  wptr = NSA_GET_PTR (env, obj);\n+  mptr = NSA_GET_PTR (env, menubar);\n+  \n+  gdk_threads_enter ();\n \n+  box = GTK_BIN (wptr)->child;\n+  gtk_container_remove (GTK_CONTAINER (box), GTK_WIDGET (mptr));  \n+  \n+  gdk_threads_leave();\n+}  \n+  \n+JNIEXPORT void JNICALL\n+Java_gnu_java_awt_peer_gtk_GtkFramePeer_setMenuBarPeer\n+  (JNIEnv *env, jobject obj, jobject menubar)\n+{\n+  void *wptr;\n+  GtkWidget *mptr;\n+  GtkWidget *box;\n+  jobject *gref = NSA_GET_GLOBAL_REF (env, obj);\n+  \n   wptr = NSA_GET_PTR (env, obj);\n   mptr = NSA_GET_PTR (env, menubar);\n+  \n+  gdk_threads_enter ();\n \n-  if (!mptr) return; /* this case should remove a menu */\n+  g_signal_connect (G_OBJECT (mptr), \"size-allocate\", \n+                    G_CALLBACK (menubar_resize_cb), *gref);    \n+  box = GTK_BIN (wptr)->child;\t\t    \n+  gtk_box_pack_start (GTK_BOX (box), mptr, 0, 0, 0);\n+ \n+  gtk_widget_show (mptr);\n \n-  gdk_threads_enter ();\n-  box = GTK_BOX (GTK_BIN (wptr)->child);\n-  gtk_box_pack_start (box, GTK_WIDGET (mptr), 0, 0, 0);\n+ \n   gdk_threads_leave ();\n }\n \n JNIEXPORT jint JNICALL\n Java_gnu_java_awt_peer_gtk_GtkFramePeer_getMenuBarHeight\n-  (JNIEnv *env, jobject obj)\n+  (JNIEnv *env, jobject obj, jobject menubar)\n {\n-  void *ptr;\n-  GList *children;\n-  jint height = 0;\n-\n-  ptr = NSA_GET_PTR (env, obj);\n+  GtkWidget *ptr;\n+  jint height;\n+  \n+  ptr = NSA_GET_PTR (env, menubar);\n \n   gdk_threads_enter ();\n-  children = gtk_container_children (GTK_CONTAINER (GTK_BIN (ptr)->child));\n-  if (g_list_length (children) == 2)\n-    {\n-      GtkWidget *menubar = GTK_WIDGET (children->data);\n-      height = menubar->allocation.height;\n-\n-    }\n+  height = ptr->allocation.height;\n   gdk_threads_leave ();\n-\n   return height;\n }\n \n@@ -698,3 +716,25 @@ window_property_changed_cb (GtkWidget *widget __attribute__((unused)),\n \n   return FALSE;\n }\n+\n+static void menubar_resize_cb (GtkWidget *widget, GtkAllocation *alloc, \n+                               jobject peer)\n+{\n+  static int id_set = 0;\n+  static jmethodID postSizeAllocateEventID;\n+  \n+  if (!id_set)\n+    {\n+      jclass gtkframepeer = (*gdk_env)->FindClass (gdk_env,\n+                                \"gnu/java/awt/peer/gtk/GtkFramePeer\");\n+      postSizeAllocateEventID = (*gdk_env)->GetMethodID (gdk_env,\n+                                                     gtkframepeer,\n+                                                     \"postSizeAllocateEvent\",\n+                                                     \"()V\");\n+      id_set = 1;\n+    }\n+  gdk_threads_leave();\n+  (*gdk_env)->CallVoidMethod (gdk_env, peer,\n+                              postSizeAllocateEventID);\n+  gdk_threads_enter();\n+}"}]}