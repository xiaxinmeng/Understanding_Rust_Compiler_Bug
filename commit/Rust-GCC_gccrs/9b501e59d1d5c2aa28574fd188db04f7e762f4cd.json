{"sha": "9b501e59d1d5c2aa28574fd188db04f7e762f4cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI1MDFlNTlkMWQ1YzJhYTI4NTc0ZmQxODhkYjA0ZjdlNzYyZjRjZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-05-14T15:06:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-07T09:26:58Z"}, "message": "[Ada] Errors in handling of access_to_subprogram contracts\n\ngcc/ada/\n\n\t* exp_ch3.adb (Build_Access_Subprogram_Wrapper_Body): Create\n\tproper subprogram specification for body, using names in the\n\tsubprogram declaration but distinct entities.\n\t* exp_ch6.adb (Expand_Call): If this is an indirect call\n\tinvolving a subprogram wrapper, insert pointer parameter in list\n\tof actuals with a parameter association, not as a positional\n\tparameter.", "tree": {"sha": "001980892153124cfb096cc261f35a5adfa91f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/001980892153124cfb096cc261f35a5adfa91f17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b501e59d1d5c2aa28574fd188db04f7e762f4cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b501e59d1d5c2aa28574fd188db04f7e762f4cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b501e59d1d5c2aa28574fd188db04f7e762f4cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b501e59d1d5c2aa28574fd188db04f7e762f4cd/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bf53b1a612b1fe08d80d823981879486531ea11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bf53b1a612b1fe08d80d823981879486531ea11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bf53b1a612b1fe08d80d823981879486531ea11"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "fb23931ae63aa5b5bd7689e9c418e645d68b2212", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b501e59d1d5c2aa28574fd188db04f7e762f4cd/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b501e59d1d5c2aa28574fd188db04f7e762f4cd/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9b501e59d1d5c2aa28574fd188db04f7e762f4cd", "patch": "@@ -528,7 +528,8 @@ package body Exp_Ch3 is\n       Type_Def  : constant Node_Id    := Type_Definition (Decl);\n       Type_Id   : constant Entity_Id  := Defining_Identifier (Decl);\n       Spec_Node : constant Node_Id    :=\n-                    New_Copy_Tree (Specification (New_Decl));\n+                    Copy_Subprogram_Spec (Specification (New_Decl));\n+      --  This copy creates new identifiers for formals and subprogram.\n \n       Act       : Node_Id;\n       Body_Node : Node_Id;\n@@ -540,12 +541,8 @@ package body Exp_Ch3 is\n          return;\n       end if;\n \n-      Set_Defining_Unit_Name (Spec_Node,\n-        Make_Defining_Identifier\n-          (Loc, Chars (Defining_Unit_Name (Spec_Node))));\n-\n       --  Create List of actuals for indirect call. The last parameter of the\n-      --  subprogram is the access value itself.\n+      --  subprogram declaration is the access value for the indirect call.\n \n       Act := First (Parameter_Specifications (Spec_Node));\n \n@@ -558,7 +555,7 @@ package body Exp_Ch3 is\n \n       Ptr :=\n         Defining_Identifier\n-          (Last (Parameter_Specifications (Spec_Node)));\n+          (Last (Parameter_Specifications (Specification (New_Decl))));\n \n       if Nkind (Type_Def) = N_Access_Procedure_Definition then\n          Call_Stmt := Make_Procedure_Call_Statement (Loc,"}, {"sha": "8efada408b4c2f3729fdb9aef2c20a9ebb0f31d3", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b501e59d1d5c2aa28574fd188db04f7e762f4cd/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b501e59d1d5c2aa28574fd188db04f7e762f4cd/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=9b501e59d1d5c2aa28574fd188db04f7e762f4cd", "patch": "@@ -2686,25 +2686,35 @@ package body Exp_Ch6 is\n             Parms    : constant List_Id   := Parameter_Associations (N);\n             Typ      : constant Entity_Id := Etype (N);\n             New_N    : Node_Id;\n+            Ptr_Act  : Node_Id;\n \n          begin\n             --  The last actual in the call is the pointer itself.\n             --  If the aspect is inherited, convert the pointer to the\n             --  parent type that specifies the contract.\n+            --  If the original access_to_subprogram has defaults for\n+            --  in_parameters, the call may include named associations, so\n+            --  we create one for the pointer as well.\n \n             if Is_Derived_Type (Ptr_Type)\n               and then Ptr_Type /= Etype (Last_Formal (Wrapper))\n             then\n-               Append\n-                (Make_Type_Conversion (Loc,\n-                   New_Occurrence_Of\n-                    (Etype (Last_Formal (Wrapper)), Loc), Ptr),\n-                   Parms);\n+               Ptr_Act :=\n+                Make_Type_Conversion (Loc,\n+                  New_Occurrence_Of\n+                    (Etype (Last_Formal (Wrapper)), Loc), Ptr);\n \n             else\n-               Append (Ptr, Parms);\n+               Ptr_Act := Ptr;\n             end if;\n \n+            Append\n+             (Make_Parameter_Association (Loc,\n+                Selector_Name => Make_Identifier (Loc,\n+                   Chars (Last_Formal (Wrapper))),\n+                 Explicit_Actual_Parameter => Ptr_Act),\n+              Parms);\n+\n             if Nkind (N) = N_Procedure_Call_Statement then\n                New_N := Make_Procedure_Call_Statement (Loc,\n                   Name  => New_Occurrence_Of (Wrapper, Loc),"}]}