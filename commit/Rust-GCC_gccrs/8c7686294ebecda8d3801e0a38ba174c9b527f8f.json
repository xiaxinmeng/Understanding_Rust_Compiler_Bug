{"sha": "8c7686294ebecda8d3801e0a38ba174c9b527f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM3Njg2Mjk0ZWJlY2RhOGQzODAxZTBhMzhiYTE3NGM5YjUyN2Y4Zg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2014-11-05T09:52:42Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2014-11-05T09:52:42Z"}, "message": "Fix gnu11 fallout on Solaris 10+\n\n\tlibobjc:\n\t* thr.c (_XOPEN_SOURCE): Define as 600.\n\n\tlibiberty:\n\t* sigsetmask.c (_POSIX_SOURCE): Remove.\n\n\tlibgomp:\n\t* config/posix/lock.c (_XOPEN_SOURCE) Define as 600.\n\nFrom-SVN: r217117", "tree": {"sha": "f4bc097a6d220c030eaf0ddc1917e2f0c1be9e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4bc097a6d220c030eaf0ddc1917e2f0c1be9e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c7686294ebecda8d3801e0a38ba174c9b527f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7686294ebecda8d3801e0a38ba174c9b527f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7686294ebecda8d3801e0a38ba174c9b527f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7686294ebecda8d3801e0a38ba174c9b527f8f/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9d53c273b8b723de06bfdf77bc06ce0227d3614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d53c273b8b723de06bfdf77bc06ce0227d3614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9d53c273b8b723de06bfdf77bc06ce0227d3614"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "b004551ecadb21ffca614f8d31a9abb849a3c9f6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8c7686294ebecda8d3801e0a38ba174c9b527f8f", "patch": "@@ -1,3 +1,7 @@\n+2014-11-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/posix/lock.c (_XOPEN_SOURCE) Define as 600.\n+\n 2014-10-06  Marek Polacek  <polacek@redhat.com>\n \n \t* testsuite/libgomp.c/affinity-1.c: Include <sys/wait.h>."}, {"sha": "c65e041863d84cf2c9096c15d16d79e7a15212bd", "filename": "libgomp/config/posix/lock.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libgomp%2Fconfig%2Fposix%2Flock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libgomp%2Fconfig%2Fposix%2Flock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fposix%2Flock.c?ref=8c7686294ebecda8d3801e0a38ba174c9b527f8f", "patch": "@@ -30,8 +30,9 @@\n    to do better and streamline the locking as well as reduce the size\n    of the types exported.  */\n \n-/* We need Unix98 extensions to get recursive locks.  */\n-#define _XOPEN_SOURCE 500\n+/* We need UNIX98/XPG5 extensions to get recursive locks.  Request XPG6 since\n+   Solaris requires this for C99 and later.  */\n+#define _XOPEN_SOURCE 600\n \n #include \"libgomp.h\"\n "}, {"sha": "ff06b184aaa6e77150519fe3ab808cc4c334b22f", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8c7686294ebecda8d3801e0a38ba174c9b527f8f", "patch": "@@ -1,3 +1,7 @@\n+2014-11-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* sigsetmask.c (_POSIX_SOURCE): Remove.\n+\n 2014-10-28  Yury Gribov  <y.gribov@samsung.com>\n \n \t* strtoll.c: New file."}, {"sha": "f7a24246d1fdb15eacb414c35a6cdd98d95e6c4b", "filename": "libiberty/sigsetmask.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libiberty%2Fsigsetmask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libiberty%2Fsigsetmask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsigsetmask.c?ref=8c7686294ebecda8d3801e0a38ba174c9b527f8f", "patch": "@@ -15,7 +15,6 @@ be the value @code{1}).\n \n */\n \n-#define _POSIX_SOURCE\n #include <ansidecl.h>\n /* Including <sys/types.h> seems to be needed by ISC. */\n #include <sys/types.h>"}, {"sha": "1d0814dd3189f21d2e766f1fe0488a457431deaf", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=8c7686294ebecda8d3801e0a38ba174c9b527f8f", "patch": "@@ -1,3 +1,7 @@\n+2014-11-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* thr.c (_XOPEN_SOURCE): Define as 600.\n+\n 2014-07-27  Alan Modra  <amodra@gmail.com>\n \t    Matthias Klose  <doko@ubuntu.com>\n "}, {"sha": "988c0ff1841acdefa16d52f311ae52bfe2bbc7f8", "filename": "libobjc/thr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libobjc%2Fthr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7686294ebecda8d3801e0a38ba174c9b527f8f/libobjc%2Fthr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fthr.c?ref=8c7686294ebecda8d3801e0a38ba174c9b527f8f", "patch": "@@ -27,8 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define _LIBOBJC\n /* The line below is needed for declarations of functions such as\n    pthread_mutexattr_settype, without which gthr-posix.h may fail to\n-   compile within libobjc.  */\n-#define _XOPEN_SOURCE 500\n+   compile within libobjc.  While we only need XPG5 for this, Solaris\n+   requires XPG6 for C99 and later.  */\n+#define _XOPEN_SOURCE 600\n #include \"config.h\"\n #include \"tconfig.h\"\n #include \"coretypes.h\""}]}