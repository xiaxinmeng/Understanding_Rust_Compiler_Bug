{"sha": "2287a75d05dc2c3fecee4a40173d67df5f2b7919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4N2E3NWQwNWRjMmMzZmVjZWU0YTQwMTczZDY3ZGY1ZjJiNzkxOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T10:20:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T10:20:27Z"}, "message": "[multiple changes]\n\n2010-06-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_imgv.adb, exp_ch7.ads: Minor reformatting.\n\n2010-06-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb, exp_disp.adb, exp_dist.adb: Use Make_Temporary.\n\n2010-06-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* sprint.adb (pg): Set Dump_Freeze_Null, to be consistent with -gnatdg.\n\nFrom-SVN: r160895", "tree": {"sha": "25dda74eb2894d76da5db5255fa2da7fe6051e50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25dda74eb2894d76da5db5255fa2da7fe6051e50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2287a75d05dc2c3fecee4a40173d67df5f2b7919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2287a75d05dc2c3fecee4a40173d67df5f2b7919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2287a75d05dc2c3fecee4a40173d67df5f2b7919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2287a75d05dc2c3fecee4a40173d67df5f2b7919/comments", "author": null, "committer": null, "parents": [{"sha": "c12beea07b1e3f88e7570f9fde7a6def03759f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c12beea07b1e3f88e7570f9fde7a6def03759f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c12beea07b1e3f88e7570f9fde7a6def03759f7f"}], "stats": {"total": 665, "additions": 254, "deletions": 411}, "files": [{"sha": "5168700feff7905e96a808ad33453956700e2115", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -1,3 +1,15 @@\n+2010-06-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_imgv.adb, exp_ch7.ads: Minor reformatting.\n+\n+2010-06-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb, exp_disp.adb, exp_dist.adb: Use Make_Temporary.\n+\n+2010-06-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sprint.adb (pg): Set Dump_Freeze_Null, to be consistent with -gnatdg.\n+\n 2010-06-17  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch6.adb, exp_ch7.adb, exp_ch5.adb: Use Make_Temporary"}, {"sha": "669f998c40292fde4387d16f3a8fc9c1aa464e66", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -229,11 +229,11 @@ package Exp_Ch7 is\n \n    procedure Store_Before_Actions_In_Scope (L : List_Id);\n    --  Append the list L of actions to the end of the before-actions store in\n-   --  the top of the scope stack\n+   --  the top of the scope stack.\n \n    procedure Store_After_Actions_In_Scope (L : List_Id);\n    --  Append the list L of actions to the beginning of the after-actions store\n-   --  in the top of the scope stack\n+   --  in the top of the scope stack.\n \n    procedure Wrap_Transient_Declaration (N : Node_Id);\n    --  N is an object declaration. Expand the finalization calls after the"}, {"sha": "a15b7875ddb97a8166b2df628d4189784cd100b3", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 97, "deletions": 144, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -1168,8 +1168,7 @@ package body Exp_Ch9 is\n       procedure Build_Entry_Family_Name (Id : Entity_Id) is\n          Def     : constant Node_Id :=\n                      Discrete_Subtype_Definition (Parent (Id));\n-         L_Id    : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc, New_Internal_Name ('L'));\n+         L_Id    : constant Entity_Id := Make_Temporary (Loc, 'L');\n          L_Stmts : constant List_Id := New_List;\n          Val     : Node_Id;\n \n@@ -1265,9 +1264,8 @@ package body Exp_Ch9 is\n                Make_Iteration_Scheme (Loc,\n                  Loop_Parameter_Specification =>\n                    Make_Loop_Parameter_Specification (Loc,\n-                    Defining_Identifier => L_Id,\n-                    Discrete_Subtype_Definition =>\n-                      Build_Range (Def))),\n+                    Defining_Identifier         => L_Id,\n+                    Discrete_Subtype_Definition => Build_Range (Def))),\n              Statements => L_Stmts,\n              End_Label => Empty));\n       end Build_Entry_Family_Name;\n@@ -1411,7 +1409,7 @@ package body Exp_Ch9 is\n          return Empty;\n       end if;\n \n-      Index := Make_Defining_Identifier (Loc, New_Internal_Name ('I'));\n+      Index := Make_Temporary (Loc, 'I');\n \n       --  Step 1: Generate the declaration of the index variable:\n       --    Inn : Protected_Entry_Index := 0;\n@@ -1428,10 +1426,8 @@ package body Exp_Ch9 is\n       Append_To (B_Decls,\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Index,\n-          Object_Definition =>\n-            New_Reference_To (RTE (Index_Typ), Loc),\n-          Expression =>\n-            Make_Integer_Literal (Loc, 0)));\n+          Object_Definition   => New_Reference_To (RTE (Index_Typ), Loc),\n+          Expression          => Make_Integer_Literal (Loc, 0)));\n \n       B_Stmts := New_List;\n \n@@ -1488,19 +1484,15 @@ package body Exp_Ch9 is\n             --  Generate:\n             --    type Ann is access all <actual-type>\n \n-            Comp_Nam :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+            Comp_Nam := Make_Temporary (Loc, 'A');\n \n             Append_To (Decls,\n               Make_Full_Type_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Comp_Nam,\n-                Type_Definition =>\n+                Defining_Identifier => Comp_Nam,\n+                Type_Definition     =>\n                   Make_Access_To_Object_Definition (Loc,\n-                    All_Present =>\n-                      True,\n-                    Constant_Present =>\n-                      Ekind (Formal) = E_In_Parameter,\n+                    All_Present        => True,\n+                    Constant_Present   => Ekind (Formal) = E_In_Parameter,\n                     Subtype_Indication =>\n                       New_Reference_To (Etype (Actual), Loc))));\n \n@@ -1525,8 +1517,7 @@ package body Exp_Ch9 is\n          Next_Formal_With_Extras (Formal);\n       end loop;\n \n-      Rec_Nam :=\n-        Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+      Rec_Nam := Make_Temporary (Loc, 'P');\n \n       if Has_Comp then\n \n@@ -3104,7 +3095,7 @@ package body Exp_Ch9 is\n \n       if Nkind (Op_Spec) = N_Function_Specification then\n          if Exc_Safe then\n-            R := Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+            R := Make_Temporary (Loc, 'R');\n             Unprot_Call :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => R,\n@@ -3115,8 +3106,10 @@ package body Exp_Ch9 is\n                     Name => Make_Identifier (Loc,\n                       Chars (Defining_Unit_Name (N_Op_Spec))),\n                     Parameter_Associations => Uactuals));\n-            Return_Stmt := Make_Simple_Return_Statement (Loc,\n-              Expression => New_Reference_To (R, Loc));\n+\n+            Return_Stmt :=\n+              Make_Simple_Return_Statement (Loc,\n+                Expression => New_Reference_To (R, Loc));\n \n          else\n             Unprot_Call := Make_Simple_Return_Statement (Loc,\n@@ -3489,16 +3482,16 @@ package body Exp_Ch9 is\n            and then Ada_Version >= Ada_05\n          then\n             declare\n-               Obj : constant Entity_Id :=\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('F'));\n+               ExpR : constant Node_Id   := Relocate_Node (Concval);\n+               Obj  : constant Entity_Id := Make_Temporary (Loc, 'F', ExpR);\n                Decl : Node_Id;\n \n             begin\n                Decl :=\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Obj,\n                    Object_Definition   => New_Occurrence_Of (Conctyp, Loc),\n-                   Expression          => Relocate_Node (Concval));\n+                   Expression          => ExpR);\n                Set_Etype (Obj, Conctyp);\n                Decls := New_List (Decl);\n                Rewrite (Concval, New_Occurrence_Of (Obj, Loc));\n@@ -3568,11 +3561,9 @@ package body Exp_Ch9 is\n                if Is_By_Copy_Type (Etype (Actual)) then\n                   N_Node :=\n                     Make_Object_Declaration (Loc,\n-                      Defining_Identifier =>\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => New_Internal_Name ('J')),\n-                      Aliased_Present => True,\n-                      Object_Definition =>\n+                      Defining_Identifier => Make_Temporary (Loc, 'J'),\n+                      Aliased_Present     => True,\n+                      Object_Definition   =>\n                         New_Reference_To (Etype (Formal), Loc));\n \n                   --  Mark the object as not needing initialization since the\n@@ -3683,13 +3674,12 @@ package body Exp_Ch9 is\n \n                   --  Bnn : Communications_Block;\n \n-                  Comm_Name :=\n-                    Make_Defining_Identifier (Loc, New_Internal_Name ('B'));\n+                  Comm_Name := Make_Temporary (Loc, 'B');\n \n                   Append_To (Decls,\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => Comm_Name,\n-                      Object_Definition =>\n+                      Object_Definition   =>\n                         New_Reference_To (RTE (RE_Communication_Block), Loc)));\n \n                   --  Some additional statements for protected entry calls\n@@ -3941,16 +3931,13 @@ package body Exp_Ch9 is\n       Loc    : constant Source_Ptr := Sloc (N);\n       Chain  : constant Entity_Id  :=\n                  Make_Defining_Identifier (Loc, Name_uChain);\n-\n-      Blkent : Entity_Id;\n+      Blkent : constant Entity_Id  := Make_Temporary (Loc, 'A');\n       Block  : Node_Id;\n \n    begin\n-      Blkent := Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n-\n       Block :=\n         Make_Block_Statement (Loc,\n-          Identifier => New_Reference_To (Blkent, Loc),\n+          Identifier   => New_Reference_To (Blkent, Loc),\n           Declarations => New_List (\n \n             --  _Chain  : Activation_Chain;\n@@ -4006,12 +3993,10 @@ package body Exp_Ch9 is\n       Loc    : constant Source_Ptr := Sloc (N);\n       Chain  : constant Entity_Id  :=\n                  Make_Defining_Identifier (Loc, Name_uChain);\n-      Blkent : Entity_Id;\n+      Blkent : constant Entity_Id  := Make_Temporary (Loc, 'A');\n       Block  : Node_Id;\n \n    begin\n-      Blkent := Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n-\n       Append_To (Init_Stmts,\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Reference_To (RTE (RE_Activate_Tasks), Loc),\n@@ -4141,9 +4126,7 @@ package body Exp_Ch9 is\n       Efam := First_Entity (Conctyp);\n       while Present (Efam) loop\n          if Ekind (Efam) = E_Entry_Family then\n-            Efam_Type :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('F'));\n+            Efam_Type := Make_Temporary (Loc, 'F');\n \n             declare\n                Bas : Entity_Id :=\n@@ -4158,9 +4141,7 @@ package body Exp_Ch9 is\n                  (Discrete_Subtype_Definition (Parent (Efam)), Lo, Hi);\n \n                if Is_Potentially_Large_Family (Bas, Conctyp, Lo, Hi) then\n-                  Bas :=\n-                    Make_Defining_Identifier (Loc,\n-                      Chars => New_Internal_Name ('B'));\n+                  Bas := Make_Temporary (Loc, 'B');\n \n                   Bas_Decl :=\n                     Make_Subtype_Declaration (Loc,\n@@ -4397,20 +4378,19 @@ package body Exp_Ch9 is\n             else\n                declare\n                   Decl   : Node_Id;\n-                  T_Self : constant Entity_Id :=\n-                             Make_Defining_Identifier (Loc,\n-                               Chars => New_Internal_Name ('T'));\n+                  T_Self : constant Entity_Id := Make_Temporary (Loc, 'T');\n                   T_Body : constant Node_Id :=\n                              Parent (Corresponding_Body (Parent (Entity (N))));\n \n                begin\n-                  Decl := Make_Object_Declaration (Loc,\n-                     Defining_Identifier => T_Self,\n-                     Object_Definition =>\n-                       New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                     Expression =>\n-                       Make_Function_Call (Loc,\n-                         Name => New_Reference_To (RTE (RE_Self), Loc)));\n+                  Decl :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => T_Self,\n+                      Object_Definition   =>\n+                        New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n+                      Expression          =>\n+                        Make_Function_Call (Loc,\n+                          Name => New_Reference_To (RTE (RE_Self), Loc)));\n                   Prepend (Decl, Declarations (T_Body));\n                   Analyze (Decl);\n                   Set_Scope (T_Self, Entity (N));\n@@ -4707,25 +4687,28 @@ package body Exp_Ch9 is\n          --  completes in the middle of the accept body.\n \n          if Present (Handled_Statement_Sequence (N)) then\n-            Lab_Id := Make_Identifier (Loc, New_Internal_Name ('L'));\n-            Set_Entity (Lab_Id,\n-              Make_Defining_Identifier (Loc, Chars (Lab_Id)));\n-            Lab := Make_Label (Loc, Lab_Id);\n-            Ldecl :=\n-              Make_Implicit_Label_Declaration (Loc,\n-                Defining_Identifier  => Entity (Lab_Id),\n-                Label_Construct      => Lab);\n-            Append (Lab, Statements (Handled_Statement_Sequence (N)));\n-\n-            Lab_Id := Make_Identifier (Loc, New_Internal_Name ('L'));\n-            Set_Entity (Lab_Id,\n-              Make_Defining_Identifier (Loc, Chars (Lab_Id)));\n-            Lab := Make_Label (Loc, Lab_Id);\n-            Ldecl2 :=\n-              Make_Implicit_Label_Declaration (Loc,\n-                Defining_Identifier  => Entity (Lab_Id),\n-                Label_Construct      => Lab);\n-            Append (Lab, Statements (Handled_Statement_Sequence (N)));\n+            declare\n+               Ent : Entity_Id;\n+\n+            begin\n+               Ent := Make_Temporary (Loc, 'L');\n+               Lab_Id := New_Reference_To (Ent, Loc);\n+               Lab := Make_Label (Loc, Lab_Id);\n+               Ldecl :=\n+                 Make_Implicit_Label_Declaration (Loc,\n+                   Defining_Identifier  => Ent,\n+                   Label_Construct      => Lab);\n+               Append (Lab, Statements (Handled_Statement_Sequence (N)));\n+\n+               Ent := Make_Temporary (Loc, 'L');\n+               Lab_Id := New_Reference_To (Ent, Loc);\n+               Lab := Make_Label (Loc, Lab_Id);\n+               Ldecl2 :=\n+                 Make_Implicit_Label_Declaration (Loc,\n+                   Defining_Identifier  => Ent,\n+                   Label_Construct      => Lab);\n+               Append (Lab, Statements (Handled_Statement_Sequence (N)));\n+            end;\n \n          else\n             Ldecl := Empty;\n@@ -4737,9 +4720,7 @@ package body Exp_Ch9 is\n          if Is_List_Member (N) then\n \n             if Present (Handled_Statement_Sequence (N)) then\n-               Ann :=\n-                 Make_Defining_Identifier (Loc,\n-                   Chars => New_Internal_Name ('A'));\n+               Ann := Make_Temporary (Loc, 'A');\n \n                Adecl :=\n                  Make_Object_Declaration (Loc,\n@@ -4796,9 +4777,7 @@ package body Exp_Ch9 is\n                --  label for requeue expansion must be declared.\n \n                if N = Accept_Statement (Alt) then\n-                  Ann :=\n-                    Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n-\n+                  Ann := Make_Temporary (Loc, 'A');\n                   Adecl :=\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => Ann,\n@@ -4911,10 +4890,8 @@ package body Exp_Ch9 is\n       Comps  : List_Id;\n       T      : constant Entity_Id  := Defining_Identifier (N);\n       D_T    : constant Entity_Id  := Designated_Type (T);\n-      D_T2   : constant Entity_Id  := Make_Defining_Identifier (Loc,\n-                                        Chars => New_Internal_Name ('D'));\n-      E_T    : constant Entity_Id  := Make_Defining_Identifier (Loc,\n-                                        Chars => New_Internal_Name ('E'));\n+      D_T2   : constant Entity_Id  := Make_Temporary (Loc, 'D');\n+      E_T    : constant Entity_Id  := Make_Temporary (Loc, 'E');\n       P_List : constant List_Id    := Build_Protected_Spec\n                                         (N, RTE (RE_Address), D_T, False);\n       Decl1  : Node_Id;\n@@ -4950,20 +4927,18 @@ package body Exp_Ch9 is\n \n       Comps := New_List (\n         Make_Component_Declaration (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, New_Internal_Name ('P')),\n+          Defining_Identifier => Make_Temporary (Loc, 'P'),\n           Component_Definition =>\n             Make_Component_Definition (Loc,\n               Aliased_Present => False,\n               Subtype_Indication =>\n                 New_Occurrence_Of (RTE (RE_Address), Loc))),\n \n         Make_Component_Declaration (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, New_Internal_Name ('S')),\n+          Defining_Identifier  => Make_Temporary (Loc, 'S'),\n           Component_Definition =>\n             Make_Component_Definition (Loc,\n-              Aliased_Present => False,\n+              Aliased_Present    => False,\n               Subtype_Indication => New_Occurrence_Of (D_T2, Loc))));\n \n       Decl2 :=\n@@ -5291,7 +5266,7 @@ package body Exp_Ch9 is\n          --  Construct the block, using the declarations from the accept\n          --  statement if any to initialize the declarations of the block.\n \n-         Blkent := Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+         Blkent := Make_Temporary (Loc, 'A');\n          Set_Ekind (Blkent, E_Block);\n          Set_Etype (Blkent, Standard_Void_Type);\n          Set_Scope (Blkent, Current_Scope);\n@@ -5676,7 +5651,7 @@ package body Exp_Ch9 is\n       T   : Entity_Id;  --  Additional status flag\n \n    begin\n-      Blk_Ent := Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+      Blk_Ent := Make_Temporary (Loc, 'A');\n       Ecall   := Triggering_Statement (Trig);\n \n       --  The arguments in the call may require dynamic allocation, and the\n@@ -5717,13 +5692,11 @@ package body Exp_Ch9 is\n             --  Communication block processing, generate:\n             --    Bnn : Communication_Block;\n \n-            Bnn := Make_Defining_Identifier (Loc, New_Internal_Name ('B'));\n-\n+            Bnn := Make_Temporary (Loc, 'B');\n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Bnn,\n-                Object_Definition =>\n+                Defining_Identifier => Bnn,\n+                Object_Definition   =>\n                   New_Reference_To (RTE (RE_Communication_Block), Loc)));\n \n             --  Call kind processing, generate:\n@@ -5761,14 +5734,13 @@ package body Exp_Ch9 is\n             S := Build_S (Loc, Decls);\n \n             --  Additional status flag processing, generate:\n+            --    Tnn : Boolean;\n \n-            T := Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n-\n+            T := Make_Temporary (Loc, 'T');\n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  T,\n-                Object_Definition =>\n+                Defining_Identifier => T,\n+                Object_Definition   =>\n                   New_Reference_To (Standard_Boolean, Loc)));\n \n             ------------------------------\n@@ -5853,9 +5825,7 @@ package body Exp_Ch9 is\n             --       _clean;\n             --    end;\n \n-            Cleanup_Block_Ent :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('C'));\n-\n+            Cleanup_Block_Ent := Make_Temporary (Loc, 'C');\n             Cleanup_Block :=\n               Build_Cleanup_Block (Loc, Cleanup_Block_Ent, Cleanup_Stmts, Bnn);\n \n@@ -5868,9 +5838,7 @@ package body Exp_Ch9 is\n             --       when Abort_Signal => Abort_Undefer;\n             --    end;\n \n-            Abort_Block_Ent :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n-\n+            Abort_Block_Ent := Make_Temporary (Loc, 'A');\n             ProtE_Stmts :=\n               New_List (\n                 Make_Implicit_Label_Declaration (Loc,\n@@ -5985,9 +5953,7 @@ package body Exp_Ch9 is\n             --       _clean;\n             --    end;\n \n-            Cleanup_Block_Ent :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('C'));\n-\n+            Cleanup_Block_Ent := Make_Temporary (Loc, 'C');\n             Cleanup_Block :=\n               Build_Cleanup_Block (Loc, Cleanup_Block_Ent, Cleanup_Stmts, T);\n \n@@ -6000,13 +5966,11 @@ package body Exp_Ch9 is\n             --       when Abort_Signal => Abort_Undefer;\n             --    end;\n \n-            Abort_Block_Ent :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+            Abort_Block_Ent := Make_Temporary (Loc, 'A');\n \n             Append_To (TaskE_Stmts,\n               Make_Implicit_Label_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Abort_Block_Ent));\n+                Defining_Identifier => Abort_Block_Ent));\n \n             Append_To (TaskE_Stmts,\n               Build_Abort_Block\n@@ -6143,8 +6107,7 @@ package body Exp_Ch9 is\n             --  Add a Delay_Block object to the parameter list of the delay\n             --  procedure to form the parameter list of the Wait entry call.\n \n-            Dblock_Ent :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('D'));\n+            Dblock_Ent := Make_Temporary (Loc, 'D');\n \n             Pdef := Entity (Name (Ecall));\n \n@@ -7092,8 +7055,7 @@ package body Exp_Ch9 is\n \n             --  Declare new access type and then append\n \n-            Ctype :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+            Ctype := Make_Temporary (Loc, 'A');\n \n             Decl :=\n               Make_Full_Type_Declaration (Loc,\n@@ -7120,8 +7082,7 @@ package body Exp_Ch9 is\n \n          --  Create the Entry_Parameter_Record declaration\n \n-         Rec_Ent :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+         Rec_Ent := Make_Temporary (Loc, 'P');\n \n          Decl :=\n            Make_Full_Type_Declaration (Loc,\n@@ -7137,8 +7098,7 @@ package body Exp_Ch9 is\n \n          --  Construct and link in the corresponding access type\n \n-         Acc_Ent :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+         Acc_Ent := Make_Temporary (Loc, 'A');\n \n          Set_Entry_Parameters_Type (Entry_Ent, Acc_Ent);\n \n@@ -8751,8 +8711,7 @@ package body Exp_Ch9 is\n       function Accept_Or_Raise return List_Id is\n          Cond  : Node_Id;\n          Stats : List_Id;\n-         J     : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                                  New_Internal_Name ('J'));\n+         J     : constant Entity_Id := Make_Temporary (Loc, 'J');\n \n       begin\n          --  We generate the following:\n@@ -9344,8 +9303,8 @@ package body Exp_Ch9 is\n          --  Create Duration and Delay_Mode objects used for passing a delay\n          --  value to RTS\n \n-         D := Make_Defining_Identifier (Loc, New_Internal_Name ('D'));\n-         M := Make_Defining_Identifier (Loc, New_Internal_Name ('M'));\n+         D := Make_Temporary (Loc, 'D');\n+         M := Make_Temporary (Loc, 'M');\n \n          declare\n             Discr : Entity_Id;\n@@ -10579,7 +10538,7 @@ package body Exp_Ch9 is\n            New_List (New_Copy (Expression (D_Stat))));\n       end if;\n \n-      D := Make_Defining_Identifier (Loc, New_Internal_Name ('D'));\n+      D := Make_Temporary (Loc, 'D');\n \n       --  Generate:\n       --    D : Duration;\n@@ -10591,7 +10550,7 @@ package body Exp_Ch9 is\n           Object_Definition =>\n             New_Reference_To (Standard_Duration, Loc)));\n \n-      M := Make_Defining_Identifier (Loc, New_Internal_Name ('M'));\n+      M := Make_Temporary (Loc, 'M');\n \n       --  Generate:\n       --    M : Integer := (0 | 1 | 2);\n@@ -11370,9 +11329,7 @@ package body Exp_Ch9 is\n \n       if Is_Protected then\n          declare\n-            Prot_Ent : constant Entity_Id :=\n-                         Make_Defining_Identifier (Loc,\n-                           New_Internal_Name ('R'));\n+            Prot_Ent : constant Entity_Id := Make_Temporary (Loc, 'R');\n             Prot_Typ : RE_Id;\n \n          begin\n@@ -11561,8 +11518,7 @@ package body Exp_Ch9 is\n                High := Replace_Bound (High);\n                Low  := Replace_Bound (Low);\n \n-               Index_Typ :=\n-                 Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+               Index_Typ := Make_Temporary (Loc, 'J');\n \n                --  Generate:\n                --    subtype Jnn is <Etype of Index> range Low .. High;\n@@ -11790,17 +11746,15 @@ package body Exp_Ch9 is\n             --  Interrupt_Priority).\n \n             else\n-               Temp :=\n-                 Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n-\n+               Temp := Make_Temporary (Loc, 'R', Prio);\n                Append_To (L,\n                   Make_Object_Declaration (Loc,\n                      Defining_Identifier => Temp,\n                      Object_Definition   =>\n                        New_Occurrence_Of (RTE (RE_Any_Priority), Loc),\n                      Expression          => Relocate_Node (Prio)));\n \n-                  Append_To (Args, New_Occurrence_Of (Temp, Loc));\n+               Append_To (Args, New_Occurrence_Of (Temp, Loc));\n             end if;\n          end;\n \n@@ -12380,8 +12334,7 @@ package body Exp_Ch9 is\n             --  Generate:\n             --    Jnn : aliased <formal-type>\n \n-            Temp_Nam :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+            Temp_Nam := Make_Temporary (Loc, 'J');\n \n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n@@ -12447,7 +12400,7 @@ package body Exp_Ch9 is\n       --      <actual2>'reference;\n       --      ...);\n \n-      P := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+      P := Make_Temporary (Loc, 'P');\n \n       Append_To (Decls,\n         Make_Object_Declaration (Loc,"}, {"sha": "99575141cfa46abe0ce97fc6e7d0fe482e27022e", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 37, "deletions": 59, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -1157,8 +1157,7 @@ package body Exp_Disp is\n \n             New_Typ_Decl :=\n               Make_Full_Type_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('T')),\n+                Defining_Identifier => Make_Temporary (Loc, 'T'),\n                 Type_Definition =>\n                   Make_Access_To_Object_Definition (Loc,\n                     All_Present            => True,\n@@ -1199,10 +1198,7 @@ package body Exp_Disp is\n                  Else_Statements => Stats));\n             end if;\n \n-            Fent :=\n-              Make_Defining_Identifier (Loc,\n-                New_Internal_Name ('F'));\n-\n+            Fent := Make_Temporary (Loc, 'F');\n             Func :=\n               Make_Subprogram_Body (Loc,\n                 Specification =>\n@@ -1566,9 +1562,7 @@ package body Exp_Disp is\n \n             Decl_2 :=\n               Make_Full_Type_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc,\n-                    New_Internal_Name ('T')),\n+                Defining_Identifier => Make_Temporary (Loc, 'T'),\n                 Type_Definition =>\n                   Make_Access_To_Object_Definition (Loc,\n                     All_Present            => True,\n@@ -1593,9 +1587,7 @@ package body Exp_Disp is\n \n             Decl_1 :=\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc,\n-                    New_Internal_Name ('S')),\n+                Defining_Identifier => Make_Temporary (Loc, 'S'),\n                 Constant_Present    => True,\n                 Object_Definition   =>\n                   New_Reference_To (RTE (RE_Storage_Offset), Loc),\n@@ -1645,8 +1637,7 @@ package body Exp_Disp is\n \n             Decl_1 :=\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('S')),\n+                Defining_Identifier => Make_Temporary (Loc, 'S'),\n                 Constant_Present    => True,\n                 Object_Definition   =>\n                   New_Reference_To (RTE (RE_Storage_Offset), Loc),\n@@ -1665,19 +1656,19 @@ package body Exp_Disp is\n \n             Decl_2 :=\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('S')),\n-                Constant_Present  => True,\n-                Object_Definition => New_Reference_To (RTE (RE_Addr_Ptr), Loc),\n-                Expression        =>\n+                Defining_Identifier => Make_Temporary (Loc, 'S'),\n+                Constant_Present    => True,\n+                Object_Definition   =>\n+                  New_Reference_To (RTE (RE_Addr_Ptr), Loc),\n+                Expression          =>\n                   Unchecked_Convert_To\n                     (RTE (RE_Addr_Ptr),\n                      New_Reference_To (Defining_Identifier (Decl_1), Loc)));\n \n             Append_To (Decl, Decl_1);\n             Append_To (Decl, Decl_2);\n \n-            --  Reference the new actual. Generate:\n+            --  Reference the new actual, generate:\n             --    Target_Formal (S2.all)\n \n             Append_To (Actuals,\n@@ -1696,10 +1687,7 @@ package body Exp_Disp is\n          Next (Formal);\n       end loop;\n \n-      Thunk_Id :=\n-        Make_Defining_Identifier (Loc,\n-          Chars => New_Internal_Name ('T'));\n-\n+      Thunk_Id := Make_Temporary (Loc, 'T');\n       Set_Is_Thunk (Thunk_Id);\n \n       --  Procedure case\n@@ -1998,9 +1986,7 @@ package body Exp_Disp is\n             --  Generate:\n             --    Bnn : Communication_Block;\n \n-            Com_Block :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('B'));\n-\n+            Com_Block := Make_Temporary (Loc, 'B');\n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier =>\n@@ -2351,8 +2337,7 @@ package body Exp_Disp is\n          --  where Bnn is the name of the communication block used in the\n          --  call to Protected_Entry_Call.\n \n-         Blk_Nam := Make_Defining_Identifier (Loc, New_Internal_Name ('B'));\n-\n+         Blk_Nam := Make_Temporary (Loc, 'B');\n          Append_To (Decls,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier =>\n@@ -3597,13 +3582,8 @@ package body Exp_Disp is\n          Exporting_Table    : constant Boolean :=\n                                 Building_Static_DT (Typ)\n                                   and then Suffix_Index > 0;\n-         Iface_DT           : constant Entity_Id :=\n-                                Make_Defining_Identifier (Loc,\n-                                  Chars => New_Internal_Name ('T'));\n-         Name_Predef_Prims  : constant Name_Id := New_Internal_Name ('R');\n-         Predef_Prims       : constant Entity_Id :=\n-                                Make_Defining_Identifier (Loc,\n-                                  Chars => Name_Predef_Prims);\n+         Iface_DT           : constant Entity_Id := Make_Temporary (Loc, 'T');\n+         Predef_Prims       : constant Entity_Id := Make_Temporary (Loc, 'R');\n          DT_Constr_List     : List_Id;\n          DT_Aggr_List       : List_Id;\n          Empty_DT           : Boolean := False;\n@@ -3752,10 +3732,8 @@ package body Exp_Disp is\n \n             Decl :=\n               Make_Subtype_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc,\n-                    New_Internal_Name ('S')),\n-                Subtype_Indication =>\n+                Defining_Identifier => Make_Temporary (Loc, 'S'),\n+                Subtype_Indication  =>\n                   New_Reference_To (RTE (RE_Address_Array), Loc));\n \n             Append_To (Result, Decl);\n@@ -3916,7 +3894,7 @@ package body Exp_Disp is\n                pragma Assert (Count = Nb_Prim);\n             end;\n \n-            OSD := Make_Defining_Identifier (Loc, New_Internal_Name ('I'));\n+            OSD := Make_Temporary (Loc, 'I');\n \n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n@@ -3929,21 +3907,23 @@ package body Exp_Disp is\n                       Make_Index_Or_Discriminant_Constraint (Loc,\n                         Constraints => New_List (\n                           Make_Integer_Literal (Loc, Nb_Prim)))),\n-                Expression => Make_Aggregate (Loc,\n-                  Component_Associations => New_List (\n-                    Make_Component_Association (Loc,\n-                      Choices => New_List (\n-                        New_Occurrence_Of\n-                          (RTE_Record_Component (RE_OSD_Num_Prims), Loc)),\n-                      Expression =>\n-                        Make_Integer_Literal (Loc, Nb_Prim)),\n \n-                    Make_Component_Association (Loc,\n-                      Choices => New_List (\n-                        New_Occurrence_Of\n-                          (RTE_Record_Component (RE_OSD_Table), Loc)),\n-                      Expression => Make_Aggregate (Loc,\n-                        Component_Associations => OSD_Aggr_List))))));\n+                Expression          =>\n+                  Make_Aggregate (Loc,\n+                    Component_Associations => New_List (\n+                      Make_Component_Association (Loc,\n+                        Choices => New_List (\n+                          New_Occurrence_Of\n+                            (RTE_Record_Component (RE_OSD_Num_Prims), Loc)),\n+                        Expression =>\n+                          Make_Integer_Literal (Loc, Nb_Prim)),\n+\n+                      Make_Component_Association (Loc,\n+                        Choices => New_List (\n+                          New_Occurrence_Of\n+                            (RTE_Record_Component (RE_OSD_Table), Loc)),\n+                        Expression => Make_Aggregate (Loc,\n+                          Component_Associations => OSD_Aggr_List))))));\n \n             Append_To (Result,\n               Make_Attribute_Definition_Clause (Loc,\n@@ -5428,10 +5408,8 @@ package body Exp_Disp is\n \n                Decl :=\n                  Make_Subtype_Declaration (Loc,\n-                   Defining_Identifier =>\n-                     Make_Defining_Identifier (Loc,\n-                       New_Internal_Name ('S')),\n-                   Subtype_Indication =>\n+                   Defining_Identifier => Make_Temporary (Loc, 'S'),\n+                   Subtype_Indication  =>\n                      New_Reference_To (RTE (RE_Address_Array), Loc));\n \n                Append_To (Result, Decl);"}, {"sha": "dde044106f95ad855a61bb1c486da8f687b409b7", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 96, "deletions": 199, "changes": 295, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -975,10 +975,10 @@ package body Exp_Dist is\n                     Defining_Unit_Name (Specification (Current_Declaration))),\n                 Asynchronous =>\n                   Nkind (Specification (Current_Declaration)) =\n-                    N_Procedure_Specification\n-                  and then\n-                    Is_Asynchronous (Defining_Unit_Name (Specification\n-                      (Current_Declaration))));\n+                                                 N_Procedure_Specification\n+                    and then\n+                      Is_Asynchronous (Defining_Unit_Name (Specification\n+                        (Current_Declaration))));\n \n             Append_To (Decls, Subp_Stubs);\n             Analyze (Subp_Stubs);\n@@ -1293,9 +1293,7 @@ package body Exp_Dist is\n       end if;\n \n       if not Is_RAS then\n-         RPC_Receiver :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('P'));\n+         RPC_Receiver := Make_Temporary (Loc, 'P');\n \n          Specific_Build_RPC_Receiver_Body\n            (RPC_Receiver => RPC_Receiver,\n@@ -1529,9 +1527,7 @@ package body Exp_Dist is\n       Param_Assoc : constant List_Id := New_List;\n       Stmts       : constant List_Id := New_List;\n \n-      RAS_Parameter : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => New_Internal_Name ('P'));\n+      RAS_Parameter : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n       Is_Function : constant Boolean :=\n                       Nkind (Type_Def) = N_Access_Function_Definition;\n@@ -1897,8 +1893,7 @@ package body Exp_Dist is\n       end if;\n \n       Existing := False;\n-      Stub_Type :=\n-        Make_Defining_Identifier (Loc, Chars => New_Internal_Name ('S'));\n+      Stub_Type := Make_Temporary (Loc, 'S');\n       Set_Ekind (Stub_Type, E_Record_Type);\n       Set_Is_RACW_Stub_Type (Stub_Type);\n       Stub_Type_Access :=\n@@ -2058,8 +2053,8 @@ package body Exp_Dist is\n \n             declare\n                Constant_Object : constant Entity_Id :=\n-                                   Make_Defining_Identifier (Loc,\n-                                     New_Internal_Name ('P'));\n+                                   Make_Temporary (Loc, 'P');\n+\n             begin\n                Set_Defining_Identifier\n                  (Last (Decls), Constant_Object);\n@@ -2429,9 +2424,10 @@ package body Exp_Dist is\n    --  Start of processing for Build_Subprogram_Calling_Stubs\n \n    begin\n-      Subp_Spec := Copy_Specification (Loc,\n-        Spec     => Specification (Vis_Decl),\n-        New_Name => New_Name);\n+      Subp_Spec :=\n+        Copy_Specification (Loc,\n+          Spec     => Specification (Vis_Decl),\n+          New_Name => New_Name);\n \n       if Locator = Empty then\n          RCI_Locator := RCI_Cache;\n@@ -3019,9 +3015,7 @@ package body Exp_Dist is\n          Remote_Statements : List_Id;\n          --  Various parts of the procedure\n \n-         Pnam              : constant Entity_Id :=\n-                               Make_Defining_Identifier\n-                                 (Loc, New_Internal_Name ('R'));\n+         Pnam              : constant Entity_Id := Make_Temporary (Loc, 'R');\n          Asynchronous_Flag : constant Entity_Id :=\n                                Asynchronous_Flags_Table.Get (RACW_Type);\n          pragma Assert (Present (Asynchronous_Flag));\n@@ -3063,16 +3057,11 @@ package body Exp_Dist is\n \n          --  Prepare local identifiers\n \n-         Source_Partition :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n-         Source_Receiver  :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n-         Source_Address   :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n-         Local_Stub       :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('L'));\n-         Stubbed_Result   :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n+         Source_Partition := Make_Temporary (Loc, 'P');\n+         Source_Receiver  := Make_Temporary (Loc, 'S');\n+         Source_Address   := Make_Temporary (Loc, 'P');\n+         Local_Stub       := Make_Temporary (Loc, 'L');\n+         Stubbed_Result   := Make_Temporary (Loc, 'S');\n \n          --  Generate object declarations\n \n@@ -3274,8 +3263,7 @@ package body Exp_Dist is\n          Remote_Statements : List_Id;\n          Null_Statements   : List_Id;\n \n-         Pnam : constant Entity_Id :=\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+         Pnam : constant Entity_Id := Make_Temporary (Loc, 'R');\n \n       begin\n          Build_Stream_Procedure\n@@ -3455,25 +3443,16 @@ package body Exp_Dist is\n          Proc_Decls      : List_Id;\n          Proc_Statements : List_Id;\n \n-         Origin : constant Entity_Id :=\n-                    Make_Defining_Identifier (Loc,\n-                      Chars => New_Internal_Name ('P'));\n+         Origin : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n          --  Additional local variables for the local case\n \n-         Proxy_Addr : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => New_Internal_Name ('P'));\n+         Proxy_Addr : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n          --  Additional local variables for the remote case\n \n-         Local_Stub : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => New_Internal_Name ('L'));\n-\n-         Stub_Ptr : constant Entity_Id :=\n-                      Make_Defining_Identifier (Loc,\n-                        Chars => New_Internal_Name ('S'));\n+         Local_Stub : constant Entity_Id := Make_Temporary (Loc, 'L');\n+         Stub_Ptr   : constant Entity_Id := Make_Temporary (Loc, 'S');\n \n          function Set_Field\n            (Field_Name : Name_Id;\n@@ -3699,18 +3678,15 @@ package body Exp_Dist is\n          Request_Parameter : Node_Id;\n \n          Pkg_RPC_Receiver            : constant Entity_Id :=\n-                                         Make_Defining_Identifier (Loc,\n-                                           New_Internal_Name ('H'));\n+                                         Make_Temporary (Loc, 'H');\n          Pkg_RPC_Receiver_Statements : List_Id;\n          Pkg_RPC_Receiver_Cases      : constant List_Id := New_List;\n          Pkg_RPC_Receiver_Body       : Node_Id;\n          --  A Pkg_RPC_Receiver is built to decode the request\n \n-         Lookup_RAS_Info : constant Entity_Id :=\n-                             Make_Defining_Identifier (Loc,\n-                               Chars => New_Internal_Name ('R'));\n-         --  A remote subprogram is created to allow peers to look up\n-         --  RAS information using subprogram ids.\n+         Lookup_RAS_Info : constant Entity_Id := Make_Temporary (Loc, 'R');\n+         --  A remote subprogram is created to allow peers to look up RAS\n+         --  information using subprogram ids.\n \n          Subp_Id    : Entity_Id;\n          Subp_Index : Entity_Id;\n@@ -3720,11 +3696,8 @@ package body Exp_Dist is\n          Current_Subprogram_Number : Int := First_RCI_Subprogram_Id;\n          Current_Stubs             : Node_Id;\n \n-         Subp_Info_Array : constant Entity_Id :=\n-                             Make_Defining_Identifier (Loc,\n-                               Chars => New_Internal_Name ('I'));\n-\n-         Subp_Info_List : constant List_Id := New_List;\n+         Subp_Info_Array : constant Entity_Id := Make_Temporary (Loc, 'I');\n+         Subp_Info_List  : constant List_Id := New_List;\n \n          Register_Pkg_Actuals : constant List_Id := New_List;\n \n@@ -4165,8 +4138,7 @@ package body Exp_Dist is\n          --  well as the declaration of Result. For a function call, 'Input is\n          --  always used to read the result even if it is constrained.\n \n-         Stream_Parameter :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n+         Stream_Parameter := Make_Temporary (Loc, 'S');\n \n          Append_To (Decls,\n            Make_Object_Declaration (Loc,\n@@ -4182,8 +4154,7 @@ package body Exp_Dist is\n                        New_List (Make_Integer_Literal (Loc, 0))))));\n \n          if not Is_Known_Asynchronous then\n-            Result_Parameter :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+            Result_Parameter := Make_Temporary (Loc, 'R');\n \n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n@@ -4198,8 +4169,7 @@ package body Exp_Dist is\n                         Constraints =>\n                           New_List (Make_Integer_Literal (Loc, 0))))));\n \n-            Exception_Return_Parameter :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+            Exception_Return_Parameter := Make_Temporary (Loc, 'E');\n \n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n@@ -4318,8 +4288,7 @@ package body Exp_Dist is\n                   --  type and push it in the stream after the regular\n                   --  parameters.\n \n-                  Extra_Parameter := Make_Defining_Identifier\n-                                       (Loc, New_Internal_Name ('P'));\n+                  Extra_Parameter := Make_Temporary (Loc, 'P');\n \n                   Append_To (Decls,\n                      Make_Object_Declaration (Loc,\n@@ -4556,7 +4525,7 @@ package body Exp_Dist is\n              (RPC_Receiver      => RPC_Receiver,\n               Request_Parameter => Request);\n \n-         Subp_Id    := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+         Subp_Id    := Make_Temporary (Loc, 'P');\n          Subp_Index := Subp_Id;\n \n          --  Subp_Id may not be a constant, because in the case of the RPC\n@@ -4600,9 +4569,10 @@ package body Exp_Dist is\n          Controlling_Parameter : Entity_Id) return RPC_Target\n       is\n          Target_Info : RPC_Target (PCS_Kind => Name_GARLIC_DSA);\n+\n       begin\n-         Target_Info.Partition :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+         Target_Info.Partition := Make_Temporary (Loc, 'P');\n+\n          if Present (Controlling_Parameter) then\n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n@@ -4707,10 +4677,9 @@ package body Exp_Dist is\n             begin\n                RPC_Receiver_Decl :=\n                  Make_Subprogram_Declaration (Loc,\n-                   Build_RPC_Receiver_Specification (\n-                     RPC_Receiver      => Make_Defining_Identifier (Loc,\n-                                            New_Internal_Name ('R')),\n-                     Request_Parameter => RPC_Receiver_Request));\n+                   Build_RPC_Receiver_Specification\n+                     (RPC_Receiver      => Make_Temporary (Loc, 'R'),\n+                      Request_Parameter => RPC_Receiver_Request));\n             end;\n          end if;\n       end Build_Stub_Type;\n@@ -4729,9 +4698,7 @@ package body Exp_Dist is\n       is\n          Loc : constant Source_Ptr := Sloc (Vis_Decl);\n \n-         Request_Parameter : constant Entity_Id :=\n-                               Make_Defining_Identifier (Loc,\n-                                 New_Internal_Name ('R'));\n+         Request_Parameter : constant Entity_Id := Make_Temporary (Loc, 'R');\n          --  Formal parameter for receiving stubs: a descriptor for an incoming\n          --  request.\n \n@@ -4784,8 +4751,7 @@ package body Exp_Dist is\n          end if;\n \n          if Dynamically_Asynchronous then\n-            Dynamic_Async :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n+            Dynamic_Async := Make_Temporary (Loc, 'S');\n          else\n             Dynamic_Async := Empty;\n          end if;\n@@ -4830,9 +4796,7 @@ package body Exp_Dist is\n                Need_Extra_Constrained : Boolean;\n                --  True when an Extra_Constrained actual is required\n \n-               Object : constant Entity_Id :=\n-                          Make_Defining_Identifier (Loc,\n-                            New_Internal_Name ('P'));\n+               Object : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n                Expr : Node_Id := Empty;\n \n@@ -5051,9 +5015,8 @@ package body Exp_Dist is\n             declare\n                Etyp   : constant Entity_Id :=\n                           Etype (Result_Definition (Specification (Vis_Decl)));\n-               Result : constant Node_Id   :=\n-                          Make_Defining_Identifier (Loc,\n-                             New_Internal_Name ('R'));\n+               Result : constant Node_Id   := Make_Temporary (Loc, 'R');\n+\n             begin\n                Inner_Decls := New_List (\n                  Make_Object_Declaration (Loc,\n@@ -5139,8 +5102,7 @@ package body Exp_Dist is\n             --  exception occurrence is copied into the output stream and\n             --  no other output parameter is written.\n \n-            Excep_Choice :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+            Excep_Choice := Make_Temporary (Loc, 'E');\n \n             Excep_Code := New_List (\n               Make_Attribute_Reference (Loc,\n@@ -5171,8 +5133,7 @@ package body Exp_Dist is\n \n          Subp_Spec :=\n            Make_Procedure_Specification (Loc,\n-             Defining_Unit_Name       =>\n-               Make_Defining_Identifier (Loc, New_Internal_Name ('F')),\n+             Defining_Unit_Name       => Make_Temporary (Loc, 'F'),\n \n              Parameter_Specifications => New_List (\n                Make_Parameter_Specification (Loc,\n@@ -5308,10 +5269,10 @@ package body Exp_Dist is\n    begin\n       return\n         Make_Subprogram_Body (Loc,\n-          Specification              => Make_Function_Specification (Loc,\n-            Defining_Unit_Name =>\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('S')),\n-            Result_Definition  => New_Occurrence_Of (Var_Type, Loc)),\n+          Specification              =>\n+            Make_Function_Specification (Loc,\n+              Defining_Unit_Name => Make_Temporary (Loc, 'S'),\n+              Result_Definition  => New_Occurrence_Of (Var_Type, Loc)),\n           Declarations               => No_List,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc, New_List (\n@@ -5394,8 +5355,7 @@ package body Exp_Dist is\n    --------------------\n \n    function Make_Tag_Check (Loc : Source_Ptr; N : Node_Id) return Node_Id is\n-      Occ : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+      Occ : constant Entity_Id := Make_Temporary (Loc, 'E');\n \n    begin\n       return Make_Block_Statement (Loc,\n@@ -5762,8 +5722,7 @@ package body Exp_Dist is\n                         Make_Defining_Identifier (Loc, Name_R);\n          --  Various parts of the procedure\n \n-         Pnam : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                        New_Internal_Name ('R'));\n+         Pnam : constant Entity_Id := Make_Temporary (Loc, 'R');\n \n          Is_RAS : constant Boolean := not Comes_From_Source (RACW_Type);\n \n@@ -5882,10 +5841,8 @@ package body Exp_Dist is\n          RACW_Parameter : constant Entity_Id :=\n                             Make_Defining_Identifier (Loc, Name_R);\n \n-         Reference : constant Entity_Id :=\n-                       Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n-         Any       : constant Entity_Id :=\n-                       Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+         Reference : constant Entity_Id := Make_Temporary (Loc, 'R');\n+         Any       : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n       begin\n          Func_Spec :=\n@@ -6074,8 +6031,7 @@ package body Exp_Dist is\n          Attr_Decl : Node_Id;\n \n          Statements : constant List_Id := New_List;\n-         Pnam : constant Entity_Id :=\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+         Pnam : constant Entity_Id := Make_Temporary (Loc, 'R');\n \n          function Stream_Parameter return Node_Id;\n          function Object return Node_Id;\n@@ -6233,16 +6189,10 @@ package body Exp_Dist is\n            Make_Defining_Identifier (Loc, Name_A);\n          --  For the call to Get_Local_Address\n \n+         Local_Stub : constant Entity_Id := Make_Temporary (Loc, 'L');\n+         Stub_Ptr   : constant Entity_Id := Make_Temporary (Loc, 'S');\n          --  Additional local variables for the remote case\n \n-         Local_Stub : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => New_Internal_Name ('L'));\n-\n-         Stub_Ptr : constant Entity_Id :=\n-                      Make_Defining_Identifier (Loc,\n-                        Chars => New_Internal_Name ('S'));\n-\n          function Set_Field\n            (Field_Name : Name_Id;\n             Value      : Node_Id) return Node_Id;\n@@ -6554,12 +6504,8 @@ package body Exp_Dist is\n \n          Func_Spec : Node_Id;\n \n-         Any            : constant Entity_Id :=\n-                            Make_Defining_Identifier (Loc,\n-                              Chars => New_Internal_Name ('A'));\n-         RAS_Parameter  : constant Entity_Id :=\n-                            Make_Defining_Identifier (Loc,\n-                              Chars => New_Internal_Name ('R'));\n+         Any            : constant Entity_Id := Make_Temporary (Loc, 'A');\n+         RAS_Parameter  : constant Entity_Id := Make_Temporary (Loc, 'R');\n          RACW_Parameter : constant Node_Id :=\n                             Make_Selected_Component (Loc,\n                               Prefix        => RAS_Parameter,\n@@ -6675,8 +6621,7 @@ package body Exp_Dist is\n          Loc : constant Source_Ptr := Sloc (Pkg_Spec);\n \n          Pkg_RPC_Receiver            : constant Entity_Id :=\n-                                         Make_Defining_Identifier (Loc,\n-                                           New_Internal_Name ('H'));\n+                                         Make_Temporary (Loc, 'H');\n          Pkg_RPC_Receiver_Object     : Node_Id;\n          Pkg_RPC_Receiver_Body       : Node_Id;\n          Pkg_RPC_Receiver_Decls      : List_Id;\n@@ -6697,13 +6642,9 @@ package body Exp_Dist is\n          --  from the request structure, or the local subprogram address (in\n          --  case of a RAS).\n \n-         Is_Local : constant Entity_Id :=\n-                      Make_Defining_Identifier (Loc,\n-                        Chars => New_Internal_Name ('L'));\n+         Is_Local : constant Entity_Id := Make_Temporary (Loc, 'L');\n \n-         Local_Address : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             Chars => New_Internal_Name ('A'));\n+         Local_Address : constant Entity_Id := Make_Temporary (Loc, 'A');\n          --  Address of a local subprogram designated by a reference\n          --  corresponding to a RAS.\n \n@@ -6714,9 +6655,7 @@ package body Exp_Dist is\n          Current_Stubs             : Node_Id;\n          Current_Subprogram_Number : Int := First_RCI_Subprogram_Id;\n \n-         Subp_Info_Array : constant Entity_Id :=\n-                             Make_Defining_Identifier (Loc,\n-                               Chars => New_Internal_Name ('I'));\n+         Subp_Info_Array : constant Entity_Id := Make_Temporary (Loc, 'I');\n \n          Subp_Info_List : constant List_Id := New_List;\n \n@@ -7073,8 +7012,7 @@ package body Exp_Dist is\n \n          Pkg_RPC_Receiver_Object :=\n            Make_Object_Declaration (Loc,\n-             Defining_Identifier =>\n-               Make_Defining_Identifier (Loc, New_Internal_Name ('R')),\n+             Defining_Identifier => Make_Temporary (Loc, 'R'),\n              Aliased_Present     => True,\n              Object_Definition   => New_Occurrence_Of (RTE (RE_Servant), Loc));\n          Append_To (Decls, Pkg_RPC_Receiver_Object);\n@@ -7163,8 +7101,7 @@ package body Exp_Dist is\n       is\n          Loc : constant Source_Ptr := Sloc (Nod);\n \n-         Request : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+         Request : constant Entity_Id := Make_Temporary (Loc, 'R');\n          --  The request object constructed by these stubs\n          --  Could we use Name_R instead??? (see GLADE client stubs)\n \n@@ -7247,9 +7184,7 @@ package body Exp_Dist is\n              Object_Definition   =>\n                  New_Occurrence_Of (RTE (RE_Request_Access), Loc)));\n \n-         Result :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('R'));\n+         Result := Make_Temporary (Loc, 'R');\n \n          if Is_Function then\n             Result_TC :=\n@@ -7285,8 +7220,7 @@ package body Exp_Dist is\n                      Expression => Make_Integer_Literal (Loc, 0))))));\n \n          if not Is_Known_Asynchronous then\n-            Exception_Return_Parameter :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+            Exception_Return_Parameter := Make_Temporary (Loc, 'E');\n \n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n@@ -7300,8 +7234,7 @@ package body Exp_Dist is\n \n          --  Initialize and fill in arguments list\n \n-         Arguments :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+         Arguments := Make_Temporary (Loc, 'A');\n          Declare_Create_NVList (Loc, Arguments, Decls, Statements);\n \n          Current_Parameter := First (Ordered_Parameters_List);\n@@ -7336,9 +7269,7 @@ package body Exp_Dist is\n                                   Is_Constrained (Etyp)\n                                     or else Is_Elementary_Type (Etyp);\n \n-                  Any : constant Entity_Id :=\n-                          Make_Defining_Identifier (Loc,\n-                            New_Internal_Name ('A'));\n+                  Any : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n                   Actual_Parameter : Node_Id :=\n                                        New_Occurrence_Of (\n@@ -7447,8 +7378,7 @@ package body Exp_Dist is\n \n                declare\n                   Extra_Any_Parameter : constant Entity_Id :=\n-                                          Make_Defining_Identifier\n-                                            (Loc, New_Internal_Name ('P'));\n+                                          Make_Temporary (Loc, 'P');\n \n                   Parameter_Exp : constant Node_Id :=\n                      Make_Attribute_Reference (Loc,\n@@ -7595,9 +7525,8 @@ package body Exp_Dist is\n          Controlling_Parameter : Entity_Id) return RPC_Target\n       is\n          Target_Info : RPC_Target (PCS_Kind => Name_PolyORB_DSA);\n-         Target_Reference : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                New_Internal_Name ('T'));\n+         Target_Reference : constant Entity_Id := Make_Temporary (Loc, 'T');\n+\n       begin\n          if Present (Controlling_Parameter) then\n             Append_To (Decls,\n@@ -7666,8 +7595,7 @@ package body Exp_Dist is\n \n          RPC_Receiver_Decl :=\n            Make_Object_Declaration (Loc,\n-             Defining_Identifier => Make_Defining_Identifier (Loc,\n-                                      New_Internal_Name ('R')),\n+             Defining_Identifier => Make_Temporary (Loc, 'R'),\n              Aliased_Present     => True,\n              Object_Definition   =>\n                New_Occurrence_Of (RTE (RE_Servant), Loc));\n@@ -7747,9 +7675,7 @@ package body Exp_Dist is\n       is\n          Loc : constant Source_Ptr := Sloc (Vis_Decl);\n \n-         Request_Parameter : constant Entity_Id :=\n-                               Make_Defining_Identifier (Loc,\n-                                 New_Internal_Name ('R'));\n+         Request_Parameter : constant Entity_Id := Make_Temporary (Loc, 'R');\n          --  Formal parameter for receiving stubs: a descriptor for an incoming\n          --  request.\n \n@@ -7793,9 +7719,7 @@ package body Exp_Dist is\n                                      Build_Ordered_Parameters_List\n                                        (Specification (Vis_Decl));\n \n-         Arguments : constant Entity_Id :=\n-                       Make_Defining_Identifier (Loc,\n-                         New_Internal_Name ('A'));\n+         Arguments : constant Entity_Id := Make_Temporary (Loc, 'A');\n          --  Name of the named values list used to retrieve parameters\n \n          Subp_Spec : Node_Id;\n@@ -7825,11 +7749,9 @@ package body Exp_Dist is\n             declare\n                Etyp        : Entity_Id;\n                Constrained : Boolean;\n-               Any         : Entity_Id := Empty;\n-               Object      : constant Entity_Id :=\n-                               Make_Defining_Identifier (Loc,\n-                                 Chars => New_Internal_Name ('P'));\n-               Expr        : Node_Id   := Empty;\n+               Any         : Entity_Id          := Empty;\n+               Object      : constant Entity_Id := Make_Temporary (Loc, 'P');\n+               Expr        : Node_Id            := Empty;\n \n                Is_Controlling_Formal : constant Boolean :=\n                                          Is_RACW_Controlling_Formal\n@@ -7865,9 +7787,7 @@ package body Exp_Dist is\n                  Is_Constrained (Etyp) or else Is_Elementary_Type (Etyp);\n \n                if not Is_First_Controlling_Formal then\n-                  Any :=\n-                    Make_Defining_Identifier (Loc,\n-                      Chars => New_Internal_Name ('A'));\n+                  Any := Make_Temporary (Loc, 'A');\n \n                   Append_To (Outer_Decls,\n                     Make_Object_Declaration (Loc,\n@@ -7891,13 +7811,10 @@ package body Exp_Dist is\n \n                if Is_First_Controlling_Formal then\n                   declare\n-                     Addr : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                Chars => New_Internal_Name ('A'));\n+                     Addr : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n                      Is_Local : constant Entity_Id :=\n-                                  Make_Defining_Identifier (Loc,\n-                                    Chars => New_Internal_Name ('L'));\n+                                  Make_Temporary (Loc, 'L');\n \n                   begin\n                      --  Special case: obtain the first controlling formal\n@@ -8067,8 +7984,7 @@ package body Exp_Dist is\n                                              (Current_Parameter));\n \n                      Extra_Any : constant Entity_Id :=\n-                                   Make_Defining_Identifier (Loc,\n-                                     Chars => New_Internal_Name ('A'));\n+                                   Make_Temporary (Loc, 'A');\n \n                      Formal_Entity : constant Entity_Id :=\n                                        Make_Defining_Identifier (Loc,\n@@ -8139,9 +8055,7 @@ package body Exp_Dist is\n             declare\n                Etyp   : constant Entity_Id :=\n                           Etype (Result_Definition (Specification (Vis_Decl)));\n-               Result : constant Node_Id   :=\n-                          Make_Defining_Identifier (Loc,\n-                            Chars => New_Internal_Name ('R'));\n+               Result : constant Node_Id   := Make_Temporary (Loc, 'R');\n \n             begin\n                Inner_Decls := New_List (\n@@ -8209,8 +8123,7 @@ package body Exp_Dist is\n \n          Subp_Spec :=\n            Make_Procedure_Specification (Loc,\n-             Defining_Unit_Name       =>\n-               Make_Defining_Identifier (Loc, New_Internal_Name ('F')),\n+             Defining_Unit_Name       => Make_Temporary (Loc, 'F'),\n \n              Parameter_Specifications => New_List (\n                Make_Parameter_Specification (Loc,\n@@ -8396,9 +8309,7 @@ package body Exp_Dist is\n             N      : Node_Id;\n             Target : Entity_Id)\n          is\n-            Strm : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc,\n-                       Chars => New_Internal_Name ('S'));\n+            Strm : constant Entity_Id := Make_Temporary (Loc, 'S');\n             Expr : Node_Id;\n \n             Read_Call_List : List_Id;\n@@ -8456,9 +8367,7 @@ package body Exp_Dist is\n \n                else\n                   declare\n-                     Temp : constant Entity_Id :=\n-                              Make_Defining_Identifier\n-                                (Loc, New_Internal_Name ('R'));\n+                     Temp : constant Entity_Id := Make_Temporary (Loc, 'R');\n \n                   begin\n                      Read_Call_List := New_List;\n@@ -8659,9 +8568,7 @@ package body Exp_Dist is\n             Decls : constant List_Id := New_List;\n             Stms  : constant List_Id := New_List;\n \n-            Any_Parameter : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                New_Internal_Name ('A'));\n+            Any_Parameter : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n             Use_Opaque_Representation : Boolean;\n \n@@ -8744,9 +8651,7 @@ package body Exp_Dist is\n \n                      --  The returned object\n \n-                     Res : constant Entity_Id :=\n-                             Make_Defining_Identifier (Loc,\n-                               New_Internal_Name ('R'));\n+                     Res : constant Entity_Id := Make_Temporary (Loc, 'R');\n \n                      Res_Definition : Node_Id := New_Occurrence_Of (Typ, Loc);\n \n@@ -8813,8 +8718,7 @@ package body Exp_Dist is\n                               Choice_List : List_Id;\n \n                               Struct_Any : constant Entity_Id :=\n-                                             Make_Defining_Identifier (Loc,\n-                                               New_Internal_Name ('S'));\n+                                             Make_Temporary (Loc, 'S');\n \n                            begin\n                               Append_To (Decls,\n@@ -9641,12 +9545,10 @@ package body Exp_Dist is\n                               Choice_List : List_Id;\n \n                               Union_Any : constant Entity_Id :=\n-                                            Make_Defining_Identifier (Loc,\n-                                              New_Internal_Name ('V'));\n+                                            Make_Temporary (Loc, 'V');\n \n                               Struct_Any : constant Entity_Id :=\n-                                             Make_Defining_Identifier (Loc,\n-                                                New_Internal_Name ('S'));\n+                                             Make_Temporary (Loc, 'S');\n \n                               function Make_Discriminant_Reference\n                                 return Node_Id;\n@@ -9865,8 +9767,7 @@ package body Exp_Dist is\n \n                         declare\n                            Dummy_Any : constant Entity_Id :=\n-                                         Make_Defining_Identifier (Loc,\n-                                           Chars => New_Internal_Name ('A'));\n+                                         Make_Temporary (Loc, 'A');\n \n                         begin\n                            Append_To (Decls,\n@@ -10016,9 +9917,7 @@ package body Exp_Dist is\n \n             if Use_Opaque_Representation then\n                declare\n-                  Strm : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             Chars => New_Internal_Name ('S'));\n+                  Strm : constant Entity_Id := Make_Temporary (Loc, 'S');\n                   --  Stream used to store data representation produced by\n                   --  stream attribute.\n \n@@ -11192,9 +11091,7 @@ package body Exp_Dist is\n       Pkg_Name := String_From_Name_Buffer;\n       Inst :=\n         Make_Package_Instantiation (Loc,\n-          Defining_Unit_Name   =>\n-            Make_Defining_Identifier (Loc,\n-              Chars => New_Internal_Name ('R')),\n+          Defining_Unit_Name   => Make_Temporary (Loc, 'R'),\n \n           Name                 =>\n             New_Occurrence_Of (RTE (RE_RCI_Locator), Loc),"}, {"sha": "953941447b7262b360a0bcdbbf5924932509aa99", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -358,8 +358,8 @@ package body Exp_Imgv is\n          if Discard_Names (First_Subtype (Ptyp))\n            or else No (Lit_Strings (Root_Type (Ptyp)))\n          then\n-            --  When pragma Discard_Names applies to the first subtype,\n-            --  then build (Pref'Pos)'Img.\n+            --  When pragma Discard_Names applies to the first subtype, build\n+            --  (Pref'Pos)'Img.\n \n             Rewrite (N,\n               Make_Attribute_Reference (Loc,\n@@ -380,8 +380,10 @@ package body Exp_Imgv is\n \n             if Ttyp = Standard_Integer_8 then\n                Imid := RE_Image_Enumeration_8;\n-            elsif Ttyp = Standard_Integer_16  then\n+\n+            elsif Ttyp = Standard_Integer_16 then\n                Imid := RE_Image_Enumeration_16;\n+\n             else\n                Imid := RE_Image_Enumeration_32;\n             end if;\n@@ -459,13 +461,13 @@ package body Exp_Imgv is\n       elsif Is_Decimal_Fixed_Point_Type (Rtyp) then\n          Append_To (Arg_List,\n            Make_Attribute_Reference (Loc,\n-             Prefix => New_Reference_To (Ptyp, Loc),\n+             Prefix         => New_Reference_To (Ptyp, Loc),\n              Attribute_Name => Name_Scale));\n \n          Set_Conversion_OK (First (Arg_List));\n          Set_Etype (First (Arg_List), Tent);\n \n-         --  For Wide_Character, append Ada 2005 indication\n+      --  For Wide_Character, append Ada 2005 indication\n \n       elsif Rtyp = Standard_Wide_Character then\n          Append_To (Arg_List,"}, {"sha": "b19dc511ef39b50b1253f702a0442c6920eded70", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2287a75d05dc2c3fecee4a40173d67df5f2b7919/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=2287a75d05dc2c3fecee4a40173d67df5f2b7919", "patch": "@@ -403,7 +403,8 @@ package body Sprint is\n    procedure pg (Arg : Union_Id) is\n    begin\n       Dump_Generated_Only := True;\n-      Dump_Original_Only := False;\n+      Dump_Original_Only  := False;\n+      Dump_Freeze_Null    := True;\n       Current_Source_File := No_Source_File;\n \n       if Arg in List_Range then"}]}