{"sha": "982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgyMDU4Y2JjOWYwMTBkYmVhYzRmMzMyZGIyMmViOWQxYjhiYzlmOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-05-26T21:20:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-05-26T21:20:38Z"}, "message": "re PR c++/53491 (ICE in build_target_expr_with_type, at cp/tree.c:587)\n\n/cp\n2012-05-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53491\n\t* tree.c (stabilize_expr): Handle exp of void type.\n\n/testsuite\n2012-05-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53491\n\t* g++.dg/parse/crash60.C: New.\n\nFrom-SVN: r187917", "tree": {"sha": "2a3c54288704b989872ce1caac33fd1418fc4a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a3c54288704b989872ce1caac33fd1418fc4a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/comments", "author": null, "committer": null, "parents": [{"sha": "1f37c58399cc1cd5047b8464f09b9af750f129af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f37c58399cc1cd5047b8464f09b9af750f129af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f37c58399cc1cd5047b8464f09b9af750f129af"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "7cc173b27f27feebae031e51bf498026f655a882", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "patch": "@@ -1,3 +1,8 @@\n+2012-05-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53491\n+\t* tree.c (stabilize_expr): Handle exp of void type.\n+\n 2012-05-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/53220"}, {"sha": "236180de7fd23fdf36f5cd2d633d8680b9ddf759", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "patch": "@@ -3281,6 +3281,11 @@ stabilize_expr (tree exp, tree* initp)\n \n   if (!TREE_SIDE_EFFECTS (exp))\n     init_expr = NULL_TREE;\n+  else if (VOID_TYPE_P (TREE_TYPE (exp)))\n+    {\n+      *initp = exp;\n+      return void_zero_node;\n+    }\n   /* There are no expressions with REFERENCE_TYPE, but there can be call\n      arguments with such a type; just treat it as a pointer.  */\n   else if (TREE_CODE (TREE_TYPE (exp)) == REFERENCE_TYPE"}, {"sha": "95136c99c0325441ae587f7c943baaa87ea61b7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "patch": "@@ -1,4 +1,9 @@\n-2012-05-22  Jason Merrill  <jason@redhat.com>\n+2012-05-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53491\n+\t* g++.dg/parse/crash60.C: New.\n+\n+2012-05-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/53220\n \t* c-c++-common/array-lit.c: New."}, {"sha": "e515396771ec8071ea7848ed93ef39bc0b525eb2", "filename": "gcc/testsuite/g++.dg/parse/crash60.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/982058cbc9f010dbeac4f332db22eb9d1b8bc9f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash60.C?ref=982058cbc9f010dbeac4f332db22eb9d1b8bc9f8", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/53491\n+\n+struct M\n+{\n+  void pop();\n+};\n+\n+void foo()\n+{\n+  int result = 0;\n+  M m;\n+\n+  result += m.pop();  // { dg-error \"invalid operands|in evaluation\" }\n+}"}]}