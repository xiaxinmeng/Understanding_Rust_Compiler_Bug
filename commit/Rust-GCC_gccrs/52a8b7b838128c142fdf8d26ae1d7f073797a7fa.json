{"sha": "52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhOGI3YjgzODEyOGMxNDJmZGY4ZDI2YWUxZDdmMDczNzk3YTdmYQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-05-19T16:41:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-05-19T16:41:47Z"}, "message": "c-decl.c (finish_decl): When setting the DECL_ASSEMBLER_NAME of a function using ASMSPEC, prepend a star.\n\n\t* c-decl.c (finish_decl): When setting the DECL_ASSEMBLER_NAME\n\tof a function using ASMSPEC, prepend a star.\n\nFrom-SVN: r66965", "tree": {"sha": "219e6459fd9b5f94e6d100d20d4910605ee52a48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/219e6459fd9b5f94e6d100d20d4910605ee52a48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a8b7b838128c142fdf8d26ae1d7f073797a7fa/comments", "author": null, "committer": null, "parents": [{"sha": "68594ce757081d3fc7b7b7eaee1e4651d17d0d86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68594ce757081d3fc7b7b7eaee1e4651d17d0d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68594ce757081d3fc7b7b7eaee1e4651d17d0d86"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "484a2d84bf49ef71d47b4f2003f32b1dbba124a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a8b7b838128c142fdf8d26ae1d7f073797a7fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a8b7b838128c142fdf8d26ae1d7f073797a7fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "patch": "@@ -1,3 +1,8 @@\n+2003-05-19  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* c-decl.c (finish_decl): When setting the DECL_ASSEMBLER_NAME\n+\tof a function using ASMSPEC, prepend a star.\n+\n 2003-05-19  Jason Merrill  <jason@redhat.com>\n \n \t* tree-inline.c (copy_body_r): Avoid generating &* during inline"}, {"sha": "f6e6f5b52a77cb97e724df77d6962c1ca345b0d0", "filename": "gcc/c-decl.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a8b7b838128c142fdf8d26ae1d7f073797a7fa/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a8b7b838128c142fdf8d26ae1d7f073797a7fa/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "patch": "@@ -2874,25 +2874,31 @@ finish_decl (decl, init, asmspec_tree)\n      was a normal built-in.  */\n   if (TREE_CODE (decl) == FUNCTION_DECL && asmspec)\n     {\n+      /* ASMSPEC is given, and not the name of a register.  Mark the\n+      name with a star so assemble_name won't munge it.  */\n+      char *starred = alloca (strlen (asmspec) + 2);\n+      starred[0] = '*';\n+      strcpy (starred + 1, asmspec);\n+\n       if (DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL)\n \t{\n \t  tree builtin = built_in_decls [DECL_FUNCTION_CODE (decl)];\n \t  SET_DECL_RTL (builtin, NULL_RTX);\n-\t  SET_DECL_ASSEMBLER_NAME (builtin, get_identifier (asmspec));\n+\t  SET_DECL_ASSEMBLER_NAME (builtin, get_identifier (starred));\n #ifdef TARGET_MEM_FUNCTIONS\n \t  if (DECL_FUNCTION_CODE (decl) == BUILT_IN_MEMCPY)\n-\t    init_block_move_fn (asmspec);\n+\t    init_block_move_fn (starred);\n \t  else if (DECL_FUNCTION_CODE (decl) == BUILT_IN_MEMSET)\n-\t    init_block_clear_fn (asmspec);\n+\t    init_block_clear_fn (starred);\n #else\n \t  if (DECL_FUNCTION_CODE (decl) == BUILT_IN_BCOPY)\n-\t    init_block_move_fn (asmspec);\n+\t    init_block_move_fn (starred);\n \t  else if (DECL_FUNCTION_CODE (decl) == BUILT_IN_BZERO)\n-\t    init_block_clear_fn (asmspec);\n+\t    init_block_clear_fn (starred);\n #endif\n \t}\n       SET_DECL_RTL (decl, NULL_RTX);\n-      SET_DECL_ASSEMBLER_NAME (decl, get_identifier (asmspec));\n+      SET_DECL_ASSEMBLER_NAME (decl, get_identifier (starred));\n     }\n \n   /* Output the assembler code and/or RTL code for variables and functions,"}]}