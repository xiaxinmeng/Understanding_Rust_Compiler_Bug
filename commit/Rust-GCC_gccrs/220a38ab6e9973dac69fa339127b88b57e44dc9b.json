{"sha": "220a38ab6e9973dac69fa339127b88b57e44dc9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwYTM4YWI2ZTk5NzNkYWM2OWZhMzM5MTI3Yjg4YjU3ZTQ0ZGM5Yg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-01-28T08:17:55Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-01-28T08:17:55Z"}, "message": "encode-2.m (main): New local string.\n\n\t* objc.dg/encode-2.m (main): New local string.  Set depending on\n\tsizeof long.  Use in sscanf call.\n\t* objc.dg/encode-3.m (main): New local string.  Set depending on\n\tsizeof long.  Use in scan_initial call.\n\nFrom-SVN: r76783", "tree": {"sha": "9bbe77e03b3b7400b8839a6b0342e6236041d630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bbe77e03b3b7400b8839a6b0342e6236041d630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220a38ab6e9973dac69fa339127b88b57e44dc9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220a38ab6e9973dac69fa339127b88b57e44dc9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220a38ab6e9973dac69fa339127b88b57e44dc9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220a38ab6e9973dac69fa339127b88b57e44dc9b/comments", "author": null, "committer": null, "parents": [{"sha": "faceece35d90a25ebfb9156d94cc6e8aa60bdb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faceece35d90a25ebfb9156d94cc6e8aa60bdb86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faceece35d90a25ebfb9156d94cc6e8aa60bdb86"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "e22e0e368840684f52393e2f1f81d12751379e94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220a38ab6e9973dac69fa339127b88b57e44dc9b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220a38ab6e9973dac69fa339127b88b57e44dc9b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=220a38ab6e9973dac69fa339127b88b57e44dc9b", "patch": "@@ -1,3 +1,10 @@\n+2004-01-27  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* objc.dg/encode-2.m (main): New local string.  Set depending on\n+\tsizeof long.  Use in sscanf call.\n+\t* objc.dg/encode-3.m (main): New local string.  Set depending on\n+\tsizeof long.  Use in scan_initial call.\n+\n 2004-01-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* objc.dg/call-super-2.m: Make LP64-safe."}, {"sha": "b0899270f7f3a3ac784e262d6d84adc74302864f", "filename": "gcc/testsuite/objc.dg/encode-2.m", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220a38ab6e9973dac69fa339127b88b57e44dc9b/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220a38ab6e9973dac69fa339127b88b57e44dc9b/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-2.m?ref=220a38ab6e9973dac69fa339127b88b57e44dc9b", "patch": "@@ -6,7 +6,7 @@\n     - The k-th parameter (k > 1) has offset equal to the\n       sum of:\n         - the offset of the k-1-st paramter\n-        - the int-promoted size of the k-1-st parameter.\n+        - the (void *)-promoted size of the k-1-st parameter.\n \n    Note that the encoded offsets need not correspond\n    to the actual placement of parameters (relative to 'self')\n@@ -78,6 +78,7 @@ int main(void) {\n   Foo *foo = [[Foo alloc] init];\n   Class fooClass = OBJC_GETCLASS(\"Foo\");\n   METHOD meth;\n+  const char *string;\n \n   meth = CLASS_GETINSTANCEMETHOD(fooClass, @selector(setRect:withInt:));\n   offs2 = 9999;\n@@ -88,8 +89,12 @@ int main(void) {\n \n   meth = CLASS_GETINSTANCEMETHOD(fooClass, @selector(char:float:double:long:));\n   offs2 = 9999;\n-  sscanf(meth->method_types, \"v%u@%u:%uc%uf%ud%ul%u\", &offs1, &offs2, &offs3,  \n-      &offs4, &offs5, &offs6, &offs7);\n+  if (sizeof (long) == 8)\n+    string = \"v%u@%u:%uc%uf%ud%uq%u\";\n+  else\n+    string = \"v%u@%u:%uc%uf%ud%ul%u\";\n+  sscanf(meth->method_types, string, &offs1, &offs2, &offs3,  \n+\t &offs4, &offs5, &offs6, &offs7);\n   CHECK_IF(!offs2);\n   [foo char:'c' float:2.3 double:3.5 long:2345L];\n "}, {"sha": "d32ab729ba154032a9fe1b8b4cff23de5e94a90f", "filename": "gcc/testsuite/objc.dg/encode-3.m", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220a38ab6e9973dac69fa339127b88b57e44dc9b/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220a38ab6e9973dac69fa339127b88b57e44dc9b/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-3.m?ref=220a38ab6e9973dac69fa339127b88b57e44dc9b", "patch": "@@ -46,8 +46,14 @@ static void scan_initial(const char *pattern) {\n }\n \n int main(void) {\n+  const char *string;\n+\n   meth = [proto descriptionForInstanceMethod: @selector(char:float:double:unsigned:short:long:)];\n-  scan_initial(\"v%u@%u:%uc%uf%ud%uI%us%ul%u\");\n+  if (sizeof (long) == 8)\n+    string = \"v%u@%u:%uc%uf%ud%uI%us%uq%u\";\n+  else\n+    string = \"v%u@%u:%uc%uf%ud%uI%us%ul%u\";\n+  scan_initial(string);\n   CHECK_IF(offs3 == offs2 + sizeof(int) && offs4 == offs3 + sizeof(float));\n   CHECK_IF(offs5 == offs4 + sizeof(double) && offs6 == offs5 + sizeof(unsigned));\n   CHECK_IF(offs7 == offs6 + sizeof(int) && totsize == offs7 + sizeof(long));"}]}