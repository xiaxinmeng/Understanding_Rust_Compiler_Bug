{"sha": "236f10422f47f0c98e42db420b98ab84e0ac548f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2ZjEwNDIyZjQ3ZjBjOThlNDJkYjQyMGI5OGFiODRlMGFjNTQ4Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-05T14:33:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-05T14:33:42Z"}, "message": "[multiple changes]\n\n2012-10-05  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch7.adb: Minor reformatting.\n\n2012-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Persistent_BSS): check for\n\ta duplicate pragma before Rep_Item_Too_Late to prevent spurious\n\tmessages about duplicate pragmas.\n\n2012-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_util.adb (Find_Init_Call): If the successor of the\n\tobject declaration is a block, check whether it contains the\n\tinitialization call, because it may have been created by actuals\n\tthat use the secondary stack.\n\nFrom-SVN: r192130", "tree": {"sha": "63d33d37f9d31cee9648383a7f181f1d6bffa4ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63d33d37f9d31cee9648383a7f181f1d6bffa4ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/236f10422f47f0c98e42db420b98ab84e0ac548f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236f10422f47f0c98e42db420b98ab84e0ac548f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/236f10422f47f0c98e42db420b98ab84e0ac548f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236f10422f47f0c98e42db420b98ab84e0ac548f/comments", "author": null, "committer": null, "parents": [{"sha": "95081e99e234224e4bff070f2b0c332097f0901e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95081e99e234224e4bff070f2b0c332097f0901e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95081e99e234224e4bff070f2b0c332097f0901e"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "1a9ff91cf3f6c525e83314566da4d85b7be221b0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=236f10422f47f0c98e42db420b98ab84e0ac548f", "patch": "@@ -1,3 +1,20 @@\n+2012-10-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch7.adb: Minor reformatting.\n+\n+2012-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Persistent_BSS): check for\n+\ta duplicate pragma before Rep_Item_Too_Late to prevent spurious\n+\tmessages about duplicate pragmas.\n+\n+2012-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_util.adb (Find_Init_Call): If the successor of the\n+\tobject declaration is a block, check whether it contains the\n+\tinitialization call, because it may have been created by actuals\n+\tthat use the secondary stack.\n+\n 2012-10-05  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_dim.adb, errout.adb, errout.ads (Analyze_Dimension_Call): Add"}, {"sha": "cc3213d03da6b0f862598daa72a5cb8bffb3cb47", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=236f10422f47f0c98e42db420b98ab84e0ac548f", "patch": "@@ -2166,6 +2166,7 @@ package body Exp_Util is\n      (Var        : Entity_Id;\n       Rep_Clause : Node_Id) return Node_Id\n    is\n+      Par : constant Node_Id   := Parent (Var);\n       Typ : constant Entity_Id := Etype (Var);\n \n       Init_Proc : Entity_Id;\n@@ -2204,6 +2205,7 @@ package body Exp_Util is\n \n    begin\n       if not Has_Non_Null_Base_Init_Proc (Typ) then\n+\n          --  No init proc for the type, so obviously no call to be found\n \n          return Empty;\n@@ -2213,7 +2215,7 @@ package body Exp_Util is\n \n       --  First scan the list containing the declaration of Var\n \n-      Init_Call := Find_Init_Call_In_List (From => Next (Parent (Var)));\n+      Init_Call := Find_Init_Call_In_List (From => Next (Par));\n \n       --  If not found, also look on Var's freeze actions list, if any, since\n       --  the init call may have been moved there (case of an address clause\n@@ -2224,6 +2226,23 @@ package body Exp_Util is\n            Find_Init_Call_In_List (First (Actions (Freeze_Node (Var))));\n       end if;\n \n+      --  If the initialization call has actuals that use the secondary stack,\n+      --  the call may have been wrapped into a temporary block, in which case\n+      --  the block itself has to be removed.\n+\n+      if No (Init_Call) and then Nkind (Next (Par)) = N_Block_Statement then\n+         declare\n+            Blk : constant Node_Id := Next (Par);\n+         begin\n+            if Present\n+                 (Find_Init_Call_In_List\n+                   (First (Statements (Handled_Statement_Sequence (Blk)))))\n+            then\n+               Init_Call := Blk;\n+            end if;\n+         end;\n+      end if;\n+\n       return Init_Call;\n    end Find_Init_Call;\n "}, {"sha": "a25e32833386b9c3e5f373aa77271d8545f38c40", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=236f10422f47f0c98e42db420b98ab84e0ac548f", "patch": "@@ -1390,11 +1390,13 @@ package body Sem_Ch7 is\n          then\n             declare\n                ASN : Node_Id;\n+\n             begin\n                ASN := First (Aspect_Specifications (Parent (E)));\n                while Present (ASN) loop\n                   if Chars (Identifier (ASN)) = Name_Invariant\n-                    or else Chars (Identifier (ASN)) = Name_Type_Invariant\n+                       or else\n+                     Chars (Identifier (ASN)) = Name_Type_Invariant\n                   then\n                      Build_Invariant_Procedure (E, N);\n                      exit;"}, {"sha": "2c9d518f67058db1c3179e79f3840fe9d28e4603", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236f10422f47f0c98e42db420b98ab84e0ac548f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=236f10422f47f0c98e42db420b98ab84e0ac548f", "patch": "@@ -12130,6 +12130,11 @@ package body Sem_Prag is\n                Ent := Entity (Get_Pragma_Arg (Arg1));\n                Decl := Parent (Ent);\n \n+               --  Check for duplication before inserting in list of\n+               --  representation items.\n+\n+               Check_Duplicate_Pragma (Ent);\n+\n                if Rep_Item_Too_Late (Ent, N) then\n                   return;\n                end if;\n@@ -12145,8 +12150,6 @@ package body Sem_Prag is\n                      Arg1);\n                end if;\n \n-               Check_Duplicate_Pragma (Ent);\n-\n                Prag :=\n                  Make_Linker_Section_Pragma\n                    (Ent, Sloc (N), \".persistent.bss\");"}]}