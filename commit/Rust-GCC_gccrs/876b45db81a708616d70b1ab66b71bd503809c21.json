{"sha": "876b45db81a708616d70b1ab66b71bd503809c21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2YjQ1ZGI4MWE3MDg2MTZkNzBiMWFiNjZiNzFiZDUwMzgwOWMyMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-11-12T01:18:06Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-11-12T16:24:23Z"}, "message": "system: Add WARN_UNUSED_RESULT\n\nI'd like to have the option of marking functions with\n__attribute__ ((__warn_unused_result__)), so this patch adds a macro.\nAnd use it for maybe_wrap_with_location, it's always a bug if the\nreturn value is not used, which happened to me and got me confused.\n\ngcc/ChangeLog:\n\n\t* system.h (WARN_UNUSED_RESULT): Define for GCC >= 3.4.\n\t* tree.h (maybe_wrap_with_location): Add WARN_UNUSED_RESULT.", "tree": {"sha": "84d073e63e0670d77b3e5b172b1cfd2502070b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d073e63e0670d77b3e5b172b1cfd2502070b95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/876b45db81a708616d70b1ab66b71bd503809c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876b45db81a708616d70b1ab66b71bd503809c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876b45db81a708616d70b1ab66b71bd503809c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876b45db81a708616d70b1ab66b71bd503809c21/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f575d7593b7a859326d6db477d93946fdbbbfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f575d7593b7a859326d6db477d93946fdbbbfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8f575d7593b7a859326d6db477d93946fdbbbfc"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6f6ab616a61d0096fca5de1923cd5cb27e72e9bd", "filename": "gcc/system.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876b45db81a708616d70b1ab66b71bd503809c21/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876b45db81a708616d70b1ab66b71bd503809c21/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=876b45db81a708616d70b1ab66b71bd503809c21", "patch": "@@ -789,6 +789,12 @@ extern void fancy_abort (const char *, int, const char *)\n #define ALWAYS_INLINE inline\n #endif\n \n+#if GCC_VERSION >= 3004\n+#define WARN_UNUSED_RESULT __attribute__ ((__warn_unused_result__))\n+#else\n+#define WARN_UNUSED_RESULT\n+#endif\n+\n /* Use gcc_unreachable() to mark unreachable locations (like an\n    unreachable default case of a switch.  Do not use gcc_assert(0).  */\n #if (GCC_VERSION >= 4005) && !ENABLE_ASSERT_CHECKING"}, {"sha": "9a713cdb0c725d764dc3eb9344bd6b2f4cb7364c", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876b45db81a708616d70b1ab66b71bd503809c21/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876b45db81a708616d70b1ab66b71bd503809c21/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=876b45db81a708616d70b1ab66b71bd503809c21", "patch": "@@ -1214,7 +1214,7 @@ get_expr_source_range (tree expr)\n extern void protected_set_expr_location (tree, location_t);\n extern void protected_set_expr_location_if_unset (tree, location_t);\n \n-extern tree maybe_wrap_with_location (tree, location_t);\n+WARN_UNUSED_RESULT extern tree maybe_wrap_with_location (tree, location_t);\n \n extern int suppress_location_wrappers;\n "}]}