{"sha": "1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM5ODMwMWYyYjhiNWYxYmQ3YTQxMWIxYmJiNjZjYzU2OTQ2ODhiZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-06T20:40:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-06T20:40:32Z"}, "message": "compiler: emit underlying constant in array_type length export\n    \n    In Array_type::do_export, when emitting a concrete array length,\n    evaluate the length expression to an integer constant and emit that\n    constant, instead of calling the more general method for emitting\n    expressions. This is to avoid the possibility that we will need\n    to emit a conversion, which could confuse the gccgoimporter.\n    \n    Fixes golang/go#30628.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/165741\n\nFrom-SVN: r269443", "tree": {"sha": "1881b8081cd0813196d30ec6ed6b1ec429981903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1881b8081cd0813196d30ec6ed6b1ec429981903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf/comments", "author": null, "committer": null, "parents": [{"sha": "2de5d0ea90d2e64ff3d345b17228043e08a5d1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de5d0ea90d2e64ff3d345b17228043e08a5d1ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2de5d0ea90d2e64ff3d345b17228043e08a5d1ac"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "f1bbc376d8a492d5658eecb31760059eba1efd86", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf", "patch": "@@ -1,4 +1,4 @@\n-13c98c3477647888fc7a186e9055793b0961e806\n+959260238817af3205fb9907dd92319291e6a893\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "2d34a289b2d722cadff2bda992ae68d7884c2715", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=1c98301f2b8b5f1bd7a411b1bbb66cc5694688bf", "patch": "@@ -7581,10 +7581,17 @@ Array_type::do_export(Export* exp) const\n   exp->write_c_string(\"[\");\n   if (this->length_ != NULL)\n     {\n-      Export_function_body efb(exp, 0);\n-      efb.set_type_context(this->length_->type());\n-      this->length_->export_expression(&efb);\n-      exp->write_string(efb.body());\n+      Numeric_constant nc;\n+      mpz_t val;\n+      if (!this->length_->numeric_constant_value(&nc) || !nc.to_int(&val))\n+        {\n+\t  go_assert(saw_errors());\n+          return;\n+        }\n+      char* s = mpz_get_str(NULL, 10, val);\n+      exp->write_string(s);\n+      exp->write_string(\" \");\n+      mpz_clear(val);\n     }\n   exp->write_c_string(\"] \");\n   exp->write_type(this->element_type_);"}]}