{"sha": "6f855258dd432729f016b3ff466fafaac233f034", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4NTUyNThkZDQzMjcyOWYwMTZiM2ZmNDY2ZmFmYWFjMjMzZjAzNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-12-13T23:11:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-13T23:11:53Z"}, "message": "gospec.c (lang_specific_driver): Add a -o option if not linking and there is no -o option already.\n\n\t* gospec.c (lang_specific_driver): Add a -o option if not linking\n\tand there is no -o option already.\n\nFrom-SVN: r167773", "tree": {"sha": "abbe4104d390ececa2cae7c8a7ae58dd835797c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abbe4104d390ececa2cae7c8a7ae58dd835797c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f855258dd432729f016b3ff466fafaac233f034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f855258dd432729f016b3ff466fafaac233f034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f855258dd432729f016b3ff466fafaac233f034", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f855258dd432729f016b3ff466fafaac233f034/comments", "author": null, "committer": null, "parents": [{"sha": "3b58a10d5b1d8f667a67f7d925f1c10ba1e595b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b58a10d5b1d8f667a67f7d925f1c10ba1e595b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b58a10d5b1d8f667a67f7d925f1c10ba1e595b1"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "c98bb279db574d71b2950e5a3bb0d6875cda0744", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855258dd432729f016b3ff466fafaac233f034/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855258dd432729f016b3ff466fafaac233f034/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=6f855258dd432729f016b3ff466fafaac233f034", "patch": "@@ -1,3 +1,8 @@\n+2010-12-13  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gospec.c (lang_specific_driver): Add a -o option if not linking\n+\tand there is no -o option already.\n+\n 2010-12-07  Ian Lance Taylor  <iant@google.com>\n \n \tPR tree-optimization/46805"}, {"sha": "7d21ace46be3ca7b95199cfdf598aec69ef91e99", "filename": "gcc/go/gospec.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855258dd432729f016b3ff466fafaac233f034/gcc%2Fgo%2Fgospec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855258dd432729f016b3ff466fafaac233f034/gcc%2Fgo%2Fgospec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgospec.c?ref=6f855258dd432729f016b3ff466fafaac233f034", "patch": "@@ -106,6 +106,12 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n   /* The total number of arguments with the new stuff.  */\n   int num_args = 1;\n \n+  /* Whether the -o option was used.  */\n+  bool saw_opt_o = false;\n+\n+  /* The first input file with an extension of .go.  */\n+  const char *first_go_file = NULL;  \n+\n   argc = *in_decoded_options_count;\n   decoded_options = *in_decoded_options;\n   added_libraries = *in_added_libraries;\n@@ -167,6 +173,10 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \t  library = -1;\n \t  break;\n \n+\tcase OPT_o:\n+\t  saw_opt_o = true;\n+\t  break;\n+\n \tcase OPT_static:\n \t  static_link = 1;\n \t  break;\n@@ -183,6 +193,16 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \tcase OPT_SPECIAL_input_file:\n \t  if (library == 0)\n \t    library = 1;\n+\n+\t  if (first_go_file == NULL)\n+\t    {\n+\t      int len;\n+\n+\t      len = strlen (arg);\n+\t      if (len > 3 && strcmp (arg + len - 3, \".go\") == 0)\n+\t\tfirst_go_file = arg;\n+\t    }\n+\n \t  break;\n \t}\n     }\n@@ -245,6 +265,31 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n       j++;\n     }\n \n+  /* If we are not linking, add a -o option.  This is because we need\n+     the driver to pass all .go files to go1.  Without a -o option the\n+     driver will invoke go1 separately for each input file.  */\n+  if (library < 0 && first_go_file != NULL && !saw_opt_o)\n+    {\n+      const char *base;\n+      int baselen;\n+      int alen;\n+      char *out;\n+\n+      base = lbasename (first_go_file);\n+      baselen = strlen (base) - 3;\n+      alen = baselen + 3;\n+      out = XNEWVEC (char, alen);\n+      memcpy (out, base, baselen);\n+      /* The driver will convert .o to some other suffix if\n+\t appropriate.  */\n+      out[baselen] = '.';\n+      out[baselen + 1] = 'o';\n+      out[baselen + 2] = '\\0';\n+      generate_option (OPT_o, out, 1, CL_DRIVER,\n+\t\t       &new_decoded_options[j]);\n+      j++;\n+    }\n+\n   /* Add `-lgo' if we haven't already done so.  */\n   if (library > 0)\n     {"}]}