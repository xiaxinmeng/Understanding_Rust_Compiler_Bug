{"sha": "e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA5ZGViMTQwMWQ0MTFiZWViZTFmNTZjODQzNWJiOWFmOGUxZjRjYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-02-17T14:00:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-02-17T14:00:48Z"}, "message": "re PR tree-optimization/35231 (VRP miscompiles libX11)\n\n2008-02-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/35231\n\t* tree-vrp.c (register_edge_assert_for): Do not assume A == 0\n\tif A | B != 1.\n\n\t* gcc.c-torture/execute/pr35231.c: New testcase.\n\nFrom-SVN: r132378", "tree": {"sha": "b460ac23b8786521d83cd102316a7ba02bde87cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b460ac23b8786521d83cd102316a7ba02bde87cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6528d32a44a94c5df64cd283428f7121dc66fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6528d32a44a94c5df64cd283428f7121dc66fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6528d32a44a94c5df64cd283428f7121dc66fd7"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "946eb6a700306695b03b567c3b2b2574ec669883", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "patch": "@@ -1,3 +1,9 @@\n+2008-02-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35231\n+\t* tree-vrp.c (register_edge_assert_for): Do not assume A == 0\n+\tif A | B != 1.\n+\n 2008-02-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tRevert:"}, {"sha": "c167949098c6f212c203fb3758f8ae90e0c5e996", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "patch": "@@ -1,3 +1,8 @@\n+2008-02-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35231\n+\t* gcc.c-torture/execute/pr35231.c: New testcase.\n+\n 2008-02-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pr32268.c (test_lt): Add noinline attribute."}, {"sha": "e0327eb5f8a549fb857ff179ff7f98d6dd7a706d", "filename": "gcc/testsuite/gcc.c-torture/execute/pr35231.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35231.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35231.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr35231.c?ref=e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "patch": "@@ -0,0 +1,16 @@\n+extern void abort(void);\n+\n+int __attribute__((noinline))\n+foo(int bits_per_pixel, int depth)\n+{\n+  if ((bits_per_pixel | depth) == 1)\n+    abort ();\n+  return bits_per_pixel;\n+}\n+\n+int main()\n+{\n+  if (foo(2, 0) != 2)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f9615d1f815e01ae4e45fe32368e358564cb2b62", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09deb1401d411beebe1f56c8435bb9af8e1f4cc/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=e09deb1401d411beebe1f56c8435bb9af8e1f4cc", "patch": "@@ -3753,7 +3753,11 @@ register_edge_assert_for (tree name, edge e, block_stmt_iterator si, tree cond)\n \n       if (TREE_CODE (def_stmt) == GIMPLE_MODIFY_STMT\n \t  && (TREE_CODE (GIMPLE_STMT_OPERAND (def_stmt, 1)) == TRUTH_OR_EXPR\n-\t      || TREE_CODE (GIMPLE_STMT_OPERAND (def_stmt, 1)) == BIT_IOR_EXPR))\n+\t      /* For BIT_IOR_EXPR only if NAME == 0 both operands have\n+\t\t necessarily zero value.  */\n+\t      || (comp_code == EQ_EXPR\n+\t\t  && (TREE_CODE (GIMPLE_STMT_OPERAND (def_stmt, 1))\n+\t\t        == BIT_IOR_EXPR))))\n \t{\n \t  tree op0 = TREE_OPERAND (GIMPLE_STMT_OPERAND (def_stmt, 1), 0);\n \t  tree op1 = TREE_OPERAND (GIMPLE_STMT_OPERAND (def_stmt, 1), 1);"}]}