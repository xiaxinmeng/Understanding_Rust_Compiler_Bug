{"sha": "f63426afd8ce57a1148d5c6cfbe369be2a870e8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzNDI2YWZkOGNlNTdhMTE0OGQ1YzZjZmJlMzY5YmUyYTg3MGU4Yg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2009-04-24T11:01:57Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2009-04-24T11:01:57Z"}, "message": "loop-iv.c (replace_single_def_regs): Look for REG_EQUAL notes...\n\n\t* loop-iv.c (replace_single_def_regs): Look for REG_EQUAL notes;\n\tfollow chains of regs with a single definition, and allow expressions\n\tthat are function_invariant_p.\n\nFrom-SVN: r146700", "tree": {"sha": "4f3b7b217523d86916ed1b5a3f7c8d8d85ccf9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f3b7b217523d86916ed1b5a3f7c8d8d85ccf9e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63426afd8ce57a1148d5c6cfbe369be2a870e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63426afd8ce57a1148d5c6cfbe369be2a870e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63426afd8ce57a1148d5c6cfbe369be2a870e8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63426afd8ce57a1148d5c6cfbe369be2a870e8b/comments", "author": null, "committer": null, "parents": [{"sha": "8b9890fa4111e4892cac22bc6d694c56f45316cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9890fa4111e4892cac22bc6d694c56f45316cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9890fa4111e4892cac22bc6d694c56f45316cd"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "2ac01312b51458c48dc5a1246508841fac361a9b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63426afd8ce57a1148d5c6cfbe369be2a870e8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63426afd8ce57a1148d5c6cfbe369be2a870e8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f63426afd8ce57a1148d5c6cfbe369be2a870e8b", "patch": "@@ -1,3 +1,9 @@\n+2009-04-24  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* loop-iv.c (replace_single_def_regs): Look for REG_EQUAL notes;\n+\tfollow chains of regs with a single definition, and allow expressions\n+\tthat are function_invariant_p.\n+\n 2009-04-24  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR middle-end/39867"}, {"sha": "23ece7eea8cb83819ba8421294de6c522adea15b", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63426afd8ce57a1148d5c6cfbe369be2a870e8b/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63426afd8ce57a1148d5c6cfbe369be2a870e8b/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=f63426afd8ce57a1148d5c6cfbe369be2a870e8b", "patch": "@@ -1376,23 +1376,46 @@ replace_single_def_regs (rtx *reg, void *expr1)\n {\n   unsigned regno;\n   df_ref adef;\n-  rtx set;\n+  rtx set, src;\n   rtx *expr = (rtx *)expr1;\n \n   if (!REG_P (*reg))\n     return 0;\n \n   regno = REGNO (*reg);\n-  adef = DF_REG_DEF_CHAIN (regno);\n-  if (adef == NULL || DF_REF_NEXT_REG (adef) != NULL\n-      || DF_REF_IS_ARTIFICIAL (adef))\n-    return -1;\n+  for (;;)\n+    {\n+      rtx note;\n+      adef = DF_REG_DEF_CHAIN (regno);\n+      if (adef == NULL || DF_REF_NEXT_REG (adef) != NULL\n+\t    || DF_REF_IS_ARTIFICIAL (adef))\n+\treturn -1;\n+\n+      set = single_set (DF_REF_INSN (adef));\n+      if (set == NULL || !REG_P (SET_DEST (set))\n+\t  || REGNO (SET_DEST (set)) != regno)\n+\treturn -1;\n \n-  set = single_set (DF_REF_INSN (adef));\n-  if (set == NULL || SET_DEST (set) != *reg || !CONSTANT_P (SET_SRC (set)))\n+      note = find_reg_equal_equiv_note (DF_REF_INSN (adef));\n+\n+      if (note && function_invariant_p (XEXP (note, 0)))\n+\t{\n+\t  src = XEXP (note, 0);\n+\t  break;\n+\t}\n+      src = SET_SRC (set);\n+\n+      if (REG_P (src))\n+\t{\n+\t  regno = REGNO (src);\n+\t  continue;\n+\t}\n+      break;\n+    }\n+  if (!function_invariant_p (src))\n     return -1;\n \n-  *expr = simplify_replace_rtx (*expr, *reg, SET_SRC (set));\n+  *expr = simplify_replace_rtx (*expr, *reg, src);\n   return 1;\n }\n "}]}