{"sha": "79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljNGQ3M2JkZDQwNGNiMjRkZWUzM2MzNDU5MWVmN2VjOGYzZGZhMg==", "commit": {"author": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2017-03-27T17:04:07Z"}, "committer": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2017-03-27T17:04:07Z"}, "message": "re PR target/80103 (ICE in output_1144, at config/rs6000/vsx.md:2298)\n\ngcc/testsuite/ChangeLog:\n\n2017-03-27  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR target/80103\n\t* gcc.target/powerpc/pr80103-1.c: New test.\n\ngcc/ChangeLog:\n\n2017-03-27  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR target/80103\n\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Edit and\n\tadd comments.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add\n\tspecial handling for target option conflicts between dform\n\toptions (-mpower9-dform, -mpower9-dform-vector,\n\t-mpower9-dform-scalar) and -mno-direct-move.\n\nFrom-SVN: r246505", "tree": {"sha": "7d84265ab3a3a50f204ea271b8fd460a350a09b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d84265ab3a3a50f204ea271b8fd460a350a09b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/comments", "author": null, "committer": null, "parents": [{"sha": "7a312bbd41e190379d80b47e308a32c8bc4575c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a312bbd41e190379d80b47e308a32c8bc4575c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a312bbd41e190379d80b47e308a32c8bc4575c3"}], "stats": {"total": 96, "additions": 90, "deletions": 6}, "files": [{"sha": "ee07f7ba486babe6dc3648bb3b208d1edd27eb7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "patch": "@@ -1,3 +1,13 @@\n+2017-03-27  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR target/80103\n+\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Edit and\n+\tadd comments.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add\n+\tspecial handling for target option conflicts between dform\n+\toptions (-mpower9-dform, -mpower9-dform-vector,\n+\t-mpower9-dform-scalar) and -mno-direct-move.\n+\n 2017-03-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80181"}, {"sha": "d8e0a4e1310adee46fff10827e1a54a8c20e34a1", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "patch": "@@ -429,6 +429,12 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,\n   if ((flags & OPTION_MASK_POPCNTD) != 0)\n     rs6000_define_or_undefine_macro (define_p, \"_ARCH_PWR7\");\n   /* Note that the OPTION_MASK_DIRECT_MOVE flag is automatically\n+     turned on in the following condition:\n+     1. TARGET_P9_DFORM_SCALAR or TARGET_P9_DFORM_VECTOR are enabled\n+        and OPTION_MASK_DIRECT_MOVE is not explicitly disabled.\n+        Hereafter, the OPTION_MASK_DIRECT_MOVE flag is considered to\n+        have been turned on explicitly.\n+     Note that the OPTION_MASK_DIRECT_MOVE flag is automatically\n      turned off in any of the following conditions:\n      1. TARGET_HARD_FLOAT, TARGET_ALTIVEC, or TARGET_VSX is explicitly\n \tdisabled and OPTION_MASK_DIRECT_MOVE was not explicitly\n@@ -473,7 +479,12 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,\n       if (!flag_iso)\n \trs6000_define_or_undefine_macro (define_p, \"__APPLE_ALTIVEC__\");\n     }\n-  /* Note that the OPTION_MASK_VSX flag is automatically turned off in\n+  /* Note that the OPTION_MASK_VSX flag is automatically turned on in\n+     the following conditions:\n+     1. TARGET_P8_VECTOR is explicitly turned on and the OPTION_MASK_VSX\n+        was not explicitly turned off.  Hereafter, the OPTION_MASK_VSX\n+        flag is considered to have been explicitly turned on.\n+     Note that the OPTION_MASK_VSX flag is automatically turned off in\n      the following conditions:\n      1. The operating system does not support saving of AltiVec\n \tregisters (OS_MISSING_ALTIVEC).\n@@ -507,22 +518,37 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,\n       rs6000_define_or_undefine_macro (define_p, \"__TM_FENCE__\");\n     }\n   /* Note that the OPTION_MASK_P8_VECTOR flag is automatically turned\n+     on in the following conditions:\n+     1. TARGET_P9_VECTOR is explicitly turned on and\n+        OPTION_MASK_P8_VECTOR is not explicitly turned off.\n+        Hereafter, the OPTION_MASK_P8_VECTOR flag is considered to\n+        have been turned off explicitly.\n+     Note that the OPTION_MASK_P8_VECTOR flag is automatically turned\n      off in the following conditions:\n      1. If any of TARGET_HARD_FLOAT, TARGET_ALTIVEC, or TARGET_VSX\n \twere turned off explicitly and OPTION_MASK_P8_VECTOR flag was\n \tnot turned on explicitly.\n      2. If TARGET_ALTIVEC is turned off.  Hereafter, the\n \tOPTION_MASK_P8_VECTOR flag is considered to have been turned off\n \texplicitly.\n-     3. If TARGET_VSX is turned off.  Hereafter, the OPTION_MASK_P8_VECTOR\n-\tflag is considered to have been turned off explicitly.  */\n+     3. If TARGET_VSX is turned off and OPTION_MASK_P8_VECTOR was not\n+        explicitly enabled.  If TARGET_VSX is explicitly enabled, the\n+        OPTION_MASK_P8_VECTOR flag is hereafter also considered to\n+\thave been turned off explicitly.  */\n   if ((flags & OPTION_MASK_P8_VECTOR) != 0)\n     rs6000_define_or_undefine_macro (define_p, \"__POWER8_VECTOR__\");\n   /* Note that the OPTION_MASK_P9_VECTOR flag is automatically turned\n      off in the following conditions:\n-     1. If TARGET_P8_VECTOR is turned off. Hereafter, the\n-\tOPTION_MASK_P9_VECTOR flag is considered to have been turned off\n-\texplicitly.  */\n+     1. If TARGET_P8_VECTOR is turned off and OPTION_MASK_P9_VECTOR is\n+        not turned on explicitly. Hereafter, if OPTION_MASK_P8_VECTOR\n+        was turned on explicitly, the OPTION_MASK_P9_VECTOR flag is\n+        also considered to have been turned off explicitly.\n+     Note that the OPTION_MASK_P9_VECTOR is automatically turned on\n+     in the following conditions:\n+     1. If TARGET_P9_DFORM_SCALAR or TARGET_P9_DFORM_VECTOR and\n+        OPTION_MASK_P9_VECTOR was not turned off explicitly.\n+        Hereafter, THE OPTION_MASK_P9_VECTOR flag is considered to\n+        have been turned on explicitly.  */\n   if ((flags & OPTION_MASK_P9_VECTOR) != 0)\n     rs6000_define_or_undefine_macro (define_p, \"__POWER9_VECTOR__\");\n   /* Note that the OPTION_MASK_QUAD_MEMORY flag is automatically"}, {"sha": "c63eebfdb3a9c8acc6647701977fe1218ffe26bc", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "patch": "@@ -4595,6 +4595,33 @@ rs6000_option_override_internal (bool global_init_p)\n \t}\n     }\n \n+  if ((TARGET_P9_DFORM_SCALAR || TARGET_P9_DFORM_VECTOR)\n+      && !TARGET_DIRECT_MOVE)\n+    {\n+      /* We prefer to not mention undocumented options in\n+\t error messages.  However, if users have managed to select\n+\t power9-dform without selecting direct-move, they\n+\t already know about undocumented flags.  */\n+      if ((rs6000_isa_flags_explicit & OPTION_MASK_DIRECT_MOVE)\n+\t  && ((rs6000_isa_flags_explicit & OPTION_MASK_P9_DFORM_VECTOR) ||\n+\t      (rs6000_isa_flags_explicit & OPTION_MASK_P9_DFORM_SCALAR) ||\n+\t      (TARGET_P9_DFORM_BOTH == 1)))\n+\terror (\"-mpower9-dform, -mpower9-dform-vector, -mpower9-dform-scalar\"\n+\t       \" require -mdirect-move\");\n+      else if ((rs6000_isa_flags_explicit & OPTION_MASK_DIRECT_MOVE) == 0)\n+\t{\n+\t  rs6000_isa_flags |= OPTION_MASK_DIRECT_MOVE;\n+\t  rs6000_isa_flags_explicit |= OPTION_MASK_DIRECT_MOVE;\n+\t}\n+      else\n+\t{\n+\t  rs6000_isa_flags &=\n+\t    ~(OPTION_MASK_P9_DFORM_SCALAR | OPTION_MASK_P9_DFORM_VECTOR);\n+\t  rs6000_isa_flags_explicit |=\n+\t    (OPTION_MASK_P9_DFORM_SCALAR | OPTION_MASK_P9_DFORM_VECTOR);\n+\t}\n+    }\n+\n   if (TARGET_P9_DFORM_SCALAR && !TARGET_UPPER_REGS_DF)\n     {\n       /* We prefer to not mention undocumented options in"}, {"sha": "a6b7a7de560bede9f226c5e49799ba114d106f94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "patch": "@@ -1,3 +1,8 @@\n+2017-03-27  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR target/80103\n+\t* gcc.target/powerpc/pr80103-1.c: New test.\n+\n 2017-03-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80181"}, {"sha": "35d48c4d8cecafd71acae6fd98a25d4ce57de50d", "filename": "gcc/testsuite/gcc.target/powerpc/pr80103-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80103-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80103-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80103-1.c?ref=79c4d73bdd404cb24dee33c34591ef7ec8f3dfa2", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mpower9-dform-vector -mno-direct-move\" } */\n+/* { dg-excess-errors \"expect error due to conflicting target options\" } */\n+/* Since the error message is not associated with a particular line\n+   number, we cannot use the dg-error directive and cannot specify a\n+   regexp to describe the expected error message.  The expected error\n+   message is: \"-mpower9-dform, -mpower9-dform-vector,\n+                -mpower9-dform-scalar require -mdirect-move\" */\n+\n+int a;\n+void b (__attribute__ ((__vector_size__ (16))) char c)\n+{\n+  a = ((__attributes__ ((__vector_size__ (2 * sizeof (long)))) long) c)[0];\n+}"}]}