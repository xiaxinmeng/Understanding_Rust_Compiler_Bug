{"sha": "4b3c2e48c46352fc7b22bbce659422d07dac5604", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzYzJlNDhjNDYzNTJmYzdiMjJiYmNlNjU5NDIyZDA3ZGFjNTYwNA==", "commit": {"author": {"name": "Philip Blundell", "email": "philb@gnu.org", "date": "2003-05-15T18:38:21Z"}, "committer": {"name": "Phil Blundell", "email": "pb@gcc.gnu.org", "date": "2003-05-15T18:38:21Z"}, "message": "arm.c (arm_is_xscale): Rename to arm_arch_xscale.\n\n2003-05-15  Philip Blundell  <philb@gnu.org>\n\n\t* config/arm/arm.c (arm_is_xscale): Rename to arm_arch_xscale.\n\tAll uses updated.\n\t(arm_tune_xscale): New variable.\n\t(arm_override_options): Set it.\n\t(arm_adjust_cost): Use it in place of arm_arch_xscale.\n\t(arm_gen_load_multiple): Likewise.\n\t(arm_gen_store_multiple): Likewise.\n\t* config/arm/arm.md (is_xscale): Likewise.\n\t* config/arm/arm.h (arm_tune_xscale): Declare.\n\nFrom-SVN: r66839", "tree": {"sha": "cc04d0be2c893154a04fe86c0fde5b5727c8f1e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc04d0be2c893154a04fe86c0fde5b5727c8f1e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b3c2e48c46352fc7b22bbce659422d07dac5604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3c2e48c46352fc7b22bbce659422d07dac5604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3c2e48c46352fc7b22bbce659422d07dac5604", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3c2e48c46352fc7b22bbce659422d07dac5604/comments", "author": {"login": "philb", "id": 227468, "node_id": "MDQ6VXNlcjIyNzQ2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/227468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philb", "html_url": "https://github.com/philb", "followers_url": "https://api.github.com/users/philb/followers", "following_url": "https://api.github.com/users/philb/following{/other_user}", "gists_url": "https://api.github.com/users/philb/gists{/gist_id}", "starred_url": "https://api.github.com/users/philb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philb/subscriptions", "organizations_url": "https://api.github.com/users/philb/orgs", "repos_url": "https://api.github.com/users/philb/repos", "events_url": "https://api.github.com/users/philb/events{/privacy}", "received_events_url": "https://api.github.com/users/philb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c75a3ddc67afe85c5bf177d76a47b487ee6277be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75a3ddc67afe85c5bf177d76a47b487ee6277be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75a3ddc67afe85c5bf177d76a47b487ee6277be"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "34752f14fec1ab57a26b5aaa25c5b38ba2649c6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b3c2e48c46352fc7b22bbce659422d07dac5604", "patch": "@@ -1,3 +1,15 @@\n+2003-05-15  Philip Blundell  <philb@gnu.org>\n+\n+\t* config/arm/arm.c (arm_is_xscale): Rename to arm_arch_xscale.\n+\tAll uses updated.\n+\t(arm_tune_xscale): New variable.\n+\t(arm_override_options): Set it.\n+\t(arm_adjust_cost): Use it in place of arm_arch_xscale.\n+\t(arm_gen_load_multiple): Likewise.\n+\t(arm_gen_store_multiple): Likewise.\n+\t* config/arm/arm.md (is_xscale): Likewise.\n+\t* config/arm/arm.h (arm_tune_xscale): Declare.\n+\n 2003-05-15  Philip Blundell  <philb@gnu.org>\n \n \tPR target/10730"}, {"sha": "2dcb226e661a6a1c65134d23b942a92e7d8b72ee", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4b3c2e48c46352fc7b22bbce659422d07dac5604", "patch": "@@ -303,7 +303,10 @@ int arm_ld_sched = 0;\n int arm_is_strong = 0;\n \n /* Nonzero if this chip is an XScale.  */\n-int arm_is_xscale = 0;\n+int arm_arch_xscale = 0;\n+\n+/* Nonzero if tuning for XScale  */\n+int arm_tune_xscale = 0;\n \n /* Nonzero if this chip is an ARM6 or an ARM7.  */\n int arm_is_6_or_7 = 0;\n@@ -718,13 +721,14 @@ arm_override_options ()\n   arm_arch4         = (insn_flags & FL_ARCH4) != 0;\n   arm_arch5         = (insn_flags & FL_ARCH5) != 0;\n   arm_arch5e        = (insn_flags & FL_ARCH5E) != 0;\n-  arm_is_xscale     = (insn_flags & FL_XSCALE) != 0;\n+  arm_arch_xscale     = (insn_flags & FL_XSCALE) != 0;\n \n   arm_ld_sched      = (tune_flags & FL_LDSCHED) != 0;\n   arm_is_strong     = (tune_flags & FL_STRONG) != 0;\n   thumb_code\t    = (TARGET_ARM == 0);\n   arm_is_6_or_7     = (((tune_flags & (FL_MODE26 | FL_MODE32))\n \t\t       && !(tune_flags & FL_ARCH4))) != 0;\n+  arm_tune_xscale       = (tune_flags & FL_XSCALE) != 0;\n   arm_is_cirrus\t    = (tune_flags & FL_CIRRUS) != 0;\n \n   if (arm_is_cirrus)\n@@ -813,7 +817,7 @@ arm_override_options ()\n   if (optimize_size || (tune_flags & FL_LDSCHED))\n     arm_constant_limit = 1;\n   \n-  if (arm_is_xscale)\n+  if (arm_arch_xscale)\n     arm_constant_limit = 2;\n \n   /* If optimizing for size, bump the number of instructions that we\n@@ -3475,7 +3479,7 @@ arm_adjust_cost (insn, link, dep, cost)\n \n   /* Some true dependencies can have a higher cost depending\n      on precisely how certain input operands are used.  */\n-  if (arm_is_xscale\n+  if (arm_tune_xscale\n       && REG_NOTE_KIND (link) == 0\n       && recog_memoized (insn) >= 0\n       && recog_memoized (dep) >= 0)\n@@ -5187,7 +5191,7 @@ arm_gen_load_multiple (base_regno, count, from, up, write_back, unchanging_p,\n \n      As a compromise, we use ldr for counts of 1 or 2 regs, and ldm\n      for counts of 3 or 4 regs.  */\n-  if (arm_is_xscale && count <= 2 && ! optimize_size)\n+  if (arm_tune_xscale && count <= 2 && ! optimize_size)\n     {\n       rtx seq;\n       \n@@ -5254,7 +5258,7 @@ arm_gen_store_multiple (base_regno, count, to, up, write_back, unchanging_p,\n \n   /* See arm_gen_load_multiple for discussion of\n      the pros/cons of ldm/stm usage for XScale.  */\n-  if (arm_is_xscale && count <= 2 && ! optimize_size)\n+  if (arm_tune_xscale && count <= 2 && ! optimize_size)\n     {\n       rtx seq;\n       "}, {"sha": "cf6b91f6ce18ca0d21e773c1318a58514f466db9", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=4b3c2e48c46352fc7b22bbce659422d07dac5604", "patch": "@@ -610,7 +610,10 @@ extern int arm_is_strong;\n extern int arm_is_cirrus;\n \n /* Nonzero if this chip is an XScale.  */\n-extern int arm_is_xscale;\n+extern int arm_arch_xscale;\n+\n+/* Nonzero if tuning for XScale  */\n+extern int arm_tune_xscale;\n \n /* Nonzero if this chip is an ARM6 or an ARM7.  */\n extern int arm_is_6_or_7;\n@@ -728,7 +731,7 @@ extern int arm_is_6_or_7;\n #define BIGGEST_ALIGNMENT  32\n \n /* Make strings word-aligned so strcpy from constants will be faster.  */\n-#define CONSTANT_ALIGNMENT_FACTOR (TARGET_THUMB || ! arm_is_xscale ? 1 : 2)\n+#define CONSTANT_ALIGNMENT_FACTOR (TARGET_THUMB || ! arm_arch_xscale ? 1 : 2)\n     \n #define CONSTANT_ALIGNMENT(EXP, ALIGN)\t\t\t\t\\\n   ((TREE_CODE (EXP) == STRING_CST\t\t\t\t\\\n@@ -2119,7 +2122,7 @@ do {\t\t\t\t\t\t\t\\\n #define MOVE_MAX 4\n \n #undef  MOVE_RATIO\n-#define MOVE_RATIO (arm_is_xscale ? 4 : 2)\n+#define MOVE_RATIO (arm_arch_xscale ? 4 : 2)\n \n /* Define if operations between registers always perform the operation\n    on the full register even if a narrower mode is specified.  */"}, {"sha": "49f41c69169f5be577d1974da8392b3e47ba1fba", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3c2e48c46352fc7b22bbce659422d07dac5604/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=4b3c2e48c46352fc7b22bbce659422d07dac5604", "patch": "@@ -121,7 +121,7 @@\n \n ;; Operand number of an input operand that is shifted.  Zero if the\n ;; given instruction does not shift one of its input operands.\n-(define_attr \"is_xscale\" \"no,yes\" (const (symbol_ref \"arm_is_xscale\")))\n+(define_attr \"is_xscale\" \"no,yes\" (const (symbol_ref \"arm_tune_xscale\")))\n (define_attr \"shift\" \"\" (const_int 0))\n \n ; Floating Point Unit.  If we only have floating point emulation, then there\n@@ -1082,7 +1082,7 @@\n \t\t\t (const_int 0)))\n    (set (match_operand:SI 0 \"s_register_operand\" \"=&r,&r\")\n \t(mult:SI (match_dup 2) (match_dup 1)))]\n-  \"TARGET_ARM && !arm_is_xscale\"\n+  \"TARGET_ARM && !arm_arch_xscale\"\n   \"mul%?s\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"type\" \"mult\")]\n@@ -1095,7 +1095,7 @@\n \t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%?r,0\"))\n \t\t\t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=&r,&r\"))]\n-  \"TARGET_ARM && !arm_is_xscale\"\n+  \"TARGET_ARM && !arm_arch_xscale\"\n   \"mul%?s\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"type\" \"mult\")]\n@@ -1126,7 +1126,7 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=&r,&r,&r,&r\")\n \t(plus:SI (mult:SI (match_dup 2) (match_dup 1))\n \t\t (match_dup 3)))]\n-  \"TARGET_ARM && !arm_is_xscale\"\n+  \"TARGET_ARM && !arm_arch_xscale\"\n   \"mla%?s\\\\t%0, %2, %1, %3\"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"type\" \"mult\")]\n@@ -1141,7 +1141,7 @@\n \t\t  (match_operand:SI 3 \"s_register_operand\" \"?r,r,0,0\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=&r,&r,&r,&r\"))]\n-  \"TARGET_ARM && !arm_is_xscale\"\n+  \"TARGET_ARM && !arm_arch_xscale\"\n   \"mla%?s\\\\t%0, %2, %1, %3\"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"type\" \"mult\")]"}]}