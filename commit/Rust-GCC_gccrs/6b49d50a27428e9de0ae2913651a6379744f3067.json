{"sha": "6b49d50a27428e9de0ae2913651a6379744f3067", "node_id": "C_kwDOANBUbNoAKDZiNDlkNTBhMjc0MjhlOWRlMGFlMjkxMzY1MWE2Mzc5NzQ0ZjMwNjc", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-12-08T11:45:38Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-12-08T15:42:12Z"}, "message": "nvptx: Use cvt to perform sign-extension of truncation\n\nThis patch introduces some new define_insn rules to the nvptx backend,\nto perform sign-extension of a truncation (from and to the same mode),\nusing a single cvt instruction.  As an example, the following function\n\nint foo(int x) { return (char)x; }\n\nwith -O2 currently generates:\n\n\tmov.u32 %r24, %ar0;\n\tmov.u32 %r26, %r24;\n\tcvt.s32.s8      %value, %r26;\n\nand with this patch, now generates:\n\n\tmov.u32 %r24, %ar0;\n\tcvt.s32.s8      %value, %r24;\n\nThis patch has been tested on nvptx-none hosted by x86_64-pc-linux-gnu\nwith a top-level \"make\" (including newlib) and a \"make check\" with no\nnew regressions.\n\ngcc/ChangeLog:\n\n\t* config/nvptx/nvptx.md (*extend_trunc_<mode>2_qi,\n\t*extend_trunc_<mode>2_hi, *extend_trunc_di2_si): New insns.\n\tUse cvt to perform sign-extension of truncation in one step.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/nvptx/exttrunc-2.c: New test case.\n\t* gcc.target/nvptx/exttrunc-3.c: New test case.\n\t* gcc.target/nvptx/exttrunc-4.c: New test case.\n\t* gcc.target/nvptx/exttrunc-5.c: New test case.\n\t* gcc.target/nvptx/exttrunc-6.c: New test case.", "tree": {"sha": "bcec92b6adfafa5faf2ce4a9480a69d22ec913b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcec92b6adfafa5faf2ce4a9480a69d22ec913b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b49d50a27428e9de0ae2913651a6379744f3067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b49d50a27428e9de0ae2913651a6379744f3067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b49d50a27428e9de0ae2913651a6379744f3067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b49d50a27428e9de0ae2913651a6379744f3067/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3d44a00e511f0402e8a2449c1c9c27f28ac9cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d44a00e511f0402e8a2449c1c9c27f28ac9cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d44a00e511f0402e8a2449c1c9c27f28ac9cf7"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "b7a03935bb2e56fb25e9ca85522caa81b52adce0", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=6b49d50a27428e9de0ae2913651a6379744f3067", "patch": "@@ -401,6 +401,32 @@\n    %.\\\\tst%A0.u%T0\\\\t%0, %1;\"\n   [(set_attr \"subregs_ok\" \"true\")])\n \n+;; Sign-extensions of truncations\n+\n+(define_insn \"*extend_trunc_<mode>2_qi\"\n+  [(set (match_operand:HSDIM 0 \"nvptx_register_operand\" \"=R\")\n+\t(sign_extend:HSDIM\n+\t (truncate:QI (match_operand:HSDIM 1 \"nvptx_register_operand\" \"R\"))))]\n+  \"\"\n+  \"%.\\\\tcvt.s%T0.s8\\\\t%0, %1;\"\n+  [(set_attr \"subregs_ok\" \"true\")])\n+\n+(define_insn \"*extend_trunc_<mode>2_hi\"\n+  [(set (match_operand:SDIM 0 \"nvptx_register_operand\" \"=R\")\n+\t(sign_extend:SDIM\n+\t (truncate:HI (match_operand:SDIM 1 \"nvptx_register_operand\" \"R\"))))]\n+  \"\"\n+  \"%.\\\\tcvt.s%T0.s16\\\\t%0, %1;\"\n+  [(set_attr \"subregs_ok\" \"true\")])\n+\n+(define_insn \"*extend_trunc_di2_si\"\n+  [(set (match_operand:DI 0 \"nvptx_register_operand\" \"=R\")\n+\t(sign_extend:DI\n+\t (truncate:SI (match_operand:DI 1 \"nvptx_register_operand\" \"R\"))))]\n+  \"\"\n+  \"%.\\\\tcvt.s64.s32\\\\t%0, %1;\"\n+  [(set_attr \"subregs_ok\" \"true\")])\n+\n ;; Integer arithmetic\n \n (define_insn \"add<mode>3\""}, {"sha": "b108b5527646bb5c8ad2ba4e322631276efb78bc", "filename": "gcc/testsuite/gcc.target/nvptx/exttrunc-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-2.c?ref=6b49d50a27428e9de0ae2913651a6379744f3067", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int exttrunc_si2_qi(int x)\n+{\n+  return (char)x;\n+}\n+\n+/* Match:\n+   mov.u32 %r24, %ar0;\n+   cvt.s32.s8 %value, %r24;  */\n+\n+/* { dg-final { scan-assembler-times \"mov\\.u32\\t%r\\[0-9\\]*, %ar0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mov\\.\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"cvt\\.s32\\.s8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cvt\\.\" 1 } } */"}, {"sha": "69e42fa4f60a3a8178f6f7f5c8cf69037e3ae99e", "filename": "gcc/testsuite/gcc.target/nvptx/exttrunc-3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-3.c?ref=6b49d50a27428e9de0ae2913651a6379744f3067", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+long exttrunc_di2_qi(long x)\n+{\n+  return (char)x;\n+}\n+\n+/* Match:\n+   mov.u64 %r24, %ar0;\n+   cvt.s64.s8      %value, %r24;  */\n+\n+/* { dg-final { scan-assembler-times \"mov\\.u64\\t%r\\[0-9\\]*, %ar0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mov\\.\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"cvt\\.s64\\.s8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cvt\\.\" 1 } } */"}, {"sha": "09009db73133c4a15fc8e1c655992a0a62085a05", "filename": "gcc/testsuite/gcc.target/nvptx/exttrunc-4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-4.c?ref=6b49d50a27428e9de0ae2913651a6379744f3067", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int exttrunc_si2_hi(int x)\n+{\n+  return (short)x;\n+}\n+\n+/* Match:\n+   mov.u32 %r24, %ar0;\n+   cvt.s32.s16     %value, %r24;\n+\n+/* { dg-final { scan-assembler-times \"mov\\.u32\\t%r\\[0-9\\]*, %ar0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mov\\.\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"cvt\\.s32\\.s16\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cvt\\.\" 1 } } */"}, {"sha": "5445850fa93b03476d584448151caa41f3ddbcfb", "filename": "gcc/testsuite/gcc.target/nvptx/exttrunc-5.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-5.c?ref=6b49d50a27428e9de0ae2913651a6379744f3067", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+long exttrunc_di2_hi(long x)\n+{\n+  return (short)x;\n+}\n+\n+/* Match:\n+   mov.u64 %r24, %ar0;\n+   cvt.s64.s16 %value, %r24;  */\n+\n+/* { dg-final { scan-assembler-times \"mov\\.u64\\t%r\\[0-9\\]*, %ar0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mov\\.\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"cvt\\.s64\\.s16\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cvt\\.\" 1 } } */"}, {"sha": "74f050fa2b9e2f55ba055442a37606a65e6c1b54", "filename": "gcc/testsuite/gcc.target/nvptx/exttrunc-6.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b49d50a27428e9de0ae2913651a6379744f3067/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fexttrunc-6.c?ref=6b49d50a27428e9de0ae2913651a6379744f3067", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+long exttrunc_di2_si(long x)\n+{\n+  return (int)x;\n+}\n+\n+/* Match:\n+   mov.u64 %r24, %ar0;\n+   cvt.s64.s32     %value, %r24;  */\n+\n+/* { dg-final { scan-assembler-times \"mov\\.u64\\t%r\\[0-9\\]*, %ar0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mov\\.\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"cvt\\.s64\\.s32\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cvt\\.\" 1 } } */"}]}