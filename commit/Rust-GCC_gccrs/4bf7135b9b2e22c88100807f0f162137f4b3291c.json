{"sha": "4bf7135b9b2e22c88100807f0f162137f4b3291c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmNzEzNWI5YjJlMjJjODgxMDA4MDdmMGYxNjIxMzdmNGIzMjkxYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T13:46:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T13:46:34Z"}, "message": "(eligible_for_delay_slot): Clean up and make to agree precisely with\npatterns in MD file.\n\nFrom-SVN: r13866", "tree": {"sha": "bde575b2b2352d7de44794d3d518076957fc0e5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bde575b2b2352d7de44794d3d518076957fc0e5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bf7135b9b2e22c88100807f0f162137f4b3291c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf7135b9b2e22c88100807f0f162137f4b3291c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bf7135b9b2e22c88100807f0f162137f4b3291c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf7135b9b2e22c88100807f0f162137f4b3291c/comments", "author": null, "committer": null, "parents": [{"sha": "0b73ca18adc074b43cea72e7922cbcc3114bd50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b73ca18adc074b43cea72e7922cbcc3114bd50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b73ca18adc074b43cea72e7922cbcc3114bd50b"}], "stats": {"total": 69, "additions": 42, "deletions": 27}, "files": [{"sha": "97456e228615da2b8efdccd5eca4f6e1b3bf197e", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 42, "deletions": 27, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf7135b9b2e22c88100807f0f162137f4b3291c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf7135b9b2e22c88100807f0f162137f4b3291c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=4bf7135b9b2e22c88100807f0f162137f4b3291c", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Sun SPARC.\n-   Copyright (C) 1987, 88, 89, 92-95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 89, 92-95, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n    64 bit SPARC V9 support by Michael Tiemann, Jim Wilson, and Doug Evans,\n    at Cygnus Support.\n@@ -1110,9 +1110,10 @@ eligible_for_epilogue_delay (trial, slot)\n \n   if (slot >= 1)\n     return 0;\n-  if (GET_CODE (trial) != INSN\n-      || GET_CODE (PATTERN (trial)) != SET)\n+\n+  if (GET_CODE (trial) != INSN || GET_CODE (PATTERN (trial)) != SET)\n     return 0;\n+\n   if (get_attr_length (trial) != 1)\n     return 0;\n \n@@ -1128,9 +1129,11 @@ eligible_for_epilogue_delay (trial, slot)\n   if (leaf_function)\n     {\n       if (leaf_return_peephole_ok ())\n-\treturn (get_attr_in_uncond_branch_delay (trial) == IN_BRANCH_DELAY_TRUE);\n+\treturn ((get_attr_in_uncond_branch_delay (trial)\n+\t\t == IN_BRANCH_DELAY_TRUE));\n       return 0;\n     }\n+\n   /* If only trivial `restore' insns work, nothing can go in the\n      delay slot.  */\n   else if (TARGET_BROKEN_SAVERESTORE)\n@@ -1145,35 +1148,47 @@ eligible_for_epilogue_delay (trial, slot)\n       || REGNO (SET_DEST (pat)) < 24)\n     return 0;\n \n+  /* The set of insns matched here must agree precisely with the set of\n+     patterns paired with a RETURN in sparc.md.  */\n+\n   src = SET_SRC (pat);\n+\n+  /* This matches \"*return_[qhs]\".  */\n   if (arith_operand (src, GET_MODE (src)))\n     return GET_MODE_SIZE (GET_MODE (src)) <= GET_MODE_SIZE (SImode);\n-  if (arith_double_operand (src, GET_MODE (src)))\n+    \n+  /* This matches \"*return_di\".  */\n+  else if (arith_double_operand (src, GET_MODE (src)))\n     return GET_MODE_SIZE (GET_MODE (src)) <= GET_MODE_SIZE (DImode);\n-  if (GET_CODE (src) == PLUS)\n-    {\n-      if (register_operand (XEXP (src, 0), SImode)\n-\t  && arith_operand (XEXP (src, 1), SImode))\n-\treturn 1;\n-      if (register_operand (XEXP (src, 1), SImode)\n-\t  && arith_operand (XEXP (src, 0), SImode))\n-\treturn 1;\n-      if (register_operand (XEXP (src, 0), DImode)\n-\t  && arith_double_operand (XEXP (src, 1), DImode))\n-\treturn 1;\n-      if (register_operand (XEXP (src, 1), DImode)\n-\t  && arith_double_operand (XEXP (src, 0), DImode))\n-\treturn 1;\n-    }\n-  if (GET_CODE (src) == MINUS\n-      && register_operand (XEXP (src, 0), SImode)\n-      && small_int (XEXP (src, 1), VOIDmode))\n+\n+  /* This matches \"*return_sf_no_fpu\".  */\n+  else if (! TARGET_FPU && restore_operand (SET_DEST (pat), SFmode)\n+\t   && register_operand (src, SFmode))\n+    return 1;\n+\n+  /* This matches \"*return_addsi\".  */\n+  else if (GET_CODE (src) == PLUS\n+\t   && arith_operand (XEXP (src, 0), SImode)\n+\t   && arith_operand (XEXP (src, 1), SImode)\n+\t   && (register_operand (XEXP (src, 0), SImode)\n+\t       || register_operand (XEXP (src, 1), SImode)))\n     return 1;\n-  if (GET_CODE (src) == MINUS\n-      && register_operand (XEXP (src, 0), DImode)\n-      && !register_operand (XEXP (src, 1), DImode)\n-      && arith_double_operand (XEXP (src, 1), DImode))\n+\n+  /* This matches \"*return_adddi\".  */\n+  else if (GET_CODE (src) == PLUS\n+\t   && arith_double_operand (XEXP (src, 0), DImode)\n+\t   && arith_double_operand (XEXP (src, 1), DImode)\n+\t   && (register_operand (XEXP (src, 0), DImode)\n+\t       || register_operand (XEXP (src, 1), DImode)))\n     return 1;\n+\n+  /* This matches \"*return_subsi\".  */\n+  else if (GET_CODE (src) == MINUS\n+      && register_operand (XEXP (src, 0), SImode)\n+      && small_int (XEXP (src, 1), VOIDmode)\n+      && INTVAL (XEXP (src, 1)) != -4096)\n+    return 1;\n+\n   return 0;\n }\n "}]}