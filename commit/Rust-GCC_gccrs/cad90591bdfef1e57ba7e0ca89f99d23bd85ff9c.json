{"sha": "cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkOTA1OTFiZGZlZjFlNTdiYTdlMGNhODlmOTlkMjNiZDg1ZmY5Yw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-08-20T14:47:11Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-08-20T14:47:11Z"}, "message": "configure.in: Rewrote some obsolete stuff for autoconf 2.59.\n\n2004-08-20  Michael Koch  <konqueror@gmx.de>\n\n\t* configure.in: Rewrote some obsolete stuff for autoconf 2.59.\n\t* aclocal.m4, configure: Regenerated.\n\nFrom-SVN: r86322", "tree": {"sha": "a164bb24bb016d35bc96ee899bc456689713df88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a164bb24bb016d35bc96ee899bc456689713df88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/comments", "author": null, "committer": null, "parents": [{"sha": "fabead06137e34773b26c619b0085e2c03e06f4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabead06137e34773b26c619b0085e2c03e06f4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabead06137e34773b26c619b0085e2c03e06f4d"}], "stats": {"total": 72, "additions": 32, "deletions": 40}, "files": [{"sha": "102a19c8131ae54e8585d40dfd9ea3ba615d87a3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "patch": "@@ -1,3 +1,8 @@\n+2004-08-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* configure.in: Rewrote some obsolete stuff for autoconf 2.59.\n+\t* aclocal.m4, configure: Regenerated.\n+\n 2004-08-19  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \t    Michael Koch  <konqueror@gmx.de>\n "}, {"sha": "b44303e9fa2937c2bd5d20c15fa13c948407b3f5", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "patch": "@@ -426,30 +426,6 @@ AC_SUBST(GCJFLAGS)\n _AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES(GCJ)])\n ])\n \n-# Like AC_CONFIG_HEADER, but automatically create stamp file. -*- Autoconf -*-\n-\n-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 7\n-\n-# AM_CONFIG_HEADER is obsolete.  It has been replaced by AC_CONFIG_HEADERS.\n-AU_DEFUN([AM_CONFIG_HEADER], [AC_CONFIG_HEADERS($@)])\n-\n # Do all the work for Automake.                            -*- Autoconf -*-\n \n # This macro actually does too much some checks are only needed if"}, {"sha": "81a73da8f9b02ead81beaff3e8f77640ee22e20f", "filename": "libjava/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "patch": "@@ -5740,8 +5740,6 @@ INTERPRETER=\"$libgcj_interpreter\"\n \n echo \"$as_me:$LINENO: checking for exception model to use\" >&5\n echo $ECHO_N \"checking for exception model to use... $ECHO_C\" >&6\n-\n-\n ac_ext=cc\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -5754,7 +5752,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then\n   :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 5757 \"configure\"\n+#line 5755 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -10748,9 +10746,7 @@ echo $ECHO_N \"checking whether gethostbyname_r declaration requires -D_REENTRANT\n if test \"${libjava_cv_gethostbyname_r_needs_reentrant+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-\n-\n-\t  ac_ext=cc\n+   ac_ext=cc\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n@@ -15543,7 +15539,11 @@ here=`${PWDCMD-pwd}`\n \n \n                                                                                 ac_config_files=\"$ac_config_files Makefile libgcj.pc libgcj.spec libgcj-test.spec gnu/classpath/Configuration.java gcj/Makefile include/Makefile testsuite/Makefile\"\n+\n+\n           ac_config_commands=\"$ac_config_commands default\"\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "59e5cd3c0cc17a848d007f49bc2d897c4c4e89a0", "filename": "libjava/configure.in", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=cad90591bdfef1e57ba7e0ca89f99d23bd85ff9c", "patch": "@@ -138,7 +138,7 @@ AC_SUBST(LIBGCJ_CFLAGS)\n AC_SUBST(LIBGCJ_CXXFLAGS)\n AC_SUBST(LIBGCJ_JAVAFLAGS)\n \n-AM_CONFIG_HEADER(include/config.h gcj/libgcj-config.h)\n+AC_CONFIG_HEADERS([include/config.h gcj/libgcj-config.h])\n \n # Only use libltdl for non-newlib builds.\n if test \"x${with_newlib}\" = \"x\" || test \"x${with_newlib}\" = \"xno\"; then\n@@ -155,7 +155,7 @@ fi\n AC_SUBST(INCLTDL)\n AC_SUBST(LIBLTDL)\n AC_SUBST(DIRLTDL)\n-AM_PROG_LIBTOOL\n+AC_PROG_LIBTOOL\n AM_PROG_GCJ\n AM_PROG_CC_C_O\n AC_CONFIG_SUBDIRS(libltdl)\n@@ -271,8 +271,7 @@ INTERPRETER=\"$libgcj_interpreter\"\n AC_SUBST(INTERPRETER)\n \n AC_MSG_CHECKING([for exception model to use])\n-AC_LANG_SAVE\n-AC_LANG_CPLUSPLUS\n+AC_LANG_PUSH(C++)\n AC_ARG_ENABLE(sjlj-exceptions,\n   AS_HELP_STRING([--enable-sjlj-exceptions],\n                  [force use of builtin_setjmp for exceptions]),\n@@ -314,7 +313,7 @@ elif test x$enable_sjlj_exceptions = xno; then\n else\n   AC_MSG_ERROR([unable to detect exception model])\n fi\n-AC_LANG_RESTORE\n+AC_LANG_POP(C++)\n AC_MSG_RESULT($ac_exception_model_name)\n \n # If we are non using SJLJ exceptions, and this host does not have support \n@@ -581,7 +580,7 @@ case \"$GC\" in\n     GCHDR=no-gc.h\n     ;;\n  *)\n-    AC_MSG_ERROR(unrecognized collector \\\"$GC\\\")\n+    AC_MSG_ERROR([unrecognized collector \"$GC\"])\n     ;;\n esac\n AC_SUBST(GCLIBS)\n@@ -818,8 +817,7 @@ else\n \tdnl On DU4.0, gethostbyname_r is only declared with -D_REENTRANT\n \tAC_CACHE_CHECK([whether gethostbyname_r declaration requires -D_REENTRANT],\n \t[libjava_cv_gethostbyname_r_needs_reentrant],\n-\t[ AC_LANG_SAVE\n-\t  AC_LANG_CPLUSPLUS\n+\t[ AC_LANG_PUSH(C++)\n \t  AC_TRY_COMPILE([#include <netdb.h>],\n \t    [gethostbyname_r(\"\", 0, 0);],\n \t    [libjava_cv_gethostbyname_r_needs_reentrant=no], [dnl\n@@ -830,7 +828,7 @@ else\n \t\t    [libjava_cv_gethostbyname_r_needs_reentrant=fail])\n \t\tCPPFLAGS=\"$CPPFLAGS_SAVE\"\n \t  ])\n-\t  AC_LANG_RESTORE\n+\t  AC_LANG_POP(C++)\n \t])\n \tif test \"x$libjava_cv_gethostbyname_r_needs_reentrant\" = xyes; then\n \t  AC_DEFINE(_REENTRANT, 1, [Required define if using POSIX threads])\n@@ -1356,7 +1354,18 @@ AC_SUBST(here)\n # We get this from the environment.\n AC_SUBST(GCJFLAGS)\n \n-AC_OUTPUT(Makefile libgcj.pc libgcj.spec libgcj-test.spec gnu/classpath/Configuration.java gcj/Makefile include/Makefile testsuite/Makefile,\n+AC_CONFIG_FILES([\n+Makefile\n+libgcj.pc\n+libgcj.spec\n+libgcj-test.spec\n+gnu/classpath/Configuration.java\n+gcj/Makefile\n+include/Makefile\n+testsuite/Makefile\n+])\n+\n+AC_CONFIG_COMMANDS([default],\n [# Only add multilib support code if we just rebuilt top-level Makefile.\n case \" $CONFIG_FILES \" in\n  *\" Makefile \"*)\n@@ -1395,3 +1404,5 @@ CC=\"${CC}\"\n CXX=\"${CXX}\"\n ORIGINAL_LD_FOR_MULTILIBS=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n )\n+\n+AC_OUTPUT"}]}