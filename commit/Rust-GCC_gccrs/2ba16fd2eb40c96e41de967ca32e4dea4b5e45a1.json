{"sha": "2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhMTZmZDJlYjQwYzk2ZTQxZGU5NjdjYTMyZTRkZWE0YjVlNDVhMQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-04-05T08:36:37Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-04-05T08:36:37Z"}, "message": "[nvptx] Fix neutering of bb with only cond jump\n\n2018-04-05  Tom de Vries  <tom@codesourcery.com>\n\n\tPR target/85204\n\t* config/nvptx/nvptx.c (nvptx_single): Fix neutering of bb with only\n\tcond jump.\n\n\t* testsuite/libgomp.oacc-c-c++-common/broadcast-1.c: New test.\n\nFrom-SVN: r259125", "tree": {"sha": "26dcac04b2435d5bda5b7eba0accc7e71cccdde7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26dcac04b2435d5bda5b7eba0accc7e71cccdde7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/comments", "author": null, "committer": null, "parents": [{"sha": "44780b91eb61d1a4ae3a6f94300d1b97a1d06557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44780b91eb61d1a4ae3a6f94300d1b97a1d06557", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44780b91eb61d1a4ae3a6f94300d1b97a1d06557"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "517ac4e57ae6afb82b74638350f9770ee2322e91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "patch": "@@ -1,3 +1,9 @@\n+2018-04-05  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR target/85204\n+\t* config/nvptx/nvptx.c (nvptx_single): Fix neutering of bb with only\n+\tcond jump.\n+\n 2018-04-05  Shiva Chen  <shiva0217@gmail.com>\n \t    Kito Cheng  <kito.cheng@gmail.com>\n "}, {"sha": "a9a3053f3365d022da7bf9a636b11a5542214d80", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "patch": "@@ -4048,6 +4048,7 @@ nvptx_single (unsigned mask, basic_block from, basic_block to)\n   /* Insert the vector test inside the worker test.  */\n   unsigned mode;\n   rtx_insn *before = tail;\n+  rtx_insn *neuter_start = NULL;\n   for (mode = GOMP_DIM_WORKER; mode <= GOMP_DIM_VECTOR; mode++)\n     if (GOMP_DIM_MASK (mode) & skip_mask)\n       {\n@@ -4065,7 +4066,10 @@ nvptx_single (unsigned mask, basic_block from, basic_block to)\n \t  br = gen_br_true (pred, label);\n \telse\n \t  br = gen_br_true_uni (pred, label);\n-\temit_insn_before (br, head);\n+\tif (neuter_start)\n+\t  neuter_start = emit_insn_after (br, neuter_start);\n+\telse\n+\t  neuter_start = emit_insn_before (br, head);\n \n \tLABEL_NUSES (label)++;\n \tif (tail_branch)"}, {"sha": "ea28859efda63473794966aac563af757805d33c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "patch": "@@ -1,3 +1,8 @@\n+2018-04-05  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR target/85204\n+\t* testsuite/libgomp.oacc-c-c++-common/broadcast-1.c: New test.\n+\n 2018-03-26  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/85063"}, {"sha": "ca0d37bf88a55c3a0d23c3502715f92b77dd36e5", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/broadcast-1.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fbroadcast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fbroadcast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fbroadcast-1.c?ref=2ba16fd2eb40c96e41de967ca32e4dea4b5e45a1", "patch": "@@ -0,0 +1,49 @@\n+/* Ensure that worker-vector state conditional expressions are\n+   properly handled by the nvptx backend.  */\n+\n+#include <assert.h>\n+#include <math.h>\n+\n+\n+#define N 1024\n+\n+int A[N][N] ;\n+\n+void test(int x)\n+{\n+#pragma acc parallel  num_gangs(16) num_workers(4) vector_length(32) copyout(A)\n+  {\n+#pragma acc loop gang\n+    for(int j=0;j<N;j++)\n+      {\n+\tif (x==1)\n+\t  {\n+#pragma acc loop worker vector\n+\t    for(int i=0;i<N;i++)\n+\t      A[i][j] = 1;\n+\t  }\n+\telse\n+\t  {\n+#pragma acc loop worker vector\n+\t    for(int i=0;i<N;i++)\n+\t      A[i][j] = -1;\n+\t  }\n+      }\n+  }\n+}\n+\n+\n+int main(void)\n+{\n+  test (0);\n+  for (int i = 0; i < N; i++)\n+    for (int j = 0; j < N; j++)\n+      assert (A[i][j] == -1);\n+\n+  test (1);\n+  for (int i = 0; i < N; i++)\n+    for (int j = 0; j < N; j++)\n+      assert (A[i][j] == 1);\n+\n+  return 0;\n+}"}]}