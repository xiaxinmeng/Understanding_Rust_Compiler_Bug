{"sha": "be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwMjVhMmQ5OTc3MmRmOWNjZWExYjhiMGFiYTU4MzNiZDhmYzMyYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2017-11-27T10:33:06Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2017-11-27T10:33:06Z"}, "message": "[PR 81248] Fix ipa-sra size check\n\n2017-11-27  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/81248\n\t* tree-sra.c (splice_param_accesses): Remove size check.\n\t(decide_one_param_reduction): Fix size check.\n\t* gimple-pretty-print.c (dump_profile): Silence warning.\n\t* params.def (PARAM_IPA_SRA_PTR_GROWTH_FACTOR): Adjust description.\n\n\ttestsuite/\n\t* g++.dg/ipa/pr81248.C: New test.\n\t* gcc.dg/tree-ssa/ssa-pre-31.c: Disable IPA-SRA.\n\t* gcc/testsuite/gcc.dg/ipa/ipcp-cstagg-2.c: Likewise.\n\nFrom-SVN: r255163", "tree": {"sha": "1547c19540eafc5952a48ec76d071d3aea9f10a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1547c19540eafc5952a48ec76d071d3aea9f10a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8cb715989f978104108606d65233838105fd41eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb715989f978104108606d65233838105fd41eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb715989f978104108606d65233838105fd41eb"}], "stats": {"total": 120, "additions": 84, "deletions": 36}, "files": [{"sha": "cfb13935d1968bbdfa1ef794572a6e99570257ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -1,3 +1,11 @@\n+2017-11-27  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/81248\n+\t* tree-sra.c (splice_param_accesses): Remove size check.\n+\t(decide_one_param_reduction): Fix size check.\n+\t* gimple-pretty-print.c (dump_profile): Silence warning.\n+\t* params.def (PARAM_IPA_SRA_PTR_GROWTH_FACTOR): Adjust description.\n+\n 2017-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/81307"}, {"sha": "8bcc4e31bfbd967287f253d12e773b68dbff3270", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -84,7 +84,7 @@ debug_gimple_stmt (gimple *gs)\n static const char *\n dump_profile (profile_count &count)\n {\n-  char *buf;\n+  char *buf = NULL;\n   if (!count.initialized_p ())\n     return \"\";\n   if (count.ipa_p ())"}, {"sha": "93bd2cf75fe5a30fc6f5e290eba3d086353743d4", "filename": "gcc/params.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -971,8 +971,8 @@ DEFPARAM (PARAM_MIN_NONDEBUG_INSN_UID,\n \n DEFPARAM (PARAM_IPA_SRA_PTR_GROWTH_FACTOR,\n \t  \"ipa-sra-ptr-growth-factor\",\n-\t  \"Maximum allowed growth of size of new parameters ipa-sra replaces \"\n-\t  \"a pointer to an aggregate with.\",\n+\t  \"Maximum allowed growth of number and total size of new parameters \"\n+\t  \"that ipa-sra replaces a pointer to an aggregate with.\",\n \t  2, 0, 0)\n \n DEFPARAM (PARAM_TM_MAX_AGGREGATE_SIZE,"}, {"sha": "0b0bac7a4d7dfa460a6f8483b2d34e011ab8a62c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -1,3 +1,10 @@\n+2017-11-27  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/81248\n+\t* g++.dg/ipa/pr81248.C: New test.\n+\t* gcc.dg/tree-ssa/ssa-pre-31.c: Disable IPA-SRA.\n+\t* gcc/testsuite/gcc.dg/ipa/ipcp-cstagg-2.c: Likewise.\n+\n 2017-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/ubsan/null-8.C (bar): New function."}, {"sha": "d55d2e751e87f440ec7e7105753f7be1c3105b77", "filename": "gcc/testsuite/g++.dg/ipa/pr81248.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr81248.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr81248.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr81248.C?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -0,0 +1,40 @@\n+//  { dg-do compile }\n+// { dg-options \"-O2 -std=c++17 -fdump-tree-eipa_sra\" }\n+\n+\n+#include <type_traits>\n+\n+typedef unsigned char __uint8_t;\n+typedef __uint8_t uint8_t;\n+\n+\n+struct A {\n+    A() = default;\n+    A(const A& o) = default;\n+    A(const volatile A& o) : m1(o.m1) {}\n+    uint8_t m1{0};\n+};\n+\n+volatile uint8_t v;\n+\n+template<typename T>\n+void f(const T& x) __attribute__((noinline));\n+template<typename T>\n+void f(const T& x) {\n+    if constexpr(std::is_same<std::remove_cv_t<T>, A>::value) {\n+        v = x.m1;\n+    }\n+    else {\n+        v = x;\n+    }\n+}\n+\n+uint8_t n1;\n+A n2;\n+\n+int main() {\n+    f(n1);\n+    f(n2);\n+}\n+\n+// { dg-final { scan-tree-dump-times \"Adjusting call\" 2 \"eipa_sra\" } }"}, {"sha": "c1b6f0f73a37393373e4ab8ebe1a620668e9e155", "filename": "gcc/testsuite/gcc.dg/ipa/ipcp-cstagg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-2.c?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fdump-ipa-cp-details\" } */\n+/* { dg-options \"-O3 -fdump-ipa-cp-details -fno-ipa-sra\" } */\n \n typedef struct S\n {"}, {"sha": "6a33b942ad558e88f1e28fe8b8df7388dae9c137", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-31.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-31.c?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-pre\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre -fno-ipa-sra\" } */\n \n typedef struct {\n     unsigned int key;"}, {"sha": "866cff0edb045b606556f7ba8c800f48b1fd85ea", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 24, "deletions": 31, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be025a2d99772df9ccea1b8b0aba5833bd8fc32c/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=be025a2d99772df9ccea1b8b0aba5833bd8fc32c", "patch": "@@ -4453,7 +4453,7 @@ static struct access *\n splice_param_accesses (tree parm, bool *ro_grp)\n {\n   int i, j, access_count, group_count;\n-  int agg_size, total_size = 0;\n+  int total_size = 0;\n   struct access *access, *res, **prev_acc_ptr = &res;\n   vec<access_p> *access_vec;\n \n@@ -4520,13 +4520,6 @@ splice_param_accesses (tree parm, bool *ro_grp)\n       i = j;\n     }\n \n-  if (POINTER_TYPE_P (TREE_TYPE (parm)))\n-    agg_size = tree_to_uhwi (TYPE_SIZE (TREE_TYPE (TREE_TYPE (parm))));\n-  else\n-    agg_size = tree_to_uhwi (TYPE_SIZE (TREE_TYPE (parm)));\n-  if (total_size >= agg_size)\n-    return NULL;\n-\n   gcc_assert (group_count > 0);\n   return res;\n }\n@@ -4537,7 +4530,7 @@ splice_param_accesses (tree parm, bool *ro_grp)\n static int\n decide_one_param_reduction (struct access *repr)\n {\n-  int total_size, cur_parm_size, agg_size, new_param_count, parm_size_limit;\n+  HOST_WIDE_INT total_size, cur_parm_size;\n   bool by_ref;\n   tree parm;\n \n@@ -4546,15 +4539,9 @@ decide_one_param_reduction (struct access *repr)\n   gcc_assert (cur_parm_size > 0);\n \n   if (POINTER_TYPE_P (TREE_TYPE (parm)))\n-    {\n-      by_ref = true;\n-      agg_size = tree_to_uhwi (TYPE_SIZE (TREE_TYPE (TREE_TYPE (parm))));\n-    }\n+    by_ref = true;\n   else\n-    {\n-      by_ref = false;\n-      agg_size = cur_parm_size;\n-    }\n+    by_ref = false;\n \n   if (dump_file)\n     {\n@@ -4567,7 +4554,7 @@ decide_one_param_reduction (struct access *repr)\n     }\n \n   total_size = 0;\n-  new_param_count = 0;\n+  int new_param_count = 0;\n \n   for (; repr; repr = repr->next_grp)\n     {\n@@ -4595,22 +4582,28 @@ decide_one_param_reduction (struct access *repr)\n \n   gcc_assert (new_param_count > 0);\n \n-  if (optimize_function_for_size_p (cfun))\n-    parm_size_limit = cur_parm_size;\n-  else\n-    parm_size_limit = (PARAM_VALUE (PARAM_IPA_SRA_PTR_GROWTH_FACTOR)\n-                       * cur_parm_size);\n-\n-  if (total_size < agg_size\n-      && total_size <= parm_size_limit)\n+  if (!by_ref)\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"    ....will be split into %i components\\n\",\n-\t\t new_param_count);\n-      return new_param_count;\n+      if (total_size >= cur_parm_size)\n+\treturn 0;\n     }\n   else\n-    return 0;\n+    {\n+      int parm_num_limit;\n+      if (optimize_function_for_size_p (cfun))\n+\tparm_num_limit = 1;\n+      else\n+\tparm_num_limit = PARAM_VALUE (PARAM_IPA_SRA_PTR_GROWTH_FACTOR);\n+\n+      if (new_param_count > parm_num_limit\n+\t  || total_size > (parm_num_limit * cur_parm_size))\n+\treturn 0;\n+    }\n+\n+  if (dump_file)\n+    fprintf (dump_file, \"    ....will be split into %i components\\n\",\n+\t     new_param_count);\n+  return new_param_count;\n }\n \n /* The order of the following enums is important, we need to do extra work for"}]}