{"sha": "2f5765cf25115fc8306806a913d90bed6edb420b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY1NzY1Y2YyNTExNWZjODMwNjgwNmE5MTNkOTBiZWQ2ZWRiNDIwYg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-23T00:16:34Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-23T00:16:34Z"}, "message": "Daily bump.", "tree": {"sha": "a02c5a325dce7aa1c1374dbd4549133ccbb3379d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a02c5a325dce7aa1c1374dbd4549133ccbb3379d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f5765cf25115fc8306806a913d90bed6edb420b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f5765cf25115fc8306806a913d90bed6edb420b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f5765cf25115fc8306806a913d90bed6edb420b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f5765cf25115fc8306806a913d90bed6edb420b/comments", "author": null, "committer": null, "parents": [{"sha": "5ee4ba031dd9fc60bf2494ca30f46c0acaa34805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ee4ba031dd9fc60bf2494ca30f46c0acaa34805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ee4ba031dd9fc60bf2494ca30f46c0acaa34805"}], "stats": {"total": 188, "additions": 187, "deletions": 1}, "files": [{"sha": "3bd877243b70dc03cf55bd5eb89cf5c7a63973c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,50 @@\n+2021-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-tuning-flags.def (cse_sve_vl_constants):\n+\tDefine.\n+\t* config/aarch64/aarch64.md (add<mode>3): Force CONST_POLY_INT immediates\n+\tinto a register when the above is enabled.\n+\t* config/aarch64/aarch64.c (neoversev1_tunings):\n+\tAARCH64_EXTRA_TUNE_CSE_SVE_VL_CONSTANTS.\n+\t(aarch64_rtx_costs): Use AARCH64_EXTRA_TUNE_CSE_SVE_VL_CONSTANTS.\n+\n+2021-02-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.c (cris_print_operand) <'T'>: Change\n+\tvalid operand from is now an addi mult-value to shift-value.\n+\t* config/cris/cris.md (*addi): Change expression of scaled\n+\toperand from mult to ashift.\n+\t* config/cris/cris.md (*addi_reload): New insn_and_split.\n+\n+2021-02-22  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/85074\n+\t* config/pa/pa.c (TARGET_ASM_CAN_OUTPUT_MI_THUNK): Define as\n+\thook_bool_const_tree_hwi_hwi_const_tree_true.\n+\t(pa_asm_output_mi_thunk): Add support for nonzero vcall_offset.\n+\n+2021-02-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR rtl-optimization/98791\n+\t* ira-conflicts.c (process_regs_for_copy): Don't create allocno copies\n+\tfor unordered modes.\n+\n+2021-02-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-inline.c (inline_forbidden_p): Set\n+\tinline_forbidden_reason.\n+\n+2021-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_bb_vectorization_profitable_p): Dump\n+\tcosted subgraph.\n+\n+2021-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99165\n+\t* gimple-ssa-store-merging.c (pass_store_merging::process_store):\n+\tAccumulate changed to ret.\n+\n 2021-02-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tRevert:"}, {"sha": "6b9f5c920d2d087a75fdf2512fad9cab74766068", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1 +1 @@\n-20210222\n+20210223"}, {"sha": "23486ac031aec7d4111df5a50d3fa2874015f04a", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,17 @@\n+2021-02-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99196\n+\t* engine.cc (exploded_node::on_stmt): Provide terminate_path\n+\tflag as a way for on_call_pre to terminate the current analysis\n+\tpath.\n+\t* region-model-impl-calls.cc (call_details::num_args): New.\n+\t(region_model::impl_call_error): New.\n+\t* region-model.cc (region_model::on_call_pre): Add param\n+\t\"out_terminate_path\".  Handle \"error\" and \"error_at_line\".\n+\t* region-model.h (call_details::num_args): New decl.\n+\t(region_model::on_call_pre): Add param \"out_terminate_path\".\n+\t(region_model::impl_call_error): New decl.\n+\n 2021-02-17  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/98969"}, {"sha": "bc97ed54f1f202c1b4a6d3c921923a35117ac601", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,18 @@\n+2021-02-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99174\n+\t* module.cc (struct module_state): Add visited_p flag.\n+\t(name_pending_imports): Use it to avoid duplicate requests.\n+\t(preprocess_module): Don't read preprocessor state if we failed to\n+\tload a module's config.\n+\n+2021-02-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99153\n+\t* decl.c (duplicate_decls): Move DECL_MODULE_IMPORT_P propagation\n+\tto common-path.\n+\t* module.cc (set_defining_module): Add assert.\n+\n 2021-02-19  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/98741"}, {"sha": "171b3c9fdc8599b78e55ea03022c3e6f348a5a76", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,9 @@\n+2021-02-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99171\n+\t* trans-openmp.c (gfc_omp_is_optional_argument): Regard optional\n+\tdummy procs as nonoptional as no special treatment is needed.\n+\n 2021-02-21  Harald Anlauf  <anlauf@gmx.de>\n \n \t* trans-expr.c (gfc_conv_procedure_call): Do not add clobber to"}, {"sha": "6864bcb2f91a87d387c6a83a3a353aa0620be5b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,65 @@\n+2021-02-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99196\n+\t* gcc.dg/analyzer/error-1.c: New test.\n+\t* gcc.dg/analyzer/error-2.c: New test.\n+\t* gcc.dg/analyzer/error-3.c: New test.\n+\n+2021-02-22  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR testsuite/99173\n+\t* c-c++-common/attr-retain-5.c: Require R_flag_in_section.\n+\t* c-c++-common/attr-retain-6.c: Likewise.\n+\t* c-c++-common/attr-retain-7.c: Likewise.\n+\t* c-c++-common/attr-retain-8.c: Likewise.\n+\t* c-c++-common/attr-retain-9.c: Likewise.\n+\n+2021-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/sve/cse_sve_vl_constants_1.c: New test.\n+\n+2021-02-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* g++.dg/warn/Warray-bounds-10.C, g++.dg/warn/Warray-bounds-11.C,\n+\tg++.dg/warn/Warray-bounds-12.C, g++.dg/warn/Warray-bounds-13.C:\n+\tHandle __INT32_TYPE__ being \"long int\".\n+\n+2021-02-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.target/cris/biap.c: Add a Y+=X*2 to the Y+=X*4.\n+\n+2021-02-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.target/cris/biap-mul.c: New test.\n+\n+2021-02-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.target/cris/torture/sync-reload-mul-1.c: New test.\n+\n+2021-02-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99174\n+\t* g++.dg/modules/pr99174-1_a.C: New.\n+\t* g++.dg/modules/pr99174-1_b.C: New.\n+\t* g++.dg/modules/pr99174-1_c.C: New.\n+\t* g++.dg/modules/pr99174.H: New.\n+\n+2021-02-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99153\n+\t* g++.dg/modules/pr99153_a.H: New.\n+\t* g++.dg/modules/pr99153_b.H: New.\n+\n+2021-02-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR rtl-optimization/98791\n+\t* gcc.target/aarch64/sve/pr98791.c: New test.\n+\n+2021-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99165\n+\t* g++.dg/pr99165.C: New testcase.\n+\n 2021-02-21  Harald Anlauf  <anlauf@gmx.de>\n \n \t* gfortran.dg/intent_optimize_3.f90: New test."}, {"sha": "0763765d9d8f42d6230fbc5f37001c3274ab962e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,40 @@\n+2021-02-22  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* dfp-bit.c (BFP_TO_DFP): Fix a comment line that was too long.\n+\n+2021-02-22  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/_dd_to_kf.c: New file.\n+\t* config/rs6000/_kf_to_dd.c: New file.\n+\t* config/rs6000/_kf_to_sd.c: New file.\n+\t* config/rs6000/_kf_to_td.c: New file.\n+\t* config/rs6000/_sd_to_kf.c: New file.\n+\t* config/rs6000/_sprintfkf.c: New file.\n+\t* config/rs6000/_sprintfkf.h: New file.\n+\t* config/rs6000/_strtokf.h: New file.\n+\t* config/rs6000/_strtokf.c: New file.\n+\t* config/rs6000/_td_to_kf.c: New file.\n+\t* config/rs6000/quad-float128.h: Add new declarations.\n+\t* config/rs6000/t-float128 (fp128_dec_funcs): New macro.\n+\t(fp128_decstr_funcs): New macro.\n+\t(ibm128_dec_funcs): New macro.\n+\t(fp128_ppc_funcs): Add the new conversions.\n+\t(fp128_dec_objs): Force Decimal <-> __float128 conversions to be\n+\tcompiled with -mabi=ieeelongdouble.\n+\t(fp128_decstr_objs): Force __float128 <-> string conversions to be\n+\tcompiled with -mabi=ibmlongdouble.\n+\t(ibm128_dec_objs): Force Decimal <-> __float128 conversions to be\n+\tcompiled with -mabi=ieeelongdouble.\n+\t(FP128_CFLAGS_DECIMAL): New macro.\n+\t(IBM128_CFLAGS_DECIMAL): New macro.\n+\t* dfp-bit.c (DFP_TO_BFP): Add PowerPC _Float128 support.\n+\t(BFP_TO_DFP): Add PowerPC _Float128 support.\n+\t* dfp-bit.h (BFP_KIND): Add new binary floating point kind for\n+\tIEEE 128-bit floating point.\n+\t(DFP_TO_BFP): Add PowerPC _Float128 support.\n+\t(BFP_TO_DFP): Add PowerPC _Float128 support.\n+\t(BFP_SPRINTF): New macro.\n+\n 2021-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/savms64.h: Add .note.GNU-stack section on Linux."}, {"sha": "2f899c2224027dfe0d7ec8752dda2d7ff7f4b836", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5765cf25115fc8306806a913d90bed6edb420b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5765cf25115fc8306806a913d90bed6edb420b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2f5765cf25115fc8306806a913d90bed6edb420b", "patch": "@@ -1,3 +1,8 @@\n+2021-02-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99171\n+\t* testsuite/libgomp.fortran/dummy-procs-1.f90: New test.\n+\n 2021-02-17  Julian Brown  <julian@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-fortran/array-stride-dt-1.f90: Remove"}]}