{"sha": "4d411872e32166719e75538a644af0aa82555f03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ0MTE4NzJlMzIxNjY3MTllNzU1MzhhNjQ0YWYwYWE4MjU1NWYwMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-16T01:30:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-16T01:30:36Z"}, "message": "(eliminate_regs_in_insn): Don't recopy new_body if it is an asm_operands insn.\n\nFrom-SVN: r2877", "tree": {"sha": "eadb661418224c6a1afd77bfa94d6c0b01111082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eadb661418224c6a1afd77bfa94d6c0b01111082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d411872e32166719e75538a644af0aa82555f03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d411872e32166719e75538a644af0aa82555f03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d411872e32166719e75538a644af0aa82555f03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d411872e32166719e75538a644af0aa82555f03/comments", "author": null, "committer": null, "parents": [{"sha": "262121f07030ee05586e59aad705082990776b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262121f07030ee05586e59aad705082990776b21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/262121f07030ee05586e59aad705082990776b21"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6175b3c42b35fc631364c946b0ad8b72c3cbc486", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d411872e32166719e75538a644af0aa82555f03/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d411872e32166719e75538a644af0aa82555f03/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=4d411872e32166719e75538a644af0aa82555f03", "patch": "@@ -3001,7 +3001,9 @@ eliminate_regs_in_insn (insn, replace)\n \t things can go wrong if find_reload swaps commutative operands\n \t and one is inside RTL that has been copied while the other is not. */\n \n-      if (! replace)\n+      /* Don't copy an asm_operands because (1) there's no need and (2)\n+\t copy_rtx can't do it properly when there are multiple outputs.  */\n+      if (! replace && asm_noperands (new_body) < 0)\n \tnew_body = copy_rtx (new_body);\n \n       /* If we had a move insn but now we don't, rerecognize it.  */"}]}