{"sha": "98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThhMzZjN2NhMDVkMWFjYmQwYTA2YzQzYmIwZTBiMGM0NTk2ZWQ1ZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-10-12T16:45:46Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-10-12T16:45:46Z"}, "message": "re PR fortran/33664 (crash on invalid program)\n\n2007-10-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/33664\n\t* expr.c (gfc_specification_expr): If a function is not\n\texternal, intrinsic or pure is an error.  Set the symbol pure\n\tto prevent repeat errors.\n\n2007-10-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/33664\n\t* gfortran.dg/impure_spec_expr_1.f90: New test.\n\t* gfortran.dg/char_result_7.f90: Remove illegal test.\n\nFrom-SVN: r129267", "tree": {"sha": "23f42943c790dc9910595eb247c54e5f718debe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23f42943c790dc9910595eb247c54e5f718debe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/comments", "author": null, "committer": null, "parents": [{"sha": "e69f1bad5d88e5a7dc4970f169c7763cba4f6feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69f1bad5d88e5a7dc4970f169c7763cba4f6feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69f1bad5d88e5a7dc4970f169c7763cba4f6feb"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "c6e6d7eb64addb854d599066ef1edf0a39fc9aed", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "patch": "@@ -1,3 +1,10 @@\n+2007-10-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33664\n+\t* expr.c (gfc_specification_expr): If a function is not\n+\texternal, intrinsic or pure is an error.  Set the symbol pure\n+\tto prevent repeat errors.\n+\n 2007-10-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33636"}, {"sha": "447263a263516a71c320346673ebd8ba2bee337b", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "patch": "@@ -2526,6 +2526,18 @@ gfc_specification_expr (gfc_expr *e)\n       return FAILURE;\n     }\n \n+  if (e->expr_type == EXPR_FUNCTION\n+\t  && !e->value.function.isym\n+\t  && !e->value.function.esym\n+\t  && !gfc_pure (e->symtree->n.sym))\n+    {\n+      gfc_error (\"Function '%s' at %L must be PURE\",\n+\t\t e->symtree->n.sym->name, &e->where);\n+      /* Prevent repeat error messages.  */\n+      e->symtree->n.sym->attr.pure = 1;\n+      return FAILURE;\n+    }\n+\n   if (e->rank != 0)\n     {\n       gfc_error (\"Expression at %L must be scalar\", &e->where);"}, {"sha": "890da97d183f43d6bb2d52db73ef7158e069a4b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "patch": "@@ -1,3 +1,9 @@\n+2007-10-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33664\n+\t* gfortran.dg/impure_spec_expr_1.f90: New test.\n+\t* gfortran.dg/char_result_7.f90: Remove illegal test.\n+\n 2007-10-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR 11001"}, {"sha": "7b8692f403eaf0d9cbb05afa33d3b685f739763e", "filename": "gcc/testsuite/gfortran.dg/char_result_7.f90", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_result_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_result_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_result_7.f90?ref=98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "patch": "@@ -16,7 +16,6 @@ end function double\n   end interface\n \n   call test (f1 (double, 100), 200)\n-  call test (f2 (double, 70), 140)\n \n   call indirect (double)\n contains\n@@ -31,20 +30,13 @@ end function fn\n     f1 = ''\n   end function f1\n \n-  function f2 (fn, i)\n-    integer :: i, fn\n-    character (len = fn (i)) :: f2\n-    f2 = ''\n-  end function f2\n-\n   subroutine indirect (fn)\n     interface\n       integer pure function fn (x)\n         integer, intent (in) :: x\n       end function fn\n     end interface\n     call test (f1 (fn, 100), 200)\n-    call test (f2 (fn, 70), 140)\n   end subroutine indirect\n \n   subroutine test (string, length)"}, {"sha": "8c42a57c44ef86efcb9b8ec406361be95bf9ff95", "filename": "gcc/testsuite/gfortran.dg/impure_spec_expr_1.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_spec_expr_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_spec_expr_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_spec_expr_1.f90?ref=98a36c7ca05d1acbd0a06c43bb0e0b0c4596ed5e", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! Checks the fix for PR33664, in which the apparent function reference\n+! n(1) caused a seg-fault.\n+!\n+! Contributed by Henrik Holst <holst@matmech.com>\n+!\n+module test\n+contains\n+  subroutine func_1(u,n)\n+    integer :: n\n+    integer :: u(n(1))  ! { dg-error \"must be PURE\" }\n+  end subroutine\n+end module test\n+! { dg-final { cleanup-modules \"test\" } }\n+"}]}