{"sha": "d1a31689a736cdfb5e7cfa01f1168e338510e63b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFhMzE2ODlhNzM2Y2RmYjVlN2NmYTAxZjExNjhlMzM4NTEwZTYzYg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-09-08T23:23:51Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-09-15T17:30:37Z"}, "message": "rtlanal: fix subreg handling in set_noop_p ()\n\nThe following s390 rtx is errneously considered a no-op:\n\n(set (subreg:DF (reg:TF %f0) 8) (subreg:DF (reg:V1TF %f0) 8))\n\nHere, SET_DEST is a second register in a floating-point register pair,\nand SET_SRC is the second half of a vector register, so they refer to\ndifferent bits.\n\nFix by treating subregs of registers in different modes conservatively.\n\ngcc/ChangeLog:\n\n2020-09-11  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* rtlanal.c (set_noop_p): Treat subregs of registers in\n\tdifferent modes conservatively.", "tree": {"sha": "0c90ca9e27c98e4402580771fa12ccb264fb115e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c90ca9e27c98e4402580771fa12ccb264fb115e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1a31689a736cdfb5e7cfa01f1168e338510e63b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a31689a736cdfb5e7cfa01f1168e338510e63b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a31689a736cdfb5e7cfa01f1168e338510e63b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a31689a736cdfb5e7cfa01f1168e338510e63b/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d876184c095d6ac41e64eaf4e2c78864d2d935c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d876184c095d6ac41e64eaf4e2c78864d2d935c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d876184c095d6ac41e64eaf4e2c78864d2d935c1"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "01130a10783d63d7dc541eaf70743241fa15394f", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1a31689a736cdfb5e7cfa01f1168e338510e63b/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1a31689a736cdfb5e7cfa01f1168e338510e63b/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=d1a31689a736cdfb5e7cfa01f1168e338510e63b", "patch": "@@ -1619,6 +1619,10 @@ set_noop_p (const_rtx set)\n \treturn 0;\n       src = SUBREG_REG (src);\n       dst = SUBREG_REG (dst);\n+      if (GET_MODE (src) != GET_MODE (dst))\n+\t/* It is hard to tell whether subregs refer to the same bits, so act\n+\t   conservatively and return 0.  */\n+\treturn 0;\n     }\n \n   /* It is a NOOP if destination overlaps with selected src vector"}]}