{"sha": "774a9b00ca266a7ce1abbd4d59d6470598256401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc0YTliMDBjYTI2NmE3Y2UxYWJiZDRkNTlkNjQ3MDU5ODI1NjQwMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-15T19:14:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-15T19:14:55Z"}, "message": "re PR c++/17972 (const/pure functions result in bad asm)\n\n\tPR c++/17972\n\t* tree-inline.c (expand_call_inline): Set TREE_SIDE_EFFECTS\n\ton the STMT_EXPR wrapping up the inlined body.\n\nFrom-SVN: r92210", "tree": {"sha": "a18fec77f84f3bf26eb79a6bc22ae87ad38cfa21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a18fec77f84f3bf26eb79a6bc22ae87ad38cfa21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/774a9b00ca266a7ce1abbd4d59d6470598256401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774a9b00ca266a7ce1abbd4d59d6470598256401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/774a9b00ca266a7ce1abbd4d59d6470598256401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774a9b00ca266a7ce1abbd4d59d6470598256401/comments", "author": null, "committer": null, "parents": [{"sha": "172b87995cadacf87ba6ce1517b8a49acc3db0ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172b87995cadacf87ba6ce1517b8a49acc3db0ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/172b87995cadacf87ba6ce1517b8a49acc3db0ae"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "fee46800edfb7ba41ee618ee786a549bd8a66151", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=774a9b00ca266a7ce1abbd4d59d6470598256401", "patch": "@@ -1,3 +1,9 @@\n+2004-12-15  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR c++/17972\n+\t* tree-inline.c (expand_call_inline): Set TREE_SIDE_EFFECTS\n+\ton the STMT_EXPR wrapping up the inlined body.\n+\n 2004-12-15  Vladimir Makarov  <vmakarov@redhat.com>\n             Steven Bosscher  <stevenb@suse.de>\n \tPR middle end/17340"}, {"sha": "06dd868513a0b0e76744019f3ef2c9f114c65d66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=774a9b00ca266a7ce1abbd4d59d6470598256401", "patch": "@@ -1,3 +1,7 @@\n+2004-12-15  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* g++.dg/opt/inline9.C: New test.\n+\n 2004-12-15  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/18993"}, {"sha": "10ccb47dc79f780ebbea1248a8cc9b7fc889cd39", "filename": "gcc/testsuite/g++.dg/opt/inline9.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C?ref=774a9b00ca266a7ce1abbd4d59d6470598256401", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/17972\n+// Origin: Michal Ostrowski <mostrows@watson.ibm.com>\n+// Testcase by Alan Modra <amodra@bigpond.net.au>\n+// { dg-do run }\n+// { dg-options \"-O\" }\n+// { dg-options \"-O -mtune=i686\" { target i?86-*-* } }\n+\n+struct thread_info\n+{\n+  short preempt_count;\n+} x;\n+\n+static inline struct thread_info *cti (void) __attribute__ ((const));\n+static inline struct thread_info *cti (void)\n+{\n+  return &x;\n+}\n+\n+void fn (void) __attribute__ ((noinline));\n+void fn (void)\n+{\n+  ++cti()->preempt_count;\n+}\n+\n+int main (void)\n+{\n+  fn ();\n+  return 0;\n+}"}, {"sha": "61fe66dbb085683acbc28ce87dedd2eb8f06a848", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774a9b00ca266a7ce1abbd4d59d6470598256401/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=774a9b00ca266a7ce1abbd4d59d6470598256401", "patch": "@@ -1625,8 +1625,11 @@ expand_call_inline (tree *tp, int *walk_subtrees, void *data)\n   splay_tree_delete (id->decl_map);\n   id->decl_map = st;\n \n-  /* The new expression has side-effects if the old one did.  */\n-  TREE_SIDE_EFFECTS (expr) = TREE_SIDE_EFFECTS (t);\n+  /* Although, from the semantic viewpoint, the new expression has\n+     side-effects only if the old one did, it is not possible, from\n+     the technical viewpoint, to evaluate the body of a function\n+     multiple times without serious havoc.  */\n+  TREE_SIDE_EFFECTS (expr) = 1;\n \n   tsi_link_before (&id->tsi, expr, TSI_SAME_STMT);\n "}]}