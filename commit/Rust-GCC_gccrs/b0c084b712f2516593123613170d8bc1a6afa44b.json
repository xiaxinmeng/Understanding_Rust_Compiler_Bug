{"sha": "b0c084b712f2516593123613170d8bc1a6afa44b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBjMDg0YjcxMmYyNTE2NTkzMTIzNjEzMTcwZDhiYzFhNmFmYTQ0Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-12-07T22:05:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-12-07T22:05:59Z"}, "message": "re PR bootstrap/50237 (bootstrap comparison failure for libcpp/lex.o)\n\n\tPR bootstrap/50237\n\t* internal.h (_cpp_init_lexer): New prototype.\n\t* init.c (init_library): Call it.\n\t* lex.c (init_vectorized_lexer): Remove constructor attribute,\n\tadd inline keyword.\n\t(HAVE_init_vectorized_lexer): Define.\n\t(_cpp_init_lexer): New function.\n\nFrom-SVN: r182090", "tree": {"sha": "4c4b018e43b3666acb5b9a2b111beb302182fae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c4b018e43b3666acb5b9a2b111beb302182fae9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0c084b712f2516593123613170d8bc1a6afa44b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c084b712f2516593123613170d8bc1a6afa44b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c084b712f2516593123613170d8bc1a6afa44b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c084b712f2516593123613170d8bc1a6afa44b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff180d72d9b327acc96bfacf45af71dac5b04006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff180d72d9b327acc96bfacf45af71dac5b04006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff180d72d9b327acc96bfacf45af71dac5b04006"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "890075db64d067b22ee30d68e857da1f6ef2caad", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=b0c084b712f2516593123613170d8bc1a6afa44b", "patch": "@@ -1,3 +1,13 @@\n+2011-12-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/50237\n+\t* internal.h (_cpp_init_lexer): New prototype.\n+\t* init.c (init_library): Call it.\n+\t* lex.c (init_vectorized_lexer): Remove constructor attribute,\n+\tadd inline keyword.\n+\t(HAVE_init_vectorized_lexer): Define.\n+\t(_cpp_init_lexer): New function.\n+\n 2011-12-03  Dodji Seketeli  <dodji@redhat.com>\n \n \t* macro.c (tokens_buff_remove_last_token)"}, {"sha": "ff006b11502254c98dea414ef74c3b9c2aaec6b6", "filename": "libcpp/init.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=b0c084b712f2516593123613170d8bc1a6afa44b", "patch": "@@ -134,6 +134,8 @@ init_library (void)\n     {\n       initialized = 1;\n \n+      _cpp_init_lexer ();\n+\n       /* Set up the trigraph map.  This doesn't need to do anything if\n \t we were compiled with a compiler that supports C99 designated\n \t initializers.  */"}, {"sha": "7e2932a60357b160289da71138c2edd665f3032c", "filename": "libcpp/internal.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finternal.h?ref=b0c084b712f2516593123613170d8bc1a6afa44b", "patch": "@@ -653,6 +653,7 @@ extern int _cpp_equiv_tokens (const cpp_token *, const cpp_token *);\n extern void _cpp_init_tokenrun (tokenrun *, unsigned int);\n extern cpp_hashnode *_cpp_lex_identifier (cpp_reader *, const char *);\n extern int _cpp_remaining_tokens_num_in_context (cpp_context *);\n+extern void _cpp_init_lexer (void);\n \n /* In init.c.  */\n extern void _cpp_maybe_push_include_file (cpp_reader *);"}, {"sha": "0ad9660a76ba7a174d603466e81b76f6769a3c97", "filename": "libcpp/lex.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c084b712f2516593123613170d8bc1a6afa44b/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=b0c084b712f2516593123613170d8bc1a6afa44b", "patch": "@@ -477,7 +477,8 @@ search_line_sse42 (const uchar *s, const uchar *end)\n typedef const uchar * (*search_line_fast_type) (const uchar *, const uchar *);\n static search_line_fast_type search_line_fast;\n \n-static void __attribute__((constructor))\n+#define HAVE_init_vectorized_lexer 1\n+static inline void\n init_vectorized_lexer (void)\n {\n   unsigned dummy, ecx = 0, edx = 0;\n@@ -638,6 +639,16 @@ search_line_fast (const uchar *s, const uchar *end ATTRIBUTE_UNUSED)\n \n #endif\n \n+/* Initialize the lexer if needed.  */\n+\n+void\n+_cpp_init_lexer (void)\n+{\n+#ifdef HAVE_init_vectorized_lexer\n+  init_vectorized_lexer ();\n+#endif\n+}\n+\n /* Returns with a logical line that contains no escaped newlines or\n    trigraphs.  This is a time-critical inner loop.  */\n void"}]}