{"sha": "b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjljZDU0ZDI2NTVmYzQyYTM0ZmM3ZDIwNDEyMmVjN2UxNTRhODlkOA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-03T11:01:19Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-03T11:01:19Z"}, "message": "pa.c (insn_sets_and_refs_are_delayed): New function.\n\n        * pa.c (insn_sets_and_refs_are_delayed): New function.\n        * pa.h (INSN_SETS_ARE_DELAYED): Use it.\n        (INSN_REFERENCES_ARE_DELAYED): Likewise.\n\nFrom-SVN: r25003", "tree": {"sha": "284e920fec0c11f407896882311c7d3a0f727d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/284e920fec0c11f407896882311c7d3a0f727d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/comments", "author": null, "committer": null, "parents": [{"sha": "978fd0cb53e8dd35d048c82ea099900c3ba41a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978fd0cb53e8dd35d048c82ea099900c3ba41a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978fd0cb53e8dd35d048c82ea099900c3ba41a3f"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "267f494b2ad936c7ee210f12e0492c565c4e7259", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "patch": "@@ -1,3 +1,9 @@\n+Wed Feb  3 11:56:23 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.c (insn_sets_and_refs_are_delayed): New function.\n+\t* pa.h (INSN_SETS_ARE_DELAYED): Use it.\n+\t(INSN_REFERENCES_ARE_DELAYED): Likewise.\n+ \n Wed Feb  3 06:24:49 1999  Richard Earnshaw (rearnsha@arm.com)\n \n \t* config/arm/t-arm-elf (LIBGCC2_CFLAGS): Delete."}, {"sha": "82a69c40f2c595d3f832ef765ced244c81bfc828", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "patch": "@@ -6436,3 +6436,31 @@ pa_can_combine_p (new, anchor, floater, reversed, dest, src1, src2)\n   /* If we get here, then everything is good.  */\n   return 1;\n }\n+\n+/* Return nonzero if sets and references for INSN are delayed.\n+\n+   Millicode insns are actually function calls with some special\n+   constraints on arguments and register usage.\n+\n+   Millicode calls always expect their arguments in the integer argument\n+   registers, and always return their result in %r29 (ret1).  They\n+   are expected to clobber their arguments, %r1, %r29, and %r31 and\n+   nothing else.\n+\n+   By considering this effects delayed reorg reorg can put insns\n+   which set the argument registers into the delay slot of the millicode\n+   call -- thus they act more like traditional CALL_INSNs.\n+\n+   get_attr_type will try to recognize the given insn, so make sure to\n+   filter out things it will not accept -- SEQUENCE, USE and CLOBBER insns\n+   in particular.  */\n+int\n+insn_sets_and_refs_are_delayed (insn)\n+     rtx insn;\n+{\n+  return ((GET_CODE (insn) == INSN \n+\t   && GET_CODE (PATTERN (insn)) != SEQUENCE\n+\t   && GET_CODE (PATTERN (insn)) != USE\n+\t   && GET_CODE (PATTERN (insn)) != CLOBBER\n+\t   && get_attr_type (insn) == TYPE_MILLI));\n+}"}, {"sha": "bc28d13e912dbee9b39dc16912bfac7b18392fe0", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cd54d2655fc42a34fc7d204122ec7e154a89d8/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=b9cd54d2655fc42a34fc7d204122ec7e154a89d8", "patch": "@@ -2002,19 +2002,8 @@ while (0)\n    get_attr_type will try to recognize the given insn, so make sure to\n    filter out things it will not accept -- SEQUENCE, USE and CLOBBER insns\n    in particular.  */\n-#define INSN_SETS_ARE_DELAYED(X) \\\n-  ((GET_CODE (X) == INSN\t\t\t\\\n-    && GET_CODE (PATTERN (X)) != SEQUENCE\t\\\n-    && GET_CODE (PATTERN (X)) != USE\t\t\\\n-    && GET_CODE (PATTERN (X)) != CLOBBER\t\\\n-    && get_attr_type (X) == TYPE_MILLI))\n-\n-#define INSN_REFERENCES_ARE_DELAYED(X) \\\n-  ((GET_CODE (X) == INSN\t\t\t\\\n-    && GET_CODE (PATTERN (X)) != SEQUENCE\t\\\n-    && GET_CODE (PATTERN (X)) != USE\t\t\\\n-    && GET_CODE (PATTERN (X)) != CLOBBER\t\\\n-    && get_attr_type (X) == TYPE_MILLI))\n+#define INSN_SETS_ARE_DELAYED(X) (insn_sets_and_refs_are_delayed (X))\n+#define INSN_REFERENCES_ARE_DELAYED(X) (insn_sets_and_refs_are_delayed (X))\n \n \f\n /* Control the assembler format that we output.  */\n@@ -2526,6 +2515,7 @@ extern int hppa_can_use_return_insn_p ();\n extern int is_function_label_plus_const ();\n extern int jump_in_call_delay ();\n extern enum reg_class secondary_reload_class ();\n+extern int insn_sets_and_refs_are_delayed ();\n \n /* Declare functions defined in pa.c and used in templates.  */\n "}]}