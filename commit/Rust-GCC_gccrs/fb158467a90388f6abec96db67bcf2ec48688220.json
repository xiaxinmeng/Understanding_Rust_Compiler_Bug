{"sha": "fb158467a90388f6abec96db67bcf2ec48688220", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIxNTg0NjdhOTAzODhmNmFiZWM5NmRiNjdiY2YyZWM0ODY4ODIyMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2000-11-28T19:34:59Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-28T19:34:59Z"}, "message": "calls.c (expand_call): Don't disable tail recursion based on the loop nest.\n\n        * calls.c (expand_call): Don't disable tail recursion based\n        on the loop nest.\n\nFrom-SVN: r37822", "tree": {"sha": "365dfb99a39adb3aee76744a962f6eb29b522a77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/365dfb99a39adb3aee76744a962f6eb29b522a77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb158467a90388f6abec96db67bcf2ec48688220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb158467a90388f6abec96db67bcf2ec48688220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb158467a90388f6abec96db67bcf2ec48688220", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb158467a90388f6abec96db67bcf2ec48688220/comments", "author": null, "committer": null, "parents": [{"sha": "8a0dd1b1a9d3f91bafb42c2a35c155b94068ef83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0dd1b1a9d3f91bafb42c2a35c155b94068ef83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0dd1b1a9d3f91bafb42c2a35c155b94068ef83"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "d988b9c2e40b13a59f29a94768bbed773505b826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb158467a90388f6abec96db67bcf2ec48688220/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb158467a90388f6abec96db67bcf2ec48688220/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb158467a90388f6abec96db67bcf2ec48688220", "patch": "@@ -1,3 +1,8 @@\n+2000-11-28  Jan Hubicka  <jh@suse.cz>\n+\n+\t* calls.c (expand_call): Don't disable tail recursion based\n+\ton the loop nest.\n+\n 2000-11-28  Neil Booth  <neilb@earthling.net>\n \n         * tradcpp.c (enum node_type): New hash types T_ASSERT, T_UNASSERT."}, {"sha": "ad79078f8831e080e9236223621559f500362ce0", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb158467a90388f6abec96db67bcf2ec48688220/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb158467a90388f6abec96db67bcf2ec48688220/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=fb158467a90388f6abec96db67bcf2ec48688220", "patch": "@@ -2416,9 +2416,8 @@ expand_call (exp, target, ignore)\n \n   /* Tail calls can make things harder to debug, and we're traditionally\n      pushed these optimizations into -O2.  Don't try if we're already\n-     expanding a call, as that means we're an argument.  Similarly, if\n-     there's pending loops or cleanups we know there's code to follow\n-     the call.\n+     expanding a call, as that means we're an argument.  Don't try if\n+     there's cleanups, as we know there's code to follow the call.\n \n      If rtx_equal_function_value_matters is false, that means we've\n      finished with regular parsing.  Which means that some of the\n@@ -2429,7 +2428,6 @@ expand_call (exp, target, ignore)\n   if (currently_expanding_call++ != 0\n       || !flag_optimize_sibling_calls\n       || !rtx_equal_function_value_matters\n-      || !stmt_loop_nest_empty ()\n       || any_pending_cleanups (1)\n       || args_size.var)\n     try_tail_call = try_tail_recursion = 0;"}]}