{"sha": "7fd549d24fda05c859fb17697c51c16886902dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZkNTQ5ZDI0ZmRhMDVjODU5ZmIxNzY5N2M1MWMxNjg4NjkwMmRhZA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2017-05-19T13:32:48Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2017-05-19T13:32:48Z"}, "message": "OpenACC 2.5 default (present) clause\n\n\tgcc/c/\n\t* c-parser.c (c_parser_omp_clause_default): Handle\n\t\"OMP_CLAUSE_DEFAULT_PRESENT\".\n\tgcc/cp/\n\t* parser.c (cp_parser_omp_clause_default): Handle\n\t\"OMP_CLAUSE_DEFAULT_PRESENT\".\n\tgcc/fortran/\n\t* gfortran.h (enum gfc_omp_default_sharing): Add\n\t\"OMP_DEFAULT_PRESENT\".\n\t* dump-parse-tree.c (show_omp_clauses): Handle it.\n\t* openmp.c (gfc_match_omp_clauses): Likewise.\n\t* trans-openmp.c (gfc_trans_omp_clauses): Likewise.\n\tgcc/\n\t* tree-core.h (enum omp_clause_default_kind): Add\n\t\"OMP_CLAUSE_DEFAULT_PRESENT\".\n\t* tree-pretty-print.c (dump_omp_clause): Handle it.\n\t* gimplify.c (enum gimplify_omp_var_data): Add\n\t\"GOVD_MAP_FORCE_PRESENT\".\n\t(gimplify_adjust_omp_clauses_1): Map it to\n\t\"GOMP_MAP_FORCE_PRESENT\".\n\t(oacc_default_clause): Handle \"OMP_CLAUSE_DEFAULT_PRESENT\".\n\tgcc/testsuite/\n\t* c-c++-common/goacc/default-1.c: Update.\n\t* c-c++-common/goacc/default-2.c: Likewise.\n\t* c-c++-common/goacc/default-4.c: Likewise.\n\t* gfortran.dg/goacc/default-1.f95: Likewise.\n\t* gfortran.dg/goacc/default-4.f: Likewise.\n\t* c-c++-common/goacc/default-5.c: New file.\n\t* gfortran.dg/goacc/default-5.f: Likewise.\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c++/template-reduction.C: Update.\n\t* testsuite/libgomp.oacc-c-c++-common/nested-2.c: Update.\n\t* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.\n\nFrom-SVN: r248280", "tree": {"sha": "a1ddeff9f474c8969d68b1b0b726f4ca763411f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1ddeff9f474c8969d68b1b0b726f4ca763411f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fd549d24fda05c859fb17697c51c16886902dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd549d24fda05c859fb17697c51c16886902dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd549d24fda05c859fb17697c51c16886902dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd549d24fda05c859fb17697c51c16886902dad/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d0afa9fafec1711b52259b9b8caebf51380216d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0afa9fafec1711b52259b9b8caebf51380216d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0afa9fafec1711b52259b9b8caebf51380216d"}], "stats": {"total": 398, "additions": 346, "deletions": 52}, "files": [{"sha": "c40af474ea396b10e4205010b1dba8950b888579", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,5 +1,14 @@\n 2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* tree-core.h (enum omp_clause_default_kind): Add\n+\t\"OMP_CLAUSE_DEFAULT_PRESENT\".\n+\t* tree-pretty-print.c (dump_omp_clause): Handle it.\n+\t* gimplify.c (enum gimplify_omp_var_data): Add\n+\t\"GOVD_MAP_FORCE_PRESENT\".\n+\t(gimplify_adjust_omp_clauses_1): Map it to\n+\t\"GOMP_MAP_FORCE_PRESENT\".\n+\t(oacc_default_clause): Handle \"OMP_CLAUSE_DEFAULT_PRESENT\".\n+\n \t* gimplify.c (oacc_default_clause): Clarify.\n \n 2017-05-19  Nathan Sidwell  <nathan@acm.org>"}, {"sha": "a70eaf910b097ad4f5b23ab5fec1bea4e9427344", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,3 +1,8 @@\n+2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_default): Handle\n+\t\"OMP_CLAUSE_DEFAULT_PRESENT\".\n+\n 2017-05-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* config-lang.in (gtfiles): Add c-family/c-format.c."}, {"sha": "2e013161a9af457a026bbbcb147792a9c99c23b1", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -11057,10 +11057,10 @@ c_parser_omp_clause_copyprivate (c_parser *parser, tree list)\n }\n \n /* OpenMP 2.5:\n-   default ( shared | none )\n+   default ( none | shared )\n \n-   OpenACC 2.0:\n-   default (none) */\n+   OpenACC:\n+   default ( none | present ) */\n \n static tree\n c_parser_omp_clause_default (c_parser *parser, tree list, bool is_oacc)\n@@ -11083,6 +11083,12 @@ c_parser_omp_clause_default (c_parser *parser, tree list, bool is_oacc)\n \t  kind = OMP_CLAUSE_DEFAULT_NONE;\n \t  break;\n \n+\tcase 'p':\n+\t  if (strcmp (\"present\", p) != 0 || !is_oacc)\n+\t    goto invalid_kind;\n+\t  kind = OMP_CLAUSE_DEFAULT_PRESENT;\n+\t  break;\n+\n \tcase 's':\n \t  if (strcmp (\"shared\", p) != 0 || is_oacc)\n \t    goto invalid_kind;\n@@ -11099,7 +11105,7 @@ c_parser_omp_clause_default (c_parser *parser, tree list, bool is_oacc)\n     {\n     invalid_kind:\n       if (is_oacc)\n-\tc_parser_error (parser, \"expected %<none%>\");\n+\tc_parser_error (parser, \"expected %<none%> or %<present%>\");\n       else\n \tc_parser_error (parser, \"expected %<none%> or %<shared%>\");\n     }"}, {"sha": "f2dced41ddb169b6b65ad5810a60f1a383743a79", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,5 +1,8 @@\n 2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* parser.c (cp_parser_omp_clause_default): Handle\n+\t\"OMP_CLAUSE_DEFAULT_PRESENT\".\n+\n \t* parser.c (cp_parser_omp_clause_default): Avoid printing more\n \tthan one syntax error message.\n "}, {"sha": "b345110fbc4e733282a4a51efaaba97f15a2d6e1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -31456,10 +31456,10 @@ cp_parser_omp_clause_collapse (cp_parser *parser, tree list, location_t location\n }\n \n /* OpenMP 2.5:\n-   default ( shared | none )\n+   default ( none | shared )\n \n-   OpenACC 2.0\n-   default (none) */\n+   OpenACC:\n+   default ( none | present ) */\n \n static tree\n cp_parser_omp_clause_default (cp_parser *parser, tree list,\n@@ -31483,6 +31483,12 @@ cp_parser_omp_clause_default (cp_parser *parser, tree list,\n \t  kind = OMP_CLAUSE_DEFAULT_NONE;\n \t  break;\n \n+\tcase 'p':\n+\t  if (strcmp (\"present\", p) != 0 || !is_oacc)\n+\t    goto invalid_kind;\n+\t  kind = OMP_CLAUSE_DEFAULT_PRESENT;\n+\t  break;\n+\n \tcase 's':\n \t  if (strcmp (\"shared\", p) != 0 || is_oacc)\n \t    goto invalid_kind;\n@@ -31499,7 +31505,7 @@ cp_parser_omp_clause_default (cp_parser *parser, tree list,\n     {\n     invalid_kind:\n       if (is_oacc)\n-\tcp_parser_error (parser, \"expected %<none%>\");\n+\tcp_parser_error (parser, \"expected %<none%> or %<present%>\");\n       else\n \tcp_parser_error (parser, \"expected %<none%> or %<shared%>\");\n     }"}, {"sha": "4b7f1f4e4bfd2ecae73505bf6f8f4c142304f819", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,3 +1,11 @@\n+2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gfortran.h (enum gfc_omp_default_sharing): Add\n+\t\"OMP_DEFAULT_PRESENT\".\n+\t* dump-parse-tree.c (show_omp_clauses): Handle it.\n+\t* openmp.c (gfc_match_omp_clauses): Likewise.\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Likewise.\n+\n 2017-05-18  Fritz Reese <fritzoreese@gmail.com>\n \n \tPR fortran/79968"}, {"sha": "49b23d8697e849e737e1d2088cd650f416f36011", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1283,6 +1283,7 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n \tcase OMP_DEFAULT_PRIVATE: type = \"PRIVATE\"; break;\n \tcase OMP_DEFAULT_SHARED: type = \"SHARED\"; break;\n \tcase OMP_DEFAULT_FIRSTPRIVATE: type = \"FIRSTPRIVATE\"; break;\n+\tcase OMP_DEFAULT_PRESENT: type = \"PRESENT\"; break;\n \tdefault:\n \t  gcc_unreachable ();\n \t}"}, {"sha": "26b89bee98ec6cbbc5eb1bbc8afae3d494fabcc0", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1241,7 +1241,8 @@ enum gfc_omp_default_sharing\n   OMP_DEFAULT_NONE,\n   OMP_DEFAULT_PRIVATE,\n   OMP_DEFAULT_SHARED,\n-  OMP_DEFAULT_FIRSTPRIVATE\n+  OMP_DEFAULT_FIRSTPRIVATE,\n+  OMP_DEFAULT_PRESENT\n };\n \n enum gfc_omp_proc_bind_kind"}, {"sha": "80146e2f1dc96177c9ec2468e6652545ed55570e", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1080,13 +1080,19 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t      if (gfc_match (\"default ( none )\") == MATCH_YES)\n \t\tc->default_sharing = OMP_DEFAULT_NONE;\n \t      else if (openacc)\n-\t\t/* c->default_sharing = OMP_DEFAULT_UNKNOWN */;\n-\t      else if (gfc_match (\"default ( shared )\") == MATCH_YES)\n-\t\tc->default_sharing = OMP_DEFAULT_SHARED;\n-\t      else if (gfc_match (\"default ( private )\") == MATCH_YES)\n-\t\tc->default_sharing = OMP_DEFAULT_PRIVATE;\n-\t      else if (gfc_match (\"default ( firstprivate )\") == MATCH_YES)\n-\t\tc->default_sharing = OMP_DEFAULT_FIRSTPRIVATE;\n+\t\t{\n+\t\t  if (gfc_match (\"default ( present )\") == MATCH_YES)\n+\t\t    c->default_sharing = OMP_DEFAULT_PRESENT;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  if (gfc_match (\"default ( firstprivate )\") == MATCH_YES)\n+\t\t    c->default_sharing = OMP_DEFAULT_FIRSTPRIVATE;\n+\t\t  else if (gfc_match (\"default ( private )\") == MATCH_YES)\n+\t\t    c->default_sharing = OMP_DEFAULT_PRIVATE;\n+\t\t  else if (gfc_match (\"default ( shared )\") == MATCH_YES)\n+\t\t    c->default_sharing = OMP_DEFAULT_SHARED;\n+\t\t}\n \t      if (c->default_sharing != OMP_DEFAULT_UNKNOWN)\n \t\tcontinue;\n \t    }"}, {"sha": "1d254c6904daedd74677f9058fe790e048cbc226", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -2564,6 +2564,9 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \tcase OMP_DEFAULT_FIRSTPRIVATE:\n \t  OMP_CLAUSE_DEFAULT_KIND (c) = OMP_CLAUSE_DEFAULT_FIRSTPRIVATE;\n \t  break;\n+\tcase OMP_DEFAULT_PRESENT:\n+\t  OMP_CLAUSE_DEFAULT_KIND (c) = OMP_CLAUSE_DEFAULT_PRESENT;\n+\t  break;\n \tdefault:\n \t  gcc_unreachable ();\n \t}"}, {"sha": "810d9f4a3e1b659ff9019d6c6c965b80598db0f4", "filename": "gcc/gimplify.c", "status": "modified", "additions": 43, "deletions": 9, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -99,6 +99,9 @@ enum gimplify_omp_var_data\n   /* Flag for GOVD_MAP, if it is a forced mapping.  */\n   GOVD_MAP_FORCE = 262144,\n \n+  /* Flag for GOVD_MAP: must be present already.  */\n+  GOVD_MAP_FORCE_PRESENT = 524288,\n+\n   GOVD_DATA_SHARE_CLASS = (GOVD_SHARED | GOVD_PRIVATE | GOVD_FIRSTPRIVATE\n \t\t\t   | GOVD_LASTPRIVATE | GOVD_REDUCTION | GOVD_LINEAR\n \t\t\t   | GOVD_LOCAL)\n@@ -6956,8 +6959,13 @@ oacc_default_clause (struct gimplify_omp_ctx *ctx, tree decl, unsigned flags)\n       rkind = \"kernels\";\n \n       if (AGGREGATE_TYPE_P (type))\n-\t/* Aggregates default to 'present_or_copy'.  */\n-\tflags |= GOVD_MAP;\n+\t{\n+\t  /* Aggregates default to 'present_or_copy', or 'present'.  */\n+\t  if (ctx->default_kind != OMP_CLAUSE_DEFAULT_PRESENT)\n+\t    flags |= GOVD_MAP;\n+\t  else\n+\t    flags |= GOVD_MAP | GOVD_MAP_FORCE_PRESENT;\n+\t}\n       else\n \t/* Scalars default to 'copy'.  */\n \tflags |= GOVD_MAP | GOVD_MAP_FORCE;\n@@ -6970,8 +6978,13 @@ oacc_default_clause (struct gimplify_omp_ctx *ctx, tree decl, unsigned flags)\n       if (on_device || declared)\n \tflags |= GOVD_MAP;\n       else if (AGGREGATE_TYPE_P (type))\n-\t/* Aggregates default to 'present_or_copy'.  */\n-\tflags |= GOVD_MAP;\n+\t{\n+\t  /* Aggregates default to 'present_or_copy', or 'present'.  */\n+\t  if (ctx->default_kind != OMP_CLAUSE_DEFAULT_PRESENT)\n+\t    flags |= GOVD_MAP;\n+\t  else\n+\t    flags |= GOVD_MAP | GOVD_MAP_FORCE_PRESENT;\n+\t}\n       else\n \t/* Scalars default to 'firstprivate'.  */\n \tflags |= GOVD_FIRSTPRIVATE;\n@@ -6991,6 +7004,8 @@ oacc_default_clause (struct gimplify_omp_ctx *ctx, tree decl, unsigned flags)\n \t     DECL_NAME (lang_hooks.decls.omp_report_decl (decl)), rkind);\n       inform (ctx->location, \"enclosing OpenACC %qs construct\", rkind);\n     }\n+  else if (ctx->default_kind == OMP_CLAUSE_DEFAULT_PRESENT)\n+    ; /* Handled above.  */\n   else\n     gcc_checking_assert (ctx->default_kind == OMP_CLAUSE_DEFAULT_SHARED);\n \n@@ -8708,11 +8723,30 @@ gimplify_adjust_omp_clauses_1 (splay_tree_node n, void *data)\n     }\n   else if (code == OMP_CLAUSE_MAP)\n     {\n-      int kind = (flags & GOVD_MAP_TO_ONLY\n-\t\t  ? GOMP_MAP_TO\n-\t\t  : GOMP_MAP_TOFROM);\n-      if (flags & GOVD_MAP_FORCE)\n-\tkind |= GOMP_MAP_FLAG_FORCE;\n+      int kind;\n+      /* Not all combinations of these GOVD_MAP flags are actually valid.  */\n+      switch (flags & (GOVD_MAP_TO_ONLY\n+\t\t       | GOVD_MAP_FORCE\n+\t\t       | GOVD_MAP_FORCE_PRESENT))\n+\t{\n+\tcase 0:\n+\t  kind = GOMP_MAP_TOFROM;\n+\t  break;\n+\tcase GOVD_MAP_FORCE:\n+\t  kind = GOMP_MAP_TOFROM | GOMP_MAP_FLAG_FORCE;\n+\t  break;\n+\tcase GOVD_MAP_TO_ONLY:\n+\t  kind = GOMP_MAP_TO;\n+\t  break;\n+\tcase GOVD_MAP_TO_ONLY | GOVD_MAP_FORCE:\n+\t  kind = GOMP_MAP_TO | GOMP_MAP_FLAG_FORCE;\n+\t  break;\n+\tcase GOVD_MAP_FORCE_PRESENT:\n+\t  kind = GOMP_MAP_FORCE_PRESENT;\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n       OMP_CLAUSE_SET_MAP_KIND (clause, kind);\n       if (DECL_SIZE (decl)\n \t  && TREE_CODE (DECL_SIZE (decl)) != INTEGER_CST)"}, {"sha": "e8e2df5c9a9550375ba96b98e30ec1540102089a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,5 +1,13 @@\n 2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* c-c++-common/goacc/default-1.c: Update.\n+\t* c-c++-common/goacc/default-2.c: Likewise.\n+\t* c-c++-common/goacc/default-4.c: Likewise.\n+\t* gfortran.dg/goacc/default-1.f95: Likewise.\n+\t* gfortran.dg/goacc/default-4.f: Likewise.\n+\t* c-c++-common/goacc/default-5.c: New file.\n+\t* gfortran.dg/goacc/default-5.f: Likewise.\n+\n \t* c-c++-common/goacc/default-1.c: New file.\n \t* c-c++-common/goacc/default-2.c: Likewise.\n \t* c-c++-common/goacc/data-default-1.c: Remove file, including its"}, {"sha": "23c25ab45a9e017684f8772e23248c245f495d05", "filename": "gcc/testsuite/c-c++-common/goacc/default-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-1.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -6,4 +6,9 @@ void f1 ()\n   ;\n #pragma acc parallel default (none)\n   ;\n+\n+#pragma acc kernels default (present)\n+  ;\n+#pragma acc parallel default (present)\n+  ;\n }"}, {"sha": "c0cdd1263bd112c5f6e5a6cfafb11fa8bc4da724", "filename": "gcc/testsuite/c-c++-common/goacc/default-2.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-2.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -7,39 +7,39 @@ void f1 ()\n #pragma acc parallel default /* { dg-error \"expected .\\\\(. before end of line\" } */\n   ;\n \n-#pragma acc kernels default ( /* { dg-error \"expected .none. before end of line\" } */\n+#pragma acc kernels default ( /* { dg-error \"expected .none. or .present. before end of line\" } */\n   ;\n-#pragma acc parallel default ( /* { dg-error \"expected .none. before end of line\" } */\n+#pragma acc parallel default ( /* { dg-error \"expected .none. or .present. before end of line\" } */\n   ;\n \n-#pragma acc kernels default (, /* { dg-error \"expected .none. before .,. token\" } */\n+#pragma acc kernels default (, /* { dg-error \"expected .none. or .present. before .,. token\" } */\n   ;\n-#pragma acc parallel default (, /* { dg-error \"expected .none. before .,. token\" } */\n+#pragma acc parallel default (, /* { dg-error \"expected .none. or .present. before .,. token\" } */\n   ;\n \n-#pragma acc kernels default () /* { dg-error \"expected .none. before .\\\\). token\" } */\n+#pragma acc kernels default () /* { dg-error \"expected .none. or .present. before .\\\\). token\" } */\n   ;\n-#pragma acc parallel default () /* { dg-error \"expected .none. before .\\\\). token\" } */\n+#pragma acc parallel default () /* { dg-error \"expected .none. or .present. before .\\\\). token\" } */\n   ;\n \n-#pragma acc kernels default (,) /* { dg-error \"expected .none. before .,. token\" } */\n+#pragma acc kernels default (,) /* { dg-error \"expected .none. or .present. before .,. token\" } */\n   ;\n-#pragma acc parallel default (,) /* { dg-error \"expected .none. before .,. token\" } */\n+#pragma acc parallel default (,) /* { dg-error \"expected .none. or .present. before .,. token\" } */\n   ;\n \n-#pragma acc kernels default (firstprivate) /* { dg-error \"expected .none. before .firstprivate.\" } */\n+#pragma acc kernels default (firstprivate) /* { dg-error \"expected .none. or .present. before .firstprivate.\" } */\n   ;\n-#pragma acc parallel default (firstprivate) /* { dg-error \"expected .none. before .firstprivate.\" } */\n+#pragma acc parallel default (firstprivate) /* { dg-error \"expected .none. or .present. before .firstprivate.\" } */\n   ;\n \n-#pragma acc kernels default (private) /* { dg-error \"expected .none. before .private.\" } */\n+#pragma acc kernels default (private) /* { dg-error \"expected .none. or .present. before .private.\" } */\n   ;\n-#pragma acc parallel default (private) /* { dg-error \"expected .none. before .private.\" } */\n+#pragma acc parallel default (private) /* { dg-error \"expected .none. or .present. before .private.\" } */\n   ;\n \n-#pragma acc kernels default (shared) /* { dg-error \"expected .none. before .shared.\" } */\n+#pragma acc kernels default (shared) /* { dg-error \"expected .none. or .present. before .shared.\" } */\n   ;\n-#pragma acc parallel default (shared) /* { dg-error \"expected .none. before .shared.\" } */\n+#pragma acc parallel default (shared) /* { dg-error \"expected .none. or .present. before .shared.\" } */\n   ;\n \n #pragma acc kernels default (none /* { dg-error \"expected .\\\\). before end of line\" } */"}, {"sha": "dfa79bbbe6ef0e50e68945e8a6812d7e8c71e149", "filename": "gcc/testsuite/c-c++-common/goacc/default-4.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -43,3 +43,24 @@ void f2 ()\n     }\n   }\n }\n+\n+void f3 ()\n+{\n+  int f3_a = 2;\n+  float f3_b[2];\n+\n+#pragma acc data copyin (f3_a) copyout (f3_b)\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_from:f3_b \\[^\\\\)\\]+\\\\) map\\\\(force_to:f3_a\" 1 \"gimple\" } } */\n+  {\n+#pragma acc kernels default (present)\n+    /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(present\\\\) map\\\\(tofrom:f3_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f3_a\" 1 \"gimple\" } } */\n+    {\n+      f3_b[0] = f3_a;\n+    }\n+#pragma acc parallel default (present)\n+    /* { dg-final { scan-tree-dump-times \"omp target oacc_parallel default\\\\(present\\\\) map\\\\(tofrom:f3_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f3_a\" 1 \"gimple\" } } */\n+    {\n+      f3_b[0] = f3_a;\n+    }\n+  }\n+}"}, {"sha": "37e3c3555cde7ca73eb73deccc880eaeef514032", "filename": "gcc/testsuite/c-c++-common/goacc/default-5.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-5.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -0,0 +1,20 @@\n+/* OpenACC default (present) clause.  */\n+\n+/* { dg-additional-options \"-fdump-tree-gimple\" } */\n+\n+void f1 ()\n+{\n+  int f1_a = 2;\n+  float f1_b[2];\n+\n+#pragma acc kernels default (present)\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(present\\\\) map\\\\(force_present:f1_b \\[^\\\\)\\]+\\\\) map\\\\(force_tofrom:f1_a\" 1 \"gimple\" } } */\n+  {\n+    f1_b[0] = f1_a;\n+  }\n+#pragma acc parallel default (present)\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_parallel default\\\\(present\\\\) map\\\\(force_present:f1_b \\[^\\\\)\\]+\\\\) firstprivate\\\\(f1_a\\\\)\" 1 \"gimple\" } } */\n+  {\n+    f1_b[0] = f1_a;\n+  }\n+}"}, {"sha": "41fa9446b91081f63b5823215980c26b1ef49d07", "filename": "gcc/testsuite/gfortran.dg/goacc/default-1.f95", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-1.f95?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -7,4 +7,9 @@ subroutine f1\n   !$acc end kernels\n   !$acc parallel default (none)\n   !$acc end parallel\n+\n+  !$acc kernels default (present)\n+  !$acc end kernels\n+  !$acc parallel default (present)\n+  !$acc end parallel\n end subroutine f1"}, {"sha": "77291f43effd24497433ad49c80003bc8f6764b1", "filename": "gcc/testsuite/gfortran.dg/goacc/default-4.f", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -37,3 +37,21 @@ SUBROUTINE F2\n !$ACC END PARALLEL\n !$ACC END DATA\n       END SUBROUTINE F2\n+\n+      SUBROUTINE F3\n+      IMPLICIT NONE\n+      INTEGER :: F3_A = 2\n+      REAL, DIMENSION (2) :: F3_B\n+\n+!$ACC DATA COPYIN (F3_A) COPYOUT (F3_B)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_to:f3_a \\[^\\\\)\\]+\\\\) map\\\\(force_from:f3_b\" 1 \"gimple\" } }\n+!$ACC KERNELS DEFAULT (PRESENT)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(present\\\\) map\\\\(tofrom:f3_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f3_a\" 1 \"gimple\" } }\n+      F3_B(1) = F3_A;\n+!$ACC END KERNELS\n+!$ACC PARALLEL DEFAULT (PRESENT)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_parallel default\\\\(present\\\\) map\\\\(tofrom:f3_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f3_a\" 1 \"gimple\" } }\n+      F3_B(1) = F3_A;\n+!$ACC END PARALLEL\n+!$ACC END DATA\n+      END SUBROUTINE F3"}, {"sha": "9dc83cbe601d08d5c6292b0da8073631d3809dca", "filename": "gcc/testsuite/gfortran.dg/goacc/default-5.f", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-5.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-5.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-5.f?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -0,0 +1,18 @@\n+! OpenACC default (present) clause.\n+\n+! { dg-additional-options \"-fdump-tree-gimple\" } \n+\n+      SUBROUTINE F1\n+      IMPLICIT NONE\n+      INTEGER :: F1_A = 2\n+      REAL, DIMENSION (2) :: F1_B\n+\n+!$ACC KERNELS DEFAULT (PRESENT)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(present\\\\) map\\\\(force_present:f1_b \\[^\\\\)\\]+\\\\) map\\\\(force_tofrom:f1_a\" 1 \"gimple\" } }\n+      F1_B(1) = F1_A;\n+!$ACC END KERNELS\n+!$ACC PARALLEL DEFAULT (PRESENT)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_parallel default\\\\(present\\\\) map\\\\(force_present:f1_b \\[^\\\\)\\]+\\\\) firstprivate\\\\(f1_a\\\\)\" 1 \"gimple\" } }\n+      F1_B(1) = F1_A;\n+!$ACC END PARALLEL\n+      END SUBROUTINE F1"}, {"sha": "ea73477163d835b98e37b55a38f25d59087a4be3", "filename": "gcc/tree-core.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -357,7 +357,7 @@ enum omp_clause_code {\n   /* OpenMP clause: ordered [(constant-integer-expression)].  */\n   OMP_CLAUSE_ORDERED,\n \n-  /* OpenMP clause: default.  */\n+  /* OpenACC/OpenMP clause: default.  */\n   OMP_CLAUSE_DEFAULT,\n \n   /* OpenACC/OpenMP clause: collapse (constant-integer-expression).  */\n@@ -499,6 +499,7 @@ enum omp_clause_default_kind {\n   OMP_CLAUSE_DEFAULT_NONE,\n   OMP_CLAUSE_DEFAULT_PRIVATE,\n   OMP_CLAUSE_DEFAULT_FIRSTPRIVATE,\n+  OMP_CLAUSE_DEFAULT_PRESENT,\n   OMP_CLAUSE_DEFAULT_LAST\n };\n "}, {"sha": "b70e32573eecfb993839985ef3c89698c394faaa", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -502,6 +502,9 @@ dump_omp_clause (pretty_printer *pp, tree clause, int spc, dump_flags_t flags)\n \tcase OMP_CLAUSE_DEFAULT_FIRSTPRIVATE:\n \t  pp_string (pp, \"firstprivate\");\n \t  break;\n+\tcase OMP_CLAUSE_DEFAULT_PRESENT:\n+\t  pp_string (pp, \"present\");\n+\t  break;\n \tdefault:\n \t  gcc_unreachable ();\n \t}"}, {"sha": "460605b1b8aee24da41e4028268d0e0dbd9dd4ba", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,5 +1,11 @@\n 2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* testsuite/libgomp.oacc-c++/template-reduction.C: Update.\n+\t* testsuite/libgomp.oacc-c-c++-common/nested-2.c: Update.\n+\t* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.\n+\n \t* plugin/plugin-hsa.c (DLSYM_FN, init_hsa_runtime_functions):\n \tDebug output for failure.\n "}, {"sha": "ede0aae14c62ea5c87b0d75b5b993a3ec0f2a6a0", "filename": "libgomp/testsuite/libgomp.oacc-c++/template-reduction.C", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Ftemplate-reduction.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Ftemplate-reduction.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Ftemplate-reduction.C?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -32,6 +32,28 @@ sum ()\n   return s;\n }\n \n+// Check template with default (present)\n+\n+template<typename T> T\n+sum_default_present ()\n+{\n+  T s = 0;\n+  T array[n];\n+\n+  for (int i = 0; i < n; i++)\n+    array[i] = i+1;\n+\n+#pragma acc enter data copyin (array)\n+\n+#pragma acc parallel loop num_gangs (10) gang reduction (+:s) default (present)\n+  for (int i = 0; i < n; i++)\n+    s += array[i];\n+\n+#pragma acc exit data delete (array)\n+\n+  return s;\n+}\n+\n // Check present and async\n \n template<typename T> T\n@@ -86,6 +108,9 @@ main()\n   if (sum<int> () != result)\n     __builtin_abort ();\n \n+  if (sum_default_present<int> () != result)\n+    __builtin_abort ();\n+\n #pragma acc enter data copyin (a)\n   if (async_sum (a) != result)\n     __builtin_abort ();"}, {"sha": "51b3b18ad666cd4a79d6c177b4b86763f5514a7e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/nested-2.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fnested-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fnested-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fnested-2.c?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -137,5 +137,36 @@ main (int argc, char *argv[])\n             abort ();\n     }\n \n+\n+#pragma acc enter data create (a)\n+\n+#pragma acc parallel default (present)\n+    {\n+      for (int j = 0; j < N; ++j)\n+\ta[j] = j + 1;\n+    }\n+\n+#pragma acc update host (a)\n+\n+    for (i = 0; i < N; ++i)\n+      {\n+        if (a[i] != i + 1)\n+\t  abort ();\n+      }\n+\n+#pragma acc kernels default (present)\n+    {\n+      for (int j = 0; j < N; ++j)\n+\ta[j] = j + 2;\n+    }\n+\n+#pragma acc exit data copyout (a)\n+\n+    for (i = 0; i < N; ++i)\n+      {\n+        if (a[i] != i + 2)\n+\t  abort ();\n+      }\n+\n     return 0;\n }"}, {"sha": "df4aca06a704fb0a5fb1bf8eff9dc13533846a3a", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-4-2.f90", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4-2.f90?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,4 +1,5 @@\n-! Copy of data-4.f90 with self exchanged with host for !acc update.\n+! Copy of data-4.f90 with self exchanged with host for !acc update, and with\n+! default (present) clauses added.\n \n ! { dg-do run }\n \n@@ -19,7 +20,7 @@ program asyncwait\n \n   !$acc enter data copyin (a(1:N)) copyin (b(1:N)) copyin (N) async\n \n-  !$acc parallel async wait\n+  !$acc parallel default (present) async wait\n   !$acc loop\n   do i = 1, N\n      b(i) = a(i)\n@@ -39,7 +40,7 @@ program asyncwait\n \n   !$acc update device (a(1:N), b(1:N)) async (1)\n \n-  !$acc parallel async (1) wait (1)\n+  !$acc parallel default (present) async (1) wait (1)\n   !$acc loop\n   do i = 1, N\n      b(i) = a(i)\n@@ -62,19 +63,19 @@ program asyncwait\n   !$acc enter data copyin (c(1:N), d(1:N)) async (1)\n   !$acc update device (a(1:N), b(1:N)) async (1)\n \n-  !$acc parallel async (1)\n+  !$acc parallel default (present) async (1)\n   do i = 1, N\n      b(i) = (a(i) * a(i) * a(i)) / a(i)\n   end do\n   !$acc end parallel\n \n-  !$acc parallel async (1)\n+  !$acc parallel default (present) async (1)\n   do i = 1, N\n      c(i) = (a(i) * 4) / a(i)\n   end do\n   !$acc end parallel\n \n-  !$acc parallel async (1)\n+  !$acc parallel default (present) async (1)\n   do i = 1, N\n      d(i) = ((a(i) * a(i)  + a(i)) / a(i)) - a(i)\n   end do\n@@ -100,25 +101,25 @@ program asyncwait\n   !$acc enter data copyin (e(1:N)) async (1)\n   !$acc update device (a(1:N), b(1:N), c(1:N), d(1:N)) async (1)\n \n-  !$acc parallel async (1)\n+  !$acc parallel default (present) async (1)\n   do i = 1, N\n      b(i) = (a(i) * a(i) * a(i)) / a(i)\n   end do\n   !$acc end parallel\n \n-  !$acc parallel async (1)\n+  !$acc parallel default (present) async (1)\n   do i = 1, N\n      c(i) = (a(i) * 4) / a(i)\n   end do\n   !$acc end parallel\n \n-  !$acc parallel async (1)\n+  !$acc parallel default (present) async (1)\n   do i = 1, N\n      d(i) = ((a(i) * a(i) + a(i)) / a(i)) - a(i)\n   end do\n   !$acc end parallel\n \n-  !$acc parallel wait (1) async (1)\n+  !$acc parallel default (present) wait (1) async (1)\n   do i = 1, N\n      e(i) = a(i) + b(i) + c(i) + d(i)\n   end do"}, {"sha": "d8ceb60b4930fa60dac9a136297ee788cf1f74bb", "filename": "libgomp/testsuite/libgomp.oacc-fortran/default-1.f90", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdefault-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdefault-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdefault-1.f90?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -51,4 +51,14 @@ program main\n \n   if (a .ne. 7.0) call abort\n \n+  ! The default (present) clause doesn't affect scalar variables; these will\n+  ! still get an implicit copy clause added.\n+  !$acc kernels default (present)\n+    c = a\n+    a = 1.0\n+    a = a + c\n+  !$acc end kernels\n+\n+  if (a .ne. 8.0) call abort\n+\n end program main"}, {"sha": "53b2cd060f27e7a911dca956c239c1e041c1125e", "filename": "libgomp/testsuite/libgomp.oacc-fortran/non-scalar-data.f90", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd549d24fda05c859fb17697c51c16886902dad/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90?ref=7fd549d24fda05c859fb17697c51c16886902dad", "patch": "@@ -1,5 +1,6 @@\n ! Ensure that a non-scalar dummy arguments which are implicitly used inside\n-! offloaded regions are properly mapped using present_or_copy.\n+! offloaded regions are properly mapped using present_or_copy, or (default)\n+! present.\n \n ! { dg-do run }\n \n@@ -12,6 +13,7 @@ program main\n   n = size\n \n   !$acc data copy(array)\n+\n   call kernels(array, n)\n \n   !$acc update host(array)\n@@ -20,12 +22,29 @@ program main\n      if (array(i) .ne. i) call abort\n   end do\n \n+  call kernels_default_present(array, n)\n+\n+  !$acc update host(array)\n+\n+  do i = 1, n\n+     if (array(i) .ne. i+1) call abort\n+  end do\n+\n   call parallel(array, n)\n-  !$acc end data\n+\n+  !$acc update host(array)\n \n   do i = 1, n\n      if (array(i) .ne. i+i) call abort\n   end do\n+\n+  call parallel_default_present(array, n)\n+\n+  !$acc end data\n+\n+  do i = 1, n\n+     if (array(i) .ne. i+i+1) call abort\n+  end do\n end program main\n \n subroutine kernels (array, n)\n@@ -39,6 +58,16 @@ subroutine kernels (array, n)\n   !$acc end kernels\n end subroutine kernels\n \n+subroutine kernels_default_present (array, n)\n+  integer, dimension (n) :: array\n+  integer :: n, i\n+\n+  !$acc kernels default(present)\n+  do i = 1, n\n+     array(i) = i+1\n+  end do\n+  !$acc end kernels\n+end subroutine kernels_default_present\n \n subroutine parallel (array, n)\n   integer, dimension (n) :: array\n@@ -50,3 +79,14 @@ subroutine parallel (array, n)\n   end do\n   !$acc end parallel\n end subroutine parallel\n+\n+subroutine parallel_default_present (array, n)\n+  integer, dimension (n) :: array\n+  integer :: n, i\n+\n+  !$acc parallel default(present)\n+  do i = 1, n\n+     array(i) = i+i+1\n+  end do\n+  !$acc end parallel\n+end subroutine parallel_default_present"}]}