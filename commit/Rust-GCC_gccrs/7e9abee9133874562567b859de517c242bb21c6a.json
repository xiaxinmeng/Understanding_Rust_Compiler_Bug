{"sha": "7e9abee9133874562567b859de517c242bb21c6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U5YWJlZTkxMzM4NzQ1NjI1NjdiODU5ZGU1MTdjMjQyYmIyMWM2YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-06-06T03:15:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-06-06T03:15:33Z"}, "message": "pt.c (instantiate_decl): Tell the repository code about the clones, not the cloned functions.\n\n\t* pt.c (instantiate_decl): Tell the repository code about the\n\tclones, not the cloned functions.\n\t* repo.c (repo_template_used): Explicitly instantiate the cloned\n\tfunction, not the clones.\n\nFrom-SVN: r42931", "tree": {"sha": "f99ffcef61eba4bd28518b2193f2fe8f16f1a224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f99ffcef61eba4bd28518b2193f2fe8f16f1a224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e9abee9133874562567b859de517c242bb21c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9abee9133874562567b859de517c242bb21c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e9abee9133874562567b859de517c242bb21c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9abee9133874562567b859de517c242bb21c6a/comments", "author": null, "committer": null, "parents": [{"sha": "7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "7c0ebc5f754f89d9a8437e823e6718f01dd079ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7e9abee9133874562567b859de517c242bb21c6a", "patch": "@@ -1,3 +1,10 @@\n+2001-06-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* pt.c (instantiate_decl): Tell the repository code about the\n+\tclones, not the cloned functions.\n+\t* repo.c (repo_template_used): Explicitly instantiate the cloned\n+\tfunction, not the clones.\n+\n 2001-06-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* call.c (build_user_type_conversion_1): Set ICS_USER_FLAG and"}, {"sha": "b82ac028f64fbc6e5006da13d80a231a4f147a96", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7e9abee9133874562567b859de517c242bb21c6a", "patch": "@@ -9821,7 +9821,25 @@ instantiate_decl (d, defer_ok)\n \n   if (pattern_defined)\n     {\n-      repo_template_used (d);\n+      /* Let the repository code that this template definition is\n+\t available.\n+\n+\t The repository doesn't need to know about cloned functions\n+\t because they never actually show up in the object file.  It\n+\t does need to know about the clones; those are the symbols\n+\t that the linker will be emitting error messages about.  */\n+      if (DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (d)\n+\t  || DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P (d))\n+\t{\n+\t  tree t;\n+\n+\t  for (t = TREE_CHAIN (d);\n+\t       t && DECL_CLONED_FUNCTION_P (t); \n+\t       t = TREE_CHAIN (t))\n+\t    repo_template_used (t);\n+\t}\n+      else\n+\trepo_template_used (d);\n \n       if (flag_external_templates && ! DECL_INTERFACE_KNOWN (d))\n \t{"}, {"sha": "f2f95919d56ee0088fa1088d13edcbf151f6c1bc", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=7e9abee9133874562567b859de517c242bb21c6a", "patch": "@@ -137,7 +137,13 @@ repo_template_used (t)\n   else if (DECL_P (t))\n     {\n       if (IDENTIFIER_REPO_CHOSEN (id))\n-\tmark_decl_instantiated (t, 0);\n+\t/* It doesn't make sense to instantiate a clone, so we\n+\t   instantiate the cloned function instead.  Note that this\n+\t   approach will not work correctly if collect2 assigns\n+\t   different clones to different files -- but it shouldn't.  */\n+\tmark_decl_instantiated (DECL_CLONED_FUNCTION_P (t)\n+\t\t\t\t? DECL_CLONED_FUNCTION (t) : t, \n+\t\t\t\t0);\n     }\n   else\n     my_friendly_abort (1);"}, {"sha": "6180acbb57e2403ccf20b74c0d39f48fc729b9a6", "filename": "gcc/testsuite/g++.old-deja/g++.pt/repo4.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frepo4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9abee9133874562567b859de517c242bb21c6a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frepo4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frepo4.C?ref=7e9abee9133874562567b859de517c242bb21c6a", "patch": "@@ -0,0 +1,15 @@\n+// Build then link:\n+// Special g++ Options: -frepo\n+\n+template <class T>\n+struct S {\n+  ~S ();\n+};\n+\n+template <class T>\n+S<T>::~S () {}\n+\n+int main ()\n+{\n+  S<int> s;\n+}"}]}