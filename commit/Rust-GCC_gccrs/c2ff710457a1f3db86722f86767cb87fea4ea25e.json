{"sha": "c2ff710457a1f3db86722f86767cb87fea4ea25e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmZjcxMDQ1N2ExZjNkYjg2NzIyZjg2NzY3Y2I4N2ZlYTRlYTI1ZQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-07-23T23:20:31Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-07-23T23:20:31Z"}, "message": "[Darwin] Fix PR87030 add missed commit hunks.\n\nMessed up the commit, and missed changes to gcc/config.gcc and to the comments\nin some of the headers.\n\n2019-07-24  Iain Sandoe  <iain@sandoe.co.uk>\n\ngcc/\n\n\tPR bootstrap/87030\n\t* config/i386/darwin.h (REAL_LIBGCC_SPEC): Move from here...\n\t* config/i386/darwin32-biarch.h .. to here.\n\t* config/i386/darwin64-biarch.h: Adjust comments.\n\t* config/rs6000/darwin32-biarch.h: Likewise.\n\t* config/rs6000/darwin64-biarch.h: Likewise.\n\t* config.gcc: Missed commit from r273746\n\t(*-*-darwin*): Don't include CPU t-darwin here.\n\t(i[34567]86-*-darwin*): Adjust to use biarch files. Produce\n\tan error message if i686-darwin configuration is attempted for\n\tDarwin >= 18.\n\nFrom-SVN: r273749", "tree": {"sha": "990f32a2aed984aa487e992538989d9d2f2de0ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/990f32a2aed984aa487e992538989d9d2f2de0ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2ff710457a1f3db86722f86767cb87fea4ea25e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ff710457a1f3db86722f86767cb87fea4ea25e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ff710457a1f3db86722f86767cb87fea4ea25e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ff710457a1f3db86722f86767cb87fea4ea25e/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c078c9f4478d6d27dd8d2b7f8a6f8e9a5849dc47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c078c9f4478d6d27dd8d2b7f8a6f8e9a5849dc47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c078c9f4478d6d27dd8d2b7f8a6f8e9a5849dc47"}], "stats": {"total": 120, "additions": 76, "deletions": 44}, "files": [{"sha": "7da7cdbaa6e8952e1ec9de670008ce4751be2a53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -1,3 +1,17 @@\n+2019-07-24  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR bootstrap/87030\n+\t* config/i386/darwin.h (REAL_LIBGCC_SPEC): Move from here...\n+\t* config/i386/darwin32-biarch.h .. to here.\n+\t* config/i386/darwin64-biarch.h: Adjust comments.\n+\t* config/rs6000/darwin32-biarch.h: Likewise.\n+\t* config/rs6000/darwin64-biarch.h: Likewise.\n+\t* config.gcc: Missed commit from r273746\n+\t(*-*-darwin*): Don't include CPU t-darwin here.\n+\t(i[34567]86-*-darwin*): Adjust to use biarch files. Produce\n+\tan error message if i686-darwin configuration is attempted for\n+\tDarwin >= 18.\n+\n 2019-07-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR bootstrap/87030"}, {"sha": "e55c67a4248f596a2756b87f8466e594be216b11", "filename": "gcc/config.gcc", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -673,7 +673,7 @@ x86_cpus=\"generic intel\"\n # Common parts for widely ported systems.\n case ${target} in\n *-*-darwin*)\n-  tmake_file=\"t-darwin ${cpu_type}/t-darwin\"\n+  tmake_file=\"t-darwin \"\n   tm_file=\"${tm_file} darwin.h\"\n   case ${target} in\n   *-*-darwin9*)\n@@ -1645,16 +1645,25 @@ hppa[12]*-*-hpux11*)\n \t\tdwarf2=no\n \tfi\n \t;;\n+i[34567]86-*-darwin1[89]*)\n+\techo \"Error: 32bit target is not supported after Darwin17\" 1>&2\n+\t;;\n i[34567]86-*-darwin*)\n \tneed_64bit_isa=yes\n \t# Baseline choice for a machine that allows m64 support.\n \twith_cpu=${with_cpu:-core2}\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin32-biarch t-slibgcc\"\n+\ttm_file=\"${tm_file} ${cpu_type}/darwin32-biarch.h\"\n+\t;;\n+x86_64-*-darwin1[89]* | x86_64-*-darwin2[01]*)\n+\t# Only 64b from now\n+\twith_cpu=${with_cpu:-core2}\n \ttmake_file=\"${tmake_file} t-slibgcc\"\n \t;;\n x86_64-*-darwin*)\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc\"\n-\ttm_file=\"${tm_file} ${cpu_type}/darwin64.h\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64-biarch t-slibgcc\"\n+\ttm_file=\"${tm_file} ${cpu_type}/darwin64-biarch.h\"\n \t;;\n i[34567]86-*-elfiamcu)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/iamcu.h\"\n@@ -2616,24 +2625,31 @@ pdp11-*-*)\n #\textra_headers=\n #\t;;\n powerpc-*-darwin*)\n-\textra_options=\"${extra_options} rs6000/darwin.opt\"\n+\textra_options=\"${extra_options} ${cpu_type}/darwin.opt\"\n \tcase ${target} in\n-\t  *-darwin1[0-9]* | *-darwin[8-9]*)\n-\t    tmake_file=\"${tmake_file} rs6000/t-darwin8\"\n-\t    tm_file=\"${tm_file} rs6000/darwin8.h\"\n+\t  *-darwin1[0-9]* | *-darwin9*)\n+\t    tmake_file=\"${tmake_file} ${cpu_type}/t-darwin32-biarch\"\n+\t    tm_file=\"${tm_file} ${cpu_type}/darwin32-biarch.h\"\n+\t    ;;\n+\t  *-darwin8*)\n+\t    tmake_file=\"${tmake_file} ${cpu_type}/t-darwin32-biarch\"\n+\t    tm_file=\"${tm_file} ${cpu_type}/darwin32-biarch.h\"\n+\t    tm_file=\"${tm_file} ${cpu_type}/darwin8.h\"\n \t    ;;\n \t  *-darwin7*)\n-\t    tm_file=\"${tm_file} rs6000/darwin7.h\"\n+\t    tm_file=\"${tm_file} ${cpu_type}/darwin7.h\"\n \t    ;;\n-\t  *-darwin[0-6]*)\n+\t  *-darwin[456]*)\n+\t    # Earlier - ingle arch, with 32b only\n+\t    # OS X 10.0, the first edition is Darwin4\n \t    ;;\n \tesac\n \ttmake_file=\"${tmake_file} t-slibgcc\"\n \t;;\n powerpc64-*-darwin*)\n \textra_options=\"${extra_options} ${cpu_type}/darwin.opt\"\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc\"\n-\ttm_file=\"${tm_file} ${cpu_type}/darwin8.h ${cpu_type}/darwin64.h\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64-biarch t-slibgcc\"\n+\ttm_file=\"${tm_file} ${cpu_type}/darwin64-biarch.h\"\n \t;;\n powerpc*-*-freebsd*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h ${fbsd_tm_file} rs6000/sysv4.h\""}, {"sha": "d9c8f200b9c41dc906c0aa17d0539455f92ce139", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -39,32 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #endif\n #endif\n \n-/* WORKAROUND pr80556:\n-   For x86_64 Darwin10 and later, the unwinder is in libunwind (redirected\n-   from libSystem).  This doesn't use the keymgr (see keymgr.c) and therefore\n-   the calls that libgcc makes to obtain the KEYMGR_GCC3_DW2_OBJ_LIST are not\n-   updated to include new images, and might not even be valid for a single\n-   image.\n-   Therefore, for 64b exes at least, we must use the libunwind implementation,\n-   even when static-libgcc is specified.  We put libSystem first so that\n-   unwinder symbols are satisfied from there. */\n-#undef REAL_LIBGCC_SPEC\n-#define REAL_LIBGCC_SPEC\t\t\t\t\t\t   \\\n-   \"%{static-libgcc|static: \t\t\t\t\t\t   \\\n-      %{m64:%:version-compare(>= 10.6 mmacosx-version-min= -lSystem)}\t   \\\n-        -lgcc_eh -lgcc;\t\t\t\t\t\t\t   \\\n-      shared-libgcc|fexceptions|fgnu-runtime:\t\t\t\t   \\\n-       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_s.10.4)\t   \\\n-       %:version-compare(>< 10.5 10.6 mmacosx-version-min= -lgcc_s.10.5)   \\\n-       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_ext.10.4)\t   \\\n-       %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_ext.10.5)\t   \\\n-       -lgcc ;\t\t\t\t\t\t\t\t   \\\n-      :%:version-compare(>< 10.3.9 10.5 mmacosx-version-min= -lgcc_s.10.4) \\\n-       %:version-compare(>< 10.5 10.6 mmacosx-version-min= -lgcc_s.10.5)   \\\n-       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_ext.10.4)\t   \\\n-       %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_ext.10.5)\t   \\\n-       -lgcc }\"\n-\n /* Size of the Obj-C jump buffer.  */\n #define OBJC_JBLEN ((TARGET_64BIT) ? ((9 * 2) + 3 + 16) : (18))\n "}, {"sha": "8dcc4a3b0b39653ce627e26ed4b1ff9a5c19e939", "filename": "gcc/config/i386/darwin32-biarch.h", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Fi386%2Fdarwin32-biarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Fi386%2Fdarwin32-biarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin32-biarch.h?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -1,6 +1,6 @@\n-/* Target definitions for i386 running Darwin.\n+/* Target definitions for i386 running Darwin with a 32b host and supporting\n+   a 64b multilib.\n    Copyright (C) 2019 Free Software Foundation, Inc.\n-   Contributed by Apple Computer Inc.\n \n This file is part of GCC.\n \n@@ -21,6 +21,32 @@ along with GCC; see the file COPYING3.  If not see\n #undef DARWIN_ARCH_SPEC\n #define DARWIN_ARCH_SPEC \"%{m64:x86_64;:i386}\"\n \n+/* WORKAROUND pr80556:\n+   For x86_64 Darwin10 and later, the unwinder is in libunwind (redirected\n+   from libSystem).  This doesn't use the keymgr (see keymgr.c) and therefore\n+   the calls that libgcc makes to obtain the KEYMGR_GCC3_DW2_OBJ_LIST are not\n+   updated to include new images, and might not even be valid for a single\n+   image.\n+   Therefore, for 64b exes at least, we must use the libunwind implementation,\n+   even when static-libgcc is specified.  We put libSystem first so that\n+   unwinder symbols are satisfied from there. */\n+#undef REAL_LIBGCC_SPEC\n+#define REAL_LIBGCC_SPEC\t\t\t\t\t\t   \\\n+   \"%{static-libgcc|static: \t\t\t\t\t\t   \\\n+      %{m64:%:version-compare(>= 10.6 mmacosx-version-min= -lSystem)}\t   \\\n+        -lgcc_eh -lgcc;\t\t\t\t\t\t\t   \\\n+      shared-libgcc|fexceptions|fgnu-runtime:\t\t\t\t   \\\n+       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_s.10.4)\t   \\\n+       %:version-compare(>< 10.5 10.6 mmacosx-version-min= -lgcc_s.10.5)   \\\n+       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_ext.10.4)\t   \\\n+       %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_ext.10.5)\t   \\\n+       -lgcc ;\t\t\t\t\t\t\t\t   \\\n+      :%:version-compare(>< 10.3.9 10.5 mmacosx-version-min= -lgcc_s.10.4) \\\n+       %:version-compare(>< 10.5 10.6 mmacosx-version-min= -lgcc_s.10.5)   \\\n+       %:version-compare(!> 10.5 mmacosx-version-min= -lgcc_ext.10.4)\t   \\\n+       %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_ext.10.5)\t   \\\n+       -lgcc }\"\n+\n #undef  DARWIN_SUBARCH_SPEC\n #define DARWIN_SUBARCH_SPEC DARWIN_ARCH_SPEC\n "}, {"sha": "5af7665c2a7bb9c1edca0f0eb39fbd7c0f218b7b", "filename": "gcc/config/i386/darwin64-biarch.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Fi386%2Fdarwin64-biarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Fi386%2Fdarwin64-biarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin64-biarch.h?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -1,4 +1,5 @@\n-/* Target definitions for x86_64 running Darwin.\n+/* Target definitions for x86_64 running Darwin with a 64b host supporting a\n+   32b multilib.\n    Copyright (C) 2006-2019 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n "}, {"sha": "743aabfcea22cdd671497e36a8ecad6efd5c5f50", "filename": "gcc/config/rs6000/darwin32-biarch.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Frs6000%2Fdarwin32-biarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Frs6000%2Fdarwin32-biarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin32-biarch.h?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -1,6 +1,6 @@\n-/* Target definitions for PowerPC running Darwin (Mac OS X).\n-   Copyright (C) 2006-2019 Free Software Foundation, Inc.\n-   Contributed by Apple Computer Inc.\n+/* Target definitions for PowerPC running Darwin (Mac OS X) for a 32b host\n+   with a 64b miultilib.\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "4f789544b9ec42b8f40fc2df78f768f3011115ac", "filename": "gcc/config/rs6000/darwin64-biarch.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ff710457a1f3db86722f86767cb87fea4ea25e/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h?ref=c2ff710457a1f3db86722f86767cb87fea4ea25e", "patch": "@@ -1,4 +1,5 @@\n-/* Target definitions for PowerPC64 running Darwin (Mac OS X).\n+/* Target definitions for PowerPC64 running Darwin (Mac OS X) for a 64b host\n+   supporting a 32b multilib.\n    Copyright (C) 2006-2019 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n "}]}