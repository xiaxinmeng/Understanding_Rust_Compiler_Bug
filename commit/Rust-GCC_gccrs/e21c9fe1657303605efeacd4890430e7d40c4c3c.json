{"sha": "e21c9fe1657303605efeacd4890430e7d40c4c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxYzlmZTE2NTczMDM2MDVlZmVhY2Q0ODkwNDMwZTdkNDBjNGMzYw==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-12-10T12:53:26Z"}, "committer": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-12-10T12:53:26Z"}, "message": "Enhanced dumping of expansion", "tree": {"sha": "f8d3b2df34664d4df8a3262ebe99bfde92056669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8d3b2df34664d4df8a3262ebe99bfde92056669"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e21c9fe1657303605efeacd4890430e7d40c4c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21c9fe1657303605efeacd4890430e7d40c4c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e21c9fe1657303605efeacd4890430e7d40c4c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21c9fe1657303605efeacd4890430e7d40c4c3c/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4232e46d87feb91749edb944681d0d4b93475c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4232e46d87feb91749edb944681d0d4b93475c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4232e46d87feb91749edb944681d0d4b93475c3a"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "da5094877ac707cc6dad1aa9de841a6bfdd586ad", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c9fe1657303605efeacd4890430e7d40c4c3c/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c9fe1657303605efeacd4890430e7d40c4c3c/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=e21c9fe1657303605efeacd4890430e7d40c4c3c", "patch": "@@ -344,8 +344,8 @@ Session::enable_dump (std::string arg)\n   if (arg == \"all\")\n     {\n       rust_error_at (Location (),\n-\t\t     \"dumping all is not supported as of now. choose %<lex%>, \"\n-\t\t     \"%<parse%>, or %<target_options%>\");\n+\t\t     \"dumping all is not supported as of now. choose %<lex%>, %<parse%>, \"\n+         \"or %<target_options%>\");\n       return false;\n     }\n   else if (arg == \"lex\")\n@@ -390,8 +390,8 @@ Session::enable_dump (std::string arg)\n   else\n     {\n       rust_error_at (Location (),\n-\t\t     \"dump option %qs was unrecognised. choose %<lex%>, \"\n-\t\t     \"%<parse%>, or %<target_options%>\",\n+\t\t     \"dump option %qs was unrecognised. choose %<lex%>, %<parse%>, or \"\n+         \"%<target_options%>\",\n \t\t     arg.c_str ());\n       return false;\n     }\n@@ -472,7 +472,6 @@ Session::parse_file (const char *filename)\n   if (options.dump_option == CompileOptions::REGISTER_PLUGINS_DUMP)\n     {\n       // TODO: what do I dump here?\n-      return;\n     }\n \n   // injection pipeline stage\n@@ -482,7 +481,6 @@ Session::parse_file (const char *filename)\n   if (options.dump_option == CompileOptions::INJECTION_DUMP)\n     {\n       // TODO: what do I dump here? injected crate names?\n-      return;\n     }\n \n   // expansion pipeline stage\n@@ -491,8 +489,10 @@ Session::parse_file (const char *filename)\n \n   if (options.dump_option == CompileOptions::EXPANSION_DUMP)\n     {\n-      // TODO: what do I dump here? expanded macros? AST with expanded macros?\n-      return;\n+      // dump AST with expanded stuff\n+      fprintf (stderr, \"BEGIN POST-EXPANSION AST DUMP\\n\");\n+      parser.debug_dump_ast_output (parsed_crate);\n+      fprintf (stderr, \"END POST-EXPANSION AST DUMP\\n\");\n     }\n \n   // resolution pipeline stage\n@@ -502,7 +502,6 @@ Session::parse_file (const char *filename)\n   if (options.dump_option == CompileOptions::RESOLUTION_DUMP)\n     {\n       // TODO: what do I dump here? resolved names? AST with resolved names?\n-      return;\n     }\n \n   if (saw_errors ())"}]}