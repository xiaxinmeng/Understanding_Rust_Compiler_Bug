{"sha": "ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM3ZjAwN2M3NzZjNzExMmY4MTM0YTZhOGNkOTRhMzQ2M2NkMzdlMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T15:21:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T15:21:11Z"}, "message": "[multiple changes]\n\n2017-09-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch5.adb: Minor reformatting and a typo fix\n\n2017-09-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sinput-l.ads: minor remove extra period at the end of comment\n\n2017-09-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_prag.adb (Add_Item_To_Name_Buffer): remove support for\n\tE_Discriminant.\n\t(Find_Role): remove support for E_Discriminant.\n\n2017-09-06  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch6.adb (Expand_Simple_Function_Return):\n\tAdd missing implicit type conversion to force displacement of the\n\t\"this\" pointer.\n\nFrom-SVN: r251807", "tree": {"sha": "a4237433b62c0585a890eab2ed10bbabd3b5db61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4237433b62c0585a890eab2ed10bbabd3b5db61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/comments", "author": null, "committer": null, "parents": [{"sha": "f6e50a7d64e9b165b54ed3e333a6793a0183c77e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e50a7d64e9b165b54ed3e333a6793a0183c77e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e50a7d64e9b165b54ed3e333a6793a0183c77e"}], "stats": {"total": 87, "additions": 61, "deletions": 26}, "files": [{"sha": "168458f7d0a649185357d76f4ce5c9b8f1a3356b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -1,3 +1,23 @@\n+2017-09-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch5.adb: Minor reformatting and a typo fix\n+\n+2017-09-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sinput-l.ads: minor remove extra period at the end of comment\n+\n+2017-09-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Add_Item_To_Name_Buffer): remove support for\n+\tE_Discriminant.\n+\t(Find_Role): remove support for E_Discriminant.\n+\n+2017-09-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Simple_Function_Return):\n+\tAdd missing implicit type conversion to force displacement of the\n+\t\"this\" pointer.\n+\n 2017-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch3.adb, sem_aux.adb, sem_res.adb: Minor reformatting."}, {"sha": "aab6e63caa905b1db49f959f667a37eae93f625a", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -329,8 +329,10 @@ package body Binde is\n    --  the reason for the link is R. Ea_Id is the contents to be placed in the\n    --  Elab_All_Link of the entry.\n \n-   procedure Choose (Elab_Order : in out Unit_Id_Table; Chosen : Unit_Id;\n-                     Msg : String);\n+   procedure Choose\n+     (Elab_Order : in out Unit_Id_Table;\n+      Chosen     : Unit_Id;\n+      Msg        : String);\n    --  Chosen is the next entry chosen in the elaboration order. This procedure\n    --  updates all data structures appropriately.\n \n@@ -985,8 +987,10 @@ package body Binde is\n    -- Choose --\n    ------------\n \n-   procedure Choose (Elab_Order : in out Unit_Id_Table; Chosen : Unit_Id;\n-                     Msg : String)\n+   procedure Choose\n+     (Elab_Order : in out Unit_Id_Table;\n+      Chosen     : Unit_Id;\n+      Msg        : String)\n    is\n       pragma Assert (Chosen /= No_Unit_Id);\n       S : Successor_Id;\n@@ -1087,6 +1091,7 @@ package body Binde is\n         (Errors_Detected > 0 or else Num_Chosen = Last (Elab_Order));\n       pragma Assert (Units.Last = UNR.Last);\n       pragma Assert (Num_Chosen + Num_Left = Int (UNR.Last));\n+\n       if Debug_Flag_C then\n          Write_Str (\" \");\n          Write_Int (Int (Num_Chosen));\n@@ -1113,8 +1118,10 @@ package body Binde is\n          then\n             null;\n          else\n-            Choose (Elab_Order, Corresponding_Body (Chosen),\n-                    \" [Elaborate_Body]\");\n+            Choose\n+              (Elab_Order => Elab_Order,\n+               Chosen     => Corresponding_Body (Chosen),\n+               Msg        => \" [Elaborate_Body]\");\n          end if;\n       end if;\n    end Choose;\n@@ -1720,7 +1727,8 @@ package body Binde is\n          if Pessimistic_Elab_Order or Debug_Flag_Old or Debug_Flag_Older then\n             pragma Assert\n               (Last (Elab_Order) = 0\n-                 or else Last (Elab_Order) = Old_Order'Last);\n+                or else Last (Elab_Order) = Old_Order'Last);\n+\n             Init (Elab_Order);\n             Append_All (Elab_Order, Old_Order);\n          end if;\n@@ -3033,8 +3041,10 @@ package body Binde is\n                   end if;\n \n                   if Choose_The_Body then\n-                     Choose (Elab_Order, Corresponding_Body (Best_So_Far),\n-                             \" [body]\");\n+                     Choose\n+                       (Elab_Order => Elab_Order,\n+                        Chosen     => Corresponding_Body (Best_So_Far),\n+                        Msg        => \" [body]\");\n                   end if;\n                end;\n             end if;"}, {"sha": "d4f947599ff9b204a188710a863246b0c33e7f88", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -6429,6 +6429,16 @@ package body Exp_Ch6 is\n \n             Rewrite (Exp, Duplicate_Subexpr_No_Checks (Exp));\n \n+            --  Ada 2005 (AI-251): If the type of the returned object is\n+            --  an interface then add an implicit type conversion to force\n+            --  displacement of the \"this\" pointer.\n+\n+            if Is_Interface (R_Type) then\n+               Rewrite (Exp, Convert_To (R_Type, Relocate_Node (Exp)));\n+            end if;\n+\n+            Analyze_And_Resolve (Exp, R_Type);\n+\n          --  For controlled types, do the allocation on the secondary stack\n          --  manually in order to call adjust at the right time:\n "}, {"sha": "c20beefa3e2338a9b358c6d26313455666371fdf", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -4130,7 +4130,8 @@ package body Freeze is\n                declare\n                   Comp_Type : constant Entity_Id := Etype (Comp);\n                   Comp_Size : constant Uint := RM_Size (Comp_Type);\n-                  SSU : constant Int := Ttypes.System_Storage_Unit;\n+                  SSU       : constant Int := Ttypes.System_Storage_Unit;\n+\n                begin\n                   Sized_Component_Total_RM_Size :=\n                     Sized_Component_Total_RM_Size + Comp_Size;"}, {"sha": "64c5dc7b446998c50d4051bea4646c997ce465e2", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -580,17 +580,16 @@ package body Sem_Ch5 is\n \n       Set_Assignment_Type (Lhs, T1);\n \n-      --  If the target of the assignment is an entity of a mutable type\n-      --  and the expression is a conditional expression, its alternatives\n-      --  can be of different subtypes of the nominal type of the LHS, so\n-      --  they must be resolved with the base type, given that their subtype\n-      --  may differ frok that of the target mutable object.\n+      --  If the target of the assignment is an entity of a mutable type and\n+      --  the expression is a conditional expression, its alternatives can be\n+      --  of different subtypes of the nominal type of the LHS, so they must be\n+      --  resolved with the base type, given that their subtype may differ from\n+      --  that of the target mutable object.\n \n       if Is_Entity_Name (Lhs)\n-        and then Ekind_In (Entity (Lhs),\n-           E_Variable,\n-           E_Out_Parameter,\n-           E_In_Out_Parameter)\n+        and then Ekind_In (Entity (Lhs), E_In_Out_Parameter,\n+                                         E_Out_Parameter,\n+                                         E_Variable)\n         and then Is_Composite_Type (T1)\n         and then not Is_Constrained (Etype (Entity (Lhs)))\n         and then Nkind_In (Rhs, N_If_Expression, N_Case_Expression)"}, {"sha": "d0c438712fa165d7df9d129833b422a45c4daf57", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -596,7 +596,6 @@ package body Sem_Prag is\n       --  to the name buffer. The individual kinds are as follows:\n       --    E_Abstract_State           - \"state\"\n       --    E_Constant                 - \"constant\"\n-      --    E_Discriminant             - \"discriminant\"\n       --    E_Generic_In_Out_Parameter - \"generic parameter\"\n       --    E_Generic_In_Parameter     - \"generic parameter\"\n       --    E_In_Parameter             - \"parameter\"\n@@ -651,9 +650,6 @@ package body Sem_Prag is\n          elsif Ekind (Item_Id) = E_Constant then\n             Add_Str_To_Name_Buffer (\"constant\");\n \n-         elsif Ekind (Item_Id) = E_Discriminant then\n-            Add_Str_To_Name_Buffer (\"discriminant\");\n-\n          elsif Ekind_In (Item_Id, E_Generic_In_Out_Parameter,\n                                   E_Generic_In_Parameter)\n          then\n@@ -1104,7 +1100,7 @@ package body Sem_Prag is\n                   else\n                      SPARK_Msg_N\n                        (\"item must denote parameter, variable, state or \"\n-                        & \"current instance of concurren type\", Item);\n+                        & \"current instance of concurrent type\", Item);\n                   end if;\n \n                --  All other input/output items are illegal\n@@ -1238,7 +1234,6 @@ package body Sem_Prag is\n             --  Constants\n \n             elsif Ekind_In (Item_Id, E_Constant,\n-                                     E_Discriminant,\n                                      E_Loop_Parameter)\n             then\n                Item_Is_Input := True;"}, {"sha": "1507d88da6cb0d50c9131406cdcdeaf0efd79273", "filename": "gcc/ada/sinput-l.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fsinput-l.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7f007c776c7112f8134a6a8cd94a3463cd37e3/gcc%2Fada%2Fsinput-l.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.ads?ref=ec7f007c776c7112f8134a6a8cd94a3463cd37e3", "patch": "@@ -67,7 +67,7 @@ package Sinput.L is\n    function Source_File_Is_Body (X : Source_File_Index) return Boolean;\n    --  Returns true if the designated source file contains a subprogram body\n    --  or a package body. This is a limited scan just to determine the answer\n-   --  to this question..\n+   --  to this question.\n \n    function Source_File_Is_No_Body (X : Source_File_Index) return Boolean;\n    --  Returns true if the designated source file contains pragma No_Body;"}]}