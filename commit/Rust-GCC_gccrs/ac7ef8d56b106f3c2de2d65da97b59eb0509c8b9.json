{"sha": "ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM3ZWY4ZDU2YjEwNmYzYzJkZTJkNjVkYTk3YjU5ZWIwNTA5YzhiOQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "1999-03-02T00:45:45Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-02T00:45:45Z"}, "message": "cse.c (fold_rtx): Update comments for (const (minus (label) (label))) case.\n\n        * cse.c (fold_rtx): Update comments for (const (minus (label) (label)))\n        case.\n        (cse_insn): Avoid creating a bogus REG_EQUAL note for\n        (const (minus (label) (label)))\n        (record_jump_cond): Fix mismatched paren in comment.\nFixes powerpc label-label problem.\nBootstraps on the x86.\n\nCo-Authored-By: Jeffrey A Law <law@cygnus.com>\n\nFrom-SVN: r25527", "tree": {"sha": "ed53a4bf9e24e684e4fc6805fd719d557e111cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed53a4bf9e24e684e4fc6805fd719d557e111cd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "560a78fc8a731df300fe045aa1dfa4125858ab17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560a78fc8a731df300fe045aa1dfa4125858ab17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560a78fc8a731df300fe045aa1dfa4125858ab17"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "0e4b827e1403787abb1e5e8712c4201d19a5c999", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9", "patch": "@@ -1,3 +1,12 @@\n+Tue Mar  2 01:40:01 1999  Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n+                          Jeffrey A Law  (law@cygnus.com)\n+\n+\t* cse.c (fold_rtx): Update comments for (const (minus (label) (label)))\n+\tcase.\n+\t(cse_insn): Avoid creating a bogus REG_EQUAL note for\n+\t(const (minus (label) (label)))\n+\t(record_jump_cond): Fix mismatched paren in comment.\n+\n Tue Mar  2 01:07:12 1999  Dan Nicolaescu  <dann@godzilla.ics.uci.edu>\n \n \t* final.c (end_final): There are 11 words in the \"main header\""}, {"sha": "0852615d031eae0e6e1f68da72b08582a124712c", "filename": "gcc/cse.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=ac7ef8d56b106f3c2de2d65da97b59eb0509c8b9", "patch": "@@ -5292,7 +5292,11 @@ fold_rtx (x, insn)\n \t\t    /* Indicate this is a constant.  This isn't a \n \t\t       valid form of CONST, but it will only be used\n \t\t       to fold the next insns and then discarded, so\n-\t\t       it should be safe.  */\n+\t\t       it should be safe.\n+\n+\t\t       Note this expression must be explicitly discarded,\n+\t\t       by cse_insn, else it may end up in a REG_EQUAL note\n+\t\t       and \"escape\" to cause problems elsewhere.  */\n \t\t    return gen_rtx_CONST (GET_MODE (new), new);\n \t\t  }\n \t      }\n@@ -6037,7 +6041,7 @@ record_jump_cond (code, mode, op0, op1, reversed_nonequality)\n   /* If OP0 and OP1 are known equal, and either is a paradoxical SUBREG,\n      we know that they are also equal in the smaller mode (this is also\n      true for all smaller modes whether or not there is a SUBREG, but\n-     is not worth testing for with no SUBREG.  */\n+     is not worth testing for with no SUBREG).  */\n \n   /* Note that GET_MODE (op0) may not equal MODE.  */\n   if (code == EQ && GET_CODE (op0) == SUBREG\n@@ -7170,9 +7174,18 @@ cse_insn (insn, libcall_insn)\n \t equivalent constant, we want to add a REG_NOTE.   We don't want\n \t to write a REG_EQUAL note for a constant pseudo since verifying that\n \t that pseudo hasn't been eliminated is a pain.  Such a note also\n-\t won't help anything.  */\n+\t won't help anything. \n+\n+\t Avoid a REG_EQUAL note for (CONST (MINUS (LABEL_REF) (LABEL_REF)))\n+\t which can be created for a reference to a compile time computable\n+\t entry in a jump table.  */\n+\n       if (n_sets == 1 && src_const && GET_CODE (dest) == REG\n-\t  && GET_CODE (src_const) != REG)\n+\t  && GET_CODE (src_const) != REG\n+\t  && ! (GET_CODE (src_const) == CONST\n+\t\t&& GET_CODE (XEXP (src_const, 0)) == MINUS\n+\t\t&& GET_CODE (XEXP (XEXP (src_const, 0), 0)) == LABEL_REF\n+\t\t&& GET_CODE (XEXP (XEXP (src_const, 0), 1)) == LABEL_REF))\n \t{\n \t  tem = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n \t  "}]}