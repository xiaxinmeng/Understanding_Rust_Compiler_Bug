{"sha": "44d27e8e735855216d21d6fca80473f56a69b698", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRkMjdlOGU3MzU4NTUyMTZkMjFkNmZjYTgwNDczZjU2YTY5YjY5OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@adacore.com", "date": "2021-02-14T13:02:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-15T10:19:11Z"}, "message": "[Ada] Add more initialization of Stored_Constraint\n\ngcc/ada/\n\n\t* sem_ch3.adb (Array_Type_Declaration, Build_Derived_Type):\n\tReinitialize Stored_Constraint when needed.\n\t(Set_Modular_Size): Likewise.\n\t* atree.adb: (Check_Vanishing_Fields): Add node id to debugging\n\tinformation.", "tree": {"sha": "7f123532f36183d88f071a8e3d6392bd2bb8f106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f123532f36183d88f071a8e3d6392bd2bb8f106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44d27e8e735855216d21d6fca80473f56a69b698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d27e8e735855216d21d6fca80473f56a69b698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d27e8e735855216d21d6fca80473f56a69b698", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d27e8e735855216d21d6fca80473f56a69b698/comments", "author": {"login": "richardkenner", "id": 56170968, "node_id": "MDQ6VXNlcjU2MTcwOTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56170968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardkenner", "html_url": "https://github.com/richardkenner", "followers_url": "https://api.github.com/users/richardkenner/followers", "following_url": "https://api.github.com/users/richardkenner/following{/other_user}", "gists_url": "https://api.github.com/users/richardkenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardkenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardkenner/subscriptions", "organizations_url": "https://api.github.com/users/richardkenner/orgs", "repos_url": "https://api.github.com/users/richardkenner/repos", "events_url": "https://api.github.com/users/richardkenner/events{/privacy}", "received_events_url": "https://api.github.com/users/richardkenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5db70e78af095a3d8e4744f21059448056fa47b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5db70e78af095a3d8e4744f21059448056fa47b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5db70e78af095a3d8e4744f21059448056fa47b"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "d0b06bbce5e614d790e885ad9b6d70351e0d497e", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d27e8e735855216d21d6fca80473f56a69b698/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d27e8e735855216d21d6fca80473f56a69b698/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=44d27e8e735855216d21d6fca80473f56a69b698", "patch": "@@ -772,7 +772,8 @@ package body Atree is\n                   Write_Str (New_Kind'Img);\n                   Write_Str (\" Nonzero field \");\n                   Write_Str (F'Img);\n-                  Write_Str (\" is vanishing\");\n+                  Write_Str (\" is vanishing for node \");\n+                  Write_Int (Nat (Old_N));\n                   Write_Eol;\n \n                   raise Program_Error;\n@@ -845,7 +846,8 @@ package body Atree is\n                   Write_Str (New_Kind'Img);\n                   Write_Str (\" Nonzero field \");\n                   Write_Str (F'Img);\n-                  Write_Str (\" is vanishing \");\n+                  Write_Str (\" is vanishing for node \");\n+                  Write_Int (Nat (Old_N));\n                   Write_Eol;\n \n                   if New_Kind = E_Void or else Old_Kind = E_Void then"}, {"sha": "1eac9057c418fc1c6f2817c7958b8e8e27c8fbd9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d27e8e735855216d21d6fca80473f56a69b698/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d27e8e735855216d21d6fca80473f56a69b698/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=44d27e8e735855216d21d6fca80473f56a69b698", "patch": "@@ -6191,6 +6191,12 @@ package body Sem_Ch3 is\n \n       if Nkind (Def) = N_Constrained_Array_Definition then\n \n+         if Ekind (T) in Incomplete_Or_Private_Kind then\n+            Reinit_Field_To_Zero (T, Stored_Constraint);\n+         else\n+            pragma Assert (Ekind (T) = E_Void);\n+         end if;\n+\n          --  Establish Implicit_Base as unconstrained base type\n \n          Implicit_Base := Create_Itype (E_Array_Type, P, Related_Id, 'B');\n@@ -9749,6 +9755,12 @@ package body Sem_Ch3 is\n    begin\n       --  Set common attributes\n \n+      if Ekind (Derived_Type) in Incomplete_Or_Private_Kind\n+        and then Ekind (Parent_Base) in Modular_Integer_Kind | Array_Kind\n+      then\n+         Reinit_Field_To_Zero (Derived_Type, Stored_Constraint);\n+      end if;\n+\n       Set_Scope                  (Derived_Type, Current_Scope);\n       Set_Etype                  (Derived_Type,        Parent_Base);\n       Mutate_Ekind               (Derived_Type, Ekind (Parent_Base));\n@@ -19618,6 +19630,11 @@ package body Sem_Ch3 is\n       --  Proceed with analysis of mod expression\n \n       Analyze_And_Resolve (Mod_Expr, Any_Integer);\n+\n+      if Ekind (T) in Incomplete_Or_Private_Kind then\n+         Reinit_Field_To_Zero (T, Stored_Constraint);\n+      end if;\n+\n       Set_Etype (T, T);\n       Mutate_Ekind (T, E_Modular_Integer_Type);\n       Init_Alignment (T);"}]}