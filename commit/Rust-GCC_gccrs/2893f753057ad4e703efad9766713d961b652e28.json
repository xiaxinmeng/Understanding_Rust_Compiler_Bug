{"sha": "2893f753057ad4e703efad9766713d961b652e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5M2Y3NTMwNTdhZDRlNzAzZWZhZDk3NjY3MTNkOTYxYjY1MmUyOA==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2008-04-10T20:59:50Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2008-04-10T20:59:50Z"}, "message": "tree-vrp.c (extract_range_from_binary_expr): Don't handle TRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.\n\n2008-04-10  Rafael Espindola  <espindola@google.com>\n\n\t* gcc/tree-vrp.c (extract_range_from_binary_expr): Don't handle\n\tTRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.\n\t(extract_range_from_expr): The same.\n\nFrom-SVN: r134176", "tree": {"sha": "5ebed4c39e42613fa22624140600cf5108cb20ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ebed4c39e42613fa22624140600cf5108cb20ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2893f753057ad4e703efad9766713d961b652e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2893f753057ad4e703efad9766713d961b652e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2893f753057ad4e703efad9766713d961b652e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2893f753057ad4e703efad9766713d961b652e28/comments", "author": null, "committer": null, "parents": [{"sha": "00bf373b67991459464d24c5bc7d7dafc157a364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00bf373b67991459464d24c5bc7d7dafc157a364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00bf373b67991459464d24c5bc7d7dafc157a364"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "2b2a30761e128d76aa75aabcb8f37bc4ace93256", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2893f753057ad4e703efad9766713d961b652e28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2893f753057ad4e703efad9766713d961b652e28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2893f753057ad4e703efad9766713d961b652e28", "patch": "@@ -1,3 +1,9 @@\n+2008-04-10  Rafael Espindola  <espindola@google.com>\n+\n+\t* gcc/tree-vrp.c (extract_range_from_binary_expr): Don't handle\n+\tTRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.\n+\t(extract_range_from_expr): The same.\n+\n 2008-04-10  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config/mips/mips.md (GPR2): New mode iterator."}, {"sha": "fec1d64c029e3e920c86c21a994b66ba588cffa9", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2893f753057ad4e703efad9766713d961b652e28/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2893f753057ad4e703efad9766713d961b652e28/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2893f753057ad4e703efad9766713d961b652e28", "patch": "@@ -3854,6 +3854,8 @@ verify_gimple_expr (tree expr)\n \n     case TRUTH_ANDIF_EXPR:\n     case TRUTH_ORIF_EXPR:\n+      gcc_unreachable ();\n+\n     case TRUTH_AND_EXPR:\n     case TRUTH_OR_EXPR:\n     case TRUTH_XOR_EXPR:"}, {"sha": "7ea026272b859f8a404e271a225987fad597ff04", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2893f753057ad4e703efad9766713d961b652e28/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2893f753057ad4e703efad9766713d961b652e28/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=2893f753057ad4e703efad9766713d961b652e28", "patch": "@@ -1887,8 +1887,6 @@ extract_range_from_binary_expr (value_range_t *vr,\n       && code != MIN_EXPR\n       && code != MAX_EXPR\n       && code != BIT_AND_EXPR\n-      && code != TRUTH_ANDIF_EXPR\n-      && code != TRUTH_ORIF_EXPR\n       && code != TRUTH_AND_EXPR\n       && code != TRUTH_OR_EXPR)\n     {\n@@ -1975,9 +1973,7 @@ extract_range_from_binary_expr (value_range_t *vr,\n \n   /* For integer ranges, apply the operation to each end of the\n      range and see what we end up with.  */\n-  if (code == TRUTH_ANDIF_EXPR\n-      || code == TRUTH_ORIF_EXPR\n-      || code == TRUTH_AND_EXPR\n+  if (code == TRUTH_AND_EXPR\n       || code == TRUTH_OR_EXPR)\n     {\n       /* If one of the operands is zero, we know that the whole\n@@ -2751,8 +2747,6 @@ extract_range_from_expr (value_range_t *vr, tree expr)\n   else if (code == SSA_NAME)\n     extract_range_from_ssa_name (vr, expr);\n   else if (TREE_CODE_CLASS (code) == tcc_binary\n-\t   || code == TRUTH_ANDIF_EXPR\n-\t   || code == TRUTH_ORIF_EXPR\n \t   || code == TRUTH_AND_EXPR\n \t   || code == TRUTH_OR_EXPR\n \t   || code == TRUTH_XOR_EXPR)"}]}