{"sha": "2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI0ZTZiZjFkNTU2Zjg5NzExNzI2ZWFhMDJiMTI1ZWQ2ZjM5YTgyZg==", "commit": {"author": {"name": "Sharad Singhai", "email": "singhai@google.com", "date": "2012-11-01T07:34:44Z"}, "committer": {"name": "Sharad Singhai", "email": "singhai@gcc.gnu.org", "date": "2012-11-01T07:34:44Z"}, "message": "invoke.texi: Update -fopt-info documentation.\n\n2012-11-01  Sharad Singhai  <singhai@google.com>\n\n    * doc/invoke.texi: Update -fopt-info documentation.\n    * dumpfile.c: Move dump_flags here from passes.c.\n    Rename opt_info_options to optinfo_verbosity_options.\n    Add optgroup_options.\n    (dump_files): Add field for optinfo_flags in the static initializer.\n    (dump_register): Handle additional parameter for optgroup_flags.\n    (opt_info_enable_passes): Renamed opt_info_enable_all. Handle\n    optgroup_flags. Fix documentation.\n    (opt_info_switch_p_1): Handle optgroup options.\n    (opt_info_switch_p): Handle optgroup_flags. Warn on multiple files.\n    * dumpfile.h (dump_register): Additional argument for optgroup_flags.\n    All callers updated.\n    (struct dump_file_info): Add field for optgroup_flags.\n    Define OPTGROUP_* flags.\n    * tree-pass.h (struct opt_pass): Add addtional field for optinfo_flags.\n    All opt_pass static initializers updated.\n    * opts-global.c (dump_remap_tree_vectorizer_verbose): Use 'all'\n    instead of 'optall'.\n    (handle_common_deferred_options): Fix typo in error message.\n    * passes.c (register_one_dump_file): Add argument for optgroup_flags.\n    Turn on OPTGROUP_IPA for IPA passes.\n    Move dump_flags from here to dumpfile.c.\n    * statistics.c (statistics_early_init): Use OPTGROUP_NONE in call to\n    dump_register.\n\ntestsuite/ChangeLog\n\n    * testsuite/gcc.dg/plugin/selfassign.c: Add opgtroup_flags initializer.\n    * testsuite/gcc.dg/plugin/one_time_plugin.c: Likewise.\n    * testsuite/g++.dg/plugin/selfassign.c: Likewise.\n    * testsuite/g++.dg/plugin/dumb_plugin.c: Likewise.\n\nFrom-SVN: r193061", "tree": {"sha": "47725ebeed1bb76102194e7ca04ca401b8d512ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47725ebeed1bb76102194e7ca04ca401b8d512ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/comments", "author": null, "committer": null, "parents": [{"sha": "c3a76b2f482f048a577cc4251184748d8ef27157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a76b2f482f048a577cc4251184748d8ef27157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a76b2f482f048a577cc4251184748d8ef27157"}], "stats": {"total": 540, "additions": 458, "deletions": 82}, "files": [{"sha": "64b2cbe36534873486212ffb08f6632d04fc31ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1,3 +1,30 @@\n+2012-11-01  Sharad Singhai  <singhai@google.com>\n+\n+\t* doc/invoke.texi: Update -fopt-info documentation.\n+\t* dumpfile.c: Move dump_flags here from passes.c.\n+\tRename opt_info_options to optinfo_verbosity_options.\n+\tAdd optgroup_options.\n+\t(dump_files): Add field for optinfo_flags in the static initializer.\n+\t(dump_register): Handle additional parameter for optgroup_flags.\n+\t(opt_info_enable_passes): Renamed opt_info_enable_all. Handle\n+\toptgroup_flags. Fix documentation.\n+\t(opt_info_switch_p_1): Handle optgroup options.\n+\t(opt_info_switch_p): Handle optgroup_flags. Warn on multiple files.\n+\t* dumpfile.h (dump_register): Additional argument for optgroup_flags.\n+\tAll callers updated.\n+\t(struct dump_file_info): Add field for optgroup_flags.\n+\tDefine OPTGROUP_* flags.\n+\t* tree-pass.h (struct opt_pass): Add addtional field for optinfo_flags.\n+\tAll opt_pass static initializers updated.\n+\t* opts-global.c (dump_remap_tree_vectorizer_verbose): Use 'all'\n+\tinstead of 'optall'.\n+\t(handle_common_deferred_options): Fix typo in error message.\n+\t* passes.c (register_one_dump_file): Add argument for optgroup_flags.\n+\tTurn on OPTGROUP_IPA for IPA passes.\n+\tMove dump_flags from here to dumpfile.c.\n+\t* statistics.c (statistics_early_init): Use OPTGROUP_NONE in call to\n+\tdump_register.\n+\n 2012-11-01  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR target/55160"}, {"sha": "810e9f2955f8f63ce851a698d24f62f745c33189", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1511,6 +1511,7 @@ struct rtl_opt_pass pass_inc_dec =\n  {\n   RTL_PASS,\n   \"auto_inc_dec\",                       /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_auto_inc_dec,                    /* gate */\n   rest_of_handle_auto_inc_dec,          /* execute */\n   NULL,                                 /* sub */"}, {"sha": "fd353f675c8ed9d536aa0e07a287a31f6592c4d4", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2234,6 +2234,7 @@ struct rtl_opt_pass pass_reorder_blocks =\n  {\n   RTL_PASS,\n   \"bbro\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_reorder_blocks,           /* gate */\n   rest_of_handle_reorder_blocks,        /* execute */\n   NULL,                                 /* sub */\n@@ -2376,6 +2377,7 @@ struct rtl_opt_pass pass_duplicate_computed_gotos =\n  {\n   RTL_PASS,\n   \"compgotos\",                          /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_duplicate_computed_gotos,        /* gate */\n   duplicate_computed_gotos,             /* execute */\n   NULL,                                 /* sub */\n@@ -2579,6 +2581,7 @@ struct rtl_opt_pass pass_partition_blocks =\n  {\n   RTL_PASS,\n   \"bbpart\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_partition_blocks,         /* gate */\n   partition_hot_cold_basic_blocks,      /* execute */\n   NULL,                                 /* sub */"}, {"sha": "35236fdaeef01f0b6f5d341f846acbd518324225", "filename": "gcc/bt-load.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1,3 +1,4 @@\n+\n /* Perform branch target register load optimizations.\n    Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n@@ -1509,6 +1510,7 @@ struct rtl_opt_pass pass_branch_target_load_optimize1 =\n  {\n   RTL_PASS,\n   \"btl1\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_branch_target_load_optimize1,      /* gate */\n   rest_of_handle_branch_target_load_optimize1,   /* execute */\n   NULL,                                 /* sub */\n@@ -1558,6 +1560,7 @@ struct rtl_opt_pass pass_branch_target_load_optimize2 =\n  {\n   RTL_PASS,\n   \"btl2\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_branch_target_load_optimize2,      /* gate */\n   rest_of_handle_branch_target_load_optimize2,   /* execute */\n   NULL,                                 /* sub */"}, {"sha": "ab882d269f04936b7382031184b087a30835acbd", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3008,6 +3008,7 @@ struct rtl_opt_pass pass_jump =\n  {\n   RTL_PASS,\n   \"jump\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_jump,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -3034,6 +3035,7 @@ struct rtl_opt_pass pass_jump2 =\n  {\n   RTL_PASS,\n   \"jump2\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_jump2,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "e501b4b1c1fbb3592ca2ba86525711fc76a78b6f", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4677,6 +4677,7 @@ struct rtl_opt_pass pass_expand =\n  {\n   RTL_PASS,\n   \"expand\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   gimple_expand_cfg,\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "9c8eea753e46476d9bfb1dbec6b68a173d0c36ea", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -456,6 +456,7 @@ struct rtl_opt_pass pass_free_cfg =\n  {\n   RTL_PASS,\n   \"*free_cfg\",                          /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_pass_free_cfg,                /* execute */\n   NULL,                                 /* sub */\n@@ -2998,6 +2999,7 @@ struct rtl_opt_pass pass_into_cfg_layout_mode =\n  {\n   RTL_PASS,\n   \"into_cfglayout\",                     /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   into_cfg_layout_mode,                 /* execute */\n   NULL,                                 /* sub */\n@@ -3017,6 +3019,7 @@ struct rtl_opt_pass pass_outof_cfg_layout_mode =\n  {\n   RTL_PASS,\n   \"outof_cfglayout\",                    /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   outof_cfg_layout_mode,                /* execute */\n   NULL,                                 /* sub */"}, {"sha": "024424d0671b1057384077bc1e8da775094433ea", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -370,6 +370,7 @@ struct gimple_opt_pass pass_build_cgraph_edges =\n  {\n   GIMPLE_PASS,\n   \"*build_cgraph_edges\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   build_cgraph_edges,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -487,6 +488,7 @@ struct gimple_opt_pass pass_rebuild_cgraph_edges =\n  {\n   GIMPLE_PASS,\n   \"*rebuild_cgraph_edges\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   rebuild_cgraph_edges,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -514,6 +516,7 @@ struct gimple_opt_pass pass_remove_cgraph_callee_edges =\n  {\n   GIMPLE_PASS,\n   \"*remove_cgraph_callee_edges\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   remove_cgraph_callee_edges,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "ca94515e842ed9547f84acf9fb55ff4649cb0bc0", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -650,6 +650,7 @@ struct rtl_opt_pass pass_stack_adjustments =\n  {\n   RTL_PASS,\n   \"csa\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_stack_adjustments,        /* gate */\n   rest_of_handle_stack_adjustments,     /* execute */\n   NULL,                                 /* sub */"}, {"sha": "214a466bd46601768043cdff12069b531d95d5d3", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -13817,6 +13817,7 @@ struct rtl_opt_pass pass_combine =\n  {\n   RTL_PASS,\n   \"combine\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_combine,                  /* gate */\n   rest_of_handle_combine,               /* execute */\n   NULL,                                 /* sub */"}, {"sha": "1761d0d2afffa3a9d117436647c784760c0c04da", "filename": "gcc/compare-elim.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcompare-elim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcompare-elim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcompare-elim.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -660,6 +660,7 @@ struct rtl_opt_pass pass_compare_elim_after_reload =\n  {\n   RTL_PASS,\n   \"cmpelim\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_compare_elim_after_reload,\t/* gate */\n   execute_compare_elim_after_reload,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "ef89004e39b25fa4819c5cc322f0ea23a450227a", "filename": "gcc/config/epiphany/mode-switch-use.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fconfig%2Fepiphany%2Fmode-switch-use.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fconfig%2Fepiphany%2Fmode-switch-use.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fmode-switch-use.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -76,6 +76,7 @@ struct rtl_opt_pass pass_mode_switch_use =\n  {\n   RTL_PASS,\n   \"mode_switch_use\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   insert_uses,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "86cc5b1ebd979394c29815202a623b29be0b66d3", "filename": "gcc/config/epiphany/resolve-sw-modes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fconfig%2Fepiphany%2Fresolve-sw-modes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fconfig%2Fepiphany%2Fresolve-sw-modes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fresolve-sw-modes.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -166,6 +166,7 @@ struct rtl_opt_pass pass_resolve_sw_modes =\n  {\n   RTL_PASS,\n   \"resolve_sw_modes\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_resolve_sw_modes,\t\t/* gate */\n   resolve_sw_modes,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "42a2839db6d7edc68110ecfe353e3abfe563b45d", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -133,6 +133,7 @@ static struct opt_pass rl78_devirt_pass =\n {\n   RTL_PASS,\n   \"devirt\",\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   devirt_gate,\n   devirt_pass,\n   NULL,"}, {"sha": "7945342ee367a87eae206220fbde1d1c87c0fff0", "filename": "gcc/cprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1923,6 +1923,7 @@ struct rtl_opt_pass pass_rtl_cprop =\n  {\n   RTL_PASS,\n   \"cprop\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_rtl_cprop,                       /* gate */\n   execute_rtl_cprop,  \t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "20bda3122e77257103503f71212c6125f3df3506", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -7456,6 +7456,7 @@ struct rtl_opt_pass pass_cse =\n  {\n   RTL_PASS,\n   \"cse1\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_cse,                      /* gate */\n   rest_of_handle_cse,\t\t\t/* execute */\n   NULL,                                 /* sub */\n@@ -7518,6 +7519,7 @@ struct rtl_opt_pass pass_cse2 =\n  {\n   RTL_PASS,\n   \"cse2\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_cse2,                     /* gate */\n   rest_of_handle_cse2,\t\t\t/* execute */\n   NULL,                                 /* sub */\n@@ -7578,6 +7580,7 @@ struct rtl_opt_pass pass_cse_after_global_opts =\n  {\n   RTL_PASS,\n   \"cse_local\",                          /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_cse_after_global_opts,    /* gate */\n   rest_of_handle_cse_after_global_opts, /* execute */\n   NULL,                                 /* sub */"}, {"sha": "a1e8087ebc67aa483acaa9413da740b8f84ba386", "filename": "gcc/dce.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -786,6 +786,7 @@ struct rtl_opt_pass pass_ud_rtl_dce =\n  {\n   RTL_PASS,\n   \"ud_dce\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_ud_dce,                          /* gate */\n   rest_of_handle_ud_dce,                /* execute */\n   NULL,                                 /* sub */\n@@ -1201,6 +1202,7 @@ struct rtl_opt_pass pass_fast_rtl_dce =\n  {\n   RTL_PASS,\n   \"rtl_dce\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_fast_dce,                        /* gate */\n   rest_of_handle_fast_dce,              /* execute */\n   NULL,                                 /* sub */"}, {"sha": "dd1060e2b2e405494f8764816e35ae957e053992", "filename": "gcc/df-core.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -754,6 +754,7 @@ struct rtl_opt_pass pass_df_initialize_opt =\n  {\n   RTL_PASS,\n   \"dfinit\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_opt,                             /* gate */\n   rest_of_handle_df_initialize,         /* execute */\n   NULL,                                 /* sub */\n@@ -781,6 +782,7 @@ struct rtl_opt_pass pass_df_initialize_no_opt =\n  {\n   RTL_PASS,\n   \"no-opt dfinit\",                      /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_no_opt,                          /* gate */\n   rest_of_handle_df_initialize,         /* execute */\n   NULL,                                 /* sub */\n@@ -828,6 +830,7 @@ struct rtl_opt_pass pass_df_finish =\n  {\n   RTL_PASS,\n   \"dfinish\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   rest_of_handle_df_finish,             /* execute */\n   NULL,                                 /* sub */"}, {"sha": "ff0c87dc6c4f0a9cd9c167cc3f20f1a3a1d58559", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 77, "deletions": 27, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -6021,58 +6021,108 @@ Enable all the available tree dumps with the flags provided in this option.\n @itemx -fopt-info-@var{options}\n @itemx -fopt-info-@var{options}=@var{filename}\n @opindex fopt-info\n-Controls optimization dumps from all the passes. If the\n+Controls optimization dumps from various optimization passes. If the\n @samp{-@var{options}} form is used, @var{options} is a list of\n-@samp{-} separated options to control the dump details.  If\n-@var{options} is not specified, it defaults to @option{optall}. If the\n-@var{filename} is not specified, it defaults to @file{stderr}. Note\n-that the output @var{filename} will be overwritten in case of multiple\n-translation units. If a combined output from multiple translation\n-units is desired, @file{stderr} should be used instead.\n-\n-The following options are available\n+@samp{-} separated options to select the dump details and\n+optimizations.  If @var{options} is not specified, it defaults to\n+@option{all} for details and @option{optall} for optimization\n+groups. If the @var{filename} is not specified, it defaults to\n+@file{stderr}. Note that the output @var{filename} will be overwritten\n+in case of multiple translation units. If a combined output from\n+multiple translation units is desired, @file{stderr} should be used\n+instead.\n+\n+The options can be divided into two groups, 1) options describing the\n+verbosity of the dump, and 2) options describing which optimizations\n+should be included. The options from both the groups can be freely\n+mixed as they are non-overlapping. However, in case of any conflicts,\n+the latter options override the earlier options on the command\n+line. Though multiple -fopt-info options are accepted, only one of\n+them can have @option{=filename}. If other filenames are provided then\n+all but the first one are ignored.\n+\n+The dump verbosity has the following options\n \n @table @samp\n @item optimized\n Print information when an optimization is successfully applied. It is\n up to a pass to decide which information is relevant. For example, the\n-vectorizer pass prints the location of loop which got vectorized.\n+vectorizer passes print the source location of loops which got\n+successfully vectorized.\n @item missed\n Print information about missed optimizations. Individual passes\n-control which information to include in the output. For example,\n+control which informations to include in the output. For example,\n \n @smallexample\n-gcc -O2 -ftree-vectorize -fopt-info-missed\n+gcc -O2 -ftree-vectorize -fopt-info-vec-missed\n @end smallexample\n \n-will print information about missed optimization opportunities on\n-stderr.\n+will print information about missed optimization opportunities from\n+vectorization passes on stderr.\n @item note\n Print verbose information about optimizations, such as certain\n transformations, more detailed messages about decisions etc.\n-@item optall\n+@item all\n Print detailed optimization information. This includes\n-@var{optimized}, @var{missed}, and @var{note}. For example,\n+@var{optimized}, @var{missed}, and @var{note}.\n+@end table\n+\n+The second set of options describes a group of optimizations and may\n+include one or more of the following.\n+\n+@table @samp\n+@item ipa\n+Enable dumps from all interprocedural optimizations.\n+@item loop\n+Enable dumps from all loop optimizations.\n+@item inline\n+Enable dumps from all inlining optimizations.\n+@item vec\n+Enable dumps from all vectorization optimizations.\n+@end table\n+\n+For example,\n+@smallexample\n+gcc -O3 -fopt-info-missed=missed.all\n+@end smallexample\n \n+outputs missed optimization report from all the passes into\n+@file{missed.all}.\n+\n+As another example,\n @smallexample\n-gcc -O2 -ftree-vectorize -fopt-info-optall=opt.all\n+gcc -O3 -fopt-info-inline-optimized-missed=inline.txt\n @end smallexample\n \n-outputs detailed optimization report from all the passes into\n-@file{opt.all}.\n-@end table\n+will output information about missed optimizations as well as\n+optimized locations from all the inlining passes into\n+@file{inline.txt}.\n+\n+If the @var{filename} is provided, then the dumps from all the\n+applicable optimizations are concatenated into the @file{filename}.\n+Otherwise the dump is output onto @file{stderr}. If @var{options} is\n+omitted, it defaults to @option{all-optall}, which means dump all\n+available optimization info from all the passes. In the following\n+example, all optimization info is output on to @file{stderr}.\n+\n+@smallexample\n+gcc -O3 -fopt-info\n+@end smallexample\n+\n+Note that @option{-fopt-info-vec-missed} behaves the same as\n+@option{-fopt-info-missed-vec}.\n \n-It applies the dump options to all the passes. If the @var{filename}\n-is provided, the dump from all the passes is concatenated, otherwise\n-the dump is output onto @file{stderr}. If @var{options} is omitted, it\n-defaults to @option{optall}.\n+As another example, consider\n \n @smallexample\n-gcc -O3 -fopt-info-optimized-missed=optdump.txt\n+gcc -fopt-info-vec-missed=vec.miss -fopt-info-loop-optimized=loop.opt\n @end smallexample\n \n-This will output information about missed optimizations as well as\n-optimized locations from all the passes into @file{optdump.txt}.\n+Here the two output filenames @file{vec.miss} and @file{loop.opt} are\n+in conflict since only one output file is allowed. In this case, only\n+the first option takes effect and the subsequent options are\n+ignored. Thus only the @file{vec.miss} is produced which cotaints\n+dumps from the vectorizer about missed opportunities.\n \n @item -ftree-vectorizer-verbose=@var{n}\n @opindex ftree-vectorizer-verbose"}, {"sha": "4da325acf7dc312bc331701a1aaad70229d5b1ab", "filename": "gcc/dse.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3934,6 +3934,7 @@ struct rtl_opt_pass pass_rtl_dse1 =\n  {\n   RTL_PASS,\n   \"dse1\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dse1,                            /* gate */\n   rest_of_handle_dse,                   /* execute */\n   NULL,                                 /* sub */\n@@ -3954,6 +3955,7 @@ struct rtl_opt_pass pass_rtl_dse2 =\n  {\n   RTL_PASS,\n   \"dse2\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dse2,                            /* gate */\n   rest_of_handle_dse,                   /* execute */\n   NULL,                                 /* sub */"}, {"sha": "55543cc158ab95306aa0bdeb21665c7af80fefeb", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 76, "deletions": 36, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -43,34 +43,35 @@ static FILE *dump_open_alternate_stream (struct dump_file_info *);\n FILE *dump_file = NULL;\n FILE *alt_dump_file = NULL;\n const char *dump_file_name;\n+int dump_flags;\n \n /* Table of tree dump switches. This must be consistent with the\n    TREE_DUMP_INDEX enumeration in dumpfile.h.  */\n static struct dump_file_info dump_files[TDI_end] =\n {\n-  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0},\n+  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0},\n   {\".cgraph\", \"ipa-cgraph\", NULL, NULL, NULL, NULL, NULL, TDF_IPA,\n-   0, 0, 0, 0},\n+   0, 0, 0, 0, 0},\n   {\".tu\", \"translation-unit\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 1},\n+   0, 0, 0, 0, 1},\n   {\".class\", \"class-hierarchy\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 2},\n+   0, 0, 0, 0, 2},\n   {\".original\", \"tree-original\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 3},\n+   0, 0, 0, 0, 3},\n   {\".gimple\", \"tree-gimple\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 4},\n+   0, 0, 0, 0, 4},\n   {\".nested\", \"tree-nested\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 5},\n+   0, 0, 0, 0, 5},\n   {\".vcg\", \"tree-vcg\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 6},\n+   0, 0, 0, 0, 6},\n #define FIRST_AUTO_NUMBERED_DUMP 7\n \n   {NULL, \"tree-all\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0},\n+   0, 0, 0, 0, 0},\n   {NULL, \"rtl-all\", NULL, NULL, NULL, NULL, NULL, TDF_RTL,\n-   0, 0, 0, 0},\n+   0, 0, 0, 0, 0},\n   {NULL, \"ipa-all\", NULL, NULL, NULL, NULL, NULL, TDF_IPA,\n-   0, 0, 0, 0},\n+   0, 0, 0, 0, 0},\n };\n \n /* Dynamically registered tree dump files and switches.  */\n@@ -117,24 +118,32 @@ static const struct dump_option_value_info dump_options[] =\n   {NULL, 0}\n };\n \n-/* A subset of the dump_options table which is used for opt-info\n-   options. This must be consistent with the MSG_* flags in\n-   dump_options.\n+/* A subset of the dump_options table which is used for -fopt-info\n+   types. This must be consistent with the MSG_* flags in dumpfile.h.\n  */\n-static const struct dump_option_value_info opt_info_options[] =\n+static const struct dump_option_value_info optinfo_verbosity_options[] =\n {\n   {\"optimized\", MSG_OPTIMIZED_LOCATIONS},\n   {\"missed\", MSG_MISSED_OPTIMIZATION},\n   {\"note\", MSG_NOTE},\n-  {\"optall\", (MSG_OPTIMIZED_LOCATIONS\n-           | MSG_MISSED_OPTIMIZATION\n-           | MSG_NOTE)},\n+  {\"all\", MSG_ALL},\n+  {NULL, 0}\n+};\n+\n+/* Flags used for -fopt-info groups.  */\n+static const struct dump_option_value_info optgroup_options[] =\n+{\n+  {\"ipa\", OPTGROUP_IPA},\n+  {\"loop\", OPTGROUP_LOOP},\n+  {\"inline\", OPTGROUP_INLINE},\n+  {\"vec\", OPTGROUP_VEC},\n+  {\"optall\", OPTGROUP_ALL},\n   {NULL, 0}\n };\n \n unsigned int\n dump_register (const char *suffix, const char *swtch, const char *glob,\n-\t       int flags)\n+\t       int flags, int optgroup_flags)\n {\n   static int next_dump = FIRST_AUTO_NUMBERED_DUMP;\n   int num = next_dump++;\n@@ -157,6 +166,7 @@ dump_register (const char *suffix, const char *swtch, const char *glob,\n   extra_dump_files[count].swtch = swtch;\n   extra_dump_files[count].glob = glob;\n   extra_dump_files[count].pflags = flags;\n+  extra_dump_files[count].optgroup_flags = optgroup_flags;\n   extra_dump_files[count].num = num;\n \n   return count + TDI_end;\n@@ -376,8 +386,8 @@ dump_printf_loc (int dump_kind, source_location loc, const char *format, ...)\n /* Start a dump for PHASE. Store user-supplied dump flags in\n    *FLAG_PTR.  Return the number of streams opened.  Set globals\n    DUMP_FILE, and ALT_DUMP_FILE to point to the opened streams, and\n-   set dump_flags appropriately for both pass dump stream and opt-info\n-   stream. */\n+   set dump_flags appropriately for both pass dump stream and\n+   -fopt-info stream. */\n \n int\n dump_start (int phase, int *flag_ptr)\n@@ -418,7 +428,7 @@ dump_start (int phase, int *flag_ptr)\n       dfi->alt_stream = stream;\n       count++;\n       alt_dump_file = dfi->alt_stream;\n-      /* Initialize current opt-info flags. */\n+      /* Initialize current -fopt-info flags. */\n       alt_flags = dfi->alt_flags;\n     }\n \n@@ -603,18 +613,19 @@ dump_enable_all (int flags, const char *filename)\n   return n;\n }\n \n-/* Enable opt-info dumps on all IR_DUMP_TYPE passes with FLAGS on\n-   FILENAME.  Return the number of enabled dumps.  */\n+/* Enable -fopt-info dumps on all dump files matching OPTGROUP_FLAGS.\n+   Enable dumps with FLAGS on FILENAME.  Return the number of enabled\n+   dumps.  */\n \n static int\n-opt_info_enable_all (int ir_dump_type, int flags, const char *filename)\n+opt_info_enable_passes (int optgroup_flags, int flags, const char *filename)\n {\n   int n = 0;\n   size_t i;\n \n   for (i = TDI_none + 1; i < (size_t) TDI_end; i++)\n     {\n-      if ((dump_files[i].pflags & ir_dump_type))\n+      if ((dump_files[i].optgroup_flags & optgroup_flags))\n         {\n           const char *old_filename = dump_files[i].alt_filename;\n           /* Since this file is shared among different passes, it\n@@ -632,7 +643,7 @@ opt_info_enable_all (int ir_dump_type, int flags, const char *filename)\n \n   for (i = 0; i < extra_dump_files_in_use; i++)\n     {\n-      if ((extra_dump_files[i].pflags & ir_dump_type))\n+      if ((extra_dump_files[i].optgroup_flags & optgroup_flags))\n         {\n           const char *old_filename = extra_dump_files[i].alt_filename;\n           /* Since this file is shared among different passes, it\n@@ -753,11 +764,12 @@ dump_switch_p (const char *arg)\n   return any;\n }\n \n-/* Parse ARG as a -fopt-info switch and store flags and filename.\n-   Return non-zero if it is a recognized switch.  */\n+/* Parse ARG as a -fopt-info switch and store flags, optgroup_flags\n+   and filename.  Return non-zero if it is a recognized switch.  */\n \n static int\n-opt_info_switch_p_1 (const char *arg, int *flags, char **filename)\n+opt_info_switch_p_1 (const char *arg, int *flags, int *optgroup_flags,\n+                     char **filename)\n {\n   const char *option_value;\n   const char *ptr;\n@@ -767,9 +779,10 @@ opt_info_switch_p_1 (const char *arg, int *flags, char **filename)\n \n   *filename = NULL;\n   *flags = 0;\n+  *optgroup_flags = 0;\n \n   if (!ptr)\n-    return 1;\n+    return 1;       /* Handle '-fopt-info' without any additional options.  */\n \n   while (*ptr)\n     {\n@@ -790,14 +803,23 @@ opt_info_switch_p_1 (const char *arg, int *flags, char **filename)\n \tend_ptr = ptr + strlen (ptr);\n       length = end_ptr - ptr;\n \n-      for (option_ptr = opt_info_options; option_ptr->name; option_ptr++)\n+      for (option_ptr = optinfo_verbosity_options; option_ptr->name;\n+           option_ptr++)\n \tif (strlen (option_ptr->name) == length\n \t    && !memcmp (option_ptr->name, ptr, length))\n           {\n             *flags |= option_ptr->value;\n \t    goto found;\n           }\n \n+      for (option_ptr = optgroup_options; option_ptr->name; option_ptr++)\n+\tif (strlen (option_ptr->name) == length\n+\t    && !memcmp (option_ptr->name, ptr, length))\n+          {\n+            *optgroup_flags |= option_ptr->value;\n+\t    goto found;\n+          }\n+\n       if (*ptr == '=')\n         {\n           /* Interpret rest of the argument as a dump filename.  This\n@@ -806,8 +828,11 @@ opt_info_switch_p_1 (const char *arg, int *flags, char **filename)\n           break;\n         }\n       else\n-        warning (0, \"ignoring unknown option %q.*s in %<-fopt-info=%s%>\",\n-                 length, ptr, arg);\n+        {\n+          warning (0, \"unknown option %q.*s in %<-fopt-info-%s%>\",\n+                   length, ptr, arg);\n+          return 0;\n+        }\n     found:;\n       ptr = end_ptr;\n     }\n@@ -822,16 +847,31 @@ int\n opt_info_switch_p (const char *arg)\n {\n   int flags;\n+  int optgroup_flags;\n   char *filename;\n+  static char *file_seen = NULL;\n \n-  opt_info_switch_p_1 (arg, &flags, &filename);\n+  if (!opt_info_switch_p_1 (arg, &flags, &optgroup_flags, &filename))\n+    return 0;\n \n   if (!filename)\n     filename = xstrdup (\"stderr\");\n+\n+  /* Bail out if a different filename has been specified.  */\n+  if (file_seen && strcmp (file_seen, filename))\n+    {\n+      warning (0, \"ignoring possibly conflicting option %<-fopt-info-%s%>\",\n+               arg);\n+      return 1;\n+    }\n+\n+  file_seen = xstrdup (filename);\n   if (!flags)\n     flags = MSG_ALL;\n+  if (!optgroup_flags)\n+    optgroup_flags = OPTGROUP_ALL;\n \n-  return opt_info_enable_all ((TDF_TREE | TDF_RTL | TDF_IPA), flags, filename);\n+  return opt_info_enable_passes (optgroup_flags, flags, filename);\n }\n \n /* Print basic block on the dump streams.  */"}, {"sha": "bcef9c6e337e51ef67e4ccf9f709721bfaf83bee", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"line-map.h\"\n \n /* Different tree dump places.  When you add new tree dump places,\n-   extend the DUMP_FILES array in tree-dump.c.  */\n+   extend the DUMP_FILES array in dumpfile.c.  */\n enum tree_dump_index\n {\n   TDI_none,\t\t\t/* No dump */\n@@ -46,9 +46,9 @@ enum tree_dump_index\n \n /* Bit masks to control dumping. Not all values are applicable to all\n    dumps. Add new ones at the end. When you define new values, extend\n-   the DUMP_OPTIONS array in tree-dump.c. The TDF_* flags coexist with\n-   MSG_* flags (for -fopt-info) and the bit values must be chosen\n-   to allow that.  */\n+   the DUMP_OPTIONS array in dumpfile.c. The TDF_* flags coexist with\n+   MSG_* flags (for -fopt-info) and the bit values must be chosen to\n+   allow that.  */\n #define TDF_ADDRESS\t(1 << 0)\t/* dump node addresses */\n #define TDF_SLIM\t(1 << 1)\t/* don't go wild following links */\n #define TDF_RAW  \t(1 << 2)\t/* don't unparse the function */\n@@ -91,20 +91,33 @@ enum tree_dump_index\n #define MSG_ALL         (MSG_OPTIMIZED_LOCATIONS | MSG_MISSED_OPTIMIZATION \\\n                          | MSG_NOTE)\n \n+\n+/* Flags to control high-level -fopt-info dumps.  Usually these flags\n+   define a group of passes.  An optimization pass can be part of\n+   multiple groups.  */\n+#define OPTGROUP_NONE        (0)\n+#define OPTGROUP_IPA         (1 << 1)   /* IPA optimization passes */\n+#define OPTGROUP_LOOP        (1 << 2)   /* Loop optimization passes */\n+#define OPTGROUP_INLINE      (1 << 3)   /* Inlining passes */\n+#define OPTGROUP_VEC         (1 << 4)   /* Vectorization passes */\n+#define OPTGROUP_ALL\t     (OPTGROUP_IPA | OPTGROUP_LOOP | OPTGROUP_INLINE \\\n+                              | OPTGROUP_VEC)\n+\n /* Define a tree dump switch.  */\n struct dump_file_info\n {\n   const char *suffix;           /* suffix to give output file.  */\n   const char *swtch;            /* command line dump switch */\n   const char *glob;             /* command line glob  */\n   const char *pfilename;        /* filename for the pass-specific stream  */\n-  const char *alt_filename;     /* filename for the opt-info stream  */\n+  const char *alt_filename;     /* filename for the -fopt-info stream  */\n   FILE *pstream;                /* pass-specific dump stream  */\n-  FILE *alt_stream;             /* opt-info stream */\n+  FILE *alt_stream;             /* -fopt-info stream */\n+  int optgroup_flags;           /* optgroup flags for -fopt-info */\n   int pflags;                   /* dump flags */\n   int alt_flags;                /* flags for opt-info */\n   int pstate;                   /* state of pass-specific stream */\n-  int alt_state;                /* state of the opt-info stream */\n+  int alt_state;                /* state of the -fopt-info stream */\n   int num;                      /* dump file number */\n };\n \n@@ -129,7 +142,7 @@ extern void dump_gimple_stmt_loc (int, source_location, int, gimple, int);\n extern void dump_gimple_stmt (int, int, gimple, int);\n extern void print_combine_total_stats (void);\n extern unsigned int dump_register (const char *, const char *, const char *,\n-                                   int);\n+                                   int, int);\n extern bool enable_rtl_dump_file (void);\n \n /* In combine.c  */\n@@ -146,8 +159,7 @@ extern const char *dump_file_name;\n /* Return the dump_file_info for the given phase.  */\n extern struct dump_file_info *get_dump_file_info (int);\n \n-/* Return true if any of the dumps are enabled, false otherwise. */\n-\n+/* Return true if any of the dumps is enabled, false otherwise. */\n static inline bool\n dump_enabled_p (void)\n {"}, {"sha": "7c5316035579aac5007a3b59f276ca9677d7f37a", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3388,6 +3388,7 @@ struct rtl_opt_pass pass_dwarf2_frame =\n  {\n   RTL_PASS,\n   \"dwarf2\",\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   gate_dwarf2_frame,\t\t/* gate */\n   execute_dwarf2_frame,\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "9cd3391517b193689a17c909044e95b7af4da67f", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1920,6 +1920,7 @@ struct rtl_opt_pass pass_set_nothrow_function_flags =\n  {\n   RTL_PASS,\n   \"nothrow\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   set_nothrow_function_flags,           /* execute */\n   NULL,                                 /* sub */\n@@ -2569,6 +2570,7 @@ struct rtl_opt_pass pass_convert_to_eh_region_ranges =\n  {\n   RTL_PASS,\n   \"eh_ranges\",                          /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_convert_to_eh_region_ranges,\t/* gate */\n   convert_to_eh_region_ranges,          /* execute */\n   NULL,                                 /* sub */"}, {"sha": "f414dd0c7e323a10edb30c348058618cfdc4c636", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -822,6 +822,7 @@ struct rtl_opt_pass pass_compute_alignments =\n  {\n   RTL_PASS,\n   \"alignments\",                         /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   compute_alignments,                   /* execute */\n   NULL,                                 /* sub */\n@@ -4373,6 +4374,7 @@ struct rtl_opt_pass pass_final =\n  {\n   RTL_PASS,\n   \"final\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_final,                 /* execute */\n   NULL,                                 /* sub */\n@@ -4401,6 +4403,7 @@ struct rtl_opt_pass pass_shorten_branches =\n  {\n   RTL_PASS,\n   \"shorten\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_shorten_branches,      /* execute */\n   NULL,                                 /* sub */\n@@ -4547,6 +4550,7 @@ struct rtl_opt_pass pass_clean_state =\n  {\n   RTL_PASS,\n   \"*clean_state\",                       /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_clean_state,                  /* execute */\n   NULL,                                 /* sub */"}, {"sha": "127e4280a369c5a6ac7ed2be7db92b0383acd273", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1949,6 +1949,7 @@ struct rtl_opt_pass pass_instantiate_virtual_regs =\n  {\n   RTL_PASS,\n   \"vregs\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   instantiate_virtual_regs,             /* execute */\n   NULL,                                 /* sub */\n@@ -6925,6 +6926,7 @@ struct rtl_opt_pass pass_leaf_regs =\n  {\n   RTL_PASS,\n   \"*leaf_regs\",                         /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_check_leaf_regs,       /* execute */\n   NULL,                                 /* sub */\n@@ -6963,6 +6965,7 @@ struct rtl_opt_pass pass_thread_prologue_and_epilogue =\n  {\n   RTL_PASS,\n   \"pro_and_epilogue\",                   /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_thread_prologue_and_epilogue, /* execute */\n   NULL,                                 /* sub */\n@@ -7164,6 +7167,7 @@ struct rtl_opt_pass pass_match_asm_constraints =\n  {\n   RTL_PASS,\n   \"asmcons\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   rest_of_match_asm_constraints,\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "545bd1532a57b8acb2f852beca26548a27045266", "filename": "gcc/fwprop.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1486,6 +1486,7 @@ struct rtl_opt_pass pass_rtl_fwprop =\n  {\n   RTL_PASS,\n   \"fwprop1\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_fwprop,\t\t\t\t/* gate */\n   fwprop,\t\t\t\t/* execute */\n   NULL,                                 /* sub */\n@@ -1535,6 +1536,7 @@ struct rtl_opt_pass pass_rtl_fwprop_addr =\n  {\n   RTL_PASS,\n   \"fwprop2\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_fwprop,\t\t\t\t/* gate */\n   fwprop_addr,\t\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "4ebe6d67bdb7b67747dd50579097d73beacd489f", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4027,6 +4027,7 @@ struct rtl_opt_pass pass_rtl_pre =\n  {\n   RTL_PASS,\n   \"rtl pre\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_rtl_pre,                         /* gate */\n   execute_rtl_pre,    \t\t\t/* execute */\n   NULL,                                 /* sub */\n@@ -4047,6 +4048,7 @@ struct rtl_opt_pass pass_rtl_hoist =\n  {\n   RTL_PASS,\n   \"hoist\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_rtl_hoist,                       /* gate */\n   execute_rtl_hoist,  \t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "8557c83c3c5e4396520f1df4fa407dce4708ce24", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -194,6 +194,7 @@ struct gimple_opt_pass pass_lower_cf =\n  {\n   GIMPLE_PASS,\n   \"lower\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   lower_function_body,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "ad02589faee01ab14e8c49d15dd74d3e96302c8f", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2682,6 +2682,7 @@ struct gimple_opt_pass pass_strength_reduction =\n  {\n   GIMPLE_PASS,\n   \"slsr\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_strength_reduction,\t\t/* gate */\n   execute_strength_reduction,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "2365e74a41a03b068b4b2a36d6e0e537253e17eb", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4462,6 +4462,7 @@ struct rtl_opt_pass pass_rtl_ifcvt =\n  {\n   RTL_PASS,\n   \"ce1\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_if_conversion,            /* gate */\n   rest_of_handle_if_conversion,         /* execute */\n   NULL,                                 /* sub */\n@@ -4499,6 +4500,7 @@ struct rtl_opt_pass pass_if_after_combine =\n  {\n   RTL_PASS,\n   \"ce2\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_if_after_combine,         /* gate */\n   rest_of_handle_if_after_combine,      /* execute */\n   NULL,                                 /* sub */\n@@ -4535,6 +4537,7 @@ struct rtl_opt_pass pass_if_after_reload =\n  {\n   RTL_PASS,\n   \"ce3\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_if_after_reload,          /* gate */\n   rest_of_handle_if_after_reload,       /* execute */\n   NULL,                                 /* sub */"}, {"sha": "003f8e011a05aa0457f93f13652485bc7d692b89", "filename": "gcc/init-regs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Finit-regs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Finit-regs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finit-regs.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -143,6 +143,7 @@ struct rtl_opt_pass pass_initialize_regs =\n  {\n   RTL_PASS,\n   \"init-regs\",                          /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_initialize_regs,                 /* gate */\n   rest_of_handle_initialize_regs,       /* execute */\n   NULL,                                 /* sub */"}, {"sha": "456a0074a5fb5e83775957a3cdae777020964cd5", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2543,6 +2543,7 @@ struct ipa_opt_pass_d pass_ipa_cp =\n  {\n   IPA_PASS,\n   \"cp\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   cgraph_gate_cp,\t\t/* gate */\n   ipcp_driver,\t\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "9db7f1c0958e782ec54995b3606de7d477d6de9f", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2655,6 +2655,7 @@ struct gimple_opt_pass pass_inline_parameters =\n  {\n   GIMPLE_PASS,\n   \"inline_param\",\t\t\t/* name */\n+  OPTGROUP_INLINE,                      /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   compute_inline_parameters_for_current,/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "5154273e371d4d9a25620b80ee507c6132de740f", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2019,6 +2019,7 @@ struct gimple_opt_pass pass_early_inline =\n  {\n   GIMPLE_PASS,\n   \"einline\",\t \t\t\t/* name */\n+  OPTGROUP_INLINE,                      /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   early_inliner,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2051,6 +2052,7 @@ struct ipa_opt_pass_d pass_ipa_inline =\n  {\n   IPA_PASS,\n   \"inline\",\t\t\t\t/* name */\n+  OPTGROUP_INLINE,                      /* optinfo_flags */\n   gate_ipa_inline,\t\t\t/* gate */\n   ipa_inline,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "58f9e5a11da1895c969325e1f4398072f1a614de", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1497,6 +1497,7 @@ struct ipa_opt_pass_d pass_ipa_pure_const =\n  {\n   IPA_PASS,\n   \"pure-const\",\t\t                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_pure_const,\t\t\t/* gate */\n   propagate,\t\t\t        /* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1662,6 +1663,7 @@ struct gimple_opt_pass pass_local_pure_const =\n  {\n   GIMPLE_PASS,\n   \"local-pure-const\",\t                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_pure_const,\t\t\t/* gate */\n   local_pure_const,\t\t        /* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "06dc18b230260f1c8da828f2ba941bb9c979127a", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1181,6 +1181,7 @@ struct ipa_opt_pass_d pass_ipa_reference =\n  {\n   IPA_PASS,\n   \"static-var\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_reference,\t\t\t/* gate */\n   propagate,\t\t\t        /* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "440b3f920558cff89a47ea4c16032bdf1eae927b", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1601,6 +1601,7 @@ struct gimple_opt_pass pass_split_functions =\n  {\n   GIMPLE_PASS,\n   \"fnsplit\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_split_functions,\t\t\t/* gate */\n   execute_split_functions,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1642,6 +1643,7 @@ struct gimple_opt_pass pass_feedback_split_functions =\n  {\n   GIMPLE_PASS,\n   \"feedback_fnsplit\",\t\t\t/* name */\n+  OPTGROUP_NONE,                      /* optinfo_flags */\n   gate_feedback_split_functions,\t/* gate */\n   execute_feedback_split_functions,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "641c54d389b9411038623049adfd5ebfd62a8036", "filename": "gcc/ipa.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -948,6 +948,7 @@ struct simple_ipa_opt_pass pass_ipa_function_and_variable_visibility =\n  {\n   SIMPLE_IPA_PASS,\n   \"visibility\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   local_function_and_variable_visibility,/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -977,6 +978,7 @@ struct simple_ipa_opt_pass pass_ipa_free_inline_summary =\n  {\n   SIMPLE_IPA_PASS,\n   \"*free_inline_summary\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   free_inline_summary,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1015,6 +1017,7 @@ struct ipa_opt_pass_d pass_ipa_whole_program_visibility =\n  {\n   IPA_PASS,\n   \"whole-program\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_whole_program_function_and_variable_visibility,/* gate */\n   whole_program_function_and_variable_visibility,/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1098,6 +1101,7 @@ struct ipa_opt_pass_d pass_ipa_profile =\n  {\n   IPA_PASS,\n   \"profile_estimate\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_ipa_profile,\t\t\t/* gate */\n   ipa_profile,\t\t\t        /* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1408,6 +1412,7 @@ struct ipa_opt_pass_d pass_ipa_cdtor_merge =\n  {\n   IPA_PASS,\n   \"cdtor\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_ipa_cdtor_merge,\t\t\t/* gate */\n   ipa_cdtor_merge,\t\t        /* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "6cd3f5465fd2939287ef7d88fa5b0502830a1dcb", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4716,6 +4716,7 @@ struct rtl_opt_pass pass_ira =\n  {\n   RTL_PASS,\n   \"ira\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_ira,\t\t        /* execute */\n   NULL,                                 /* sub */\n@@ -4742,6 +4743,7 @@ struct rtl_opt_pass pass_reload =\n  {\n   RTL_PASS,\n   \"reload\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_reload,\t        /* execute */\n   NULL,                                 /* sub */"}, {"sha": "70da7c8c2846f11877a9240c023201d9e5ebab1e", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -146,6 +146,7 @@ struct rtl_opt_pass pass_cleanup_barriers =\n  {\n   RTL_PASS,\n   \"barriers\",                           /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   cleanup_barriers,                     /* execute */\n   NULL,                                 /* sub */"}, {"sha": "f140686ba1168534b3ee8137a0cf3e2cdb4cb8e2", "filename": "gcc/loop-init.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -189,6 +189,7 @@ struct rtl_opt_pass pass_loop2 =\n  {\n   RTL_PASS,\n   \"loop2\",                              /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_handle_loop2, \t\t        /* gate */\n   NULL,                                 /* execute */\n   NULL,                                 /* sub */\n@@ -225,6 +226,7 @@ struct rtl_opt_pass pass_rtl_loop_init =\n  {\n   RTL_PASS,\n   \"loop2_init\",                           /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rtl_loop_init,                        /* execute */\n   NULL,                                 /* sub */\n@@ -265,6 +267,7 @@ struct rtl_opt_pass pass_rtl_loop_done =\n  {\n   RTL_PASS,\n   \"loop2_done\",                          /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rtl_loop_done,                        /* execute */\n   NULL,                                 /* sub */\n@@ -301,6 +304,7 @@ struct rtl_opt_pass pass_rtl_move_loop_invariants =\n  {\n   RTL_PASS,\n   \"loop2_invariant\",                    /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_rtl_move_loop_invariants,        /* gate */\n   rtl_move_loop_invariants,             /* execute */\n   NULL,                                 /* sub */\n@@ -337,6 +341,7 @@ struct rtl_opt_pass pass_rtl_unswitch =\n  {\n   RTL_PASS,\n   \"loop2_unswitch\",                      /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_rtl_unswitch,                    /* gate */\n   rtl_unswitch,                         /* execute */\n   NULL,                                 /* sub */\n@@ -385,6 +390,7 @@ struct rtl_opt_pass pass_rtl_unroll_and_peel_loops =\n  {\n   RTL_PASS,\n   \"loop2_unroll\",                        /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_rtl_unroll_and_peel_loops,       /* gate */\n   rtl_unroll_and_peel_loops,            /* execute */\n   NULL,                                 /* sub */\n@@ -426,6 +432,7 @@ struct rtl_opt_pass pass_rtl_doloop =\n  {\n   RTL_PASS,\n   \"loop2_doloop\",                        /* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_rtl_doloop,                      /* gate */\n   rtl_doloop,                           /* execute */\n   NULL,                                 /* sub */"}, {"sha": "4d1830c8239e23d1d236c046468e200e2f611f8e", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1665,6 +1665,7 @@ struct rtl_opt_pass pass_lower_subreg =\n  {\n   RTL_PASS,\n   \"subreg1\",\t                        /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_lower_subreg,             /* gate */\n   rest_of_handle_lower_subreg,          /* execute */\n   NULL,                                 /* sub */\n@@ -1685,6 +1686,7 @@ struct rtl_opt_pass pass_lower_subreg2 =\n  {\n   RTL_PASS,\n   \"subreg2\",\t                        /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_lower_subreg,             /* gate */\n   rest_of_handle_lower_subreg2,          /* execute */\n   NULL,                                 /* sub */"}, {"sha": "6b689ee5ba170468691167bd7efeef7f4cd03528", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1009,6 +1009,7 @@ struct ipa_opt_pass_d pass_ipa_lto_gimple_out =\n  {\n   IPA_PASS,\n   \"lto_gimple_out\",\t                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_lto_out,\t\t\t        /* gate */\n   NULL,\t\t                \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1424,6 +1425,7 @@ struct ipa_opt_pass_d pass_ipa_lto_finish_out =\n  {\n   IPA_PASS,\n   \"lto_decls_out\",\t                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_lto_out,\t\t\t        /* gate */\n   NULL,        \t                        /* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "d8f8ba5d2ae4b6e5fecc986a39cc067c3194b586", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -763,6 +763,7 @@ struct rtl_opt_pass pass_mode_switching =\n  {\n   RTL_PASS,\n   \"mode_sw\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_mode_switching,                  /* gate */\n   rest_of_handle_mode_switching,        /* execute */\n   NULL,                                 /* sub */"}, {"sha": "1979f440c34d568b09a8709ed5ec1977cc023af6", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3364,6 +3364,7 @@ struct rtl_opt_pass pass_sms =\n  {\n   RTL_PASS,\n   \"sms\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_sms,                      /* gate */\n   rest_of_handle_sms,                   /* execute */\n   NULL,                                 /* sub */"}, {"sha": "a59841384ca762889fc53053e4cb1b94e82df4a8", "filename": "gcc/omp-low.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -5753,6 +5753,7 @@ struct gimple_opt_pass pass_expand_omp =\n  {\n   GIMPLE_PASS,\n   \"ompexp\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_expand_omp,\t\t\t/* gate */\n   execute_expand_omp,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -6927,6 +6928,7 @@ struct gimple_opt_pass pass_lower_omp =\n  {\n   GIMPLE_PASS,\n   \"omplower\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_lower_omp,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -7190,6 +7192,7 @@ struct gimple_opt_pass pass_diagnose_omp_blocks =\n   {\n     GIMPLE_PASS,\n     \"*diagnose_omp_blocks\",\t\t/* name */\n+    OPTGROUP_NONE,                      /* optinfo_flags */\n     gate_diagnose_omp_blocks,\t\t/* gate */\n     diagnose_omp_structured_block_errors,\t/* execute */\n     NULL,\t\t\t\t/* sub */"}, {"sha": "5ebc6309e6ba2d808a19b4acd53aa20cc3e6b685", "filename": "gcc/opts-global.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -240,7 +240,7 @@ read_cmdline_options (struct gcc_options *opts, struct gcc_options *opts_set,\n    REPORT_VECTORIZED_LOCATIONS ==> \"-optimized\"\n    REPORT_UNVECTORIZED_LOCATIONS ==> \"-missed\"\n \n-   Any higher verbosity levels get mapped to \"-optall\" flags.  */\n+   Any higher verbosity levels get mapped to \"-all\" flags.  */\n \n static void\n dump_remap_tree_vectorizer_verbose (const char *arg)\n@@ -259,7 +259,7 @@ dump_remap_tree_vectorizer_verbose (const char *arg)\n       remapped_opt_info = \"missed\";\n       break;\n     default:\n-      remapped_opt_info = \"optall\";\n+      remapped_opt_info = \"all\";\n       break;\n     }\n \n@@ -390,7 +390,7 @@ handle_common_deferred_options (void)\n \n         case OPT_fopt_info_:\n \t  if (!opt_info_switch_p (opt->arg))\n-\t    error (\"unrecognized command line option %<-fopt-info%s%>\",\n+\t    error (\"unrecognized command line option %<-fopt-info-%s%>\",\n                    opt->arg);\n           break;\n "}, {"sha": "67aae52391c9698ea91ff7f0b8b7115e6a3dfa30", "filename": "gcc/passes.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -103,7 +103,6 @@ debug_pass (void)\n \n \n /* Global variables used to communicate with passes.  */\n-int dump_flags;\n bool in_gimple_form;\n bool first_pass_instance;\n \n@@ -285,6 +284,7 @@ struct simple_ipa_opt_pass pass_early_local_passes =\n  {\n   SIMPLE_IPA_PASS,\n   \"early_local_cleanups\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_all_early_local_passes,\t\t/* gate */\n   execute_all_early_local_passes,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -314,6 +314,7 @@ static struct gimple_opt_pass pass_all_early_optimizations =\n  {\n   GIMPLE_PASS,\n   \"early_optimizations\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_all_early_optimizations,\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -341,6 +342,7 @@ static struct gimple_opt_pass pass_all_optimizations =\n  {\n   GIMPLE_PASS,\n   \"*all_optimizations\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_all_optimizations,\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -368,6 +370,7 @@ static struct gimple_opt_pass pass_all_optimizations_g =\n  {\n   GIMPLE_PASS,\n   \"*all_optimizations_g\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_all_optimizations_g,\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -395,6 +398,7 @@ static struct rtl_opt_pass pass_rest_of_compilation =\n  {\n   RTL_PASS,\n   \"*rest_of_compilation\",               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_rest_of_compilation,             /* gate */\n   NULL,                                 /* execute */\n   NULL,                                 /* sub */\n@@ -420,6 +424,7 @@ static struct rtl_opt_pass pass_postreload =\n  {\n   RTL_PASS,\n   \"*all-postreload\",                        /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_postreload,                      /* gate */\n   NULL,                                 /* execute */\n   NULL,                                 /* sub */\n@@ -487,6 +492,7 @@ register_one_dump_file (struct opt_pass *pass)\n   const char *name, *full_name, *prefix;\n   char num[10];\n   int flags, id;\n+  int optgroup_flags = OPTGROUP_NONE;\n \n   /* See below in next_pass_1.  */\n   num[0] = '\\0';\n@@ -503,15 +509,26 @@ register_one_dump_file (struct opt_pass *pass)\n   name = name ? name + 1 : pass->name;\n   dot_name = concat (\".\", name, num, NULL);\n   if (pass->type == SIMPLE_IPA_PASS || pass->type == IPA_PASS)\n-    prefix = \"ipa-\", flags = TDF_IPA;\n+    {\n+      prefix = \"ipa-\";\n+      flags = TDF_IPA;\n+      optgroup_flags |= OPTGROUP_IPA;\n+    }\n   else if (pass->type == GIMPLE_PASS)\n-    prefix = \"tree-\", flags = TDF_TREE;\n+    {\n+      prefix = \"tree-\";\n+      flags = TDF_TREE;\n+    }\n   else\n-    prefix = \"rtl-\", flags = TDF_RTL;\n+    {\n+      prefix = \"rtl-\";\n+      flags = TDF_RTL;\n+    }\n \n   flag_name = concat (prefix, name, num, NULL);\n   glob_name = concat (prefix, name, NULL);\n-  id = dump_register (dot_name, flag_name, glob_name, flags);\n+  optgroup_flags |= pass->optinfo_flags;\n+  id = dump_register (dot_name, flag_name, glob_name, flags, optgroup_flags);\n   set_pass_for_id (id, pass);\n   full_name = concat (prefix, pass->name, num, NULL);\n   register_pass_name (pass, full_name);"}, {"sha": "6a5ea7d37f4476886f822b7ffa9f829583a16e3e", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1328,6 +1328,7 @@ struct rtl_opt_pass pass_gcse2 =\n  {\n   RTL_PASS,\n   \"gcse2\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_gcse2,                    /* gate */\n   rest_of_handle_gcse2,                 /* execute */\n   NULL,                                 /* sub */"}, {"sha": "d268218523685980cf2e581061c22422b0c47bda", "filename": "gcc/postreload.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2289,6 +2289,7 @@ struct rtl_opt_pass pass_postreload_cse =\n  {\n   RTL_PASS,\n   \"postreload\",                         /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_postreload,               /* gate */\n   rest_of_handle_postreload,            /* execute */\n   NULL,                                 /* sub */"}, {"sha": "9fc3e71e7b28932489ebebb1a196fe139c716f2e", "filename": "gcc/predict.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2823,6 +2823,7 @@ struct gimple_opt_pass pass_profile =\n  {\n   GIMPLE_PASS,\n   \"profile_estimate\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_estimate_probability,\t\t/* gate */\n   tree_estimate_probability_driver,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2842,6 +2843,7 @@ struct gimple_opt_pass pass_strip_predict_hints =\n  {\n   GIMPLE_PASS,\n   \"*strip_predict_hints\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   strip_predict_hints,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "2cc45c9fc1d482c7806e1b82b65642ef14d6390e", "filename": "gcc/recog.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3742,6 +3742,7 @@ struct rtl_opt_pass pass_peephole2 =\n  {\n   RTL_PASS,\n   \"peephole2\",                          /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_peephole2,                /* gate */\n   rest_of_handle_peephole2,             /* execute */\n   NULL,                                 /* sub */\n@@ -3769,6 +3770,7 @@ struct rtl_opt_pass pass_split_all_insns =\n  {\n   RTL_PASS,\n   \"split1\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_split_all_insns,       /* execute */\n   NULL,                                 /* sub */\n@@ -3799,6 +3801,7 @@ struct rtl_opt_pass pass_split_after_reload =\n  {\n   RTL_PASS,\n   \"split2\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_split_after_reload,    /* execute */\n   NULL,                                 /* sub */\n@@ -3843,6 +3846,7 @@ struct rtl_opt_pass pass_split_before_regstack =\n  {\n   RTL_PASS,\n   \"split3\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_split_before_regstack,    /* gate */\n   rest_of_handle_split_before_regstack, /* execute */\n   NULL,                                 /* sub */\n@@ -3881,6 +3885,7 @@ struct rtl_opt_pass pass_split_before_sched2 =\n  {\n   RTL_PASS,\n   \"split4\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_split_before_sched2,      /* gate */\n   rest_of_handle_split_before_sched2,   /* execute */\n   NULL,                                 /* sub */\n@@ -3912,6 +3917,7 @@ struct rtl_opt_pass pass_split_for_shorten_branches =\n  {\n   RTL_PASS,\n   \"split5\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_do_final_split,                  /* gate */\n   split_all_insns_noflow,               /* execute */\n   NULL,                                 /* sub */"}, {"sha": "1566752400050bb803d1d665d0f393fe5485748a", "filename": "gcc/ree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -949,6 +949,7 @@ struct rtl_opt_pass pass_ree =\n  {\n   RTL_PASS,\n   \"ree\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_ree,                      /* gate */\n   rest_of_handle_ree,                   /* execute */\n   NULL,                                 /* sub */"}, {"sha": "c23c770af9308aa6c8989402f82203b2d97f80cd", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3305,6 +3305,7 @@ struct rtl_opt_pass pass_stack_regs =\n  {\n   RTL_PASS,\n   \"*stack_regs\",                        /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_stack_regs,               /* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,                                 /* sub */\n@@ -3336,6 +3337,7 @@ struct rtl_opt_pass pass_stack_regs_run =\n  {\n   RTL_PASS,\n   \"stack\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_stack_regs,            /* execute */\n   NULL,                                 /* sub */"}, {"sha": "b91f5467a281ddd46c90ff8c610b302094dba094", "filename": "gcc/regcprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1235,6 +1235,7 @@ struct rtl_opt_pass pass_cprop_hardreg =\n  {\n   RTL_PASS,\n   \"cprop_hardreg\",                      /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_cprop,                    /* gate */\n   copyprop_hardreg_forward,             /* execute */\n   NULL,                                 /* sub */"}, {"sha": "9fba9c3237b2f3c9a68a7e48acb748c96acf36ac", "filename": "gcc/reginfo.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -972,6 +972,7 @@ struct rtl_opt_pass pass_reginfo_init =\n  {\n   RTL_PASS,\n   \"reginfo\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   reginfo_init,                         /* execute */\n   NULL,                                 /* sub */"}, {"sha": "29f6e6546b69710814df99e152a00d11aa0824e8", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1369,6 +1369,7 @@ struct rtl_opt_pass pass_regmove =\n  {\n   RTL_PASS,\n   \"regmove\",                            /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_regmove,                  /* gate */\n   regmove_optimize,\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "10787a23db1c346becd6ccc582851413e0b119be", "filename": "gcc/regrename.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1842,6 +1842,7 @@ struct rtl_opt_pass pass_regrename =\n  {\n   RTL_PASS,\n   \"rnreg\",                              /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_regrename,                /* gate */\n   regrename_optimize,                   /* execute */\n   NULL,                                 /* sub */"}, {"sha": "aa6ad781f37fd14862b2b8b97740999fb7eb0ace", "filename": "gcc/reorg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4122,6 +4122,7 @@ struct rtl_opt_pass pass_delay_slots =\n  {\n   RTL_PASS,\n   \"dbr\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_delay_slots,              /* gate */\n   rest_of_handle_delay_slots,           /* execute */\n   NULL,                                 /* sub */\n@@ -4156,6 +4157,7 @@ struct rtl_opt_pass pass_machine_reorg =\n  {\n   RTL_PASS,\n   \"mach\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_machine_reorg,            /* gate */\n   rest_of_handle_machine_reorg,         /* execute */\n   NULL,                                 /* sub */"}, {"sha": "3fb370cd18aa506de0bd1f8bb9e1c624373f2395", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3575,6 +3575,7 @@ struct rtl_opt_pass pass_sched =\n  {\n   RTL_PASS,\n   \"sched1\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_sched,                    /* gate */\n   rest_of_handle_sched,                 /* execute */\n   NULL,                                 /* sub */\n@@ -3596,6 +3597,7 @@ struct rtl_opt_pass pass_sched2 =\n  {\n   RTL_PASS,\n   \"sched2\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_sched2,                   /* gate */\n   rest_of_handle_sched2,                /* execute */\n   NULL,                                 /* sub */"}, {"sha": "3f126c35b1c4ef117d37ca54b096568b06c61ee9", "filename": "gcc/stack-ptr-mod.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fstack-ptr-mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fstack-ptr-mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstack-ptr-mod.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -96,6 +96,7 @@ struct rtl_opt_pass pass_stack_ptr_mod =\n  {\n   RTL_PASS,\n   \"*stack_ptr_mod\",                     /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,                                 /* gate */\n   rest_of_handle_stack_ptr_mod,         /* execute */\n   NULL,                                 /* sub */"}, {"sha": "f0687c78e4c080230a07e1a3190266d13828173d", "filename": "gcc/statistics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fstatistics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fstatistics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstatistics.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -246,7 +246,7 @@ void\n statistics_early_init (void)\n {\n   statistics_dump_nr = dump_register (\".statistics\", \"statistics\",\n-\t\t\t\t      \"statistics\", TDF_TREE);\n+\t\t\t\t      \"statistics\", TDF_TREE, OPTGROUP_NONE);\n }\n \n /* Init the statistics.  */"}, {"sha": "20bc24e208ca14a53fc3b5a6139a401e0a532875", "filename": "gcc/store-motion.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1238,6 +1238,7 @@ struct rtl_opt_pass pass_rtl_store_motion =\n  {\n   RTL_PASS,\n   \"store_motion\",                       /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_rtl_store_motion,                /* gate */\n   execute_rtl_store_motion,\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "04a768c6ebf0f003ff7d5eb9c5a8daa1da8de8e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1,3 +1,10 @@\n+2012-11-01  Sharad Singhai  <singhai@google.com>\n+\n+\t* testsuite/gcc.dg/plugin/selfassign.c: Add opgtroup_flags initializer.\n+\t* testsuite/gcc.dg/plugin/one_time_plugin.c: Likewise.\n+\t* testsuite/g++.dg/plugin/selfassign.c: Likewise.\n+\t* testsuite/g++.dg/plugin/dumb_plugin.c: Likewise.\n+\n 2012-10-31  Dehao Chen  <dehao@google.com>\n \n \t* g++.dg/debug/dwarf2/block.C: New testcase."}, {"sha": "0f15140068c6e245c90b3596b2fd4dc2bfc18084", "filename": "gcc/testsuite/g++.dg/plugin/dumb_plugin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdumb_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdumb_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdumb_plugin.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -62,6 +62,7 @@ static struct gimple_opt_pass pass_dumb_plugin_example =\n   {\n     GIMPLE_PASS,\n     \"dumb_plugin_example\",                /* name */\n+    OPTGROUP_NONE,                        /* optinfo_flags */\n     gate_dumb_plugin_example,             /* gate */\n     execute_dumb_plugin_example,          /* execute */\n     NULL,                                 /* sub */"}, {"sha": "37a0a979cb7cfc45ac4c7ad9d1f82f8476d6413b", "filename": "gcc/testsuite/g++.dg/plugin/selfassign.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -268,6 +268,7 @@ static struct gimple_opt_pass pass_warn_self_assign =\n   {\n     GIMPLE_PASS,\n     \"warn_self_assign\",                   /* name */\n+    OPTGROUP_NONE,                        /* optinfo_flags */\n     gate_warn_self_assign,                /* gate */\n     execute_warn_self_assign,             /* execute */\n     NULL,                                 /* sub */"}, {"sha": "45e6257c070ba808e71c25950a9d948c5926c582", "filename": "gcc/testsuite/gcc.dg/plugin/one_time_plugin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -32,6 +32,7 @@ struct gimple_opt_pass one_pass =\n   {\n   GIMPLE_PASS,\n   \"cfg\",                           /* name */\n+  OPTGROUP_NONE,                         /* optinfo_flags */\n   one_pass_gate,                         /* gate */\n   one_pass_exec,       /* execute */\n   NULL,                                 /* sub */"}, {"sha": "37a0a979cb7cfc45ac4c7ad9d1f82f8476d6413b", "filename": "gcc/testsuite/gcc.dg/plugin/selfassign.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -268,6 +268,7 @@ static struct gimple_opt_pass pass_warn_self_assign =\n   {\n     GIMPLE_PASS,\n     \"warn_self_assign\",                   /* name */\n+    OPTGROUP_NONE,                        /* optinfo_flags */\n     gate_warn_self_assign,                /* gate */\n     execute_warn_self_assign,             /* execute */\n     NULL,                                 /* sub */"}, {"sha": "55cff112aebbf45c6f23c2ad1bad323e4ee4a99d", "filename": "gcc/tracer.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -403,6 +403,7 @@ struct gimple_opt_pass pass_tracer =\n  {\n   GIMPLE_PASS,\n   \"tracer\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tracer,                          /* gate */\n   tracer,                               /* execute */\n   NULL,                                 /* sub */"}, {"sha": "b9774d4afe8ebf92609326078bec3b440e35b44f", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -798,6 +798,7 @@ struct gimple_opt_pass pass_diagnose_tm_blocks =\n   {\n     GIMPLE_PASS,\n     \"*diagnose_tm_blocks\",\t\t/* name */\n+    OPTGROUP_NONE,                      /* optinfo_flags */\n     gate_tm,\t\t\t\t/* gate */\n     diagnose_tm_blocks,\t\t\t/* execute */\n     NULL,\t\t\t\t/* sub */\n@@ -1738,6 +1739,7 @@ struct gimple_opt_pass pass_lower_tm =\n  {\n   GIMPLE_PASS,\n   \"tmlower\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tm,\t\t\t\t/* gate */\n   execute_lower_tm,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1985,6 +1987,7 @@ struct gimple_opt_pass pass_tm_init =\n  {\n   GIMPLE_PASS,\n   \"*tminit\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tm_init,\t\t\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2571,6 +2574,7 @@ struct gimple_opt_pass pass_tm_mark =\n  {\n   GIMPLE_PASS,\n   \"tmmark\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_tm_mark,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2848,6 +2852,7 @@ struct gimple_opt_pass pass_tm_edges =\n  {\n   GIMPLE_PASS,\n   \"tmedge\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_tm_edges,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -3513,6 +3518,7 @@ struct gimple_opt_pass pass_tm_memopt =\n  {\n   GIMPLE_PASS,\n   \"tmmemopt\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tm_memopt,\t\t\t/* gate */\n   execute_tm_memopt,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -5067,6 +5073,7 @@ struct simple_ipa_opt_pass pass_ipa_tm =\n  {\n   SIMPLE_IPA_PASS,\n   \"tmipa\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tm,\t\t\t\t/* gate */\n   ipa_tm_execute,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "12357eb15034557ea322b3dfc6dc5851002e93e2", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -920,6 +920,7 @@ struct gimple_opt_pass pass_call_cdce =\n  {\n   GIMPLE_PASS,\n   \"cdce\",                               /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_call_cdce,                       /* gate */\n   tree_call_cdce,                       /* execute */\n   NULL,                                 /* sub */"}, {"sha": "28cdca3df0d68623cfa0f6ad477b1f8e9942567f", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -247,6 +247,7 @@ struct gimple_opt_pass pass_build_cfg =\n  {\n   GIMPLE_PASS,\n   \"cfg\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_build_cfg,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -7705,6 +7706,7 @@ struct gimple_opt_pass pass_split_crit_edges =\n  {\n   GIMPLE_PASS,\n   \"crited\",                          /* name */\n+  OPTGROUP_NONE,                 /* optinfo_flags */\n   NULL,                          /* gate */\n   split_critical_edges,          /* execute */\n   NULL,                          /* sub */\n@@ -7858,6 +7860,7 @@ struct gimple_opt_pass pass_warn_function_return =\n  {\n   GIMPLE_PASS,\n   \"*warn_function_return\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_warn_function_return,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -7894,6 +7897,7 @@ struct gimple_opt_pass pass_warn_function_noreturn =\n  {\n   GIMPLE_PASS,\n   \"*warn_function_noreturn\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_warn_function_noreturn,\t\t/* gate */\n   execute_warn_function_noreturn,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -7992,6 +7996,7 @@ struct gimple_opt_pass pass_warn_unused_result =\n   {\n     GIMPLE_PASS,\n     \"*warn_unused_result\",\t\t/* name */\n+    OPTGROUP_NONE,                        /* optinfo_flags */\n     gate_warn_unused_result,\t\t/* gate */\n     run_warn_unused_result,\t\t/* execute */\n     NULL,\t\t\t\t/* sub */"}, {"sha": "412033d17a2a47bd4862a22d171d73a9837b8df5", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -977,6 +977,7 @@ struct gimple_opt_pass pass_merge_phi =\n  {\n   GIMPLE_PASS,\n   \"mergephi\",\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   gate_merge_phi,\t\t/* gate */\n   merge_phi_nodes,\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "26bb25a19d93e3e9e951f05f130a975ee70d5b94", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1608,6 +1608,7 @@ struct gimple_opt_pass pass_lower_complex =\n  {\n   GIMPLE_PASS,\n   \"cplxlower\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   0,\t\t\t\t\t/* gate */\n   tree_lower_complex,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1638,6 +1639,7 @@ struct gimple_opt_pass pass_lower_complex_O0 =\n  {\n   GIMPLE_PASS,\n   \"cplxlower0\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_no_optimization,\t\t\t/* gate */\n   tree_lower_complex,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "a778be5f22c643b2c4fce7899193f20c57f58e4d", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2140,6 +2140,7 @@ struct gimple_opt_pass pass_lower_eh =\n  {\n   GIMPLE_PASS,\n   \"eh\",\t\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   lower_eh_constructs,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2999,6 +3000,7 @@ struct gimple_opt_pass pass_refactor_eh =\n  {\n   GIMPLE_PASS,\n   \"ehopt\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_refactor_eh,\t\t\t/* gate */\n   refactor_eh,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -3207,6 +3209,7 @@ struct gimple_opt_pass pass_lower_resx =\n  {\n   GIMPLE_PASS,\n   \"resx\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_lower_resx,\t\t\t/* gate */\n   execute_lower_resx,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -3503,6 +3506,7 @@ struct gimple_opt_pass pass_lower_eh_dispatch =\n  {\n   GIMPLE_PASS,\n   \"ehdisp\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_lower_eh_dispatch,\t\t/* gate */\n   execute_lower_eh_dispatch,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -4326,6 +4330,7 @@ struct gimple_opt_pass pass_cleanup_eh = {\n   {\n    GIMPLE_PASS,\n    \"ehcleanup\",\t\t\t/* name */\n+   OPTGROUP_NONE,               /* optinfo_flags */\n    gate_cleanup_eh,\t\t/* gate */\n    execute_cleanup_eh,\t\t/* execute */\n    NULL,\t\t\t/* sub */"}, {"sha": "7b058b11771b1998c8bbc3050a91039cec80be56", "filename": "gcc/tree-emutls.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-emutls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-emutls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-emutls.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -815,6 +815,7 @@ struct simple_ipa_opt_pass pass_ipa_lower_emutls =\n  {\n   SIMPLE_IPA_PASS,\n   \"emutls\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_emutls,\t\t\t\t/* gate */\n   ipa_lower_emutls,\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "0afbcde91c28f5ce83e8f6e0a116b46b0a2851c8", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1859,6 +1859,7 @@ struct gimple_opt_pass pass_if_conversion =\n  {\n   GIMPLE_PASS,\n   \"ifcvt\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tree_if_conversion,\t\t/* gate */\n   main_tree_if_conversion,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "16c021473e13e8fb5138d03a8ad85ae8d09eee20", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2404,6 +2404,7 @@ struct gimple_opt_pass pass_build_ssa =\n  {\n   GIMPLE_PASS,\n   \"ssa\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   rewrite_into_ssa,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "10bd29e3d5f738851d6d8dccc615bec4a28edf49", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1578,6 +1578,7 @@ struct gimple_opt_pass pass_loop_distribution =\n  {\n   GIMPLE_PASS,\n   \"ldist\",\t\t\t/* name */\n+  OPTGROUP_LOOP,                /* optinfo_flags */\n   gate_tree_loop_distribution,  /* gate */\n   tree_loop_distribution,       /* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "53fba71df390d4003165e9390addbc08e51ccf57", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1368,6 +1368,7 @@ struct gimple_opt_pass pass_mudflap_1 =\n  {\n   GIMPLE_PASS,\n   \"mudflap1\",                           /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_mudflap,                         /* gate */\n   execute_mudflap_function_decls,       /* execute */\n   NULL,                                 /* sub */\n@@ -1387,6 +1388,7 @@ struct gimple_opt_pass pass_mudflap_2 =\n  {\n   GIMPLE_PASS,\n   \"mudflap2\",                           /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_mudflap,                         /* gate */\n   execute_mudflap_function_ops,         /* execute */\n   NULL,                                 /* sub */"}, {"sha": "07cf00ff372a75a71fae843df21000de6581255e", "filename": "gcc/tree-nomudflap.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-nomudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-nomudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nomudflap.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -91,6 +91,7 @@ struct gimple_opt_pass pass_mudflap_1 =\n  {\n   GIMPLE_PASS,\n   \"mudflap1\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_mudflap,                         /* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -110,6 +111,7 @@ struct gimple_opt_pass pass_mudflap_2 =\n  {\n   GIMPLE_PASS,\n   \"mudflap2\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_mudflap,                         /* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "c471a72ae2e775fd2181bd8d836103dcd24454ad", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -275,6 +275,7 @@ struct gimple_opt_pass pass_nrv =\n  {\n   GIMPLE_PASS,\n   \"nrv\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_pass_return_slot,\t\t/* gate */\n   tree_nrv,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -360,6 +361,7 @@ struct gimple_opt_pass pass_return_slot =\n  {\n   GIMPLE_PASS,\n   \"retslot\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_return_slot_opt,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "ffc3fdd13597e68ebb459abc3bcee1c211863b3a", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1268,6 +1268,7 @@ struct gimple_opt_pass pass_object_sizes =\n  {\n   GIMPLE_PASS,\n   \"objsz\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   compute_object_sizes,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "a918101a4db14b90c4602fc48ff132e793f95523", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -95,6 +95,7 @@ struct gimple_opt_pass pass_cleanup_cfg_post_optimizing =\n  {\n   GIMPLE_PASS,\n   \"optimized\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_cleanup_cfg_post_optimizing,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -222,6 +223,7 @@ struct gimple_opt_pass pass_fixup_cfg =\n  {\n   GIMPLE_PASS,\n   \"*free_cfg_annotations\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_fixup_cfg,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "8ed2d986ada70904b9110dac67350e02dc37871a", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -46,6 +46,9 @@ struct opt_pass\n      name.  If the name starts with a star, no dump happens. */\n   const char *name;\n \n+  /* The -fopt-info optimization group flags as defined in dumpfile.h. */\n+  unsigned int optinfo_flags;\n+\n   /* If non-null, this pass and all sub-passes are executed only if\n      the function returns true.  */\n   bool (*gate) (void);"}, {"sha": "d004fac94db360c49fd28e9156f7509a539f7696", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -568,6 +568,7 @@ struct simple_ipa_opt_pass pass_ipa_tree_profile =\n  {\n   SIMPLE_IPA_PASS,\n   \"profile\",  \t\t               /* name */\n+  OPTGROUP_NONE,                       /* optinfo_flags */\n   gate_tree_profile_ipa,               /* gate */\n   tree_profiling,                      /* execute */\n   NULL,                                /* sub */"}, {"sha": "8dd5cb497c2498daf061f592fe33dcc44b6c1cfd", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3443,6 +3443,7 @@ struct gimple_opt_pass pass_sra_early =\n  {\n   GIMPLE_PASS,\n   \"esra\",\t \t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_intra_sra,\t\t\t/* gate */\n   early_intra_sra,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -3464,6 +3465,7 @@ struct gimple_opt_pass pass_sra =\n  {\n   GIMPLE_PASS,\n   \"sra\",\t \t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_intra_sra,\t\t\t/* gate */\n   late_intra_sra,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -5006,6 +5008,7 @@ struct gimple_opt_pass pass_early_ipa_sra =\n  {\n   GIMPLE_PASS,\n   \"eipa_sra\",\t \t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   ipa_early_sra_gate,\t\t\t/* gate */\n   ipa_early_sra,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "cb6b62b7b97e3a830e585afd26673f7555e7bf32", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2123,6 +2123,7 @@ struct gimple_opt_pass pass_ccp =\n  {\n   GIMPLE_PASS,\n   \"ccp\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_ccp,\t\t\t\t/* gate */\n   do_ssa_ccp,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2507,6 +2508,7 @@ struct gimple_opt_pass pass_fold_builtins =\n  {\n   GIMPLE_PASS,\n   \"fab\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_fold_all_builtins,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "3dcbf7987c429a6e9cfd4df166d07cabc7c622cf", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -828,6 +828,7 @@ struct gimple_opt_pass pass_copy_prop =\n  {\n   GIMPLE_PASS,\n   \"copyprop\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_copy_prop,\t\t\t/* gate */\n   execute_copy_prop,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "47bb9b87a9876f6c8fd8d3d05bd1284f262bd232", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -443,6 +443,7 @@ struct gimple_opt_pass pass_rename_ssa_copies =\n  {\n   GIMPLE_PASS,\n   \"copyrename\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_copyrename,\t\t\t/* gate */\n   rename_ssa_copies,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "35d67035a454126ec36261764261649a6fbeaf7d", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1651,6 +1651,7 @@ struct gimple_opt_pass pass_dce =\n  {\n   GIMPLE_PASS,\n   \"dce\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dce,\t\t\t\t/* gate */\n   tree_ssa_dce,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1670,6 +1671,7 @@ struct gimple_opt_pass pass_dce_loop =\n  {\n   GIMPLE_PASS,\n   \"dceloop\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dce,\t\t\t\t/* gate */\n   tree_ssa_dce_loop,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1689,6 +1691,7 @@ struct gimple_opt_pass pass_cd_dce =\n  {\n   GIMPLE_PASS,\n   \"cddce\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dce,\t\t\t\t/* gate */\n   tree_ssa_cd_dce,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "7322b58aad1922c633c5541874587bea0c4151ef", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -861,6 +861,7 @@ struct gimple_opt_pass pass_dominator =\n  {\n   GIMPLE_PASS,\n   \"dom\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dominator,\t\t\t/* gate */\n   tree_ssa_dominator_optimize,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -3033,6 +3034,7 @@ struct gimple_opt_pass pass_phi_only_cprop =\n  {\n   GIMPLE_PASS,\n   \"phicprop\",                           /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_dominator,                       /* gate */\n   eliminate_degenerate_phis,            /* execute */\n   NULL,                                 /* sub */"}, {"sha": "55c37a094380f5f1858b34ea45e9e09d92e03ac4", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -356,6 +356,7 @@ struct gimple_opt_pass pass_dse =\n  {\n   GIMPLE_PASS,\n   \"dse\",\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   gate_dse,\t\t\t/* gate */\n   tree_ssa_dse,\t\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "246fc842ebea1b376bd8edb2187a6e4fb7124852", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -3122,6 +3122,7 @@ struct gimple_opt_pass pass_forwprop =\n  {\n   GIMPLE_PASS,\n   \"forwprop\",\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   gate_forwprop,\t\t/* gate */\n   ssa_forward_propagate_and_combine,\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "19143b177c392815c00b67db522ca73d5aae89e2", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -653,6 +653,7 @@ struct gimple_opt_pass pass_tree_ifcombine =\n  {\n   GIMPLE_PASS,\n   \"ifcombine\",\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   gate_ifcombine,\t\t/* gate */\n   tree_ssa_ifcombine,\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "7afcc914171dd272140c67ce7e3fd28cf2ca7f8a", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -260,6 +260,7 @@ struct gimple_opt_pass pass_ch =\n  {\n   GIMPLE_PASS,\n   \"ch\",\t\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_ch,\t\t\t\t/* gate */\n   copy_loop_headers,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "99219b68ef1e2f969d46cc7b32b419be8fb46185", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -47,6 +47,7 @@ struct gimple_opt_pass pass_tree_loop =\n  {\n   GIMPLE_PASS,\n   \"loop\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_loop,\t\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -82,6 +83,7 @@ struct gimple_opt_pass pass_tree_loop_init =\n  {\n   GIMPLE_PASS,\n   \"loopinit\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   tree_ssa_loop_init,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -118,6 +120,7 @@ struct gimple_opt_pass pass_lim =\n  {\n   GIMPLE_PASS,\n   \"lim\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_ssa_loop_im,\t\t/* gate */\n   tree_ssa_loop_im,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -154,6 +157,7 @@ struct gimple_opt_pass pass_tree_unswitch =\n  {\n   GIMPLE_PASS,\n   \"unswitch\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_ssa_loop_unswitch,\t\t/* gate */\n   tree_ssa_loop_unswitch,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -190,6 +194,7 @@ struct gimple_opt_pass pass_predcom =\n  {\n   GIMPLE_PASS,\n   \"pcom\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_predictive_commoning,\t/* gate */\n   run_tree_predictive_commoning,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -226,6 +231,8 @@ struct gimple_opt_pass pass_vectorize =\n  {\n   GIMPLE_PASS,\n   \"vect\",                               /* name */\n+  OPTGROUP_LOOP\n+  | OPTGROUP_VEC,                       /* optinfo_flags */\n   gate_tree_vectorize,                  /* gate */\n   tree_vectorize,                       /* execute */\n   NULL,                                 /* sub */\n@@ -275,6 +282,7 @@ struct gimple_opt_pass pass_graphite =\n  {\n   GIMPLE_PASS,\n   \"graphite0\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_graphite_transforms,\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -294,6 +302,7 @@ struct gimple_opt_pass pass_graphite_transforms =\n  {\n   GIMPLE_PASS,\n   \"graphite\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_graphite_transforms,\t\t/* gate */\n   graphite_transforms,       \t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -331,6 +340,7 @@ struct gimple_opt_pass pass_check_data_deps =\n  {\n   GIMPLE_PASS,\n   \"ckdd\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_check_data_deps,\t        \t/* gate */\n   check_data_deps,       \t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -367,6 +377,7 @@ struct gimple_opt_pass pass_iv_canon =\n  {\n   GIMPLE_PASS,\n   \"ivcanon\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_ssa_loop_ivcanon,\t\t/* gate */\n   tree_ssa_loop_ivcanon,\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -394,6 +405,7 @@ struct gimple_opt_pass pass_scev_cprop =\n  {\n   GIMPLE_PASS,\n   \"sccp\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_scev_const_prop,\t\t\t/* gate */\n   scev_const_prop,\t       \t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -428,6 +440,7 @@ struct gimple_opt_pass pass_record_bounds =\n  {\n   GIMPLE_PASS,\n   \"*record_bounds\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   tree_ssa_loop_bounds,\t\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -466,6 +479,7 @@ struct gimple_opt_pass pass_complete_unroll =\n  {\n   GIMPLE_PASS,\n   \"cunroll\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_complete_unroll,\t\t/* gate */\n   tree_complete_unroll,\t\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -512,6 +526,7 @@ struct gimple_opt_pass pass_complete_unrolli =\n  {\n   GIMPLE_PASS,\n   \"cunrolli\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_complete_unroll_inner,\t/* gate */\n   tree_complete_unroll_inner,\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -551,6 +566,7 @@ struct gimple_opt_pass pass_parallelize_loops =\n  {\n   GIMPLE_PASS,\n   \"parloops\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_parallelize_loops,\t\t/* gate */\n   tree_parallelize_loops,      \t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -587,6 +603,7 @@ struct gimple_opt_pass pass_loop_prefetch =\n  {\n   GIMPLE_PASS,\n   \"aprefetch\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_ssa_loop_prefetch,\t\t/* gate */\n   tree_ssa_loop_prefetch,\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -624,6 +641,7 @@ struct gimple_opt_pass pass_iv_optimize =\n  {\n   GIMPLE_PASS,\n   \"ivopts\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   gate_tree_ssa_loop_ivopts,\t\t/* gate */\n   tree_ssa_loop_ivopts,\t\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -654,6 +672,7 @@ struct gimple_opt_pass pass_tree_loop_done =\n  {\n   GIMPLE_PASS,\n   \"loopdone\",\t\t\t\t/* name */\n+  OPTGROUP_LOOP,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   tree_ssa_loop_done,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "01b1d176a06b7aafbc2814770bdd1a98a739e6de", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -642,6 +642,7 @@ struct gimple_opt_pass pass_cse_reciprocals =\n  {\n   GIMPLE_PASS,\n   \"recip\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_cse_reciprocals,\t\t\t/* gate */\n   execute_cse_reciprocals,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1505,6 +1506,7 @@ struct gimple_opt_pass pass_cse_sincos =\n  {\n   GIMPLE_PASS,\n   \"sincos\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_cse_sincos,\t\t\t/* gate */\n   execute_cse_sincos,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1977,6 +1979,7 @@ struct gimple_opt_pass pass_optimize_bswap =\n  {\n   GIMPLE_PASS,\n   \"bswap\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_optimize_bswap,                  /* gate */\n   execute_optimize_bswap,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2741,6 +2744,7 @@ struct gimple_opt_pass pass_optimize_widening_mul =\n  {\n   GIMPLE_PASS,\n   \"widening_mul\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_optimize_widening_mul,\t\t/* gate */\n   execute_optimize_widening_mul,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "e084a229df86f5747e578c96d3fbff567473570a", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1951,6 +1951,7 @@ struct gimple_opt_pass pass_phiopt =\n  {\n   GIMPLE_PASS,\n   \"phiopt\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_phiopt,\t\t\t\t/* gate */\n   tree_ssa_phiopt,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1979,6 +1980,7 @@ struct gimple_opt_pass pass_cselim =\n  {\n   GIMPLE_PASS,\n   \"cselim\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_cselim,\t\t\t\t/* gate */\n   tree_ssa_cs_elim,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "38fcf5de39f8380c81bebc2b9cefd9bd6178675e", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -409,6 +409,7 @@ struct gimple_opt_pass pass_phiprop =\n  {\n   GIMPLE_PASS,\n   \"phiprop\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_phiprop,\t\t\t/* gate */\n   tree_ssa_phiprop,\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "c8f39c70537c5c695291ae83e1f94d023ab27e63", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4766,6 +4766,7 @@ struct gimple_opt_pass pass_pre =\n  {\n   GIMPLE_PASS,\n   \"pre\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_pre,\t\t\t\t/* gate */\n   do_pre,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -4819,6 +4820,7 @@ struct gimple_opt_pass pass_fre =\n  {\n   GIMPLE_PASS,\n   \"fre\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_fre,\t\t\t\t/* gate */\n   execute_fre,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "1ff23ca2cffc87719e3c9ae18a205fe63f0f965d", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -4300,6 +4300,7 @@ struct gimple_opt_pass pass_reassoc =\n  {\n   GIMPLE_PASS,\n   \"reassoc\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tree_ssa_reassoc,\t\t/* gate */\n   execute_reassoc,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "1d965d839b3a68fc06b425816e863a2d15ccb0fe", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -584,6 +584,7 @@ struct gimple_opt_pass pass_sink_code =\n  {\n   GIMPLE_PASS,\n   \"sink\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_sink,\t\t\t\t/* gate */\n   do_sink,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "9d288b3e31191080d8392b9516d1ea092d2d108f", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2016,6 +2016,7 @@ struct gimple_opt_pass pass_strlen =\n  {\n   GIMPLE_PASS,\n   \"strlen\",\t\t\t/* name */\n+  OPTGROUP_NONE,                /* optinfo_flags */\n   gate_strlen,\t\t\t/* gate */\n   tree_ssa_strlen,\t\t/* execute */\n   NULL,\t\t\t\t/* sub */"}, {"sha": "01a4045f74882e9479f3bc71b9cd2685715de2de", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -6807,6 +6807,7 @@ struct gimple_opt_pass pass_build_alias =\n  {\n   GIMPLE_PASS,\n   \"alias\",\t\t    /* name */\n+  OPTGROUP_NONE,            /* optinfo_flags */\n   gate_tree_pta,\t    /* gate */\n   NULL,                     /* execute */\n   NULL,                     /* sub */\n@@ -6829,6 +6830,7 @@ struct gimple_opt_pass pass_build_ealias =\n  {\n   GIMPLE_PASS,\n   \"ealias\",\t\t    /* name */\n+  OPTGROUP_NONE,            /* optinfo_flags */\n   gate_tree_pta,\t    /* gate */\n   NULL,                     /* execute */\n   NULL,                     /* sub */\n@@ -7203,6 +7205,7 @@ struct simple_ipa_opt_pass pass_ipa_pta =\n  {\n   SIMPLE_IPA_PASS,\n   \"pta\",\t\t                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_ipa_pta,\t\t\t/* gate */\n   ipa_pta_execute,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "aeeaa04fee69a1838012568b63de9af02e2e4e01", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -585,6 +585,7 @@ struct gimple_opt_pass pass_uncprop =\n  {\n   GIMPLE_PASS,\n   \"uncprop\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_uncprop,\t\t\t\t/* gate */\n   tree_ssa_uncprop,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "407520b5f6e0559d8718698f7ffaf4e37242e01d", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -2037,6 +2037,7 @@ struct gimple_opt_pass pass_late_warn_uninitialized =\n  {\n   GIMPLE_PASS,\n   \"uninit\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_warn_uninitialized,\t\t/* gate */\n   execute_late_warn_uninitialized,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "fab0a3ba5b9986d9d9c6d975bba9942db7f2c17d", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1135,6 +1135,7 @@ struct gimple_opt_pass pass_init_datastructures =\n  {\n   GIMPLE_PASS,\n   \"*init_datastructures\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   execute_init_datastructures,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1744,6 +1745,7 @@ struct gimple_opt_pass pass_early_warn_uninitialized =\n  {\n   GIMPLE_PASS,\n   \"*early_warn_uninitialized\",\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_warn_uninitialized,\t\t/* gate */\n   execute_early_warn_uninitialized,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -2174,6 +2176,7 @@ struct gimple_opt_pass pass_update_address_taken =\n  {\n   GIMPLE_PASS,\n   \"addressables\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "6eb645130ae1c4781ffc707f493b6be62d068feb", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -451,6 +451,7 @@ struct gimple_opt_pass pass_release_ssa_names =\n  {\n   GIMPLE_PASS,\n   \"release_ssa\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   release_dead_ssa_names,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "1b0e6d35f9457244449ab3669bfc3e152e0736eb", "filename": "gcc/tree-stdarg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-stdarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-stdarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-stdarg.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -960,6 +960,7 @@ struct gimple_opt_pass pass_stdarg =\n  {\n   GIMPLE_PASS,\n   \"stdarg\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_optimize_stdarg,\t\t\t/* gate */\n   execute_optimize_stdarg,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "a35df7c71963098f6b381412959ae7cddeb3f6c7", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1463,6 +1463,7 @@ struct gimple_opt_pass pass_convert_switch =\n  {\n   GIMPLE_PASS,\n   \"switchconv\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   switchconv_gate,\t\t\t/* gate */\n   do_switchconv,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "5b1fd2b9dcfca52951c0bf612b441d0fccd3fa67", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1048,6 +1048,7 @@ struct gimple_opt_pass pass_tail_recursion =\n  {\n   GIMPLE_PASS,\n   \"tailr\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tail_calls,\t\t\t/* gate */\n   execute_tail_recursion,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1067,6 +1068,7 @@ struct gimple_opt_pass pass_tail_calls =\n  {\n   GIMPLE_PASS,\n   \"tailc\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_tail_calls,\t\t\t/* gate */\n   execute_tail_calls,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "9d54bdd99b54ce359396e3683dce64ac5aab855b", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -1435,6 +1435,7 @@ struct gimple_opt_pass pass_lower_vector =\n  {\n   GIMPLE_PASS,\n   \"veclower\",\t\t\t\t/* name */\n+  OPTGROUP_VEC,                         /* optinfo_flags */\n   gate_expand_vector_operations_ssa,    /* gate */\n   expand_vector_operations,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1457,6 +1458,7 @@ struct gimple_opt_pass pass_lower_vector_ssa =\n  {\n   GIMPLE_PASS,\n   \"veclower2\",\t\t\t\t/* name */\n+  OPTGROUP_VEC,                         /* optinfo_flags */\n   0,\t                                /* gate */\n   expand_vector_operations,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "b9bc00144f55b95b98fd7521826d3749279f0379", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -194,6 +194,8 @@ struct gimple_opt_pass pass_slp_vectorize =\n  {\n   GIMPLE_PASS,\n   \"slp\",                                /* name */\n+  OPTGROUP_LOOP\n+  | OPTGROUP_VEC,                       /* optinfo_flags */\n   gate_vect_slp,                        /* gate */\n   execute_vect_slp,                     /* execute */\n   NULL,                                 /* sub */\n@@ -266,6 +268,8 @@ struct simple_ipa_opt_pass pass_ipa_increase_alignment =\n  {\n   SIMPLE_IPA_PASS,\n   \"increase_alignment\",                 /* name */\n+  OPTGROUP_LOOP\n+  | OPTGROUP_VEC,                       /* optinfo_flags */\n   gate_increase_alignment,              /* gate */\n   increase_alignment,                   /* execute */\n   NULL,                                 /* sub */"}, {"sha": "852dd502de8645471183c12b5cdac6adea2acf92", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -9234,6 +9234,7 @@ struct gimple_opt_pass pass_vrp =\n  {\n   GIMPLE_PASS,\n   \"vrp\",\t\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_vrp,\t\t\t\t/* gate */\n   execute_vrp,\t\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "16dc5df03aa1d413c0b2ef655e3fad2cb3be0aff", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -5292,6 +5292,7 @@ struct simple_ipa_opt_pass pass_ipa_free_lang_data =\n  {\n   SIMPLE_IPA_PASS,\n   \"*free_lang_data\",\t\t\t/* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   NULL,\t\t\t\t\t/* gate */\n   free_lang_data,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "b64604bee42ce938a4418eed84189b19d4dcc623", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -10099,6 +10099,7 @@ struct rtl_opt_pass pass_variable_tracking =\n  {\n   RTL_PASS,\n   \"vartrack\",                           /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_var_tracking,             /* gate */\n   variable_tracking_main,               /* execute */\n   NULL,                                 /* sub */"}, {"sha": "b602615326b1a66a0f5f444e0070511eec78cf42", "filename": "gcc/web.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fweb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4e6bf1d556f89711726eaa02b125ed6f39a82f/gcc%2Fweb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fweb.c?ref=2b4e6bf1d556f89711726eaa02b125ed6f39a82f", "patch": "@@ -445,6 +445,7 @@ struct rtl_opt_pass pass_web =\n  {\n   RTL_PASS,\n   \"web\",                                /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n   gate_handle_web,                      /* gate */\n   web_main,\t\t                /* execute */\n   NULL,                                 /* sub */"}]}