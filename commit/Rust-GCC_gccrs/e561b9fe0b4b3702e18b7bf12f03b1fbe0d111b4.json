{"sha": "e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2MWI5ZmUwYjRiMzcwMmUxOGI3YmYxMmYwM2IxZmJlMGQxMTFiNA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-01-31T15:03:15Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-05-09T02:12:03Z"}, "message": "cris: Enable additions and subtractions to set condition codes.\n\nEnabling dropping of compares with zero of the result, through\nthe non-VC-setting CCmode substitution.  Beware that the\nsubstitutions for 8- and 16-bit patterns will in some cases be\nsize-neutral; e.g. replacing an \"addq 1..63,$rN\" + \"test.w $rN\"\nor \"subq 1..63,$rN\" + \"test.w $rN\" with an \"add.w -63..63,$rN\".\n\ngcc:\n\t* config/cris/cris.md (\"*adddi3<setnz>\"): Rename from \"*adddi3\".\n\tcris: Enable 32-bit addition to set condition codes.\n\t(\"*subdi3<setnz>\"): Similarly from \"*subdi3\".\n\t(\"*addsi3<setnz>\"): Similarly from \"*addsi3\".\n\t(\"*subsi3<setnz>\"): Similarly from \"*subsi3\".\n\t(\"*addhi3<setnz>\"): Similarly from \"*addhi3\" and decorate the\n\t\"cc\" attribute to \"cc<ccnz>\".\n\t(\"*addqi3<setnz>\"): Similarly from \"*addqi3\".\n\t(\"*sub<mode>3<setnz>\"): Similarly from \"*sub<mode>3\".", "tree": {"sha": "2b35a8eeb1b11696e3d1c9fbba926f7ccb005422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b35a8eeb1b11696e3d1c9fbba926f7ccb005422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61c964c7fd2ad96cec262a2bcd1fc13bd2e2eff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c964c7fd2ad96cec262a2bcd1fc13bd2e2eff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c964c7fd2ad96cec262a2bcd1fc13bd2e2eff8"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "9ec085218af9f054b0923ebbc7926283f748a835", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4", "patch": "@@ -124,6 +124,14 @@\n \tRename from \"extend<mode>si2\".\n \t(\"<acc><anz><anzvc>zero_extend<mode>si2<setcc><setnz><setnzvc>\"):\n \tSimilar, from \"zero_extend<mode>si2\".\n+\t(\"*adddi3<setnz>\"): Rename from \"*adddi3\".\n+\t(\"*subdi3<setnz>\"): Similarly from \"*subdi3\".\n+\t(\"*addsi3<setnz>\"): Similarly from \"*addsi3\".\n+\t(\"*subsi3<setnz>\"): Similarly from \"*subsi3\".\n+\t(\"*addhi3<setnz>\"): Similarly from \"*addhi3\" and decorate the\n+\t\"cc\" attribute to \"cc<ccnz>\".\n+\t(\"*addqi3<setnz>\"): Similarly from \"*addqi3\".\n+\t(\"*sub<mode>3<setnz>\"): Similarly from \"*sub<mode>3\".\n \n 2020-05-08  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "8652f358630c38d1afaad1c599f62679000c2cfc", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=e561b9fe0b4b3702e18b7bf12f03b1fbe0d111b4", "patch": "@@ -913,7 +913,7 @@\n   \"\"\n   \"\")\n \n-(define_insn \"*adddi3\"\n+(define_insn \"*adddi3<setnz>\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r,&r,&r\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"%0,0,0,0,r\")\n \t\t (match_operand:DI 2 \"general_operand\" \"J,N,P,g,!To\")))\n@@ -936,7 +936,7 @@\n   \"\"\n   \"\")\n \n-(define_insn \"*addsi3\"\n+(define_insn \"*addsi3<setnz>\"\n   [(set (match_operand:SI 0 \"register_operand\"  \"=r,r, r,r,r,r,r,  r\")\n \t(plus:SI\n \t (match_operand:SI 1 \"register_operand\" \"%0,0, 0,0,0,0,r,  r\")\n@@ -989,7 +989,7 @@\n }\n  [(set_attr \"slottable\" \"yes,yes,yes,yes,no,no,no,yes\")])\n \f\n-(define_insn \"*addhi3\"\n+(define_insn \"*addhi3<setnz>\"\n   [(set (match_operand:HI 0 \"register_operand\"\t\t\"=r,r, r,r,r,r\")\n \t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0, 0,0,0,r\")\n \t\t (match_operand:HI 2 \"general_operand\"   \"r,Q>,J,N,g,!To\")))\n@@ -1003,9 +1003,9 @@\n    add.w %2,%0\n    add.w %2,%1,%0\"\n   [(set_attr \"slottable\" \"yes,yes,yes,yes,no,no\")\n-   (set_attr \"cc\" \"normal,normal,clobber,clobber,normal,normal\")])\n+   (set_attr \"cc<ccnz>\" \"normal,normal,clobber,clobber,normal,normal\")])\n \n-(define_insn \"*addqi3\"\n+(define_insn \"*addqi3<setnz>\"\n   [(set (match_operand:QI 0 \"register_operand\"\t\t\"=r,r, r,r,r,r,r\")\n \t(plus:QI (match_operand:QI 1 \"register_operand\" \"%0,0, 0,0,0,0,r\")\n \t\t (match_operand:QI 2 \"general_operand\"\t \"r,Q>,J,N,O,g,!To\")))\n@@ -1020,7 +1020,7 @@\n    add.b %2,%0\n    add.b %2,%1,%0\"\n   [(set_attr \"slottable\" \"yes,yes,yes,yes,yes,no,no\")\n-   (set_attr \"cc\" \"normal,normal,clobber,clobber,clobber,normal,normal\")])\n+   (set_attr \"cc<ccnz>\" \"normal,normal,clobber,clobber,clobber,normal,normal\")])\n \f\n ;; Subtract.\n ;;\n@@ -1039,7 +1039,7 @@\n   \"\"\n   \"\")\n \n-(define_insn \"*subdi3\"\n+(define_insn \"*subdi3<setnz>\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r,&r,&r\")\n \t(minus:DI (match_operand:DI 1 \"register_operand\" \"0,0,0,0,r\")\n \t\t  (match_operand:DI 2 \"general_operand\" \"J,N,P,g,!To\")))\n@@ -1062,7 +1062,7 @@\n   \"\"\n   \"\")\n \n-(define_insn \"*subsi3\"\n+(define_insn \"*subsi3<setnz>\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r, r,r,r,r,r,r\")\n \t(minus:SI\n \t (match_operand:SI 1 \"register_operand\" \"0,0, 0,0,0,0,0,r\")\n@@ -1084,7 +1084,7 @@\n    sub.d %2,%1,%0\"\n   [(set_attr \"slottable\" \"yes,yes,yes,yes,no,no,no,no\")])\n \f\n-(define_insn \"*sub<mode>3\"\n+(define_insn \"*sub<mode>3<setnz>\"\n   [(set (match_operand:BW 0 \"register_operand\"\t\t\"=r,r, r,r,r,r\")\n \t(minus:BW (match_operand:BW 1 \"register_operand\" \"0,0, 0,0,0,r\")\n \t\t  (match_operand:BW 2 \"general_operand\"  \"r,Q>,J,N,g,!To\")))\n@@ -1098,7 +1098,7 @@\n    sub<m> %2,%0\n    sub<m> %2,%1,%0\"\n   [(set_attr \"slottable\" \"yes,yes,yes,yes,no,no\")\n-   (set_attr \"cc\" \"normal,normal,clobber,clobber,normal,normal\")])\n+   (set_attr \"cc<ccnz>\" \"normal,normal,clobber,clobber,normal,normal\")])\n \f\n ;; This is the special case when we use what corresponds to the\n ;; instruction above in \"casesi\".  Do *not* change it to use the generic"}]}