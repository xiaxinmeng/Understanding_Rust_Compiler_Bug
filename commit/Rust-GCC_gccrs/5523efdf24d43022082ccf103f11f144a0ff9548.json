{"sha": "5523efdf24d43022082ccf103f11f144a0ff9548", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUyM2VmZGYyNGQ0MzAyMjA4MmNjZjEwM2YxMWYxNDRhMGZmOTU0OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2014-03-17T13:04:12Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2014-03-17T13:04:12Z"}, "message": "Fix Solaris bootstrap with GNU ld/LTO\n\n\t* configure.ac (ac_lto_plugin_ldflags): Set to -Wc,-static-libgcc\n\tfor gcc.\n\t* configure: Regenerate.\n\t* Makefile.am (AM_LDFLAGS): New variable.\n\t(liblto_plugin_la_LDFLAGS): Add it.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r208614", "tree": {"sha": "626559d0621b33815066f7502d9d6b5fea1ef2cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/626559d0621b33815066f7502d9d6b5fea1ef2cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5523efdf24d43022082ccf103f11f144a0ff9548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5523efdf24d43022082ccf103f11f144a0ff9548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5523efdf24d43022082ccf103f11f144a0ff9548", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5523efdf24d43022082ccf103f11f144a0ff9548/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8692ae102d861f3e0c3fd5ebc09be4000acd07b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8692ae102d861f3e0c3fd5ebc09be4000acd07b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8692ae102d861f3e0c3fd5ebc09be4000acd07b4"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "73688cd1cfcc261d3544f6a0931a97e7bee60ff0", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=5523efdf24d43022082ccf103f11f144a0ff9548", "patch": "@@ -1,3 +1,12 @@\n+2014-03-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (ac_lto_plugin_ldflags): Set to -Wc,-static-libgcc\n+\tfor gcc.\n+\t* configure: Regenerate.\n+\t* Makefile.am (AM_LDFLAGS): New variable.\n+\t(liblto_plugin_la_LDFLAGS): Add it.\n+\t* Makefile.in: Regenerate.\n+\n 2013-09-20  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."}, {"sha": "e3391bcc547875b990f4c4ec35b5c43715bad2d3", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=5523efdf24d43022082ccf103f11f144a0ff9548", "patch": "@@ -9,6 +9,7 @@ libexecsubdir := $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n \n AM_CPPFLAGS = -I$(top_srcdir)/../include $(DEFS)\n AM_CFLAGS = @ac_lto_plugin_warn_cflags@\n+AM_LDFLAGS = @ac_lto_plugin_ldflags@\n AM_LIBTOOLFLAGS = --tag=disable-static\n \n libexecsub_LTLIBRARIES = liblto_plugin.la\n@@ -22,7 +23,8 @@ liblto_plugin_la_SOURCES = lto-plugin.c\n liblto_plugin_la_LIBADD = \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wc)../libiberty/pic/libiberty.a,)\n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n-liblto_plugin_la_LDFLAGS = $(lt_host_flags) -module -bindir $(libexecsubdir) \\\n+liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) \\\n+\t$(lt_host_flags) -module -bindir $(libexecsubdir) \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a)\n liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\\n \t../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,)"}, {"sha": "a70de62f5664b060adab301834c90a11d5cc274e", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=5523efdf24d43022082ccf103f11f144a0ff9548", "patch": "@@ -168,6 +168,7 @@ abs_top_builddir = @abs_top_builddir@\n abs_top_srcdir = @abs_top_srcdir@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_lto_plugin_ldflags = @ac_lto_plugin_ldflags@\n ac_lto_plugin_warn_cflags = @ac_lto_plugin_warn_cflags@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n@@ -230,6 +231,7 @@ gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n libexecsubdir := $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n AM_CPPFLAGS = -I$(top_srcdir)/../include $(DEFS)\n AM_CFLAGS = @ac_lto_plugin_warn_cflags@\n+AM_LDFLAGS = @ac_lto_plugin_ldflags@\n AM_LIBTOOLFLAGS = --tag=disable-static\n libexecsub_LTLIBRARIES = liblto_plugin.la\n gcc_build_dir = ../$(host_subdir)/gcc\n@@ -242,7 +244,8 @@ liblto_plugin_la_LIBADD = \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wc)../libiberty/pic/libiberty.a,)\n \n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n-liblto_plugin_la_LDFLAGS = $(lt_host_flags) -module -bindir $(libexecsubdir) \\\n+liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) \\\n+\t$(lt_host_flags) -module -bindir $(libexecsubdir) \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a)\n \n liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\"}, {"sha": "2fc838329c7c5db7d017af438e5483a9932ed14c", "filename": "lto-plugin/configure", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=5523efdf24d43022082ccf103f11f144a0ff9548", "patch": "@@ -622,6 +622,7 @@ EGREP\n GREP\n SED\n LIBTOOL\n+ac_lto_plugin_ldflags\n ac_lto_plugin_warn_cflags\n am__fastdepCC_FALSE\n am__fastdepCC_TRUE\n@@ -4086,6 +4087,9 @@ fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n+# Need -Wc to get it through libtool.\n+if test \"x$GCC\" = xyes; then ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"; fi\n+\n case `pwd` in\n   *\\ * | *\\\t*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&5\n@@ -10558,7 +10562,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10561 \"configure\"\n+#line 10565 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10664,7 +10668,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10667 \"configure\"\n+#line 10671 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "4003ae61bdc69dc36977fa1cd002ad783bb0652b", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5523efdf24d43022082ccf103f11f144a0ff9548/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=5523efdf24d43022082ccf103f11f144a0ff9548", "patch": "@@ -7,6 +7,9 @@ AM_MAINTAINER_MODE\n AC_PROG_CC\n AC_SYS_LARGEFILE\n ACX_PROG_CC_WARNING_OPTS([-Wall], [ac_lto_plugin_warn_cflags])\n+# Need -Wc to get it through libtool.\n+if test \"x$GCC\" = xyes; then ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"; fi\n+AC_SUBST(ac_lto_plugin_ldflags)\n AM_PROG_LIBTOOL\n ACX_LT_HOST_FLAGS\n AC_SUBST(target_noncanonical)"}]}