{"sha": "97c32df4ba83a0d2872af9477dbdc83a534d16ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjMzJkZjRiYTgzYTBkMjg3MmFmOTQ3N2RiZGM4M2E1MzRkMTZlZg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2015-02-10T22:46:47Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2015-02-10T22:46:47Z"}, "message": "ffitarget.h (ffi_arg): Use unsigned long long for ILP32.\n\n2015-02-10  Andrew Pinski  <apinski@cavium.com>\n\n        * src/aarch64/ffitarget.h (ffi_arg): Use unsigned long long for ILP32.\n        (FFI_SIZEOF_ARG): Define to 64 for ILP32.\n        (ffi_sarg): Use signed long long for ILP32.\n\n        * src/aarch64/sysv.S (PTR_REG): New macro.\n        (PTR_SIZE): New macro.\n        (ffi_closure_SYSV): Load cif, fn and user_data using PTR_REG.\n        (ffi_go_closure_SYSV): Load cif and fn using PTR_REG.\n\nFrom-SVN: r220598", "tree": {"sha": "758a37aa8fc976d1c982fb96541aa0f877586f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/758a37aa8fc976d1c982fb96541aa0f877586f4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97c32df4ba83a0d2872af9477dbdc83a534d16ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c32df4ba83a0d2872af9477dbdc83a534d16ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c32df4ba83a0d2872af9477dbdc83a534d16ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c32df4ba83a0d2872af9477dbdc83a534d16ef/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8aa1929d5590eb141207914ec47c073f1d95932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8aa1929d5590eb141207914ec47c073f1d95932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8aa1929d5590eb141207914ec47c073f1d95932"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "a690b7bbf98c58f6e919bc9d934b1032d5d090d6", "filename": "libffi/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c32df4ba83a0d2872af9477dbdc83a534d16ef/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c32df4ba83a0d2872af9477dbdc83a534d16ef/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=97c32df4ba83a0d2872af9477dbdc83a534d16ef", "patch": "@@ -1,3 +1,14 @@\n+2015-02-10  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* src/aarch64/ffitarget.h (ffi_arg): Use unsigned long long for ILP32.\n+\t(FFI_SIZEOF_ARG): Define to 64 for ILP32.\n+\t(ffi_sarg): Use signed long long for ILP32.\n+\n+\t* src/aarch64/sysv.S (PTR_REG): New macro.\n+\t(PTR_SIZE): New macro.\n+\t(ffi_closure_SYSV): Load cif, fn and user_data using PTR_REG.\n+\t(ffi_go_closure_SYSV): Load cif and fn using PTR_REG.\n+\n 2015-01-29  Jack Howarth  <howarth.at.gcc@gmail.com>\n \n \tPR libffi/64855"}, {"sha": "2862ec7fcccc6878a6b1d731c28166aef51295fe", "filename": "libffi/src/aarch64/ffitarget.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c32df4ba83a0d2872af9477dbdc83a534d16ef/libffi%2Fsrc%2Faarch64%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c32df4ba83a0d2872af9477dbdc83a534d16ef/libffi%2Fsrc%2Faarch64%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Faarch64%2Fffitarget.h?ref=97c32df4ba83a0d2872af9477dbdc83a534d16ef", "patch": "@@ -27,8 +27,14 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  */\n #endif\n \n #ifndef LIBFFI_ASM\n+#ifdef __ILP32__\n+#define FFI_SIZEOF_ARG 8\n+typedef unsigned long long ffi_arg;\n+typedef signed long long ffi_sarg;\n+#else\n typedef unsigned long ffi_arg;\n typedef signed long ffi_sarg;\n+#endif\n \n typedef enum ffi_abi\n   {"}, {"sha": "c1bf9b98e0393f055ec3aa73614b46049585311a", "filename": "libffi/src/aarch64/sysv.S", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c32df4ba83a0d2872af9477dbdc83a534d16ef/libffi%2Fsrc%2Faarch64%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c32df4ba83a0d2872af9477dbdc83a534d16ef/libffi%2Fsrc%2Faarch64%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Faarch64%2Fsysv.S?ref=97c32df4ba83a0d2872af9477dbdc83a534d16ef", "patch": "@@ -43,6 +43,18 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  */\n # define BE(X)\tX\n #else\n # define BE(X)\t0\n+#endif\n+\n+#ifdef __ILP32__\n+#define PTR_REG(n)      w##n\n+#else\n+#define PTR_REG(n)      x##n\n+#endif\n+\n+#ifdef __ILP32__\n+#define PTR_SIZE\t4\n+#else\n+#define PTR_SIZE\t8\n #endif\n \n \t.text\n@@ -248,8 +260,8 @@ CNAME(ffi_closure_SYSV):\n \tstp     x6, x7, [sp, #16 + 16*N_V_ARG_REG + 48]\n \n \t/* Load ffi_closure_inner arguments.  */\n-\tldp\tx0, x1, [x17, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t/* load cif, fn */\n-\tldr\tx2, [x17, #FFI_TRAMPOLINE_CLOSURE_OFFSET+16]\t/* load user_data */\n+\tldp\tPTR_REG(0), PTR_REG(1), [x17, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t/* load cif, fn */\n+\tldr\tPTR_REG(2), [x17, #FFI_TRAMPOLINE_CLOSURE_OFFSET+PTR_SIZE*2]\t/* load user_data */\n .Ldo_closure:\n \tadd\tx3, sp, #16\t\t\t\t/* load context */\n \tadd\tx4, sp, #ffi_closure_SYSV_FS\t\t/* load stack */\n@@ -403,7 +415,7 @@ CNAME(ffi_go_closure_SYSV):\n \tstp     x6, x7, [sp, #16 + 16*N_V_ARG_REG + 48]\n \n \t/* Load ffi_closure_inner arguments.  */\n-\tldp\tx0, x1, [x18, #8]\t\t\t/* load cif, fn */\n+\tldp\tPTR_REG(0), PTR_REG(1), [x18, #PTR_SIZE]/* load cif, fn */\n \tmov\tx2, x18\t\t\t\t\t/* load user_data */\n \tb\t.Ldo_closure\n \tcfi_endproc"}]}