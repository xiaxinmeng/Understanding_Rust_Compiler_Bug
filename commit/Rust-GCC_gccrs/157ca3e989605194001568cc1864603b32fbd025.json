{"sha": "157ca3e989605194001568cc1864603b32fbd025", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU3Y2EzZTk4OTYwNTE5NDAwMTU2OGNjMTg2NDYwM2IzMmZiZDAyNQ==", "commit": {"author": {"name": "Wei Mi", "email": "wmi@google.com", "date": "2013-10-01T23:32:55Z"}, "committer": {"name": "Wei Mi", "email": "wmi@gcc.gnu.org", "date": "2013-10-01T23:32:55Z"}, "message": "x86-tune.def (DEF_TUNE): Remove m_CORE_ALL.\n\n2013-10-01  Wei Mi  <wmi@google.com>\n\n        * config/i386/x86-tune.def (DEF_TUNE): Remove\n        m_CORE_ALL.\n        * config/i386/i386.md: Add define_peephole2 to\n        break partial reg stall for cvtss2sd/cvtsd2ss.\n\nFrom-SVN: r203095", "tree": {"sha": "c80557b1f44367c9f5eb99b9224fee330eaf6371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c80557b1f44367c9f5eb99b9224fee330eaf6371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/157ca3e989605194001568cc1864603b32fbd025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157ca3e989605194001568cc1864603b32fbd025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157ca3e989605194001568cc1864603b32fbd025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157ca3e989605194001568cc1864603b32fbd025/comments", "author": {"login": "wmi-11", "id": 59629650, "node_id": "MDQ6VXNlcjU5NjI5NjUw", "avatar_url": "https://avatars.githubusercontent.com/u/59629650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wmi-11", "html_url": "https://github.com/wmi-11", "followers_url": "https://api.github.com/users/wmi-11/followers", "following_url": "https://api.github.com/users/wmi-11/following{/other_user}", "gists_url": "https://api.github.com/users/wmi-11/gists{/gist_id}", "starred_url": "https://api.github.com/users/wmi-11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wmi-11/subscriptions", "organizations_url": "https://api.github.com/users/wmi-11/orgs", "repos_url": "https://api.github.com/users/wmi-11/repos", "events_url": "https://api.github.com/users/wmi-11/events{/privacy}", "received_events_url": "https://api.github.com/users/wmi-11/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd9480ef3e602819c038febd6327b1f0b1693a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9480ef3e602819c038febd6327b1f0b1693a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9480ef3e602819c038febd6327b1f0b1693a2a"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "e0b30a373ebaf90061db128e937cb263dd337194", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157ca3e989605194001568cc1864603b32fbd025/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157ca3e989605194001568cc1864603b32fbd025/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=157ca3e989605194001568cc1864603b32fbd025", "patch": "@@ -1,3 +1,10 @@\n+2013-10-01  Wei Mi  <wmi@google.com>\n+\n+\t* config/i386/x86-tune.def (DEF_TUNE): Remove\n+\tm_CORE_ALL.\n+\t* config/i386/i386.md: Add define_peephole2 to\n+\tbreak partial reg stall for cvtss2sd/cvtsd2ss.\n+\n 2013-10-01  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/arc/arc.c (pass_arc_ifcvt::clone):"}, {"sha": "7368719d313700ae1ef3edcb7334caa38c830172", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157ca3e989605194001568cc1864603b32fbd025/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157ca3e989605194001568cc1864603b32fbd025/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=157ca3e989605194001568cc1864603b32fbd025", "patch": "@@ -5117,6 +5117,61 @@\n   emit_move_insn (operands[0], CONST0_RTX (<ssevecmode>mode));\n })\n \n+;; Break partial reg stall for cvtsd2ss.\n+\n+(define_peephole2\n+  [(set (match_operand:SF 0 \"register_operand\")\n+        (float_truncate:SF\n+\t  (match_operand:DF 1 \"nonimmediate_operand\")))]\n+  \"TARGET_SSE2 && TARGET_SSE_MATH\n+   && TARGET_SSE_PARTIAL_REG_DEPENDENCY\n+   && optimize_function_for_speed_p (cfun)\n+   && SSE_REG_P (operands[0])\n+   && (!SSE_REG_P (operands[1])\n+       || REGNO (operands[0]) != REGNO (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(vec_merge:V4SF\n+\t  (vec_duplicate:V4SF\n+\t    (float_truncate:V2SF\n+\t      (match_dup 1)))\n+\t  (match_dup 0)\n+\t  (const_int 1)))]\n+{\n+  operands[0] = simplify_gen_subreg (V4SFmode, operands[0],\n+\t\t\t\t     SFmode, 0);\n+  operands[1] = simplify_gen_subreg (V2DFmode, operands[1],\n+\t\t\t\t     DFmode, 0);\n+  emit_move_insn (operands[0], CONST0_RTX (V4SFmode));\n+})\n+\n+;; Break partial reg stall for cvtss2sd.\n+\n+(define_peephole2\n+  [(set (match_operand:DF 0 \"register_operand\")\n+        (float_extend:DF\n+          (match_operand:SF 1 \"nonimmediate_operand\")))]\n+  \"TARGET_SSE2 && TARGET_SSE_MATH\n+   && TARGET_SSE_PARTIAL_REG_DEPENDENCY\n+   && optimize_function_for_speed_p (cfun)\n+   && SSE_REG_P (operands[0])\n+   && (!SSE_REG_P (operands[1])\n+       || REGNO (operands[0]) != REGNO (operands[1]))\"\n+  [(set (match_dup 0)\n+        (vec_merge:V2DF\n+          (float_extend:V2DF\n+            (vec_select:V2SF\n+              (match_dup 1)\n+              (parallel [(const_int 0) (const_int 1)])))\n+          (match_dup 0)\n+          (const_int 1)))]\n+{\n+  operands[0] = simplify_gen_subreg (V2DFmode, operands[0],\n+\t\t\t\t     DFmode, 0);\n+  operands[1] = simplify_gen_subreg (V4SFmode, operands[1],\n+\t\t\t\t     SFmode, 0);\n+  emit_move_insn (operands[0], CONST0_RTX (V2DFmode));\n+})\n+\n ;; Avoid store forwarding (partial memory) stall penalty\n ;; by passing DImode value through XMM registers.  */\n "}, {"sha": "6b0a593ddda6284a011663ff72924cb295f1d017", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157ca3e989605194001568cc1864603b32fbd025/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157ca3e989605194001568cc1864603b32fbd025/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=157ca3e989605194001568cc1864603b32fbd025", "patch": "@@ -346,7 +346,7 @@ DEF_TUNE (X86_TUNE_NOT_VECTORMODE, \"not_vectormode\", m_K6)\n    from FP to FP.  This form of instructions avoids partial write to the\n    destination.  */\n DEF_TUNE (X86_TUNE_USE_VECTOR_FP_CONVERTS, \"use_vector_fp_converts\",\n-          m_CORE_ALL | m_AMDFAM10 | m_GENERIC)\n+          m_AMDFAM10 | m_GENERIC)\n \n /* X86_TUNE_USE_VECTOR_CONVERTS: Prefer vector packed SSE conversion\n    from integer to FP. */"}]}