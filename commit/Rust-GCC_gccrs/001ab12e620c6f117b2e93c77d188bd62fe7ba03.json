{"sha": "001ab12e620c6f117b2e93c77d188bd62fe7ba03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxYWIxMmU2MjBjNmYxMTdiMmU5M2M3N2QxODhiZDYyZmU3YmEwMw==", "commit": {"author": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-02-13T06:30:16Z"}, "committer": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-02-13T09:18:31Z"}, "message": "openmp: ignore nowait if async execution is unsupported [PR93481]\n\nAn OpenMP \"nowait\" clause on a target construct currently leads to\na call to GOMP_OFFLOAD_async_run in the plugin that is used for\noffloading at execution time. The nvptx plugin contains only a stub\nof this function that always produces a fatal error if called.\n\nThis commit changes the \"nowait\" implementation to ignore the clause\nif the executing device's plugin does not implement GOMP_OFFLOAD_async_run.\nThe stub in the nvptx plugin is removed which effectively means that\nprograms containing \"nowait\" can now be executed with nvptx offloading\nas if the clause had not been used.\nThis behavior is consistent with the OpenMP specification which says that\n\"[...] execution of the target task *may* be deferred\" (emphasis added),\ncf. OpenMP 5.0, page 172.\n\nlibgomp/\n\n\t* plugin/plugin-nvptx.c: Remove GOMP_OFFLOAD_async_run stub.\n\t* target.c (gomp_load_plugin_for_device): Make \"async_run\" loading\n\toptional.\n\t(gomp_target_task_fn): Assert \"devicep->async_run_func\".\n\t(clear_unsupported_flags): New function to remove unsupported flags\n\t(right now only GOMP_TARGET_FLAG_NOWAIT) that can be be ignored.\n\t(GOMP_target_ext): Apply clear_unsupported_flags to flags.\n\t* testsuite/libgomp.c/target-33.c:\n\tRemove xfail for offload_target_nvptx.\n\t* testsuite/libgomp.c/target-34.c: Likewise.", "tree": {"sha": "5959fb334ce14c7aae95607ecf538d41a8d1db5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5959fb334ce14c7aae95607ecf538d41a8d1db5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/001ab12e620c6f117b2e93c77d188bd62fe7ba03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001ab12e620c6f117b2e93c77d188bd62fe7ba03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001ab12e620c6f117b2e93c77d188bd62fe7ba03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001ab12e620c6f117b2e93c77d188bd62fe7ba03/comments", "author": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aba425f4ebc5e2c054776d3cdddf13f7c1918f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aba425f4ebc5e2c054776d3cdddf13f7c1918f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aba425f4ebc5e2c054776d3cdddf13f7c1918f8"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "ec103a2f40b7193285bdf394ead47584d60d6f42", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=001ab12e620c6f117b2e93c77d188bd62fe7ba03", "patch": "@@ -1931,9 +1931,4 @@ GOMP_OFFLOAD_run (int ord, void *tgt_fn, void *tgt_vars, void **args)\n   nvptx_stacks_free (stacks, teams * threads);\n }\n \n-void\n-GOMP_OFFLOAD_async_run (int ord, void *tgt_fn, void *tgt_vars, void **args,\n-\t\t\tvoid *async_data)\n-{\n-  GOMP_PLUGIN_fatal (\"GOMP_OFFLOAD_async_run unimplemented\");\n-}\n+/* TODO: Implement GOMP_OFFLOAD_async_run. */"}, {"sha": "0ff727de47d2a4352bd8bc50537379c872452d54", "filename": "libgomp/target.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=001ab12e620c6f117b2e93c77d188bd62fe7ba03", "patch": "@@ -2022,6 +2022,16 @@ GOMP_target (int device, void (*fn) (void *), const void *unused,\n   gomp_unmap_vars (tgt_vars, true);\n }\n \n+static inline unsigned int\n+clear_unsupported_flags (struct gomp_device_descr *devicep, unsigned int flags)\n+{\n+  /* If we cannot run asynchronously, simply ignore nowait.  */\n+  if (devicep != NULL && devicep->async_run_func == NULL)\n+    flags &= ~GOMP_TARGET_FLAG_NOWAIT;\n+\n+  return flags;\n+}\n+\n /* Like GOMP_target, but KINDS is 16-bit, UNUSED is no longer present,\n    and several arguments have been added:\n    FLAGS is a bitmask, see GOMP_TARGET_FLAG_* in gomp-constants.h.\n@@ -2054,6 +2064,8 @@ GOMP_target_ext (int device, void (*fn) (void *), size_t mapnum,\n   size_t tgt_align = 0, tgt_size = 0;\n   bool fpc_done = false;\n \n+  flags = clear_unsupported_flags (devicep, flags);\n+\n   if (flags & GOMP_TARGET_FLAG_NOWAIT)\n     {\n       struct gomp_thread *thr = gomp_thread ();\n@@ -2524,6 +2536,7 @@ gomp_target_task_fn (void *data)\n \t}\n       ttask->state = GOMP_TARGET_TASK_READY_TO_RUN;\n \n+      assert (devicep->async_run_func);\n       devicep->async_run_func (devicep->target_id, fn_addr, actual_arguments,\n \t\t\t       ttask->args, (void *) ttask);\n       return true;\n@@ -3040,7 +3053,7 @@ gomp_load_plugin_for_device (struct gomp_device_descr *device,\n   if (device->capabilities & GOMP_OFFLOAD_CAP_OPENMP_400)\n     {\n       DLSYM (run);\n-      DLSYM (async_run);\n+      DLSYM_OPT (async_run, async_run);\n       DLSYM_OPT (can_run, can_run);\n       DLSYM (dev2dev);\n     }"}, {"sha": "1bed4b6bc6738c5a733bd9bbdb7242a95fae1391", "filename": "libgomp/testsuite/libgomp.c/target-33.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-33.c?ref=001ab12e620c6f117b2e93c77d188bd62fe7ba03", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-xfail-run-if \"GOMP_OFFLOAD_async_run not implemented\" { offload_target_nvptx } }\n-   Cf. https://gcc.gnu.org/PR81688.  */\n-\n extern void abort (void);\n \n int"}, {"sha": "66d9f54202bea3047020e2d42853bd404a56850c", "filename": "libgomp/testsuite/libgomp.c/target-34.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001ab12e620c6f117b2e93c77d188bd62fe7ba03/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-34.c?ref=001ab12e620c6f117b2e93c77d188bd62fe7ba03", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-xfail-run-if \"GOMP_OFFLOAD_async_run not implemented\" { offload_target_nvptx } }\n-   Cf. https://gcc.gnu.org/PR81688.  */\n-\n extern void abort (void);\n \n int"}]}