{"sha": "f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiMGExZGRkM2E1YzZhYzg2ZmFlMDQ4M2IzMWY0NWRkNzU3ZjlkOQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2018-11-06T11:49:54Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2018-11-06T11:49:54Z"}, "message": "msp430.h (REG_CLASS_CONTENTS): Add R0 to REG_CLASS_CONTENTS[GEN_REGS].\n\n2018-11-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* gcc/config/msp430/msp430.h (REG_CLASS_CONTENTS): Add R0 to\n\tREG_CLASS_CONTENTS[GEN_REGS].\n\t(REGNO_REG_CLASS): Return NO_REGS for R2 and R3.\n\n\t* gcc/testsuite/gcc.target/msp430/special-regs.c: New test.\n\nFrom-SVN: r265839", "tree": {"sha": "cb01db3f96d93a5fd6ccd5bf6a8601c5a08b0228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb01db3f96d93a5fd6ccd5bf6a8601c5a08b0228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8c9d98687e0b49bde2898da7e195cbc49bb4ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c9d98687e0b49bde2898da7e195cbc49bb4ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c9d98687e0b49bde2898da7e195cbc49bb4ce6"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "d3835d12b855452dc4307cc3e9da55ab584bc140", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "patch": "@@ -1,3 +1,9 @@\n+2018-11-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc/config/msp430/msp430.h (REG_CLASS_CONTENTS): Add R0 to\n+\tREG_CLASS_CONTENTS[GEN_REGS].\n+\t(REGNO_REG_CLASS): Return NO_REGS for R2 and R3.\n+\n 2018-11-06  Jan Hubicka  <jh@suse.cz>\n \n \t * tree.c (fld_simplified_type_of): Clear TYPELESS_STORAGE flag."}, {"sha": "380e63e5a71d3f436ff2b6218ba6cf164fe157aa", "filename": "gcc/config/msp430/msp430.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.h?ref=f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "patch": "@@ -241,10 +241,15 @@ enum reg_class\n   0x00000000,\t\t   \\\n   0x00001000,\t\t   \\\n   0x00002000,\t\t   \\\n-  0x0000fff2,\t\t   \\\n+  0x0000fff3,\t\t   \\\n   0x0001ffff\t\t   \\\n }\n \n+/* GENERAL_REGS just means that the \"g\" and \"r\" constraints can use these\n+   registers.\n+   Even though R0 (PC) and R1 (SP) are not \"general\" in that they can be used\n+   for any purpose by the register allocator, they are general in that they can\n+   be used by any instruction in any addressing mode.  */\n #define GENERAL_REGS\t\t\tGEN_REGS\n #define BASE_REG_CLASS  \t\tGEN_REGS\n #define INDEX_REG_CLASS\t\t\tGEN_REGS\n@@ -259,7 +264,9 @@ enum reg_class\n \n #define FIRST_PSEUDO_REGISTER \t\t17\n \n-#define REGNO_REG_CLASS(REGNO)          ((REGNO) < 17 \\\n+#define REGNO_REG_CLASS(REGNO)\t\t(REGNO != 2 \\\n+\t\t\t\t\t && REGNO != 3 \\\n+\t\t\t\t\t && REGNO < 17 \\\n \t\t\t\t\t ? GEN_REGS : NO_REGS)\n \n #define TRAMPOLINE_SIZE\t\t\t4 /* FIXME */"}, {"sha": "130979294d1088a1bff63b771e6dd2286a0adbfc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "patch": "@@ -1,3 +1,7 @@\n+2018-11-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc/testsuite/gcc.target/msp430/special-regs.c: New test.\n+\n 2018-11-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR sanitizer/80953"}, {"sha": "c9121e62b6ba1dc9221b3b92f9038adc25ef4b83", "filename": "gcc/testsuite/gcc.target/msp430/special-regs.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fspecial-regs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fspecial-regs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fspecial-regs.c?ref=f1b0a1ddd3a5c6ac86fae0483b31f45dd757f9d9", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+int foo (void)\n+{\n+  register int pc __asm__(\"R0\");\n+  register int sp __asm__(\"R1\");\n+  register int cg1 __asm__(\"R2\"); /* { dg-error \"the register specified for 'cg1' is not general enough\" } */\n+  register int cg2 __asm__(\"R3\"); /* { dg-error \"the register specified for 'cg2' is not general enough\" } */\n+\n+  asm(\"\" : \"=r\"(pc));\n+  asm(\"\" : \"=r\"(sp));\n+  asm(\"\" : \"=r\"(cg1));\n+  asm(\"\" : \"=r\"(cg2));\n+\n+  return pc + sp + cg1 + cg2;\n+}"}]}