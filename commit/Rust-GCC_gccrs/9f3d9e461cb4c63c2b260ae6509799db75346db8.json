{"sha": "9f3d9e461cb4c63c2b260ae6509799db75346db8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzZDllNDYxY2I0YzYzYzJiMjYwYWU2NTA5Nzk5ZGI3NTM0NmRiOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-11-29T15:30:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-29T15:30:30Z"}, "message": "pt.c (unify, [...]): Pass down 'strict' rather than UNIFY_ALLOW_NONE.\n\n\t* pt.c (unify, case OFFSET_TYPE): Pass down 'strict' rather than\n\tUNIFY_ALLOW_NONE.\n\t(convert_nontype_argument): Use TYPE_PTRMEMFUNC_FN_TYPE.\n\t(resolve_overloaded_unification): Strip baselinks.\nFixes Sec14/10_2/P14264.C, Sec14/10_2/P14278.C, Sec14/10_2/C14413.cm.\n\nFrom-SVN: r23980", "tree": {"sha": "f45c6a999dcbc8d7be9cea0b076534d0a4f97ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f45c6a999dcbc8d7be9cea0b076534d0a4f97ba3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f3d9e461cb4c63c2b260ae6509799db75346db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3d9e461cb4c63c2b260ae6509799db75346db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3d9e461cb4c63c2b260ae6509799db75346db8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3d9e461cb4c63c2b260ae6509799db75346db8/comments", "author": null, "committer": null, "parents": [{"sha": "cae94af8461cdc204d4def9fb140bdd1b0a0047d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae94af8461cdc204d4def9fb140bdd1b0a0047d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae94af8461cdc204d4def9fb140bdd1b0a0047d"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "2ec4103d885129783fb98b80c30cd596ad6a5dd8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3d9e461cb4c63c2b260ae6509799db75346db8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3d9e461cb4c63c2b260ae6509799db75346db8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f3d9e461cb4c63c2b260ae6509799db75346db8", "patch": "@@ -1,3 +1,10 @@\n+1998-11-29  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (unify, case OFFSET_TYPE): Pass down 'strict' rather than\n+\tUNIFY_ALLOW_NONE.\n+\t(convert_nontype_argument): Use TYPE_PTRMEMFUNC_FN_TYPE.\n+\t(resolve_overloaded_unification): Strip baselinks.\n+\n Fri Nov 27 13:07:23 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* g++spec.c: Don't prototype xmalloc."}, {"sha": "948c53e0c4f0a3e87cf67c63b343bc2a60a5adbf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3d9e461cb4c63c2b260ae6509799db75346db8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3d9e461cb4c63c2b260ae6509799db75346db8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9f3d9e461cb4c63c2b260ae6509799db75346db8", "patch": "@@ -2737,7 +2737,7 @@ convert_nontype_argument (type, expr)\n \n \tfns = TREE_OPERAND (expr, 0);\n \t\n-\tfn = instantiate_type (TREE_TYPE (TREE_TYPE (type)), \n+\tfn = instantiate_type (TREE_TYPE (TYPE_PTRMEMFUNC_FN_TYPE (type)),\n \t\t\t       fns, 0);\n \t\n \tif (fn == error_mark_node)\n@@ -7151,6 +7151,11 @@ resolve_overloaded_unification (tparms, targs, parm, arg, strict,\n \n   if (TREE_CODE (arg) == ADDR_EXPR)\n     arg = TREE_OPERAND (arg, 0);\n+\n+  /* Strip baselink information.  */\n+  while (TREE_CODE (arg) == TREE_LIST)\n+    arg = TREE_VALUE (arg);\n+\n   if (TREE_CODE (arg) == TEMPLATE_ID_EXPR)\n     {\n       /* If we got some explicit template args, we need to plug them into\n@@ -7711,7 +7716,7 @@ unify (tparms, targs, parm, arg, strict, explicit_mask)\n \t\t TYPE_OFFSET_BASETYPE (arg), UNIFY_ALLOW_NONE, explicit_mask))\n \treturn 1;\n       return unify (tparms, targs, TREE_TYPE (parm), TREE_TYPE (arg),\n-\t\t    UNIFY_ALLOW_NONE, explicit_mask);\n+\t\t    strict, explicit_mask);\n \n     case CONST_DECL:\n       if (arg != decl_constant_value (parm)) "}]}