{"sha": "a6096a27f69e7940a427f3f354da29e6418d865a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYwOTZhMjdmNjllNzk0MGE0MjdmM2YzNTRkYTI5ZTY0MThkODY1YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T22:21:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T22:21:25Z"}, "message": "(beq0_di, bne0_di, bge0_di, blt0_di): Use cmpw #0 instead of tstl when\ntesting address registers on the 68000.\n\nFrom-SVN: r13728", "tree": {"sha": "a2086516f8f2b009ab09cfd034a7f83558785763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2086516f8f2b009ab09cfd034a7f83558785763"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6096a27f69e7940a427f3f354da29e6418d865a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6096a27f69e7940a427f3f354da29e6418d865a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6096a27f69e7940a427f3f354da29e6418d865a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6096a27f69e7940a427f3f354da29e6418d865a/comments", "author": null, "committer": null, "parents": [{"sha": "0b364e61d36fde678b4b7abba497f0569a0ee48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b364e61d36fde678b4b7abba497f0569a0ee48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b364e61d36fde678b4b7abba497f0569a0ee48a"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "3828d612dc934431a0b36bbf1983c98f9bbc5d8c", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 50, "deletions": 9, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6096a27f69e7940a427f3f354da29e6418d865a/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6096a27f69e7940a427f3f354da29e6418d865a/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=a6096a27f69e7940a427f3f354da29e6418d865a", "patch": "@@ -5452,10 +5452,21 @@\n     return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jeq %l1\\\";\n #endif\n   operands[4] = gen_label_rtx();\n+  if (TARGET_68020 || TARGET_5200)\n+#ifdef MOTOROLA\n+    output_asm_insn (\\\"tst%.l %0\\;jbne %l4\\;tst%.l %3\\;jbeq %l1\\\", operands);\n+#else\n+    output_asm_insn (\\\"tst%.l %0\\;jne %l4\\;tst%.l %3\\;jeq %l1\\\", operands);\n+#endif\n+  else\n #ifdef MOTOROLA\n-  output_asm_insn (\\\"tst%.l %0\\;jbne %l4\\;tst%.l %3\\;jbeq %l1\\\", operands);\n+#ifdef SGS_CMP_ORDER\n+    output_asm_insn (\\\"cmp%.w %0,%#0\\;jbne %l4\\;cmp%.w %3,%#0\\;jbeq %l1\\\", operands);\n+#else\n+    output_asm_insn (\\\"cmp%.w %#0,%0\\;jbne %l4\\;cmp%.w %#0,%3\\;jbeq %l1\\\", operands);\n+#endif\n #else\n-  output_asm_insn (\\\"tst%.l %0\\;jne %l4\\;tst%.l %3\\;jeq %l1\\\", operands);\n+    output_asm_insn (\\\"cmp%.w %#0,%0\\;jne %l4\\;cmp%.w %#0,%3\\;jeq %l1\\\", operands);\n #endif\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[4]));\n@@ -5489,17 +5500,27 @@\n     operands[3] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n   else\n     operands[3] = adj_offsettable_operand (operands[0], 4);\n-  if (ADDRESS_REG_P (operands[0]))\n+  if (!ADDRESS_REG_P (operands[0]))\n+#ifdef MOTOROLA\n+    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jbne %l1\\\";\n+#else\n+    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jne %l1\\\";\n+#endif\n+  if (TARGET_68020 || TARGET_5200)\n #ifdef MOTOROLA\n     return \\\"tst%.l %0\\;jbne %l1\\;tst%.l %3\\;jbne %l1\\\";\n #else\n     return \\\"tst%.l %0\\;jne %l1\\;tst%.l %3\\;jne %l1\\\";\n #endif\n   else\n #ifdef MOTOROLA\n-    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jbne %l1\\\";\n+#ifdef SGS_CMP_ORDER\n+    return \\\"cmp%.w %#0,%0\\;jbne %l1\\;cmp%.w %#0,%3\\;jbne %l1\\\";\n #else\n-    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jne %l1\\\";\n+    return \\\"cmp%.w %0,%#0\\;jbne %l1\\;cmp%.w %3,%#0\\;jbne %l1\\\";\n+#endif\n+#else\n+    return \\\"cmp%.w %#0,%0\\;jne %l1\\;cmp%.w %#0,%3\\;jne %l1\\\";\n #endif\n } \")\n \n@@ -5536,10 +5557,20 @@\n \t}\n     }\n   CC_STATUS_INIT;\n+  if (TARGET_68020 || TARGET_5200 || ! ADDRESS_REG_P (operands[0]))\n+    output_asm_insn(\\\"tst%.l %0\\\", operands);\n+  else\n+    /* On an address reg, cmpw may replace cmpl.  */\n+#ifdef SGS_CMP_ORDER\n+    output_asm_insn(\\\"cmp%.w %0,%#0\\\", operands);\n+#else\n+    output_asm_insn(\\\"cmp%.w %#0,%0\\\", operands);\n+#endif\n+\n #ifdef MOTOROLA\n-  return \\\"tst%.l %0\\;jbpl %l1\\\";\n+    return \\\"jbpl %l1\\\";\n #else\n-  return \\\"tst%.l %0\\;jpl %l1\\\";\n+    return \\\"jpl %l1\\\";\n #endif\n } \")\n \n@@ -5576,10 +5607,20 @@\n \t}\n     }\n   CC_STATUS_INIT;\n+  if (TARGET_68020 || TARGET_5200 || ! ADDRESS_REG_P (operands[0]))\n+    output_asm_insn(\\\"tst%.l %0\\\", operands);\n+  else\n+    /* On an address reg, cmpw may replace cmpl.  */\n+#ifdef SGS_CMP_ORDER\n+    output_asm_insn(\\\"cmp%.w %0,%#0\\\", operands);\n+#else\n+    output_asm_insn(\\\"cmp%.w %#0,%0\\\", operands);\n+#endif\n+\n #ifdef MOTOROLA\n-  return \\\"tst%.l %0\\;jbmi %l1\\\";\n+  return \\\"jbmi %l1\\\";\n #else\n-  return \\\"tst%.l %0\\;jmi %l1\\\";\n+  return \\\"jmi %l1\\\";\n #endif\n } \")\n "}]}