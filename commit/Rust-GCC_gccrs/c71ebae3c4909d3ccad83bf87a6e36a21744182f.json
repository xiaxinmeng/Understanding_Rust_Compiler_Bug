{"sha": "c71ebae3c4909d3ccad83bf87a6e36a21744182f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcxZWJhZTNjNDkwOWQzY2NhZDgzYmY4N2E2ZTM2YTIxNzQ0MTgyZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-23T11:52:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-23T11:52:14Z"}, "message": "(jump_optimize): Properly make jump into store-flag sequence when...\n\n(jump_optimize): Properly make jump into store-flag sequence when the\njump can't be reversed but the TRUE branch is const0_rtx.\n\nFrom-SVN: r4715", "tree": {"sha": "6e0b77dcc102537b334980e98cfe4d7f0c35377b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e0b77dcc102537b334980e98cfe4d7f0c35377b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c71ebae3c4909d3ccad83bf87a6e36a21744182f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71ebae3c4909d3ccad83bf87a6e36a21744182f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c71ebae3c4909d3ccad83bf87a6e36a21744182f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71ebae3c4909d3ccad83bf87a6e36a21744182f/comments", "author": null, "committer": null, "parents": [{"sha": "dd27116b8ff920cea2001d4f6c1dd95c0114d2de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd27116b8ff920cea2001d4f6c1dd95c0114d2de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd27116b8ff920cea2001d4f6c1dd95c0114d2de"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "9773ce61978f8834b1038c4eb3f78097e860f113", "filename": "gcc/jump.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c71ebae3c4909d3ccad83bf87a6e36a21744182f/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c71ebae3c4909d3ccad83bf87a6e36a21744182f/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=c71ebae3c4909d3ccad83bf87a6e36a21744182f", "patch": "@@ -1,5 +1,5 @@\n /* Optimize jump instructions, for GNU compiler.\n-   Copyright (C) 1987, 1988, 1989, 1991, 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 89, 91, 92, 1993 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1155,10 +1155,22 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\t\t\t     1, OPTAB_WIDEN);\n \t\t    }\n \t\t  else if (normalizep != 1)\n-\t\t    target = expand_and (uval, target,\n-\t\t\t\t\t (GET_CODE (target) == REG\n-\t\t\t\t\t  && ! preserve_subexpressions_p ()\n-\t\t\t\t\t  ? target : NULL_RTX));\n+\t\t    {\n+\t\t      /* We know that either CVAL or UVAL is zero.  If\n+\t\t\t UVAL is zero, negate TARGET and `and' with CVAL.\n+\t\t\t Otherwise, `and' with UVAL.  */\n+\t\t      if (uval == const0_rtx)\n+\t\t\t{\n+\t\t\t  target = expand_unop (GET_MODE (var), one_cmpl_optab,\n+\t\t\t\t\t\ttarget, NULL_RTX, 0);\n+\t\t\t  uval = cval;\n+\t\t\t}\n+\n+\t\t      target = expand_and (uval, target,\n+\t\t\t\t\t   (GET_CODE (target) == REG\n+\t\t\t\t\t    && ! preserve_subexpressions_p ()\n+\t\t\t\t\t    ? target : NULL_RTX));\n+\t\t    }\n \t\t  \n \t\t  emit_move_insn (var, target);\n \t\t  seq = get_insns ();"}]}