{"sha": "ae957bef065848356215a127d1c3c81c39b68d6b", "node_id": "C_kwDOANBUbNoAKGFlOTU3YmVmMDY1ODQ4MzU2MjE1YTEyN2QxYzNjODFjMzliNjhkNmI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-22T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-22T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "83ae6b08b9eff5b1dd9d0ce45d95ff89d27dfada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83ae6b08b9eff5b1dd9d0ce45d95ff89d27dfada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae957bef065848356215a127d1c3c81c39b68d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae957bef065848356215a127d1c3c81c39b68d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae957bef065848356215a127d1c3c81c39b68d6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae957bef065848356215a127d1c3c81c39b68d6b/comments", "author": null, "committer": null, "parents": [{"sha": "da17c304e22ba256eba0b03710aa329115163b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da17c304e22ba256eba0b03710aa329115163b08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da17c304e22ba256eba0b03710aa329115163b08"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "1e94c5404abdae21ef3bc2207cef708ba36a1ddd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae957bef065848356215a127d1c3c81c39b68d6b", "patch": "@@ -1,3 +1,70 @@\n+2021-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/101180\n+\t* config/i386/i386-options.c (ix86_valid_target_attribute_p): If\n+\tfndecl already has DECL_FUNCTION_SPECIFIC_TARGET, use that as base\n+\tinstead of target_option_default_node.\n+\n+2021-11-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103227\n+\t* ipa-modref.c (parm_map_for_arg): Rename to ...\n+\t(parm_map_for_ptr): .. this one; handle static chain and calls to\n+\tmalloc functions.\n+\t(modref_access_analysis::get_access): Use parm_map_for_ptr.\n+\t(modref_access_analysis::process_fnspec): Update.\n+\t(modref_access_analysis::analyze_load): Update.\n+\t(modref_access_analysis::analyze_store): Update.\n+\n+2021-11-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref.c (ignore_nondeterminism_p): Move earlier in source\n+\tcode.\n+\t(ignore_retval_p): Likewise.\n+\t(ignore_stores_p): Likewise.\n+\t(parm_map_for_arg): Likewise.\n+\t(class modref_access_analysis): New class.\n+\t(modref_access_analysis::set_side_effects): New member function.\n+\t(modref_access_analysis::set_nondeterministic): New member function.\n+\t(get_access): Turn to ...\n+\t(modref_access_analysis::get_access): ... this one.\n+\t(record_access): Turn to ...\n+\t(modref_access_analysis::record_access): ... this one.\n+\t(record_access_lto): Turn to ...\n+\t(modref_access_analysis::record_access_lto): ... This one.\n+\t(record_access_p): Turn to ...\n+\t(modref_access_analysis::record_access_p): ... This one\n+\t(modref_access_analysis::record_unknown_load): New member function.\n+\t(modref_access_analysis::record_unknown_store): New member function.\n+\t(get_access_for_fnspec): Turn to ...\n+\t(modref_access_analysis::get_access_for_fnspec): ... this one.\n+\t(merge_call_side_effects): Turn to ...\n+\t(moderf_access_analysis::merge_call_side_effects): Turn to ...\n+\t(collapse_loads): Move later in source code.\n+\t(collapse_stores): Move later in source code.\n+\t(process_fnspec): Turn to ...\n+\t(modref_access_analysis::process_fnspec): ... this one.\n+\t(analyze_call): Turn to ...\n+\t(modref_access_analysis::analyze_call): ... this one.\n+\t(struct summary_ptrs): Remove.\n+\t(analyze_load): Turn to ...\n+\t(modref_access_analysis::analyze_load): ... this one.\n+\t(analyze_store): Turn to ...\n+\t(modref_access_analysis::analyze_store): ... this one.\n+\t(analyze_stmt): Turn to ...\n+\t(modref_access_analysis::analyze_stmt): ... This one.\n+\t(remove_summary): Remove.\n+\t(modref_access_analysis::propagate): Break out from ...\n+\t(modref_access_analysis::analyze): Break out from ...\n+\t(analyze_function): ... here.\n+\n+2021-11-21  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\tPR target/102117\n+\t* tree-ssa-math-opts.c (convert_mult_to_widen): Recognize\n+\tsigned WIDEN_MULT_EXPR if the target supports umul_widen_optab.\n+\n 2021-11-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/103052"}, {"sha": "7e1517792f2c981de58e008f17e04bddf8b75cd4", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ae957bef065848356215a127d1c3c81c39b68d6b", "patch": "@@ -1 +1 @@\n-20211121\n+20211122"}, {"sha": "f3c885cfec802967b97adcac86abd80c6337d3d1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ae957bef065848356215a127d1c3c81c39b68d6b", "patch": "@@ -1,3 +1,20 @@\n+2021-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/103315\n+\t* trans-types.c (gfc_get_array_descr_info): Use DW_OP_deref_size 1\n+\tinstead of DW_OP_deref for DW_AT_rank.\n+\n+2021-11-21  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/99061\n+\t* trans-intrinsic.c (gfc_lookup_intrinsic): Helper function for\n+\tlooking up gfortran builtin intrinsics.\n+\t(gfc_conv_intrinsic_atrigd): Use it.\n+\t(gfc_conv_intrinsic_cotan): Likewise.\n+\t(gfc_conv_intrinsic_cotand): Likewise.\n+\t(gfc_conv_intrinsic_atan2d): Likewise.\n+\n 2021-11-18  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "9872619ff18ba9c2cb410a7539a29492458b65b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae957bef065848356215a127d1c3c81c39b68d6b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae957bef065848356215a127d1c3c81c39b68d6b", "patch": "@@ -1,3 +1,31 @@\n+2021-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/101180\n+\t* gcc.target/i386/pr101180.c: New test.\n+\n+2021-11-21  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/99061\n+\t* gfortran.dg/dec_math_5.f90: New test.\n+\n+2021-11-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103227\n+\t* gcc.dg/tree-ssa/modref-15.c: New test.\n+\n+2021-11-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103264\n+\t* gcc.dg/tree-prof/merge_block.c: Add -fno-ipa-modref\n+\n+2021-11-21  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\tPR target/102117\n+\t* gcc.target/s390/mul-wide.c: New test case.\n+\t* gcc.target/s390/umul-wide.c: New test case.\n+\n 2021-11-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/103052"}]}