{"sha": "bec42276e00a9bfcb30169f36fa25551507ded96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjNDIyNzZlMDBhOWJmY2IzMDE2OWYzNmZhMjU1NTE1MDdkZWQ5Ng==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-14T22:26:14Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-14T22:26:14Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r981", "tree": {"sha": "4326d65ee27e35b4e6c1338d3ea701a9d873f07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4326d65ee27e35b4e6c1338d3ea701a9d873f07b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec42276e00a9bfcb30169f36fa25551507ded96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec42276e00a9bfcb30169f36fa25551507ded96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec42276e00a9bfcb30169f36fa25551507ded96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec42276e00a9bfcb30169f36fa25551507ded96/comments", "author": null, "committer": null, "parents": [{"sha": "8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d53f1939b7e74bc8a0f2366c39e6cb015892b39"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "4487af180faf0f8b78143041d59f99c6473659cb", "filename": "gcc/cccp.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec42276e00a9bfcb30169f36fa25551507ded96/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec42276e00a9bfcb30169f36fa25551507ded96/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=bec42276e00a9bfcb30169f36fa25551507ded96", "patch": "@@ -524,6 +524,10 @@ static struct file_name_list *dont_repeat_files = 0;\n    around the entire contents, and ->control_macro gives the macro name.  */\n static struct file_name_list *all_include_files = 0;\n \n+/* Directory prefix that should replace `/usr' in the standard\n+   include file directories.  */\n+static char *include_prefix;\n+\n /* Global list of strings read in from precompiled files.  This list\n    is kept in the order the strings are read in, with new strings being\n    added at the end through stringlist_tailp.  We use this list to output\n@@ -1002,6 +1006,12 @@ main (argc, argv)\n \t  else\n \t    pend_files[i] = argv[i+1], i++;\n \t}\n+\tif (!strcmp (argv[i], \"-iprefix\")) {\n+\t  if (i + 1 == argc)\n+\t    fatal (\"Filename missing after -iprefix option\");\n+\t  else\n+\t    include_prefix = argv[++i];\n+\t}\n \t/* Add directory to end of path for includes.  */\n \tif (!strcmp (argv[i], \"-idirafter\")) {\n \t  struct file_name_list *dirtmp;\n@@ -1511,7 +1521,7 @@ main (argc, argv)\n      tack on the standard include file dirs to the specified list */\n   if (!no_standard_includes) {\n     struct default_include *p = include_defaults;\n-    char *specd_prefix = getenv (\"GCC_EXEC_PREFIX\");\n+    char *specd_prefix = include_prefix;\n     char *default_prefix = savestring (GCC_INCLUDE_DIR);\n     int default_len = 0;\n     /* Remove the `include' from /usr/local/lib/gcc.../include.  */"}]}