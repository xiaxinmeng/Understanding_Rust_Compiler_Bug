{"sha": "c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkMTM4MzU2MzhmZjgyZjNiYTdiZmIwYTVjMmY1OTc4NTFkZmI1YQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-19T16:29:23Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-19T16:29:23Z"}, "message": "Fix typo in param description.\n\ngcc/ChangeLog:\n\n\tPR translation/99167\n\t* params.opt: Fix typo.", "tree": {"sha": "bfd82fb58d551c4a8e58eb191db3d3f497f1bd1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfd82fb58d551c4a8e58eb191db3d3f497f1bd1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2a7096e5e20d736c6138179470b21aa5a74864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2a7096e5e20d736c6138179470b21aa5a74864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2a7096e5e20d736c6138179470b21aa5a74864"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0dd9ac406eb1d367adb0cf405360633edba93a78", "filename": "gcc/params.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=c8d13835638ff82f3ba7bfb0a5c2f597851dfb5a", "patch": "@@ -957,7 +957,7 @@ Maximum number of references stored in each modref base.\n \n -param=modref-max-accesses=\n Common Joined UInteger Var(param_modref_max_accesses) Init(16) Param Optimization\n-Maximum number of accesse stored in each modref reference.\n+Maximum number of accesses stored in each modref reference.\n \n -param=modref-max-tests=\n Common Joined UInteger Var(param_modref_max_tests) Init(64) Param Optimization"}]}