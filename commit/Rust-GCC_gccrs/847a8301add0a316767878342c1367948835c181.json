{"sha": "847a8301add0a316767878342c1367948835c181", "node_id": "C_kwDOANBUbNoAKDg0N2E4MzAxYWRkMGEzMTY3Njc4NzgzNDJjMTM2Nzk0ODgzNWMxODE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-21T17:49:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-21T19:40:09Z"}, "message": "c++: class array new checking [PR104084]\n\nMy patch for PR20040 made us stop exiting early from build_new_1 in\ncases of trivial initialization if there's a class operator delete; as a\nresult, code later in the function needs to handle this case properly.\n\n\tPR c++/104084\n\tPR c++/20040\n\ngcc/cp/ChangeLog:\n\n\t* init.cc (build_new_1): Only pull out TARGET_EXPR_INITIAL if\n\talloc_expr is a TARGET_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/init/new50.C: New test.", "tree": {"sha": "493d8dfff742fd81b3af794d6c569b61b72f6f0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/493d8dfff742fd81b3af794d6c569b61b72f6f0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/847a8301add0a316767878342c1367948835c181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847a8301add0a316767878342c1367948835c181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/847a8301add0a316767878342c1367948835c181", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847a8301add0a316767878342c1367948835c181/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c163647ffbc9a20c8feb6e079dbecccfe016c82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c163647ffbc9a20c8feb6e079dbecccfe016c82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c163647ffbc9a20c8feb6e079dbecccfe016c82e"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "1f047831b6dac32df74b833b4ec4f2e6806a1a42", "filename": "gcc/cp/init.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847a8301add0a316767878342c1367948835c181/gcc%2Fcp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847a8301add0a316767878342c1367948835c181/gcc%2Fcp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.cc?ref=847a8301add0a316767878342c1367948835c181", "patch": "@@ -3786,7 +3786,7 @@ build_new_1 (vec<tree, va_gc> **placement, tree type, tree nelts,\n   if (cookie_expr)\n     rval = build2 (COMPOUND_EXPR, TREE_TYPE (rval), cookie_expr, rval);\n \n-  if (rval == data_addr)\n+  if (rval == data_addr && TREE_CODE (alloc_expr) == TARGET_EXPR)\n     /* If we don't have an initializer or a cookie, strip the TARGET_EXPR\n        and return the call (which doesn't need to be adjusted).  */\n     rval = TARGET_EXPR_INITIAL (alloc_expr);"}, {"sha": "981d23106f328630fb0e7e8e969b254d0e7c6a10", "filename": "gcc/testsuite/g++.dg/init/new50.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847a8301add0a316767878342c1367948835c181/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847a8301add0a316767878342c1367948835c181/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew50.C?ref=847a8301add0a316767878342c1367948835c181", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/104084\n+\n+int nothrow;\n+struct MaxAlignedAllocable {\n+  void *operator new[](__SIZE_TYPE__, int);\n+  void operator delete[](void *);\n+  long Resize_size;\n+  void Resize() { new (nothrow) MaxAlignedAllocable[Resize_size]; }\n+};"}]}