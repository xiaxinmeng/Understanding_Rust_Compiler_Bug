{"sha": "d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhMWQxYzc1ODRiNmIwYWRiMGJhOTU5YjYxZTU0NjkzYjk2YmQzZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-08T17:43:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-08T17:43:59Z"}, "message": "(find_equiv_reg): Set need_stable_sp if GOAL is the stack pointer.\n\nFrom-SVN: r12242", "tree": {"sha": "de9845ea77666840ef74426963b10f8b5497a84e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de9845ea77666840ef74426963b10f8b5497a84e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e/comments", "author": null, "committer": null, "parents": [{"sha": "0161e8dace9f35fba0a938a803fc4c55e675dcb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0161e8dace9f35fba0a938a803fc4c55e675dcb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0161e8dace9f35fba0a938a803fc4c55e675dcb9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0d35f55ce1b19c94c2db04228ad91284aabc840a", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=d5a1d1c7584b6b0adb0ba959b61e54693b96bd3e", "patch": "@@ -5554,7 +5554,7 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \n   /* If we propose to get the value from the stack pointer or if GOAL is\n      a MEM based on the stack pointer, we need a stable SP.  */\n-  if (valueno == STACK_POINTER_REGNUM\n+  if (valueno == STACK_POINTER_REGNUM || regno == STACK_POINTER_REGNUM\n       || (goal_mem && reg_overlap_mentioned_for_reload_p (stack_pointer_rtx,\n \t\t\t\t\t\t\t  goal)))\n     need_stable_sp = 1;"}]}