{"sha": "36a8422688457ada0e191fda2c03f602fe08b6b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZhODQyMjY4ODQ1N2FkYTBlMTkxZmRhMmMwM2Y2MDJmZTA4YjZiNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-11-11T11:52:36Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-11-11T11:52:36Z"}, "message": "[Fortran] PR 63701 Make sure variable is always used initialised\n\n\tPR fortran/63701\n\t* trans-expr.c (gfc_get_tree_for_caf_expr): Initialise found to false.\n\nFrom-SVN: r217345", "tree": {"sha": "62d3282eafc970919b18f4aadd24a93b409edad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62d3282eafc970919b18f4aadd24a93b409edad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36a8422688457ada0e191fda2c03f602fe08b6b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a8422688457ada0e191fda2c03f602fe08b6b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36a8422688457ada0e191fda2c03f602fe08b6b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a8422688457ada0e191fda2c03f602fe08b6b7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5281f1796c6c2e77400e621253b409280180a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5281f1796c6c2e77400e621253b409280180a2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5281f1796c6c2e77400e621253b409280180a2c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "7c89d33acda029ddd91409d333aba7c4ac244fe3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a8422688457ada0e191fda2c03f602fe08b6b7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a8422688457ada0e191fda2c03f602fe08b6b7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=36a8422688457ada0e191fda2c03f602fe08b6b7", "patch": "@@ -1,3 +1,8 @@\n+2014-11-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR fortran/63701\n+\t* trans-expr.c (gfc_get_tree_for_caf_expr): Initialise found to false.\n+\n 2014-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/47007"}, {"sha": "b36acbe1ea22d5b24269607785ea47ad07b894bf", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a8422688457ada0e191fda2c03f602fe08b6b7/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a8422688457ada0e191fda2c03f602fe08b6b7/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=36a8422688457ada0e191fda2c03f602fe08b6b7", "patch": "@@ -1406,7 +1406,7 @@ tree\n gfc_get_tree_for_caf_expr (gfc_expr *expr)\n {\n   tree caf_decl;\n-  bool found;\n+  bool found = false;\n   gfc_ref *ref;\n \n   gcc_assert (expr && expr->expr_type == EXPR_VARIABLE);"}]}