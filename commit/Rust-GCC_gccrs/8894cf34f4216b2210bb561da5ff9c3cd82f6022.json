{"sha": "8894cf34f4216b2210bb561da5ff9c3cd82f6022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg5NGNmMzRmNDIxNmIyMjEwYmI1NjFkYTVmZjljM2NkODJmNjAyMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-09-09T19:15:14Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-09-09T19:15:14Z"}, "message": "(truncdisi2): Change from define_expand to define_insn.\n\n(truncdihi2, truncdiqi2): Likewise.\n\nFrom-SVN: r8055", "tree": {"sha": "d641d0a6dd479181e613e0214d7e73c2545da64c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d641d0a6dd479181e613e0214d7e73c2545da64c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8894cf34f4216b2210bb561da5ff9c3cd82f6022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8894cf34f4216b2210bb561da5ff9c3cd82f6022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8894cf34f4216b2210bb561da5ff9c3cd82f6022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8894cf34f4216b2210bb561da5ff9c3cd82f6022/comments", "author": null, "committer": null, "parents": [{"sha": "d6f7c0feb9492a7162c89e79c2db5798b91916ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f7c0feb9492a7162c89e79c2db5798b91916ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6f7c0feb9492a7162c89e79c2db5798b91916ac"}], "stats": {"total": 64, "additions": 26, "deletions": 38}, "files": [{"sha": "a1828cbdc896591b53dec9b033014299a0af81da", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 26, "deletions": 38, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8894cf34f4216b2210bb561da5ff9c3cd82f6022/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8894cf34f4216b2210bb561da5ff9c3cd82f6022/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=8894cf34f4216b2210bb561da5ff9c3cd82f6022", "patch": "@@ -1945,49 +1945,37 @@ move\\\\t%0,%z4\\\\n\\\\\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"1\")])\n \n-\n-;; The optimizer doesn't deal well with truncate operators, so we completely\n-;; avoid them by using define expands here.\n-\n-(define_expand \"truncdisi2\"\n-  [(set (match_operand:DI 2 \"register_operand\" \"=d\")\n-\t(ashift:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t     (const_int 32)))\n-   (set (match_operand:DI 3 \"register_operand\" \"=d\")\n-\t(ashiftrt:DI (match_dup 2)\n-\t\t   (const_int 32)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d\")\n-\t(subreg:SI (match_dup 3) 0))]\n+;; ??? This should be a define expand.\n+;; See the zero_extendsidi2 pattern.\n+;; ??? We tried define expands, but they did not work.  Too many shift\n+;; instructions were optimized away.  Perhaps add combiner patterns to\n+;; recognize cases where shifts and truncates can be combined.\n+(define_insn \"truncdisi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(truncate:SI (match_operand:DI 1 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT\"\n-  \"\n-{\n-  operands[2] = gen_reg_rtx (DImode);\n-  operands[3] = gen_reg_rtx (DImode);\n-}\")\n+  \"dsll\\\\t%0,%1,32\\;dsra\\\\t%0,%0,32\"\n+  [(set_attr \"type\"\t\"darith\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"\t\"2\")])\n \n-(define_expand \"truncdihi2\"\n-  [(set (match_operand:DI 2 \"register_operand\" \"=d\")\n-\t(and:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t(const_int 65535)))\n-   (set (match_operand:HI 0 \"register_operand\" \"=d\")\n-\t(subreg:HI (match_dup 2) 0))]\n+(define_insn \"truncdihi2\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n+\t(truncate:HI (match_operand:DI 1 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT\"\n-  \"\n-{\n-  operands[2] = gen_reg_rtx (DImode);\n-}\")\n+  \"andi\\\\t%0,%1,0xffff\"\n+  [(set_attr \"type\"\t\"darith\")\n+   (set_attr \"mode\"\t\"HI\")\n+   (set_attr \"length\"\t\"1\")])\n \n-(define_expand \"truncdiqi2\"\n-  [(set (match_operand:DI 2 \"register_operand\" \"=d\")\n-\t(and:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t(const_int 255)))\n-   (set (match_operand:QI 0 \"register_operand\" \"=d\")\n-\t(subreg:QI (match_dup 2) 0))]\n+(define_insn \"truncdiqi2\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n+\t(truncate:QI (match_operand:DI 1 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT\"\n-  \"\n-{\n-  operands[2] = gen_reg_rtx (DImode);\n-}\")\n+  \"andi\\\\t%0,%1,0x00ff\"\n+  [(set_attr \"type\"\t\"darith\")\n+   (set_attr \"mode\"\t\"QI\")\n+   (set_attr \"length\"\t\"1\")])\n \f\n ;;\n ;;  ...................."}]}