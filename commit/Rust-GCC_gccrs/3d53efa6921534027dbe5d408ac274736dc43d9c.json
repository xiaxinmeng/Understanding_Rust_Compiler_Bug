{"sha": "3d53efa6921534027dbe5d408ac274736dc43d9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1M2VmYTY5MjE1MzQwMjdkYmU1ZDQwOGFjMjc0NzM2ZGM0M2Q5Yw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-07-04T08:05:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:05:45Z"}, "message": "[Ada] Skip code not in SPARK for ownership analysis\n\nOwnership rules for pointer support should only apply to code marked in\nSPARK. There is no impact on compilation.\n\n2019-07-04  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Check_Package_Spec, Check_Package_Body): Only\n\tanalyze parts of the code marked in SPARK.\n\nFrom-SVN: r273052", "tree": {"sha": "cbe1337290a3094b40be86882efc5619e8258685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbe1337290a3094b40be86882efc5619e8258685"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d53efa6921534027dbe5d408ac274736dc43d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d53efa6921534027dbe5d408ac274736dc43d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d53efa6921534027dbe5d408ac274736dc43d9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d53efa6921534027dbe5d408ac274736dc43d9c/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc1146e5e0979421b5dc2c9c005c355443c2fe24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1146e5e0979421b5dc2c9c005c355443c2fe24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc1146e5e0979421b5dc2c9c005c355443c2fe24"}], "stats": {"total": 77, "additions": 49, "deletions": 28}, "files": [{"sha": "07c37477b58cfd0a6a540465761ea1127f3f9cd4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d53efa6921534027dbe5d408ac274736dc43d9c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d53efa6921534027dbe5d408ac274736dc43d9c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3d53efa6921534027dbe5d408ac274736dc43d9c", "patch": "@@ -1,3 +1,8 @@\n+2019-07-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_spark.adb (Check_Package_Spec, Check_Package_Body): Only\n+\tanalyze parts of the code marked in SPARK.\n+\n 2019-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* erroutc.adb, exp_aggr.adb, inline.adb, opt.adb, sem_ch3.adb:"}, {"sha": "1b1ba0fc4680d98812ef313892b4b554684ecddd", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 44, "deletions": 28, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d53efa6921534027dbe5d408ac274736dc43d9c/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d53efa6921534027dbe5d408ac274736dc43d9c/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=3d53efa6921534027dbe5d408ac274736dc43d9c", "patch": "@@ -2364,39 +2364,43 @@ package body Sem_SPARK is\n       Save_In_Elab : constant Boolean := Inside_Elaboration;\n       Spec         : constant Node_Id :=\n         Package_Specification (Corresponding_Spec (Pack));\n-      Prag         : constant Node_Id := SPARK_Pragma (Defining_Entity (Pack));\n+      Id           : constant Entity_Id := Defining_Entity (Pack);\n+      Prag         : constant Node_Id := SPARK_Pragma (Id);\n+      Aux_Prag     : constant Node_Id := SPARK_Aux_Pragma (Id);\n       Saved_Env    : Perm_Env;\n \n    begin\n-      --  Only SPARK bodies are analyzed\n-\n-      if No (Prag)\n-        or else Get_SPARK_Mode_From_Annotation (Prag) /= Opt.On\n+      if Present (Prag)\n+        and then Get_SPARK_Mode_From_Annotation (Prag) = Opt.On\n       then\n-         return;\n-      end if;\n+         Inside_Elaboration := True;\n \n-      Inside_Elaboration := True;\n+         --  Save environment and put a new one in place\n \n-      --  Save environment and put a new one in place\n+         Move_Env (Current_Perm_Env, Saved_Env);\n \n-      Move_Env (Current_Perm_Env, Saved_Env);\n+         --  Reanalyze package spec to have its variables in the environment\n \n-      --  Reanalyze package spec to have its variables in the environment\n+         Check_List (Visible_Declarations (Spec));\n+         Check_List (Private_Declarations (Spec));\n \n-      Check_List (Visible_Declarations (Spec));\n-      Check_List (Private_Declarations (Spec));\n+         --  Check declarations and statements in the special mode for\n+         --  elaboration.\n \n-      --  Check declarations and statements in the special mode for elaboration\n+         Check_List (Declarations (Pack));\n \n-      Check_List (Declarations (Pack));\n-      Check_Node (Handled_Statement_Sequence (Pack));\n+         if Present (Aux_Prag)\n+           and then Get_SPARK_Mode_From_Annotation (Aux_Prag) = Opt.On\n+         then\n+            Check_Node (Handled_Statement_Sequence (Pack));\n+         end if;\n \n-      --  Restore the saved environment and free the current one\n+         --  Restore the saved environment and free the current one\n \n-      Move_Env (Saved_Env, Current_Perm_Env);\n+         Move_Env (Saved_Env, Current_Perm_Env);\n \n-      Inside_Elaboration := Save_In_Elab;\n+         Inside_Elaboration := Save_In_Elab;\n+      end if;\n    end Check_Package_Body;\n \n    ------------------------\n@@ -2406,25 +2410,37 @@ package body Sem_SPARK is\n    procedure Check_Package_Spec (Pack : Node_Id) is\n       Save_In_Elab : constant Boolean := Inside_Elaboration;\n       Spec         : constant Node_Id := Specification (Pack);\n+      Id           : constant Entity_Id := Defining_Entity (Pack);\n+      Prag         : constant Node_Id := SPARK_Pragma (Id);\n+      Aux_Prag     : constant Node_Id := SPARK_Aux_Pragma (Id);\n       Saved_Env    : Perm_Env;\n \n    begin\n-      Inside_Elaboration := True;\n+      if Present (Prag)\n+        and then Get_SPARK_Mode_From_Annotation (Prag) = Opt.On\n+      then\n+         Inside_Elaboration := True;\n \n-      --  Save environment and put a new one in place\n+         --  Save environment and put a new one in place\n \n-      Move_Env (Current_Perm_Env, Saved_Env);\n+         Move_Env (Current_Perm_Env, Saved_Env);\n \n-      --  Check declarations in the special mode for elaboration\n+         --  Check declarations in the special mode for elaboration\n \n-      Check_List (Visible_Declarations (Spec));\n-      Check_List (Private_Declarations (Spec));\n+         Check_List (Visible_Declarations (Spec));\n \n-      --  Restore the saved environment and free the current one\n+         if Present (Aux_Prag)\n+           and then Get_SPARK_Mode_From_Annotation (Aux_Prag) = Opt.On\n+         then\n+            Check_List (Private_Declarations (Spec));\n+         end if;\n \n-      Move_Env (Saved_Env, Current_Perm_Env);\n+         --  Restore the saved environment and free the current one\n \n-      Inside_Elaboration := Save_In_Elab;\n+         Move_Env (Saved_Env, Current_Perm_Env);\n+\n+         Inside_Elaboration := Save_In_Elab;\n+      end if;\n    end Check_Package_Spec;\n \n    -------------------------------"}]}