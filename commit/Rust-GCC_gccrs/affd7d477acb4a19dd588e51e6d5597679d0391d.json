{"sha": "affd7d477acb4a19dd588e51e6d5597679d0391d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmZDdkNDc3YWNiNGExOWRkNTg4ZTUxZTZkNTU5NzY3OWQwMzkxZA==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2019-02-14T13:44:19Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-02-14T13:44:19Z"}, "message": "Fix PR72715 \"ICE in gfc_trans_omp_do, at fortran/trans-openmp.c:3164\"\n\nThe OpenACC 'resolve_oacc_nested_loops' function duplicates most code of the\nOpenMP 'resolve_omp_do', but didn't include the PR60127 \"ICE with OpenMP and DO\nCONCURRENT\" (trunk r210331) changes.  (Probably the two functions should be\nunified?)\n\nThe Fortran DO CONCURRENT construct is a way to tell the compiler that loop\niterations don't have any interdependencies -- which is information that would\nvery well be suitable for OpenACC/OpenMP loops.  There are some \"details\"\nhowever, see the discussion/references in PR60127, so for the time being, make\nthis a compile-time error instead of an ICE.\n\n\tgcc/fortran/\n\t* openmp.c (resolve_oacc_nested_loops): Error on do concurrent\n\tloops.\n\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/loop-3-2.f95: Error on do concurrent loops.\n\t* gfortran.dg/goacc/loop-3.f95: Likewise.\n\t* gfortran.dg/goacc/pr72715.f90: New test.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>\n\nFrom-SVN: r268875", "tree": {"sha": "9a9ef5fd502c9bb9ce68499efcf2d9ea02c48f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a9ef5fd502c9bb9ce68499efcf2d9ea02c48f1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/affd7d477acb4a19dd588e51e6d5597679d0391d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affd7d477acb4a19dd588e51e6d5597679d0391d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/affd7d477acb4a19dd588e51e6d5597679d0391d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affd7d477acb4a19dd588e51e6d5597679d0391d/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "696c5b27c524cf65c6b06e93e62f047faad40a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/696c5b27c524cf65c6b06e93e62f047faad40a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/696c5b27c524cf65c6b06e93e62f047faad40a78"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "71cef4f188414687c084421f68c9b24a7f397865", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=affd7d477acb4a19dd588e51e6d5597679d0391d", "patch": "@@ -1,3 +1,9 @@\n+2019-02-14  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR fortran/72715\n+\t* openmp.c (resolve_oacc_nested_loops): Error on do concurrent\n+\tloops.\n+\n 2019-02-13  Martin Liska  <mliska@suse.cz>\n \n \tPR fortran/88649"}, {"sha": "8651afaee4f90963c711e522d73267bd997de4a2", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=affd7d477acb4a19dd588e51e6d5597679d0391d", "patch": "@@ -5760,7 +5760,13 @@ resolve_oacc_nested_loops (gfc_code *code, gfc_code* do_code, int collapse,\n \t\t     \"at %L\", &do_code->loc);\n \t  break;\n \t}\n-      gcc_assert (do_code->op == EXEC_DO || do_code->op == EXEC_DO_CONCURRENT);\n+      if (do_code->op == EXEC_DO_CONCURRENT)\n+\t{\n+\t  gfc_error (\"!$ACC LOOP cannot be a DO CONCURRENT loop at %L\",\n+\t\t     &do_code->loc);\n+\t  break;\n+\t}\n+      gcc_assert (do_code->op == EXEC_DO);\n       if (do_code->ext.iterator->var->ts.type != BT_INTEGER)\n \tgfc_error (\"!$ACC LOOP iteration variable must be of type integer at %L\",\n \t\t   &do_code->loc);"}, {"sha": "6a649831c94f7cac516668da7430e7fa4eea7263", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=affd7d477acb4a19dd588e51e6d5597679d0391d", "patch": "@@ -1,3 +1,10 @@\n+2019-02-14  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR fortran/72715\n+\t* gfortran.dg/goacc/loop-3-2.f95: Error on do concurrent loops.\n+\t* gfortran.dg/goacc/loop-3.f95: Likewise.\n+\t* gfortran.dg/goacc/pr72715.f90: New test.\n+\n 2019-02-14  Martin Liska  <mliska@suse.cz>\n \n \tPR rtl-optimization/89242"}, {"sha": "c091084a4f5e6a70650b563486df6bf1fd1f4338", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-3-2.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-3-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-3-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-3-2.f95?ref=affd7d477acb4a19dd588e51e6d5597679d0391d", "patch": "@@ -27,9 +27,9 @@ subroutine test1\n   !$acc end parallel\n   !$acc end loop ! { dg-error \"Unexpected\" }\n \n-  ! OpenACC supports Fortran 2008 do concurrent statement\n+  ! OpenACC does not support Fortran 2008 do concurrent statement\n   !$acc loop\n-  do concurrent (i = 1:5)\n+  do concurrent (i = 1:5) ! { dg-error \"ACC LOOP cannot be a DO CONCURRENT loop\" }\n   end do\n \n   !$acc loop"}, {"sha": "ed3e8d50a769122832210a669d05f81df2fd03e7", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-3.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-3.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-3.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-3.f95?ref=affd7d477acb4a19dd588e51e6d5597679d0391d", "patch": "@@ -24,9 +24,9 @@ subroutine test1\n   !$acc end parallel\n   !$acc end loop ! { dg-error \"Unexpected\" }\n \n-  ! OpenACC supports Fortran 2008 do concurrent statement\n+  ! OpenACC does not support Fortran 2008 do concurrent statement\n   !$acc loop\n-  do concurrent (i = 1:5)\n+  do concurrent (i = 1:5) ! { dg-error \"ACC LOOP cannot be a DO CONCURRENT loop\" }\n   end do\n \n   !$acc loop"}, {"sha": "68580f9f7de364a5914657d99e2a5de2c1a1bdbc", "filename": "gcc/testsuite/gfortran.dg/goacc/pr72715.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr72715.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affd7d477acb4a19dd588e51e6d5597679d0391d/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr72715.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr72715.f90?ref=affd7d477acb4a19dd588e51e6d5597679d0391d", "patch": "@@ -0,0 +1,6 @@\n+program p\n+  integer :: i\n+  !$acc loop\n+  do concurrent (i=1:3) ! { dg-error \"ACC LOOP cannot be a DO CONCURRENT loop\" }\n+  end do\n+end program p"}]}