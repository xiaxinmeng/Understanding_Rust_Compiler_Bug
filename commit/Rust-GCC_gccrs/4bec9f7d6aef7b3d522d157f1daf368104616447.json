{"sha": "4bec9f7d6aef7b3d522d157f1daf368104616447", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlYzlmN2Q2YWVmN2IzZDUyMmQxNTdmMWRhZjM2ODEwNDYxNjQ0Nw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2000-11-29T01:45:13Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-11-29T01:45:13Z"}, "message": "Fix pic_l;oad_addr to work in Thumb mode.\n\nFrom-SVN: r37838", "tree": {"sha": "484579cc9d7819a348fe69974d7fce833d214bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/484579cc9d7819a348fe69974d7fce833d214bc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bec9f7d6aef7b3d522d157f1daf368104616447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bec9f7d6aef7b3d522d157f1daf368104616447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bec9f7d6aef7b3d522d157f1daf368104616447", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bec9f7d6aef7b3d522d157f1daf368104616447/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abfadcb132909fa5bf7e7c3f385c20218d8017fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abfadcb132909fa5bf7e7c3f385c20218d8017fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abfadcb132909fa5bf7e7c3f385c20218d8017fc"}], "stats": {"total": 55, "additions": 40, "deletions": 15}, "files": [{"sha": "1df50a7f68216045e42f9568e2aa2cf292a587f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bec9f7d6aef7b3d522d157f1daf368104616447/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bec9f7d6aef7b3d522d157f1daf368104616447/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bec9f7d6aef7b3d522d157f1daf368104616447", "patch": "@@ -1,3 +1,13 @@\n+2000-11-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.md (pic_load_addr): Split into\n+\tpic_load_addr_arm and pic_load_addr_thumb.\n+\n+\t* config/arm/arm.c (legitimize_pic_address): Generate either\n+\tARM or Thumb versions of pic_load_addr.\n+\t(arm_finalize_pic): Generate either ARM or Thumb versions of\n+\tpic_load_addr.\n+\n 2000-11-28  Richard Henderson  <rth@redhat.com>\n \n \t* calls.c (expand_call): Defer const/pure NO_DEFER_POP until"}, {"sha": "678a4819f4c185383f6da299862d4b94d8ed9c56", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bec9f7d6aef7b3d522d157f1daf368104616447/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bec9f7d6aef7b3d522d157f1daf368104616447/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4bec9f7d6aef7b3d522d157f1daf368104616447", "patch": "@@ -1920,7 +1920,10 @@ legitimize_pic_address (orig, mode, reg)\n       else\n \taddress = reg;\n \n-      emit_insn (gen_pic_load_addr (address, orig));\n+      if (TARGET_ARM)\n+\temit_insn (gen_pic_load_addr_arm (address, orig));\n+      else\n+\temit_insn (gen_pic_load_addr_thumb (address, orig));\n \n       pic_ref = gen_rtx_MEM (Pmode,\n \t\t\t     gen_rtx_PLUS (Pmode, pic_offset_table_rtx,\n@@ -1993,8 +1996,12 @@ legitimize_pic_address (orig, mode, reg)\n       if (NEED_GOT_RELOC)\n \t{\n \t  rtx pic_ref, address = gen_reg_rtx (Pmode);\n+\n+\t  if (TARGET_ARM)\n+\t    emit_insn (gen_pic_load_addr_arm (address, orig));\n+\t  else\n+\t    emit_insn (gen_pic_load_addr_thumb (address, orig));\n \t  \n-\t  emit_insn (gen_pic_load_addr (address, orig));\n \t  pic_ref = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, address);\n \t  \n \t  emit_move_insn (address, pic_ref);\n@@ -2044,11 +2051,16 @@ arm_finalize_pic ()\n \n   pic_rtx = gen_rtx_CONST (Pmode, gen_rtx_MINUS (Pmode, pic_tmp2, pic_tmp));\n   \n-  emit_insn (gen_pic_load_addr (pic_offset_table_rtx, pic_rtx));\n   if (TARGET_ARM)\n-    emit_insn (gen_pic_add_dot_plus_eight (pic_offset_table_rtx, l1));\n+    {\n+      emit_insn (gen_pic_load_addr_arm (pic_offset_table_rtx, pic_rtx));\n+      emit_insn (gen_pic_add_dot_plus_eight (pic_offset_table_rtx, l1));\n+    }\n   else\n-    emit_insn (gen_pic_add_dot_plus_four (pic_offset_table_rtx, l1));\n+    {\n+      emit_insn (gen_pic_load_addr_thumb (pic_offset_table_rtx, pic_rtx));\n+      emit_insn (gen_pic_add_dot_plus_four (pic_offset_table_rtx, l1));\n+    }\n \n   seq = gen_sequence ();\n   end_sequence ();"}, {"sha": "22991b3a1c5793e0553e2877fbdf86024401303c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bec9f7d6aef7b3d522d157f1daf368104616447/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bec9f7d6aef7b3d522d157f1daf368104616447/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=4bec9f7d6aef7b3d522d157f1daf368104616447", "patch": "@@ -4055,20 +4055,23 @@\n ;; the insn alone, and to force the minipool generation pass to then move\n ;; the GOT symbol to memory.\n \n-(define_insn \"pic_load_addr\"\n+(define_insn \"pic_load_addr_arm\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(unspec:SI [(match_operand:SI 1 \"\" \"mX\")] 3))]\n-  \"TARGET_EITHER && flag_pic\"\n+  \"TARGET_ARM && flag_pic\"\n   \"ldr%?\\\\t%0, %1\"\n   [(set_attr \"type\" \"load\")\n-   (set (attr \"pool_range\")\n-\t(if_then_else (eq_attr \"is_thumb\" \"yes\")\n-\t\t      (const_int 1024)\n-\t\t      (const_int 4096)))\n-   (set (attr \"neg_pool_range\")\n-\t(if_then_else (eq_attr \"is_thumb\" \"yes\")\n-\t\t      (const_int 0)\n-\t\t      (const_int 4084)))]\n+   (set (attr \"pool_range\")     (const_int 4096))\n+   (set (attr \"neg_pool_range\") (const_int 4084))]\n+)\n+\n+(define_insn \"pic_load_addr_thumb\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=l\")\n+\t(unspec:SI [(match_operand:SI 1 \"\" \"mX\")] 3))]\n+  \"TARGET_THUMB && flag_pic\"\n+  \"ldr\\\\t%0, %1\"\n+  [(set_attr \"type\" \"load\")\n+   (set (attr \"pool_range\") (const_int 1024))]\n )\n \n ;; This variant is used for AOF assembly, since it needs to mention the"}]}