{"sha": "727cde644d6175dcc5e22d4e1214bf3bac621efc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI3Y2RlNjQ0ZDYxNzVkY2M1ZTIyZDRlMTIxNGJmM2JhYzYyMWVmYw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-07T20:04:43Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-07T20:04:43Z"}, "message": "re PR fortran/68151 (ICE on using select case with function of wrong type)\n\n2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/68151\n\t* match.c (match_case_selector):  Check for invalid type.\n\n2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/68151\n\t* gfortran.dg/pr68151.f90: New test.\n\nFrom-SVN: r229938", "tree": {"sha": "d3d0d5880537429e6afae3fba5cc066553504f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3d0d5880537429e6afae3fba5cc066553504f63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/727cde644d6175dcc5e22d4e1214bf3bac621efc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727cde644d6175dcc5e22d4e1214bf3bac621efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727cde644d6175dcc5e22d4e1214bf3bac621efc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727cde644d6175dcc5e22d4e1214bf3bac621efc/comments", "author": null, "committer": null, "parents": [{"sha": "bc05d49d1064b7fb143c9786ca1fe6a1557163a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc05d49d1064b7fb143c9786ca1fe6a1557163a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc05d49d1064b7fb143c9786ca1fe6a1557163a2"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "15583d9848b516d32ec5b77a5feadad8d7d750a5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=727cde644d6175dcc5e22d4e1214bf3bac621efc", "patch": "@@ -1,3 +1,8 @@\n+2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/68151\n+\t* match.c (match_case_selector):  Check for invalid type.\n+\n 2015-11-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* cpp.c (cb_cpp_error): Convert parameter from location_t to"}, {"sha": "2844262e0f2a5d4be62eaec324efe524e6465aec", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=727cde644d6175dcc5e22d4e1214bf3bac621efc", "patch": "@@ -5018,7 +5018,9 @@ gfc_free_case_list (gfc_case *p)\n }\n \n \n-/* Match a single case selector.  */\n+/* Match a single case selector.  Combining the requirements of F08:C830\n+   and F08:C832 (R838) means that the case-value must have either CHARACTER,\n+   INTEGER, or LOGICAL type.  */\n \n static match\n match_case_selector (gfc_case **cp)\n@@ -5036,6 +5038,14 @@ match_case_selector (gfc_case **cp)\n \tgoto need_expr;\n       if (m == MATCH_ERROR)\n \tgoto cleanup;\n+\n+      if (c->high->ts.type != BT_LOGICAL && c->high->ts.type != BT_INTEGER\n+\t  && c->high->ts.type != BT_CHARACTER)\n+\t{\n+\t  gfc_error (\"Expression in CASE selector at %L cannot be %s\",\n+\t\t     &c->high->where, gfc_typename (&c->high->ts));\n+\t  goto cleanup;\n+\t}\n     }\n   else\n     {\n@@ -5045,6 +5055,14 @@ match_case_selector (gfc_case **cp)\n       if (m == MATCH_NO)\n \tgoto need_expr;\n \n+      if (c->low->ts.type != BT_LOGICAL && c->low->ts.type != BT_INTEGER\n+\t  && c->low->ts.type != BT_CHARACTER)\n+\t{\n+\t  gfc_error (\"Expression in CASE selector at %L cannot be %s\",\n+\t\t     &c->low->where, gfc_typename (&c->low->ts));\n+\t  goto cleanup;\n+\t}\n+\n       /* If we're not looking at a ':' now, make a range out of a single\n \t target.  Else get the upper bound for the case range.  */\n       if (gfc_match_char (':') != MATCH_YES)"}, {"sha": "c9df4b08166aac9e399afc587dde97c0fb34748d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=727cde644d6175dcc5e22d4e1214bf3bac621efc", "patch": "@@ -1,3 +1,8 @@\n+2015-11-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/68151\n+\t* gfortran.dg/pr68151.f90: New test.\n+\n 2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/68235"}, {"sha": "830d9f4f437d1840cb57995f6a0cb08d65cb4315", "filename": "gcc/testsuite/gfortran.dg/pr68151.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68151.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727cde644d6175dcc5e22d4e1214bf3bac621efc/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68151.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68151.f90?ref=727cde644d6175dcc5e22d4e1214bf3bac621efc", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! PR fortran/68151\n+! Original code contribute by Gerhard Steinmetz\n+! <gerhard dot steinmetz dot fortran at t-online dot de>\n+!\n+program p\n+   integer :: k = 1\n+   select case (k)\n+   case (:huge(1._4))   ! { dg-error \"Expression in CASE\" }\n+   case (:huge(2._8))   ! { dg-error \"Expression in CASE\" }\n+   case ((1.0,2.0))     ! { dg-error \"Expression in CASE\" }\n+   end select\n+end"}]}