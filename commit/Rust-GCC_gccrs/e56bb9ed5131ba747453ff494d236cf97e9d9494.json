{"sha": "e56bb9ed5131ba747453ff494d236cf97e9d9494", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2YmI5ZWQ1MTMxYmE3NDc0NTNmZjQ5NGQyMzZjZjk3ZTlkOTQ5NA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-03-14T16:25:20Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-03-14T16:25:20Z"}, "message": "Add exception attribute for Windows\n\nFrom-SVN: r11528", "tree": {"sha": "c6d1c392c35dc36df590092f6ca81e1e812a5a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6d1c392c35dc36df590092f6ca81e1e812a5a50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56bb9ed5131ba747453ff494d236cf97e9d9494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56bb9ed5131ba747453ff494d236cf97e9d9494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56bb9ed5131ba747453ff494d236cf97e9d9494", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56bb9ed5131ba747453ff494d236cf97e9d9494/comments", "author": null, "committer": null, "parents": [{"sha": "80363f0d97d98a7e02a425ddfbcf1a78b8120d0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80363f0d97d98a7e02a425ddfbcf1a78b8120d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80363f0d97d98a7e02a425ddfbcf1a78b8120d0f"}], "stats": {"total": 154, "additions": 100, "deletions": 54}, "files": [{"sha": "dcdf56852c829b0fb4dce7a5025a95ceaffc26a6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56bb9ed5131ba747453ff494d236cf97e9d9494/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56bb9ed5131ba747453ff494d236cf97e9d9494/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e56bb9ed5131ba747453ff494d236cf97e9d9494", "patch": "@@ -4368,6 +4368,29 @@ rs6000_valid_type_attribute_p (type, attributes, identifier, args)\n \t pointer.  */\n       if (is_attribute_p (\"dllexport\", identifier))\n \treturn (args == NULL_TREE);\n+\n+      /* Exception attribute allows the user to specify 1-2 strings or identifiers\n+\t that will fill in the 3rd and 4th fields of the structured exception\n+\t table.  */\n+      if (is_attribute_p (\"exception\", identifier))\n+\t{\n+\t  int i;\n+\n+\t  if (args == NULL_TREE)\n+\t    return 0;\n+\n+\t  for (i = 0; i < 2 && args != NULL_TREE; i++)\n+\t    {\n+\t      tree this_arg = TREE_VALUE (args);\n+\t      args = TREE_PURPOSE (args);\n+\n+\t      if (TREE_CODE (this_arg) != STRING_CST\n+\t\t  && TREE_CODE (this_arg) != IDENTIFIER_NODE)\n+\t\treturn 0;\n+\t    }\n+\n+\t  return (args == NULL_TREE);\n+\t}\n     }\n \n   return 0;"}, {"sha": "e97a7033d5b93e179de843861069fbee2c64eaab", "filename": "gcc/config/rs6000/win-nt.h", "status": "modified", "additions": 77, "deletions": 54, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56bb9ed5131ba747453ff494d236cf97e9d9494/gcc%2Fconfig%2Frs6000%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56bb9ed5131ba747453ff494d236cf97e9d9494/gcc%2Fconfig%2Frs6000%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fwin-nt.h?ref=e56bb9ed5131ba747453ff494d236cf97e9d9494", "patch": "@@ -202,61 +202,84 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef ASM_FILE_END\n \n-#undef  ASM_OUTPUT_FUNCTION_PREFIX\n-#define ASM_OUTPUT_FUNCTION_PREFIX(FILE,NAME)                   \\\n-{                                                               \\\n-  fprintf (FILE, \"\\n#\\tFunction: '..\");                         \\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \"'\\n\");                                        \\\n-  fprintf (FILE, \"#\\tText in section: <%s>\\n\\n\",\"default\");     \\\n-  fprintf (FILE, \"#\\tSetup MS Structured-Exception-Handling\\n\"); \\\n-  fprintf (FILE, \"\\t.pdata\\n\");\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.align 2\\n\");\t\t\t\t\\\n-  fprintf (FILE, \"\\t.ualong ..\");                               \\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \",\");                                          \\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \".e,0,0,\");                                    \\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \".b\\n\\n\");                                     \\\n-  fprintf (FILE, \"#\\tSwitch to the relocation section\\n\");      \\\n-  fprintf (FILE, \"\\t.reldata\\n\");                               \\\n-}\n-\n-\n #undef\tASM_DECLARE_FUNCTION_NAME\n-#define ASM_DECLARE_FUNCTION_NAME(FILE,NAME,DECL)\t\t\\\n-{                                                               \\\n-  if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.globl ..\");\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\\\n-      fprintf (FILE, \"\\n\");\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \":\\n\");\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.ualong ..\");\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \",.toc\\n\");\t\t\t\t        \\\n-\t\t\t\t\t\t\t\t\\\n-  if (lookup_attribute (\"dllexport\",\t\t\t\t\\\n-\t\t\tTYPE_ATTRIBUTES (TREE_TYPE (DECL))))\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.globl __imp_\");\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\\\n-      fprintf (FILE, \"\\n__imp_\");\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\\\n-      fprintf (FILE, \":\\n\\t.ulong \");\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\\\n-      fprintf (FILE, \"\\n\");\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.section .text\\n\\t.align 2\\n..\");\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \":\\n\");\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.function\\t..\");                            \\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\\\n-  fprintf (FILE, \"\\n\");\t\t\t\t\t        \\\n+#define ASM_DECLARE_FUNCTION_NAME(FILE,NAME,DECL)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  tree exception_args;\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (TREE_PUBLIC (DECL))\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.globl ..\");\t\t\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fprintf (FILE, \":\\n\");\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.ualong ..\");\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fprintf (FILE, \",.toc\\n\");\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\n#\\tFunction: '..\");\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fputs (\"'\\n\", FILE);\t\t\t\t\t\t\t\\\n+  fputs (\"#\\tText in section: <default>\\n\\n\", FILE);\t\t\t\\\n+  fputs (\"#\\tSetup MS Structured-Exception-Handling\\n\", FILE);\t\t\\\n+  fputs (\"\\t.pdata\\n\", FILE);\t\t\t\t\t\t\\\n+  fputs (\"\\t.align 2\\n\", FILE);\t\t\t\t\t\t\\\n+  fputs (\"\\t.ualong ..\", FILE);\t\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fputs (\",\", FILE);\t\t\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fputs (\".e,\", FILE);\t\t\t\t\t\t\t\\\n+  exception_args = lookup_attribute (\"exception\",\t\t\t\\\n+\t\t\t\t     TYPE_ATTRIBUTES (TREE_TYPE (DECL))); \\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (exception_args)\t\t\t\t\t\t\t\\\n+    exception_args = TREE_VALUE (exception_args);\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  for (i = 0; i < 2; i++)\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (!exception_args)\t\t\t\t\t\t\\\n+\tfputs (\"0,\", FILE);\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  tree field = TREE_VALUE (exception_args);\t\t\t\\\n+\t  exception_args = TREE_PURPOSE (exception_args);\t\t\\\n+\t  if (TREE_CODE (field) == STRING_CST)\t\t\t\t\\\n+\t    fprintf (FILE, \"%.*s,\", TREE_STRING_LENGTH (field),\t\t\\\n+\t\t     TREE_STRING_POINTER (field));\t\t\t\\\n+\t  else if (TREE_CODE (field) == IDENTIFIER_NODE)\t\t\\\n+\t    fprintf (FILE, \"%.*s,\", IDENTIFIER_LENGTH (field),\t\t\\\n+\t\t     IDENTIFIER_POINTER (field));\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\t\\\n+\t    abort ();\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fprintf (FILE, \".b\\n\\n\");\t\t\t\t\t\t\\\n+  fprintf (FILE, \"#\\tSwitch to the relocation section\\n\");\t\t\\\n+  fprintf (FILE, \"\\t.reldata\\n\");\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (lookup_attribute (\"dllexport\",\t\t\t\t\t\\\n+\t\t\tTYPE_ATTRIBUTES (TREE_TYPE (DECL))))\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.globl __imp_\");\t\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\n__imp_\");\t\t\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\t\t\\\n+      fprintf (FILE, \":\\n\\t.ulong \");\t\t\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.section .text\\n\\t.align 2\\n..\");\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fprintf (FILE, \":\\n\");\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.function\\t..\");\t\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\n\");\t\t\t\t\t\t\t\\\n }\n \n /* This is how to output an assembler line defining a `double' constant.  */"}]}