{"sha": "c1b1bbbc64524b508c0150c66163b27be508dbcf", "node_id": "C_kwDOANBUbNoAKGMxYjFiYmJjNjQ1MjRiNTA4YzAxNTBjNjYxNjNiMjdiZTUwOGRiY2Y", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-01-12T16:40:30Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:20Z"}, "message": "gccrs: Move TypePredicateItem impl out of the header\n\nThis moves the implementation code out of the header and into its\nrespective cc file.\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-tyty-bounds.cc (TypeBoundPredicateItem::error): refactor\n\t(TypeBoundPredicateItem::is_error): likewise\n\t(TypeBoundPredicateItem::get_parent): likewise\n\t* typecheck/rust-tyty.h: Move the implementation for the above", "tree": {"sha": "fe051747b3d2b7cf23a20b0b73f2cb0307853a21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe051747b3d2b7cf23a20b0b73f2cb0307853a21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1b1bbbc64524b508c0150c66163b27be508dbcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b1bbbc64524b508c0150c66163b27be508dbcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b1bbbc64524b508c0150c66163b27be508dbcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b1bbbc64524b508c0150c66163b27be508dbcf/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d1d08cdbcf40897282d9ed20ccf70bf2c93427c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1d08cdbcf40897282d9ed20ccf70bf2c93427c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1d08cdbcf40897282d9ed20ccf70bf2c93427c"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "e7eb9a760f5df443d5b83bdc834da7bd25ce8e55", "filename": "gcc/rust/typecheck/rust-tyty-bounds.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b1bbbc64524b508c0150c66163b27be508dbcf/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b1bbbc64524b508c0150c66163b27be508dbcf/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc?ref=c1b1bbbc64524b508c0150c66163b27be508dbcf", "patch": "@@ -364,6 +364,30 @@ TypeBoundPredicate::lookup_associated_item (const std::string &search) const\n   return TypeBoundPredicateItem (this, trait_item_ref);\n }\n \n+TypeBoundPredicateItem::TypeBoundPredicateItem (\n+  const TypeBoundPredicate *parent,\n+  const Resolver::TraitItemReference *trait_item_ref)\n+  : parent (parent), trait_item_ref (trait_item_ref)\n+{}\n+\n+TypeBoundPredicateItem\n+TypeBoundPredicateItem::error ()\n+{\n+  return TypeBoundPredicateItem (nullptr, nullptr);\n+}\n+\n+bool\n+TypeBoundPredicateItem::is_error () const\n+{\n+  return parent == nullptr || trait_item_ref == nullptr;\n+}\n+\n+const TypeBoundPredicate *\n+TypeBoundPredicateItem::get_parent () const\n+{\n+  return parent;\n+}\n+\n TypeBoundPredicateItem\n TypeBoundPredicate::lookup_associated_item (\n   const Resolver::TraitItemReference *ref) const"}, {"sha": "7d32ed594949790f5b34b2a0ef9515b59ec16bbf", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b1bbbc64524b508c0150c66163b27be508dbcf/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b1bbbc64524b508c0150c66163b27be508dbcf/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=c1b1bbbc64524b508c0150c66163b27be508dbcf", "patch": "@@ -82,27 +82,19 @@ class TypeBoundPredicateItem\n {\n public:\n   TypeBoundPredicateItem (const TypeBoundPredicate *parent,\n-\t\t\t  const Resolver::TraitItemReference *trait_item_ref)\n-    : parent (parent), trait_item_ref (trait_item_ref)\n-  {}\n+\t\t\t  const Resolver::TraitItemReference *trait_item_ref);\n \n-  static TypeBoundPredicateItem error ()\n-  {\n-    return TypeBoundPredicateItem (nullptr, nullptr);\n-  }\n+  static TypeBoundPredicateItem error ();\n \n-  bool is_error () const\n-  {\n-    return parent == nullptr || trait_item_ref == nullptr;\n-  }\n+  bool is_error () const;\n \n   BaseType *get_tyty_for_receiver (const TyTy::BaseType *receiver);\n \n   const Resolver::TraitItemReference *get_raw_item () const;\n \n   bool needs_implementation () const;\n \n-  const TypeBoundPredicate *get_parent () const { return parent; }\n+  const TypeBoundPredicate *get_parent () const;\n \n   Location get_locus () const;\n "}]}