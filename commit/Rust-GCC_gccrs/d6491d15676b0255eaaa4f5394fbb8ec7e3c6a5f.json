{"sha": "d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0OTFkMTU2NzZiMDI1NWVhYWE0ZjUzOTRmYmI4ZWM3ZTNjNmE1Zg==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2020-01-09T15:35:14Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@gcc.gnu.org", "date": "2020-01-09T15:35:14Z"}, "message": "[amdgcn] Add support for sub-word sync_compare_and_swap operations\n\n2020-01-09  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tlibgcc/\n\t* config/gcn/atomic.c: New.\n\t* config/gcn/t-amdgcn (LIB2ADD): Add atomic.c.\n\nFrom-SVN: r280055", "tree": {"sha": "d132711071512cdee9c5378d5f8ca89a408f4e38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d132711071512cdee9c5378d5f8ca89a408f4e38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bad5e58a9fdbf6c090ff2adcc4022e1788173ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad5e58a9fdbf6c090ff2adcc4022e1788173ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bad5e58a9fdbf6c090ff2adcc4022e1788173ccb"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "d72249d6aeba2c155373352be88d1430538e4ac8", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "patch": "@@ -1,3 +1,8 @@\n+2020-01-09  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* config/gcn/atomic.c: New.\n+\t* config/gcn/t-amdgcn (LIB2ADD): Add atomic.c.\n+\n 2020-01-08  Georg-Johann Lay  <avr@gjlay.de>\n \n \tImplement 64-bit double functions."}, {"sha": "214c9a5a413d16e9d0000be6df90d8d69e993281", "filename": "libgcc/config/gcn/atomic.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/libgcc%2Fconfig%2Fgcn%2Fatomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/libgcc%2Fconfig%2Fgcn%2Fatomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgcn%2Fatomic.c?ref=d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "patch": "@@ -0,0 +1,60 @@\n+/* AMD GCN atomic operations\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+   Contributed by Mentor Graphics.\n+\n+   This file is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by the\n+   Free Software Foundation; either version 3, or (at your option) any\n+   later version.\n+\n+   This file is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdbool.h>\n+#include <stdint.h>\n+\n+#define __SYNC_SUBWORD_COMPARE_AND_SWAP(TYPE, SIZE)\t\t\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n+TYPE\t\t\t\t\t\t\t\t\t     \\\n+__sync_val_compare_and_swap_##SIZE (TYPE *ptr, TYPE oldval, TYPE newval)     \\\n+{\t\t\t\t\t\t\t\t\t     \\\n+  unsigned int *wordptr = (unsigned int *)((uintptr_t) ptr & ~3UL);\t     \\\n+  int shift = ((uintptr_t) ptr & 3UL) * 8;\t\t\t\t     \\\n+  unsigned int valmask = (1 << (SIZE * 8)) - 1;\t\t\t\t     \\\n+  unsigned int wordmask = ~(valmask << shift);\t\t\t\t     \\\n+  unsigned int oldword = *wordptr;\t\t\t\t\t     \\\n+  for (;;)\t\t\t\t\t\t\t\t     \\\n+    {\t\t\t\t\t\t\t\t\t     \\\n+      TYPE prevval = (oldword >> shift) & valmask;\t\t\t     \\\n+      if (__builtin_expect (prevval != oldval, 0))\t\t\t     \\\n+\treturn prevval;\t\t\t\t\t\t\t     \\\n+      unsigned int newword = oldword & wordmask;\t\t\t     \\\n+      newword |= ((unsigned int) newval) << shift;\t\t\t     \\\n+      unsigned int prevword\t\t\t\t\t\t     \\\n+\t  = __sync_val_compare_and_swap_4 (wordptr, oldword, newword);\t     \\\n+      if (__builtin_expect (prevword == oldword, 1))\t\t\t     \\\n+\treturn oldval;\t\t\t\t\t\t\t     \\\n+      oldword = prevword;\t\t\t\t\t\t     \\\n+    }\t\t\t\t\t\t\t\t\t     \\\n+}\t\t\t\t\t\t\t\t\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n+bool\t\t\t\t\t\t\t\t\t     \\\n+__sync_bool_compare_and_swap_##SIZE (TYPE *ptr, TYPE oldval, TYPE newval)    \\\n+{\t\t\t\t\t\t\t\t\t     \\\n+  return __sync_val_compare_and_swap_##SIZE (ptr, oldval, newval) == oldval; \\\n+}\n+\n+__SYNC_SUBWORD_COMPARE_AND_SWAP (unsigned char, 1)\n+__SYNC_SUBWORD_COMPARE_AND_SWAP (unsigned short, 2)\n+"}, {"sha": "fe7b5fad84d46de18d0ae6e188954692e15741b7", "filename": "libgcc/config/gcn/t-amdgcn", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/libgcc%2Fconfig%2Fgcn%2Ft-amdgcn", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f/libgcc%2Fconfig%2Fgcn%2Ft-amdgcn", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgcn%2Ft-amdgcn?ref=d6491d15676b0255eaaa4f5394fbb8ec7e3c6a5f", "patch": "@@ -1,4 +1,5 @@\n-LIB2ADD += $(srcdir)/config/gcn/lib2-divmod.c \\\n+LIB2ADD += $(srcdir)/config/gcn/atomic.c \\\n+\t   $(srcdir)/config/gcn/lib2-divmod.c \\\n \t   $(srcdir)/config/gcn/lib2-divmod-hi.c \\\n \t   $(srcdir)/config/gcn/unwind-gcn.c\n "}]}