{"sha": "53f3815cc08c390d2aee47a252203d416304298c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmMzgxNWNjMDhjMzkwZDJhZWU0N2EyNTIyMDNkNDE2MzA0Mjk4Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-19T09:06:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-19T09:06:54Z"}, "message": "re PR tree-optimization/35972 (load-PRE missed opportunities without SFTs)\n\n2008-08-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/35972\n\tPR tree-optimization/23094\n\t* tree-ssa-sccvn.h (vn_reference_lookup_pieces): Add maywalk\n\tparameter.\n\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Properly\n\thandle MISALIGNED_INDIRECT_REF.\n\t(get_ref_from_reference_ops): New helper.\n\t(vn_reference_lookup_pieces): Walk the use-def chain using the\n\talias-oracle if requested.\n\t* tree-ssa-pre.c (phi_translate_1): Do reference lookup with\n\twalking the use-def chain.\n\t(compute_avail): But not here.\n\t(create_component_ref_by_pieces_1): Properly handle\n\tMISALIGNED_INDIRECT_REF.\n\t(do_regular_insertion): Handle fully redundant\n\texpressions after PHI-translation also for SSA_NAME values, not\n\tonly constants.  Correctly use edoubleprime for that.\n\n\t* gcc.dg/tree-ssa/ssa-pre-19.c: New testcase.\n\t* gcc.dg/autopar/reduc-1.c: Move constant initialized arrays to\n\tglobal memory.\n\t* gcc.dg/autopar/reduc-1char.c: Likewise.\n\t* gcc.dg/autopar/reduc-1short.c: Likewise.\n\t* gcc.dg/autopar/reduc-2.c: Likewise.\n\t* gcc.dg/autopar/reduc-2char.c: Likewise.\n\t* gcc.dg/autopar/reduc-2short.c: Likewise.\n\t* gcc.dg/autopar/reduc-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ifc-20040816-1.c: Likewise.\n\t* gcc.dg/vect/costmodel/i386/costmodel-vect-reduc-1char.c: Likewise.\n\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-reduc-1char.c: Likewise.\n\t* gcc.dg/vect/fast-math-vect-reduc-5.c: Likewise.\n\t* gcc.dg/vect/fast-math-vect-reduc-7.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-2.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-vect-111.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-11.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-12.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-13.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-14.c: Likewise.\n\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-15.c: Likewise.\n\t* gcc.dg/vect/no-vfa-vect-37.c: Likewise.\n\t* gcc.dg/vect/no-vfa-vect-depend-1.c: Likewise.\n\t* gcc.dg/vect/pr18400.c: Likewise.\n\t* gcc.dg/vect/slp-12b.c: Likewise.\n\t* gcc.dg/vect/slp-14.c: Likewise.\n\t* gcc.dg/vect/slp-7.c: Likewise.\n\t* gcc.dg/vect/slp-15.c: Likewise.\n\t* gcc.dg/vect/slp-16.c: Likewise.\n\t* gcc.dg/vect/slp-17.c: Likewise.\n\t* gcc.dg/vect/slp-24.c: Likewise.\n\t* gcc.dg/vect/slp-28.c: Likewise.\n\t* gcc.dg/vect/slp-3.c: Likewise.\n\t* gcc.dg/vect/slp-34.c: Likewise.\n\t* gcc.dg/vect/slp-6.c: Likewise.\n\t* gcc.dg/vect/slp-8.c: Likewise.\n\t* gcc.dg/vect/vect-107.c: Likewise.\n\t* gcc.dg/vect/vect-108.c: Likewise.\n\t* gcc.dg/vect/vect-11.c: Likewise.\n\t* gcc.dg/vect/vect-112.c: Likewise.\n\t* gcc.dg/vect/vect-115.c: Likewise.\n\t* gcc.dg/vect/vect-11a.c: Likewise.\n\t* gcc.dg/vect/vect-34.c: Likewise.\n\t* gcc.dg/vect/vect-9.c: Likewise.\n\t* gcc.dg/vect/vect-97.c: Likewise.\n\t* gcc.dg/vect/vect-align-1.c: Likewise.\n\t* gcc.dg/vect/vect-float-extend-1.c: Likewise.\n\t* gcc.dg/vect/vect-floatint-conversion-1.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-16.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-17.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-2.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-3.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-4.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-5.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-6.c: Likewise.\n\t* gcc.dg/vect/vect-ifcvt-7.c: Likewise.\n\t* gcc.dg/vect/vect-intfloat-conversion-1.c: Likewise.\n\t* gcc.dg/vect/vect-intfloat-conversion-2.c: Likewise.\n\t* gcc.dg/vect/vect-intfloat-conversion-3.c: Likewise.\n\t* gcc.dg/vect/vect-intfloat-conversion-4a.c: Likewise.\n\t* gcc.dg/vect/vect-intfloat-conversion-4b.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-2.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-5.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-1.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-1char.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-1short.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-2.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-3.c: Likewise.\n\t* gcc.dg/vect/vect-shift-1.c: Likewise.\n\t* gcc.dg/vect/vect-strided-float.c: Likewise.\n\t* gcc.dg/vect/vect-strided-store-u32-i2.c: Likewise.\n\t* gcc.dg/vect/wrapv-vect-reduc-2char.c: Likewise.\n\t* gcc.dg/vect/wrapv-vect-reduc-2short.c: Likewise.\n\t* gcc.dg/tree-ssa/gen-vect-11.c: Likewise.\n\t* gcc.dg/tree-ssa/gen-vect-11a.c: Likewise.\n\t* gcc.dg/tree-ssa/gen-vect-2.c: Likewise.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-76c.c: Likewise.\n\nFrom-SVN: r139226", "tree": {"sha": "b82321d60c8540d93282490a2395f56bf8a0f30e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b82321d60c8540d93282490a2395f56bf8a0f30e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f3815cc08c390d2aee47a252203d416304298c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f3815cc08c390d2aee47a252203d416304298c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f3815cc08c390d2aee47a252203d416304298c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f3815cc08c390d2aee47a252203d416304298c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d59337297f9410a407e2e8e89f38ebbc9aa40df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d59337297f9410a407e2e8e89f38ebbc9aa40df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d59337297f9410a407e2e8e89f38ebbc9aa40df"}], "stats": {"total": 730, "additions": 533, "deletions": 197}, "files": [{"sha": "68e7be66686cd109939394832e190e89456bcdb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -1,3 +1,23 @@\n+2008-08-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35972\n+\tPR tree-optimization/23094\n+\t* tree-ssa-sccvn.h (vn_reference_lookup_pieces): Add maywalk\n+\tparameter.\n+\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Properly\n+\thandle MISALIGNED_INDIRECT_REF.\n+\t(get_ref_from_reference_ops): New helper.\n+\t(vn_reference_lookup_pieces): Walk the use-def chain using the\n+\talias-oracle if requested.\n+\t* tree-ssa-pre.c (phi_translate_1): Do reference lookup with\n+\twalking the use-def chain.\n+\t(compute_avail): But not here.\n+\t(create_component_ref_by_pieces_1): Properly handle\n+\tMISALIGNED_INDIRECT_REF.\n+\t(do_regular_insertion): Handle fully redundant\n+\texpressions after PHI-translation also for SSA_NAME values, not\n+\tonly constants.  Correctly use edoubleprime for that.\n+\n 2008-08-19  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vectorizer.c (supportable_widening_operation): Support"}, {"sha": "e51e9a6012f24b85681443fc0cfa7d15c63ae3f7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -1,3 +1,85 @@\n+2008-08-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35972\n+\tPR tree-optimization/23094\n+\t* gcc.dg/tree-ssa/ssa-pre-19.c: New testcase.\n+\t* gcc.dg/autopar/reduc-1.c: Move constant initialized arrays to\n+\tglobal memory.\n+\t* gcc.dg/autopar/reduc-1char.c: Likewise.\n+\t* gcc.dg/autopar/reduc-1short.c: Likewise.\n+\t* gcc.dg/autopar/reduc-2.c: Likewise.\n+\t* gcc.dg/autopar/reduc-2char.c: Likewise.\n+\t* gcc.dg/autopar/reduc-2short.c: Likewise.\n+\t* gcc.dg/autopar/reduc-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ifc-20040816-1.c: Likewise.\n+\t* gcc.dg/vect/costmodel/i386/costmodel-vect-reduc-1char.c: Likewise.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-reduc-1char.c: Likewise.\n+\t* gcc.dg/vect/fast-math-vect-reduc-5.c: Likewise.\n+\t* gcc.dg/vect/fast-math-vect-reduc-7.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-2.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-vect-111.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-11.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-12.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-13.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-14.c: Likewise.\n+\t* gcc.dg/vect/no-trapping-math-vect-ifcvt-15.c: Likewise.\n+\t* gcc.dg/vect/no-vfa-vect-37.c: Likewise.\n+\t* gcc.dg/vect/no-vfa-vect-depend-1.c: Likewise.\n+\t* gcc.dg/vect/pr18400.c: Likewise.\n+\t* gcc.dg/vect/slp-12b.c: Likewise.\n+\t* gcc.dg/vect/slp-14.c: Likewise.\n+\t* gcc.dg/vect/slp-7.c: Likewise.\n+\t* gcc.dg/vect/slp-15.c: Likewise.\n+\t* gcc.dg/vect/slp-16.c: Likewise.\n+\t* gcc.dg/vect/slp-17.c: Likewise.\n+\t* gcc.dg/vect/slp-24.c: Likewise.\n+\t* gcc.dg/vect/slp-28.c: Likewise.\n+\t* gcc.dg/vect/slp-3.c: Likewise.\n+\t* gcc.dg/vect/slp-34.c: Likewise.\n+\t* gcc.dg/vect/slp-6.c: Likewise.\n+\t* gcc.dg/vect/slp-8.c: Likewise.\n+\t* gcc.dg/vect/vect-107.c: Likewise.\n+\t* gcc.dg/vect/vect-108.c: Likewise.\n+\t* gcc.dg/vect/vect-11.c: Likewise.\n+\t* gcc.dg/vect/vect-112.c: Likewise.\n+\t* gcc.dg/vect/vect-115.c: Likewise.\n+\t* gcc.dg/vect/vect-11a.c: Likewise.\n+\t* gcc.dg/vect/vect-34.c: Likewise.\n+\t* gcc.dg/vect/vect-9.c: Likewise.\n+\t* gcc.dg/vect/vect-97.c: Likewise.\n+\t* gcc.dg/vect/vect-align-1.c: Likewise.\n+\t* gcc.dg/vect/vect-float-extend-1.c: Likewise.\n+\t* gcc.dg/vect/vect-floatint-conversion-1.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-16.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-17.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-2.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-3.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-4.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-5.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-6.c: Likewise.\n+\t* gcc.dg/vect/vect-ifcvt-7.c: Likewise.\n+\t* gcc.dg/vect/vect-intfloat-conversion-1.c: Likewise.\n+\t* gcc.dg/vect/vect-intfloat-conversion-2.c: Likewise.\n+\t* gcc.dg/vect/vect-intfloat-conversion-3.c: Likewise.\n+\t* gcc.dg/vect/vect-intfloat-conversion-4a.c: Likewise.\n+\t* gcc.dg/vect/vect-intfloat-conversion-4b.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-2.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-5.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-1.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-1char.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-1short.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-2.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-3.c: Likewise.\n+\t* gcc.dg/vect/vect-shift-1.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-float.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-store-u32-i2.c: Likewise.\n+\t* gcc.dg/vect/wrapv-vect-reduc-2char.c: Likewise.\n+\t* gcc.dg/vect/wrapv-vect-reduc-2short.c: Likewise.\n+\t* gcc.dg/tree-ssa/gen-vect-11.c: Likewise.\n+\t* gcc.dg/tree-ssa/gen-vect-11a.c: Likewise.\n+\t* gcc.dg/tree-ssa/gen-vect-2.c: Likewise.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-76c.c: Likewise.\n+\n 2008-08-19  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/slp-multitypes-1.c: New testcase."}, {"sha": "ac08d3d2e47f57d78955135b92c0733384b336e4", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -7,13 +7,14 @@\n #define N 16\n #define DIFF 242\n \n+unsigned int ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned int uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n /* Reduction of unsigned-int.  */\n \n void main1 (unsigned int x, unsigned int max_result, unsigned int min_result)\n {\n   int i;\n-  unsigned int ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned int uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned int udiff = 2;\n   unsigned int umax = x;\n   unsigned int umin = x;"}, {"sha": "228e97995a730f9d68379bcbb16375314b6645aa", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-1char.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1char.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -7,12 +7,13 @@\n #define N 16\n #define DIFF 242\n \n+unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline)) void\n main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n {\n   int i;\n-  unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned char udiff = 2;\n   unsigned char umax = x;\n   unsigned char umin = x;"}, {"sha": "45d96fdc9265ce3a9ea9add85b81b9d15239bfe4", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-1short.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1short.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -7,13 +7,14 @@\n #define N 16\n #define DIFF 242\n \n+unsigned short ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned short uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline)) void\n main1 (unsigned short x, unsigned short max_result, unsigned short min_result)\n {\n   int i;\n-  unsigned short ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned short uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n-  unsigned short  udiff = 2;\n+  unsigned short udiff = 2;\n   unsigned short umax = x;\n   unsigned short umin = x;\n "}, {"sha": "684094d6319b93354b72d103a86d2df097107989", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -7,14 +7,15 @@\n #define N 16\n #define DIFF 240\n \n+int b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+int c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n /* Reduction of signed-int.  */\n \n __attribute__ ((noinline))\n void main1 (int x, int max_result, int min_result)\n {\n   int i;\n-  int b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  int c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   int diff = 0;\n   int max = x;\n   int min = x;"}, {"sha": "78e5b13aca2330f6b8f7dab85e1b1a8f0c2a176f", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-2char.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2char.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -7,12 +7,13 @@\n #define N 16\n #define DIFF 121\n \n+signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+signed char c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline))\n void main1 (signed char x, signed char max_result, signed char min_result)\n {\n   int i;\n-  signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n-  signed char c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   signed char diff = 2;\n   signed char max = x;\n   signed char min = x;"}, {"sha": "cef179b7f532275298a81e834732fdc2593dab1e", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-2short.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2short.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -7,12 +7,13 @@\n #define N 16\n #define DIFF 242\n \n+short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+short c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline))\n void main1 (short x, short max_result, short min_result)\n {\n   int i;\n-  short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  short c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   short diff = 2;\n   short max = x;\n   short min = x;"}, {"sha": "97501c6158478c160c67738aed7d22864d13c52b", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-3.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,14 +6,15 @@\n \n #define N 16\n \n+unsigned int ub[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned int uc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n /* Reduction of unsigned-int.  */\n \n __attribute__ ((noinline))\n int main1 (int n, int res)\n {\n   int i;\n-  unsigned int ub[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned int uc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned int udiff;\n \n   udiff = 0;"}, {"sha": "7fdcf75067530eadec49d5bd6e9e06083a1f0b02", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n \n #define N 16\n \n+char ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+char ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n int main ()\n {\n   int i;\n   char ia[N];\n-  char ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  char ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   for (i = 0; i < N; i++)\n     {"}, {"sha": "d147b81158bb67e2dde884fa1e11d5ad4f954f46", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11a.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11a.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -14,12 +14,13 @@ typedef short half_word;\n typedef int half_word;\n #endif\n \n+half_word ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+half_word ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n int main ()\n {\n   int i;\n   half_word ia[N];\n-  half_word ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  half_word ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   for (i = 0; i < N; i++)\n     {"}, {"sha": "84248ee87fd45658a207a2ed497e99152e0b105c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -14,9 +14,10 @@ typedef short half_word;\n typedef int half_word;\n #endif\n \n+half_word cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n int main ()\n {\n-  half_word cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   half_word ca[N];\n   int i;\n "}, {"sha": "e7b13b540965ab2578f956a55b9ae3bf413277e2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-20040816-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,12 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+\n extern void abort(void); \n \n int main1 ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-\n   int i, j;\n \n   for (i = 0; i < N; i++)"}, {"sha": "0fd0dc5425cc5fe6e93ca525c2625c5163f2cf8e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-19.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-19.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+\n+struct Loc {\n+    int x[3];\n+};\n+\n+void bar (struct Loc *);\n+\n+int foo (int i, int j, int k, int b)\n+{\n+  struct Loc IND;\n+  int res;\n+\n+  if (b)\n+    {\n+      IND.x[0] = i;\n+      IND.x[1] = j;\n+      IND.x[2] = k-1;\n+    }\n+  else\n+    {\n+      IND.x[0] = i;\n+      IND.x[1] = j;\n+      IND.x[2] = k;\n+    }\n+\n+  /* This should be optimized to i + j + {k, k + 1}.  */\n+  res = IND.x[0] + IND.x[1] + IND.x[2];\n+\n+  /* This is just to prevent SRA.  */\n+  bar (&IND);\n+\n+  return res;\n+}\n+\n+/* All three loads should be eliminated.  */\n+/* { dg-final { scan-tree-dump \"Eliminated: 3\" \"pre\" } } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "a7b86cebd9c9c4a94274e972bedde74869ee6eb8", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-vect-reduc-1char.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-reduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-reduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-reduc-1char.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n #define N 16\n #define DIFF 242\n \n+unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n void\n main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n {\n   int i;\n-  unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned char udiff = 2;\n   unsigned char umax = x;\n   unsigned char umin = x;"}, {"sha": "1142e7a2717d863e01ac2668915c5ac44461dae5", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-vect-76c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76c.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -11,12 +11,12 @@\n    more involved than just an ssa_name.  */\n \n int ib[N+OFF] __attribute__ ((__aligned__(16))) = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10};\n+int ic[N+OFF] = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10};\n \n int main1 (int *pib)\n {\n   int i;\n   int ia[N+OFF];\n-  int ic[N+OFF] = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10};\n \n   for (i = OFF; i < N; i++)\n     {"}, {"sha": "a7b86cebd9c9c4a94274e972bedde74869ee6eb8", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-vect-reduc-1char.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-reduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-reduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-reduc-1char.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n #define N 16\n #define DIFF 242\n \n+unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n void\n main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n {\n   int i;\n-  unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned char udiff = 2;\n   unsigned char umax = x;\n   unsigned char umin = x;"}, {"sha": "377d74b77794ff7be5011cd150bbb5cdc8216ff4", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-vect-reduc-5.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-reduc-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-reduc-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-reduc-5.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -9,11 +9,12 @@\n #define N 16\n #define DIFF 242\n \n+float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n int main1 (float x, float max_result)\n {\n   int i;\n-  float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   float diff = 2;\n   float max = x;\n   float min = 10;"}, {"sha": "9f36db2e70120a4793ece801062b29ca94ed67bf", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-vect-reduc-7.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-reduc-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-reduc-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-reduc-7.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -9,11 +9,12 @@\n #define N 16\n #define DIFF 242\n \n+double b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+double c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n int main1 (double x, double max_result)\n {\n   int i;\n-  double b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  double c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   double diff = 2;\n   double max = x;\n   double min = 10;"}, {"sha": "3971c920afa748d4ef62edb7b09fb85747c2271b", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n \n #define N 16\n \n+float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n   float a[N];\n-  float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   /* Condition in loop.  */\n   /* This loop is vectorized on platforms that support vect_condition.  */"}, {"sha": "673346a675c75b56da1ce2d4cd7499c9d8667746", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-111.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-111.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-111.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-111.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,12 +5,13 @@\n \n #define N 16\n \n+float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n   float a[N];\n-  float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   /* Condition in loop.  */\n   /* This loop is vectorized on platforms that support vect_condition.  */"}, {"sha": "a35b7ade8e6a9be8d68a426bd77719fc842ebbc8", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-11.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-11.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+float B[N] = {0,0,42,42,42,0,0,0,0,0,42,42,42,42,42,0};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  float B[N] = {0,0,42,42,42,0,0,0,0,0,42,42,42,42,42,0};\n   int i, j;\n \n   check_vect ();"}, {"sha": "485e88cf38323039d7f1729d76a0ff7668593c9c", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-12.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-12.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+float B[N] = {0,0,0,42,42,0,0,0,0,0,42,42,42,42,42,0};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  float B[N] = {0,0,0,42,42,0,0,0,0,0,42,42,42,42,42,0};\n   int i, j;\n \n   check_vect ();"}, {"sha": "58e6dc0a9ca674732a25a89669455248c5c56578", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-13.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-13.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+float B[N] = {42,42,42,0,0,42,42,42,42,42,0,0,0,0,0,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  float B[N] = {42,42,42,0,0,42,42,42,42,42,0,0,0,0,0,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "58e6dc0a9ca674732a25a89669455248c5c56578", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-14.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-14.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+float B[N] = {42,42,42,0,0,42,42,42,42,42,0,0,0,0,0,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  float B[N] = {42,42,42,0,0,42,42,42,42,42,0,0,0,0,0,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "a15a0b1278cfcbd46e02877cd0dd9b59f3307ff2", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-15.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-15.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+float B[N] = {42,42,0,0,0,42,42,42,42,42,0,0,0,0,0,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  float B[N] = {42,42,0,0,0,42,42,42,42,42,0,0,0,0,0,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "bfa0802c0ced0e87a67fae491ea0b6b847b5d0bc", "filename": "gcc/testsuite/gcc.dg/vect/no-vfa-vect-37.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-vect-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-vect-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-vect-37.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,6 +5,7 @@\n \n #define N 16\n char x[N] __attribute__ ((__aligned__(16)));\n+char cb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n  \n __attribute__ ((noinline))\n int main1 (char *y)\n@@ -13,7 +14,6 @@ int main1 (char *y)\n     char *p;\n     char *q;\n   } s;\n-  char cb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   int i;\n \n   /* Not vectorized - can't antialias the pointer s.p from the array cb.  */"}, {"sha": "329478d39fe2b5adf1ee79190d555de39575a7bc", "filename": "gcc/testsuite/gcc.dg/vect/no-vfa-vect-depend-1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-vect-depend-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-vect-depend-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-vect-depend-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,13 +5,14 @@\n \n #define N 17\n \n+int ia[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48};\n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48};\n+int res[N] = {12,24,36,48,60,72,84,96,108,120,132,144,156,168,180,192,48};\n+\n __attribute__ ((noinline))\n int main1 ()\n {\n   int i;\n-  int ia[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48};\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48};\n-  int res[N] = {12,24,36,48,60,72,84,96,108,120,132,144,156,168,180,192,48};\n \n   /* Not vectorizable due to data dependence: dependence distance 1.  */ \n   for (i = 0; i < N - 1; i++)"}, {"sha": "6bc3b5c831b35990a95ded35b785eb93bdbc6ca0", "filename": "gcc/testsuite/gcc.dg/vect/pr18400.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -4,11 +4,12 @@\n #include \"tree-vect.h\"\n \n #define N 8\n+\n+int b[N] = {0,3,6,9,12,15,18,21};\n+int a[N];\n  \n int main1 ()\n {  \n-  int b[N] = {0,3,6,9,12,15,18,21};\n-  int a[N];\n   int i;\n \n   for (i = 0; i < N; i++)"}, {"sha": "9f7c7606b46e708932e6a82658edc9ceb066f388", "filename": "gcc/testsuite/gcc.dg/vect/slp-12b.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12b.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,11 +6,12 @@\n \n #define N 64 \n \n+unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n int\n main1 ()\n {\n   int i;\n-  unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n   float out2[N*8], fa[N*4];\n \n   for (i = 0; i < N; i++)"}, {"sha": "98a203cf5ca6d6a90f14e39c650780046aee2ab1", "filename": "gcc/testsuite/gcc.dg/vect/slp-14.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-14.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,13 +6,14 @@\n \n #define N 8 \n \n+unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned short in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n int\n main1 (int n)\n {\n   int i;\n   unsigned int out[N*8], a0, a1, a2, a3, a4, a5, a6, a7, b1, b0, b2, b3, b4, b5, b6, b7;\n-  unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned short in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n   unsigned short out2[N*16];\n \n   /* Multiple types are now SLPable.  */"}, {"sha": "dde0b746fae0094e8470311e8701fb9d34f17a2e", "filename": "gcc/testsuite/gcc.dg/vect/slp-15.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-15.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,14 +6,16 @@\n \n #define N 8 \n \n+unsigned int out[N*8], a0, a1, a2, a3, a4, a5, a6, a7, b1, b0, b2, b3, b4, b5, b6, b7;\n+unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned int in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned int out2[N*16];\n+\n int\n main1 (int n)\n {\n   int i;\n-  unsigned int out[N*8], a0, a1, a2, a3, a4, a5, a6, a7, b1, b0, b2, b3, b4, b5, b6, b7;\n-  unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned int in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned int out2[N*16];\n+  unsigned int a0, a1, a2, a3, a4, a5, a6, a7, b1, b0, b2, b3, b4, b5, b6, b7;\n \n   for (i = 0; i < n; i++)\n     {"}, {"sha": "5ca698f7d36fb2b88cf8fd2e5c6d0977509bf9cd", "filename": "gcc/testsuite/gcc.dg/vect/slp-16.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-16.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,14 +6,16 @@\n \n #define N 8 \n \n+unsigned int out[N*8];\n+unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned int in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned int out2[N*16];\n+\n int\n main1 ()\n {\n   int i;\n-  unsigned int out[N*8], a0, a1, a2, a3, a4, a5, a6, a7, b1, b0, b2, b3, b4, b5, b6, b7;\n-  unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned int in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned int out2[N*16];\n+  unsigned int a0, a1, a2, a3, a4, a5, a6, a7, b1, b0, b2, b3, b4, b5, b6, b7;\n \n   /* SLP group of size that is not a multiple of vector size. \n      Unrolling by 2.  */"}, {"sha": "0939f74d4db68a465a256f12163a7b71a16928be", "filename": "gcc/testsuite/gcc.dg/vect/slp-17.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-17.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,14 +6,15 @@\n \n #define N 8 \n \n+unsigned short out[N*8];\n+unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned short in2[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned short out2[N*8];\n+\n int\n main1 ()\n {\n   int i;\n-  unsigned short out[N*8];\n-  unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned short in2[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned short out2[N*8];\n \n   for (i = 0; i < N*2; i++)\n     {"}, {"sha": "bd9c7515e44c1e776f9a96013e4c9458f23e160c", "filename": "gcc/testsuite/gcc.dg/vect/slp-24.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-24.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -14,12 +14,13 @@ typedef struct {\n    unsigned char d;\n } s;\n \n+unsigned char ub[N*2] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n void\n main1 (unsigned char x, unsigned char max_result, unsigned char min_result, s *arr)\n {\n   int i;\n-  unsigned char ub[N*2] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned char udiff = 2;\n   unsigned char umax = x;\n   unsigned char umin = x;"}, {"sha": "780a4472b816073ec27da11dbe56a0e87ce45d33", "filename": "gcc/testsuite/gcc.dg/vect/slp-28.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-28.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,15 +6,16 @@\n \n #define N 32 \n \n+unsigned short in[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n+unsigned short in2[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n+unsigned short in3[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n+unsigned short check[N] = {0,1,2,3,5,6,7,8,10,11,12,13,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,33,35,36,37,38};\n+unsigned short check3[N] = {0,1,2,3,4,5,6,7,8,9,10,11,5,6,7,8,9,10,11,12,13,14,15,16,10,11,12,13,14,15,16,17};\n+\n int\n main1 ()\n {\n   int i;\n-  unsigned short in[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n-  unsigned short in2[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n-  unsigned short in3[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n-  unsigned short check[N] = {0,1,2,3,5,6,7,8,10,11,12,13,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,33,35,36,37,38};\n-  unsigned short check3[N] = {0,1,2,3,4,5,6,7,8,9,10,11,5,6,7,8,9,10,11,12,13,14,15,16,10,11,12,13,14,15,16,17};\n \n   for (i = 0; i < N/4; i++)\n     {"}, {"sha": "070715371bb74d01551e9aebc09eb87bab982ca0", "filename": "gcc/testsuite/gcc.dg/vect/slp-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-3.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n \n #define N 8 \n \n+unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n int\n main1 ()\n {\n   int i;\n   unsigned short out[N*8];\n-  unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n \n   for (i = 0; i < N; i++)\n     {"}, {"sha": "3ed56eae4ec6e871163b153d2c833fb09dfe0e5b", "filename": "gcc/testsuite/gcc.dg/vect/slp-34.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-34.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,13 +6,14 @@\n \n #define N 8 \n \n+unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned short in2[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n int\n main1 ()\n {\n   int i;\n   unsigned short out[N*8];\n-  unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned short in2[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n   unsigned short out2[N*8];\n \n   /* SLP with unrolling by 8.  */"}, {"sha": "672b1d6e28abac387396dd15b627f70c65a54dad", "filename": "gcc/testsuite/gcc.dg/vect/slp-6.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-6.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,13 +6,14 @@\n \n #define N 8 \n \n+unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned int in2[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n int\n main1 ()\n {\n   int i;\n   unsigned short out[N*8];\n-  unsigned short in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned int in2[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n   unsigned int out2[N*8];\n \n   for (i = 0; i < N; i++)"}, {"sha": "72ec0cd1ea2052d43967ff01dec43271919ad88d", "filename": "gcc/testsuite/gcc.dg/vect/slp-7.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-7.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,13 +6,14 @@\n \n #define N 8 \n \n+unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned short in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n int\n main1 ()\n {\n   int i;\n   unsigned int out[N*8], ia[N*2];\n-  unsigned int in[N*8] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n-  unsigned short in2[N*16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n   unsigned short sa[N], out2[N*16];\n \n   for (i = 0; i < N; i++)"}, {"sha": "76db4e1c28ac30e4fa2e081ef1dc755475913688", "filename": "gcc/testsuite/gcc.dg/vect/slp-8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-8.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,10 +5,11 @@\n \n #define N 32\n \n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n int main1 ()\n {\n   int i;\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   float fa[N];\n \n   /* int -> float */"}, {"sha": "201d4ab4e3409ecc2ce3f7384910a3a8aa4dc778", "filename": "gcc/testsuite/gcc.dg/vect/vect-107.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-107.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-107.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-107.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,14 +5,15 @@\n \n #define N 16\n \n+float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+float d[N] = {0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n   float a[N];\n-  float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n-  float d[N] = {0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30};\n \n   /* Strided access. Vectorizable on platforms that support load of strided \n      accesses (extract of even/odd vector elements).  */"}, {"sha": "28e85b2e9c06061f556a758e7c248e88115fbcdc", "filename": "gcc/testsuite/gcc.dg/vect/vect-108.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-108.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-108.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-108.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,13 +5,14 @@\n \n #define N 16\n \n+int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+int ia[N];\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n-  int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  int ia[N];\n \n   /* This loop is vectorized on platforms that support vect_int_mult.  */\n   for (i = 0; i < N; i++)"}, {"sha": "3df8f47b5f542eead52790e1c9e64e8fdb178ed3", "filename": "gcc/testsuite/gcc.dg/vect/vect-11.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,13 +6,14 @@\n \n #define N 16\n \n+int ia[N];\n+int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n __attribute__ ((noinline)) \n int main1 ()\n {\n   int i;\n-  int ia[N];\n-  int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   /* Not vectorizable yet (integer mult).  */\n   for (i = 0; i < N; i++)"}, {"sha": "4d954d10829b5eadf88d523d36e57abfacce2971", "filename": "gcc/testsuite/gcc.dg/vect/vect-112.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-112.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-112.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-112.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,13 +5,14 @@\n \n #define N 16\n \n+char cb[N] = {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17};\n+char cc[N] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n   int diff = 0;\n-  char cb[N] = {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17};\n-  char cc[N] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n \n   /* Cross-iteration cycle.  */\n   diff = 0;"}, {"sha": "ce6eaf4548829d2106e3f54a3fd105cff961bbd3", "filename": "gcc/testsuite/gcc.dg/vect/vect-115.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-115.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-115.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-115.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -23,12 +23,13 @@ struct test1{\n   int l;\n };\n \n+int a[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline))\n int main1 ()\n {\n   int i;\n   struct test1 tmp1;\n-  int a[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   struct t tmp2;\n \n   tmp1.ptr_t = &tmp2;"}, {"sha": "2da903b1bc498f353d5d5cb4e6d53bb7cb299793", "filename": "gcc/testsuite/gcc.dg/vect/vect-11a.c", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11a.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,16 +6,17 @@\n \n extern void abort (void);\n \n+unsigned int A[8] = {0x08000000,0xffffffff,0xff0000ff,0xf0000001,\n+\t\t     0x08000000,0xffffffff,0xff0000ff,0xf0000001};\n+unsigned int B[8] = {0x08000000,0x08000001,0xff0000ff,0xf0000001,\n+\t\t     0x08000000,0x08000001,0xff0000ff,0xf0000001};\n+unsigned int Answer[8] = {0,0xf7ffffff,0x0200fe01,0xe0000001,\n+\t\t\t  0,0xf7ffffff,0x0200fe01,0xe0000001};\n+unsigned int C[8];\n+\n __attribute__ ((noinline))\n void u ()\n {  \n-  unsigned int A[8] = {0x08000000,0xffffffff,0xff0000ff,0xf0000001,\n-\t\t       0x08000000,0xffffffff,0xff0000ff,0xf0000001};\n-  unsigned int B[8] = {0x08000000,0x08000001,0xff0000ff,0xf0000001,\n-\t\t       0x08000000,0x08000001,0xff0000ff,0xf0000001};\n-  unsigned int Answer[8] = {0,0xf7ffffff,0x0200fe01,0xe0000001,\n-\t\t\t    0,0xf7ffffff,0x0200fe01,0xe0000001};\n-  unsigned int C[8];\n   int i, j;\n   \n   for (i=0; i<8; i++)\n@@ -25,22 +26,23 @@ void u ()\n       abort ();\n }\n \n+signed int D[8] = {0x08000000,0xffffffff,0xff0000ff,0xf0000001,\n+\t\t   0x08000000,0xffffffff,0xff0000ff,0xf0000001};\n+signed int E[8] = {0x08000000,0x08000001,0xff0000ff,0xf0000001,\n+\t\t   0x08000000,0x08000001,0xff0000ff,0xf0000001};\n+signed int Dnswer[8] = {0,0xf7ffffff,0x0200fe01, 0xe0000001,\n+\t\t\t0,0xf7ffffff,0x0200fe01, 0xe0000001};\n+signed int F[8];\n+\n __attribute__ ((noinline))\n void s()\n {\n-  signed int A[8] = {0x08000000,0xffffffff,0xff0000ff,0xf0000001,\n-\t\t     0x08000000,0xffffffff,0xff0000ff,0xf0000001};\n-  signed int B[8] = {0x08000000,0x08000001,0xff0000ff,0xf0000001,\n-\t\t     0x08000000,0x08000001,0xff0000ff,0xf0000001};\n-  signed int Answer[8] = {0,0xf7ffffff,0x0200fe01, 0xe0000001,\n-\t\t\t  0,0xf7ffffff,0x0200fe01, 0xe0000001};\n-  signed int C[8];\n   int i, j;\n   \n   for (i=0; i<8; i++)\n-    C[i] = A[i] * B[i];\n+    F[i] = D[i] * E[i];\n   for (i=0; i<8; i++)\n-    if (C[i] != Answer[i])\n+    if (F[i] != Dnswer[i])\n       abort ();\n }\n "}, {"sha": "df18f774e5dc163f17ca148309da4c2f5f453dd3", "filename": "gcc/testsuite/gcc.dg/vect/vect-34.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -4,15 +4,16 @@\n #include \"tree-vect.h\"\n \n #define N 16\n+\n+struct {\n+  char ca[N];\n+} s;\n+char cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n  \n __attribute__ ((noinline))\n int main1 ()\n {  \n   int i;\n-  struct {\n-    char ca[N];\n-  } s;\n-  char cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   for (i = 0; i < N; i++)\n     {"}, {"sha": "c11784a4b2bbce97d4079575158f91f1e937942d", "filename": "gcc/testsuite/gcc.dg/vect/vect-9.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,12 +5,13 @@\n \n #define N 16\n \n+short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+int ia[N];\n+\n __attribute__ ((noinline))\n int main1 ()\n {\n   int i;\n-  short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  int ia[N];\n \n   /* Requires type promotion (vector unpacking) support.  */\n   for (i = 0; i < N; i++)"}, {"sha": "c95c503c9410d1e19a26cd6c4f132e170301be27", "filename": "gcc/testsuite/gcc.dg/vect/vect-97.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-97.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-97.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-97.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,6 +5,9 @@\n \n #define N 16\n  \n+char x[N] __attribute__ ((__aligned__(16)));\n+char cb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n __attribute__ ((noinline))\n int main1 ()\n {  \n@@ -13,8 +16,6 @@ int main1 ()\n     char *q;\n   } s;\n   int i;\n-  char x[N] __attribute__ ((__aligned__(16)));\n-  char cb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   /* Check that datarefs analysis can determine that the access via pointer\n      s.p is based off array x, which enables us to antialias this access from"}, {"sha": "f6bf22da93e7d94f3abc447a5cbe6dba777b836a", "filename": "gcc/testsuite/gcc.dg/vect/vect-align-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-align-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-align-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-align-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -14,11 +14,12 @@ struct foo {\n   int y[N];\n } __attribute__((packed));\n \n+int x[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline)) int\n main1 (struct foo * __restrict__ p)\n {\n   int i;\n-  int x[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n \n   for (i = 0; i < N; i++)\n     {"}, {"sha": "3035ee392b392249b50a2a1ef6eafc946e5d1f14", "filename": "gcc/testsuite/gcc.dg/vect/vect-float-extend-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-float-extend-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-float-extend-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-float-extend-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,12 +5,13 @@\n \n #define N 32\n \n+float fb[N] = {0.4,3.5,6.6,9.4,12.5,15.6,18.4,21.5,24.6,27.4,30.5,33.6,36.4,39.5,42.6,45.4,0.5,3.6,6.4,9.5,12.6,15.4,18.5,21.6,24.4,27.5,30.6,33.4,36.5,39.6,42.4,45.5};\n+double da[N];\n+\n __attribute__ ((noinline)) int\n main1 ()\n {\n   int i;\n-  float fb[N] = {0.4,3.5,6.6,9.4,12.5,15.6,18.4,21.5,24.6,27.4,30.5,33.6,36.4,39.5,42.6,45.4,0.5,3.6,6.4,9.5,12.6,15.4,18.5,21.6,24.4,27.5,30.6,33.4,36.5,39.6,42.4,45.5};\n-  double da[N];\n \n   /* float -> double */\n   for (i = 0; i < N; i++)"}, {"sha": "e5b72f1acabb2d4e5873de8d41901b545a8696d1", "filename": "gcc/testsuite/gcc.dg/vect/vect-floatint-conversion-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-floatint-conversion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-floatint-conversion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-floatint-conversion-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,12 +5,13 @@\n \n #define N 32\n \n+float fb[N] = {0.4,3.5,6.6,9.4,12.5,15.6,18.4,21.5,24.6,27.4,30.5,33.6,36.4,39.5,42.6,45.4,0.5,3.6,6.4,9.5,12.6,15.4,18.5,21.6,24.4,27.5,30.6,33.4,36.5,39.6,42.4,45.5};\n+int ia[N];\n+\n __attribute__ ((noinline)) int\n main1 ()\n {\n   int i;\n-  float fb[N] = {0.4,3.5,6.6,9.4,12.5,15.6,18.4,21.5,24.6,27.4,30.5,33.6,36.4,39.5,42.6,45.4,0.5,3.6,6.4,9.5,12.6,15.4,18.5,21.6,24.4,27.5,30.6,33.4,36.5,39.6,42.4,45.5};\n-  int ia[N];\n \n   /* float -> int */\n   for (i = 0; i < N; i++)"}, {"sha": "8071c87d09c13a7ccbbb0db8e0300a19d3617a09", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-16.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-16.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -10,10 +10,11 @@\n \n extern void abort(void); \n \n+float A[N] = {36,39,42,45,43,32,21,42,23,34,45,56,67,42,89,11};\n+float B[N] = {42,42,0,42,42,42,42,0,42,42,42,42,42,0,42,42};\n+\n int main ()\n {  \n-  float A[N] = {36,39,42,45,43,32,21,42,23,34,45,56,67,42,89,11};\n-  float B[N] = {42,42,0,42,42,42,42,0,42,42,42,42,42,0,42,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "a02c8984e5821fa8889f89ee32977c5209477c51", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-17.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-17.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,42,78,89,11};\n+float B[N] = {42,42,0,42,42,42,42,42,42,42,42,42,0,42,42,42};\n+\n extern void abort(void);\n \n int main ()\n {\n-  float A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,42,78,89,11};\n-  float B[N] = {42,42,0,42,42,42,42,42,42,42,42,42,0,42,42,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "e899f126d8c1c4bac82a82a953fbfb039f2953d6", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+int B[N] = {0,0,42,42,42,0,0,0,0,0,42,42,42,42,42,0};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  int B[N] = {0,0,42,42,42,0,0,0,0,0,42,42,42,42,42,0};\n   int i, j;\n \n   check_vect ();"}, {"sha": "1d8e9f52b23fc578542085381cfea6d7be166b1d", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-3.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+int B[N] = {0,0,0,42,42,0,0,0,0,0,42,42,42,42,42,0};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  int B[N] = {0,0,0,42,42,0,0,0,0,0,42,42,42,42,42,0};\n   int i, j;\n \n   check_vect ();"}, {"sha": "1680cba8a8857013ec836808311a5a7644e65527", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-4.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+int B[N] = {42,42,42,0,0,42,42,42,42,42,0,0,0,0,0,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  int B[N] = {42,42,42,0,0,42,42,42,42,42,0,0,0,0,0,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "5fc9674b3173b5df0960af07c7ddefc97c1a31c3", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-5.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-5.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n+int B[N] = {42,42,0,0,0,42,42,42,42,42,0,0,0,0,0,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,67,78,89,11};\n-  int B[N] = {42,42,0,0,0,42,42,42,42,42,0,0,0,0,0,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "24e8c969e1cdeecf2f8837692805a2cfecb7715f", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-6.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-6.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,42,23,34,45,56,67,42,89,11};\n+int B[N] = {42,42,0,42,42,42,42,0,42,42,42,42,42,0,42,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,42,23,34,45,56,67,42,89,11};\n-  int B[N] = {42,42,0,42,42,42,42,0,42,42,42,42,42,0,42,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "fa4cf3a58fa11b3047a258844b7ba6b4d74292ce", "filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-7.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ifcvt-7.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -8,12 +8,13 @@\n #define N 16\n #define MAX 42\n \n+int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,42,78,89,11};\n+int B[N] = {42,42,0,42,42,42,42,42,42,42,42,42,0,42,42,42};\n+\n extern void abort(void); \n \n int main ()\n {  \n-  int A[N] = {36,39,42,45,43,32,21,12,23,34,45,56,42,78,89,11};\n-  int B[N] = {42,42,0,42,42,42,42,42,42,42,42,42,0,42,42,42};\n   int i, j;\n \n   check_vect ();"}, {"sha": "90f33a508a6ac5ac986e87e26e5880d9503a7b36", "filename": "gcc/testsuite/gcc.dg/vect/vect-intfloat-conversion-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,11 +5,12 @@\n \n #define N 32\n \n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+float fa[N];\n+\n __attribute__ ((noinline)) int main1 ()\n {\n   int i;\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  float fa[N];\n \n   /* int -> float */\n   for (i = 0; i < N; i++)"}, {"sha": "87f200119d6c487be9e732307311e92e215fa185", "filename": "gcc/testsuite/gcc.dg/vect/vect-intfloat-conversion-2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,12 +5,13 @@\n \n #define N 32\n \n+int int_arr[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+float float_arr[N];\n+char char_arr[N];\n+\n __attribute__ ((noinline)) int main1 ()\n {\n   int i;\n-  int int_arr[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  float float_arr[N];\n-  char char_arr[N];\n \n   for (i = 0; i < N; i++){\n     float_arr[i] = (float) int_arr[i];"}, {"sha": "d5f25df7190c28cceffab07943a6e738142ebe48", "filename": "gcc/testsuite/gcc.dg/vect/vect-intfloat-conversion-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-3.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,11 +5,12 @@\n \n #define N 32\n \n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+double da[N];\n+\n __attribute__ ((noinline)) int main1 ()\n {\n   int i;\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  double da[N];\n \n   /* int -> double */\n   for (i = 0; i < N; i++)"}, {"sha": "af8344ba6004c4ec32d7e1de1139f98e9820ff3f", "filename": "gcc/testsuite/gcc.dg/vect/vect-intfloat-conversion-4a.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-4a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-4a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-4a.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,11 +5,12 @@\n \n #define N 32\n \n+short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,-3,-6,-9,-12,-15,-18,-21,-24,-27,-30,-33,-36,-39,-42,-45};\n+float fa[N];\n+\n __attribute__ ((noinline)) int main1 ()\n {\n   int i;\n-  short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,-3,-6,-9,-12,-15,-18,-21,-24,-27,-30,-33,-36,-39,-42,-45};\n-  float fa[N];\n \n   /* short -> float */\n   for (i = 0; i < N; i++)"}, {"sha": "51ea056fa1dcf361aa94717bbddbc40c40100318", "filename": "gcc/testsuite/gcc.dg/vect/vect-intfloat-conversion-4b.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-4b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-4b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-intfloat-conversion-4b.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,11 +5,12 @@\n \n #define N 32\n \n+unsigned short usb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,65533,65530,65527,65524,65521,65518,65515,65512,65509,65506,65503,65500,65497,65494,65491};\n+float fa[N];\n+\n __attribute__ ((noinline)) int main1 ()\n {\n   int i;\n-  unsigned short usb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,65533,65530,65527,65524,65521,65518,65515,65512,65509,65506,65503,65500,65497,65494,65491};\n-  float fa[N];\n \n   /* unsigned short -> float */\n   for (i = 0; i < N; i++)"}, {"sha": "4ae47f2c58ec65030766e8c02a5ae97dceb3f33b", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-2.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,15 +5,16 @@\n \n #define N 32\n \n+int ia[N];\n+int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+short sa[N];\n+short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+char ca[N];\n+char cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n __attribute__ ((noinline)) int main1 ()\n {\n   int i;\n-  int ia[N];\n-  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  short sa[N];\n-  short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  char ca[N];\n-  char cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   /* Multiple types with different sizes, used in independent\n      cmputations. Vectorizable. All accesses aligned.   */"}, {"sha": "bfa95524b5425c69a0fad4080b3bf04f9f01e8e6", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-5.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-5.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,19 +5,20 @@\n \n #define N 32\n \n+unsigned int ia[N];\n+unsigned int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned short sa[N];\n+unsigned short sc[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char ca[N];\n+unsigned char cc[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+\n __attribute__ ((noinline))\n int main1 ()\n {\n   int i;\n-  unsigned int ia[N];\n-  unsigned int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned  int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned short sa[N];\n-  unsigned short sc[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char ca[N];\n-  unsigned char cc[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char cb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n   /* Multiple types with different sizes, used in independent\n      computations. Vectorizable. All accesses aligned.  */"}, {"sha": "dbb154d1233d38eb434d84899538f403934b79d7", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,14 +6,15 @@\n #define N 16\n #define DIFF 242\n \n+unsigned int ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned int uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n /* Test vectorization of reduction of unsigned-int.  */\n \n __attribute__ ((noinline))\n void main1 (unsigned int x, unsigned int max_result, unsigned int min_result)\n {\n   int i;\n-  unsigned int ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned int uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned int udiff = 2;\n   unsigned int umax = x;\n   unsigned int umin = x;"}, {"sha": "5a1c03d113fbb3b6453a62c7c1d0602d0f66188e", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-1char.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1char.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n #define N 16\n #define DIFF 242\n \n+unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline)) void\n main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n {\n   int i;\n-  unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned char udiff = 2;\n   unsigned char umax = x;\n   unsigned char umin = x;"}, {"sha": "145722a1946f1472b34119449131d2de26ec1eba", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-1short.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1short.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n #define N 16\n #define DIFF 242\n \n+unsigned short ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned short uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline)) void\n main1 (unsigned short x, unsigned short max_result, unsigned short min_result)\n {\n   int i;\n-  unsigned short ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned short uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned short  udiff = 2;\n   unsigned short umax = x;\n   unsigned short umin = x;"}, {"sha": "912e69c93c2d9c3eb07f31c56d765c8f46adfb5a", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,14 +6,15 @@\n #define N 16\n #define DIFF 240\n \n+int b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+int c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n /* Test vectorization of reduction of signed-int.  */\n \n __attribute__ ((noinline))\n void main1 (int x, int max_result, int min_result)\n {\n   int i;\n-  int b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  int c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   int diff = 0;\n   int max = x;\n   int min = x;"}, {"sha": "3e6f17c485a0567328269fceabc99a907aba8b80", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-3.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,15 +5,16 @@\n \n #define N 16\n \n+unsigned int ub[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+unsigned int uc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n /* Test vectorization of reduction of unsigned-int in the presence\n    of unknown-loop-bound.  */\n \n __attribute__ ((noinline))\n int main1 (int n, int res)\n {\n   int i;\n-  unsigned int ub[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  unsigned int uc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned int udiff;\n \n   udiff = 0;"}, {"sha": "79699047eda0ef9a2ea07c9d250e5c4970f847cf", "filename": "gcc/testsuite/gcc.dg/vect/vect-shift-1.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-1.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n \n #define N 8\n \n+unsigned int A[N] = { 0x08000000, 0x08000001, 0x0ff0000ff, 0xf0000001,\n+\t\t      0x08000000, 0x08000001, 0x0ff0000ff, 0xf0000001 };\n+unsigned int B[N] = { 0x01000000, 0x01000000, 0x01fe0001f, 0x1e000000,\n+\t\t      0x01000000, 0x01000000, 0x01fe0001f, 0x1e000000 };\n+\n int main ()\n {\n-  unsigned int A[N] = { 0x08000000, 0x08000001, 0x0ff0000ff, 0xf0000001,\n-\t\t\t0x08000000, 0x08000001, 0x0ff0000ff, 0xf0000001 };\n-  unsigned int B[N] = { 0x01000000, 0x01000000, 0x01fe0001f, 0x1e000000,\n-\t\t\t0x01000000, 0x01000000, 0x01fe0001f, 0x1e000000 };\n   int i;\n \n   check_vect ();"}, {"sha": "38c50b9cd4351a98ff653141143099d48b9b779f", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-float.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-float.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -5,13 +5,14 @@\n \n #define N 16\n \n+float b[N*2] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93};\n+float c[N*2] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n   float a[N*2];\n-  float b[N*2] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93};\n-  float c[N*2] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};\n \n   /* Strided access pattern.  */\n   for (i = 0; i < N/2; i++)"}, {"sha": "1eaad43541692800329a17ac8004533407e92f8f", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-store-u32-i2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-store-u32-i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-store-u32-i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-store-u32-i2.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,13 +6,14 @@\n \n #define N 16\n \n+int a[N*2];\n+int b[N] = {0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+int c[N] = {1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31};\n+\n __attribute__ ((noinline)) int\n main1 (void)\n {\n   int i;\n-  int a[N*2];\n-  int b[N] = {0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30};\n-  int c[N] = {1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31};\n \n   /* Strided access pattern.  */\n   for (i = 0; i < N/2; i++)"}, {"sha": "4b04a9d41c34db42f2c444fe0ac77350c29903db", "filename": "gcc/testsuite/gcc.dg/vect/wrapv-vect-reduc-2char.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2char.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n #define N 16\n #define DIFF 121\n \n+signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+signed char c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline))\n void main1 (signed char x, signed char max_result, signed char min_result)\n {\n   int i;\n-  signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n-  signed char c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   signed char diff = 2;\n   signed char max = x;\n   signed char min = x;"}, {"sha": "0468b1966b9b16e3b9e4747bbfb1087cc6392a1a", "filename": "gcc/testsuite/gcc.dg/vect/wrapv-vect-reduc-2short.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-2short.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -6,12 +6,13 @@\n #define N 16\n #define DIFF 242\n \n+short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+short c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n __attribute__ ((noinline))\n void main1 (short x, short max_result, short min_result)\n {\n   int i;\n-  short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  short c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   short diff = 2;\n   short max = x;\n   short min = x;"}, {"sha": "cc5678258a1482b10bf8c5991ee03d2ff23a6eb7", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -1566,7 +1566,7 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \t  {\n \t    tree result = vn_reference_lookup_pieces (newvuses,\n \t\t\t\t\t\t      newoperands,\n-\t\t\t\t\t\t      &newref);\n+\t\t\t\t\t\t      &newref, true);\n \t    unsigned int new_val_id;\n \n \t    if (newref)\n@@ -2499,8 +2499,12 @@ create_component_ref_by_pieces_1 (basic_block block, vn_reference_t ref,\n \tgenop1 = fold_convert (build_pointer_type (currop->type),\n \t\t\t       genop1);\n \n-\tfolded = fold_build1 (currop->opcode, currop->type,\n-\t\t\t      genop1);\n+\tif (currop->opcode == MISALIGNED_INDIRECT_REF)\n+\t  folded = fold_build2 (currop->opcode, currop->type,\n+\t\t\t\tgenop1, currop->op1);\n+\telse\n+\t  folded = fold_build1 (currop->opcode, currop->type,\n+\t\t\t\tgenop1);\n \treturn folded;\n       }\n       break;\n@@ -3139,6 +3143,7 @@ do_regular_insertion (basic_block block, basic_block dom)\n \t  basic_block bprime;\n \t  pre_expr eprime = NULL;\n \t  edge_iterator ei;\n+\t  pre_expr edoubleprime;\n \n \t  val = get_expr_value_id (expr);\n \t  if (bitmap_set_contains_value (PHI_GEN (block), val))\n@@ -3154,7 +3159,6 @@ do_regular_insertion (basic_block block, basic_block dom)\n \t  FOR_EACH_EDGE (pred, ei, block->preds)\n \t    {\n \t      unsigned int vprime;\n-\t      pre_expr edoubleprime;\n \n \t      /* This can happen in the very weird case\n \t\t that our fake infinite loop edges have caused a\n@@ -3216,15 +3220,16 @@ do_regular_insertion (basic_block block, basic_block dom)\n \t     an invariant, then the PHI has the same value on all\n \t     edges.  Note this.  */\n \t  else if (!cant_insert && all_same && eprime\n-\t\t   && eprime->kind == CONSTANT\n+\t\t   && (edoubleprime->kind == CONSTANT\n+\t\t       || edoubleprime->kind == NAME)\n \t\t   && !value_id_constant_p (val))\n \t    {\n \t      unsigned int j;\n \t      bitmap_iterator bi;\n \t      bitmap_set_t exprset = VEC_index (bitmap_set_t,\n \t\t\t\t\t\tvalue_expressions, val);\n \n-\t      unsigned int new_val = get_expr_value_id (eprime);\n+\t      unsigned int new_val = get_expr_value_id (edoubleprime);\n \t      FOR_EACH_EXPR_ID_IN_SET (exprset, j, bi)\n \t\t{\n \t\t  pre_expr expr = expression_for_id (j);\n@@ -3234,9 +3239,14 @@ do_regular_insertion (basic_block block, basic_block dom)\n \t\t      vn_ssa_aux_t info = VN_INFO (PRE_EXPR_NAME (expr));\n \t\t      /* Just reset the value id and valnum so it is\n \t\t\t the same as the constant we have discovered.  */\n-\t\t      info->valnum = PRE_EXPR_CONSTANT (eprime);\n+\t\t      if (edoubleprime->kind == CONSTANT)\n+\t\t\t{\n+\t\t\t  info->valnum = PRE_EXPR_CONSTANT (edoubleprime);\n+\t\t\t  pre_stats.constified++;\n+\t\t\t}\n+\t\t      else\n+\t\t\tinfo->valnum = PRE_EXPR_NAME (edoubleprime);\n \t\t      info->value_id = new_val;\n-\t\t      pre_stats.constified++;\n \t\t    }\n \t\t}\n \t    }\n@@ -3594,7 +3604,7 @@ compute_avail (void)\n \n \t\tcopy_reference_ops_from_call (stmt, &ops);\n \t\tvn_reference_lookup_pieces (shared_vuses_from_stmt (stmt),\n-\t\t\t\t\t    ops, &ref);\n+\t\t\t\t\t    ops, &ref, false);\n \t\tVEC_free (vn_reference_op_s, heap, ops);\n \t\tif (!ref)\n \t\t  continue;"}, {"sha": "26a65f126e11ce113fb1ff100f62979190063b98", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 112, "deletions": 2, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -595,11 +595,13 @@ copy_reference_ops_from_ref (tree ref, VEC(vn_reference_op_s, heap) **result)\n       switch (temp.opcode)\n \t{\n \tcase ALIGN_INDIRECT_REF:\n-\tcase MISALIGNED_INDIRECT_REF:\n \tcase INDIRECT_REF:\n \t  /* The only operand is the address, which gets its own\n \t     vn_reference_op_s structure.  */\n \t  break;\n+\tcase MISALIGNED_INDIRECT_REF:\n+\t  temp.op0 = TREE_OPERAND (ref, 1);\n+\t  break;\n \tcase BIT_FIELD_REF:\n \t  /* Record bits and position.  */\n \t  temp.op0 = TREE_OPERAND (ref, 1);\n@@ -676,6 +678,92 @@ copy_reference_ops_from_ref (tree ref, VEC(vn_reference_op_s, heap) **result)\n     }\n }\n \n+/* Re-create a reference tree from the reference ops OPS.\n+   Returns NULL_TREE if the ops were not handled.\n+   This routine needs to be kept in sync with copy_reference_ops_from_ref.  */\n+\n+static tree\n+get_ref_from_reference_ops (VEC(vn_reference_op_s, heap) *ops)\n+{\n+  vn_reference_op_t op;\n+  unsigned i;\n+  tree ref, *op0_p = &ref;\n+\n+  for (i = 0; VEC_iterate (vn_reference_op_s, ops, i, op); ++i)\n+    {\n+      switch (op->opcode)\n+\t{\n+\tcase CALL_EXPR:\n+\t  return NULL_TREE;\n+\n+\tcase ALIGN_INDIRECT_REF:\n+\tcase INDIRECT_REF:\n+\t  *op0_p = build1 (op->opcode, op->type, NULL_TREE);\n+\t  op0_p = &TREE_OPERAND (*op0_p, 0);\n+\t  break;\n+\n+\tcase MISALIGNED_INDIRECT_REF:\n+\t  *op0_p = build2 (MISALIGNED_INDIRECT_REF, op->type,\n+\t\t\t   NULL_TREE, op->op0);\n+\t  op0_p = &TREE_OPERAND (*op0_p, 0);\n+\t  break;\n+\n+\tcase BIT_FIELD_REF:\n+\t  *op0_p = build3 (BIT_FIELD_REF, op->type, NULL_TREE,\n+\t\t\t   op->op0, op->op1);\n+\t  op0_p = &TREE_OPERAND (*op0_p, 0);\n+\t  break;\n+\n+\tcase COMPONENT_REF:\n+\t  *op0_p = build3 (COMPONENT_REF, TREE_TYPE (op->op0), NULL_TREE,\n+\t\t\t   op->op0, op->op1);\n+\t  op0_p = &TREE_OPERAND (*op0_p, 0);\n+\t  break;\n+\n+\tcase ARRAY_RANGE_REF:\n+\tcase ARRAY_REF:\n+\t  *op0_p = build4 (op->opcode, op->type, NULL_TREE,\n+\t\t\t   op->op0, op->op1, op->op2);\n+\t  op0_p = &TREE_OPERAND (*op0_p, 0);\n+\t  break;\n+\n+\tcase STRING_CST:\n+\tcase INTEGER_CST:\n+\tcase COMPLEX_CST:\n+\tcase VECTOR_CST:\n+\tcase REAL_CST:\n+\tcase CONSTRUCTOR:\n+\tcase VAR_DECL:\n+\tcase PARM_DECL:\n+\tcase CONST_DECL:\n+\tcase RESULT_DECL:\n+\tcase SSA_NAME:\n+\t  *op0_p = op->op0;\n+\t  break;\n+\n+\tcase ADDR_EXPR:\n+\t  if (op->op0 != NULL_TREE)\n+\t    {\n+\t      gcc_assert (is_gimple_min_invariant (op->op0));\n+\t      *op0_p = op->op0;\n+\t      break;\n+\t    }\n+\t  /* Fallthrough.  */\n+\tcase IMAGPART_EXPR:\n+\tcase REALPART_EXPR:\n+\tcase VIEW_CONVERT_EXPR:\n+\t  *op0_p = build1 (op->opcode, op->type, NULL_TREE);\n+\t  op0_p = &TREE_OPERAND (*op0_p, 0);\n+\t  break;\n+\n+\tdefault:\n+\t  return NULL_TREE;\n+\t}\n+    }\n+\n+  return ref;\n+}\n+\n /* Copy the operations present in load/store/call REF into RESULT, a vector of\n    vn_reference_op_s's.  */\n \n@@ -895,7 +983,7 @@ vn_reference_lookup_1 (vn_reference_t vr, vn_reference_t *vnresult)\n tree\n vn_reference_lookup_pieces (VEC (tree, gc) *vuses,\n \t\t\t    VEC (vn_reference_op_s, heap) *operands,\n-\t\t\t    vn_reference_t *vnresult) \n+\t\t\t    vn_reference_t *vnresult, bool maywalk)\n {\n   struct vn_reference_s vr1;\n   tree result;\n@@ -907,6 +995,28 @@ vn_reference_lookup_pieces (VEC (tree, gc) *vuses,\n   vr1.hashcode = vn_reference_compute_hash (&vr1);\n   result = vn_reference_lookup_1 (&vr1, vnresult);\n \n+  /* If there is a single defining statement for all virtual uses, we can\n+     use that, following virtual use-def chains.  */\n+  if (!result\n+      && maywalk\n+      && vr1.vuses\n+      && VEC_length (tree, vr1.vuses) >= 1)\n+    {\n+      tree ref = get_ref_from_reference_ops (operands);\n+      gimple def_stmt;\n+      if (ref\n+\t  && (def_stmt = get_def_ref_stmt_vuses (ref, vr1.vuses))\n+\t  && is_gimple_assign (def_stmt))\n+\t{\n+\t  /* We are now at an aliasing definition for the vuses we want to\n+\t     look up.  Re-do the lookup with the vdefs for this stmt.  */\n+\t  vdefs_to_vec (def_stmt, &vuses);\n+\t  vr1.vuses = valueize_vuses (vuses);\n+\t  vr1.hashcode = vn_reference_compute_hash (&vr1);\n+\t  result = vn_reference_lookup_1 (&vr1, vnresult);\n+\t}\n+    }\n+\n   return result;\n }\n "}, {"sha": "49baa761831d4847bbece91337f416ee196435db", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3815cc08c390d2aee47a252203d416304298c/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=53f3815cc08c390d2aee47a252203d416304298c", "patch": "@@ -178,7 +178,7 @@ void copy_reference_ops_from_ref (tree, VEC(vn_reference_op_s, heap) **);\n void copy_reference_ops_from_call (gimple, VEC(vn_reference_op_s, heap) **);\n tree vn_reference_lookup_pieces (VEC (tree, gc) *,\n \t\t\t\t VEC (vn_reference_op_s, heap) *,\n-\t\t\t\t vn_reference_t *);\n+\t\t\t\t vn_reference_t *, bool);\n tree vn_reference_lookup (tree, VEC (tree, gc) *, bool, vn_reference_t *);\n vn_reference_t vn_reference_insert (tree, tree, VEC (tree, gc) *);\n vn_reference_t vn_reference_insert_pieces (VEC (tree, gc) *,"}]}