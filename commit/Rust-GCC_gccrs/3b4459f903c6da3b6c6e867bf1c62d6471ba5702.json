{"sha": "3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I0NDU5ZjkwM2M2ZGEzYjZjNmU4NjdiZjFjNjJkNjQ3MWJhNTcwMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:25:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:25:05Z"}, "message": "var-tracking.c (add_uses): Take an rtx rather than an rtx *.\n\ngcc/\n\t* var-tracking.c (add_uses): Take an rtx rather than an rtx *.\n\tGive real type of data parameter.  Remove return value.\n\t(add_uses_1): Use FOR_EACH_SUBRTX_VAR rather than for_each_rtx\n\tto iterate over subrtxes.\n\nFrom-SVN: r214664", "tree": {"sha": "33ac4c3a6c83894fefa3b61a6610c1d3515e9298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33ac4c3a6c83894fefa3b61a6610c1d3515e9298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4459f903c6da3b6c6e867bf1c62d6471ba5702/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b328e73048fedb84ae4d79dee704193c07b81e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b328e73048fedb84ae4d79dee704193c07b81e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b328e73048fedb84ae4d79dee704193c07b81e19"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "93dac737c0bc2a1701ea93fb6f27f838b476e75c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4459f903c6da3b6c6e867bf1c62d6471ba5702/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4459f903c6da3b6c6e867bf1c62d6471ba5702/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* var-tracking.c (add_uses): Take an rtx rather than an rtx *.\n+\tGive real type of data parameter.  Remove return value.\n+\t(add_uses_1): Use FOR_EACH_SUBRTX_VAR rather than for_each_rtx\n+\tto iterate over subrtxes.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* var-tracking.c (use_narrower_mode_test): Turn from being a"}, {"sha": "792aacbf06ee770a0f5d37256b89ed32a53e174e", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4459f903c6da3b6c6e867bf1c62d6471ba5702/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4459f903c6da3b6c6e867bf1c62d6471ba5702/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "patch": "@@ -665,7 +665,6 @@ static void dataflow_set_destroy (dataflow_set *);\n static bool contains_symbol_ref (rtx);\n static bool track_expr_p (tree, bool);\n static bool same_variable_part_p (rtx, tree, HOST_WIDE_INT);\n-static int add_uses (rtx *, void *);\n static void add_uses_1 (rtx *, void *);\n static void add_stores (rtx, const_rtx, void *);\n static bool compute_bb_dataflow (basic_block);\n@@ -5552,14 +5551,12 @@ non_suitable_const (const_rtx x)\n }\n \n /* Add uses (register and memory references) LOC which will be tracked\n-   to VTI (bb)->mos.  INSN is instruction which the LOC is part of.  */\n+   to VTI (bb)->mos.  */\n \n-static int\n-add_uses (rtx *ploc, void *data)\n+static void\n+add_uses (rtx loc, struct count_use_info *cui)\n {\n-  rtx loc = *ploc;\n   enum machine_mode mode = VOIDmode;\n-  struct count_use_info *cui = (struct count_use_info *)data;\n   enum micro_operation_type type = use_type (loc, cui, &mode);\n \n   if (type != MO_CLOBBER)\n@@ -5705,16 +5702,16 @@ add_uses (rtx *ploc, void *data)\n \tlog_op_type (mo.u.loc, cui->bb, cui->insn, mo.type, dump_file);\n       VTI (bb)->mos.safe_push (mo);\n     }\n-\n-  return 0;\n }\n \n /* Helper function for finding all uses of REG/MEM in X in insn INSN.  */\n \n static void\n add_uses_1 (rtx *x, void *cui)\n {\n-  for_each_rtx (x, add_uses, cui);\n+  subrtx_var_iterator::array_type array;\n+  FOR_EACH_SUBRTX_VAR (iter, array, *x, NONCONST)\n+    add_uses (*iter, (struct count_use_info *) cui);\n }\n \n /* This is the value used during expansion of locations.  We want it"}]}