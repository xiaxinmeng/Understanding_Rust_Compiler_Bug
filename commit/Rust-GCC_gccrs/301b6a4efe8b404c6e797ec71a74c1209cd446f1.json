{"sha": "301b6a4efe8b404c6e797ec71a74c1209cd446f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAxYjZhNGVmZThiNDA0YzZlNzk3ZWM3MWE3NGMxMjA5Y2Q0NDZmMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-01-07T18:26:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-01-07T18:26:39Z"}, "message": "i386.c (ix86_target_string): Use ARRAY_SIZE.\n\n\t* config/i386/i386.c (ix86_target_string): Use ARRAY_SIZE.\n\t(ix86_target_string): Ditto.\n\t(ix86_valid_target_attribute_inner_p): Ditto.\n\nFrom-SVN: r143164", "tree": {"sha": "1e9cd070fe39300698c054fc8dbdefec84ecd206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e9cd070fe39300698c054fc8dbdefec84ecd206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/301b6a4efe8b404c6e797ec71a74c1209cd446f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301b6a4efe8b404c6e797ec71a74c1209cd446f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301b6a4efe8b404c6e797ec71a74c1209cd446f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301b6a4efe8b404c6e797ec71a74c1209cd446f1/comments", "author": null, "committer": null, "parents": [{"sha": "51790821844bf1a9a86f699f9a1849154fbf73ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51790821844bf1a9a86f699f9a1849154fbf73ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51790821844bf1a9a86f699f9a1849154fbf73ac"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "03338fcfa523fe27cad0c128886b7be4f5737a7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301b6a4efe8b404c6e797ec71a74c1209cd446f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301b6a4efe8b404c6e797ec71a74c1209cd446f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=301b6a4efe8b404c6e797ec71a74c1209cd446f1", "patch": "@@ -1,3 +1,9 @@\n+2009-01-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_target_string): Use ARRAY_SIZE.\n+\t(ix86_target_string): Ditto.\n+\t(ix86_valid_target_attribute_inner_p): Ditto.\n+\n 2009-01-07  Jan Sjodin  <jan.sjodin@amd.com>\n \n \tPR tree-optimization/38492\n@@ -94,7 +100,7 @@\n 2009-01-06  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/38744\n-\t* i386.c (ix86_expand_call): Use ARRAY_SIZE\n+\t* i386.c (ix86_expand_call): Use ARRAY_SIZE.\n \n 2009-01-06  Gerald Pfeifer  <gerald@pfeifer.com>\n \n@@ -116,8 +122,8 @@\n \t(ix86_nsaved_sseregs): New.\n \t(ix86_compute_frame_layout): Update nsseregs; set preferred alignment\n \tto 16 for w64; compute padding and size of sse reg save area.\n-\t(ix86_emit_save_regs, ix86_emit_save_regs_using_mov): Save only general\n-\tpurpose regs.\n+\t(ix86_emit_save_regs, ix86_emit_save_regs_using_mov): Save only\n+\tgeneral purpose regs.\n \t(ix86_emit_save_sse_regs_using_mov): New.\n \t(ix86_expand_prologue): Save SSE regs if needed.\n \t(ix86_emit_restore_regs_using_mov): Use only general purpose regs.\n@@ -128,8 +134,8 @@\n \t    Kai Tietz <kai.tietz@onevision.com>\n \n \t* i386.h (ACCUMULATE_OUTGOING_ARGS): Enable for MSABI\n-\t* i386.c (init_cumulative_args): Disallow calls of MSABI functions when\n-\taccumulate outgoing args is off.\n+\t* i386.c (init_cumulative_args): Disallow calls of MSABI functions\n+\twhen accumulate outgoing args is off.\n \n 2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -182,8 +188,7 @@\n \t(ira_build_conflicts): Use ira_conflicts_p.  Check result of\n \tbuilding conflict table.\n \n-\t* ira-color.c (fast_allocation): Use num instead of\n-\tira_allocnos_num.\n+\t* ira-color.c (fast_allocation): Use num instead of ira_allocnos_num.\n \t(ira_color): Use ira_conflicts_p.\n \t\n \t* global.c: Include ira.h.\n@@ -208,8 +213,7 @@\n \n \t* reload1.c (compute_use_by_pseudos, reload, count_pseudo,\n \tcount_spilled_pseudo, find_reg, alter_reg, finish_spills,\n-\temit_input_reload_insns, delete_output_reload): Use\n-\tira_conflicts_p.\n+\temit_input_reload_insns, delete_output_reload): Use ira_conflicts_p.\n \t\n 2009-01-06  Ben Elliston  <bje@au.ibm.com>\n \n@@ -225,9 +229,9 @@\n \n \tPR tree-optimization/38492\n \t* graphite.c (rename_map_elt, debug_rename_elt,\n-        debug_rename_map_1, debug_rename_map, new_rename_map_elt,\n-        rename_map_elt_info, eq_rename_map_elts,\n-        get_new_name_from_old_name, bb_in_sese_p): Moved around.\n+\tdebug_rename_map_1, debug_rename_map, new_rename_map_elt,\n+\trename_map_elt_info, eq_rename_map_elts,\n+\tget_new_name_from_old_name, bb_in_sese_p): Moved around.\n \t(sese_find_uses_to_rename_use): Renamed sese_build_livein_liveouts_use.\n \t(sese_find_uses_to_rename_bb): Renamed sese_build_livein_liveouts_bb.\n \t(sese_build_livein_liveouts): New.\n@@ -247,7 +251,7 @@\n \t(gloog): Call scop_adjust_phis_for_liveouts.\n \n \t* graphite.h (struct sese): Documented.  Added fields liveout,\n-        num_ver and livein.\n+\tnum_ver and livein.\n \t(SESE_LIVEOUT, SESE_LIVEIN, SESE_LIVEIN_VER, SESE_NUM_VER): New.\n \t(new_sese, free_sese, sese_build_livein_liveouts): Declared.\n \t(struct scop): Added field liveout_renames.\n@@ -338,7 +342,7 @@\n \t* config/mips/sync.md (memory_barrier): Redefine as expander pattern.\n \tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n \tSet volatile flag on operand 0.\n-\t(*memory_barrier): New insn pattern.\n+\t(*mb_internal): New insn pattern.\n \n \t* config/alpha/sync.md (*memory_barrier): Rename from *mb_internal.\n "}, {"sha": "6a31bbf48837e87156e9c49138c546e3d59d6fea", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301b6a4efe8b404c6e797ec71a74c1209cd446f1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301b6a4efe8b404c6e797ec71a74c1209cd446f1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=301b6a4efe8b404c6e797ec71a74c1209cd446f1", "patch": "@@ -2306,9 +2306,7 @@ ix86_target_string (int isa, int flags, const char *arch, const char *tune,\n     { \"-mtls-direct-seg-refs\",\t\tMASK_TLS_DIRECT_SEG_REFS },\n   };\n \n-  const char *opts[ (sizeof (isa_opts) / sizeof (isa_opts[0])\n-\t\t     + sizeof (flag_opts) / sizeof (flag_opts[0])\n-\t\t     + 6)][2];\n+  const char *opts[ARRAY_SIZE (isa_opts) + ARRAY_SIZE (flag_opts) + 6][2];\n \n   char isa_other[40];\n   char target_other[40];\n@@ -2337,7 +2335,7 @@ ix86_target_string (int isa, int flags, const char *arch, const char *tune,\n     }\n \n   /* Pick out the options in isa options.  */\n-  for (i = 0; i < sizeof (isa_opts) / sizeof (isa_opts[0]); i++)\n+  for (i = 0; i < ARRAY_SIZE (isa_opts); i++)\n     {\n       if ((isa & isa_opts[i].mask) != 0)\n \t{\n@@ -2353,7 +2351,7 @@ ix86_target_string (int isa, int flags, const char *arch, const char *tune,\n     }\n \n   /* Add flag options.  */\n-  for (i = 0; i < sizeof (flag_opts) / sizeof (flag_opts[0]); i++)\n+  for (i = 0; i < ARRAY_SIZE (flag_opts); i++)\n     {\n       if ((flags & flag_opts[i].mask) != 0)\n \t{\n@@ -2379,7 +2377,7 @@ ix86_target_string (int isa, int flags, const char *arch, const char *tune,\n   if (num == 0)\n     return NULL;\n \n-  gcc_assert (num < sizeof (opts) / sizeof (opts[0]));\n+  gcc_assert (num < ARRAY_SIZE (opts));\n \n   /* Size the string.  */\n   len = 0;\n@@ -3526,7 +3524,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[])\n       /* Find the option.  */\n       ch = *p;\n       opt = N_OPTS;\n-      for (i = 0; i < sizeof (attrs) / sizeof (attrs[0]); i++)\n+      for (i = 0; i < ARRAY_SIZE (attrs); i++)\n \t{\n \t  type = attrs[i].type;\n \t  opt_len = attrs[i].len;"}]}