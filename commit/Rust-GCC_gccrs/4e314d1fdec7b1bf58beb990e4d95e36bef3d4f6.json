{"sha": "4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUzMTRkMWZkZWM3YjFiZjU4YmViOTkwZTRkOTVlMzZiZWYzZDRmNg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-07-04T05:03:02Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-07-04T05:03:02Z"}, "message": "linux.h: Add #undef for SUBTARGET_CPP_SPEC.\n\n2002-07-03  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/linux.h: Add #undef for SUBTARGET_CPP_SPEC.\n\t* config/mips/mips.h: Remove deprecated -m<processor> options\n\tand cc1_cpu_spec associated.\n\t(CONSTANT_ADDRESS_P): Fix last patch.\n\t(ASM_DECLARE_FUNCTION_NAME): Declare. Fix comment.\n\t* config/mips/mips.md (bungt, bunge, sungt_df, sungt_sf, sunge_df,\n\tsunge_sf): Remove.\n\nFrom-SVN: r55233", "tree": {"sha": "48e9e97543eb7541a71100de52849730350ffdc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48e9e97543eb7541a71100de52849730350ffdc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/comments", "author": null, "committer": null, "parents": [{"sha": "ec4d88f90749c254a914f05aebe27b70b6a677b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4d88f90749c254a914f05aebe27b70b6a677b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec4d88f90749c254a914f05aebe27b70b6a677b7"}], "stats": {"total": 141, "additions": 29, "deletions": 112}, "files": [{"sha": "b3d7c0956a7df6d527266aab6a54644fe363d8c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "patch": "@@ -1,3 +1,13 @@\n+2002-07-03  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/linux.h: Add #undef for SUBTARGET_CPP_SPEC.\n+\t* config/mips/mips.h: Remove deprecated -m<processor> options\n+\tand cc1_cpu_spec associated.\n+\t(CONSTANT_ADDRESS_P): Fix last patch.\n+\t(ASM_DECLARE_FUNCTION_NAME): Declare. Fix comment.\n+\t* config/mips/mips.md (bungt, bunge, sungt_df, sungt_sf, sunge_df,\n+\tsunge_sf): Remove.\n+\n 2002-07-03  Stan Shebs  <shebs@apple.com>\n \n \t* config/darwin.h (APPLE_CC): Remove, not meaningful in FSF GCC.\n@@ -100,7 +110,7 @@ Wed Jul  3 10:24:16 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* cpptrad.c: Update comment.\n \n 2002-07-02  Neil Booth  <neil@daikokuya.co.uk>\n-\t\n+\n \t* doc/cpp.texi: Update for traditional preprocessing changes.\n \t* goc/cppopts.texi: Similarly.\n \n@@ -118,7 +128,7 @@ Tue Jul  2 18:45:45 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* sh.c (print_operand, case 'N'): Allow zero vector.\n \t(arith_reg_or_0_operand): Likewise.\n \t(zero_vec_operand): Check for CONST_VECTOR, not PARALLEL.\n-\t* sh.h (CONST_COSTS): 0 has 0 cost.  Check OUTER_CODE for \n+\t* sh.h (CONST_COSTS): 0 has 0 cost.  Check OUTER_CODE for\n \tIOR, XOR, PLUS and SET and take their respective constant\n \tranges into account.\n \t(PREDICATE_CODES, arith_reg_or_0_operand): Can be CONST_VECTOR.\n@@ -290,7 +300,7 @@ Fri Jun 28 17:22:37 2002  Denis Chertykov  <denisc@overta.ru>\n \t\t\t  Alan Lehotsky <apl@alum.mit.edu>\n \t\t\t  Bernd Schmidt  <bernds@redhat.com>\n \t\t\t  Graham Stott  <grahams@redhat.com>\n-\t\t\t  \n+\n \t* doc/extend.texi: Add ip2k port to description of attribute\n \tnaked.\n \t* doc/install.texi (Specific): Add ip2k description.\n@@ -411,7 +421,7 @@ Fri Jun 28 17:22:37 2002  Denis Chertykov  <denisc@overta.ru>\n \t* config/m68hc11/m68hc11.md (\"*addsi3\"): Use 'o' constraint to\n \tavoid the auto increment addressing modes.\n \t(\"*subsi3\"): Likewise.\n-\t(split for add/sub on address): For 68HC12 push the value on \n+\t(split for add/sub on address): For 68HC12 push the value on\n \tthe stack and do the operation with a pop.\n \n 2002-06-28  Neil Booth  <neil@daikokuya.co.uk>\n@@ -512,7 +522,7 @@ Fri Jun 28 17:22:37 2002  Denis Chertykov  <denisc@overta.ru>\n 2002-06-27  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* gcse.c (hoist_code): Rewrite to only get list of dominated\n-\tblocks once per BB. Also fix reversed test (by removing need for \n+\tblocks once per BB. Also fix reversed test (by removing need for\n \tthe test at all).\n \n 2002-06-27  Neil Booth  <neil@daikokuya.co.uk>\n@@ -587,7 +597,7 @@ Tue Jun 25 21:51:13 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* optabs.c (expand_vector_binop, expand_vector_unop): Don't assume\n \tGET_MODE_UNIT_SIZE (mode) == UNITS_PER_WORD.\n \n-\t* config/sh/lib1funcs.asm (udivdi3): Make first divide step \n+\t* config/sh/lib1funcs.asm (udivdi3): Make first divide step\n \tproduce a 32 bit result before normalization, then normalize with a\n \tleft shift.  Compute approximative error of 2nd reciprocal\n \tapproximation in 2's complement.  Fix mask generation from upper\n@@ -644,7 +654,7 @@ Mon Jun 24 21:05:09 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* doc/extend.texi: Change `@dots{}' to `/* @r{@dots{}} */'\n \tin examples.\n-\t\n+\n 2002-06-24  Art Haas  <ahaas@neosoft.com>\n \n \t* doc/extend.texi (Other Builtins): Change `...' to `@dots{}'.\n@@ -1010,7 +1020,7 @@ Thu Jun 20 12:14:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* i386.md (xorqi_1_slp, xorqi_2_slp): New patterns.\n \n 2002-06-16  Aldy Hernandez  <aldyh@redhat.com>\n-\t\n+\n \t* gcc.c-torture/execute/simd-1.c: New.\n \n \t* gcc.dg/simd-1.c: New.\n@@ -1040,7 +1050,7 @@ Thu Jun 20 12:14:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(expand_unop): Open-code vector unops.\n \t(expand_vector_binop): New.\n \t(expand_vector_unop): New.\n-\t\n+\n \t* c-typeck.c (build_binary_op): Allow vectors in binops.\n \tAllow vectors in conditional operatiors.\n \t(build_unary_op): Allow vectors in unary minus."}, {"sha": "ca04bf61b9542cd8ee27c49822470b9e7c169807", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "patch": "@@ -171,6 +171,7 @@ void FN ()\t\t\t\t\t\t\t\\\n         builtin_define (\"_MIPS_SZINT=32\");\t\t\t\\\n } while (0)\n \n+#undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC \"\\\n %{fno-PIC:-U__PIC__ -U__pic__} %{fno-pic:-U__PIC__ -U__pic__} \\\n %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} \\"}, {"sha": "0d551bcf7092f2747215508682febf690b5dce60", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "patch": "@@ -561,10 +561,6 @@ extern void\t\tsbss_section PARAMS ((void));\n      N_(\"Work around early 4300 hardware bug\")},\t\t\t\\\n   {\"no-fix4300\",         -MASK_4300_MUL_FIX,\t\t\t\t\\\n      N_(\"Don't work around early 4300 hardware bug\")},\t\t\t\\\n-  {\"3900\",\t\t  0,\t\t\t\t                \\\n-     N_(\"Optimize for 3900\")},\t\t\t\t\t\t\\\n-  {\"4650\",\t\t  0,                    \t\t\t\\\n-     N_(\"Optimize for 4650\")},\t\t\t\t\t\t\\\n   {\"check-zero-division\",-MASK_NO_CHECK_ZERO_DIV,\t\t\t\\\n      N_(\"Trap on integer divide by zero\")},\t\t\t\t\\\n   {\"no-check-zero-division\", MASK_NO_CHECK_ZERO_DIV,\t\t\t\\\n@@ -1044,16 +1040,6 @@ extern int mips_abi;\n #define SUBTARGET_CC1_SPEC \"\"\n #endif\n \n-/* Deal with historic options.  */\n-#ifndef CC1_CPU_SPEC\n-#define CC1_CPU_SPEC \"\\\n-%{!mcpu*: \\\n-%{m3900:-march=r3900 -mips1 -mfp32 -mgp32 \\\n-%n`-m3900' is deprecated. Use `-march=r3900' instead.\\n} \\\n-%{m4650:-march=r4650 -mmad -msingle-float \\\n-%n`-m4650' is deprecated. Use `-march=r4650' instead.\\n}}\"\n-#endif\n-\n /* CC1_SPEC is the set of arguments to pass to the compiler proper.  */\n /* Note, we will need to adjust the following if we ever find a MIPS variant\n    that has 32-bit GPRs and 64-bit FPRs as well as fix all of the reload bugs\n@@ -1073,8 +1059,7 @@ extern int mips_abi;\n %{mgp32: %{mfp64:%emay not use both -mgp32 and -mfp64} %{!mfp32: -mfp32}} \\\n %{G*} %{EB:-meb} %{EL:-mel} %{EB:%{EL:%emay not use both -EB and -EL}} \\\n %{save-temps: } \\\n-%(subtarget_cc1_spec) \\\n-%(cc1_cpu_spec)\"\n+%(subtarget_cc1_spec)\"\n #endif\n \n /* Preprocessor specs.  */\n@@ -1099,7 +1084,6 @@ extern int mips_abi;\n \n #define EXTRA_SPECS\t\t\t\t\t\t\t\\\n   { \"subtarget_cc1_spec\", SUBTARGET_CC1_SPEC },\t\t\t\t\\\n-  { \"cc1_cpu_spec\", CC1_CPU_SPEC},                                      \\\n   { \"subtarget_cpp_spec\", SUBTARGET_CPP_SPEC },\t\t\t\t\\\n   { \"mips_as_asm_spec\", MIPS_AS_ASM_SPEC },\t\t\t\t\\\n   { \"gas_asm_spec\", GAS_ASM_SPEC },\t\t\t\t\t\\\n@@ -2989,9 +2973,10 @@ typedef struct mips_args {\n     || GET_CODE (X) == CONST_INT || GET_CODE (X) == HIGH\t\t\\\n     || (GET_CODE (X) == CONST\t\t\t\t\t\t\\\n \t&& ! (flag_pic && pic_address_needs_scratch (X))\t\t\\\n-\t&& (!TARGET_GAS)\t\t\t\t\t\t\\\n-\t&& (mips_abi == ABI_N32\t\t\t\t\t\t\\\n-\t    || mips_abi == ABI_64)))\n+\t&& (TARGET_GAS)\t\t\t\t\t\t\t\\\n+\t&& (mips_abi != ABI_N32 \t\t\t\t\t\\\n+\t    && mips_abi != ABI_64)))\n+\n \n /* Define this, so that when PIC, reload won't try to reload invalid\n    addresses which require two reload registers.  */\n@@ -4275,11 +4260,12 @@ do {\t\t\t\t\t\t\t\\\n /* This is how to declare a function name.  The actual work of\n    emitting the label is moved to function_prologue, so that we can\n    get the line number correctly emitted before the .ent directive,\n-   and after any .file directives.  */\n-/*\n+   and after any .file directives.  Define to NULL so that the function\n+   is not declared before the .ent directive elsewhere.  */\n+\n #undef ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(STREAM,NAME,DECL)\n-*/\n+\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "46c673740657359bd254b637198a8962744b2204", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4e314d1fdec7b1bf58beb990e4d95e36bef3d4f6", "patch": "@@ -8095,22 +8095,6 @@ move\\\\t%0,%z4\\\\n\\\\\n      }\n }\")\n \n-(define_expand \"bungt\"\n-  [(set (pc)\n-\t(if_then_else (ungt:CC (cc0)\n-\t\t\t       (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n-  \"\"\n-  \"\n-{\n-  if (operands[0])\t\t/* avoid unused code warning */\n-     {\n-\tgen_conditional_branch (operands, UNGT);\n-\tDONE;\n-     }\n-}\")\n-\n (define_expand \"bunlt\"\n   [(set (pc)\n \t(if_then_else (unlt:CC (cc0)\n@@ -8143,22 +8127,6 @@ move\\\\t%0,%z4\\\\n\\\\\n      }\n }\")\n \n-(define_expand \"bunge\"\n-  [(set (pc)\n-\t(if_then_else (unge:CC (cc0)\n-\t\t\t       (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n-  \"\"\n-  \"\n-{\n-  if (operands[0])\t\t/* avoid unused code warning */\n-     {\n-\tgen_conditional_branch (operands, UNGE);\n-\tDONE;\n-     }\n-}\")\n-\n (define_expand \"bunle\"\n   [(set (pc)\n \t(if_then_else (unle:CC (cc0)\n@@ -9255,18 +9223,6 @@ move\\\\t%0,%z4\\\\n\\\\\n  [(set_attr \"type\"      \"fcmp\")\n   (set_attr \"mode\"      \"FPSW\")])\n \n-(define_insn \"sungt_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(ungt:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"*\n-{\n- return mips_fill_delay_slot (\\\"c.ugt.d\\\\t%Z0%1,%2\\\", DELAY_FCMP, operands, insn);\n-}\"\n- [(set_attr \"type\"      \"fcmp\")\n-  (set_attr \"mode\"      \"FPSW\")])\n-\n (define_insn \"sunlt_df\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n \t(unlt:CC (match_operand:DF 1 \"register_operand\" \"f\")\n@@ -9291,18 +9247,6 @@ move\\\\t%0,%z4\\\\n\\\\\n  [(set_attr \"type\"      \"fcmp\")\n   (set_attr \"mode\"      \"FPSW\")])\n \n-(define_insn \"sunge_df\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unge:CC (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"*\n-{\n- return mips_fill_delay_slot (\\\"c.uge.d\\\\t%Z0%1,%2\\\", DELAY_FCMP, operands, insn);\n-}\"\n- [(set_attr \"type\"      \"fcmp\")\n-  (set_attr \"mode\"      \"FPSW\")])\n-\n (define_insn \"sunle_df\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n \t(unle:CC (match_operand:DF 1 \"register_operand\" \"f\")\n@@ -9399,18 +9343,6 @@ move\\\\t%0,%z4\\\\n\\\\\n  [(set_attr \"type\"\t\"fcmp\")\n   (set_attr \"mode\"\t\"FPSW\")])\n \n-(define_insn \"sungt_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(ungt:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"*\n-{\n- return mips_fill_delay_slot (\\\"c.ugt.s\\\\t%Z0%1,%2\\\", DELAY_FCMP, operands, insn);\n-}\"\n- [(set_attr \"type\"      \"fcmp\")\n-  (set_attr \"mode\"      \"FPSW\")])\n-\n (define_insn \"sunlt_sf\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n \t(unlt:CC (match_operand:SF 1 \"register_operand\" \"f\")\n@@ -9435,18 +9367,6 @@ move\\\\t%0,%z4\\\\n\\\\\n  [(set_attr \"type\"      \"fcmp\")\n   (set_attr \"mode\"      \"FPSW\")])\n \n-(define_insn \"sunge_sf\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unge:CC (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"*\n-{\n- return mips_fill_delay_slot (\\\"c.uge.s\\\\t%Z0%1,%2\\\", DELAY_FCMP, operands, insn);\n-}\"\n- [(set_attr \"type\"      \"fcmp\")\n-  (set_attr \"mode\"      \"FPSW\")])\n-\n (define_insn \"sunle_sf\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n \t(unle:CC (match_operand:SF 1 \"register_operand\" \"f\")"}]}