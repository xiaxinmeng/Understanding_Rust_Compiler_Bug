{"sha": "5189dd41d88bebe4285daf52dfcf083eceafa2e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE4OWRkNDFkODhiZWJlNDI4NWRhZjUyZGZjZjA4M2VjZWFmYTJlMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-07-03T18:39:20Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-03T18:39:20Z"}, "message": "gfortran.texi, [...]: Fix typo.\n\n\t* gfortran.texi, intrinsic.texi: Fix typo.\n\t* symbol.c: Fix a comment typo.\n\nFrom-SVN: r101559", "tree": {"sha": "373b03bd6fc191ed73da6344a6741e2614014f52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/373b03bd6fc191ed73da6344a6741e2614014f52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5189dd41d88bebe4285daf52dfcf083eceafa2e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5189dd41d88bebe4285daf52dfcf083eceafa2e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5189dd41d88bebe4285daf52dfcf083eceafa2e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5189dd41d88bebe4285daf52dfcf083eceafa2e0/comments", "author": null, "committer": null, "parents": [{"sha": "619519c89aa6f32d2e39648d6674b0f667bf3de6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619519c89aa6f32d2e39648d6674b0f667bf3de6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619519c89aa6f32d2e39648d6674b0f667bf3de6"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "ae715c88919ae526bbe40f14475e08c8340c2370", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5189dd41d88bebe4285daf52dfcf083eceafa2e0", "patch": "@@ -1,3 +1,8 @@\n+2005-07-03  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gfortran.texi, intrinsic.texi: Fix typo.\n+\t* symbol.c: Fix a comment typo.\n+\n 2005-07-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* error.c (error_printf, error_print): Use ATTRIBUTE_GCC_GFC."}, {"sha": "a1bc8782705a5d2d78c09671f57c57cfcc8bc16e", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=5189dd41d88bebe4285daf52dfcf083eceafa2e0", "patch": "@@ -792,7 +792,7 @@ operators without the need for parenthesis.\n @section Implicitly interconvert LOGICAL and INTEGER\n @cindex Implicitly interconvert LOGICAL and INTEGER\n \n-As a GNU extension for backwards compatability with other compilers,\n+As a GNU extension for backwards compatibility with other compilers,\n @command{gfortran} allows the implicit conversion of LOGICALs to INTEGERs\n and vice versa.  When converting from a LOGICAL to an INTEGER, the numeric\n value of @code{.FALSE.} is zero, and that of @code{.TRUE.} is one.  When"}, {"sha": "3c65474ba89595af00b045f7e9b1d0aa5e1f5954", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=5189dd41d88bebe4285daf52dfcf083eceafa2e0", "patch": "@@ -64,7 +64,7 @@ and editing.  All contributions and corrections are strongly encouraged.\n * @code{CONJG}:         CONJG,     Complex conjugate function\n * @code{COS}:           COS,       Cosine function\n * @code{COSH}:          COSH,      Hyperbolic cosine function\n-* @code{COUNT}:         COUNT,     Count occurences of .TRUE. in an array\n+* @code{COUNT}:         COUNT,     Count occurrences of .TRUE. in an array\n * @code{CPU_TIME}:      CPU_TIME,  CPU time subroutine\n * @code{CSHIFT}:        CSHIFT,    Circular array shift function\n * @code{DATE_AND_TIME}: DATE_AND_TIME, Date and time subroutine\n@@ -1806,7 +1806,7 @@ subroutine\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n @item @var{DATE}  @tab (Optional) The type shall be @code{CHARACTER(8)} or larger.\n-@item @var{TIME}  @tab (OPtional) The type shall be @code{CHARACTER(10)} or larger.\n+@item @var{TIME}  @tab (Optional) The type shall be @code{CHARACTER(10)} or larger.\n @item @var{ZONE}  @tab (Optional) The type shall be @code{CHARACTER(5)} or larger.\n @item @var{VALUES}@tab (Optional) The type shall be @code{INTEGER(8)}.\n @end multitable\n@@ -2253,7 +2253,7 @@ rank of @var{ARRAY}.  If the rank of @var{ARRAY} is one, then all elements of\n @var{ARRAY} are shifted by @var{SHIFT} places.  If rank is greater than one,\n then all complete rank one sections of @var{ARRAY} along the given dimension are\n shifted.  Elements shifted out one end of each rank one section are dropped.  If\n-@var{BOUNDARY} is present then the cooresponding value of from @var{BOUNDARY}\n+@var{BOUNDARY} is present then the corresponding value of from @var{BOUNDARY}\n is copied back in the other end.  If @var{BOUNDARY} is not present then the\n following are copied in depending on the type of @var{ARRAY}.\n \n@@ -2511,7 +2511,7 @@ end program test_etime\n @table @asis\n @item @emph{Description}:\n @code{EXIT} causes immediate termination of the program with status.  If status\n-is omitted it returns the connonical @emph{success} for the system.  All Fortran\n+is omitted it returns the canonical @emph{success} for the system.  All Fortran\n I/O units are closed. \n \n @item @emph{Option}:"}, {"sha": "c2ee22375662a78f4b061b15166e7c58308ae109", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189dd41d88bebe4285daf52dfcf083eceafa2e0/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=5189dd41d88bebe4285daf52dfcf083eceafa2e0", "patch": "@@ -2342,7 +2342,7 @@ gfc_is_var_automatic (gfc_symbol * sym)\n   if (sym->attr.dimension && sym->as\n       && !gfc_is_compile_time_shape (sym->as))\n     return true;\n-  /* Check for non-constant length character vairables.  */\n+  /* Check for non-constant length character variables.  */\n   if (sym->ts.type == BT_CHARACTER\n       && sym->ts.cl\n       && gfc_is_constant_expr (sym->ts.cl->length))"}]}