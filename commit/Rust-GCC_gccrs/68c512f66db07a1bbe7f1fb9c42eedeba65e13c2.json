{"sha": "68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjNTEyZjY2ZGIwN2ExYmJlN2YxZmI5YzQyZWVkZWJhNjVlMTNjMg==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-02-23T20:42:53Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-02-23T20:42:53Z"}, "message": "abi.exp: Add multilib support.\n\n\t* testsuite/libstdc++-abi/abi.exp: Add multilib support.\n\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Remove MULTISUBDIR\n\tfrom baseline_dir.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.am (baseline_file): Remove variable.\n\t(site.exp): Set baseline_dir rather than baseline_file.\n\t(check-abi): Pass AM_RUNTESTFLAGS and RUNTESTFLAGS to runtest.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r144394", "tree": {"sha": "b6f99e2ab60a4ab043e34a027cfd31b619e36278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f99e2ab60a4ab043e34a027cfd31b619e36278"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/comments", "author": null, "committer": null, "parents": [{"sha": "2604de9d9fe19e7a210273e67b3236fa82c571b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2604de9d9fe19e7a210273e67b3236fa82c571b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2604de9d9fe19e7a210273e67b3236fa82c571b2"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "dbdcaf6f2ba59d355b12272b71930e51d259a6ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "patch": "@@ -1,3 +1,14 @@\n+2009-02-23  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* testsuite/libstdc++-abi/abi.exp: Add multilib support.\n+\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Remove MULTISUBDIR\n+\tfrom baseline_dir.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.am (baseline_file): Remove variable.\n+\t(site.exp): Set baseline_dir rather than baseline_file.\n+\t(check-abi): Pass AM_RUNTESTFLAGS and RUNTESTFLAGS to runtest.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2009-02-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/30_threads/thread/this_thread: Move..."}, {"sha": "186916c2e47e75b5c9ee07a35c2981414934e147", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "patch": "@@ -638,7 +638,7 @@ AC_DEFUN([GLIBCXX_CONFIGURE_TESTSUITE], [\n   fi\n   \n   # Export file names for ABI checking.\n-  baseline_dir=\"$glibcxx_srcdir/config/abi/post/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n+  baseline_dir=\"$glibcxx_srcdir/config/abi/post/${abi_baseline_pair}\"\n   AC_SUBST(baseline_dir)\n ])\n "}, {"sha": "3dd646931c824f669fb8d4cc79dfeaf8cde60598", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "patch": "@@ -117983,7 +117983,7 @@ done\n   fi\n \n   # Export file names for ABI checking.\n-  baseline_dir=\"$glibcxx_srcdir/config/abi/post/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n+  baseline_dir=\"$glibcxx_srcdir/config/abi/post/${abi_baseline_pair}\"\n \n \n "}, {"sha": "2f239ff99cbb1d1523e4ef554d3d229c3d928ae9", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "patch": "@@ -58,7 +58,7 @@ site.exp: Makefile\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n-\t@echo 'set baseline_file \"$(baseline_file)\"' >> site.tmp\n+\t@echo 'set baseline_dir \"$(baseline_dir)\"' >> site.tmp\n \t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n \t@test ! -f site.exp || \\\n \t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n@@ -67,7 +67,6 @@ site.exp: Makefile\n \t@mv site.tmp site.exp\n \n \n-baseline_file = ${baseline_dir}/baseline_symbols.txt\n extract_symvers = $(glibcxx_srcdir)/scripts/extract_symvers\n \n baseline_symbols:\n@@ -165,7 +164,7 @@ check-am:\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n check-abi: site.exp baseline_symbols \n-\t-@runtest --tool libstdc++ abi.exp\n+\t-@runtest $(AM_RUNTESTFLAGS) --tool libstdc++ $(RUNTESTFLAGS) abi.exp\n \n # Runs the testsuite, but in compile only mode.\n # Can be used to test sources with non-GNU FE's at various warning"}, {"sha": "47e93e13195d5493c97df975c55170e8ad904913", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "patch": "@@ -299,7 +299,6 @@ lists_of_files = \\\n    testsuite_files_interactive \\\n    testsuite_files_performance\n \n-baseline_file = ${baseline_dir}/baseline_symbols.txt\n extract_symvers = $(glibcxx_srcdir)/scripts/extract_symvers\n check_DEJAGNU_normal_targets = $(patsubst %,check-DEJAGNUnormal%,0 1 2 3)\n \n@@ -517,7 +516,7 @@ site.exp: Makefile\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n-\t@echo 'set baseline_file \"$(baseline_file)\"' >> site.tmp\n+\t@echo 'set baseline_dir \"$(baseline_dir)\"' >> site.tmp\n \t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n \t@test ! -f site.exp || \\\n \t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n@@ -618,7 +617,7 @@ check-am:\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n check-abi: site.exp baseline_symbols \n-\t-@runtest --tool libstdc++ abi.exp\n+\t-@runtest $(AM_RUNTESTFLAGS) --tool libstdc++ $(RUNTESTFLAGS) abi.exp\n check-compile: testsuite_files ${compile_script}\n \t-@(chmod + ${compile_script}; \\\n \t  ${compile_script} ${glibcxx_srcdir} ${glibcxx_builddir})"}, {"sha": "2c8da227a99cd7e9f57bdbe616384d072ce77642", "filename": "libstdc++-v3/testsuite/libstdc++-abi/abi.exp", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp?ref=68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "patch": "@@ -18,18 +18,32 @@\n # this test. Or, hey, if we don't support this kind of symbol\n # versioning test: don't run it.\n \n+set lib $blddir/src/.libs/libstdc++.so\n+set baseline_subdir \"[eval exec $cxx --print-multi-dir]\"\n+\n # Build the support objects.\n v3-build_support\n \n-if { (${v3-symver} == 0) || ![info exists baseline_file] \\\n-\t || ![file exists $baseline_file] \\\n-\t || ![file exists \"../src/.libs/libstdc++.so\"] } {\n+if { (${v3-symver} == 0) || ![info exists baseline_dir] \\\n+\t || ![file exists $baseline_dir] \\\n+\t || ![file exists $lib] } {\n+    return\n+}\n+\n+set baseline_file \\\n+    [file join $baseline_dir $baseline_subdir \"baseline_symbols.txt\"]\n+# If there is no ABI-specific reference file use that of the default ABI.\n+if ![file exists $baseline_file] {\n+    set baseline_file [file join $baseline_dir \"baseline_symbols.txt\"]\n+}\n+if ![file exists $baseline_file] {\n     return\n }\n+send_log \"Checking $lib against $baseline_file\\n\"\n \n # Figure out what symbols are defined by the active build of the library.\n remote_exec \"build\" \"$srcdir/../scripts/extract_symvers\" \\\n-    [list \"../src/.libs/libstdc++.so\" \"current_symbols.txt\"]\n+    [list $lib \"current_symbols.txt\"]\n \n # Build the abi_check program.\n if { [v3_target_compile \"$srcdir/util/testsuite_abi_check.cc\" \"abi_check\" \\"}]}