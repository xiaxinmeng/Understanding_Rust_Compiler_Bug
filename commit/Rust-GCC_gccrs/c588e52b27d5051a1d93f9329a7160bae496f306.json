{"sha": "c588e52b27d5051a1d93f9329a7160bae496f306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU4OGU1MmIyN2Q1MDUxYTFkOTNmOTMyOWE3MTYwYmFlNDk2ZjMwNg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-01-23T19:41:15Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-01-23T19:41:15Z"}, "message": "typeck2.c (friendly_abort): Delete definition.\n\n\t* typeck2.c (friendly_abort): Delete definition.\n\t* cp-tree.h (friendly_abort): Don't prototype.\n\t(my_friendly_assert): Use fancy_abort.\n\nFrom-SVN: r49152", "tree": {"sha": "e1a11a9505cceb21840c29c94ee9e4bb28a47c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1a11a9505cceb21840c29c94ee9e4bb28a47c13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c588e52b27d5051a1d93f9329a7160bae496f306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c588e52b27d5051a1d93f9329a7160bae496f306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c588e52b27d5051a1d93f9329a7160bae496f306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c588e52b27d5051a1d93f9329a7160bae496f306/comments", "author": null, "committer": null, "parents": [{"sha": "a63bea75b1dafe4d08a037576686652ca30286e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a63bea75b1dafe4d08a037576686652ca30286e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a63bea75b1dafe4d08a037576686652ca30286e8"}], "stats": {"total": 47, "additions": 13, "deletions": 34}, "files": [{"sha": "2b9bef58d883fb7196c0d74b15fd9fcbcf2a16df", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c588e52b27d5051a1d93f9329a7160bae496f306/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c588e52b27d5051a1d93f9329a7160bae496f306/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c588e52b27d5051a1d93f9329a7160bae496f306", "patch": "@@ -1,3 +1,9 @@\n+2002-01-23  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* typeck2.c (friendly_abort): Delete definition.\n+\t* cp-tree.h (friendly_abort): Don't prototype.\n+\t(my_friendly_assert): Use fancy_abort.\n+\n 2002-01-23  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \t* cp-tree.h (my_friendly_abort): Remove.\n@@ -17,9 +23,9 @@\n \n 2002-01-23  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n-\t* call.c, class.c, decl.c, decl2.c, error.c, expr.c, friend.c, \n-\tinit.c, lex.c, mangle.c, method.c, pt.c, repo.c, rtti.c, search.c, \n-\tsemantics.c, spew.c, tree.c, typeck.c, typeck2.c, xref.c: \n+\t* call.c, class.c, decl.c, decl2.c, error.c, expr.c, friend.c,\n+\tinit.c, lex.c, mangle.c, method.c, pt.c, repo.c, rtti.c, search.c,\n+\tsemantics.c, spew.c, tree.c, typeck.c, typeck2.c, xref.c:\n \tChange my_fancy_abort() to abort().\n \n 2002-01-23  Jason Merrill  <jason@redhat.com>\n@@ -171,7 +177,7 @@\n \t(BINDING_TYPE): Whitespace.\n \t(IDENTIFIER_GLOBAL_VALUE): Add parenthesis.\n \t(SET_IDENTIFIER_GLOBAL_VALUE): Likewise.\n-\t(IDENTIFIER_NAMESPACE_VALUE): Likewise. \n+\t(IDENTIFIER_NAMESPACE_VALUE): Likewise.\n \t(SET_IDENTIFIER_NAMESPACE_VALUE: Likewise.\n \t(same_type_p): Uppercase macro parameters.\n \t(same_type_ignoring_top_level_qualifiers_p): Likewise.\n@@ -380,7 +386,7 @@\n \tPR c++/5116, c++/764 reversion\n \t* call.c (build_new_op): Revert the instantiations. They are\n \tincorrect.\n-\t\n+\n 2002-01-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/5089\n@@ -462,7 +468,7 @@\n \t* cvt.c (convert_to_reference): Likewise.\n \t* semantics.c (setup_vtbl_ptr): Likewise.\n \t* pt.c (lookup_template_class): Comment typo.\n-\t\n+\n 2001-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/5125"}, {"sha": "f7cddacef7ee45c1f7b76dfbcf2c70dfd21e3180", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c588e52b27d5051a1d93f9329a7160bae496f306/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c588e52b27d5051a1d93f9329a7160bae496f306/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c588e52b27d5051a1d93f9329a7160bae496f306", "patch": "@@ -4349,12 +4349,9 @@ extern tree error_not_base_type\t\t\tPARAMS ((tree, tree));\n extern tree binfo_or_else\t\t\tPARAMS ((tree, tree));\n extern void readonly_error\t\t\tPARAMS ((tree, const char *, int));\n extern int abstract_virtuals_error\t\tPARAMS ((tree, tree));\n-extern void friendly_abort\t\t\tPARAMS ((int, const char *,\n-\t\t\t\t\t\t\t int, const char *))\n-  ATTRIBUTE_NORETURN;\n \n #define my_friendly_assert(EXP, N) (void) \\\n- (((EXP) == 0) ? (friendly_abort (N, __FILE__, __LINE__, __FUNCTION__), 0) : 0)\n+ (((EXP) == 0) ? (fancy_abort (__FILE__, __LINE__, __FUNCTION__), 0) : 0)\n \n extern tree store_init_value\t\t\tPARAMS ((tree, tree));\n extern tree digest_init\t\t\t\tPARAMS ((tree, tree, tree *));"}, {"sha": "1e93e62a621cd94210bb88a677c62e76696fae7c", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c588e52b27d5051a1d93f9329a7160bae496f306/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c588e52b27d5051a1d93f9329a7160bae496f306/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=c588e52b27d5051a1d93f9329a7160bae496f306", "patch": "@@ -252,30 +252,6 @@ incomplete_type_error (value, type)\n     }\n }\n \n-/* This is a wrapper around fancy_abort, as used in the back end and\n-   other front ends.  It will also report the magic number assigned to\n-   this particular abort.  That is for backward compatibility with the\n-   old C++ abort handler, which would just report the magic number.  */\n-void\n-friendly_abort (where, file, line, func)\n-     int where;\n-     const char *file;\n-     int line;\n-     const char *func;\n-{\n-  if (errorcount > 0 || sorrycount > 0)\n-    /* Say nothing.  */;\n-  else if (where > 0)\n-    {\n-      error (\"internal error #%d\", where);\n-\n-      /* Uncount this error, so internal_error will do the right thing.  */\n-      --errorcount;\n-    }\n-\n-  fancy_abort (file, line, func);\n-}\n-\n \f\n /* Perform appropriate conversions on the initial value of a variable,\n    store it in the declaration DECL,"}]}