{"sha": "95fef11f10dba7a1b0cc33825748f412b2da10b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVmZWYxMWYxMGRiYTdhMWIwY2MzMzgyNTc0OGY0MTJiMmRhMTBiOA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-01-18T02:10:34Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-01-18T02:10:34Z"}, "message": "contrib.texi, [...]: Consistently use \"GNU/Linux\" and \"Microsoft Windows\" terminology.\n\n\t* doc/contrib.texi, doc/cppenv.texi, doc/extend.texi,\n\tdoc/install.texi, doc/invoke.texi, doc/tm.texi: Consistently use\n\t\"GNU/Linux\" and \"Microsoft Windows\" terminology.\n\nFrom-SVN: r76078", "tree": {"sha": "7a4cb5312ced9c2457dc5f46f4852f1f5d3932d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a4cb5312ced9c2457dc5f46f4852f1f5d3932d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95fef11f10dba7a1b0cc33825748f412b2da10b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95fef11f10dba7a1b0cc33825748f412b2da10b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95fef11f10dba7a1b0cc33825748f412b2da10b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95fef11f10dba7a1b0cc33825748f412b2da10b8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ab51846c1f7e5ee34c2b8606e0d751b82ba4b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab51846c1f7e5ee34c2b8606e0d751b82ba4b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab51846c1f7e5ee34c2b8606e0d751b82ba4b33"}], "stats": {"total": 64, "additions": 35, "deletions": 29}, "files": [{"sha": "80ce8b57f25c050b89b0a51e20cf3901a0cd5b58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -1,3 +1,9 @@\n+2004-01-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* doc/contrib.texi, doc/cppenv.texi, doc/extend.texi,\n+\tdoc/install.texi, doc/invoke.texi, doc/tm.texi: Consistently use\n+\t\"GNU/Linux\" and \"Microsoft Windows\" terminology.\n+\n 2004-01-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* doc/c-tree.texi, doc/compat.texi, doc/cpp.texi,"}, {"sha": "0e44bdd23a48e92ab4886d84535aecf518c42584", "filename": "gcc/doc/contrib.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontrib.texi?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -1,5 +1,5 @@\n @c Copyright (C) 1988,1989,1992,1993,1994,1995,1996,1997,1998,1999,2000,\n-@c 2001,2002,2003 Free Software Foundation, Inc.\n+@c 2001,2002,2003,2004 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -55,7 +55,7 @@ Scott Bambrough for help porting the Java compiler.\n Wolfgang Bangerth for processing tons of bug reports.\n \n @item\n-Jon Beniston for his Windows port of Java.\n+Jon Beniston for his Microsoft Windows port of Java.\n \n @item\n Daniel Berlin for better DWARF2 support, faster/better optimizations,\n@@ -417,7 +417,7 @@ head maintainer of GCC for several years.\n \n @item\n Mumit Khan for various contributions to the Cygwin and Mingw32 ports and\n-maintaining binary releases for Windows hosts, and for massive libstdc++\n+maintaining binary releases for Microsoft Windows hosts, and for massive libstdc++\n porting work to Cygwin/Mingw32.\n \n @item\n@@ -515,7 +515,7 @@ for Java test code.\n Bryce McKinlay for numerous GCJ and libgcj fixes and improvements.\n \n @item\n-Adam Megacz for his work on the Windows port of GCJ.\n+Adam Megacz for his work on the Microsoft Windows port of GCJ.\n \n @item\n Michael Meissner for LRS framework, ia32, m32r, v850, m88k, MIPS,\n@@ -745,7 +745,7 @@ the LWG (thereby keeping us in line with updates from the ISO).\n \n @item\n Franz Sirl for his ongoing work with making the PPC port stable\n-for linux.\n+for GNU/Linux.\n \n @item\n Andrey Slepuhin for assorted AIX hacking."}, {"sha": "bb29cb2d1407d2f196cb55c94405d89c6ca39506", "filename": "gcc/doc/cppenv.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Fcppenv.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Fcppenv.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppenv.texi?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (c) 1999, 2000, 2001, 2002\n+@c Copyright (c) 1999, 2000, 2001, 2002, 2004\n @c Free Software Foundation, Inc.\n @c This is part of the CPP and GCC manuals.\n @c For copying conditions, see the file gcc.texi.\n@@ -20,7 +20,7 @@\n Each variable's value is a list of directories separated by a special\n character, much like @env{PATH}, in which to look for header files.\n The special character, @code{PATH_SEPARATOR}, is target-dependent and\n-determined at GCC build time.  For Windows-based targets it is a\n+determined at GCC build time.  For Microsoft Windows-based targets it is a\n semicolon, and for almost all other targets it is a colon.\n \n @env{CPATH} specifies a list of directories to be searched as if"}, {"sha": "e33d604da99f713490168464400105e8f0c3ba07", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -2636,9 +2636,9 @@ option.\n \n @item dllimport\n @cindex @code{__declspec(dllimport)}\n-On Windows targets, the @code{dllimport} attribute causes the compiler\n+On Microsoft Windows targets, the @code{dllimport} attribute causes the compiler\n to reference a function or variable via a global pointer to a pointer\n-that is set up by the Windows dll library. The pointer name is formed by\n+that is set up by the Microsoft Windows dll library. The pointer name is formed by\n combining @code{_imp__} and the function or variable name. The attribute\n implies @code{extern} storage.\n \n@@ -2656,7 +2656,7 @@ using thunks.\n \n On cygwin, mingw and arm-pe targets, @code{__declspec(dllimport)} is\n recognized as a synonym for @code{__attribute__ ((dllimport))} for\n-compatibility with other Windows compilers.\n+compatibility with other Microsoft Windows compilers.\n \n The use of the @code{dllimport} attribute on functions is not necessary,\n but provides a small performance benefit by eliminating a thunk in the\n@@ -2672,7 +2672,7 @@ attribute can be disabled for functions by setting the\n \n @item dllexport\n @cindex @code{__declspec(dllexport)}\n-On Windows targets the @code{dllexport} attribute causes the compiler to\n+On Microsoft Windows targets the @code{dllexport} attribute causes the compiler to\n provide a global pointer to a pointer in a dll, so that it can be\n referenced with the @code{dllimport} attribute. The pointer name is\n formed by combining @code{_imp__} and the function or variable name.\n@@ -2689,7 +2689,7 @@ out-of-class.\n \n On cygwin, mingw and arm-pe targets, @code{__declspec(dllexport)} is\n recognized as a synonym for @code{__attribute__ ((dllexport))} for\n-compatibility with other Windows compilers.\n+compatibility with other Microsoft Windows compilers.\n \n Alternative methods for including the symbol in the dll's export table\n are to use a .def file with an @code{EXPORTS} section or, with GNU ld,\n@@ -3299,7 +3299,7 @@ section, consider using the facilities of the linker instead.\n \n @item shared\n @cindex @code{shared} variable attribute\n-On Windows, in addition to putting variable definitions in a named\n+On Microsoft Windows, in addition to putting variable definitions in a named\n section, the section can also be shared among all running copies of an\n executable or DLL@.  For example, this small program defines shared data\n by putting it in a named section @code{shared} and marking the section\n@@ -3322,7 +3322,7 @@ You may only use the @code{shared} attribute along with @code{section}\n attribute with a fully initialized global definition because of the way\n linkers work.  See @code{section} attribute for more information.\n \n-The @code{shared} attribute is only available on Windows@.\n+The @code{shared} attribute is only available on Microsoft Windows@.\n \n @item tls_model (\"@var{tls_model}\")\n @cindex @code{tls_model} attribute\n@@ -3425,7 +3425,7 @@ data between functions compiled with GCC and the native Microsoft compiler\n (either via function call or as data in a file), it may be necessary to access\n either format.\n \n-Currently @option{-m[no-]ms-bitfields} is provided for the Windows X86\n+Currently @option{-m[no-]ms-bitfields} is provided for the Microsoft Windows X86\n compilers to match the native Microsoft compiler.\n @end table\n \n@@ -3721,7 +3721,7 @@ data between functions compiled with GCC and the native Microsoft compiler\n (either via function call or as data in a file), it may be necessary to access\n either format.\n \n-Currently @option{-m[no-]ms-bitfields} is provided for the Windows X86\n+Currently @option{-m[no-]ms-bitfields} is provided for the Microsoft Windows X86\n compilers to match the native Microsoft compiler.\n @end table\n \n@@ -7905,7 +7905,7 @@ but there are other options as well.\n @end table\n \n When used with GNU ld version 2.8 or later on an ELF system such as\n-Linux/GNU or Solaris 2, or on Microsoft Windows, duplicate copies of\n+GNU/Linux or Solaris 2, or on Microsoft Windows, duplicate copies of\n these constructs will be discarded at link time.  This is known as\n COMDAT support.\n \n@@ -8082,7 +8082,7 @@ compiled separately.\n @end table\n \n When used with GNU ld version 2.8 or later on an ELF system such as\n-Linux/GNU or Solaris 2, or on Microsoft Windows, g++ supports the\n+GNU/Linux or Solaris 2, or on Microsoft Windows, g++ supports the\n Borland model.  On other systems, g++ implements neither automatic\n model.\n "}, {"sha": "dd2947044f95aa2deed4f9928aaf837b39539012", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -1029,7 +1029,7 @@ use DWARF 2 debugging information as the default.\n @item --enable-win32-registry\n @itemx --enable-win32-registry=@var{key}\n @itemx --disable-win32-registry\n-The @option{--enable-win32-registry} option enables Windows-hosted GCC\n+The @option{--enable-win32-registry} option enables Microsoft Windows-hosted GCC\n to look up installations paths in the registry using the following key:\n \n @smallexample\n@@ -3222,13 +3222,13 @@ Embedded PowerPC system in little endian mode.\n <hr />\n @end html\n @heading @anchor{s390-*-linux*}s390-*-linux*\n-S/390 system running Linux for S/390@.\n+S/390 system running GNU/Linux for S/390@.\n \n @html\n <hr />\n @end html\n @heading @anchor{s390x-*-linux*}s390x-*-linux*\n-zSeries system (64-bit) running Linux for zSeries@.\n+zSeries system (64-bit) running GNU/Linux for zSeries@.\n \n @html\n <hr />"}, {"sha": "5c0080561a0210f131c649f03261c83475e94598", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -7178,7 +7178,7 @@ option are incompatible.\n @itemx -malign-power\n @opindex malign-natural\n @opindex malign-power\n-On AIX, Darwin, and 64-bit PowerPC Linux, the option\n+On AIX, Darwin, and 64-bit PowerPC GNU/Linux, the option\n @option{-malign-natural} overrides the ABI-defined alignment of larger\n types, such as floating-point doubles, on their natural size-based boundary.\n The option @option{-malign-power} instructs GCC to follow the ABI-specified\n@@ -9919,7 +9919,7 @@ Generate code for a big endian target.  This is the default for HP-UX@.\n @item -mlittle-endian\n @opindex mlittle-endian\n Generate code for a little endian target.  This is the default for AIX5\n-and Linux.\n+and GNU/Linux.\n \n @item -mgnu-as\n @itemx -mno-gnu-as\n@@ -10106,8 +10106,8 @@ which does not have this limitation.\n @opindex m64\n @opindex m31\n When @option{-m31} is specified, generate code compliant to the\n-Linux for S/390 ABI@.  When @option{-m64} is specified, generate\n-code compliant to the Linux for zSeries ABI@.  This allows GCC in\n+GNU/Linux for S/390 ABI@.  When @option{-m64} is specified, generate\n+code compliant to the GNU/Linux for zSeries ABI@.  This allows GCC in\n particular to generate 64-bit instructions.  For the @samp{s390}\n targets, the default is @option{-m31}, while the @samp{s390x}\n targets default to @option{-m64}.\n@@ -10121,9 +10121,9 @@ instructions available on z/Architecture.\n When @option{-mesa} is specified, generate code using the \n instructions available on ESA/390. Note that @option{-mesa} is\n not possible with @option{-m64}.\n-When generating code compliant to the Linux for S/390 ABI,\n+When generating code compliant to the GNU/Linux for S/390 ABI,\n the default is @option{-mesa}.  When generating code compliant\n-to the Linux for zSeries ABI, the default is @option{-mzarch}.\n+to the GNU/Linux for zSeries ABI, the default is @option{-mzarch}.\n \n @item -mmvcle\n @itemx -mno-mvcle"}, {"sha": "76a7b7eae5477c0875d609ef725a913b883c8339", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95fef11f10dba7a1b0cc33825748f412b2da10b8/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=95fef11f10dba7a1b0cc33825748f412b2da10b8", "patch": "@@ -8305,7 +8305,7 @@ call @code{merge_attributes} to handle machine-independent merging.\n \n @findex TARGET_DLLIMPORT_DECL_ATTRIBUTES\n If the only target-specific handling you require is @samp{dllimport} for\n-Windows targets, you should define the macro\n+Microsoft Windows targets, you should define the macro\n @code{TARGET_DLLIMPORT_DECL_ATTRIBUTES}.  This links in a function\n called @code{merge_dllimport_decl_attributes} which can then be defined\n as the expansion of @code{TARGET_MERGE_DECL_ATTRIBUTES}.  This is done\n@@ -9100,7 +9100,7 @@ lists.\n Define this macro to a C expression representing a variant of the\n method call @var{mdecl}, if Java Native Interface (JNI) methods\n must be invoked differently from other methods on your target.\n-For example, on 32-bit Windows, JNI methods must be invoked using\n+For example, on 32-bit Microsoft Windows, JNI methods must be invoked using\n the @code{stdcall} calling convention and this macro is then\n defined as this expression:\n "}]}