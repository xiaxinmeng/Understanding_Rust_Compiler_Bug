{"sha": "4fd9587f7c4b77550b6a9a1045e2687fb5d77335", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZkOTU4N2Y3YzRiNzc1NTBiNmE5YTEwNDVlMjY4N2ZiNWQ3NzMzNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-28T08:55:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-28T08:55:47Z"}, "message": "[Ada] Improve unnesting for discriminants of record subtypes\n\n2018-05-28  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Check_Static_Type): For a record subtype, check\n\tdiscriminant constraints as well.\n\t(Visit_Node): For a selected component, check type of prefix, as is\n\tdone for indexed components and slices.\n\nFrom-SVN: r260838", "tree": {"sha": "bf0df013ecdb5857a99d11f9c5679121b2fd556b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf0df013ecdb5857a99d11f9c5679121b2fd556b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fd9587f7c4b77550b6a9a1045e2687fb5d77335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd9587f7c4b77550b6a9a1045e2687fb5d77335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd9587f7c4b77550b6a9a1045e2687fb5d77335", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd9587f7c4b77550b6a9a1045e2687fb5d77335/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04920bb67f9d7014248beed823a6a4ac50dbedd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04920bb67f9d7014248beed823a6a4ac50dbedd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04920bb67f9d7014248beed823a6a4ac50dbedd4"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "f6689b592d0f5ea7c2d6adba043f228bda4ef63d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fd9587f7c4b77550b6a9a1045e2687fb5d77335/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fd9587f7c4b77550b6a9a1045e2687fb5d77335/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4fd9587f7c4b77550b6a9a1045e2687fb5d77335", "patch": "@@ -1,3 +1,10 @@\n+2018-05-28  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb (Check_Static_Type): For a record subtype, check\n+\tdiscriminant constraints as well.\n+\t(Visit_Node): For a selected component, check type of prefix, as is\n+\tdone for indexed components and slices.\n+\n 2018-05-28  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch4.adb (Real_Range_Check): Add a temporary to store the integer"}, {"sha": "f6d76503fe0385480ac655f73a9f18c87d73e2fb", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fd9587f7c4b77550b6a9a1045e2687fb5d77335/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fd9587f7c4b77550b6a9a1045e2687fb5d77335/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=4fd9587f7c4b77550b6a9a1045e2687fb5d77335", "patch": "@@ -481,17 +481,34 @@ package body Exp_Unst is\n                      end if;\n                   end;\n \n-               --  For record type, check all components\n+               --  For record type, check all components and discriminant\n+               --  constraints if present.\n \n                elsif Is_Record_Type (T) then\n                   declare\n                      C : Entity_Id;\n+                     D : Elmt_Id;\n+\n                   begin\n                      C := First_Component_Or_Discriminant (T);\n                      while Present (C) loop\n                         Check_Static_Type (Etype (C), N, DT);\n                         Next_Component_Or_Discriminant (C);\n                      end loop;\n+\n+                     if Has_Discriminants (T)\n+                       and then Present (Discriminant_Constraint (T))\n+                     then\n+                        D := First_Elmt (Discriminant_Constraint (T));\n+                        while Present (D) loop\n+                           if not Is_Static_Expression (Node (D)) then\n+                              Note_Uplevel_Bound (Node (D), N);\n+                              DT := True;\n+                           end if;\n+\n+                           Next_Elmt (D);\n+                        end loop;\n+                     end if;\n                   end;\n \n                --  For array type, check index types and component type\n@@ -685,6 +702,18 @@ package body Exp_Unst is\n                   Check_Static_Type (Etype (Prefix (N)), Empty, DT);\n                end;\n \n+            --  A selected component can have an implicit up-level reference\n+            --  due to the bounds of previous fields in the record. We\n+            --  simplify the processing here by examining all components\n+            --  of the record.\n+\n+            elsif Nkind (N) = N_Selected_Component then\n+               declare\n+                  DT : Boolean := False;\n+               begin\n+                  Check_Static_Type (Etype (Prefix (N)), Empty, DT);\n+               end;\n+\n             --  Record a subprogram. We record a subprogram body that acts as\n             --  a spec. Otherwise we record a subprogram declaration, providing\n             --  that it has a corresponding body we can get hold of. The case"}]}