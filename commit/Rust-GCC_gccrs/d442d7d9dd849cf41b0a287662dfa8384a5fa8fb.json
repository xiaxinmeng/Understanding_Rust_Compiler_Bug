{"sha": "d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0MmQ3ZDlkZDg0OWNmNDFiMGEyODc2NjJkZmE4Mzg0YTVmYThmYg==", "commit": {"author": {"name": "Phil Edwards", "email": "phil@codesourcery.com", "date": "2005-09-01T17:44:40Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2005-09-01T17:44:40Z"}, "message": "config.gcc (i*86-wrs-vxworks): Update.\n\n2005-08-30  Phil Edwards  <phil@codesourcery.com>\n\n\t* config.gcc (i*86-wrs-vxworks):  Update.  Split out vxworksae target.\n\t* config/i386/t-vxworks:  Update multilibs for VxWorks 6 and RTP mode.\n\t* config/i386/vxworks.h:  Likewise.\n\t* config/i386/t-vxworksae:  New file, for VxWorks AE.\n\t* config/i386/vxworksae.h:  Likewise.\n\nFrom-SVN: r103741", "tree": {"sha": "fd913f7e8553f232a29a1f2f3f996ad9e8de205d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd913f7e8553f232a29a1f2f3f996ad9e8de205d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/comments", "author": null, "committer": null, "parents": [{"sha": "d8852c4fd98c0852dd46898b2d89f315f862590b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8852c4fd98c0852dd46898b2d89f315f862590b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8852c4fd98c0852dd46898b2d89f315f862590b"}], "stats": {"total": 170, "additions": 115, "deletions": 55}, "files": [{"sha": "ef2be933f0f4e0e63fb58d3b4b83fc1f3af28cfc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "patch": "@@ -1,3 +1,11 @@\n+2005-09-01  Phil Edwards  <phil@codesourcery.com>\n+\n+\t* config.gcc (i*86-wrs-vxworks):  Update.  Split out vxworksae target.\n+\t* config/i386/t-vxworks:  Update multilibs for VxWorks 6 and RTP mode.\n+\t* config/i386/vxworks.h:  Likewise.\n+\t* config/i386/t-vxworksae:  New file, for VxWorks AE.\n+\t* config/i386/vxworksae.h:  Likewise.\n+\n 2005-09-01  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \tPR tree-optimization/23410"}, {"sha": "5b1b2e12c7b99f353a4b860e1846ffaaee8a4f2d", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "patch": "@@ -1169,9 +1169,18 @@ i[34567]86-*-sysv4*)\t\t# Intel 80386's running system V.4\n \textra_parts=\"crtbegin.o crtend.o\"\n \tuse_fixproto=yes\n \t;;\n-i[4567]86-wrs-vxworks)\n-\ttm_file=\"${tm_file} i386/sysv4.h i386/unix.h i386/vxworks.h\"\n-\ttmake_file=\"${tmake_file} i386/t-vxworks\"\n+i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n+\ttm_file=\"${tm_file} i386/sysv4.h i386/unix.h i386/att.h vx-common.h\"\n+\tcase ${target} in\n+\t  *-vxworksae*)\n+\t    tm_file=\"${tm_file} vxworksae.h i386/vxworksae.h\"\n+\t    tmake_file=\"${tmake_file} i386/t-vxworks i386/t-vxworksae\"\n+\t    ;;\n+\t  *)\n+\t    tm_file=\"${tm_file} vxworks.h i386/vxworks.h\"\n+\t    tmake_file=\"${tmake_file} i386/t-vxworks\"\n+\t    ;;\n+\tesac\n \t;;\n i[34567]86-*-pe | i[34567]86-*-cygwin*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h\""}, {"sha": "c440b1f903171412aca75f2e41c5ff88ce1ab412", "filename": "gcc/config/i386/t-vxworks", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-vxworks?ref=d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "patch": "@@ -1,8 +1,8 @@\n # Multilibs for VxWorks.\n \n-#GCC does not have an arch=pentium3 setting, so we cannot build PENTIUM3gnu\n-MULTILIB_OPTIONS  = \\\n-  march=i486/march=pentium/march=pentiumpro/march=pentium4\n-MULTILIB_DIRNAMES = \\\n-  I80486 PENTIUMgnu PENTIUM2gnu PENTIUM4gnu\n+# Build multilibs for normal, -mrtp, and -mrtp -fPIC.\n+MULTILIB_OPTIONS = mrtp fPIC\n+MULTILIB_DIRNAMES =\n+MULTILIB_MATCHES = fPIC=fpic\n+MULTILIB_EXCEPTIONS = fPIC\n "}, {"sha": "0cea2bbf331e57d24a6082e04b0f4160bd5a38c1", "filename": "gcc/config/i386/t-vxworksae", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Ft-vxworksae", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Ft-vxworksae", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-vxworksae?ref=d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "patch": "@@ -0,0 +1,5 @@\n+# Multilibs for VxWorks AE.\n+\n+MULTILIB_OPTIONS = mvthreads\n+MULTILIB_MATCHES =\n+MULTILIB_EXCEPTIONS = "}, {"sha": "dd4164ec96f7ef24b6efb0ea023327c8e0d88ee0", "filename": "gcc/config/i386/vxworks.h", "status": "modified", "additions": 58, "deletions": 47, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworks.h?ref=d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "patch": "@@ -1,5 +1,6 @@\n-/* Definitions of target machine for GCC.  VxWorks i586 version.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+/* IA32 VxWorks target definitions for GNU compiler.\n+   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Updated by CodeSourcery, LLC.\n \n This file is part of GCC.\n \n@@ -18,57 +19,67 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n-\n #define HANDLE_SYSV_PRAGMA 1\n \n #undef  TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (80586, VxWorks syntax)\");\n \n-/* Prefix for internally generated assembler labels.  If we aren't using\n-   underscores, we are using prefix `.'s to identify labels that should\n-   be ignored, as in `i386/gas.h' --karl@cs.umb.edu  */\n-\n-#define LPREFIX \"L\"\n-\n-/* Assembler pseudos to introduce constants of various size.  */\n-\n-#define ASM_SHORT \"\\t.word\\t\"\n-#define ASM_LONG \"\\t.long\\t\"\n-#define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n-\n-\n-#define ASM_OUTPUT_ALIGN(FILE,LOG) \\\n-  if ((LOG)!=0) fprintf ((FILE), \"\\t.balign %d\\n\", 1<<(LOG))\n-\n #undef  ASM_SPEC\n-#define ASM_SPEC \"%{v:-V} %{Qy:} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n-\n-#define TARGET_OS_CPP_BUILTINS()                        \\\n-  do                                                    \\\n-    {                                                   \\\n-      builtin_define (\"__vxworks\");                     \\\n-      builtin_assert (\"system=unix\");                   \\\n-                                                        \\\n-      if (TARGET_386)                                   \\\n-        builtin_define (\"CPU=I80386\");                  \\\n-      else if (TARGET_486)                              \\\n-        builtin_define (\"CPU=I80486\");                  \\\n-      else if (TARGET_PENTIUM)                          \\\n-        {                                               \\\n-          builtin_define (\"CPU=PENTIUM\");               \\\n-          builtin_define (\"CPU_VARIANT=PENTIUM\");       \\\n-        }                                               \\\n-      else if (TARGET_PENTIUMPRO)                       \\\n-        {                                               \\\n-          builtin_define (\"CPU=PENTIUM2\");               \\\n-          builtin_define (\"CPU_VARIANT=PENTIUMPRO\");    \\\n-        }                                               \\\n-      else if (TARGET_PENTIUM4)                       \\\n-        {                                               \\\n-          builtin_define (\"CPU=PENTIUM4\");               \\\n-          builtin_define (\"CPU_VARIANT=PENTIUM4\");    \\\n-        }                                               \\\n-    }                                                   \\\n+#define ASM_SPEC \"%{v:-v} %{Qy:} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n+\n+#define VXWORKS_CPU_DEFINE()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (TARGET_386)\t\t\t\t\t\\\n+        builtin_define (\"CPU=I80386\");\t\t\t\\\n+      else if (TARGET_486)\t\t\t\t\\\n+        builtin_define (\"CPU=I80486\");\t\t\t\\\n+      else if (TARGET_PENTIUM)\t\t\t\t\\\n+        {\t\t\t\t\t\t\\\n+          builtin_define (\"CPU=PENTIUM\");\t\t\\\n+          builtin_define (\"CPU_VARIANT=PENTIUM\");\t\\\n+        }\t\t\t\t\t\t\\\n+      else if (TARGET_PENTIUMPRO)\t\t\t\\\n+        {\t\t\t\t\t\t\\\n+          builtin_define (\"CPU=PENTIUM2\");\t\t\\\n+          builtin_define (\"CPU_VARIANT=PENTIUMPRO\");\t\\\n+        }\t\t\t\t\t\t\\\n+      else if (TARGET_PENTIUM4)\t\t\t\t\\\n+        {\t\t\t\t\t\t\\\n+          builtin_define (\"CPU=PENTIUM4\");\t\t\\\n+          builtin_define (\"CPU_VARIANT=PENTIUM4\");\t\\\n+        }\t\t\t\t\t\t\\\n+    }  \t\t\t\t\t\t\t\\\n   while (0)\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__vxworks\");\t\t\\\n+      builtin_define (\"__VXWORKS__\");\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\\\n+\t\t\t\t\t\t\\\n+      VXWORKS_CPU_DEFINE();\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n+#undef  CPP_SPEC\n+#define CPP_SPEC VXWORKS_ADDITIONAL_CPP_SPEC\n+#undef  LIB_SPEC\n+#define LIB_SPEC VXWORKS_LIB_SPEC\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC VXWORKS_STARTFILE_SPEC\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC VXWORKS_ENDFILE_SPEC\n+#undef  LINK_SPEC\n+#define LINK_SPEC VXWORKS_LINK_SPEC\n+\n+#undef  SUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES EXTRA_SUBTARGET_SWITCHES\n+\n+#undef SUBTARGET_OVERRIDE_OPTIONS\n+#define SUBTARGET_OVERRIDE_OPTIONS VXWORKS_OVERRIDE_OPTIONS\n+\n+/* No _mcount profiling on VxWorks.  */\n+#undef FUNCTION_PROFILER\n+#define FUNCTION_PROFILER(FILE,LABELNO) VXWORKS_FUNCTION_PROFILER(FILE,LABELNO)"}, {"sha": "0fd80c4ce9015f4d028d14eff5ea541663b969de", "filename": "gcc/config/i386/vxworksae.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Fvxworksae.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d442d7d9dd849cf41b0a287662dfa8384a5fa8fb/gcc%2Fconfig%2Fi386%2Fvxworksae.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworksae.h?ref=d442d7d9dd849cf41b0a287662dfa8384a5fa8fb", "patch": "@@ -0,0 +1,27 @@\n+/* IA32 VxWorks AE target definitions for GNU compiler.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Contributed by CodeSourcery, LLC.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+/* On VxWorks AE, we only want SIMNT.  */\n+#undef VXWORKS_CPU_DEFINE\n+#define VXWORKS_CPU_DEFINE()\t\t\t\\\n+  do\t\t\t\t\t\t\\\n+    builtin_define (\"CPU=SIMNT\");\t\t\\\n+  while (0)"}]}