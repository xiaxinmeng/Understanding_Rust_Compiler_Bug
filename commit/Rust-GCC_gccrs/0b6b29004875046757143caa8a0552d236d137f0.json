{"sha": "0b6b29004875046757143caa8a0552d236d137f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI2YjI5MDA0ODc1MDQ2NzU3MTQzY2FhOGEwNTUyZDIzNmQxMzdmMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T20:56:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T20:56:14Z"}, "message": "(standard_80387_constant_p): When testing for floating-point equality,\n\nmake sure we do so inside a region protected from traps.\n\nFrom-SVN: r3962", "tree": {"sha": "68b0b468cde87bfc169391df33529214f9514cff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b0b468cde87bfc169391df33529214f9514cff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b6b29004875046757143caa8a0552d236d137f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b6b29004875046757143caa8a0552d236d137f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b6b29004875046757143caa8a0552d236d137f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b6b29004875046757143caa8a0552d236d137f0/comments", "author": null, "committer": null, "parents": [{"sha": "978e895200428deb56d3d1975e7b31415980fe91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978e895200428deb56d3d1975e7b31415980fe91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978e895200428deb56d3d1975e7b31415980fe91"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "fe85584444ffc8762939a9be2c8fa100b28fe6ff", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b6b29004875046757143caa8a0552d236d137f0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b6b29004875046757143caa8a0552d236d137f0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0b6b29004875046757143caa8a0552d236d137f0", "patch": "@@ -18,6 +18,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include <stdio.h>\n+#include <setjmp.h>\n #include \"config.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n@@ -437,21 +438,30 @@ int\n standard_80387_constant_p (x)\n      rtx x;\n {\n-  union real_extract u;\n-  register double d;\n+#if ! defined (REAL_IS_NOT_DOUBLE) || defined (REAL_ARITHMETIC)\n+  REAL_VALUE_TYPE d;\n+  jmp_buf handler;\n+  int is0, is1;\n \n-  bcopy (&CONST_DOUBLE_LOW (x), &u, sizeof u);\n-  d = u.d;\n+  if (setjmp (handler))\n+    return 0;\n+\n+  set_float_handler (handler);\n+  REAL_VALUE_FROM_CONST_DOUBLE (d, x);\n+  is0 = REAL_VALUES_EQUAL (d, dconst0);\n+  is1 = REAL_VALUES_EQUAL (d, dconst1);\n+  set_float_handler (NULL_PTR);\n \n-  if (d == 0)\n+  if (is0)\n     return 1;\n \n-  if (d == 1)\n+  if (is1)\n     return 2;\n \n   /* Note that on the 80387, other constants, such as pi,\n      are much slower to load as standard constants\n      than to load from doubles in memory!  */\n+#endif\n \n   return 0;\n }"}]}