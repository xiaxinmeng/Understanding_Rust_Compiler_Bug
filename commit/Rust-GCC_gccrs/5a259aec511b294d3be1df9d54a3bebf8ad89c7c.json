{"sha": "5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEyNTlhZWM1MTFiMjk0ZDNiZTFkZjlkNTRhM2JlYmY4YWQ4OWM3Yw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-01-08T23:51:57Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-01-08T23:51:57Z"}, "message": "fpos.h (fpos:::fpos(streamoff __pos)): Explicitly initialize mbstate_t member, name offset data members *off, not pos.\n\n\n2001-01-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/fpos.h (fpos:::fpos(streamoff __pos)): Explicitly\n\tinitialize mbstate_t member, name offset data members *off, not pos.\n\t* include/bits/fstream.tcc (filebuf::filebuf): Same.\n\nFrom-SVN: r38809", "tree": {"sha": "870f1350c7c1c6a76c407cc0c7cbbc5745ea0e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/870f1350c7c1c6a76c407cc0c7cbbc5745ea0e4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/comments", "author": null, "committer": null, "parents": [{"sha": "5bb11b2e20b893361704d444fcf3a02de7f0bc89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb11b2e20b893361704d444fcf3a02de7f0bc89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bb11b2e20b893361704d444fcf3a02de7f0bc89"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "8df53e58caac623a25b2ebf185d0c1cfe498a53c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "patch": "@@ -1,3 +1,9 @@\n+2001-01-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/fpos.h (fpos:::fpos(streamoff __pos)): Explicitly\n+\tinitialize mbstate_t member, name offset data members *off, not pos.\n+\t* include/bits/fstream.tcc (filebuf::filebuf): Same.\n+\t\n 2001-01-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n \treported by Chris G. Demetriou <cgd@sibyte.com>"}, {"sha": "197b80eaf713da83ea7f31bd8052c7d1017aaec5", "filename": "libstdc++-v3/include/bits/fpos.h", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffpos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffpos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffpos.h?ref=5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "patch": "@@ -1,6 +1,6 @@\n // File position object and stream types\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,10 +48,14 @@ namespace std {\n     class fpos\n     {\n     public:\n-\n       // Types:\n       typedef _StateT __state_type;\n \n+    private:\n+      __state_type \t_M_st;\n+      streamoff \t_M_off;\n+\n+    public:\n       __state_type\n       state() const  { return _M_st; }\n \n@@ -60,37 +64,30 @@ namespace std {\n \n       // NB: The standard defines only the implicit copy ctor and the\n       // previous two members.  The rest is a \"conforming extension\".\n-      fpos(): _M_st(__state_type()), _M_pos(streamoff()) { }\n+      fpos(): _M_st(__state_type()), _M_off(streamoff()) { }\n \n-      fpos(streamoff __pos, __state_type __st)\n-      : _M_st(__st), _M_pos(__pos) { }\n+      fpos(streamoff __off, __state_type __st = __state_type())\n+      : _M_st(__st), _M_off(__off) { }\n \n-      fpos(streamoff __pos)\n-      : _M_st(), _M_pos(__pos) { }\n-\n-      operator streamoff() const { return _M_pos; }\n+      operator streamoff() const { return _M_off; }\n \n       fpos& \n-      operator+=(streamoff __off) { _M_pos += __off; return *this; }\n+      operator+=(streamoff __off) { _M_off += __off; return *this; }\n \n       fpos& \n-      operator-=(streamoff __off) { _M_pos -= __off; return *this; }\n+      operator-=(streamoff __off) { _M_off -= __off; return *this; }\n \n       bool  \n-      operator==(const fpos& __pos2) const { return _M_pos == __pos2._M_pos; }\n+      operator==(const fpos& __pos) const { return _M_off == __pos._M_off; }\n \n       bool  \n-      operator!=(const fpos& __pos2) const { return _M_pos != __pos2._M_pos; }\n+      operator!=(const fpos& __pos) const { return _M_off != __pos._M_off; }\n       \n       streamoff \n-      _M_position() const { return _M_pos; }\n+      _M_position() const { return _M_off; }\n \n       void\n-      _M_position(streamoff __pos)  { _M_pos = __pos; }\n-\n-    private:\n-      __state_type _M_st;\n-      streamoff _M_pos;\n+      _M_position(streamoff __off)  { _M_off = __off; }\n     };\n \n   template<typename _State>"}, {"sha": "e43e8a328e74dcedc90e07150389c8237ed2a34f", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a259aec511b294d3be1df9d54a3bebf8ad89c7c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "patch": "@@ -1,6 +1,6 @@\n // File based streams -*- C++ -*-\n \n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -79,15 +79,15 @@ namespace std\n   template<typename _CharT, typename _Traits>\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf() \n-    : __streambuf_type(), _M_file(NULL), _M_state_cur(), _M_state_beg(), \n-    _M_last_overflowed(false)\n+    : __streambuf_type(), _M_file(NULL), _M_state_cur(__state_type()), \n+    _M_state_beg(__state_type()), _M_last_overflowed(false)\n     { _M_fcvt = &use_facet<__codecvt_type>(this->getloc()); }\n \n   template<typename _CharT, typename _Traits>\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf(int __fd, const char* /*__name*/, ios_base::openmode __mode)\n-    : __streambuf_type(), _M_state_cur(), _M_state_beg(),\n-    _M_last_overflowed(false)\n+    : __streambuf_type(), _M_state_cur(__state_type()), \n+    _M_state_beg(__state_type()), _M_last_overflowed(false)\n     {\n       _M_fcvt = &use_facet<__codecvt_type>(this->getloc());\n       _M_filebuf_init();"}]}