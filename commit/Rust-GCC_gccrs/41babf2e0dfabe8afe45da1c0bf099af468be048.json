{"sha": "41babf2e0dfabe8afe45da1c0bf099af468be048", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiYWJmMmUwZGZhYmU4YWZlNDVkYTFjMGJmMDk5YWY0NjhiZTA0OA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-15T04:05:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-15T04:05:38Z"}, "message": "cse.c (FIXED_BASE_PLUS_P): Do not consider referneces to arg_pointer_rtx fixed if...\n\n\n        * cse.c (FIXED_BASE_PLUS_P): Do not consider referneces to\n        arg_pointer_rtx fixed if the argument pointer register is\n        not fixed.\n        (NONZERO_BASE_PLUS_P): Likewise.\n\nFrom-SVN: r29425", "tree": {"sha": "835598c0c1eda63d2e0542de695f740b7bf06f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/835598c0c1eda63d2e0542de695f740b7bf06f29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41babf2e0dfabe8afe45da1c0bf099af468be048", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41babf2e0dfabe8afe45da1c0bf099af468be048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41babf2e0dfabe8afe45da1c0bf099af468be048", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41babf2e0dfabe8afe45da1c0bf099af468be048/comments", "author": null, "committer": null, "parents": [{"sha": "5c9f708d435e591914611fc0d10e1f74cf09dede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c9f708d435e591914611fc0d10e1f74cf09dede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c9f708d435e591914611fc0d10e1f74cf09dede"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "d710b0958de29c530e7db596bf6e306bb56eb827", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41babf2e0dfabe8afe45da1c0bf099af468be048/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41babf2e0dfabe8afe45da1c0bf099af468be048/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41babf2e0dfabe8afe45da1c0bf099af468be048", "patch": "@@ -1,3 +1,10 @@\n+Tue Sep 14 21:47:06 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* cse.c (FIXED_BASE_PLUS_P): Do not consider referneces to\n+\targ_pointer_rtx fixed if the argument pointer register is\n+\tnot fixed.\n+\t(NONZERO_BASE_PLUS_P): Likewise.\n+\n Tue Sep 14 20:26:02 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* rtl.def (match_insn, match_insn2): Remove match_insn; rename"}, {"sha": "4da61f8a04d9925d1020c5522851e10e86e86bd1", "filename": "gcc/cse.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41babf2e0dfabe8afe45da1c0bf099af468be048/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41babf2e0dfabe8afe45da1c0bf099af468be048/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=41babf2e0dfabe8afe45da1c0bf099af468be048", "patch": "@@ -596,13 +596,14 @@ struct cse_basic_block_data {\n \n #define FIXED_BASE_PLUS_P(X)\t\t\t\t\t\\\n   ((X) == frame_pointer_rtx || (X) == hard_frame_pointer_rtx\t\\\n-   || (X) == arg_pointer_rtx\t\t\t\t\t\\\n+   || ((X) == arg_pointer_rtx && fixed_regs[ARG_POINTER_REGNUM])\\\n    || (X) == virtual_stack_vars_rtx\t\t\t\t\\\n    || (X) == virtual_incoming_args_rtx\t\t\t\t\\\n    || (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 1)) == CONST_INT \\\n        && (XEXP (X, 0) == frame_pointer_rtx\t\t\t\\\n \t   || XEXP (X, 0) == hard_frame_pointer_rtx\t\t\\\n-\t   || XEXP (X, 0) == arg_pointer_rtx\t\t\t\\\n+\t   || ((X) == arg_pointer_rtx\t\t\t\t\\\n+\t       && fixed_regs[ARG_POINTER_REGNUM])\t\t\\\n \t   || XEXP (X, 0) == virtual_stack_vars_rtx\t\t\\\n \t   || XEXP (X, 0) == virtual_incoming_args_rtx))\t\\\n    || GET_CODE (X) == ADDRESSOF)\n@@ -620,7 +621,8 @@ struct cse_basic_block_data {\n    || (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 1)) == CONST_INT \\\n        && (XEXP (X, 0) == frame_pointer_rtx\t\t\t\\\n \t   || XEXP (X, 0) == hard_frame_pointer_rtx\t\t\\\n-\t   || XEXP (X, 0) == arg_pointer_rtx\t\t\t\\\n+\t   || ((X) == arg_pointer_rtx\t\t\t\t\\\n+\t       && fixed_regs[ARG_POINTER_REGNUM])\t\t\\\n \t   || XEXP (X, 0) == virtual_stack_vars_rtx\t\t\\\n \t   || XEXP (X, 0) == virtual_incoming_args_rtx))\t\\\n    || (X) == stack_pointer_rtx\t\t\t\t\t\\"}]}