{"sha": "8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzZWQ1Yjg1YmQ0MDA4MTE4ZmU3ODUzZDI4MzRiNmU4YWQ0ZmYyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T09:07:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T09:07:25Z"}, "message": "Resync with latest version of AI-302\n\nFrom-SVN: r101079", "tree": {"sha": "be70c36e28f47e86407882d9a4ed1a28b9cbf739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be70c36e28f47e86407882d9a4ed1a28b9cbf739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/comments", "author": null, "committer": null, "parents": [{"sha": "bc979ad1ee4afaa0122762aa039a61712bd17ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc979ad1ee4afaa0122762aa039a61712bd17ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc979ad1ee4afaa0122762aa039a61712bd17ef9"}], "stats": {"total": 122, "additions": 67, "deletions": 55}, "files": [{"sha": "893864346e535d907f28653835791e6938e0c74b", "filename": "gcc/ada/a-cihase.ads", "status": "modified", "additions": 63, "deletions": 50, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.ads?ref=8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "patch": "@@ -2,11 +2,12 @@\n --                                                                          --\n --                         GNAT LIBRARY COMPONENTS                          --\n --                                                                          --\n---                  ADA.CONTAINERS.INDEFINITE_HASHED_SETS                   --\n+--                      A D A . C O N T A I N E R S .                       --\n+--               I N D E F I N I T E _ H A S H E D _ S E T S                --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,16 +36,15 @@\n \n with Ada.Containers.Hash_Tables;\n with Ada.Streams;\n+with Ada.Finalization;\n \n generic\n    type Element_Type (<>) is private;\n \n    with function Hash (Element : Element_Type) return Hash_Type;\n \n-   --  TODO: get a ruling from ARG in Atlanta re the name and\n-   --  order of these declarations ???\n-\n-   with function Equivalent_Keys (Left, Right : Element_Type) return Boolean;\n+   with function Equivalent_Elements (Left, Right : Element_Type)\n+                                     return Boolean;\n \n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n@@ -62,6 +62,8 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n \n    function \"=\" (Left, Right : Set) return Boolean;\n \n+   function Equivalent_Sets (Left, Right : Set) return Boolean;\n+\n    function Length (Container : Set) return Count_Type;\n \n    function Is_Empty (Container : Set) return Boolean;\n@@ -74,10 +76,10 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n      (Position : Cursor;\n       Process  : not null access procedure (Element : Element_Type));\n \n---  TODO: resolve in atlanta ???\n---   procedure Replace_Element (Container : in out Set;\n---                              Position  : Cursor;\n---                              By        : Element_Type);\n+   procedure Replace_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      By        : Element_Type);\n \n    procedure Move\n      (Target : in out Set;\n@@ -97,9 +99,35 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n \n    procedure Delete  (Container : in out Set; Item : Element_Type);\n \n+   procedure Delete (Container : in out Set; Position  : in out Cursor);\n+\n    procedure Exclude (Container : in out Set; Item : Element_Type);\n \n-   procedure Delete (Container : in out Set; Position  : in out Cursor);\n+   function Contains (Container : Set; Item : Element_Type) return Boolean;\n+\n+   function Find (Container : Set; Item : Element_Type) return Cursor;\n+\n+   function First (Container : Set) return Cursor;\n+\n+   function Next (Position : Cursor) return Cursor;\n+\n+   procedure Next (Position : in out Cursor);\n+\n+   function Has_Element (Position : Cursor) return Boolean;\n+\n+   function Equivalent_Elements (Left, Right : Cursor) return Boolean;\n+\n+   function Equivalent_Elements\n+     (Left  : Cursor;\n+      Right : Element_Type) return Boolean;\n+\n+   function Equivalent_Elements\n+     (Left  : Element_Type;\n+      Right : Cursor) return Boolean;\n+\n+   procedure Iterate\n+     (Container : Set;\n+      Process   : not null access procedure (Position : Cursor));\n \n    procedure Union (Target : in out Set; Source : Set);\n \n@@ -126,42 +154,16 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n    function \"xor\" (Left, Right : Set) return Set\n      renames Symmetric_Difference;\n \n-   function Is_Subset (Subset : Set; Of_Set : Set) return Boolean;\n-\n    function Overlap (Left, Right : Set) return Boolean;\n \n-   function Contains (Container : Set; Item : Element_Type) return Boolean;\n-\n-   function Find (Container : Set; Item : Element_Type) return Cursor;\n+   function Is_Subset (Subset : Set; Of_Set : Set) return Boolean;\n \n    function Capacity (Container : Set) return Count_Type;\n \n    procedure Reserve_Capacity\n      (Container : in out Set;\n       Capacity  : Count_Type);\n \n-   function First (Container : Set) return Cursor;\n-\n-   function Next (Position : Cursor) return Cursor;\n-\n-   procedure Next (Position : in out Cursor);\n-\n-   function Has_Element (Position : Cursor) return Boolean;\n-\n-   function Equivalent_Keys (Left, Right : Cursor) return Boolean;\n-\n-   function Equivalent_Keys\n-     (Left  : Cursor;\n-      Right : Element_Type) return Boolean;\n-\n-   function Equivalent_Keys\n-     (Left  : Element_Type;\n-      Right : Cursor) return Boolean;\n-\n-   procedure Iterate\n-     (Container : Set;\n-      Process   : not null access procedure (Position : Cursor));\n-\n    generic\n       type Key_Type (<>) is limited private;\n \n@@ -183,16 +185,16 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n \n       function Element (Container : Set; Key : Key_Type) return Element_Type;\n \n---  TODO: resolve in atlanta???\n---      procedure Replace (Container : in out Set;\n---                         Key       : Key_Type;\n---                         New_Item  : Element_Type);\n+      procedure Replace\n+        (Container : in out Set;\n+         Key       : Key_Type;\n+         New_Item  : Element_Type);\n \n       procedure Delete (Container : in out Set; Key : Key_Type);\n \n       procedure Exclude (Container : in out Set; Key : Key_Type);\n \n-      procedure Checked_Update_Element\n+      procedure Update_Element_Preserving_Key\n         (Container : in out Set;\n          Position  : Cursor;\n          Process   : not null access\n@@ -211,18 +213,30 @@ private\n    type Node_Type;\n    type Node_Access is access Node_Type;\n \n-   package HT_Types is\n-      new Hash_Tables.Generic_Hash_Table_Types (Node_Access);\n+   type Element_Access is access Element_Type;\n \n-   use HT_Types;\n+   type Node_Type is\n+      limited record\n+         Element : Element_Access;\n+         Next    : Node_Access;\n+      end record;\n+\n+   package HT_Types is new Hash_Tables.Generic_Hash_Table_Types\n+     (Node_Type,\n+      Node_Access);\n \n-   type Set is new Hash_Table_Type with null record;\n+   type Set is new Ada.Finalization.Controlled with record\n+      HT : HT_Types.Hash_Table_Type;\n+   end record;\n \n    procedure Adjust (Container : in out Set);\n \n    procedure Finalize (Container : in out Set);\n \n-   type Set_Access is access constant Set;\n+   use HT_Types;\n+   use Ada.Finalization;\n+\n+   type Set_Access is access all Set;\n    for Set_Access'Storage_Size use 0;\n \n    type Cursor is\n@@ -249,7 +263,6 @@ private\n \n    for Set'Read use Read;\n \n-   Empty_Set : constant Set := (Hash_Table_Type with null record);\n+   Empty_Set : constant Set := (Controlled with HT => (null, 0, 0, 0));\n \n end Ada.Containers.Indefinite_Hashed_Sets;\n-"}, {"sha": "b85b40786451a2d6207548244f3c739f913aa3a4", "filename": "gcc/ada/a-strfix.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-strfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-strfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strfix.ads?ref=8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "patch": "@@ -13,7 +13,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-\n with Ada.Strings.Maps;\n \n package Ada.Strings.Fixed is"}, {"sha": "81716555389f2ac32e0bc8c848a079da34ec44a1", "filename": "gcc/ada/a-stunha.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-stunha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-stunha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stunha.ads?ref=8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT LIBRARY COMPONENTS                          --\n --                                                                          --\n---                        ADA.STRINGS.UNBOUNDED.HASH                        --\n+--           A D A . S T R I N G S . U N B O U N D E D . H A S H            --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is adapted from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --"}, {"sha": "119f56b7e3d6fe1486c22848ccfd7bd24eb527cd", "filename": "gcc/ada/a-szunau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-szunau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-szunau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szunau.adb?ref=8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "patch": "@@ -1,6 +1,6 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                          GNAT RUNTIME COMPONENTS                         --\n+--                          GNAT RUN-TIME COMPONENTS                        --\n --                                                                          --\n --   A D A . S T R I N G S . W I D E _ W I D E _ U N B O U N D E D . A U X  --\n --                                                                          --"}, {"sha": "01e7055403bb7c7053f95484c3dfab9bae2b45ee", "filename": "gcc/ada/a-szunau.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-szunau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c/gcc%2Fada%2Fa-szunau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szunau.ads?ref=8d3ed5b85bd4008118fe7853d2834b6e8ad4ff2c", "patch": "@@ -1,6 +1,6 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                          GNAT RUNTIME COMPONENTS                         --\n+--                          GNAT RUN-TIME COMPONENTS                        --\n --                                                                          --\n --   A D A . S T R I N G S . W I D E _ W I D E _ U N B O U N D E D . A U X  --\n --                                                                          --"}]}