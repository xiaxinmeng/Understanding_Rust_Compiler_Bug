{"sha": "1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyZDg1NzVhY2U0ZTEyZGJlOTVhZTJkNGE0OWE0ZDg5YzZmNjdlYg==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-11-17T23:17:44Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-11-21T13:37:06Z"}, "message": "Additional small changes to support opaque modes\n\nAfter building some larger codes using opaque types and some c++ codes\nusing opaque types it became clear I needed to go through and look for\nplaces where opaque types and modes needed to be handled. A whole pile\nof one-liners.\n\ngcc/\n\t* typeclass.h: Add opaque_type_class.\n\t* builtins.c (type_to_class): Identify opaque type class.\n\t* dwarf2out.c (is_base_type): Handle opaque types.\n\t(gen_type_die_with_usage): Handle opaque types.\n\t* expr.c (count_type_elements): Opaque types should\n\tnever have initializers.\n\t* ipa-devirt.c (odr_types_equivalent_p): No type-specific handling\n\tfor opaque types is needed as it eventually checks the underlying\n\tmode which is what is important.\n\t* tree-streamer.c (record_common_node): Handle opaque types.\n\t* tree.c (type_contains_placeholder_1): Handle opaque types.\n\t(type_cache_hasher::equal): No additional comparison needed for\n\topaque types.\ngcc/c-family\n\t* c-pretty-print.c (c_pretty_printer::simple_type_specifier):\n\tTreat opaque types like other types.\n\t(c_pretty_printer::direct_abstract_declarator): Opaque types are\n\tsupported types.\ngcc/c\n\t* c-aux-info.c (gen_type): Support opaque types.\ngcc/cp\n\t* error.c (dump_type): Handle opaque types.\n\t(dump_type_prefix): Handle opaque types.\n\t(dump_type_suffix): Handle opaque types.\n\t(dump_expr): Handle opaque types.\n\t* pt.c (tsubst): Allow opaque types in templates.\n\t(unify): Allow opaque types in templates.\n\t* typeck.c (structural_comptypes): Handle comparison\n\tof opaque types.", "tree": {"sha": "56df58c192ba5bedc0e5a16cba6c1ccf1a7365ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56df58c192ba5bedc0e5a16cba6c1ccf1a7365ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3454130760bf51b76495663c60ac6dffbe3d130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3454130760bf51b76495663c60ac6dffbe3d130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3454130760bf51b76495663c60ac6dffbe3d130"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "40e77c7bf40eb010305b237a5e8a7ee2ab4c3151", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -2228,6 +2228,7 @@ type_to_class (tree type)\n     case ARRAY_TYPE:\t   return (TYPE_STRING_FLAG (type)\n \t\t\t\t   ? string_type_class : array_type_class);\n     case LANG_TYPE:\t   return lang_type_class;\n+    case OPAQUE_TYPE:      return opaque_type_class;\n     default:\t\t   return no_type_class;\n     }\n }"}, {"sha": "3027703056bf1c7e65dfea8737093e2bfa8a9729", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -342,6 +342,7 @@ c_pretty_printer::simple_type_specifier (tree t)\n       break;\n \n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case BOOLEAN_TYPE:\n     case INTEGER_TYPE:\n     case REAL_TYPE:\n@@ -662,6 +663,7 @@ c_pretty_printer::direct_abstract_declarator (tree t)\n \n     case IDENTIFIER_NODE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case BOOLEAN_TYPE:\n     case INTEGER_TYPE:\n     case REAL_TYPE:"}, {"sha": "bdeef525892233023d819e4e4863af8487e20481", "filename": "gcc/c/c-aux-info.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-aux-info.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -409,6 +409,7 @@ gen_type (const char *ret_val, tree t, formals_style style)\n \t    data_type = concat (\"unsigned \", data_type, NULL);\n \t  break;\n \n+\tcase OPAQUE_TYPE:\n \tcase REAL_TYPE:\n \t  data_type = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (t)));\n \t  break;"}, {"sha": "d27545d1223b366bf021042b3c2734cb30abf72b", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -529,6 +529,7 @@ dump_type (cxx_pretty_printer *pp, tree t, int flags)\n     case INTEGER_TYPE:\n     case REAL_TYPE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case BOOLEAN_TYPE:\n     case COMPLEX_TYPE:\n     case VECTOR_TYPE:\n@@ -874,6 +875,7 @@ dump_type_prefix (cxx_pretty_printer *pp, tree t, int flags)\n     case UNION_TYPE:\n     case LANG_TYPE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case TYPENAME_TYPE:\n     case COMPLEX_TYPE:\n     case VECTOR_TYPE:\n@@ -997,6 +999,7 @@ dump_type_suffix (cxx_pretty_printer *pp, tree t, int flags)\n     case UNION_TYPE:\n     case LANG_TYPE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case TYPENAME_TYPE:\n     case COMPLEX_TYPE:\n     case VECTOR_TYPE:\n@@ -2810,6 +2813,7 @@ dump_expr (cxx_pretty_printer *pp, tree t, int flags)\n     case ENUMERAL_TYPE:\n     case REAL_TYPE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case BOOLEAN_TYPE:\n     case INTEGER_TYPE:\n     case COMPLEX_TYPE:"}, {"sha": "b03778613ae75df9896645644bf40b8a02cfc0ba", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -15376,6 +15376,7 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n     case ERROR_MARK:\n     case IDENTIFIER_NODE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case REAL_TYPE:\n     case COMPLEX_TYPE:\n     case VECTOR_TYPE:\n@@ -23588,6 +23589,7 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n     case BOOLEAN_TYPE:\n     case ENUMERAL_TYPE:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case NULLPTR_TYPE:\n       if (TREE_CODE (arg) != TREE_CODE (parm))\n \treturn unify_type_mismatch (explain_p, parm, arg);"}, {"sha": "729c7069c4f3e0dd5965c5431509f1ca0d4be871", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -1314,6 +1314,7 @@ structural_comptypes (tree t1, tree t2, int strict)\n       /* All void and bool types are the same.  */\n       break;\n \n+    case OPAQUE_TYPE:\n     case INTEGER_TYPE:\n     case FIXED_POINT_TYPE:\n     case REAL_TYPE:"}, {"sha": "01e7ae183d51110afd22d85771f1943cc750cded", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -13038,6 +13038,7 @@ is_base_type (tree type)\n       return 1;\n \n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case ARRAY_TYPE:\n     case RECORD_TYPE:\n     case UNION_TYPE:\n@@ -25776,6 +25777,7 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n       return;\n \n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case INTEGER_TYPE:\n     case REAL_TYPE:\n     case FIXED_POINT_TYPE:"}, {"sha": "25e93b6d46fd79a9ab0347a6c72adf419c4e9e6a", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -6171,6 +6171,7 @@ count_type_elements (const_tree type, bool for_ctor_p)\n       return 0;\n \n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case METHOD_TYPE:\n     case FUNCTION_TYPE:\n     case LANG_TYPE:"}, {"sha": "0f2b8143849c9db33dbb95d490d38b13aa783f6f", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -1521,6 +1521,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \tbreak;\n       }\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case NULLPTR_TYPE:\n       break;\n "}, {"sha": "a393983f76ca3ff34b0a4fefa5e025b9c29d4b13", "filename": "gcc/tree-streamer.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Ftree-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Ftree-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -317,6 +317,7 @@ record_common_node (struct streamer_tree_cache_d *cache, tree node)\n     case TREE_LIST:\n     case VOID_CST:\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n       /* No recursive trees.  */\n       break;\n     case ARRAY_TYPE:"}, {"sha": "d6ba55319bfc3102b2541532089ac83c80499d56", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -3972,6 +3972,7 @@ type_contains_placeholder_1 (const_tree type)\n   switch (TREE_CODE (type))\n     {\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case COMPLEX_TYPE:\n     case ENUMERAL_TYPE:\n     case BOOLEAN_TYPE:\n@@ -7100,6 +7101,7 @@ type_cache_hasher::equal (type_hash *a, type_hash *b)\n   switch (TREE_CODE (a->type))\n     {\n     case VOID_TYPE:\n+    case OPAQUE_TYPE:\n     case COMPLEX_TYPE:\n     case POINTER_TYPE:\n     case REFERENCE_TYPE:"}, {"sha": "b4e3dda21eca4d74339654c41186c9b1d9fa8bbd", "filename": "gcc/typeclass.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Ftypeclass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb/gcc%2Ftypeclass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftypeclass.h?ref=1e2d8575ace4e12dbe95ae2d4a49a4d89c6f67eb", "patch": "@@ -37,7 +37,7 @@ enum type_class\n   function_type_class, method_type_class,\n   record_type_class, union_type_class,\n   array_type_class, string_type_class,\n-  lang_type_class\n+  lang_type_class, opaque_type_class\n };\n \n #endif /* GCC_TYPECLASS_H */"}]}