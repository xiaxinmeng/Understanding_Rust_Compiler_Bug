{"sha": "50867d20f4356714df1392a35240db8712c878f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA4NjdkMjBmNDM1NjcxNGRmMTM5MmEzNTI0MGRiODcxMmM4NzhmNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-20T17:31:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-20T17:31:05Z"}, "message": "cp-tree.h (cp_fully_fold_init): Declare.\n\n\t* cp-tree.h (cp_fully_fold_init): Declare.\n\t* cp-gimplify.c (cp_fully_fold_init): New function.\n\t* typeck2.c (split_nonconstant_init, store_init_value): Use it\n\tinstead of cp_fully_fold.\n\nFrom-SVN: r267305", "tree": {"sha": "57a59d9550395c76e35e6a4d6133c5f8ab8c0f5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57a59d9550395c76e35e6a4d6133c5f8ab8c0f5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50867d20f4356714df1392a35240db8712c878f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50867d20f4356714df1392a35240db8712c878f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50867d20f4356714df1392a35240db8712c878f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50867d20f4356714df1392a35240db8712c878f4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69c5fdcf6eaee5e20073aa76152ef7b402619998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c5fdcf6eaee5e20073aa76152ef7b402619998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69c5fdcf6eaee5e20073aa76152ef7b402619998"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "c1b7bba48e9514caa02e68515f4393026b1728c3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50867d20f4356714df1392a35240db8712c878f4", "patch": "@@ -1,3 +1,10 @@\n+2018-12-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cp-tree.h (cp_fully_fold_init): Declare.\n+\t* cp-gimplify.c (cp_fully_fold_init): New function.\n+\t* typeck2.c (split_nonconstant_init, store_init_value): Use it\n+\tinstead of cp_fully_fold.\n+\n 2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* parser.c (cp_parser_asm_definition): Do not allow any asm qualifiers"}, {"sha": "9d848eaaef093e4799b170a20cdcd857e77a5463", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=50867d20f4356714df1392a35240db8712c878f4", "patch": "@@ -2171,6 +2171,20 @@ cp_fully_fold (tree x)\n   return cp_fold_rvalue (x);\n }\n \n+/* Likewise, but also fold recursively, which cp_fully_fold doesn't perform\n+   in some cases.  */\n+\n+tree\n+cp_fully_fold_init (tree x)\n+{\n+  if (processing_template_decl)\n+    return x;\n+  x = cp_fully_fold (x);\n+  hash_set<tree> pset;\n+  cp_walk_tree (&x, cp_fold_r, &pset, NULL);\n+  return x;\n+}\n+\n /* c-common interface to cp_fold.  If IN_INIT, this is in a static initializer\n    and certain changes are made to the folding done.  Or should be (FIXME).  We\n    never touch maybe_const, as it is only used for the C front-end"}, {"sha": "f6b7c6e516b31e18c1a98c2909987d5774b2c30b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=50867d20f4356714df1392a35240db8712c878f4", "patch": "@@ -7544,6 +7544,7 @@ extern bool cxx_omp_privatize_by_reference\t(const_tree);\n extern bool cxx_omp_disregard_value_expr\t(tree, bool);\n extern void cp_fold_function\t\t\t(tree);\n extern tree cp_fully_fold\t\t\t(tree);\n+extern tree cp_fully_fold_init\t\t\t(tree);\n extern void clear_fold_cache\t\t\t(void);\n extern tree lookup_hotness_attribute\t\t(tree);\n extern tree process_stmt_hotness_attribute\t(tree);"}, {"sha": "cc9bf02439b607761421a159e3f17ba84b0cb5af", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50867d20f4356714df1392a35240db8712c878f4/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=50867d20f4356714df1392a35240db8712c878f4", "patch": "@@ -755,7 +755,7 @@ split_nonconstant_init (tree dest, tree init)\n     init = TARGET_EXPR_INITIAL (init);\n   if (TREE_CODE (init) == CONSTRUCTOR)\n     {\n-      init = cp_fully_fold (init);\n+      init = cp_fully_fold_init (init);\n       code = push_stmt_list ();\n       if (split_nonconstant_init_1 (dest, init))\n \tinit = NULL_TREE;\n@@ -863,7 +863,7 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n       if (!const_init)\n \tvalue = oldval;\n     }\n-  value = cp_fully_fold (value);\n+  value = cp_fully_fold_init (value);\n \n   /* Handle aggregate NSDMI in non-constant initializers, too.  */\n   value = replace_placeholders (value, decl);"}]}