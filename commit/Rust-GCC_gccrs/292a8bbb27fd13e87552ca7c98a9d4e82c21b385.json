{"sha": "292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkyYThiYmIyN2ZkMTNlODc1NTJjYTdjOThhOWQ0ZTgyYzIxYjM4NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-03-20T20:31:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-03-20T20:31:40Z"}, "message": "PR c++/87480 - decltype of member access in default template arg\n\nThe issue here is that declval<T>().d is considered instantiation-dependent\nwithin a template, as the access to 'd' might depend on the particular\nspecialization.  But when we're deducing template arguments for a call, we\nknow that the call and the arguments are non-dependent, so we can do the\nsubstitution as though we aren't in a template.  Which strictly speaking we\naren't, since the default argument is considered a separate definition.\n\n\t* pt.c (type_unification_real): Accept a dependent result in\n\ttemplate context.\n\nFrom-SVN: r269826", "tree": {"sha": "2150935ef639b1e97f5dcdda3907facd092ba69b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2150935ef639b1e97f5dcdda3907facd092ba69b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ad7fed1cc87d281881757477c5197d9d3a97232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad7fed1cc87d281881757477c5197d9d3a97232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad7fed1cc87d281881757477c5197d9d3a97232"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "09fb3f2935c333a8e19493f405f0e79705b9d41f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "patch": "@@ -1,3 +1,9 @@\n+2019-03-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/87480 - decltype of member access in default template arg\n+\t* pt.c (type_unification_real): Accept a dependent result in\n+\ttemplate context.\n+\n 2019-03-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/89688"}, {"sha": "6c15419e9cc8960945f8de9fca2d7b5405e26a6b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "patch": "@@ -21005,8 +21005,15 @@ type_unification_real (tree tparms,\n \t    }\n \t  else\n \t    {\n+\t      /* Even if the call is happening in template context, getting\n+\t\t here means it's non-dependent, and a default argument is\n+\t\t considered a separate definition under [temp.decls], so we can\n+\t\t do this substitution without processing_template_decl.  This\n+\t\t is important if the default argument contains something that\n+\t\t might be instantiation-dependent like access (87480).  */\n+\t      processing_template_decl_sentinel s;\n \t      tree substed = NULL_TREE;\n-\t      if (saw_undeduced == 1 && processing_template_decl == 0)\n+\t      if (saw_undeduced == 1)\n \t\t{\n \t\t  /* First instatiate in template context, in case we still\n \t\t     depend on undeduced template parameters.  */"}, {"sha": "86c8ea93f4d68cc585bbc48045f4ddce0489576b", "filename": "gcc/testsuite/g++.dg/cpp0x/fntmpdefarg11.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292a8bbb27fd13e87552ca7c98a9d4e82c21b385/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg11.C?ref=292a8bbb27fd13e87552ca7c98a9d4e82c21b385", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/87480\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T> T&& declval();\n+\n+template <typename T, typename = decltype(declval<T>().d)> void f(T) { }\n+\n+struct A {\n+  double d;\n+};\n+\n+template <typename>\n+void j(A& a) {\n+  f(a);\n+}"}]}