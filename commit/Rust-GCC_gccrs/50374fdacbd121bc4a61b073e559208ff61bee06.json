{"sha": "50374fdacbd121bc4a61b073e559208ff61bee06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAzNzRmZGFjYmQxMjFiYzRhNjFiMDczZTU1OTIwOGZmNjFiZWUwNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-23T10:43:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-24T07:07:05Z"}, "message": "tree-optimization/101105 - fix runtime alias test optimization\n\nWe were ignoring DR_STEP for VF == 1 which is OK only in case\nthe scalar order is preserved or both DR steps are the same.\n\n2021-06-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/101105\n\t* tree-vect-data-refs.c (vect_prune_runtime_alias_test_list):\n\tOnly ignore steps when they are equal or scalar order is preserved.\n\n\t* gcc.dg/torture/pr101105.c: New testcase.", "tree": {"sha": "803bc4ed31c46913877ae542f8dc58561347e83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/803bc4ed31c46913877ae542f8dc58561347e83c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50374fdacbd121bc4a61b073e559208ff61bee06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50374fdacbd121bc4a61b073e559208ff61bee06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50374fdacbd121bc4a61b073e559208ff61bee06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50374fdacbd121bc4a61b073e559208ff61bee06/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bd86940c428de9dde53e41265fb1435ed236f5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd86940c428de9dde53e41265fb1435ed236f5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd86940c428de9dde53e41265fb1435ed236f5e"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "9222351683df8c3901297f58fd2f22e9d7a7d5f9", "filename": "gcc/testsuite/gcc.dg/torture/pr101105.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50374fdacbd121bc4a61b073e559208ff61bee06/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101105.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50374fdacbd121bc4a61b073e559208ff61bee06/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101105.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101105.c?ref=50374fdacbd121bc4a61b073e559208ff61bee06", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+short a;\n+int b[5][4] = {2, 2};\n+int d;\n+short e(int f) { return f == 0 || a && f == 1 ? 0 : a; }\n+int main() {\n+  int g, h;\n+  g = 3;\n+  for (; g >= 0; g--) {\n+    h = 3;\n+    for (; h >= 0; h--)\n+      b[g][h] = b[0][1] && e(1);\n+  }\n+  d = b[0][1];\n+  if (d != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "579149dfd61c9678eef0f325da91f32b122f077b", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50374fdacbd121bc4a61b073e559208ff61bee06/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50374fdacbd121bc4a61b073e559208ff61bee06/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=50374fdacbd121bc4a61b073e559208ff61bee06", "patch": "@@ -3479,9 +3479,9 @@ vect_prune_runtime_alias_test_list (loop_vec_info loop_vinfo)\n   /* Step values are irrelevant for aliasing if the number of vector\n      iterations is equal to the number of scalar iterations (which can\n      happen for fully-SLP loops).  */\n-  bool ignore_step_p = known_eq (LOOP_VINFO_VECT_FACTOR (loop_vinfo), 1U);\n+  bool vf_one_p = known_eq (LOOP_VINFO_VECT_FACTOR (loop_vinfo), 1U);\n \n-  if (!ignore_step_p)\n+  if (!vf_one_p)\n     {\n       /* Convert the checks for nonzero steps into bound tests.  */\n       tree value;\n@@ -3534,6 +3534,11 @@ vect_prune_runtime_alias_test_list (loop_vec_info loop_vinfo)\n \n       bool preserves_scalar_order_p\n \t= vect_preserves_scalar_order_p (dr_info_a, dr_info_b);\n+      bool ignore_step_p\n+\t  = (vf_one_p\n+\t     && (preserves_scalar_order_p\n+\t\t || operand_equal_p (DR_STEP (dr_info_a->dr),\n+\t\t\t\t     DR_STEP (dr_info_b->dr))));\n \n       /* Skip the pair if inter-iteration dependencies are irrelevant\n \t and intra-iteration dependencies are guaranteed to be honored.  */"}]}