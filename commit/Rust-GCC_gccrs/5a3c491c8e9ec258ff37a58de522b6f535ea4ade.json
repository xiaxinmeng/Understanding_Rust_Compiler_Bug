{"sha": "5a3c491c8e9ec258ff37a58de522b6f535ea4ade", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzYzQ5MWM4ZTllYzI1OGZmMzdhNThkZTUyMmI2ZjUzNWVhNGFkZQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-05-06T23:32:52Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-05-06T23:32:52Z"}, "message": "Forgot this file when checking in my last change.\n\nFrom-SVN: r33745", "tree": {"sha": "4f0fe7558301dd135054e8c6ccffb206ef5e02f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f0fe7558301dd135054e8c6ccffb206ef5e02f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a3c491c8e9ec258ff37a58de522b6f535ea4ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3c491c8e9ec258ff37a58de522b6f535ea4ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3c491c8e9ec258ff37a58de522b6f535ea4ade", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3c491c8e9ec258ff37a58de522b6f535ea4ade/comments", "author": null, "committer": null, "parents": [{"sha": "a4c44acfdc84de7e756d5471f44aac71a80e6135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c44acfdc84de7e756d5471f44aac71a80e6135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c44acfdc84de7e756d5471f44aac71a80e6135"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "14c4263cd270656b300b7a4818315873fcb11c39", "filename": "libjava/boehm.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c491c8e9ec258ff37a58de522b6f535ea4ade/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c491c8e9ec258ff37a58de522b6f535ea4ade/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=5a3c491c8e9ec258ff37a58de522b6f535ea4ade", "patch": "@@ -88,7 +88,7 @@ _Jv_MarkObj (void *addr, void *msp, void *msl, void * /*env*/)\n   _Jv_VTable *dt = *(_Jv_VTable **) addr;\n   // We check this in case a GC occurs before the vtbl is set.  FIXME:\n   // should use allocation lock while initializing object.\n-  if (__builtin_expect (! dt, 0))\n+  if (__builtin_expect (! dt, false))\n     return mark_stack_ptr;\n   jclass klass = dt->clas;\n \n@@ -99,7 +99,7 @@ _Jv_MarkObj (void *addr, void *msp, void *msl, void * /*env*/)\n   p = (ptr_t) klass;\n   MAYBE_MARK (p, mark_stack_ptr, mark_stack_limit, obj, o2label);\n \n-  if (__builtin_expect (klass == &ClassClass, 0))\n+  if (__builtin_expect (klass == &ClassClass, false))\n     {\n       jclass c = (jclass) addr;\n \n@@ -274,7 +274,7 @@ _Jv_MarkArray (void *addr, void *msp, void *msl, void * /*env*/)\n   _Jv_VTable *dt = *(_Jv_VTable **) addr;\n   // We check this in case a GC occurs before the vtbl is set.  FIXME:\n   // should use allocation lock while initializing object.\n-  if (__builtin_expect (! dt, 0))\n+  if (__builtin_expect (! dt, false))\n     return mark_stack_ptr;\n   jclass klass = dt->clas;\n "}]}