{"sha": "737eb76789cd454918a85983255a1f62efcbfdc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM3ZWI3Njc4OWNkNDU0OTE4YTg1OTgzMjU1YTFmNjJlZmNiZmRjOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-07-16T08:41:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-07-16T08:41:13Z"}, "message": "Use file_location for md_reader's ptr_loc\n\nAlso make it public, so that clients can use the location for error\nreporting.\n\n2019-07-16  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* read-md.h (md_reader::ptr_loc): Moved from read-md.c.\n\tUse file_location instead of separate fields.\n\t(md_reader::set_md_ptr_loc): Take a file_location instead of a\n\tseparate filename and line number.\n\t* read-md.c (ptr_loc): As above.\n\t(md_reader::copy_md_ptr_loc): Update for new ptr_loc layout.\n\t(md_reader::fprint_md_ptr_loc): Likewise.\n\t(md_reader::set_md_ptr_loc): Likewise.  Take a file_location\n\tinstead of a separate filename and line number.\n\t(md_reader::read_string): Update call accordingly.\n\nFrom-SVN: r273510", "tree": {"sha": "773f9d2b59bf22303b127b0ea01775a5f7e4e344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/773f9d2b59bf22303b127b0ea01775a5f7e4e344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/737eb76789cd454918a85983255a1f62efcbfdc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737eb76789cd454918a85983255a1f62efcbfdc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/737eb76789cd454918a85983255a1f62efcbfdc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737eb76789cd454918a85983255a1f62efcbfdc9/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6e5e4b83b153d056b93048fd23b4afebcd49bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e5e4b83b153d056b93048fd23b4afebcd49bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e5e4b83b153d056b93048fd23b4afebcd49bcf"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "ec6567db92b20f3dbe89bcc6f61c27e740e5c28c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737eb76789cd454918a85983255a1f62efcbfdc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737eb76789cd454918a85983255a1f62efcbfdc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=737eb76789cd454918a85983255a1f62efcbfdc9", "patch": "@@ -1,3 +1,16 @@\n+2019-07-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* read-md.h (md_reader::ptr_loc): Moved from read-md.c.\n+\tUse file_location instead of separate fields.\n+\t(md_reader::set_md_ptr_loc): Take a file_location instead of a\n+\tseparate filename and line number.\n+\t* read-md.c (ptr_loc): As above.\n+\t(md_reader::copy_md_ptr_loc): Update for new ptr_loc layout.\n+\t(md_reader::fprint_md_ptr_loc): Likewise.\n+\t(md_reader::set_md_ptr_loc): Likewise.  Take a file_location\n+\tinstead of a separate filename and line number.\n+\t(md_reader::read_string): Update call accordingly.\n+\n 2019-07-16  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/rs6000/rs6000.md (*mov<mode>_update1): Explicitly"}, {"sha": "d9a27ac8f13bb254469f82b35136599ae749de90", "filename": "gcc/read-md.c", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737eb76789cd454918a85983255a1f62efcbfdc9/gcc%2Fread-md.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737eb76789cd454918a85983255a1f62efcbfdc9/gcc%2Fread-md.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.c?ref=737eb76789cd454918a85983255a1f62efcbfdc9", "patch": "@@ -43,14 +43,6 @@ int have_error = 0;\n #endif /* #ifndef GENERATOR_FILE */\n \n \n-/* Associates PTR (which can be a string, etc.) with the file location\n-   specified by FILENAME and LINENO.  */\n-struct ptr_loc {\n-  const void *ptr;\n-  const char *filename;\n-  int lineno;\n-};\n-\n /* This callback will be invoked whenever an md include directive is\n    processed.  To be used for creation of the dependency file.  */\n void (*include_callback) (const char *);\n@@ -94,25 +86,24 @@ leading_ptr_eq_p (const void *def1, const void *def2)\n   return *(const void *const *) def1 == *(const void *const *) def2;\n }\n \n-/* Associate PTR with the file position given by FILENAME and LINENO.  */\n+/* Associate PTR with the file position given by FILE_LOC.  */\n \n void\n-md_reader::set_md_ptr_loc (const void *ptr, const char *filename, int lineno)\n+md_reader::set_md_ptr_loc (const void *ptr, file_location file_loc)\n {\n   struct ptr_loc *loc;\n \n   loc = (struct ptr_loc *) obstack_alloc (&m_ptr_loc_obstack,\n \t\t\t\t\t  sizeof (struct ptr_loc));\n   loc->ptr = ptr;\n-  loc->filename = filename;\n-  loc->lineno = lineno;\n+  loc->loc = file_loc;\n   *htab_find_slot (m_ptr_locs, loc, INSERT) = loc;\n }\n \n /* Return the position associated with pointer PTR.  Return null if no\n    position was set.  */\n \n-const struct ptr_loc *\n+const md_reader::ptr_loc *\n md_reader::get_md_ptr_loc (const void *ptr)\n {\n   return (const struct ptr_loc *) htab_find (m_ptr_locs, &ptr);\n@@ -125,7 +116,7 @@ md_reader::copy_md_ptr_loc (const void *new_ptr, const void *old_ptr)\n {\n   const struct ptr_loc *loc = get_md_ptr_loc (old_ptr);\n   if (loc != 0)\n-    set_md_ptr_loc (new_ptr, loc->filename, loc->lineno);\n+    set_md_ptr_loc (new_ptr, loc->loc);\n }\n \n /* If PTR is associated with a known file position, print a #line\n@@ -136,7 +127,7 @@ md_reader::fprint_md_ptr_loc (FILE *outf, const void *ptr)\n {\n   const struct ptr_loc *loc = get_md_ptr_loc (ptr);\n   if (loc != 0)\n-    fprintf (outf, \"#line %d \\\"%s\\\"\\n\", loc->lineno, loc->filename);\n+    fprintf (outf, \"#line %d \\\"%s\\\"\\n\", loc->loc.lineno, loc->loc.filename);\n }\n \n /* Special fprint_md_ptr_loc for writing to STDOUT.  */\n@@ -672,7 +663,7 @@ md_reader::read_string (int star_if_braced)\n {\n   char *stringbuf;\n   int saw_paren = 0;\n-  int c, old_lineno;\n+  int c;\n \n   c = read_skip_spaces ();\n   if (c == '(')\n@@ -681,7 +672,7 @@ md_reader::read_string (int star_if_braced)\n       c = read_skip_spaces ();\n     }\n \n-  old_lineno = get_lineno ();\n+  file_location loc = get_current_location ();\n   if (c == '\"')\n     stringbuf = read_quoted_string ();\n   else if (c == '{')\n@@ -704,7 +695,7 @@ md_reader::read_string (int star_if_braced)\n   if (saw_paren)\n     require_char_ws (')');\n \n-  set_md_ptr_loc (stringbuf, get_filename (), old_lineno);\n+  set_md_ptr_loc (stringbuf, loc);\n   return stringbuf;\n }\n "}, {"sha": "eff40126f331c906273a088105d45b7ea7697ea7", "filename": "gcc/read-md.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737eb76789cd454918a85983255a1f62efcbfdc9/gcc%2Fread-md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737eb76789cd454918a85983255a1f62efcbfdc9/gcc%2Fread-md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.h?ref=737eb76789cd454918a85983255a1f62efcbfdc9", "patch": "@@ -149,6 +149,13 @@ struct mapping;\n class md_reader\n {\n  public:\n+  /* Associates PTR (which can be a string, etc.) with the file location\n+     specified by LOC.  */\n+  struct ptr_loc {\n+    const void *ptr;\n+    file_location loc;\n+  };\n+\n   md_reader (bool compact);\n   virtual ~md_reader ();\n \n@@ -183,7 +190,7 @@ class md_reader\n   void require_word_ws (const char *expected);\n   int peek_char (void);\n \n-  void set_md_ptr_loc (const void *ptr, const char *filename, int lineno);\n+  void set_md_ptr_loc (const void *ptr, file_location);\n   const struct ptr_loc *get_md_ptr_loc (const void *ptr);\n   void copy_md_ptr_loc (const void *new_ptr, const void *old_ptr);\n   void fprint_md_ptr_loc (FILE *outf, const void *ptr);"}]}