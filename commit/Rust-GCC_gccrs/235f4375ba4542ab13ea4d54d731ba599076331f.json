{"sha": "235f4375ba4542ab13ea4d54d731ba599076331f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM1ZjQzNzViYTQ1NDJhYjEzZWE0ZDU0ZDczMWJhNTk5MDc2MzMxZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T15:43:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T15:43:11Z"}, "message": "styleg-c.ads, [...] (Missing_Overriding): new procedure to implement style check that overriding operations are...\n\n2008-08-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* styleg-c.ads, styleg-c.adb (Missing_Overriding): new procedure to\n\timplement style check that overriding operations are explicitly marked\n\tat such.\n\n\t* style.ads (Missing_Overriding): new procedure that provides interface\n\tto previous one.\n\n\t* stylesw.ads, stylesw.adb: New style switch -gnatyO, to enable check\n\tthat the declaration or body of overriding operations carries an\n\texplicit overriding indicator.\n\n\t* sem_ch8.adb\n\t(Analyze_Subprogram_Renaming): if operation is overriding, check whether\n\texplicit indicator should be present.\n\n\t* sem_ch6.adb (Verify_Overriding_Indicator,\n\tCheck_Overriding_Indicator): If operation is overriding, check whether\n\tdeclaration and/or body of subprogram should be present\n\nFrom-SVN: r139316", "tree": {"sha": "db110bbbc9ab65618b70d615e6c675b9d6248c05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db110bbbc9ab65618b70d615e6c675b9d6248c05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/235f4375ba4542ab13ea4d54d731ba599076331f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235f4375ba4542ab13ea4d54d731ba599076331f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/235f4375ba4542ab13ea4d54d731ba599076331f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235f4375ba4542ab13ea4d54d731ba599076331f/comments", "author": null, "committer": null, "parents": [{"sha": "54e034613467cfab3e89f23f7a1043910791d35b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e034613467cfab3e89f23f7a1043910791d35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e034613467cfab3e89f23f7a1043910791d35b"}], "stats": {"total": 129, "additions": 109, "deletions": 20}, "files": [{"sha": "571e30e7ab5062e726437a9e30bb2c545d4cd85c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -1,3 +1,36 @@\n+2008-08-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Gnatmake_Switch_Found): New Boolean global variable\n+\t(Switch_May_Be_Passed_To_The_Compiler): New Boolean global variable\n+\t(Add_Switches): New Boolean parameter Unknown_Switches_To_The_Compiler\n+\t defaulted to True. Fail when Unknown_Switches_To_The_Compiler is False\n+\tand a switch is not recognized by gnatmake.\n+\t(Gnatmake): Implement new scheme for gnatmake switches and global\n+\tcompilation switches.\n+\t(Switches_Of): Try successively Switches (<file name>),\n+\tSwitches (\"Ada\"), Switches (others) and Default_Switches (\"Ada\").\n+\n+2008-08-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* styleg-c.ads, styleg-c.adb (Missing_Overriding): new procedure to\n+\timplement style check that overriding operations are explicitly marked\n+\tat such.\n+\n+\t* style.ads (Missing_Overriding): new procedure that provides interface\n+\tto previous one.\n+\n+\t* stylesw.ads, stylesw.adb: New style switch -gnatyO, to enable check\n+\tthat the declaration or body of overriding operations carries an\n+\texplicit overriding indicator.\n+\n+\t* sem_ch8.adb\n+\t(Analyze_Subprogram_Renaming): if operation is overriding, check whether\n+\texplicit indicator should be present.\n+\n+\t* sem_ch6.adb (Verify_Overriding_Indicator,\n+\tCheck_Overriding_Indicator): If operation is overriding, check whether\n+\tdeclaration and/or body of subprogram should be present\n+\n 2008-08-20  Vincent Celier  <celier@adacore.com>\n \n \t* prj-nmsc.adb (Check_Naming_Schemes): Accept source file names for"}, {"sha": "23de8b6085431bfeb2559d4a2fdbf3e5588afe57", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -1724,6 +1724,12 @@ package body Sem_Ch6 is\n                 \"if subprogram is primitive\",\n                 Body_Spec);\n             end if;\n+\n+         elsif Style_Check\n+           and then Is_Overriding_Operation (Spec_Id)\n+         then\n+            pragma Assert (Unit_Declaration_Node (Body_Id) = N);\n+            Style.Missing_Overriding (N, Body_Id);\n          end if;\n       end Verify_Overriding_Indicator;\n \n@@ -4167,6 +4173,10 @@ package body Sem_Ch6 is\n             Set_Is_Overriding_Operation (Subp);\n          end if;\n \n+         if Style_Check and then not Must_Override (Spec) then\n+            Style.Missing_Overriding (Decl, Subp);\n+         end if;\n+\n       --  If Subp is an operator, it may override a predefined operation.\n       --  In that case overridden_subp is empty because of our implicit\n       --  representation for predefined operators. We have to check whether the\n@@ -4190,16 +4200,23 @@ package body Sem_Ch6 is\n                  (\"subprogram & overrides predefined operator \", Spec, Subp);\n             end if;\n \n-         elsif Is_Overriding_Operation (Subp) then\n-            null;\n-\n          elsif Must_Override (Spec) then\n-            if not Operator_Matches_Spec (Subp, Subp) then\n-               Error_Msg_NE (\"subprogram & is not overriding\", Spec, Subp);\n-\n-            else\n+            if Is_Overriding_Operation (Subp) then\n                Set_Is_Overriding_Operation (Subp);\n+\n+            elsif not Operator_Matches_Spec (Subp, Subp) then\n+               Error_Msg_NE (\"subprogram & is not overriding\", Spec, Subp);\n             end if;\n+\n+         elsif not Error_Posted (Subp)\n+           and then Style_Check\n+           and then Operator_Matches_Spec (Subp, Subp)\n+             and then\n+               not Is_Predefined_File_Name\n+                 (Unit_File_Name (Get_Source_Unit (Subp)))\n+         then\n+            Set_Is_Overriding_Operation (Subp);\n+            Style.Missing_Overriding (Decl, Subp);\n          end if;\n \n       elsif Must_Override (Spec) then"}, {"sha": "5dada2629d9065e08e5fc3b50f6b0232ddc190ed", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -1822,16 +1822,19 @@ package body Sem_Ch8 is\n \n          --  Ada 2005: check overriding indicator\n \n-         if Must_Override (Specification (N))\n-           and then not Is_Overriding_Operation (Rename_Spec)\n-         then\n-            Error_Msg_NE (\"subprogram& is not overriding\", N, Rename_Spec);\n+         if Is_Overriding_Operation (Rename_Spec) then\n+            if Must_Not_Override (Specification (N)) then\n+               Error_Msg_NE\n+                 (\"subprogram& overrides inherited operation\",\n+                    N, Rename_Spec);\n+            elsif\n+              Style_Check and then not Must_Override (Specification (N))\n+            then\n+               Style.Missing_Overriding (N, Rename_Spec);\n+            end if;\n \n-         elsif Must_Not_Override (Specification (N))\n-           and then Is_Overriding_Operation (Rename_Spec)\n-         then\n-            Error_Msg_NE\n-              (\"subprogram& overrides inherited operation\", N, Rename_Spec);\n+         elsif Must_Override (Specification (N)) then\n+            Error_Msg_NE (\"subprogram& is not overriding\", N, Rename_Spec);\n          end if;\n \n       --  Normal subprogram renaming (not renaming as body)"}, {"sha": "07e57023ff4ef06cc3d444df069ca81c015f5fcd", "filename": "gcc/ada/style.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstyle.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstyle.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.ads?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -187,6 +187,11 @@ package Style is\n    --  Called after scanning a conditional expression that has at least one\n    --  level of parentheses around the entire expression.\n \n+   procedure Missing_Overriding (N : Node_Id; E : Entity_Id)\n+     renames Style_C_Inst.Missing_Overriding;\n+   --  Called where N is the declaration or body of an overriding operation of\n+   --  a tagged type, and does not have an overriding_indicator.\n+\n    function Mode_In_Check return Boolean\n      renames Style_Inst.Mode_In_Check;\n    --  Determines whether style checking is active and the Mode_In_Check is"}, {"sha": "5734471ecfdb7a7a6fcd5b93ef184f5d84024d0a", "filename": "gcc/ada/styleg-c.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstyleg-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstyleg-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg-c.adb?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -230,6 +230,23 @@ package body Styleg.C is\n       end if;\n    end Check_Identifier;\n \n+   ------------------------\n+   -- Missing_Overriding --\n+   ------------------------\n+\n+   procedure Missing_Overriding (N : Node_Id; E : Entity_Id) is\n+   begin\n+      if Style_Check_Missing_Overriding and then Comes_From_Source (N) then\n+         if Nkind (N) = N_Subprogram_Body then\n+            Error_Msg_N\n+              (\"(style) missing OVERRIDING indicator in body of&\", E);\n+         else\n+            Error_Msg_N\n+              (\"(style) missing OVERRIDING indicator in declaration of&\", E);\n+         end if;\n+      end if;\n+   end Missing_Overriding;\n+\n    -----------------------------------\n    -- Subprogram_Not_In_Alpha_Order --\n    -----------------------------------"}, {"sha": "b3fc1f61fcee336f73438acc3fb61ff4c9e3c343", "filename": "gcc/ada/styleg-c.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstyleg-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstyleg-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg-c.ads?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,6 +53,10 @@ package Styleg.C is\n    --  spelling is to be checked against the Chars spelling in identifier node\n    --  Def (which may be either an N_Identifier, or N_Defining_Identifier node)\n \n+   procedure Missing_Overriding (N : Node_Id; E : Entity_Id);\n+   --  Called where N is the declaration or body of an overriding operation,\n+   --  and the node does not have an overriding_indicator.\n+\n    procedure Subprogram_Not_In_Alpha_Order (Name : Node_Id);\n    --  Called if Name is the name of a subprogram body in a package body\n    --  that is not in alphabetical order."}, {"sha": "764d9af80e9c7a251f7001911c31f53662d89357", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -49,6 +49,7 @@ package body Stylesw is\n       Style_Check_Layout                := False;\n       Style_Check_Max_Line_Length       := False;\n       Style_Check_Max_Nesting_Level     := False;\n+      Style_Check_Missing_Overriding    := False;\n       Style_Check_Mode_In               := False;\n       Style_Check_Order_Subprograms     := False;\n       Style_Check_Pragma_Casing         := False;\n@@ -123,6 +124,7 @@ package body Stylesw is\n       Add ('l', Style_Check_Layout);\n       Add ('n', Style_Check_Standard);\n       Add ('o', Style_Check_Order_Subprograms);\n+      Add ('O', Style_Check_Missing_Overriding);\n       Add ('p', Style_Check_Pragma_Casing);\n       Add ('r', Style_Check_References);\n       Add ('s', Style_Check_Specs);\n@@ -370,6 +372,9 @@ package body Stylesw is\n             when 'o' =>\n                Style_Check_Order_Subprograms     := True;\n \n+            when 'O' =>\n+               Style_Check_Missing_Overriding    := True;\n+\n             when 'p' =>\n                Style_Check_Pragma_Casing         := True;\n "}, {"sha": "8ed2ae2ac506387d39845a6b3734b02f064443a8", "filename": "gcc/ada/stylesw.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstylesw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235f4375ba4542ab13ea4d54d731ba599076331f/gcc%2Fada%2Fstylesw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.ads?ref=235f4375ba4542ab13ea4d54d731ba599076331f", "patch": "@@ -156,15 +156,20 @@ package Stylesw is\n    --  with the IF keyword.\n \n    Style_Check_Max_Line_Length : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatym/M switches. If\n-   --  it is True, it activates checking for a maximum line length of\n+   --  This can be set True by using the -gnatg or -gnatym/M switches. If it is\n+   --  True, it activates checking for a maximum line length of\n    --  Style_Max_Line_Length characters.\n \n    Style_Check_Max_Nesting_Level : Boolean := False;\n    --  This can be set True by using -gnatyLnnn with a value other than zero\n    --  (a value of zero resets it to False). If True, it activates checking\n    --  the maximum nesting level against Style_Max_Nesting_Level.\n \n+   Style_Check_Missing_Overriding : Boolean := False;\n+   --  This can be set True by using the -gnatyO switch. If it is True, then\n+   --  \"[not] overriding\" is required in subprogram declarations and bodies\n+   --  where appropriate.\n+\n    Style_Check_Mode_In : Boolean := False;\n    --  This can be set True by using -gnatyI. If True, it activates checking\n    --  that mode IN is not used on its own (since it is the default)."}]}