{"sha": "26fb114d1345224c2af762534482eb8ad117f622", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZmYjExNGQxMzQ1MjI0YzJhZjc2MjUzNDQ4MmViOGFkMTE3ZjYyMg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb.gcc@gmail.com", "date": "2006-01-14T11:04:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-01-14T11:04:16Z"}, "message": "re PR rtl-optimization/24257 (ICE: in extract_insn with -O -fgcse -fgcse-sm)\n\n2006-01-14  Steven Bosscher  <stevenb.gcc@gmail.com>\n\tRichard Guenther  <rguenther@suse.de>\n\n\tPR rtl-optimization/24257\n\t* gcse.c (find_moveable_store): Only consider a store movable\n\twhen the SET_SRC of the insn can be assigned to a register.\n\n\t* gcc.dg/torture/pr24257.c: New testcase.\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r109701", "tree": {"sha": "1005f3498bda5cb6a91a72d21a00110ae5c54ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1005f3498bda5cb6a91a72d21a00110ae5c54ffb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26fb114d1345224c2af762534482eb8ad117f622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26fb114d1345224c2af762534482eb8ad117f622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26fb114d1345224c2af762534482eb8ad117f622", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26fb114d1345224c2af762534482eb8ad117f622/comments", "author": null, "committer": null, "parents": [{"sha": "2482200f02cb997e951140aafe3415e27b07b8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2482200f02cb997e951140aafe3415e27b07b8fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2482200f02cb997e951140aafe3415e27b07b8fd"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "e7961fe5f1cc6340d1aee80dd92528f82494b04a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26fb114d1345224c2af762534482eb8ad117f622/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26fb114d1345224c2af762534482eb8ad117f622/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26fb114d1345224c2af762534482eb8ad117f622", "patch": "@@ -1,3 +1,10 @@\n+2006-01-14  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\tRichard Guenther  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/24257\n+\t* gcse.c (find_moveable_store): Only consider a store movable\n+\twhen the SET_SRC of the insn can be assigned to a register.\n+\n 2006-01-14  Ian Lance Taylor  <ian@airs.com>\n \n \t* tree.c (tree_not_class_check_failed): New function."}, {"sha": "290f70ecadac6c7e7c1bf6956a4ae520f70ddb8f", "filename": "gcc/gcse.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26fb114d1345224c2af762534482eb8ad117f622/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26fb114d1345224c2af762534482eb8ad117f622/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=26fb114d1345224c2af762534482eb8ad117f622", "patch": "@@ -5664,6 +5664,14 @@ find_moveable_store (rtx insn, int *regs_set_before, int *regs_set_after)\n   if (find_reg_note (insn, REG_EH_REGION, NULL_RTX))\n     return;\n \n+  /* Make sure that the SET_SRC of this store insns can be assigned to\n+     a register, or we will fail later on in replace_store_insn, which\n+     assumes that we can do this.  But sometimes the target machine has\n+     oddities like MEM read-modify-write instruction.  See for example\n+     PR24257.  */\n+  if (!can_assign_to_reg_p (SET_SRC (set)))\n+    return;\n+\n   ptr = ldst_entry (dest);\n   if (!ptr->pattern_regs)\n     ptr->pattern_regs = extract_mentioned_regs (dest);"}, {"sha": "66a7b7fcf7db24c6bf3ca5859a659dfbc986c88b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26fb114d1345224c2af762534482eb8ad117f622/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26fb114d1345224c2af762534482eb8ad117f622/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26fb114d1345224c2af762534482eb8ad117f622", "patch": "@@ -1,3 +1,9 @@\n+2006-01-14  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\tRichard Guenther  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/24257\n+\t* gcc.dg/torture/pr24257.c: New testcase.\n+\n 2006-01-13  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.c-torture/execute/20060110-1.c: New test."}, {"sha": "200bd18832cd1eb284a969b6c62ce2bce6aadaed", "filename": "gcc/testsuite/gcc.dg/torture/pr24257.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26fb114d1345224c2af762534482eb8ad117f622/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24257.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26fb114d1345224c2af762534482eb8ad117f622/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24257.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24257.c?ref=26fb114d1345224c2af762534482eb8ad117f622", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fgcse -fgcse-sm\" } */\n+\n+typedef struct A {\n+    int buf, left;\n+} A;\n+\n+static void flush(A *s, int n)\n+{\n+    s->buf <<= n;\n+\n+    while (s->left < 32) {\n+        s->buf <<= 8;\n+        s->left += 8;\n+    }\n+\n+    s->buf=0;\n+}\n+\n+void oof(A *s, int n)\n+{\n+    s->buf = n;\n+    s->left = n;\n+\n+    flush(s, n);\n+}"}]}