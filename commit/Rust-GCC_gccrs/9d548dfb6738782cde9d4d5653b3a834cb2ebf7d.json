{"sha": "9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ1NDhkZmI2NzM4NzgyY2RlOWQ0ZDU2NTNiM2E4MzRjYjJlYmY3ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-06-04T07:26:06Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-06-04T07:26:06Z"}, "message": "re PR c/30020 (improve diagnostics for limited range warning for a switch statement)\n\n\tPR c/30020\n\t* c-common.c (check_case_bounds): Add location parameter.\n\tUse it.\n\t(c_add_case_label): Pass loc to check_case_bounds.\n\n\t* c-c++-common/pr30020.c: New test.\n\nFrom-SVN: r211212", "tree": {"sha": "9e9bd176114cc68c557138b3d6cb0a93292ca2b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e9bd176114cc68c557138b3d6cb0a93292ca2b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "348d4b0a54328f618754aa5f7f7067ea50e7b3bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348d4b0a54328f618754aa5f7f7067ea50e7b3bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348d4b0a54328f618754aa5f7f7067ea50e7b3bc"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "c6a041a037ec0b52221c18da6f86f5dd903f119b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "patch": "@@ -1,3 +1,10 @@\n+2014-06-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/30020\n+\t* c-common.c (check_case_bounds): Add location parameter.\n+\tUse it.\n+\t(c_add_case_label): Pass loc to check_case_bounds.\n+\n 2014-06-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60439"}, {"sha": "07a17981642da4607217e1702351bb38837e3b2c", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "patch": "@@ -301,7 +301,7 @@ struct visibility_flags visibility_options;\n \n static tree c_fully_fold_internal (tree expr, bool, bool *, bool *);\n static tree check_case_value (tree);\n-static bool check_case_bounds (tree, tree, tree *, tree *);\n+static bool check_case_bounds (location_t, tree, tree, tree *, tree *);\n \n static tree handle_packed_attribute (tree *, tree, tree, int, bool *);\n static tree handle_nocommon_attribute (tree *, tree, tree, int, bool *);\n@@ -3355,7 +3355,7 @@ check_case_value (tree value)\n    untouched) or false if the label is out of range.  */\n \n static bool\n-check_case_bounds (tree type, tree orig_type,\n+check_case_bounds (location_t loc, tree type, tree orig_type,\n \t\t   tree *case_low_p, tree *case_high_p)\n {\n   tree min_value, max_value;\n@@ -3373,33 +3373,34 @@ check_case_bounds (tree type, tree orig_type,\n   if (tree_int_cst_compare (case_low, min_value) < 0\n       && tree_int_cst_compare (case_high, min_value) < 0)\n     {\n-      warning (0, \"case label value is less than minimum value for type\");\n+      warning_at (loc, 0, \"case label value is less than minimum value \"\n+\t\t  \"for type\");\n       return false;\n     }\n \n   /* Case value is greater than maximum for type.  */\n   if (tree_int_cst_compare (case_low, max_value) > 0\n       && tree_int_cst_compare (case_high, max_value) > 0)\n     {\n-      warning (0, \"case label value exceeds maximum value for type\");\n+      warning_at (loc, 0, \"case label value exceeds maximum value for type\");\n       return false;\n     }\n \n   /* Saturate lower case label value to minimum.  */\n   if (tree_int_cst_compare (case_high, min_value) >= 0\n       && tree_int_cst_compare (case_low, min_value) < 0)\n     {\n-      warning (0, \"lower value in case label range\"\n-\t       \" less than minimum value for type\");\n+      warning_at (loc, 0, \"lower value in case label range\"\n+\t\t  \" less than minimum value for type\");\n       case_low = min_value;\n     }\n \n   /* Saturate upper case label value to maximum.  */\n   if (tree_int_cst_compare (case_low, max_value) <= 0\n       && tree_int_cst_compare (case_high, max_value) > 0)\n     {\n-      warning (0, \"upper value in case label range\"\n-\t       \" exceeds maximum value for type\");\n+      warning_at (loc, 0, \"upper value in case label range\"\n+\t\t  \" exceeds maximum value for type\");\n       case_high = max_value;\n     }\n \n@@ -6014,7 +6015,7 @@ c_add_case_label (location_t loc, splay_tree cases, tree cond, tree orig_type,\n      expression.  If both low_value and high_value are out of range,\n      don't insert the case label and return NULL_TREE.  */\n   if (low_value\n-      && !check_case_bounds (type, orig_type,\n+      && !check_case_bounds (loc, type, orig_type,\n \t\t\t     &low_value, high_value ? &high_value : NULL))\n     return NULL_TREE;\n "}, {"sha": "f1878b6dece4613129d71c3f0d30ad61edee0bdb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "patch": "@@ -1,3 +1,8 @@\n+2014-06-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/30020\n+\t* c-c++-common/pr30020.c: New test.\n+\n 2014-06-03  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.c-torture/compile/20140528-1.c: New testcase."}, {"sha": "b8082cd49bf83a7da2b9caaba9ead260f735275f", "filename": "gcc/testsuite/c-c++-common/pr30020.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr30020.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d548dfb6738782cde9d4d5653b3a834cb2ebf7d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr30020.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr30020.c?ref=9d548dfb6738782cde9d4d5653b3a834cb2ebf7d", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/30020 */\n+/* { dg-do compile } */\n+\n+int\n+foo (unsigned char c)\n+{\n+  switch (c) { case 42: case -1: return -1; }; /* { dg-warning \"25:case label value\" } */\n+  switch (c) { case 42: case 300: return -1; }; /* { dg-warning \"25:case label value\" } */\n+  switch (c) { case 42: case -1 ... 2: return -1; }; /* { dg-warning \"25:lower value in case\" } */\n+  switch (c) { case 42: case 250 ... 300: return -1; }; /* { dg-warning \"25:upper value in case\" } */\n+  return 0;\n+}"}]}