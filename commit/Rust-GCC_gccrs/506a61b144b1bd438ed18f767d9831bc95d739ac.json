{"sha": "506a61b144b1bd438ed18f767d9831bc95d739ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2YTYxYjE0NGIxYmQ0MzhlZDE4Zjc2N2Q5ODMxYmM5NWQ3MzlhYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-07-31T02:13:35Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-07-31T02:13:35Z"}, "message": "* alpha.h, arc.h, arm/aout.h, avr.h, cris.h, d30v.h, dsp16xx.h,\n\n\tfr30.h, h8300.h, i370.h, i386/sco5.h, i386/unix.h, i960.h, ia64.h,\n\tip2k.h, m32r.h, mcore.h, mips.h, mn10200.h, mn10300.h, ns32k.h,\n\topenbsd.h, pa/pa-linux.h, pdp11.h, romp.h, rs6000/sysv4.h,\n\ts390/linux.h, sh.h, sparc.h, stormy16.h, v850.h, vax.h, xtensa.h:\n\t(ASM_GLOBALIZE_LABEL): Delete.\n\t(GLOBAL_ASM_OP): Define.\n\nFrom-SVN: r55892", "tree": {"sha": "821a7e612a3c24f4cf287e43062df4201dbee245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/821a7e612a3c24f4cf287e43062df4201dbee245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506a61b144b1bd438ed18f767d9831bc95d739ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506a61b144b1bd438ed18f767d9831bc95d739ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506a61b144b1bd438ed18f767d9831bc95d739ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506a61b144b1bd438ed18f767d9831bc95d739ac/comments", "author": null, "committer": null, "parents": [{"sha": "072cdaed4f53b143452a0e583133d1b8bca53435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072cdaed4f53b143452a0e583133d1b8bca53435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072cdaed4f53b143452a0e583133d1b8bca53435"}], "stats": {"total": 309, "additions": 74, "deletions": 235}, "files": [{"sha": "3f8c9096c93f58afea514ae58cc9b9137d6783be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1,5 +1,13 @@\n 2002-07-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* alpha.h, arc.h, arm/aout.h, avr.h, cris.h, d30v.h, dsp16xx.h,\n+\tfr30.h, h8300.h, i370.h, i386/sco5.h, i386/unix.h, i960.h, ia64.h,\n+\tip2k.h, m32r.h, mcore.h, mips.h, mn10200.h, mn10300.h, ns32k.h,\n+\topenbsd.h, pa/pa-linux.h, pdp11.h, romp.h, rs6000/sysv4.h,\n+\ts390/linux.h, sh.h, sparc.h, stormy16.h, v850.h, vax.h, xtensa.h:\n+\t(ASM_GLOBALIZE_LABEL): Delete.\n+\t(GLOBAL_ASM_OP): Define.\n+\n \t* m68hc11.h, m68k.h, m88k.h (ASM_GLOBALIZE_LABEL): Delete.\n \t\n \t* defaults.h (ASM_GLOBALIZE_LABEL): Provide a default."}, {"sha": "cdba117fabc6174db20e6b37035ddc6758ef5f34", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1743,11 +1743,8 @@ do {\t\t\t\t\t\t\\\n   fputs (name_, STREAM);\t\t\t\\\n } while (0)\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* The prefix to add to user-visible assembler symbols.  */\n "}, {"sha": "d1cfabc520cb25507b3781f55295392fe5319035", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1174,14 +1174,8 @@ extern const char *arc_text_section, *arc_data_section, *arc_rodata_section;\n    no longer contain unusual constructs.  */\n #define ASM_APP_OFF \"\"\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME) \\\n-do {\t\t\t\t\\\n-  fputs (\"\\t.global\\t\", FILE);\t\\\n-  assemble_name (FILE, NAME);\t\\\n-  fputs (\"\\n\", FILE);\t\t\\\n-} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global\\t\"\n \n /* A C statement (sans semicolon) to output on FILE an assembler pseudo-op to\n    declare a library function name external.  The name of the library function"}, {"sha": "3f29b395e033d379a4386bc9c2a897b67964b012", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -144,17 +144,8 @@ Boston, MA 02111-1307, USA.  */\n   while (0)\n #endif\n \n-/* Output a globalising directive for a label.  */\n-#ifndef ASM_GLOBALIZE_LABEL\n-#define ASM_GLOBALIZE_LABEL(STREAM, NAME)\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fprintf (STREAM, \"\\t.global\\t\");\t\t\\\n-      assemble_name (STREAM, NAME);\t\t\\\n-      fputc ('\\n',STREAM);\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-#endif\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global\\t\"\n \n /* Make an internal label into a string.  */\n #ifndef ASM_GENERATE_INTERNAL_LABEL"}, {"sha": "a405cac8c7c3139ea1ad774c231f036ba7961739", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -2052,20 +2052,8 @@ do {\t\t\t\t\t\t\t\t\t \\\n    If your target assembler doesn't support the .string directive, you\n    should define this to zero.  */\n \n-#define ASM_GLOBALIZE_LABEL(STREAM, NAME)\t\\\n-do {\t\t\t\t\t\t\\\n-  fprintf (STREAM, \".global\\t\");\t\t\\\n-  assemble_name (STREAM, NAME);\t\t\t\\\n-  fprintf (STREAM, \"\\n\");\t\t\t\\\n-}\t\t\t\t\t\t\\\n-while (0)\n-     \n-/* A C statement (sans semicolon) to output to the stdio stream\n-   STREAM some commands that will make the label NAME global; that\n-   is, available for reference from other files.  Use the expression\n-   `assemble_name (STREAM, NAME)' to output the name itself; before\n-   and after that, output the additional assembler syntax for making\n-   that name global, and a newline.  */\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".global\\t\"\n \n #define ASM_WEAKEN_LABEL(FILE, NAME) \t\\\n   do\t\t\t\t\t\\"}, {"sha": "94cb979e9fc128e98604699040a94709736c35a0", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1574,14 +1574,8 @@ call_ ## FUNC (void)\t\t\t\t\t\t\\\n \n /* Node: Label Output */\n \n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fputs (\"\\t.global \", FILE);\t\t\\\n-      assemble_name (FILE, NAME);\t\t\\\n-      fputs (\"\\n\", FILE);\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n #define SUPPORTS_WEAK 1\n "}, {"sha": "84b5e7d28e074a0527dd7a1e64a001769bc34b58", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -3039,18 +3039,8 @@ extern const char *d30v_branch_cost_string;\n    Defined in svr4.h.  */\n /* #define ASM_FINISH_DECLARE_OBJECT(STREAM, DECL, TOPLEVEL, ATEND) */\n \n-/* A C statement (sans semicolon) to output to the stdio stream STREAM some\n-   commands that will make the label NAME global; that is, available for\n-   reference from other files.  Use the expression `assemble_name (STREAM,\n-   NAME)' to output the name itself; before and after that, output the\n-   additional assembler syntax for making that name global, and a newline.  */\n-\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fputs (\"\\t.globl \", STREAM);\t\t\t\t\t\t\\\n-  assemble_name (STREAM, NAME);\t\t\t\t\t\t\\\n-  fputs (\"\\n\", STREAM);\t\t\t\t\t\t\t\\\n-} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* A C statement (sans semicolon) to output to the stdio stream STREAM some\n    commands that will make the label NAME weak; that is, available for"}, {"sha": "c2fddf2706fa8f8ff2b45ef8f48dbcc077b5d443", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1676,11 +1676,8 @@ extern struct dsp16xx_frame_info current_frame_info;\n \f\n /* OUTPUT AND GENERATION OF LABELS */\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\".global \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".global \"\n \n /* A C statement to output to the stdio stream any text necessary\n    for declaring the name of an external symbol named name which"}, {"sha": "c463f5b7aeab86cd337effd3d549f07ec9c7c51f", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1165,19 +1165,8 @@ do\t\t\t\t\t\t\t\t\t\t\\\n /*}}}*/ \f\n /*{{{  Output and Generation of Labels.  */ \n \n-/* A C statement (sans semicolon) to output to the stdio stream STREAM some\n-   commands that will make the label NAME global; that is, available for\n-   reference from other files.  Use the expression `assemble_name (STREAM,\n-   NAME)' to output the name itself; before and after that, output the\n-   additional assembler syntax for making that name global, and a newline.  */\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fputs (\"\\t.globl \", STREAM);\t\t\\\n-      assemble_name (STREAM, NAME);\t\t\\\n-      fputs (\"\\n\", STREAM);\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* A C expression to assign to OUTVAR (which is a variable of type `char *') a\n    newly allocated string made from the string NAME and the number NUMBER, with"}, {"sha": "79e13e725e25180f0e07c61387b0e128e64b1372", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1123,17 +1123,8 @@ struct cum_arg\n \n #define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fputs (\"\\t.global \", FILE);\t\t\\\n-      assemble_name (FILE, NAME);\t\t\\\n-      fputs (\"\\n\", FILE);\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n    ASM_OUTPUT_LABEL (FILE, NAME)"}, {"sha": "44de0f39f0e7f7690092f26e5c90fa7015da2ba7", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1924,11 +1924,8 @@ abort(); \\\n #define ASM_OUTPUT_ALIGN(FILE,LOG) \\\n   if ((LOG)!=0) fprintf ((FILE), \"\\t.balign %d\\n\", 1<<(LOG))\n  \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)  \\\n-  (fputs (\".globl \", FILE), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".globl \"\n \n /* This says how to output an assembler line\n    to define a global common symbol.  */"}, {"sha": "1392c700c65bebd087d1c120a6d013621e2cfa59", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -351,8 +351,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n \n #undef ASM_GLOBALIZE_LABEL\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  (fprintf ((FILE), \"%s\", GLOBAL_ASM_OP), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n \n #undef ASM_OUTPUT_EXTERNAL_LIBCALL\n #define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\t\t\t\\"}, {"sha": "9139defe1cfef22be5fcbcef95f8aba21ce30ef6", "filename": "gcc/config/i386/unix.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi386%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi386%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Funix.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -58,11 +58,8 @@ Boston, MA 02111-1307, USA.  */\n \n #define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  (fputs (\".globl \", FILE), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".globl \"\n \n /* By default, target has a 80387, uses IEEE compatible arithmetic,\n    and returns float values in the 387.  */"}, {"sha": "d6015618f677032bb2213b9e509a92755e4e0bd8", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1312,13 +1312,8 @@ extern struct rtx_def *i960_compare_op0, *i960_compare_op1;\n \tfprintf((FILE),\"\\t.stabd\t68,0,%d\\n\",(LINE));\t\\\n   } }\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\t\\\n-{ fputs (\"\\t.globl \", FILE);\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\\\n-  fputs (\"\\n\", FILE); }\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* The prefix to add to user-visible assembler symbols.  */\n "}, {"sha": "0a640d0a6e698943963aaff5068c57de0a1d7944", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1905,16 +1905,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ia64_asm_output_label = 0;\t\t\t\t\t\t\\\n } while (0)\n \n-/* A C statement (sans semicolon) to output to the stdio stream STREAM some\n-   commands that will make the label NAME global; that is, available for\n-   reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fputs (\"\\t.global \", STREAM);\t\t\t\t\t\t\\\n-  assemble_name (STREAM, NAME);\t\t\t\t\t\t\\\n-  fputs (\"\\n\", STREAM);\t\t\t\t\t\t\t\\\n-} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n /* A C statement (sans semicolon) to output to the stdio stream STREAM any text\n    necessary for declaring the name of an external symbol named NAME which is"}, {"sha": "d8aa1d8d9976cdcd24e2d9cf887dfaed3f27ac4c", "filename": "gcc/config/ip2k/ip2k.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fip2k%2Fip2k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fip2k%2Fip2k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -2162,18 +2162,8 @@ do {\t\t\t\t\t\t\t\\\n    the i386) don't know about that.  Also, we don't use \\v\n    since some versions of gas, such as 2.2 did not accept it.  */\n \n-#define ASM_GLOBALIZE_LABEL(STREAM, NAME)\t\\\n-do {\t\t\t\t\t\t\\\n-  fprintf ((STREAM), \".global\\t\");\t\t\\\n-  assemble_name ((STREAM), (NAME));\t\t\\\n-  fprintf ((STREAM), \"\\n\");\t\t\t\\\n-} while (0)     \n-/* A C statement (sans semicolon) to output to the stdio stream\n-   STREAM some commands that will make the label NAME global; that\n-   is, available for reference from other files.  Use the expression\n-   `assemble_name (STREAM, NAME)' to output the name itself; before\n-   and after that, output the additional assembler syntax for making\n-   that name global, and a newline.  */\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".global\\t\"\n \n #undef ASM_FORMAT_PRIVATE_NAME\n #define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\"}, {"sha": "89d147d8566d464973c222ce7e025666ccef61d9", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1660,16 +1660,8 @@ sbss_section ()\t\t\t\t\t\t\t\t\\\n    no longer contain unusual constructs.  */\n #define ASM_APP_OFF \"\"\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\\\n-  do\t\t\t\t\t\\\n-    {\t\t\t\t\t\\\n-      fputs (\"\\t.global\\t\", FILE);\t\\\n-      assemble_name (FILE, NAME);\t\\\n-      fputs (\"\\n\", FILE);\t\t\\\n-    }\t\t\t\t\t\\\n-  while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global\\t\"\n \n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */"}, {"sha": "685d62013be7063556a7855e3433bf65ac6812e4", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1161,11 +1161,8 @@ extern long mcore_current_compilation_timestamp;\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n-/* Output a globalising directive for a label.  */\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)  \\\n-  (fprintf (STREAM, \"\\t.export\\t\"),\t  \\\n-   assemble_name (STREAM, NAME),\t  \\\n-   fputc ('\\n',STREAM))                   \\\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.export\\t\"\n \n /* The prefix to add to user-visible assembler symbols. */\n #undef  USER_LABEL_PREFIX"}, {"sha": "f492b0d141a0cce133a79cfb13e909b04b97e70a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -4261,16 +4261,8 @@ do\t\t\t\t\t\t\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n-\n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    fputs (\"\\t.globl\\t\", STREAM);\t\t\t\t\t\\\n-    assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-    fputs (\"\\n\", STREAM);\t\t\t\t\t\t\\\n-  } while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl\\t\"\n \n /* This says how to define a global common symbol.  */\n "}, {"sha": "ed162f8bdbea91740bf670e9e232d7cfd559c4de", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -814,11 +814,8 @@ struct cum_arg { int nbytes; };\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n   asm_output_aligned_bss ((FILE), (DECL), (NAME), (SIZE), (ALIGN))\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\\\n-  do { fputs (\"\\t.global \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */"}, {"sha": "b0cb575d18a4b67d25c5691a501b1e76a0752b2a", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -895,11 +895,8 @@ struct cum_arg {int nbytes; };\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n   asm_output_aligned_bss ((FILE), (DECL), (NAME), (SIZE), (ALIGN))\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\\\n-  do { fputs (\"\\t.global \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */"}, {"sha": "6f4cc5ff00d2714395b27e341ff7338dd44dc149", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1322,13 +1322,11 @@ __transfer_from_trampoline ()\t\t\\\n    defined for reference from other files.  */\n \n #ifndef COLLECT\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".globl \"\n #else\n #define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.globl\\t%s\\n\", NAME);\t\t\t\t\\\n-} while (0)\n+  fprintf ((STREAM), \"\\t.globl\\t%s\\n\", (NAME));\n #endif\n \n /* This is how to output an internal numbered label where"}, {"sha": "ee6b52cdec6138031e106a257ce60ccca8b27833", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -175,10 +175,12 @@ Boston, MA 02111-1307, USA.  */\n #undef TYPE_ASM_OP\n #undef SIZE_ASM_OP\n #undef SET_ASM_OP\n+#undef GLOBAL_ASM_OP\n \n #define TYPE_ASM_OP\t\"\\t.type\\t\"\n #define SIZE_ASM_OP\t\"\\t.size\\t\"\n #define SET_ASM_OP\t\"\\t.set\\t\"\n+#define GLOBAL_ASM_OP\t\"\\t.globl\\t\"\n \n /* The following macro defines the format used to output the second\n    operand of the .type assembler directive.  */\n@@ -273,14 +275,6 @@ do {\t\t\t\t\t\t\t\t\t \\\n   do { fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME); \\\n        fputc ('\\n', FILE); } while (0)\n #endif\n-\n-/* Tell the assembler that a symbol is global.  */\n-#ifndef ASM_GLOBALIZE_LABEL\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME) \\\n-  do { fputs (\"\\t.globl\\t\", FILE); assemble_name (FILE, NAME); \\\n-       fputc ('\\n', FILE); } while(0)\n-#endif\n-\n \f\n /* Storage layout.  */\n "}, {"sha": "d42dc01336a30c2157953101691de0f8327016c7", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -168,9 +168,10 @@ Boston, MA 02111-1307, USA.  */\n    does what we want (i.e. uses colons).  It must be compatible with\n    ASM_GENERATE_INTERNAL_LABEL(), so do not define it here.  */\n \n+/* Use the default.  */\n #undef ASM_GLOBALIZE_LABEL\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME) \\\n-  (fputs (\".globl \", FILE), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n+/* Globalizing directive for a label.  */\n+#definef GLOBAL_ASM_OP \".globl \"\n \n /* FIXME: Hacked from the <elfos.h> one so that we avoid multiple\n    labels in a function declaration (since pa.c seems determined to do"}, {"sha": "12230781d81f47f1db19e0fa85e46d632e2bfd8e", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1029,11 +1029,8 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n {\"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"sp\", \"pc\",     \\\n  \"ac0\", \"ac1\", \"ac2\", \"ac3\", \"ac4\", \"ac5\" }\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs(\"\\n\", FILE); } while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* The prefix to add to user-visible assembler symbols. */\n "}, {"sha": "ce506b0e99bbe3ffd7d1d09272c2257b400b5adb", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1315,11 +1315,8 @@ struct rt_cargs {int gregs, fregs; };\n  \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\", \"ap\",\t\t\\\n  \"fr0\", \"fr1\", \"fr2\", \"fr3\", \"fr4\", \"fr5\", \"fr6\", \"fr7\" }\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* The prefix to add to user-visible assembler symbols.  */\n "}, {"sha": "ae589fd948ec63cd07e94474f28b21207928e452", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -680,12 +680,8 @@ extern int rs6000_pic_labelno;\n #define\tASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n   asm_fprintf (FILE, \"%L%s\", PREFIX)\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define\tASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\"\\t.globl \", FILE);\t\\\n-       assemble_name (FILE, NAME); putc ('\\n', FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* This says how to output assembler code to declare an\n    uninitialized internal linkage data object.  Under SVR4,"}, {"sha": "0907d290c1a1257be839e9a17aeb40e442f66bbc", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -207,8 +207,8 @@ Boston, MA 02111-1307, USA.  */\n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n \n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)  \\\n-  (fputs (\".globl \", FILE), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".globl \"\n \f\n /* Output code to add DELTA to the first argument, and then jump to FUNCTION.\n    Used for C++ multiple inheritance.  */"}, {"sha": "1ad1306abdc62ccc1f675e346ebc7caefd10c06c", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -3003,11 +3003,8 @@ while (0)\n   if ((LOG) != 0)\t\t\t\\\n     fprintf ((FILE), \"\\t.align %d\\n\", (LOG))\n \n-/* Output a globalising directive for a label.  */\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\\\n-  (fprintf ((STREAM), \"\\t.global\\t\"),\t\t\\\n-   assemble_name ((STREAM), (NAME)),\t\t\\\n-   fputc ('\\n', (STREAM)))\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global\\t\"\n \n /* #define ASM_OUTPUT_CASE_END(STREAM,NUM,TABLE)\t    */\n "}, {"sha": "5c4c9653b13329d2efba4ae63b739660f899bfcc", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -2729,8 +2729,8 @@ case LABEL_REF: case SYMBOL_REF: case CONST_DOUBLE:\n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n \n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\"\\t.global \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n /* The prefix to add to user-visible assembler symbols.  */\n "}, {"sha": "4430e3313a8df4e048c1cee582eb6ed0d8b1e8a4", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -2848,17 +2848,8 @@ do  {\t\t\t\t\t\t\\\n    Defined in svr4.h.  */\n /* #define ASM_FINISH_DECLARE_OBJECT(STREAM, DECL, TOPLEVEL, ATEND) */\n \n-/* A C statement (sans semicolon) to output to the stdio stream STREAM some\n-   commands that will make the label NAME global; that is, available for\n-   reference from other files.  Use the expression `assemble_name (STREAM,\n-   NAME)' to output the name itself; before and after that, output the\n-   additional assembler syntax for making that name global, and a newline.  */\n-#define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fputs (\"\\t.globl \", STREAM);\t\t\t\t\t\t\\\n-  assemble_name (STREAM, NAME);\t\t\t\t\t\t\\\n-  fputs (\"\\n\", STREAM);\t\t\t\t\t\t\t\\\n-} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n \n /* A C statement (sans semicolon) to output to the stdio stream STREAM some\n    commands that will make the label NAME weak; that is, available for"}, {"sha": "39e0be322cf1e7865ec5c118b620abccfa047979", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1172,17 +1172,8 @@ zbss_section ()\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_ALIGNED_DECL_LOCAL(FILE, DECL, NAME, SIZE, ALIGN) \\\n      v850_output_local (FILE, DECL, NAME, SIZE, ALIGN)\n      \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fputs (\"\\t.global \", FILE);\t\t\\\n-      assemble_name (FILE, NAME);\t\t\\\n-      fputs (\"\\n\", FILE);\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global \"\n \n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */"}, {"sha": "80fbd4770a88b7ca708ffbf4845b6e61dcda7a8e", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1054,8 +1054,8 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n \n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \".globl \"\n \n /* The prefix to add to user-visible assembler symbols.  */\n "}, {"sha": "3acf5b0fdf326215a37c6d3b65176463d9568d20", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506a61b144b1bd438ed18f767d9831bc95d739ac/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=506a61b144b1bd438ed18f767d9831bc95d739ac", "patch": "@@ -1542,14 +1542,8 @@ typedef struct xtensa_args {\n       goto FAIL;\t\t\t\t\t\t\t\\\n   } while (0)\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-#define ASM_GLOBALIZE_LABEL(STREAM, NAME)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    fputs (\"\\t.global\\t\", STREAM);\t\t\t\t\t\\\n-    assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-    fputs (\"\\n\", STREAM);\t\t\t\t\t\t\\\n-  } while (0)\n+/* Globalizing directive for a label.  */\n+#define GLOBAL_ASM_OP \"\\t.global\\t\"\n \n /* This says how to define a global common symbol.  */\n #define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)\t\t\t\\"}]}