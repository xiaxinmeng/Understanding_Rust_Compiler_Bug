{"sha": "fae4f6aab0069fc940cfea61a8481574a27e9a95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFlNGY2YWFiMDA2OWZjOTQwY2ZlYTYxYTg0ODE1NzRhMjdlOWE5NQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-15T15:00:58Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-15T15:00:58Z"}, "message": "cp-tree.h (lang_type_class): Remove redefined.\n\n\t* cp-tree.h (lang_type_class): Remove redefined.  Move\n\tjava_interface into where redefined was.  Increment the width\n\tof dummy.\n\t(TYPE_REDEFINED): Remove.\n\nFrom-SVN: r98184", "tree": {"sha": "c97a6c3b2a499385ebb71de03bb8a1ba9f9eb5b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c97a6c3b2a499385ebb71de03bb8a1ba9f9eb5b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fae4f6aab0069fc940cfea61a8481574a27e9a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae4f6aab0069fc940cfea61a8481574a27e9a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fae4f6aab0069fc940cfea61a8481574a27e9a95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae4f6aab0069fc940cfea61a8481574a27e9a95/comments", "author": null, "committer": null, "parents": [{"sha": "3d36fb45dbe9e33d2abea0d37620fe7f75f82fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d36fb45dbe9e33d2abea0d37620fe7f75f82fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d36fb45dbe9e33d2abea0d37620fe7f75f82fc6"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "ee213cb08cd3e220461c6bc0618b1a0ca20805c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae4f6aab0069fc940cfea61a8481574a27e9a95/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae4f6aab0069fc940cfea61a8481574a27e9a95/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fae4f6aab0069fc940cfea61a8481574a27e9a95", "patch": "@@ -1,3 +1,10 @@\n+2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cp-tree.h (lang_type_class): Remove redefined.  Move\n+\tjava_interface into where redefined was.  Increment the width\n+\tof dummy.\n+\t(TYPE_REDEFINED): Remove.\n+\n 2005-04-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cp-tree.h (SET_TMPL_ARG, ENUM_TI_TEMPLATE, ENUM_TI_ARGS,"}, {"sha": "584698bc5dbae4bb93a04389b0d33f02526b6a2f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae4f6aab0069fc940cfea61a8481574a27e9a95/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae4f6aab0069fc940cfea61a8481574a27e9a95/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=fae4f6aab0069fc940cfea61a8481574a27e9a95", "patch": "@@ -1027,7 +1027,7 @@ struct lang_type_class GTY(())\n   unsigned diamond_shaped : 1;\n   unsigned repeated_base : 1;\n   unsigned being_defined : 1;\n-  unsigned redefined : 1;\n+  unsigned java_interface : 1;\n   unsigned debug_requested : 1;\n   unsigned fields_readonly : 1;\n   \n@@ -1043,7 +1043,6 @@ struct lang_type_class GTY(())\n   unsigned has_complex_init_ref : 1;\n   unsigned has_complex_assign_ref : 1;\n   unsigned non_aggregate : 1;\n-  unsigned java_interface : 1;\n \n   /* When adding a flag here, consider whether or not it ought to\n      apply to a template instance if it applies to the template.  If\n@@ -1052,7 +1051,7 @@ struct lang_type_class GTY(())\n   /* There are some bits left to fill out a 32-bit word.  Keep track\n      of this by updating the size of this bitfield whenever you add or\n      remove a flag.  */\n-  unsigned dummy : 11;\n+  unsigned dummy : 12;\n \n   tree primary_base;\n   VEC (tree_pair_s) *vcall_indices;\n@@ -1186,9 +1185,6 @@ struct lang_type GTY(())\n /* Nonzero means that this type is being defined.  I.e., the left brace\n    starting the definition of this type has been seen.  */\n #define TYPE_BEING_DEFINED(NODE) (LANG_TYPE_CLASS_CHECK (NODE)->being_defined)\n-/* Nonzero means that this type has been redefined.  In this case, if\n-   convenient, don't reprocess any methods that appear in its redefinition.  */\n-#define TYPE_REDEFINED(NODE) (LANG_TYPE_CLASS_CHECK (NODE)->redefined)\n \n /* Mark bits for repeated base checks.  */\n #define TYPE_MARKED_P(NODE) TREE_LANG_FLAG_6 (TYPE_CHECK (NODE))"}]}