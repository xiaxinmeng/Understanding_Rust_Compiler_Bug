{"sha": "dd25e724a475caffa4372f911d15536d09c342c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQyNWU3MjRhNDc1Y2FmZmE0MzcyZjkxMWQxNTUzNmQwOWMzNDJjOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-09-18T15:26:03Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-09-18T15:26:03Z"}, "message": "Fix vectorizable_live_operation handling of vector booleans\n\nvectorizable_live_operation needs to use BIT_FIELD_REF to extract one\nelement of a vector.  For a packed vector boolean type, the number of\nbits to extract should be taken from TYPE_PRECISION rather than TYPE_SIZE.\n\nThis is shown by existing tests once SVE is added.\n\n2017-09-18  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* tree-vect-loop.c (vectorizable_live_operation): Fix element size\n\tcalculation for vector booleans.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r252930", "tree": {"sha": "35419b5f93ee6ecc7296335c8c6c3bb68672d001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35419b5f93ee6ecc7296335c8c6c3bb68672d001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd25e724a475caffa4372f911d15536d09c342c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd25e724a475caffa4372f911d15536d09c342c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd25e724a475caffa4372f911d15536d09c342c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd25e724a475caffa4372f911d15536d09c342c8/comments", "author": null, "committer": null, "parents": [{"sha": "68a0f2ffff4fdb05cfe110b3828124bcbe6d611f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a0f2ffff4fdb05cfe110b3828124bcbe6d611f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a0f2ffff4fdb05cfe110b3828124bcbe6d611f"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "4c052cc55bc0b4d594c55f9d4fb2664ceb0f60c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd25e724a475caffa4372f911d15536d09c342c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd25e724a475caffa4372f911d15536d09c342c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd25e724a475caffa4372f911d15536d09c342c8", "patch": "@@ -1,3 +1,10 @@\n+2017-09-18  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* tree-vect-loop.c (vectorizable_live_operation): Fix element size\n+\tcalculation for vector booleans.\n+\n 2017-09-18  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "5d29ef5275cdde4adb6f6d10bfe427daaba0f04a", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd25e724a475caffa4372f911d15536d09c342c8/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd25e724a475caffa4372f911d15536d09c342c8/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=dd25e724a475caffa4372f911d15536d09c342c8", "patch": "@@ -7066,7 +7066,9 @@ vectorizable_live_operation (gimple *stmt,\n \t: gimple_get_lhs (stmt);\n   lhs_type = TREE_TYPE (lhs);\n \n-  bitsize = TYPE_SIZE (TREE_TYPE (vectype));\n+  bitsize = (VECTOR_BOOLEAN_TYPE_P (vectype)\n+\t     ? bitsize_int (TYPE_PRECISION (TREE_TYPE (vectype)))\n+\t     : TYPE_SIZE (TREE_TYPE (vectype)));\n   vec_bitsize = TYPE_SIZE (vectype);\n \n   /* Get the vectorized lhs of STMT and the lane to use (counted in bits).  */"}]}