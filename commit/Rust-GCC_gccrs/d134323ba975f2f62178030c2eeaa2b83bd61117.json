{"sha": "d134323ba975f2f62178030c2eeaa2b83bd61117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEzNDMyM2JhOTc1ZjJmNjIxNzgwMzBjMmVlYWEyYjgzYmQ2MTExNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-12T07:17:42Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-12T07:17:42Z"}, "message": "Remove wrong assert about single value profiler.\n\n2019-06-12  Martin Liska  <mliska@suse.cz>\n\n\t* value-prof.c (stream_out_histogram_value): Only first value\n\tcan't be negative.\n\nFrom-SVN: r272179", "tree": {"sha": "add8dbc5b0765f8b2f6ce9f5a776411cb13902bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add8dbc5b0765f8b2f6ce9f5a776411cb13902bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d134323ba975f2f62178030c2eeaa2b83bd61117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d134323ba975f2f62178030c2eeaa2b83bd61117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d134323ba975f2f62178030c2eeaa2b83bd61117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d134323ba975f2f62178030c2eeaa2b83bd61117/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3139680c36885f772828607e2e4a6a3df7ec4aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3139680c36885f772828607e2e4a6a3df7ec4aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3139680c36885f772828607e2e4a6a3df7ec4aa"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c1d58a13aa3a3de6f209d0f8ac8a9fb8cb2940d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d134323ba975f2f62178030c2eeaa2b83bd61117/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d134323ba975f2f62178030c2eeaa2b83bd61117/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d134323ba975f2f62178030c2eeaa2b83bd61117", "patch": "@@ -1,3 +1,8 @@\n+2019-06-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-prof.c (stream_out_histogram_value): Only first value\n+\tcan't be negative.\n+\n 2019-06-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/90760"}, {"sha": "7289a698b711bcbd82d5f0498e58bba1abc797d9", "filename": "gcc/value-prof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d134323ba975f2f62178030c2eeaa2b83bd61117/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d134323ba975f2f62178030c2eeaa2b83bd61117/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=d134323ba975f2f62178030c2eeaa2b83bd61117", "patch": "@@ -331,7 +331,7 @@ stream_out_histogram_value (struct output_block *ob, histogram_value hist)\n       /* When user uses an unsigned type with a big value, constant converted\n \t to gcov_type (a signed type) can be negative.  */\n       gcov_type value = hist->hvalue.counters[i];\n-      if (hist->type == HIST_TYPE_SINGLE_VALUE && (i > 0 && ((i - 1) % 2) == 0))\n+      if (hist->type == HIST_TYPE_SINGLE_VALUE && i > 0)\n \t;\n       else\n \tgcc_assert (value >= 0);"}]}