{"sha": "f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4ZTg5MzgwZmQ3Y2E0MDM1MjIxZWFhOWE4ZWZhZDBlNDIwZDFiNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-11-27T15:28:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-27T15:28:07Z"}, "message": "re PR target/34225 (ICE (segfault) in adjacent_mem_locations at rs6000.c:18191)\n\n\tPR target/34225\n\t* config/rs6000/rs6000.c (adjacent_mem_locations): Don't assume\n\tMEM_SIZE is set on all MEMs.\n\n\t* gcc.dg/pr34225.c: New test.\n\nFrom-SVN: r130470", "tree": {"sha": "76851032cb6a5c593d80daf20442134943ddfc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76851032cb6a5c593d80daf20442134943ddfc1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "512d15e0ffc2219d3cf68e70f3cdaeb4944ae7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512d15e0ffc2219d3cf68e70f3cdaeb4944ae7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512d15e0ffc2219d3cf68e70f3cdaeb4944ae7db"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "3febeaba0a6764d5652f4bbeb62dcddc75ea1112", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "patch": "@@ -1,3 +1,9 @@\n+2007-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/34225\n+\t* config/rs6000/rs6000.c (adjacent_mem_locations): Don't assume\n+\tMEM_SIZE is set on all MEMs.\n+\n 2007-11-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.opt (mhard-float): Add the option to be"}, {"sha": "3367e0848da2ce03e429d0fa65bd14bf7ba67bf0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "patch": "@@ -18166,9 +18166,8 @@ adjacent_mem_locations (rtx insn1, rtx insn2)\n \t  || (GET_CODE (XEXP (b, 0)) == PLUS\n \t      && GET_CODE (XEXP (XEXP (b, 0), 1)) == CONST_INT)))\n     {\n-      HOST_WIDE_INT val0 = 0, val1 = 0;\n+      HOST_WIDE_INT val0 = 0, val1 = 0, val_diff;\n       rtx reg0, reg1;\n-      int val_diff;\n \n       if (GET_CODE (XEXP (a, 0)) == PLUS)\n         {\n@@ -18189,8 +18188,8 @@ adjacent_mem_locations (rtx insn1, rtx insn2)\n       val_diff = val1 - val0;\n \n       return ((REGNO (reg0) == REGNO (reg1))\n-\t      && (val_diff == INTVAL (MEM_SIZE (a))\n-                  || val_diff == -INTVAL (MEM_SIZE (b))));\n+\t      && ((MEM_SIZE (a) && val_diff == INTVAL (MEM_SIZE (a)))\n+\t\t  || (MEM_SIZE (b) && val_diff == -INTVAL (MEM_SIZE (b)))));\n     }\n \n   return false;"}, {"sha": "231513f0daf9672f354e9326598ec11ae186663c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "patch": "@@ -1,3 +1,8 @@\n+2007-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/34225\n+\t* gcc.dg/pr34225.c: New test.\n+\n 2007-11-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34241"}, {"sha": "659e176ad96a64d64a5effe89cf480af6e228bfe", "filename": "gcc/testsuite/gcc.dg/pr34225.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34225.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98e89380fd7ca4035221eaa9a8efad0e420d1b5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34225.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34225.c?ref=f98e89380fd7ca4035221eaa9a8efad0e420d1b5", "patch": "@@ -0,0 +1,61 @@\n+/* PR target/34225 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-strict-aliasing -fstack-protector\" } */\n+/* { dg-require-effective-target fstack_protector } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern int sscanf (const char *, const char *, ...);\n+struct C\n+{\n+  char c[240];\n+};\n+struct O\n+{\n+  char **o;\n+};\n+struct P\n+{\n+  int p1;\n+  char p2[256];\n+  char p3[256];\n+  char p4[256];\n+};\n+\n+extern void *s;\n+extern int f1 (char *, struct C *);\n+extern void f2 (void *, const char *);\n+extern void f3 (char *, const char *);\n+extern int f4 (int, double *, int);\n+\n+int\n+foo (char *a[], struct O *b, int c, int d, struct P *e, int f, int *h,\n+     char *l)\n+{\n+  int i, g = 7, m = 0, n;\n+  struct C j[150];\n+  double *k[150];\n+  char o[100];\n+\n+  if (f1 (o, &j[g]) < 0)\n+    g++;\n+\n+  while (!m)\n+    {\n+      f2 (s, \"xxx\");\n+      for (i = 0; i < f; i++)\n+\tif ((!b->o && __builtin_strncmp (l, \"abcde\", 5) == 0)\n+\t    || (b->o && !b->o[c]))\n+\t  {\n+\t    *e[d].p4 = *e[d].p3 = *e[d].p2 = 0;\n+\t    sscanf (l, \"%s %s %[^\\n]\", e[d].p3, e[d].p2, e[d].p4);\n+\t  }\n+      for (n = 0; n < d; n++)\n+\tfor (i = 0; i < g; i++)\n+\t  {\n+\t    f3 (a[i + 1], \"foo\");\n+\t    if (f4 (h[i], k[i], e[n].p1) < 0)\n+\t      f3 (a[i + 1], \"bar\");\n+\t  }\n+    }\n+  return 0;\n+}"}]}