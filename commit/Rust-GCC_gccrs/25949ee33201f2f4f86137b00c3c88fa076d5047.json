{"sha": "25949ee33201f2f4f86137b00c3c88fa076d5047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5NDllZTMzMjAxZjJmNGY4NjEzN2IwMGMzYzg4ZmEwNzZkNTA0Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-04-10T15:49:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-04-10T15:49:26Z"}, "message": "Update links to archived copy of SGI STL docs\n\n\t* doc/xml/faq.xml: Update links to archived copy of SGI STL docs.\n\t* doc/xml/manual/backwards_compatibility.xml: Likewise.\n\t* doc/xml/manual/containers.xml: Likewise.\n\t* doc/xml/manual/debug_mode.xml: Likewise.\n\t* doc/xml/manual/extensions.xml: Likewise.\n\t* doc/xml/manual/policy_data_structures_biblio.xml: Likewise.\n\t* doc/xml/manual/using.xml: Likewise.\n\t* doc/xml/manual/utilities.xml: Likewise.\n\nFrom-SVN: r259286", "tree": {"sha": "3eda79738595df02f9778e56e6114cd6bfeb9d96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eda79738595df02f9778e56e6114cd6bfeb9d96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25949ee33201f2f4f86137b00c3c88fa076d5047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25949ee33201f2f4f86137b00c3c88fa076d5047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25949ee33201f2f4f86137b00c3c88fa076d5047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25949ee33201f2f4f86137b00c3c88fa076d5047/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0cf12bab54f45840d9af4ed573a2e6aee4b448f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0cf12bab54f45840d9af4ed573a2e6aee4b448f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0cf12bab54f45840d9af4ed573a2e6aee4b448f"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "5423b08893f52450d906bcee99aeba43cf3f196b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -1,5 +1,14 @@\n 2018-04-10  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/faq.xml: Update links to archived copy of SGI STL docs.\n+\t* doc/xml/manual/backwards_compatibility.xml: Likewise.\n+\t* doc/xml/manual/containers.xml: Likewise.\n+\t* doc/xml/manual/debug_mode.xml: Likewise.\n+\t* doc/xml/manual/extensions.xml: Likewise.\n+\t* doc/xml/manual/policy_data_structures_biblio.xml: Likewise.\n+\t* doc/xml/manual/using.xml: Likewise.\n+\t* doc/xml/manual/utilities.xml: Likewise.\n+\n \tPR libstdc++/85222\n \t* src/c++11/Makefile.am [ENABLE_DUAL_ABI]: Add special rules for\n \tcxx11-ios_failure.cc to rewrite type info for __ios_failure."}, {"sha": "b0b1f98e641fc2c9cbd9cfcca6adbd233d06986b", "filename": "libstdc++-v3/doc/xml/faq.xml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -1132,9 +1132,9 @@\n     </para>\n     <para>\n     Libstdc++-v3 incorporates a lot of code from\n-    <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/\">the SGI STL</link>\n+    <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/\">the SGI STL</link>\n     (the final merge was from\n-    <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/whats_new.html\">release 3.3</link>).\n+    <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/whats_new.html\">release 3.3</link>).\n     The code in libstdc++ contains many fixes and changes compared to the\n     original SGI code.\n     </para>\n@@ -1153,7 +1153,7 @@\n     compatibility</link> documentation.\n     </para>\n     <para>\n-    The <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/FAQ.html\">FAQ</link>\n+    The <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/FAQ.html\">FAQ</link>\n     for SGI's STL is still recommended reading.\n     </para> \n   </answer>"}, {"sha": "aa95f3eb1c9bde0a31700324890b3bf6a2a32d2e", "filename": "libstdc++-v3/doc/xml/manual/backwards_compatibility.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbackwards_compatibility.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbackwards_compatibility.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbackwards_compatibility.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -536,7 +536,7 @@ particular <quote>info iostream</quote>.\n      against the gthr.h abstraction layer which is provided by gcc.  A\n      minor problem that pops up every so often is different\n      interpretations of what \"thread-safe\" means for a\n-     library (not a general program).  We currently use the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/thread_safety.html\">same\n+     library (not a general program).  We currently use the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/thread_safety.html\">same\n      definition that SGI</link> uses for their STL subset.  However,\n      the exception for read-only containers only applies to the STL\n      components. This definition is widely-used and something similar"}, {"sha": "5c9854efbddd3c30077ecd3b490088749e7acb5b", "filename": "libstdc++-v3/doc/xml/manual/containers.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fcontainers.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -28,7 +28,7 @@\n      Yes it is, at least using the <xref linkend=\"manual.intro.using.abi\">old\n      ABI</xref>, and that's okay.  This is a decision that we preserved\n      when we imported SGI's STL implementation.  The following is\n-     quoted from <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/FAQ.html\">their FAQ</link>:\n+     quoted from <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/FAQ.html\">their FAQ</link>:\n    </para>\n    <blockquote>\n      <para>"}, {"sha": "5082bbfb724e5a976ec1b29b95bae546a20610dd", "filename": "libstdc++-v3/doc/xml/manual/debug_mode.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -858,7 +858,7 @@ test02()\n   standard library implementations.</para></listitem>\n \n   <listitem><para><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.stlport.org/\">STLport</link>: STLport is a free\n-  implementation of the C++ standard library derived from the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/\">SGI implementation</link>, and\n+  implementation of the C++ standard library derived from the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/\">SGI implementation</link>, and\n   ported to many other platforms. It includes a debug mode that uses a\n   wrapper model (that in some ways inspired the libstdc++ debug mode\n   design), although at the time of this writing the debug mode is"}, {"sha": "84a995a5a7d69306784e19f824d71aa8e770cd09", "filename": "libstdc++-v3/doc/xml/manual/extensions.xml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -227,12 +227,12 @@ extensions, be aware of two things:\n    </para>\n    <para>Each of the associative containers map, multimap, set, and multiset\n       have a counterpart which uses a\n-      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/HashFunction.html\">hashing\n+      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/HashFunction.html\">hashing\n       function</link> to do the arranging, instead of a strict weak ordering\n       function.  The classes take as one of their template parameters a\n       function object that will return the hash value; by default, an\n       instantiation of\n-      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/hash.html\">hash</link>.\n+      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/hash.html\">hash</link>.\n       You should specialize this functor for your class, or define your own,\n       before trying to use one of the hashing classes.\n    </para>\n@@ -394,7 +394,7 @@ get_temporary_buffer(5, (int*)0);\n </para>\n <para>The <code>iota</code> function wins the award for Extension With the\n    Coolest Name (the name comes from Ken Iverson's APL language.)  As\n-   described in the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/iota.html\">SGI\n+   described in the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/iota.html\">SGI\n    documentation</link>, it \"assigns sequentially increasing values to a range.\n    That is, it assigns <code>value</code> to <code>*first</code>,\n    <code>value + 1</code> to<code> *(first + 1)</code> and so on.\""}, {"sha": "1a6e14a5a10853bd11a9fdcfec505549b5300c33", "filename": "libstdc++-v3/doc/xml/manual/policy_data_structures_biblio.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fpolicy_data_structures_biblio.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fpolicy_data_structures_biblio.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fpolicy_data_structures_biblio.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -1206,7 +1206,7 @@\n     <biblioentry xml:id=\"biblio.sgi_stl\">\n       <title>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-\t      xlink:href=\"http://www.sgi.com/tech/stl/\">\n+\t      xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/\">\n \t  Standard Template Library Programmer's Guide\n \t</link>\n       </title>"}, {"sha": "bb04e0f76c9bb4e1d8c75b8d0f80b912798df107", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -1507,7 +1507,7 @@ The standard places requirements on the library to ensure that no data\n races are caused by the library itself or by programs which use the\n library correctly (as described below).\n The C++11 memory model and library requirements are a more formal version\n-of the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/thread_safety.html\">SGI STL</link> definition of thread safety, which the library used\n+of the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/thread_safety.html\">SGI STL</link> definition of thread safety, which the library used\n prior to the 2011 standard.\n </para>\n \n@@ -1780,10 +1780,10 @@ gcc version 4.1.2 20070925 (Red Hat 4.1.2-33)\n    </para>\n    <para>Two excellent pages to read when working with the Standard C++\n       containers and threads are\n-      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/thread_safety.html\">SGI's\n-      http://www.sgi.com/tech/stl/thread_safety.html</link> and\n-      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/Allocators.html\">SGI's\n-      http://www.sgi.com/tech/stl/Allocators.html</link>.\n+      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/thread_safety.html\">SGI's\n+      https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/thread_safety.html</link> and\n+      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/Allocators.html\">SGI's\n+      https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/Allocators.html</link>.\n    </para>\n    <para><emphasis>However, please ignore all discussions about the user-level\n       configuration of the lock implementation inside the STL"}, {"sha": "469d85f4109cc78363325099902943a283e87cfd", "filename": "libstdc++-v3/doc/xml/manual/utilities.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Futilities.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25949ee33201f2f4f86137b00c3c88fa076d5047/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Futilities.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Futilities.xml?ref=25949ee33201f2f4f86137b00c3c88fa076d5047", "patch": "@@ -22,8 +22,8 @@\n       get slightly the wrong idea.  In the interest of not reinventing\n       the wheel, we will refer you to the introduction to the functor\n       concept written by SGI as part of their STL, in\n-      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.sgi.com/tech/stl/functors.html\">their\n-      http://www.sgi.com/tech/stl/functors.html</link>.\n+      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/functors.html\">their\n+      https://web.archive.org/web/20171225062613/http://www.sgi.com/tech/stl/functors.html</link>.\n    </para>\n </section>\n "}]}