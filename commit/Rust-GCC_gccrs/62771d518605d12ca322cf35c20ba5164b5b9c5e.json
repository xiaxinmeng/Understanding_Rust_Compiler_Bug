{"sha": "62771d518605d12ca322cf35c20ba5164b5b9c5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3NzFkNTE4NjA1ZDEyY2EzMjJjZjM1YzIwYmE1MTY0YjViOWM1ZQ==", "commit": {"author": {"name": "Alex Samuel", "email": "samuel@codesourcery.com", "date": "2000-04-07T08:16:31Z"}, "committer": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "2000-04-07T08:16:31Z"}, "message": "ssa.c (compute_conservative_reg_partition): Declare with void arguments.\n\n\t* ssa.c (compute_conservative_reg_partition): Declare with\n\tvoid arguments.\n\t* toplev.c (clean_dump_file): Remove previously-deleted function\n\tinadvertantly merged back in.\n\t* conflict.c (conflict_graph_add): Use a single call to\n\thtab_find_slot to look up and insert.\n\nFrom-SVN: r32992", "tree": {"sha": "2f24d8de38b69abb4dd23349b4e66e1a4932fb5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f24d8de38b69abb4dd23349b4e66e1a4932fb5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62771d518605d12ca322cf35c20ba5164b5b9c5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62771d518605d12ca322cf35c20ba5164b5b9c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62771d518605d12ca322cf35c20ba5164b5b9c5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62771d518605d12ca322cf35c20ba5164b5b9c5e/comments", "author": null, "committer": null, "parents": [{"sha": "4eda98a61fa962aab795830c0c9661c0c81d7a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eda98a61fa962aab795830c0c9661c0c81d7a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eda98a61fa962aab795830c0c9661c0c81d7a62"}], "stats": {"total": 53, "additions": 19, "deletions": 34}, "files": [{"sha": "5b691069f5169743628aa0f5003d31b513eab2c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62771d518605d12ca322cf35c20ba5164b5b9c5e", "patch": "@@ -1,3 +1,12 @@\n+2000-04-06  Alex Samuel  <samuel@codesourcery.com>\n+\n+\t* ssa.c (compute_conservative_reg_partition): Declare with\n+\tvoid arguments.\n+\t* toplev.c (clean_dump_file): Remove previously-deleted function\n+\tinadvertantly merged back in.\n+\t* conflict.c (conflict_graph_add): Use a single call to\n+\thtab_find_slot to look up and insert.\n+\n 2000-04-06  Richard Henderson  <rth@cygnus.com>\n \n \t* genrecog.c (*): Rename _last_insn to last_insn."}, {"sha": "667a18a672c1cc399fbdc569fc5a42113c479ce0", "filename": "gcc/conflict.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2Fconflict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2Fconflict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconflict.c?ref=62771d518605d12ca322cf35c20ba5164b5b9c5e", "patch": "@@ -201,21 +201,20 @@ conflict_graph_add (graph, reg1, reg2)\n {\n   int smaller = MIN (reg1, reg2);\n   int larger = MAX (reg1, reg2);\n+  struct conflict_graph_arc_def dummy;\n   conflict_graph_arc arc;\n-  void **hash_table_slot;\n+  void **slot;\n \n   /* A reg cannot conflict with itself.  */\n   if (reg1 == reg2)\n     abort ();\n \n-  /* If the conflict is already there, do nothing. \n-\n-     FIXME: This is a little wastful; it would be faster to look up the\n-     conflict in the hash table, returning it if it exists and\n-     inserting a new entry if it doesn't, all in one operation.  This\n-     would save an extra hash lookup.  However, the hashtab interface\n-     doesn't really allow this right now.  */\n-  if (conflict_graph_conflict_p (graph, reg1, reg2))\n+  dummy.smaller = smaller;\n+  dummy.larger = larger;\n+  slot = htab_find_slot (graph->arc_hash_table, (void *) &dummy, 1);\n+  \n+  /* If the conflict is already there, do nothing.  */\n+  if (*slot != NULL)\n     return 0;\n \n   /* Allocate an arc.  */\n@@ -234,9 +233,7 @@ conflict_graph_add (graph, reg1, reg2)\n   graph->neighbor_heads[larger] = arc;\n \n   /* Put it in the hash table.  */\n-  hash_table_slot = htab_find_slot (graph->arc_hash_table, \n-\t\t\t\t    (void *) arc, 1);\n-  *hash_table_slot = (void *) arc;\n+  *slot = (void *) arc;\n \n   return 1;\n }\n@@ -532,4 +529,3 @@ conflict_graph_compute (regs, p)\n \n   return graph;\n }\n-"}, {"sha": "b10c46ff0bb0e36c344b0759f4b85b1ec9b94d4a", "filename": "gcc/ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=62771d518605d12ca322cf35c20ba5164b5b9c5e", "patch": "@@ -139,7 +139,7 @@ static int make_regs_equivalent_over_bad_edges\n static int make_equivalent_phi_alternatives_equivalent \n   PARAMS ((int bb, partition reg_partition));\n static partition compute_conservative_reg_partition \n-  PARAMS (());\n+  PARAMS ((void));\n static int rename_equivalent_regs_in_insn \n   PARAMS ((rtx *ptr, void *data));\n "}, {"sha": "6ab7efcba5c32ae2c89589b0eb1ce2c62b2e0a30", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62771d518605d12ca322cf35c20ba5164b5b9c5e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=62771d518605d12ca322cf35c20ba5164b5b9c5e", "patch": "@@ -1892,26 +1892,6 @@ close_dump_file (index, func, insns)\n      });\n }\n \n-/* Routine to empty a dump file.  */\n-static void\n-clean_dump_file (suffix)\n-  const char *suffix;\n-{\n-  char * const dumpname = concat (dump_base_name, suffix, NULL);\n-\n-  rtl_dump_file = fopen (dumpname, \"w\");\n-\n-  if (rtl_dump_file == NULL)\n-    pfatal_with_name (dumpname);       \n-\n-  free (dumpname);\n-\n-  fclose (rtl_dump_file);\n-  rtl_dump_file = NULL;\n-  \n-  return;\n-}\n-\n /* Do any final processing required for the declarations in VEC, of\n    which there are LEN.  We write out inline functions and variables\n    that have been deferred until this point, but which are required."}]}