{"sha": "5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE3ZDlkMWUxMzJiNzc5NWRjNGM4OGZkZjY3OTZmZDY1MjRlNzRkNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-19T13:42:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-19T13:42:38Z"}, "message": "re PR tree-optimization/69820 (Test miscompiled with -O3 option)\n\n\tPR target/69820\n\t* config/i386/sse.md (VI_512): Only include V64QImode and V32HImode\n\tif TARGET_AVX512BW.\n\n\t* gcc.target/i386/pr69820.c: New test.\n\nFrom-SVN: r233558", "tree": {"sha": "89051a419923b880a1638800a407822e3c5c2ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89051a419923b880a1638800a407822e3c5c2ac3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9128d88e65d57fc0b54efd76dd63841d054a3bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9128d88e65d57fc0b54efd76dd63841d054a3bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9128d88e65d57fc0b54efd76dd63841d054a3bb"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "07b7338826b5fb6b2a9d25116c1adc8341eda2b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "patch": "@@ -1,3 +1,9 @@\n+2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/69820\n+\t* config/i386/sse.md (VI_512): Only include V64QImode and V32HImode\n+\tif TARGET_AVX512BW.\n+\n 2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/vector.md: Add missing commutative operand markers"}, {"sha": "49b99e451bad8ab2cb14831c8f3bf37a343a5a24", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "patch": "@@ -522,7 +522,10 @@\n (define_mode_iterator VI_256 [V32QI V16HI V8SI V4DI])\n \n ;; All 512bit vector integer modes\n-(define_mode_iterator VI_512 [V64QI V32HI V16SI V8DI])\n+(define_mode_iterator VI_512\n+  [(V64QI \"TARGET_AVX512BW\")\n+   (V32HI \"TARGET_AVX512BW\")\n+   V16SI V8DI])\n \n ;; Various 128bit vector integer mode combinations\n (define_mode_iterator VI12_128 [V16QI V8HI])"}, {"sha": "365ec1f40b0bb915d63889b0303f5b400a9d8acc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "patch": "@@ -1,3 +1,8 @@\n+2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/69820\n+\t* gcc.target/i386/pr69820.c: New test.\n+\n 2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/vector/int128-1.c: New test."}, {"sha": "8ce9778f9c4984726951c43ac074df94b1000ed2", "filename": "gcc/testsuite/gcc.target/i386/pr69820.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69820.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69820.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69820.c?ref=5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/69820 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512f -mno-avx512bw\" } */\n+\n+int a[100], b[100];\n+short c[100];\n+\n+void\n+foo ()\n+{\n+  int i;\n+  for (i = 0; i < 100; ++i)\n+    b[i] = a[i] * (_Bool) c[i];\n+}"}]}