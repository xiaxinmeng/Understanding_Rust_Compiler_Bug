{"sha": "7757567358a84c3774cb972350bd7ea299daaa8d", "node_id": "C_kwDOANBUbNoAKDc3NTc1NjczNThhODRjMzc3NGNiOTcyMzUwYmQ3ZWEyOTlkYWFhOGQ", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2023-02-10T17:17:07Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2023-02-10T17:17:07Z"}, "message": "RA: Use caller save equivalent memory only for LRA\n\nRecently I submitted a patch to reuse memory with constant address for\ncaller saves optimization for constant or pure function call.  It\nseems to work only for targets using LRA instead of the old reload\npass.  So the patch switches off this optimization when the old reload\npass is used.\n\n        PR middle-end/108754\n\ngcc/ChangeLog:\n\n\t* ira.cc (update_equiv_regs): Set up ira_reg_equiv for\n\tvalid_combine only when ira_use_lra_p is true.", "tree": {"sha": "6296e7524f96029a845071b9404bf73d948378dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6296e7524f96029a845071b9404bf73d948378dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7757567358a84c3774cb972350bd7ea299daaa8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7757567358a84c3774cb972350bd7ea299daaa8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7757567358a84c3774cb972350bd7ea299daaa8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7757567358a84c3774cb972350bd7ea299daaa8d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c5154d0f0d2185b518465b264ca17fb7c60c1e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5154d0f0d2185b518465b264ca17fb7c60c1e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c5154d0f0d2185b518465b264ca17fb7c60c1e8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9f9af808f63d971b7037842c857a984cd3bf9bd8", "filename": "gcc/ira.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7757567358a84c3774cb972350bd7ea299daaa8d/gcc%2Fira.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7757567358a84c3774cb972350bd7ea299daaa8d/gcc%2Fira.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.cc?ref=7757567358a84c3774cb972350bd7ea299daaa8d", "patch": "@@ -3773,7 +3773,7 @@ update_equiv_regs (void)\n \t\t    {\n \t\t      note = set_unique_reg_note (insn, REG_EQUIV, replacement);\n \t\t    }\n-\t\t  else\n+\t\t  else if (ira_use_lra_p)\n \t\t    {\n \t\t      /* We still can use this equivalence for caller save\n \t\t\t optimization in LRA.  Mark this.  */"}]}