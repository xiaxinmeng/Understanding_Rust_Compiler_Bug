{"sha": "d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmYTZlZTI0ZTMwNDI0NzJmNTNjNzc2ZDMwZDVmMTBiNzlhZmMyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-25T20:03:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-25T20:03:54Z"}, "message": "re PR middle-end/56098 (conditional write through volatile pointer produces unintended read)\n\n\tPR tree-optimization/56098\n\t* tree-ssa-phiopt.c (nt_init_block): Don't call add_or_mark_expr\n\tfor stmts with volatile ops.\n\t(cond_store_replacement): Don't optimize if assign has volatile ops.\n\t(cond_if_else_store_replacement_1): Don't optimize if either\n\tthen_assign or else_assign have volatile ops.\n\t(hoist_adjacent_loads): Don't optimize if either def1 or def2 have\n\tvolatile ops.\n\n\t* gcc.dg/pr56098-1.c: New test.\n\t* gcc.dg/pr56098-2.c: New test.\n\nFrom-SVN: r195475", "tree": {"sha": "9f912299747d19a0c5f72e447bddfdcbd9149566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f912299747d19a0c5f72e447bddfdcbd9149566"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4a180188bed0a798818ef176c89048343277665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a180188bed0a798818ef176c89048343277665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a180188bed0a798818ef176c89048343277665"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "3897b8d6a7e1f1c45d301ffe5b611d1e25901274", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "patch": "@@ -1,3 +1,14 @@\n+2013-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56098\n+\t* tree-ssa-phiopt.c (nt_init_block): Don't call add_or_mark_expr\n+\tfor stmts with volatile ops.\n+\t(cond_store_replacement): Don't optimize if assign has volatile ops.\n+\t(cond_if_else_store_replacement_1): Don't optimize if either\n+\tthen_assign or else_assign have volatile ops.\n+\t(hoist_adjacent_loads): Don't optimize if either def1 or def2 have\n+\tvolatile ops.\n+\n 2013-01-25  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* doc/invoke.texi (AVR Built-in Macros): Document __XMEGA__."}, {"sha": "db9f3679bf89b85b4846bbb10a6daf449c9d03e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "patch": "@@ -1,3 +1,9 @@\n+2013-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56098\n+\t* gcc.dg/pr56098-1.c: New test.\n+\t* gcc.dg/pr56098-2.c: New test.\n+\n 2013-01-25  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/54222"}, {"sha": "c3b081a0899ccdb98f71863ca7ffe20ef4d54fed", "filename": "gcc/testsuite/gcc.dg/pr56098-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56098-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56098-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56098-1.c?ref=d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/56098 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+volatile int *p;\n+\n+void\n+foo (int x)\n+{\n+  *p = 1;\n+  if (x)\n+    *p = 2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"=\\[^\\n\\r]*\\\\*p\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "3c967b52507c464a8d3c90325698ae4e54b89dbe", "filename": "gcc/testsuite/gcc.dg/pr56098-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56098-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56098-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56098-2.c?ref=d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/56098 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fhoist-adjacent-loads -fdump-tree-optimized\" } */\n+\n+struct S { volatile int i; volatile int j; };\n+\n+int\n+bar (struct S *x, int y)\n+{\n+  int r;\n+  if (y)\n+    r = x->i;\n+  else\n+    r = x->j;\n+  return r;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"r_\\[0-9]* =.v. \\[^\\n\\r]*;\\[\\n\\r]*  r_\\[0-9]* =.v. \" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "eee497296ca1cd7b8a3ff73dbb83855261a16936", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fa6ee24e3042472f53c776d30d5f10b79afc2d/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=d7fa6ee24e3042472f53c776d30d5f10b79afc2d", "patch": "@@ -1342,7 +1342,7 @@ nt_init_block (struct dom_walk_data *data ATTRIBUTE_UNUSED, basic_block bb)\n     {\n       gimple stmt = gsi_stmt (gsi);\n \n-      if (gimple_assign_single_p (stmt))\n+      if (gimple_assign_single_p (stmt) && !gimple_has_volatile_ops (stmt))\n \t{\n \t  add_or_mark_expr (bb, gimple_assign_lhs (stmt), nontrap_set, true);\n \t  add_or_mark_expr (bb, gimple_assign_rhs1 (stmt), nontrap_set, false);\n@@ -1419,7 +1419,8 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n \n   /* Check if middle_bb contains of only one store.  */\n   if (!assign\n-      || !gimple_assign_single_p (assign))\n+      || !gimple_assign_single_p (assign)\n+      || gimple_has_volatile_ops (assign))\n     return false;\n \n   locus = gimple_location (assign);\n@@ -1490,9 +1491,11 @@ cond_if_else_store_replacement_1 (basic_block then_bb, basic_block else_bb,\n   if (then_assign == NULL\n       || !gimple_assign_single_p (then_assign)\n       || gimple_clobber_p (then_assign)\n+      || gimple_has_volatile_ops (then_assign)\n       || else_assign == NULL\n       || !gimple_assign_single_p (else_assign)\n-      || gimple_clobber_p (else_assign))\n+      || gimple_clobber_p (else_assign)\n+      || gimple_has_volatile_ops (else_assign))\n     return false;\n \n   lhs = gimple_assign_lhs (then_assign);\n@@ -1829,7 +1832,9 @@ hoist_adjacent_loads (basic_block bb0, basic_block bb1,\n \n       /* Both statements must be assignments whose RHS is a COMPONENT_REF.  */\n       if (!gimple_assign_single_p (def1)\n-\t  || !gimple_assign_single_p (def2))\n+\t  || !gimple_assign_single_p (def2)\n+\t  || gimple_has_volatile_ops (def1)\n+\t  || gimple_has_volatile_ops (def2))\n \tcontinue;\n \n       ref1 = gimple_assign_rhs1 (def1);"}]}