{"sha": "ace193dc4773159a2c545ab6ca80842c56019e3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlMTkzZGM0NzczMTU5YTJjNTQ1YWI2Y2E4MDg0MmM1NjAxOWUzYQ==", "commit": {"author": {"name": "Rasmus Villemoes", "email": "rv@rasmusvillemoes.dk", "date": "2018-08-21T08:50:27Z"}, "committer": {"name": "Rasmus Villemoes", "email": "villemoes@gcc.gnu.org", "date": "2018-08-21T08:50:27Z"}, "message": "vxworks: enable use of .init_array/.fini_array for cdtors\n\nThe target OS actually runs all function pointers found in the _ctors\narray when the module is loaded. So it is not that hard to make use of\nthe \"modern\" .init_array/.fini_array mechanism - it mostly just requires\na linker script adding the _ctors and _dtors symbols and terminating\nLONG(0) entries.\n\nAssume that if the user passed --enable-initfini-array when building\ngcc, the rest of the toolchain (including the link spec and linker\nscript) is set up appropriately.\n\nNote that configuring with --enable-initfini-array may prevent the -mrtp\nmode from working, due to the (unconditional) use of .init_array.*\nsections instead of .ctors.* - however, that is the case regardless of this\npatch.\n\nFrom-SVN: r263691", "tree": {"sha": "fc20d372cc962ea6382184e80aa1fcac7b03a9ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc20d372cc962ea6382184e80aa1fcac7b03a9ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ace193dc4773159a2c545ab6ca80842c56019e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace193dc4773159a2c545ab6ca80842c56019e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace193dc4773159a2c545ab6ca80842c56019e3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace193dc4773159a2c545ab6ca80842c56019e3a/comments", "author": {"login": "Villemoes", "id": 4375908, "node_id": "MDQ6VXNlcjQzNzU5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4375908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Villemoes", "html_url": "https://github.com/Villemoes", "followers_url": "https://api.github.com/users/Villemoes/followers", "following_url": "https://api.github.com/users/Villemoes/following{/other_user}", "gists_url": "https://api.github.com/users/Villemoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Villemoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Villemoes/subscriptions", "organizations_url": "https://api.github.com/users/Villemoes/orgs", "repos_url": "https://api.github.com/users/Villemoes/repos", "events_url": "https://api.github.com/users/Villemoes/events{/privacy}", "received_events_url": "https://api.github.com/users/Villemoes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a5b8df7007b350015509ee8f809fd7d2c8fa963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5b8df7007b350015509ee8f809fd7d2c8fa963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a5b8df7007b350015509ee8f809fd7d2c8fa963"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "609965bab9a2f57fea95646ddffae4d81f88bfc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace193dc4773159a2c545ab6ca80842c56019e3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace193dc4773159a2c545ab6ca80842c56019e3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ace193dc4773159a2c545ab6ca80842c56019e3a", "patch": "@@ -1,3 +1,10 @@\n+2018-08-21  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\t* config/vxworks.c: Set targetm.have_ctors_dtors\n+\tif HAVE_INITFINI_ARRAY_SUPPORT.\n+\t* config/vxworks.h: Set SUPPORTS_INIT_PRIORITY\n+\tif HAVE_INITFINI_ARRAY_SUPPORT.\n+\n 2018-08-21  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n \n \t* config/vxworks.h: Add $(WIND_BASE)/target/h/wrn/coreip to"}, {"sha": "953f74f71af8618ef38726a61273abd2ddc338ea", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace193dc4773159a2c545ab6ca80842c56019e3a/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace193dc4773159a2c545ab6ca80842c56019e3a/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=ace193dc4773159a2c545ab6ca80842c56019e3a", "patch": "@@ -143,8 +143,11 @@ vxworks_override_options (void)\n       targetm.emutls.debug_form_tls_address = true;\n     }\n \n-  /* We can use .ctors/.dtors sections only in RTP mode.  */\n-  targetm.have_ctors_dtors = TARGET_VXWORKS_RTP;\n+  /* We can use .ctors/.dtors sections only in RTP mode.  But, if the\n+     compiler was built with --enable-initfini-array, assume the\n+     toolchain implements the proper glue to make .init_array and\n+     .fini_array work.  */\n+  targetm.have_ctors_dtors = TARGET_VXWORKS_RTP || HAVE_INITFINI_ARRAY_SUPPORT;\n \n   /* PIC is only supported for RTPs.  */\n   if (flag_pic && !TARGET_VXWORKS_RTP)"}, {"sha": "4c2d98381f66dee8144aed0d8603c56d848878a6", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace193dc4773159a2c545ab6ca80842c56019e3a/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace193dc4773159a2c545ab6ca80842c56019e3a/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=ace193dc4773159a2c545ab6ca80842c56019e3a", "patch": "@@ -142,9 +142,13 @@ along with GCC; see the file COPYING3.  If not see\n #define VXWORKS_OVERRIDE_OPTIONS vxworks_override_options ()\n extern void vxworks_override_options (void);\n \n-/* Only RTPs support prioritized constructors and destructors:\n-   the implementation relies on numbered .ctors* sections.  */\n-#define SUPPORTS_INIT_PRIORITY TARGET_VXWORKS_RTP\n+/* RTPs support prioritized constructors and destructors: the\n+   implementation relies on numbered .ctors* sections. If the compiler\n+   was built with --enable-initfini-array, we assume the user uses a\n+   linker script that sorts and merges the .init_array.* sections\n+   appropriately.  */\n+#define SUPPORTS_INIT_PRIORITY \\\n+  (TARGET_VXWORKS_RTP || HAVE_INITFINI_ARRAY_SUPPORT)\n \n /* VxWorks requires special handling of constructors and destructors.\n    All VxWorks configurations must use these functions.  */"}]}