{"sha": "0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkYTE4ZGQ3MGJlZWUxNzEzYmE3YjJiZDhmMDQyMjJmYmU1MzViYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-05-21T20:46:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-05-21T20:46:16Z"}, "message": "bitset (bitset<>::bitset(const char*)): Add per DR 778.\n\n2008-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/bitset (bitset<>::bitset(const char*)): Add per DR 778.\n\t(bitset<>::_M_copy_from_ptr): Add.\n\t(bitset<>::_M_copy_from_string): Forward to the latter.\n\t* doc/xml/manual/intro.xml: Add an entry for DR 778.\n\t* testsuite/23_containers/bitset/cons/2.cc: Add.\n\nFrom-SVN: r135738", "tree": {"sha": "c21d52c1e10247d1a00aba9075ef88c1f2056996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c21d52c1e10247d1a00aba9075ef88c1f2056996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/comments", "author": null, "committer": null, "parents": [{"sha": "301a9fb249131bad2b88ddea549cfee9b577c9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301a9fb249131bad2b88ddea549cfee9b577c9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301a9fb249131bad2b88ddea549cfee9b577c9e0"}], "stats": {"total": 90, "additions": 82, "deletions": 8}, "files": [{"sha": "e87402745f98aeca1ee99bf455cc41648829ab5d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "patch": "@@ -1,3 +1,11 @@\n+2008-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/bitset (bitset<>::bitset(const char*)): Add per DR 778.\n+\t(bitset<>::_M_copy_from_ptr): Add.\n+\t(bitset<>::_M_copy_from_string): Forward to the latter.\n+\t* doc/xml/manual/intro.xml: Add an entry for DR 778.\n+\t* testsuite/23_containers/bitset/cons/2.cc: Add.\n+\n 2008-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* doc/html/ext/lwg-active.html: Update to Revision R56."}, {"sha": "3be651a5ad4f342612e891aa19abc5e1cc15a0d4", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "patch": "@@ -628,6 +628,12 @@\n     </term>\n     <listitem><para>Make the member functions table and classic_table public.\n     </para></listitem></varlistentry>\n+\n+    <varlistentry><term><ulink url=\"lwg-active.html#778\">778</ulink>:\n+        <emphasis>std::bitset does not have any constructor taking a string literal</emphasis>\n+    </term>\n+    <listitem><para>Add it.\n+    </para></listitem></varlistentry>\n   </variablelist>\n \n  </sect2>"}, {"sha": "50015dbd31f66ff374bbf8632e076538fcaeef9a", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "patch": "@@ -786,7 +786,14 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\t\t\t     \"not valid\"));\n \t  _M_copy_from_string(__s, __position, __n);\n \t}\n-      \n+\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 778. std::bitset does not have any constructor taking a string literal\n+      explicit\n+      bitset(const char* __s)\n+      : _Base()\n+      { _M_copy_from_ptr(__s, char_traits<char>::length(__s), 0, size_t(-1)); }\n+\n       // 23.3.5.2 bitset operations:\n       //@{\n       /**\n@@ -1049,11 +1056,15 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       }\n \n       // Helper functions for string operations.\n+      template<class _CharT>\n+        void\n+        _M_copy_from_ptr(const _CharT*, size_t, size_t, size_t);\n+\n       template<class _CharT, class _Traits, class _Alloc>\n \tvoid\n \t_M_copy_from_string(const std::basic_string<_CharT,\n-\t\t\t    _Traits, _Alloc>& __s,\n-\t\t\t    size_t, size_t);\n+\t\t\t    _Traits, _Alloc>& __s, size_t __pos, size_t __n)\n+\t{ _M_copy_from_ptr(__s.data(), __s.size(), __pos, __n); }\n \n       template<class _CharT, class _Traits, class _Alloc>\n \tvoid\n@@ -1155,14 +1166,14 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \n   // Definitions of non-inline member functions.\n   template<size_t _Nb>\n-    template<class _CharT, class _Traits, class _Alloc>\n+    template<class _CharT>\n       void\n       bitset<_Nb>::\n-      _M_copy_from_string(const std::basic_string<_CharT, _Traits,\n-\t\t\t  _Alloc>& __s, size_t __pos, size_t __n)\n+      _M_copy_from_ptr(const _CharT* __s, size_t __len,\n+\t\t       size_t __pos, size_t __n)\n       {\n \treset();\n-\tconst size_t __nbits = std::min(_Nb, std::min(__n, __s.size() - __pos));\n+\tconst size_t __nbits = std::min(_Nb, std::min(__n, __len - __pos));\n \tfor (size_t __i = __nbits; __i > 0; --__i)\n \t  {\n \t    switch(__s[__pos + __nbits - __i])\n@@ -1173,7 +1184,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\t_Unchecked_set(__i - 1);\n \t\tbreak;\n \t      default:\n-\t\t__throw_invalid_argument(__N(\"bitset::_M_copy_from_string\"));\n+\t\t__throw_invalid_argument(__N(\"bitset::_M_copy_from_ptr\"));\n \t      }\n \t  }\n       }"}, {"sha": "24bb6213e607095f11434006c9ac8c8bd6713877", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fda18dd70beee1713ba7b2bd8f04222fbe535bb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc?ref=0fda18dd70beee1713ba7b2bd8f04222fbe535bb", "patch": "@@ -0,0 +1,49 @@\n+// 2008-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <bitset>\n+#include <testsuite_hooks.h>\n+\n+// DR 778. std::bitset does not have any constructor taking a string literal.\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::bitset<4> z1(\"1101\");\n+  std::bitset<4> z1_ref(std::string(\"1101\"));\n+  VERIFY( z1.to_string() == \"1101\" );\n+  VERIFY( z1 == z1_ref );\n+\n+  std::bitset<8> z2(\"1011\");\n+  std::bitset<8> z2_ref(std::string(\"1011\"));\n+  VERIFY( z2.to_string() == \"00001011\" );\n+  VERIFY( z2 == z2_ref );\n+\n+  std::bitset<2> z3(\"1101\");\n+  std::bitset<2> z3_ref(std::string(\"1101\"));\n+  VERIFY( z3.to_string() == \"11\" );\n+  VERIFY( z3 == z3_ref );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}