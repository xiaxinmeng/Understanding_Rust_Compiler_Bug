{"sha": "d4129bfa7c814dc1878c3256d34f721398617255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxMjliZmE3YzgxNGRjMTg3OGMzMjU2ZDM0ZjcyMTM5ODYxNzI1NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-22T16:42:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-22T16:42:55Z"}, "message": "[multiple changes]\n\n2014-01-22  Robert Dewar  <dewar@adacore.com>\n\n\t* debug.adb, exp_ch4.adb, erroutc.adb: Minor reformatting.\n\n2014-01-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch7.adb, sem_ch8.adb, exp_ch3.adb: Minor reformatting.\n\n2014-01-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): For a constant\n\tdeclaration initialized with a function call, whose type\n\thas variable size, need to remove side effects so that the\n\tinitialization expression becomes a dereference of a temporary\n\treference to the function result.\n\nFrom-SVN: r206928", "tree": {"sha": "dc63d9b4da41b673443db809263374c24fbe04a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc63d9b4da41b673443db809263374c24fbe04a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4129bfa7c814dc1878c3256d34f721398617255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4129bfa7c814dc1878c3256d34f721398617255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4129bfa7c814dc1878c3256d34f721398617255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4129bfa7c814dc1878c3256d34f721398617255/comments", "author": null, "committer": null, "parents": [{"sha": "b6f36bf8c74b6341566254227d2ac425bf4a54fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f36bf8c74b6341566254227d2ac425bf4a54fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6f36bf8c74b6341566254227d2ac425bf4a54fc"}], "stats": {"total": 88, "additions": 65, "deletions": 23}, "files": [{"sha": "44ab1e956eb0fdd43edf3effe7547899afe47d83", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -1,3 +1,19 @@\n+2014-01-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* debug.adb, exp_ch4.adb, erroutc.adb: Minor reformatting.\n+\n+2014-01-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch7.adb, sem_ch8.adb, exp_ch3.adb: Minor reformatting.\n+\n+2014-01-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): For a constant\n+\tdeclaration initialized with a function call, whose type\n+\thas variable size, need to remove side effects so that the\n+\tinitialization expression becomes a dereference of a temporary\n+\treference to the function result.\n+\n 2014-01-22  Yannick Moy  <moy@adacore.com>\n \n \t* errout.adb (Initialize): Remove trick to add dummy entry"}, {"sha": "b1c17f8cd42cc8074b71c19c315a2965efbeb1da", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -596,7 +596,10 @@ package body Debug is\n \n    --  d.E  Turn selected errors into warnings. This debug switch causes a\n    --       specific set of error messages into warnings. Setting this switch\n-   --       causes Opt.Error_To_Warning to be set to True.\n+   --       causes Opt.Error_To_Warning to be set to True. Right now the only\n+   --       error affected is the case of overlapping subprogram parameters\n+   --       which has become illegal in Ada 2012, but only generates a warning\n+   --       in earlier versions of Ada.\n \n    --  d.F  Sets GNATprove_Mode to True. This allows debugging the frontend in\n    --       the special mode used by GNATprove."}, {"sha": "63aea28e86ade3bbd39db455e9a360afcb68b4cc", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -1180,26 +1180,27 @@ package body Erroutc is\n         and then not GNATprove_Mode\n       then\n          return;\n+      end if;\n \n       --  If last entry in table already covers us, this is a redundant pragma\n       --  Warnings (Off) and can be ignored.\n \n-      elsif Warnings.Last >= Warnings.First\n+      if Warnings.Last >= Warnings.First\n         and then Warnings.Table (Warnings.Last).Start <= Loc\n         and then Loc <= Warnings.Table (Warnings.Last).Stop\n       then\n          return;\n+      end if;\n \n-      --  Otherwise establish a new entry, extending from the location of the\n-      --  pragma to the end of the current source file. This ending point will\n-      --  be adjusted by a subsequent pragma Warnings (On).\n+      --  If none of those special conditions holds, establish a new entry,\n+      --  extending from the location of the pragma to the end of the current\n+      --  source file. This ending point will be adjusted by a subsequent\n+      --  corresponding pragma Warnings (On).\n \n-      else\n-         Warnings.Increment_Last;\n-         Warnings.Table (Warnings.Last).Start := Loc;\n-         Warnings.Table (Warnings.Last).Stop :=\n-           Source_Last (Current_Source_File);\n-      end if;\n+      Warnings.Increment_Last;\n+      Warnings.Table (Warnings.Last).Start := Loc;\n+      Warnings.Table (Warnings.Last).Stop :=\n+        Source_Last (Current_Source_File);\n    end Set_Warnings_Mode_Off;\n \n    --------------------------\n@@ -1223,11 +1224,12 @@ package body Erroutc is\n         and then not GNATprove_Mode\n       then\n          return;\n+      end if;\n \n       --  If the last entry in the warnings table covers this pragma, then\n       --  we adjust the end point appropriately.\n \n-      elsif Warnings.Last >= Warnings.First\n+      if Warnings.Last >= Warnings.First\n         and then Warnings.Table (Warnings.Last).Start <= Loc\n         and then Loc <= Warnings.Table (Warnings.Last).Stop\n       then"}, {"sha": "d055831e34b8cf4ee1620ee7d813bba67104fb92", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -5561,7 +5561,7 @@ package body Exp_Ch3 is\n                   Apply_Constraint_Check (Expr, Typ);\n \n                   --  If the expression has been marked as requiring a range\n-                  --  generate it now and reset the flag.\n+                  --  check, generate it now and reset the flag.\n \n                   if Do_Range_Check (Expr) then\n                      Set_Do_Range_Check (Expr, False);"}, {"sha": "97368c09acc56860f5dbcdb8bd121bb571621fc4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -7330,7 +7330,6 @@ package body Exp_Ch4 is\n          declare\n             Bt : constant Entity_Id := Root_Type (Underlying_Type (Bastyp));\n             Et : constant Entity_Id := Root_Type (Underlying_Type (Exptyp));\n-\n          begin\n             Rewrite (N,\n               Unchecked_Convert_To (Typ,\n@@ -7610,7 +7609,7 @@ package body Exp_Ch4 is\n       then\n          Rewrite (N,\n            Make_Function_Call (Loc,\n-             Name => New_Reference_To (RTE (Rent), Loc),\n+             Name                   => New_Reference_To (RTE (Rent), Loc),\n              Parameter_Associations => New_List (Base, Exp)));\n \n       --  Otherwise we have to introduce conversions (conversions are also"}, {"sha": "30c37487507b04ff470e986f8ad89d5d41ed81cf", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -2991,6 +2991,11 @@ package body Sem_Ch3 is\n       --  or a variant record type is encountered, Check_Restrictions is called\n       --  indicating the count is unknown.\n \n+      function Has_Unconstrained_Elements (T : Entity_Id) return Boolean;\n+      --  True if T has discriminants and is unconstrained, or is an array\n+      --  type whose element type Has_Unconstrained_Elements. Shouldn't this\n+      --  be in sem_util???\n+\n       -----------------\n       -- Count_Tasks --\n       -----------------\n@@ -3045,6 +3050,24 @@ package body Sem_Ch3 is\n          end if;\n       end Count_Tasks;\n \n+      --------------------------------\n+      -- Has_Unconstrained_Elements --\n+      --------------------------------\n+\n+      function Has_Unconstrained_Elements (T : Entity_Id) return Boolean is\n+         U_T : constant Entity_Id := Underlying_Type (T);\n+      begin\n+         if No (U_T) then\n+            return False;\n+         elsif Is_Record_Type (U_T) then\n+            return Has_Discriminants (U_T) and then not Is_Constrained (U_T);\n+         elsif Is_Array_Type (U_T) then\n+            return Has_Unconstrained_Elements (Component_Type (U_T));\n+         else\n+            return False;\n+         end if;\n+      end Has_Unconstrained_Elements;\n+\n    --  Start of processing for Analyze_Object_Declaration\n \n    begin\n@@ -3647,16 +3670,15 @@ package body Sem_Ch3 is\n \n          Rewrite (Object_Definition (N), New_Occurrence_Of (Act_T, Loc));\n \n-      elsif Present (Underlying_Type (T))\n-        and then not Is_Constrained (Underlying_Type (T))\n-        and then Has_Discriminants (Underlying_Type (T))\n-        and then Nkind (E) = N_Function_Call\n+      elsif Nkind (E) = N_Function_Call\n         and then Constant_Present (N)\n+        and then Has_Unconstrained_Elements (Etype (E))\n       then\n          --  The back-end has problems with constants of a discriminated type\n          --  with defaults, if the initial value is a function call. We\n-         --  generate an intermediate temporary for the result of the call.\n-         --  It is unclear why this should make it acceptable to gcc. ???\n+         --  generate an intermediate temporary that will receive a reference\n+         --  to the result of the call. The initialization expression then\n+         --  becomes a dereference of that temporary.\n \n          Remove_Side_Effects (E);\n "}, {"sha": "5ae4aa360dd178d2f05cc52a918286c54a380a97", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                              S E M . C H 7                               --\n+--                              S E M _ C H 7                               --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --"}, {"sha": "b44d4e0f94a80f1c7ae3bd465eee70f79bead1e2", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4129bfa7c814dc1878c3256d34f721398617255/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d4129bfa7c814dc1878c3256d34f721398617255", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                              S E M . C H 8                               --\n+--                              S E M _ C H 8                               --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --"}]}