{"sha": "5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwYmE1NDZiODI4Y2Q4ZjU5ZjI1MDgzMGFiYWY0ZmE5ZjBkODgxYg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2015-01-11T17:31:22Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2015-01-11T17:31:22Z"}, "message": "re PR fortran/64508 ([F03] interface check missing for procedure pointer component as actual argument)\n\n2015-01-11  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/64508\n\t* interface.c (compare_parameter): Interface check for\n\tprocedure-pointer component as actual argument.\n\n2015-01-11  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/64508\n\t* gfortran.dg/proc_ptr_comp_41.f90: New.\n\nFrom-SVN: r219431", "tree": {"sha": "f26aafcff882508838e6ff04ef7d1159dcb2c2af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f26aafcff882508838e6ff04ef7d1159dcb2c2af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "830aecf07f58913e6ee76339f3af1cdeae3e0e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830aecf07f58913e6ee76339f3af1cdeae3e0e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830aecf07f58913e6ee76339f3af1cdeae3e0e78"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "b525ff40ba8cb293b172bec282bf9ed8a5eab3aa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "patch": "@@ -1,3 +1,9 @@\n+2015-01-11  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/64508\n+\t* interface.c (compare_parameter): Interface check for\n+\tprocedure-pointer component as actual argument.\n+\n 2015-01-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* gfortran.texi: Update for libgomp being renamed from \"GNU OpenMP"}, {"sha": "ca9751fa0961f3bcf22d8974346615a5884897e8", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "patch": "@@ -1922,6 +1922,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n {\n   gfc_ref *ref;\n   bool rank_check, is_pointer;\n+  char err[200];\n+  gfc_component *ppc;\n \n   /* If the formal arg has type BT_VOID, it's to one of the iso_c_binding\n      procs c_f_pointer or c_f_procpointer, and we need to accept most\n@@ -1942,7 +1944,6 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \n   if (actual->ts.type == BT_PROCEDURE)\n     {\n-      char err[200];\n       gfc_symbol *act_sym = actual->symtree->n.sym;\n \n       if (formal->attr.flavor != FL_PROCEDURE)\n@@ -1976,6 +1977,19 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n       return 1;\n     }\n \n+  ppc = gfc_get_proc_ptr_comp (actual);\n+  if (ppc)\n+    {\n+      if (!gfc_compare_interfaces (formal, ppc->ts.interface, ppc->name, 0, 1,\n+\t\t\t\t   err, sizeof(err), NULL, NULL))\n+\t{\n+\t  if (where)\n+\t    gfc_error (\"Interface mismatch in dummy procedure %qs at %L: %s\",\n+\t\t       formal->name, &actual->where, err);\n+\t  return 0;\n+\t}\n+    }\n+\n   /* F2008, C1241.  */\n   if (formal->attr.pointer && formal->attr.contiguous\n       && !gfc_is_simply_contiguous (actual, true))"}, {"sha": "a7c24ce0caa1edb8f7bc27d17617e87e20b39f67", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "patch": "@@ -1,3 +1,8 @@\n+2015-01-11  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/64508\n+\t* gfortran.dg/proc_ptr_comp_41.f90: New.\n+\n 2015-01-11  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/recip-test.h (_ARCH_PPC64): Use __LP64__ instead."}, {"sha": "e282fc1832d3d454d3e3a17e68693f8a6ba5bab1", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_41.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_41.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0ba546b828cd8f59f250830abaf4fa9f0d881b/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_41.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_41.f90?ref=5c0ba546b828cd8f59f250830abaf4fa9f0d881b", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+!\n+! PR 64508: [F03] interface check missing for procedure pointer component as actual argument\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+  TYPE :: parent\n+  END TYPE\n+\n+  TYPE, EXTENDS(parent) :: extension\n+    procedure(extension_proc), pointer :: ppc\n+  END TYPE\n+\n+  CLASS(extension), ALLOCATABLE :: x\n+  CALL some_proc(x%ppc)               !  { dg-error \"Interface mismatch in dummy procedure\" }\n+\n+contains\n+\n+  SUBROUTINE parent_proc(arg)\n+    CLASS(parent), INTENT(IN) :: arg\n+  END SUBROUTINE\n+\n+  SUBROUTINE extension_proc(arg)\n+    CLASS(extension), INTENT(IN) :: arg\n+  END SUBROUTINE\n+\n+\n+  SUBROUTINE some_proc(proc)\n+    PROCEDURE(parent_proc) :: proc\n+    TYPE(Parent) :: a\n+    CALL proc(a)\n+  END SUBROUTINE\n+\n+end"}]}