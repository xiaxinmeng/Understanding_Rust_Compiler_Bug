{"sha": "cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JkMjlkMGVhZWIyOWM1NTQ5Y2ZhYzZhMmQ1ZWE5MzZiZTExODQyOQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2018-09-21T11:25:54Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2018-09-21T11:25:54Z"}, "message": "Fix co-array allocation\n\nThe Fortran front-end has a bug in which it uses \"int\" values for \"size_t\"\nparameters.  I don't know why this isn't problem for all 64-bit architectures,\nbut GCN ends up with the data in the wrong argument register and/or stack slot,\nand bad things happen.\n\nThis patch corrects the issue by setting the correct type.\n\n2018-09-21  Andrew Stubbs  <ams@codesourcery.com>\n            Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tgcc/fortran/\n\t* trans-expr.c (gfc_trans_structure_assign): Ensure that the first\n\targument of a call to _gfortran_caf_register is of size_type_node.\n\t* trans-intrinsic.c (conv_intrinsic_event_query): Convert computed\n\tindex to a size_type_node type.\n\t* trans-stmt.c (gfc_trans_event_post_wait): Likewise.\n\nCo-Authored-By: Kwok Cheung Yeung <kcy@codesourcery.com>\n\nFrom-SVN: r264468", "tree": {"sha": "fb81c8961fa5ae676d0c230ee285e18b1e4e310b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb81c8961fa5ae676d0c230ee285e18b1e4e310b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6895597cd59f77077ccdecdacfdd34bf77b5a07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6895597cd59f77077ccdecdacfdd34bf77b5a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6895597cd59f77077ccdecdacfdd34bf77b5a07"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "1f622495d09a666b75d1abbcc39575b45798529d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "patch": "@@ -1,3 +1,12 @@\n+2018-09-21  Andrew Stubbs  <ams@codesourcery.com>\n+            Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* trans-expr.c (gfc_trans_structure_assign): Ensure that the first\n+\targument of a call to _gfortran_caf_register is of size_type_node.\n+\t* trans-intrinsic.c (conv_intrinsic_event_query): Convert computed\n+\tindex to a size_type_node type.\n+\t* trans-stmt.c (gfc_trans_event_post_wait): Likewise.\n+\n 2018-09-20  Allan Sandfeld Jensen  <allan.jensen@qt.io>\n \n \t* gfortranspec.c (lang_specific_driver): Handle -r like -nostdlib."}, {"sha": "1f94dcf11dd5f6f8f404cbbf872f0cf70671867d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "patch": "@@ -7733,7 +7733,7 @@ gfc_trans_structure_assign (tree dest, gfc_expr * expr, bool init, bool coarray)\n \t\t suffices to recognize the data as array.  */\n \t      if (rank < 0)\n \t\trank = 1;\n-\t      size = integer_zero_node;\n+\t      size = build_zero_cst (size_type_node);\n \t      desc = field;\n \t      gfc_add_modify (&block, gfc_conv_descriptor_rank (desc),\n \t\t\t      build_int_cst (signed_char_type_node, rank));"}, {"sha": "11fd4b94fcc410bd3d93fe88fd29cb247dba66e5", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "patch": "@@ -10729,7 +10729,9 @@ conv_intrinsic_event_query (gfc_code *code)\n \t      tmp = fold_build2_loc (input_location, MULT_EXPR,\n \t\t\t\t     integer_type_node, extent, tmp);\n \t      index = fold_build2_loc (input_location, PLUS_EXPR,\n-\t\t\t\t       integer_type_node, index, tmp);\n+\t\t\t\t       gfc_array_index_type, index,\n+\t\t\t\t       fold_convert (gfc_array_index_type,\n+\t\t\t\t\t\t     tmp));\n \t      if (i < ar->dimen - 1)\n \t\t{\n \t\t  ubound = gfc_conv_descriptor_ubound_get (desc, gfc_rank_cst[i]);\n@@ -10753,6 +10755,7 @@ conv_intrinsic_event_query (gfc_code *code)\n \t  stat = gfc_create_var (integer_type_node, \"stat\");\n \t}\n \n+      index = fold_convert (size_type_node, index);\n       tmp = build_call_expr_loc (input_location, gfor_fndecl_caf_event_query, 5,\n                                    token, index, image_index, count\n \t\t\t\t   ? gfc_build_addr_expr (NULL, count) : count,"}, {"sha": "92d9c3767c0aed1e2c2b706b27e1f958c08973a6", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd29d0eaeb29c5549cfac6a2d5ea936be118429/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=cbd29d0eaeb29c5549cfac6a2d5ea936be118429", "patch": "@@ -1096,7 +1096,8 @@ gfc_trans_event_post_wait (gfc_code *code, gfc_exec_op op)\n \t  tmp = fold_build2_loc (input_location, MULT_EXPR,\n \t\t\t\t integer_type_node, extent, tmp);\n \t  index = fold_build2_loc (input_location, PLUS_EXPR,\n-\t\t\t\t   integer_type_node, index, tmp);\n+\t\t\t\t   gfc_array_index_type, index,\n+\t\t\t\t   fold_convert (gfc_array_index_type, tmp));\n \t  if (i < ar->dimen - 1)\n \t    {\n \t      ubound = gfc_conv_descriptor_ubound_get (desc, gfc_rank_cst[i]);\n@@ -1130,6 +1131,7 @@ gfc_trans_event_post_wait (gfc_code *code, gfc_exec_op op)\n       stat = gfc_create_var (integer_type_node, \"stat\");\n     }\n \n+  index = fold_convert (size_type_node, index);\n   if (op == EXEC_EVENT_POST)\n     tmp = build_call_expr_loc (input_location, gfor_fndecl_caf_event_post, 6,\n \t\t\t       token, index, image_index,"}]}