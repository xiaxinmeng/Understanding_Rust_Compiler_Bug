{"sha": "e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1N2I2OTNlOTk5YTRjZjM0YzlhZTY4NDljMzZmYTljNjQzN2QzYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-28T09:11:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-28T09:11:53Z"}, "message": "[multiple changes]\n\n2009-07-28  Arnaud Charlet  <charlet@adacore.com>\n\n\t* frontend.adb: Minor reformatting.\n\t(Frontend): Only call Check_SCIL_Nodes if assertions are enabled,\n\tfor efficiency.\n\n2009-07-28  Bob Duff  <duff@adacore.com>\n\n\t* exp_attr.adb (Expand_Access_To_Protected_Op): Use 'Access instead of\n\t'Address to get a pointer to the protected body wrapper.\n\nFrom-SVN: r150150", "tree": {"sha": "b297031ff3b6be068bf0f58e1ecd818abd19a9b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b297031ff3b6be068bf0f58e1ecd818abd19a9b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/comments", "author": null, "committer": null, "parents": [{"sha": "327503f14780f4c9e8ee3ea4675abd0935761c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327503f14780f4c9e8ee3ea4675abd0935761c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327503f14780f4c9e8ee3ea4675abd0935761c79"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "e5a9d728c073922bc9d7db526bd9d6039bd50f16", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "patch": "@@ -1,3 +1,14 @@\n+2009-07-28  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* frontend.adb: Minor reformatting.\n+\t(Frontend): Only call Check_SCIL_Nodes if assertions are enabled,\n+\tfor efficiency.\n+\n+2009-07-28  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_attr.adb (Expand_Access_To_Protected_Op): Use 'Access instead of\n+\t'Address to get a pointer to the protected body wrapper.\n+\n 2009-07-28  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat1drv.adb (Adjust_Global_Switches): Disable generation of SCIL"}, {"sha": "56fa4c46a03d9a88a033d47416f08bab1b3673a4", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "patch": "@@ -235,6 +235,7 @@ package body Exp_Attr is\n       Agg     : Node_Id;\n       Btyp    : constant Entity_Id := Base_Type (Typ);\n       Sub     : Entity_Id;\n+      Sub_Ref : Node_Id;\n       E_T     : constant Entity_Id := Equivalent_Type (Btyp);\n       Acc     : constant Entity_Id :=\n                   Etype (Next_Component (First_Component (E_T)));\n@@ -355,15 +356,23 @@ package body Exp_Attr is\n                Attribute_Name => Name_Address);\n       end if;\n \n+      Sub_Ref :=\n+        Make_Attribute_Reference (Loc,\n+          Prefix => Sub,\n+          Attribute_Name => Name_Access);\n+\n+      --  We set the type of the access reference to the already generated\n+      --  access_to_subprogram type, and declare the reference analyzed, to\n+      --  prevent further expansion when the enclosing aggregate is analyzed.\n+\n+      Set_Etype (Sub_Ref, Acc);\n+      Set_Analyzed (Sub_Ref);\n+\n       Agg :=\n         Make_Aggregate (Loc,\n           Expressions =>\n             New_List (\n-              Obj_Ref,\n-              Unchecked_Convert_To (Acc,\n-                Make_Attribute_Reference (Loc,\n-                  Prefix => Sub,\n-                  Attribute_Name => Name_Address))));\n+              Obj_Ref, Sub_Ref));\n \n       Rewrite (N, Agg);\n "}, {"sha": "8cb372a255208cc96ca88dba16d11ffe41158081", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e657b693e999a4cf34c9ae6849c36fa9c6437d3a/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=e657b693e999a4cf34c9ae6849c36fa9c6437d3a", "patch": "@@ -342,7 +342,7 @@ begin\n          --  incorporate subunits at a lower level.\n \n          if Operating_Mode = Generate_Code\n-            and then Nkind (Unit (Cunit (Main_Unit))) = N_Subunit\n+           and then Nkind (Unit (Cunit (Main_Unit))) = N_Subunit\n          then\n             Operating_Mode := Check_Semantics;\n          end if;\n@@ -355,8 +355,8 @@ begin\n          --  Cleanup processing after completing main analysis\n \n          if Operating_Mode = Generate_Code\n-            or else (Operating_Mode = Check_Semantics\n-                      and then ASIS_Mode)\n+           or else (Operating_Mode = Check_Semantics\n+                     and then ASIS_Mode)\n          then\n             Instantiate_Bodies;\n          end if;\n@@ -404,7 +404,8 @@ begin\n    --  dispatching calls reference subprogram calls.\n \n    if Generate_SCIL then\n-      Check_SCIL_Nodes (Cunit (Main_Unit));\n+      pragma Debug (Check_SCIL_Nodes (Cunit (Main_Unit)));\n+      null;\n    end if;\n \n    --  Dump the source now. Note that we do this as soon as the analysis"}]}