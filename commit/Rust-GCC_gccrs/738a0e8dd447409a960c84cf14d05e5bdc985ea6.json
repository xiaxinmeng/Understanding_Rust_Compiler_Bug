{"sha": "738a0e8dd447409a960c84cf14d05e5bdc985ea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4YTBlOGRkNDQ3NDA5YTk2MGM4NGNmMTRkMDVlNWJkYzk4NWVhNg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-05-17T16:42:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-07T16:23:11Z"}, "message": "[Ada] Transient scope cleanup\n\ngcc/ada/\n\n\t* checks.adb, exp_attr.adb, exp_ch4.adb, exp_ch6.adb,\n\texp_ch9.adb, exp_disp.adb, exp_util.adb, inline.adb,\n\tsem_res.adb: Change all calls to Make_Unchecked_Type_Conversion\n\tto call Unchecked_Convert_To instead. This involves removing\n\tNew_Occurrence_Of on the first parameter, because\n\tUnchecked_Convert_To expects a type entity, rather than the name\n\tof one. Also, removed calls to Relocate_Node, because\n\tUnchecked_Convert_To takes care of that.\n\t* sinfo.ads: Change comment to be worded more firmly.", "tree": {"sha": "6b7aa170cc638297f723ec741b499daa3c840732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b7aa170cc638297f723ec741b499daa3c840732"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/738a0e8dd447409a960c84cf14d05e5bdc985ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738a0e8dd447409a960c84cf14d05e5bdc985ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/738a0e8dd447409a960c84cf14d05e5bdc985ea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738a0e8dd447409a960c84cf14d05e5bdc985ea6/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dbe0e11eb75e52885a0f6894a8d3da770f87ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbe0e11eb75e52885a0f6894a8d3da770f87ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dbe0e11eb75e52885a0f6894a8d3da770f87ca0"}], "stats": {"total": 258, "additions": 93, "deletions": 165}, "files": [{"sha": "76fd9b037fb28757392a76a4ad86982019148317", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -7831,10 +7831,8 @@ package body Checks is\n                      New_Occurrence_Of (Target_Base_Type, Loc),\n                    Constant_Present    => True,\n                    Expression          =>\n-                     Make_Unchecked_Type_Conversion (Loc,\n-                       Subtype_Mark =>\n-                         New_Occurrence_Of (Target_Base_Type, Loc),\n-                       Expression   => Duplicate_Subexpr (N))),\n+                     Unchecked_Convert_To\n+                       (Target_Base_Type, Duplicate_Subexpr (N))),\n \n                  Make_Raise_Constraint_Error (Loc,\n                    Condition =>"}, {"sha": "f074521e5f7c0b1ae15fa40f601efcdfc0f77ec4", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -2799,10 +2799,9 @@ package body Exp_Attr is\n                 Name                   =>\n                   New_Occurrence_Of (RTE (RE_Callable), Loc),\n                 Parameter_Associations => New_List (\n-                  Make_Unchecked_Type_Conversion (Loc,\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                    Expression   => Build_Disp_Get_Task_Id_Call (Pref)))));\n+                  Unchecked_Convert_To\n+                    (RTE (RO_ST_Task_Id),\n+                     Build_Disp_Get_Task_Id_Call (Pref)))));\n \n          else\n             Rewrite (N, Build_Call_With_Task (Pref, RTE (RE_Callable)));\n@@ -6746,10 +6745,9 @@ package body Exp_Attr is\n                 Name                   =>\n                   New_Occurrence_Of (RTE (RE_Terminated), Loc),\n                 Parameter_Associations => New_List (\n-                  Make_Unchecked_Type_Conversion (Loc,\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                    Expression   => Build_Disp_Get_Task_Id_Call (Pref)))));\n+                  Unchecked_Convert_To\n+                    (RTE (RO_ST_Task_Id),\n+                     Build_Disp_Get_Task_Id_Call (Pref)))));\n \n          elsif Restricted_Profile then\n             Rewrite (N,"}, {"sha": "0c5b3a244532037fd50af2aa39f857ee3ac085e3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -11992,9 +11992,8 @@ package body Exp_Ch4 is\n                --  unchecked conversion to the target fixed-point type.\n \n                Conv :=\n-                 Make_Unchecked_Type_Conversion (Loc,\n-                   Subtype_Mark => New_Occurrence_Of (Target_Type, Loc),\n-                   Expression   => New_Occurrence_Of (Expr_Id, Loc));\n+                 Unchecked_Convert_To\n+                   (Target_Type, New_Occurrence_Of (Expr_Id, Loc));\n             end;\n \n          --  All other conversions\n@@ -12515,10 +12514,7 @@ package body Exp_Ch4 is\n                   Conv : Node_Id;\n                begin\n                   Make_Tag_Check (Class_Wide_Type (Actual_Targ_Typ));\n-                  Conv :=\n-                    Make_Unchecked_Type_Conversion (Loc,\n-                      Subtype_Mark => New_Occurrence_Of (Target_Type, Loc),\n-                      Expression   => Relocate_Node (Expression (N)));\n+                  Conv := Unchecked_Convert_To (Target_Type, Expression (N));\n                   Rewrite (N, Conv);\n                   Analyze_And_Resolve (N, Target_Type);\n                end;"}, {"sha": "c1409bf6ebe6fed11bece62af5bcd0a80f326df9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 20, "deletions": 43, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -5852,11 +5852,9 @@ package body Exp_Ch6 is\n                              Name       =>\n                                New_Occurrence_Of (Alloc_Obj_Id, Loc),\n                              Expression =>\n-                               Make_Unchecked_Type_Conversion (Loc,\n-                                 Subtype_Mark =>\n-                                   New_Occurrence_Of (Ref_Type, Loc),\n-                                 Expression   =>\n-                                   New_Occurrence_Of (Obj_Acc_Formal, Loc)))),\n+                               Unchecked_Convert_To\n+                                 (Ref_Type,\n+                                  New_Occurrence_Of (Obj_Acc_Formal, Loc)))),\n \n                          Elsif_Parts => New_List (\n                            Make_Elsif_Part (Loc,\n@@ -5997,11 +5995,9 @@ package body Exp_Ch6 is\n                          Object_Definition   =>\n                            New_Occurrence_Of (Ref_Type, Loc),\n                          Expression =>\n-                           Make_Unchecked_Type_Conversion (Loc,\n-                             Subtype_Mark =>\n-                               New_Occurrence_Of (Ref_Type, Loc),\n-                             Expression   =>\n-                               New_Occurrence_Of (Obj_Acc_Formal, Loc)));\n+                           Unchecked_Convert_To\n+                             (Ref_Type,\n+                              New_Occurrence_Of (Obj_Acc_Formal, Loc)));\n \n                      Insert_Before (Ret_Obj_Decl, Alloc_Obj_Decl);\n \n@@ -8514,12 +8510,10 @@ package body Exp_Ch6 is\n \n          Alloc_Form := Caller_Allocation;\n          Pool := Make_Null (No_Location);\n-         Return_Obj_Actual :=\n-           Make_Unchecked_Type_Conversion (Loc,\n-             Subtype_Mark => New_Occurrence_Of (Result_Subt, Loc),\n-             Expression   =>\n-               Make_Explicit_Dereference (Loc,\n-                 Prefix => New_Occurrence_Of (Return_Obj_Access, Loc)));\n+         Return_Obj_Actual := Unchecked_Convert_To\n+           (Result_Subt,\n+            Make_Explicit_Dereference (Loc,\n+              Prefix => New_Occurrence_Of (Return_Obj_Access, Loc)));\n \n       --  When the result subtype is unconstrained, the function itself must\n       --  perform the allocation of the return object, so we pass parameters\n@@ -8833,11 +8827,7 @@ package body Exp_Ch6 is\n       --  the caller's return object.\n \n       Add_Access_Actual_To_Build_In_Place_Call\n-        (Func_Call,\n-         Func_Id,\n-         Make_Unchecked_Type_Conversion (Loc,\n-           Subtype_Mark => New_Occurrence_Of (Result_Subt, Loc),\n-           Expression   => Relocate_Node (Lhs)));\n+        (Func_Call, Func_Id, Unchecked_Convert_To (Result_Subt, Lhs));\n \n       --  Create an access type designating the function's result subtype\n \n@@ -8861,11 +8851,7 @@ package body Exp_Ch6 is\n \n       --  Add a conversion if it's the wrong type\n \n-      if Etype (New_Expr) /= Ptr_Typ then\n-         New_Expr :=\n-           Make_Unchecked_Type_Conversion (Loc,\n-             New_Occurrence_Of (Ptr_Typ, Loc), New_Expr);\n-      end if;\n+      New_Expr := Unchecked_Convert_To (Ptr_Typ, New_Expr);\n \n       Obj_Id := Make_Temporary (Loc, 'R', New_Expr);\n       Set_Etype (Obj_Id, Ptr_Typ);\n@@ -9124,27 +9110,19 @@ package body Exp_Ch6 is\n          --  it to the access type of the callee's BIP_Object_Access formal.\n \n          Caller_Object :=\n-           Make_Unchecked_Type_Conversion (Loc,\n-             Subtype_Mark =>\n-               New_Occurrence_Of\n-                 (Etype (Build_In_Place_Formal\n-                    (Function_Id, BIP_Object_Access)),\n-                  Loc),\n-             Expression   =>\n-               New_Occurrence_Of\n-                 (Build_In_Place_Formal (Encl_Func, BIP_Object_Access),\n-                  Loc));\n+           Unchecked_Convert_To\n+             (Etype (Build_In_Place_Formal (Function_Id, BIP_Object_Access)),\n+              New_Occurrence_Of\n+                (Build_In_Place_Formal (Encl_Func, BIP_Object_Access), Loc));\n \n       --  In the definite case, add an implicit actual to the function call\n       --  that provides access to the declared object. An unchecked conversion\n       --  to the (specific) result type of the function is inserted to handle\n       --  the case where the object is declared with a class-wide type.\n \n       elsif Definite then\n-         Caller_Object :=\n-            Make_Unchecked_Type_Conversion (Loc,\n-              Subtype_Mark => New_Occurrence_Of (Result_Subt, Loc),\n-              Expression   => New_Occurrence_Of (Obj_Def_Id, Loc));\n+         Caller_Object := Unchecked_Convert_To\n+           (Result_Subt, New_Occurrence_Of (Obj_Def_Id, Loc));\n \n          --  When the function has a controlling result, an allocation-form\n          --  parameter must be passed indicating that the caller is allocating\n@@ -9252,9 +9230,8 @@ package body Exp_Ch6 is\n              Constant_Present    => True,\n              Object_Definition   => New_Occurrence_Of (Ptr_Typ, Loc),\n              Expression          =>\n-               Make_Unchecked_Type_Conversion (Loc,\n-                 New_Occurrence_Of (Ptr_Typ, Loc),\n-                 Make_Reference (Loc, Relocate_Node (Func_Call))));\n+               Unchecked_Convert_To\n+                 (Ptr_Typ, Make_Reference (Loc, Relocate_Node (Func_Call))));\n       else\n          Res_Decl :=\n            Make_Object_Declaration (Loc,"}, {"sha": "427b430151440b1d5d38df0974f2eacb3ffec7c1", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -6510,14 +6510,12 @@ package body Exp_Ch9 is\n \n                   --  Task_Id (Tasknm._disp_get_task_id)\n \n-                  Make_Unchecked_Type_Conversion (Loc,\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                    Expression   =>\n-                      Make_Selected_Component (Loc,\n-                        Prefix        => New_Copy_Tree (Tasknm),\n-                        Selector_Name =>\n-                          Make_Identifier (Loc, Name_uDisp_Get_Task_Id)))));\n+                  Unchecked_Convert_To\n+                    (RTE (RO_ST_Task_Id),\n+                     Make_Selected_Component (Loc,\n+                       Prefix        => New_Copy_Tree (Tasknm),\n+                       Selector_Name =>\n+                         Make_Identifier (Loc, Name_uDisp_Get_Task_Id)))));\n \n          else\n             Append_To (Component_Associations (Aggr),\n@@ -7242,10 +7240,9 @@ package body Exp_Ch9 is\n               Make_Assignment_Statement (Loc,\n                 Name       => New_Occurrence_Of (Bnn, Loc),\n                 Expression =>\n-                  Make_Unchecked_Type_Conversion (Loc,\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of (RTE (RE_Communication_Block), Loc),\n-                    Expression   => Make_Identifier (Loc, Name_uD))));\n+                  Unchecked_Convert_To\n+                    (RTE (RE_Communication_Block),\n+                     Make_Identifier (Loc, Name_uD))));\n \n             --  Generate:\n             --    _Disp_Asynchronous_Select (<object>, S, P'Address, D, B);\n@@ -7361,10 +7358,9 @@ package body Exp_Ch9 is\n                 Name =>\n                   New_Occurrence_Of (Bnn, Loc),\n                 Expression =>\n-                  Make_Unchecked_Type_Conversion (Loc,\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of (RTE (RE_Communication_Block), Loc),\n-                    Expression   => Make_Identifier (Loc, Name_uD))));\n+                  Unchecked_Convert_To\n+                    (RTE (RE_Communication_Block),\n+                     Make_Identifier (Loc, Name_uD))));\n \n             --  Generate:\n             --    _Disp_Asynchronous_Select (<object>, S, P'Address, D, B);"}, {"sha": "a44af6a126e79f185543205af187282cf5c73708", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 44, "deletions": 67, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -2575,11 +2575,9 @@ package body Exp_Disp is\n                         New_List (\n                           Obj_Ref,\n \n-                          Make_Unchecked_Type_Conversion (Loc,  --  entry index\n-                            Subtype_Mark =>\n-                              New_Occurrence_Of\n-                                (RTE (RE_Protected_Entry_Index), Loc),\n-                            Expression => Make_Identifier (Loc, Name_uI)),\n+                          Unchecked_Convert_To ( --  entry index\n+                            RTE (RE_Protected_Entry_Index),\n+                            Make_Identifier (Loc, Name_uI)),\n \n                           Make_Identifier (Loc, Name_uP), --  parameter block\n                           New_Occurrence_Of               --  Asynchronous_Call\n@@ -2598,11 +2596,9 @@ package body Exp_Disp is\n               Make_Assignment_Statement (Loc,\n                 Name => Make_Identifier (Loc, Name_uB),\n                 Expression =>\n-                  Make_Unchecked_Type_Conversion (Loc,\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of\n-                        (RTE (RE_Dummy_Communication_Block), Loc),\n-                    Expression   => New_Occurrence_Of (Com_Block, Loc))));\n+                  Unchecked_Convert_To\n+                    (RTE (RE_Dummy_Communication_Block),\n+                     New_Occurrence_Of (Com_Block, Loc))));\n \n             --  Generate:\n             --    F := False;\n@@ -2636,10 +2632,9 @@ package body Exp_Disp is\n                       Prefix        => Make_Identifier (Loc, Name_uT),\n                       Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                    Make_Unchecked_Type_Conversion (Loc,  --  entry index\n-                      Subtype_Mark =>\n-                        New_Occurrence_Of (RTE (RE_Task_Entry_Index), Loc),\n-                      Expression   => Make_Identifier (Loc, Name_uI)),\n+                    Unchecked_Convert_To ( --  entry index\n+                      RTE (RE_Task_Entry_Index),\n+                      Make_Identifier (Loc, Name_uI)),\n \n                     Make_Identifier (Loc, Name_uP),       --  parameter block\n                     New_Occurrence_Of                     --  Asynchronous_Call\n@@ -2929,11 +2924,9 @@ package body Exp_Disp is\n                       Parameter_Associations => New_List (\n                           Obj_Ref,\n \n-                          Make_Unchecked_Type_Conversion (Loc,  --  entry index\n-                            Subtype_Mark =>\n-                              New_Occurrence_Of\n-                                 (RTE (RE_Protected_Entry_Index), Loc),\n-                            Expression => Make_Identifier (Loc, Name_uI)),\n+                          Unchecked_Convert_To ( --  entry index\n+                            RTE (RE_Protected_Entry_Index),\n+                            Make_Identifier (Loc, Name_uI)),\n \n                           Make_Identifier (Loc, Name_uP),  --  parameter block\n \n@@ -3006,10 +2999,9 @@ package body Exp_Disp is\n                       Prefix        => Make_Identifier (Loc, Name_uT),\n                       Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                    Make_Unchecked_Type_Conversion (Loc,  --  entry index\n-                      Subtype_Mark =>\n-                        New_Occurrence_Of (RTE (RE_Task_Entry_Index), Loc),\n-                      Expression   => Make_Identifier (Loc, Name_uI)),\n+                    Unchecked_Convert_To ( --  entry index\n+                      RTE (RE_Task_Entry_Index),\n+                      Make_Identifier (Loc, Name_uI)),\n \n                     Make_Identifier (Loc, Name_uP),       --  parameter block\n                     New_Occurrence_Of                      --  Conditional_Call\n@@ -3219,12 +3211,11 @@ package body Exp_Disp is\n          Ret :=\n            Make_Simple_Return_Statement (Loc,\n              Expression =>\n-               Make_Unchecked_Type_Conversion (Loc,\n-                 Subtype_Mark => New_Occurrence_Of (RTE (RE_Address), Loc),\n-                 Expression   =>\n-                   Make_Selected_Component (Loc,\n-                     Prefix        => Make_Identifier (Loc, Name_uT),\n-                     Selector_Name => Make_Identifier (Loc, Name_uTask_Id))));\n+               Unchecked_Convert_To\n+                 (RTE (RE_Address),\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => Make_Identifier (Loc, Name_uT),\n+                    Selector_Name => Make_Identifier (Loc, Name_uTask_Id))));\n \n       --  A null body is constructed for non-task types\n \n@@ -3337,12 +3328,9 @@ package body Exp_Disp is\n                       Parameter_Associations =>\n                         New_List (\n \n-                          Make_Unchecked_Type_Conversion (Loc,  -- PEA (P)\n-                            Subtype_Mark =>\n-                              New_Occurrence_Of (\n-                                RTE (RE_Protection_Entries_Access), Loc),\n-                            Expression =>\n-                              Make_Identifier (Loc, Name_uP)),\n+                          Unchecked_Convert_To ( -- PEA (P)\n+                            RTE (RE_Protection_Entries_Access),\n+                            Make_Identifier (Loc, Name_uP)),\n \n                           Make_Attribute_Reference (Loc,      -- O._object'Acc\n                             Attribute_Name =>\n@@ -3354,11 +3342,9 @@ package body Exp_Disp is\n                                 Selector_Name =>\n                                   Make_Identifier (Loc, Name_uObject))),\n \n-                          Make_Unchecked_Type_Conversion (Loc,  -- entry index\n-                            Subtype_Mark =>\n-                              New_Occurrence_Of\n-                                (RTE (RE_Protected_Entry_Index), Loc),\n-                            Expression => Make_Identifier (Loc, Name_uI)),\n+                          Unchecked_Convert_To ( -- entry index\n+                            RTE (RE_Protected_Entry_Index),\n+                            Make_Identifier (Loc, Name_uI)),\n \n                           Make_Identifier (Loc, Name_uA)))),   -- abort status\n \n@@ -3383,11 +3369,9 @@ package body Exp_Disp is\n                                 Selector_Name =>\n                                   Make_Identifier (Loc, Name_uObject))),\n \n-                          Make_Unchecked_Type_Conversion (Loc, -- entry index\n-                            Subtype_Mark =>\n-                              New_Occurrence_Of\n-                                (RTE (RE_Protected_Entry_Index), Loc),\n-                            Expression   => Make_Identifier (Loc, Name_uI)),\n+                          Unchecked_Convert_To ( -- entry index\n+                            RTE (RE_Protected_Entry_Index),\n+                            Make_Identifier (Loc, Name_uI)),\n \n                           Make_Identifier (Loc, Name_uA)))))); -- abort status\n          end if;\n@@ -3424,20 +3408,17 @@ package body Exp_Disp is\n \n                  Parameter_Associations => New_List (\n \n-                   Make_Unchecked_Type_Conversion (Loc,  -- PEA (P)\n-                     Subtype_Mark =>\n-                       New_Occurrence_Of\n-                         (RTE (RE_Protection_Entries_Access), Loc),\n-                          Expression => Make_Identifier (Loc, Name_uP)),\n+                   Unchecked_Convert_To ( -- PEA (P)\n+                     RTE (RE_Protection_Entries_Access),\n+                     Make_Identifier (Loc, Name_uP)),\n \n                    Make_Selected_Component (Loc,         -- O._task_id\n                      Prefix        => Make_Identifier (Loc, Name_uO),\n                      Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                   Make_Unchecked_Type_Conversion (Loc,  -- entry index\n-                     Subtype_Mark =>\n-                       New_Occurrence_Of (RTE (RE_Task_Entry_Index), Loc),\n-                     Expression   => Make_Identifier (Loc, Name_uI)),\n+                   Unchecked_Convert_To ( -- entry index\n+                     RTE (RE_Task_Entry_Index),\n+                     Make_Identifier (Loc, Name_uI)),\n \n                    Make_Identifier (Loc, Name_uA)))),    -- abort status\n \n@@ -3455,10 +3436,9 @@ package body Exp_Disp is\n                      Prefix        => Make_Identifier (Loc, Name_uO),\n                      Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                   Make_Unchecked_Type_Conversion (Loc,  -- entry index\n-                     Subtype_Mark =>\n-                       New_Occurrence_Of (RTE (RE_Task_Entry_Index), Loc),\n-                     Expression   => Make_Identifier (Loc, Name_uI)),\n+                   Unchecked_Convert_To ( -- entry index\n+                     RTE (RE_Task_Entry_Index),\n+                     Make_Identifier (Loc, Name_uI)),\n \n                    Make_Identifier (Loc, Name_uA))))));  -- abort status\n       end if;\n@@ -3743,11 +3723,9 @@ package body Exp_Disp is\n                       Parameter_Associations => New_List (\n                         Obj_Ref,\n \n-                        Make_Unchecked_Type_Conversion (Loc,  --  entry index\n-                          Subtype_Mark =>\n-                            New_Occurrence_Of\n-                              (RTE (RE_Protected_Entry_Index), Loc),\n-                          Expression   => Make_Identifier (Loc, Name_uI)),\n+                        Unchecked_Convert_To ( --  entry index\n+                         RTE (RE_Protected_Entry_Index),\n+                          Make_Identifier (Loc, Name_uI)),\n \n                         Make_Identifier (Loc, Name_uP),    --  parameter block\n                         Make_Identifier (Loc, Name_uD),    --  delay\n@@ -3786,10 +3764,9 @@ package body Exp_Disp is\n                     Prefix        => Make_Identifier (Loc, Name_uT),\n                     Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                  Make_Unchecked_Type_Conversion (Loc,  --  entry index\n-                    Subtype_Mark =>\n-                      New_Occurrence_Of (RTE (RE_Task_Entry_Index), Loc),\n-                    Expression   => Make_Identifier (Loc, Name_uI)),\n+                  Unchecked_Convert_To ( --  entry index\n+                    RTE (RE_Task_Entry_Index),\n+                    Make_Identifier (Loc, Name_uI)),\n \n                   Make_Identifier (Loc, Name_uP),       --  parameter block\n                   Make_Identifier (Loc, Name_uD),       --  delay"}, {"sha": "2ff11446abc1292f3aa46e03cff35f6ad9555713", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -1467,9 +1467,7 @@ package body Exp_Util is\n         Make_Procedure_Call_Statement (Loc,\n           Name                   => New_Occurrence_Of (Proc_Id, Loc),\n           Parameter_Associations => New_List (\n-            Make_Unchecked_Type_Conversion (Loc,\n-              Subtype_Mark => New_Occurrence_Of (Formal_Typ, Loc),\n-              Expression   => Obj_Name)));\n+            Unchecked_Convert_To (Formal_Typ, Obj_Name)));\n    end Build_DIC_Call;\n \n    ------------------------------"}, {"sha": "589c0f3f16e46af6905c04b64f0d3a6acf213d93", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -3008,10 +3008,7 @@ package body Inline is\n             if Nkind (A) = N_Type_Conversion\n               and then Ekind (F) /= E_In_Parameter\n             then\n-               New_A :=\n-                 Make_Unchecked_Type_Conversion (Loc,\n-                   Subtype_Mark => New_Occurrence_Of (Etype (F), Loc),\n-                   Expression   => Relocate_Node (Expression (A)));\n+               New_A := Unchecked_Convert_To (Etype (F), Expression (A));\n \n             --  In GNATprove mode, keep the most precise type of the actual for\n             --  the temporary variable, when the formal type is unconstrained."}, {"sha": "54d476ef590cdaa133d5ffe6299237f6dd368395", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -8825,18 +8825,12 @@ package body Sem_Res is\n                or else Is_Private_Type (T))\n          then\n             if Etype (L) /= T then\n-               Rewrite (L,\n-                 Make_Unchecked_Type_Conversion (Sloc (L),\n-                   Subtype_Mark => New_Occurrence_Of (T, Sloc (L)),\n-                   Expression   => Relocate_Node (L)));\n+               Rewrite (L, Unchecked_Convert_To (T, L));\n                Analyze_And_Resolve (L, T);\n             end if;\n \n             if (Etype (R)) /= T then\n-               Rewrite (R,\n-                  Make_Unchecked_Type_Conversion (Sloc (R),\n-                    Subtype_Mark => New_Occurrence_Of (Etype (L), Sloc (R)),\n-                    Expression   => Relocate_Node (R)));\n+               Rewrite (R, Unchecked_Convert_To (Etype (L), R));\n                Analyze_And_Resolve (R, T);\n             end if;\n          end if;\n@@ -12740,10 +12734,7 @@ package body Sem_Res is\n             Set_Etype          (Array_Subtype, Base_Type (Typ));\n             Set_Is_Constrained (Array_Subtype, True);\n \n-            Rewrite (N,\n-              Make_Unchecked_Type_Conversion (Loc,\n-                Subtype_Mark => New_Occurrence_Of (Array_Subtype, Loc),\n-                Expression   => Relocate_Node (N)));\n+            Rewrite (N, Unchecked_Convert_To (Array_Subtype, N));\n             Set_Etype (N, Array_Subtype);\n          end;\n       end if;"}, {"sha": "25a61ad56659bf710dbba93a439b56a84f57625c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738a0e8dd447409a960c84cf14d05e5bdc985ea6/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=738a0e8dd447409a960c84cf14d05e5bdc985ea6", "patch": "@@ -8422,7 +8422,7 @@ package Sinfo is\n       --  It is generated as a result of actual use of Unchecked_Conversion\n       --  and also by the expander.\n \n-      --  Unchecked type conversion nodes should normally be created by calling\n+      --  Unchecked type conversion nodes should be created by calling\n       --  Tbuild.Unchecked_Convert_To, rather than by directly calling\n       --  Nmake.Make_Unchecked_Type_Conversion.\n "}]}