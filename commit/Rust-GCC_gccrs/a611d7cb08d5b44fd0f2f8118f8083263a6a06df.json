{"sha": "a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxMWQ3Y2IwOGQ1YjQ0ZmQwZjJmODExOGY4MDgzMjYzYTZhMDZkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-16T19:24:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-16T19:24:07Z"}, "message": "re PR target/59839 (i686 AVX2 gather intrinsic not compiling with -O0 on mingw w64)\n\n\tPR target/59839\n\t* config/i386/i386.c (ix86_expand_builtin): If target doesn't\n\tsatisfy operand 0 predicate for gathers, use a new pseudo as\n\tsubtarget.\n\n\t* gcc.target/i386/pr59839.c: New test.\n\nFrom-SVN: r206682", "tree": {"sha": "55eea340d0568b1c6e05681399862e077b21fe12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55eea340d0568b1c6e05681399862e077b21fe12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2af4ea89e5630063b961c4d026412bb7d5aa8832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af4ea89e5630063b961c4d026412bb7d5aa8832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af4ea89e5630063b961c4d026412bb7d5aa8832"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "098e0c109c3ad3f5c9544908ab9f7ff127a90b8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "patch": "@@ -1,3 +1,10 @@\n+2014-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/59839\n+\t* config/i386/i386.c (ix86_expand_builtin): If target doesn't\n+\tsatisfy operand 0 predicate for gathers, use a new pseudo as\n+\tsubtarget.\n+\n 2014-01-16  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/59609"}, {"sha": "df408ae1a2d6dee5f0169c341b7f09720ed4358b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "patch": "@@ -35511,7 +35511,9 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       mode4 = insn_data[icode].operand[5].mode;\n \n       if (target == NULL_RTX\n-\t  || GET_MODE (target) != insn_data[icode].operand[0].mode)\n+\t  || GET_MODE (target) != insn_data[icode].operand[0].mode\n+\t  || !insn_data[icode].operand[0].predicate (target,\n+\t\t\t\t\t\t     GET_MODE (target)))\n \tsubtarget = gen_reg_rtx (insn_data[icode].operand[0].mode);\n       else\n \tsubtarget = target;"}, {"sha": "64826502edbbe5f790537f7260e09744d03d0840", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "patch": "@@ -1,5 +1,8 @@\n 2014-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/59839\n+\t* gcc.target/i386/pr59839.c: New test.\n+\n \tPR debug/54694\n \t* gcc.target/i386/pr9771-1.c (main): Rename to...\n \t(real_main): ... this.  Add __asm name \"main\"."}, {"sha": "dfb89456f9d10257dc58ba06dcc2186a2f92131d", "filename": "gcc/testsuite/gcc.target/i386/pr59839.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59839.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a611d7cb08d5b44fd0f2f8118f8083263a6a06df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59839.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59839.c?ref=a611d7cb08d5b44fd0f2f8118f8083263a6a06df", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/59839 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -mavx2\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+test (const float *x)\n+{\n+  __m256i i = _mm256_set1_epi32 (1);\n+  __m256 d = _mm256_i32gather_ps (x, i, 1);\n+}"}]}