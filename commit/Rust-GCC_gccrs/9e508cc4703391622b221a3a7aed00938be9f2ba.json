{"sha": "9e508cc4703391622b221a3a7aed00938be9f2ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU1MDhjYzQ3MDMzOTE2MjJiMjIxYTNhN2FlZDAwOTM4YmU5ZjJiYQ==", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@redhat.com", "date": "2003-07-18T19:20:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2003-07-18T19:20:33Z"}, "message": "[ ChangeLog ]\n\n2003-07-18  Graydon Hoare  <graydon@redhat.com>\n\n\t* java/awt/geom/CubicCurve2D.java,\n\tjava/awt/geom/Line2D.java,\n\tjava/awt/geom/QuadCurve2D.java,\n\tjava/awt/geom/Rectangle2D.java:\n\tFix path some calculations, make path iterators follow\n\ta consistent style.\n\nFrom-SVN: r69567", "tree": {"sha": "a1aabeff099d1c04105b8a5b341a1349788466fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1aabeff099d1c04105b8a5b341a1349788466fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e508cc4703391622b221a3a7aed00938be9f2ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e508cc4703391622b221a3a7aed00938be9f2ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e508cc4703391622b221a3a7aed00938be9f2ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e508cc4703391622b221a3a7aed00938be9f2ba/comments", "author": null, "committer": null, "parents": [{"sha": "0595d388a4b11459dc47c0bebf7b8895f8e9d331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0595d388a4b11459dc47c0bebf7b8895f8e9d331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0595d388a4b11459dc47c0bebf7b8895f8e9d331"}], "stats": {"total": 121, "additions": 69, "deletions": 52}, "files": [{"sha": "e65465028c89ca6875eaf2e9df1f8788d631fb56", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9e508cc4703391622b221a3a7aed00938be9f2ba", "patch": "@@ -1,3 +1,12 @@\n+2003-07-18  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* java/awt/geom/CubicCurve2D.java,\n+\tjava/awt/geom/Line2D.java,\n+\tjava/awt/geom/QuadCurve2D.java,\n+\tjava/awt/geom/Rectangle2D.java: \n+\tFix path some calculations, make path iterators follow\n+\ta consistent style.\n+\n 2003-07-18  Mark Wielaard  <mark@klomp.org>\n \n \t* java/util/logging/Handler.java (isLoggable): Check record level"}, {"sha": "2bc0b358b190bcd3c9166428e176f89d3b762812", "filename": "libjava/java/awt/geom/CubicCurve2D.java", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java?ref=9e508cc4703391622b221a3a7aed00938be9f2ba", "patch": "@@ -204,7 +204,7 @@ public PathIterator getPathIterator(final AffineTransform at)\n     return new PathIterator()\n     {\n       /** Current coordinate. */\n-      private int current;\n+      private int current = 0;\n \n       public int getWindingRule()\n       {\n@@ -213,7 +213,7 @@ public int getWindingRule()\n \n       public boolean isDone()\n       {\n-        return current < 2;\n+        return current >= 2;\n       }\n \n       public void next()\n@@ -223,52 +223,56 @@ public void next()\n \n       public int currentSegment(float[] coords)\n       {\n-        if (current == 0)\n+        int result;\n+        switch (current)\n           {\n+          case 0:\n             coords[0] = (float) getX1();\n             coords[1] = (float) getY1();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 1);\n-            return SEG_MOVETO;\n-          }\n-        if (current == 1)\n-          {\n+            result = SEG_MOVETO;\n+            break;            \n+          case 1:\n             coords[0] = (float) getCtrlX1();\n             coords[1] = (float) getCtrlY1();\n             coords[2] = (float) getCtrlX2();\n             coords[3] = (float) getCtrlY2();\n             coords[4] = (float) getX2();\n             coords[5] = (float) getY2();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 3);\n-            return SEG_CUBICTO;\n+            result = SEG_CUBICTO;\n+            break;\n+          default:\n+            throw new NoSuchElementException(\"cubic iterator out of bounds\");            \n           }\n-        throw new NoSuchElementException(\"cubic iterator out of bounds\");\n+        if (at != null)\n+          at.transform(coords, 0, coords, 0, 3);\n+        return result;\n       }\n \n       public int currentSegment(double[] coords)\n       {\n-        if (current == 0)\n+        int result;\n+        switch (current)\n           {\n+          case 0:\n             coords[0] = getX1();\n             coords[1] = getY1();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 1);\n-            return SEG_MOVETO;\n-          }\n-        if (current == 1)\n-          {\n+            result = SEG_MOVETO;\n+            break;\n+          case 1:\n             coords[0] = getCtrlX1();\n             coords[1] = getCtrlY1();\n             coords[2] = getCtrlX2();\n             coords[3] = getCtrlY2();\n             coords[4] = getX2();\n             coords[5] = getY2();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 3);\n-            return SEG_CUBICTO;\n-          }\n-        throw new NoSuchElementException(\"cubic iterator out of bounds\");\n+            result = SEG_CUBICTO;\n+            break;\n+          default:\n+            throw new NoSuchElementException(\"cubic iterator out of bounds\");\n+          }        \n+        if (at != null)\n+          at.transform(coords, 0, coords, 0, 3);\n+        return result;\n       }\n     };\n   }"}, {"sha": "15b2ecae80cd0971cd411349b787103c190f9392", "filename": "libjava/java/awt/geom/Line2D.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java?ref=9e508cc4703391622b221a3a7aed00938be9f2ba", "patch": "@@ -668,7 +668,7 @@ public PathIterator getPathIterator(final AffineTransform at)\n     return new PathIterator()\n     {\n       /** Current coordinate. */\n-      private int current;\n+      private int current = 0;\n \n       public int getWindingRule()\n       {\n@@ -677,7 +677,7 @@ public int getWindingRule()\n \n       public boolean isDone()\n       {\n-        return current < 2;\n+        return current >= 2;\n       }\n \n       public void next()"}, {"sha": "6aed05907562853b787c1d4916906c4d9842f44e", "filename": "libjava/java/awt/geom/QuadCurve2D.java", "status": "modified", "additions": 28, "deletions": 24, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java?ref=9e508cc4703391622b221a3a7aed00938be9f2ba", "patch": "@@ -215,7 +215,7 @@ public PathIterator getPathIterator(final AffineTransform at)\n     return new PathIterator()\n     {\n       /** Current coordinate. */\n-      private int current;\n+      private int current = 0;\n \n       public int getWindingRule()\n       {\n@@ -224,7 +224,7 @@ public int getWindingRule()\n \n       public boolean isDone()\n       {\n-        return current < 2;\n+        return current >= 2;\n       }\n \n       public void next()\n@@ -234,48 +234,52 @@ public void next()\n \n       public int currentSegment(float[] coords)\n       {\n-        if (current == 0)\n+        int result;\n+        switch (current)\n           {\n+          case 0:\n             coords[0] = (float) getX1();\n             coords[1] = (float) getY1();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 1);\n-            return SEG_MOVETO;\n-          }\n-        if (current == 1)\n-          {\n+            result = SEG_MOVETO;\n+            break;\n+          case 1:\n             coords[0] = (float) getCtrlX();\n             coords[1] = (float) getCtrlY();\n             coords[2] = (float) getX2();\n             coords[3] = (float) getY2();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 2);\n-            return SEG_QUADTO;\n+            result = SEG_QUADTO;\n+            break;\n+          default:\n+            throw new NoSuchElementException(\"quad iterator out of bounds\");\n           }\n-        throw new NoSuchElementException(\"quad iterator out of bounds\");\n+        if (at != null)\n+          at.transform(coords, 0, coords, 0, 2);\n+        return result;\n       }\n \n       public int currentSegment(double[] coords)\n       {\n-        if (current == 0)\n+        int result;\n+        switch (current)\n           {\n+          case 0:\n             coords[0] = getX1();\n             coords[1] = getY1();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 1);\n-            return SEG_MOVETO;\n-          }\n-        if (current == 1)\n-          {\n+            result = SEG_MOVETO;\n+            break;\n+          case 1:\n             coords[0] = getCtrlX();\n             coords[1] = getCtrlY();\n             coords[2] = getX2();\n             coords[3] = getY2();\n-            if (at != null)\n-              at.transform(coords, 0, coords, 0, 2);\n-            return SEG_QUADTO;\n+            result = SEG_QUADTO;\n+            break;\n+          default:\n+            throw new NoSuchElementException(\"quad iterator out of bounds\");\n           }\n-        throw new NoSuchElementException(\"quad iterator out of bounds\");\n+        if (at != null)\n+          at.transform(coords, 0, coords, 0, 2);\n+        return result;\n       }\n     };\n   }"}, {"sha": "e63e1bad13498f504cb69e1fac125d6845c3ac70", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e508cc4703391622b221a3a7aed00938be9f2ba/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=9e508cc4703391622b221a3a7aed00938be9f2ba", "patch": "@@ -395,7 +395,7 @@ public PathIterator getPathIterator(final AffineTransform at)\n     return new PathIterator()\n     {\n       /** Current coordinate. */\n-      private int current = (maxx >= minx && maxy >= miny) ? 6 : 0;\n+      private int current = (maxx <= minx && maxy <= miny) ? 6 : 0;\n \n       public int getWindingRule()\n       {"}]}