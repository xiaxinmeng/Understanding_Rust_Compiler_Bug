{"sha": "39113df12c87dd242b397fa9ba862bab673fad4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxMTNkZjEyYzg3ZGQyNDJiMzk3ZmE5YmE4NjJiYWI2NzNmYWQ0Yg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-26T11:33:02Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-26T11:33:02Z"}, "message": "Implemented encoding property types for new ObjC ABIs\n\nFrom-SVN: r170516", "tree": {"sha": "ce72fd0f2786bc428d60a36a80babc99ed9128ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce72fd0f2786bc428d60a36a80babc99ed9128ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39113df12c87dd242b397fa9ba862bab673fad4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39113df12c87dd242b397fa9ba862bab673fad4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39113df12c87dd242b397fa9ba862bab673fad4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39113df12c87dd242b397fa9ba862bab673fad4b/comments", "author": null, "committer": null, "parents": [{"sha": "509d65ddc63d3a18ec99892420b0ec58eda15aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509d65ddc63d3a18ec99892420b0ec58eda15aab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509d65ddc63d3a18ec99892420b0ec58eda15aab"}], "stats": {"total": 79, "additions": 58, "deletions": 21}, "files": [{"sha": "b547316d82e83dea07a776fe13ee7e2c16344e77", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39113df12c87dd242b397fa9ba862bab673fad4b/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39113df12c87dd242b397fa9ba862bab673fad4b/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=39113df12c87dd242b397fa9ba862bab673fad4b", "patch": "@@ -1,3 +1,7 @@\n+2011-02-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_v2_encode_prop_attr): Rewritten.\n+\t\n 2011-02-23  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (build_private_template): Do not copy the\n@@ -16,7 +20,8 @@\n \n 2011-02-21  Mike Stump  <mikestump@comcast.net>\n \n-\t* Make-lang.in (check_objc_parallelize): Refine for 4 processor machines.\n+\t* Make-lang.in (check_objc_parallelize): Refine for 4 processor\n+\tmachines.\n \n 2011-02-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n "}, {"sha": "451143531a4f64e13f72793bd007e5a80665bc34", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 52, "deletions": 20, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39113df12c87dd242b397fa9ba862bab673fad4b/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39113df12c87dd242b397fa9ba862bab673fad4b/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=39113df12c87dd242b397fa9ba862bab673fad4b", "patch": "@@ -10495,47 +10495,79 @@ encode_field_decl (tree field_decl, int curtype, int format)\n      kPropertyGetter = 'G',\n      kPropertySetter = 'S',\n      kPropertyInstanceVariable = 'V',\n-     kPropertyType = 't',\n+     kPropertyType = 'T',\n      kPropertyWeak = 'W',\n-     kPropertyStrong = 'S',\n+     kPropertyStrong = 'P',\n      kPropertyNonAtomic = 'N'\n-   };\n-\n-   FIXME: Update the implementation to match.  */\n+   };  */\n tree\n objc_v2_encode_prop_attr (tree property)\n {\n   const char *string;\n   tree type = TREE_TYPE (property);\n-  obstack_1grow (&util_obstack, 't');\n+\n+  obstack_1grow (&util_obstack, 'T');\n   encode_type (type, obstack_object_size (&util_obstack),\n \t       OBJC_ENCODE_INLINE_DEFS);\n+\n   if (PROPERTY_READONLY (property))\n-    obstack_grow (&util_obstack, \",r\", 2);\n+    obstack_grow (&util_obstack, \",R\", 2);\n+\n+  switch (PROPERTY_ASSIGN_SEMANTICS (property))\n+    {\n+    case OBJC_PROPERTY_COPY:\n+      obstack_grow (&util_obstack, \",C\", 2);\n+      break;\n+    case OBJC_PROPERTY_RETAIN:\n+      obstack_grow (&util_obstack, \",&\", 2);\n+      break;\n+    case OBJC_PROPERTY_ASSIGN:\n+    default:\n+      break;\n+    }\n \n-  if (PROPERTY_ASSIGN_SEMANTICS (property) == OBJC_PROPERTY_COPY)\n-    obstack_grow (&util_obstack, \",c\", 2);\n+  if (PROPERTY_DYNAMIC (property))\n+    obstack_grow (&util_obstack, \",D\", 2);    \n \n-  if (PROPERTY_GETTER_NAME (property))\n+  if (PROPERTY_NONATOMIC (property))\n+    obstack_grow (&util_obstack, \",N\", 2);\n+\n+  /* Here we want to encode the getter name, but only if it's not the\n+     standard one.  */\n+  if (PROPERTY_GETTER_NAME (property) != PROPERTY_NAME (property))\n     {\n-      obstack_grow (&util_obstack, \",g\", 2);\n+      obstack_grow (&util_obstack, \",G\", 2);\n       string = IDENTIFIER_POINTER (PROPERTY_GETTER_NAME (property));\n       obstack_grow (&util_obstack, string, strlen (string));\n     }\n-  if (PROPERTY_SETTER_NAME (property))\n+\n+  if (!PROPERTY_READONLY (property))\n     {\n-      obstack_grow (&util_obstack, \",s\", 2);\n-      string = IDENTIFIER_POINTER (PROPERTY_SETTER_NAME (property));\n-      obstack_grow (&util_obstack, string, strlen (string));\n+      /* Here we want to encode the setter name, but only if it's not\n+\t the standard one.  */\n+      tree standard_setter = get_identifier (objc_build_property_setter_name (PROPERTY_NAME (property)));\n+      if (PROPERTY_SETTER_NAME (property) != standard_setter)\n+\t{\n+\t  obstack_grow (&util_obstack, \",S\", 2);\n+\t  string = IDENTIFIER_POINTER (PROPERTY_SETTER_NAME (property));\n+\t  obstack_grow (&util_obstack, string, strlen (string));\n+\t}\n     }\n-  if (PROPERTY_IVAR_NAME (property))\n+\n+  /* TODO: Encode strong ('P'), weak ('W') for garbage collection.  */\n+\n+  if (!PROPERTY_DYNAMIC (property))\n     {\n-      obstack_grow (&util_obstack, \",i\", 2);\n-      string = IDENTIFIER_POINTER (PROPERTY_IVAR_NAME (property));\n+      obstack_grow (&util_obstack, \",V\", 2);\n+      if (PROPERTY_IVAR_NAME (property))\n+\tstring = IDENTIFIER_POINTER (PROPERTY_IVAR_NAME (property));\n+      else\n+\tstring = IDENTIFIER_POINTER (PROPERTY_NAME (property));\n       obstack_grow (&util_obstack, string, strlen (string));\n     }\n-    \n-  obstack_1grow (&util_obstack, 0);    /* null terminate string */\n+\n+  /* NULL-terminate string.  */\n+  obstack_1grow (&util_obstack, 0);\n   string = XOBFINISH (&util_obstack, char *);\n   obstack_free (&util_obstack, util_firstobj);\n   return get_identifier (string);"}]}