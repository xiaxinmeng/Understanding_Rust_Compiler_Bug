{"sha": "4f74d15b9dc2d95340d17f97038d0f07d4a4427e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY3NGQxNWI5ZGMyZDk1MzQwZDE3Zjk3MDM4ZDBmMDdkNGE0NDI3ZQ==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-11-05T22:41:13Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-11-05T22:41:13Z"}, "message": "(override_options): Set defaults for -march and -mcpu.\n\nFrom-SVN: r13099", "tree": {"sha": "7269c00005cd38764419767381a88cc9a8eb7c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7269c00005cd38764419767381a88cc9a8eb7c71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f74d15b9dc2d95340d17f97038d0f07d4a4427e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f74d15b9dc2d95340d17f97038d0f07d4a4427e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f74d15b9dc2d95340d17f97038d0f07d4a4427e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f74d15b9dc2d95340d17f97038d0f07d4a4427e/comments", "author": null, "committer": null, "parents": [{"sha": "5157150146c3776b5b43dc03fa9f121f111955b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5157150146c3776b5b43dc03fa9f121f111955b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5157150146c3776b5b43dc03fa9f121f111955b7"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "975915fe41856b43fcf51f3ee6bf8f281cef0910", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f74d15b9dc2d95340d17f97038d0f07d4a4427e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f74d15b9dc2d95340d17f97038d0f07d4a4427e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4f74d15b9dc2d95340d17f97038d0f07d4a4427e", "patch": "@@ -217,11 +217,8 @@ override_options ()\n     }\n \n   /* Get the architectural level.  */\n-  if (ix86_cpu_string == (char *)0 && ix86_arch_string == (char *)0)\n-    {\n+  if (ix86_arch_string == (char *)0)\n       ix86_arch_string = PROCESSOR_PENTIUM_STRING;\n-      ix86_cpu_string = PROCESSOR_DEFAULT_STRING;\n-    }\n \n   for (i = 0; i < ptt_size; i++)\n     if (! strcmp (ix86_arch_string, processor_target_table[i].name))\n@@ -235,10 +232,13 @@ override_options ()\n   if (i == ptt_size)\n     {\n       error (\"bad value (%s) for -march= switch\", ix86_arch_string);\n-      ix86_arch_string = PROCESSOR_DEFAULT_STRING;\n+      ix86_arch_string = PROCESSOR_PENTIUM_STRING;\n       ix86_arch = PROCESSOR_DEFAULT;\n     }\n \n+  if (ix86_cpu_string == (char *)0)\n+      ix86_cpu_string = PROCESSOR_DEFAULT_STRING;\n+\n   for (j = 0; j < ptt_size; j++)\n     if (! strcmp (ix86_cpu_string, processor_target_table[j].name))\n       {\n@@ -310,7 +310,7 @@ override_options ()\n \t       i386_branch_cost);\n     }\n   else\n-    i386_branch_cost = TARGET_PENTIUMPRO ? 4 : 1;\n+    i386_branch_cost = 1;\n \n   if (TARGET_OMIT_LEAF_FRAME_POINTER)\t/* keep nonleaf frame pointers */\n     flag_omit_frame_pointer = 1;\n@@ -1725,7 +1725,7 @@ asm_output_function_prefix (file, name)\n \n       if (pic_label_rtx == 0)\n \t{\n-      pic_label_rtx = (rtx) gen_label_rtx ();\n+\t  pic_label_rtx = (rtx) gen_label_rtx ();\n \t  sprintf (pic_label_name, \"LPR%d\", pic_label_no++);\n \t  LABEL_NAME (pic_label_rtx) = pic_label_name;\n \t}\n@@ -3604,9 +3604,14 @@ output_float_compare (insn, operands)\n   int stack_top_dies;\n   rtx body = XVECEXP (PATTERN (insn), 0, 0);\n   int unordered_compare = GET_MODE (SET_SRC (body)) == CCFPEQmode;\n-  int target_fcomi = TARGET_CMOVE && STACK_REG_P (operands[1]);\n-\n   rtx tmp;\n+\n+  if (TARGET_CMOVE && STACK_REG_P (operands[1]))\n+    {\n+      cc_status.flags |= CC_FCOMI;\n+      cc_prev_status.flags &= ~CC_TEST_AX;\n+    }\n+\n   if (! STACK_TOP_P (operands[0]))\n     {\n       tmp = operands[0];\n@@ -3642,9 +3647,9 @@ output_float_compare (insn, operands)\n \t unordered float compare. */\n \n       if (unordered_compare)\n-\tstrcpy (buf, target_fcomi ? \"fucomi\" : \"fucom\");\n+\tstrcpy (buf, (cc_status.flags & CC_FCOMI) ? \"fucomi\" : \"fucom\");\n       else if (GET_MODE_CLASS (GET_MODE (operands[1])) == MODE_FLOAT)\n-\tstrcpy (buf, target_fcomi ? \"fcomi\" : \"fcom\");\n+\tstrcpy (buf, (cc_status.flags & CC_FCOMI) ? \"fcomi\" : \"fcom\");\n       else\n \tstrcpy (buf, \"ficom\");\n \n@@ -3655,7 +3660,7 @@ output_float_compare (insn, operands)\n \n       if (NON_STACK_REG_P (operands[1]))\n \toutput_op_from_reg (operands[1], strcat (buf, AS1 (%z0,%1)));\n-      else if (target_fcomi) \n+      else if (cc_status.flags & CC_FCOMI) \n \t{\n \t  rtx xops[3];\n \t  \n@@ -3740,6 +3745,13 @@ output_fp_cc0_set (insn)\n \tcode = GET_CODE (XEXP (SET_SRC (PATTERN (next)), 0));\n       else code = GET_CODE (SET_SRC (PATTERN (next)));\n     }\n+  else if (GET_CODE (PATTERN (next)) == PARALLEL\n+\t   && GET_CODE (XVECEXP (PATTERN (next), 0, 0)) == SET)\n+    {\n+      if (GET_CODE (SET_SRC (XVECEXP (PATTERN (next), 0, 0))) == IF_THEN_ELSE)\n+\t  code = GET_CODE (XEXP (SET_SRC (XVECEXP (PATTERN (next), 0, 0)), 0));\n+      else code = GET_CODE (SET_SRC (XVECEXP (PATTERN (next), 0, 0)));\n+    }\n   else\n     abort ();\n "}]}