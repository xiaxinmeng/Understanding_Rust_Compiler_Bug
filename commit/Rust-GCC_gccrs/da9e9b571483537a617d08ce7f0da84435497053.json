{"sha": "da9e9b571483537a617d08ce7f0da84435497053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5ZTliNTcxNDgzNTM3YTYxN2QwOGNlN2YwZGE4NDQzNTQ5NzA1Mw==", "commit": {"author": {"name": "Matthew Beliveau", "email": "mbelivea@redhat.com", "date": "2019-06-21T17:50:29Z"}, "committer": {"name": "Matthew Beliveau", "email": "mbelivea@gcc.gnu.org", "date": "2019-06-21T17:50:29Z"}, "message": "PR c++/90875 - added -Wswitch-outside-range option\n\n\t* doc/invoke.texi (Wswitch-outside-range): Document.\n\n\t* c.opt (Wswitch-outside-range): Added new option.\n\t* c-warn.c (c_do_switch_warnings): Use OPT_Wswitch-outside-range.\n\n\t* c-c++-common/Wswitch-outside-range-1.c: New test.\n\t* c-c++-common/Wswitch-outside-range-2.c: New test.\n\t* c-c++-common/Wswitch-outside-range-3.c: New test.\n\t* c-c++-common/Wswitch-outside-range-4.c: New test.\n\nFrom-SVN: r272559", "tree": {"sha": "55976f753683551efc49e3f8a7d93717cf059d6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55976f753683551efc49e3f8a7d93717cf059d6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da9e9b571483537a617d08ce7f0da84435497053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9e9b571483537a617d08ce7f0da84435497053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9e9b571483537a617d08ce7f0da84435497053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9e9b571483537a617d08ce7f0da84435497053/comments", "author": null, "committer": null, "parents": [{"sha": "69352933301e0f67078fff8404b1eeb5c14d6b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69352933301e0f67078fff8404b1eeb5c14d6b60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69352933301e0f67078fff8404b1eeb5c14d6b60"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "14fb81a6de3e0b994bdf138dfd2fcc359b35a575", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9e9b571483537a617d08ce7f0da84435497053/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9e9b571483537a617d08ce7f0da84435497053/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da9e9b571483537a617d08ce7f0da84435497053", "patch": "@@ -1,3 +1,8 @@\n+2019-06-21  Matthew Beliveau  <mbelivea@redhat.com>\n+\n+\tPR c++/90875 - added -Wswitch-outside-range option\n+\t* doc/invoke.texi (Wswitch-outside-range): Document.\n+\n 2019-06-21  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/90949"}, {"sha": "fec706ae94ce2507eaa4b61d23c3c528808e04c7", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=da9e9b571483537a617d08ce7f0da84435497053", "patch": "@@ -1,3 +1,9 @@\n+2019-06-21  Matthew Beliveau  <mbelivea@redhat.com>\n+\n+\tPR c++/90875 - added -Wswitch-outside-range option\n+\t* c.opt (Wswitch-outside-range): Added new option.\n+\t* c-warn.c (c_do_switch_warnings): Use OPT_Wswitch-outside-range.\n+\n 2019-06-21  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90953 - ICE with -Wmissing-format-attribute."}, {"sha": "b5d09e761d73e9b24fe33fa54dccbd0b128e8a6c", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=da9e9b571483537a617d08ce7f0da84435497053", "patch": "@@ -1460,8 +1460,9 @@ c_do_switch_warnings (splay_tree cases, location_t switch_location,\n \t\t\t\t       min_value) >= 0)\n \t    {\n \t      location_t loc = EXPR_LOCATION ((tree) node->value);\n-\t      warning_at (loc, 0, \"lower value in case label range\"\n-\t\t\t\t  \" less than minimum value for type\");\n+\t      warning_at (loc, OPT_Wswitch_outside_range,\n+\t\t\t  \"lower value in case label range less than minimum\"\n+\t\t\t  \" value for type\");\n \t      CASE_LOW ((tree) node->value) = convert (TREE_TYPE (cond),\n \t\t\t\t\t\t       min_value);\n \t      node->key = (splay_tree_key) CASE_LOW ((tree) node->value);\n@@ -1474,8 +1475,8 @@ c_do_switch_warnings (splay_tree cases, location_t switch_location,\n \t      if (node == NULL || !node->key)\n \t\tbreak;\n \t      location_t loc = EXPR_LOCATION ((tree) node->value);\n-\t      warning_at (loc, 0, \"case label value is less than minimum \"\n-\t\t\t\t  \"value for type\");\n+\t      warning_at (loc, OPT_Wswitch_outside_range, \"case label value is\"\n+\t\t\t  \" less than minimum value for type\");\n \t      splay_tree_remove (cases, node->key);\n \t    }\n \t  while (1);\n@@ -1491,8 +1492,8 @@ c_do_switch_warnings (splay_tree cases, location_t switch_location,\n \t\t\t\t   max_value) > 0)\n \t{\n \t  location_t loc = EXPR_LOCATION ((tree) node->value);\n-\t  warning_at (loc, 0, \"upper value in case label range\"\n-\t\t\t      \" exceeds maximum value for type\");\n+\t  warning_at (loc, OPT_Wswitch_outside_range, \"upper value in case\"\n+\t\t      \" label range exceeds maximum value for type\");\n \t  CASE_HIGH ((tree) node->value)\n \t    = convert (TREE_TYPE (cond), max_value);\n \t  outside_range_p = true;\n@@ -1503,7 +1504,7 @@ c_do_switch_warnings (splay_tree cases, location_t switch_location,\n \t     != NULL)\n \t{\n \t  location_t loc = EXPR_LOCATION ((tree) node->value);\n-\t  warning_at (loc, 0,\n+\t  warning_at (loc, OPT_Wswitch_outside_range,\n \t\t      \"case label value exceeds maximum value for type\");\n \t  splay_tree_remove (cases, node->key);\n \t  outside_range_p = true;"}, {"sha": "a4cf3bd623d6b80bcf7957e290423c6c389eb61c", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=da9e9b571483537a617d08ce7f0da84435497053", "patch": "@@ -819,6 +819,10 @@ Wswitch-bool\n C ObjC C++ ObjC++ Var(warn_switch_bool) Warning Init(1)\n Warn about switches with boolean controlling expression.\n \n+Wswitch-outside-range\n+C ObjC C++ ObjC++ Var(warn_switch_outside_range) Warning Init(1)\n+Warn about switch values that are outside of the switch's type range.\n+\n Wtemplates\n C++ ObjC++ Var(warn_templates) Warning\n Warn on primary template declaration."}, {"sha": "4f93c7e0de73d1978a33053dfc42237671da834e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=da9e9b571483537a617d08ce7f0da84435497053", "patch": "@@ -5390,6 +5390,13 @@ switch ((int) (a == 4))\n @end smallexample\n This warning is enabled by default for C and C++ programs.\n \n+@item -Wswitch-outside-range\n+@opindex Wswitch-outside-range\n+@opindex Wno-switch-outside-range\n+Warn whenever a @code{switch} case has a value that is outside of its\n+respective type range.  This warning is enabled by default for\n+C and C++ programs.\n+\n @item -Wswitch-unreachable\n @opindex Wswitch-unreachable\n @opindex Wno-switch-unreachable"}, {"sha": "2c80ac4bdd6b8d9855dc6adb018a125cc9f00fc8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9e9b571483537a617d08ce7f0da84435497053/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da9e9b571483537a617d08ce7f0da84435497053", "patch": "@@ -1,3 +1,11 @@\n+2019-06-21  Matthew Beliveau  <mbelivea@redhat.com>\n+\n+\tPR c++/90875 - added -Wswitch-outside-range option\n+\t* c-c++-common/Wswitch-outside-range-1.c: New test.\n+\t* c-c++-common/Wswitch-outside-range-2.c: New test.\n+\t* c-c++-common/Wswitch-outside-range-3.c: New test.\n+\t* c-c++-common/Wswitch-outside-range-4.c: New test.\n+\n 2019-06-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/51991"}]}