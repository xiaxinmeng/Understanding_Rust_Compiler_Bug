{"sha": "647af4a91c4035fe99c8db7ab9d726c091e7e153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ3YWY0YTkxYzQwMzVmZTk5YzhkYjdhYjlkNzI2YzA5MWU3ZTE1Mw==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2003-11-09T17:05:10Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-11-09T17:05:10Z"}, "message": "closure_fn0.c: Print result and check with dg-output to make debugging easier.\n\n2003-11-09  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/closure_fn0.c: Print result and check\n\twith dg-output to make debugging easier.\n\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_double.c: Likewise.\n\t* testsuite/libffi.call/cls_float.c: Likewise.\n\t* testsuite/libffi.call/cls_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_sint.c: Likewise.\n\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/problem1.c: Likewise.\n\n\t* testsuite/libffi.special/unwindtest.cc: Make ffi_closure\n\tstatic.\n\nFrom-SVN: r73393", "tree": {"sha": "0c4b92bc5f48dd4adf2289af9cadb8f314a91fa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c4b92bc5f48dd4adf2289af9cadb8f314a91fa1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/647af4a91c4035fe99c8db7ab9d726c091e7e153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647af4a91c4035fe99c8db7ab9d726c091e7e153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647af4a91c4035fe99c8db7ab9d726c091e7e153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647af4a91c4035fe99c8db7ab9d726c091e7e153/comments", "author": null, "committer": null, "parents": [{"sha": "ce4191eed16e15397cc09bba95d8ef603ba05359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4191eed16e15397cc09bba95d8ef603ba05359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4191eed16e15397cc09bba95d8ef603ba05359"}], "stats": {"total": 414, "additions": 221, "deletions": 193}, "files": [{"sha": "11406c34116229c05d74b329ca1f3f749979b7fe", "filename": "libffi/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -1,3 +1,47 @@\n+2003-11-09  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/libffi.call/closure_fn0.c: Print result and check\n+\twith dg-output to make debugging easier.\n+\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n+\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n+\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n+\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n+\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n+\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n+\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n+\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n+\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n+\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n+\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n+\t* testsuite/libffi.call/cls_double.c: Likewise.\n+\t* testsuite/libffi.call/cls_float.c: Likewise.\n+\t* testsuite/libffi.call/cls_schar.c: Likewise.\n+\t* testsuite/libffi.call/cls_sint.c: Likewise.\n+\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n+\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n+\t* testsuite/libffi.call/cls_uint.c: Likewise.\n+\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n+\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n+\t* testsuite/libffi.call/problem1.c: Likewise.\n+\n+\t* testsuite/libffi.special/unwindtest.cc: Make ffi_closure\n+\tstatic.\n+\n 2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* testsuite/libffi.call/cls_9byte2.c: New test case."}, {"sha": "f418f01b38cec6f4dc0727257354c380a96e2cff", "filename": "libffi/testsuite/libffi.call/closure_fn0.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn0.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -48,6 +48,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[17];\n+  int res;\n \n   cl_arg_types[0] = &ffi_type_uint64;\n   cl_arg_types[1] = &ffi_type_uint;\n@@ -74,9 +75,11 @@ int main (void)\n   CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn0,\n \t\t\t (void *) 3 /* userdata */) == FFI_OK);\n \n-  (*((closure_test_type0)pcl))\n-\t(1LL, 2, 3LL, 4, 127, 429LL, 7, 8, 9.5, 10, 11, 12, 13,\n-\t 19, 21, 1);\n+  res = (*((closure_test_type0)pcl))\n+    (1LL, 2, 3LL, 4, 127, 429LL, 7, 8, 9.5, 10, 11, 12, 13,\n+     19, 21, 1);\n   /* { dg-output \"1 2 3 4 127 429 7 8 9 10 11 12 13 19 21 1 3: 680\" } */\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 680\" } */\n      exit(0);\n }"}, {"sha": "f98a01796cddd8ca89712cc423451886025d15f7", "filename": "libffi/testsuite/libffi.call/closure_fn1.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn1.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -43,6 +43,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[17];\n+  int res;\n \n   cl_arg_types[0] = &ffi_type_float;\n   cl_arg_types[1] = &ffi_type_float;\n@@ -69,9 +70,11 @@ int main (void)\n   CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn1,\n \t\t\t (void *) 3 /* userdata */)  == FFI_OK);\n \n-  (*((closure_test_type1)pcl))\n-\t(1.1, 2.2, 3.3, 4.4, 127, 5.5, 6.6, 8, 9, 10, 11, 12.0, 13,\n-\t 19, 21, 1);\n+  res = (*((closure_test_type1)pcl))\n+    (1.1, 2.2, 3.3, 4.4, 127, 5.5, 6.6, 8, 9, 10, 11, 12.0, 13,\n+     19, 21, 1);\n   /* { dg-output \"1 2 3 4 127 5 6 8 9 10 11 12 13 19 21 1 3: 255\" } */\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 255\" } */\n   exit(0);\n }"}, {"sha": "5b06ec8406de8183fe7c47740eca4d6d9b8c377e", "filename": "libffi/testsuite/libffi.call/closure_fn2.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn2.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -44,6 +44,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[17];\n+  int res;\n \n   cl_arg_types[0] = &ffi_type_double;\n   cl_arg_types[1] = &ffi_type_double;\n@@ -70,9 +71,11 @@ int main (void)\n   CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn2,\n \t\t\t (void *) 3 /* userdata */) == FFI_OK);\n \n-  (*((closure_test_type2)pcl))\n-\t(1, 2, 3, 4, 127, 5, 6, 8, 9, 10, 11, 12.0, 13,\n-\t 19.0, 21, 1);\n+  res = (*((closure_test_type2)pcl))\n+    (1, 2, 3, 4, 127, 5, 6, 8, 9, 10, 11, 12.0, 13,\n+     19.0, 21, 1);\n   /* { dg-output \"1 2 3 4 127 5 6 8 9 10 11 12 13 19 21 1 3: 255\" } */\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 255\" } */\n   exit(0);\n }"}, {"sha": "6af54c76ac0ffe8aec08930345b5f914de2d739f", "filename": "libffi/testsuite/libffi.call/closure_fn3.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn3.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -45,6 +45,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[17];\n+  int res;\n \n \n   cl_arg_types[0] = &ffi_type_float;\n@@ -72,9 +73,11 @@ int main (void)\n   CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn3,\n \t\t\t (void *) 3 /* userdata */)  == FFI_OK);\n \n-  (*((closure_test_type3)pcl))\n-\t(1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9, 10, 11.11, 12.0, 13,\n-\t 19.19, 21.21, 1);\n+  res = (*((closure_test_type3)pcl))\n+    (1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9, 10, 11.11, 12.0, 13,\n+     19.19, 21.21, 1);\n   /* { dg-output \"1 2 3 4 5 6 7 8 9 10 11 12 13 19 21 1 3: 135\" } */\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 135\" } */\n   exit(0);\n }"}, {"sha": "87ca0db9185e049178945e07ca5c4de36640d29c", "filename": "libffi/testsuite/libffi.call/closure_fn4.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn4.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -25,7 +25,7 @@ closure_test_fn0(ffi_cif* cif,void* resp,void** args, void* userdata)\n     (int)*(unsigned long long *)args[13] +\n     (int)*(unsigned long long *)args[14] +\n     *(int *)args[15] + (int)(long)userdata;\n-  \n+\n   printf(\"%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d: %d\\n\",\n \t (int)*(unsigned long long *)args[0],\n \t (int)*(unsigned long long *)args[1],\n@@ -44,7 +44,7 @@ closure_test_fn0(ffi_cif* cif,void* resp,void** args, void* userdata)\n \t (int)*(unsigned long long *)args[14],\n \t *(int *)args[15],\n \t (int)(long)userdata, (int)*(ffi_arg *)resp);\n-  \n+\n }\n \n typedef int (*closure_test_type0)(unsigned long long, unsigned long long,\n@@ -63,25 +63,26 @@ int main (void)\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[17];\n   int i, res;\n-  \n+\n   for (i = 0; i < 15; i++) {\n     cl_arg_types[i] = &ffi_type_uint64;\n   }\n   cl_arg_types[15] = &ffi_type_uint;\n   cl_arg_types[16] = NULL;\n-  \n+\n   /* Initialize the cif */\n   CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 16,\n \t\t     &ffi_type_sint, cl_arg_types) == FFI_OK);\n-  \n+\n   CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn0,\n \t\t\t (void *) 3 /* userdata */) == FFI_OK);\n-  \n+\n   res = (*((closure_test_type0)pcl))\n     (1LL, 2LL, 3LL, 4LL, 127LL, 429LL, 7LL, 8LL, 9LL, 10LL, 11LL, 12LL,\n      13LL, 19LL, 21LL, 1);\n   /* { dg-output \"1 2 3 4 127 429 7 8 9 10 11 12 13 19 21 1 3: 680\" } */\n-  CHECK(res == 680);\n-  \n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 680\" } */\n+\n   exit(0);\n }"}, {"sha": "f7918c16868d34e63cc7ad870f4597740a20fa41", "filename": "libffi/testsuite/libffi.call/closure_fn5.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn5.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -25,7 +25,7 @@ closure_test_fn5(ffi_cif* cif,void* resp,void** args, void* userdata)\n     (int)*(unsigned long long *)args[13] +\n     (int)*(unsigned long long *)args[14] +\n     *(int *)args[15] + (int)(long)userdata;\n-  \n+\n   printf(\"%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d: %d\\n\",\n \t (int)*(unsigned long long *)args[0],\n \t (int)*(unsigned long long *)args[1],\n@@ -44,7 +44,7 @@ closure_test_fn5(ffi_cif* cif,void* resp,void** args, void* userdata)\n \t (int)*(unsigned long long *)args[14],\n \t *(int *)args[15],\n \t (int)(long)userdata, (int)*(ffi_arg *)resp);\n-  \n+\n }\n \n typedef int (*closure_test_type0)(unsigned long long, unsigned long long,\n@@ -73,18 +73,20 @@ int main (void)\n   }\n   cl_arg_types[15] = &ffi_type_uint;\n   cl_arg_types[16] = NULL;\n-  \n+\n   /* Initialize the cif */\n   CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 16,\n \t\t     &ffi_type_sint, cl_arg_types) == FFI_OK);\n-  \n+\n   CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn5,\n \t\t\t (void *) 3 /* userdata */) == FFI_OK);\n-  \n+\n   res = (*((closure_test_type0)pcl))\n     (1LL, 2LL, 3LL, 4LL, 127LL, 429LL, 7LL, 8LL, 9LL, 10LL, 11, 12LL,\n      13LL, 19LL, 21LL, 1);\n   /* { dg-output \"1 2 3 4 127 429 7 8 9 10 11 12 13 19 21 1 3: 680\" } */\n-  CHECK(res == 680);\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 680\" } */\n+\n   exit(0);\n }"}, {"sha": "a917a709d61a8ef81f3e44415b40e10b1adb5c41", "filename": "libffi/testsuite/libffi.call/cls_12byte.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_12byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_12byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_12byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -75,17 +75,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_12byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"7 4 9 1 5 3: 8 9 12\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n-  CHECK( res_dbl.c == (h_dbl.c + j_dbl.c));\n+  printf(\"res: %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 8 9 12\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_12byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_12byte(*)(cls_struct_12byte, cls_struct_12byte))(pcl))(h_dbl, j_dbl);\n   /* { dg-output \"\\n7 4 9 1 5 3: 8 9 12\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n-  CHECK( res_dbl.c == (h_dbl.c + j_dbl.c));\n+  printf(\"res: %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 8 9 12\" } */\n \n   exit(0);\n }"}, {"sha": "ae0e7c754ee39bdd840b34002fce9759fc840eb0", "filename": "libffi/testsuite/libffi.call/cls_16byte.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_16byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_16byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_16byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -76,17 +76,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_16byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"7 8 9 1 9 3: 8 17 12\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n-  CHECK( res_dbl.c == (h_dbl.c + j_dbl.c));\n+  printf(\"res: %d %g %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 8 17 12\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_16byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_16byte(*)(cls_struct_16byte, cls_struct_16byte))(pcl))(h_dbl, j_dbl);\n   /* { dg-output \"\\n7 8 9 1 9 3: 8 17 12\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n-  CHECK( res_dbl.c == (h_dbl.c + j_dbl.c));\n+  printf(\"res: %d %g %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 8 17 12\" } */\n \n   exit(0);\n }"}, {"sha": "0b1d07f25db376ba83a46fe72576eaff647563c3", "filename": "libffi/testsuite/libffi.call/cls_18byte.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_18byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_18byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_18byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -81,19 +81,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_18byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"1 127 126 3 4 125 124 5: 5 252 250 8\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %g %d %d %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 5 252 250 8\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_18byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_18byte(*)(cls_struct_18byte, cls_struct_18byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n1 127 126 3 4 125 124 5: 5 252 250 8\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %g %d %d %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 5 252 250 8\" } */\n \n   exit(0);\n }"}, {"sha": "2bb0b6780eeaffdd246bfc1d6be56ae0d3c40fd2", "filename": "libffi/testsuite/libffi.call/cls_19byte.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_19byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_19byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_19byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -85,21 +85,17 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_19byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"1 127 126 3 120 4 125 124 5 119: 5 252 250 8 239\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n-  CHECK( res_dbl.e == (g_dbl.e + f_dbl.e));\n+  printf(\"res: %g %d %d %g %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, \n+\t res_dbl.d, res_dbl.e);\n+  /* { dg-output \"\\nres: 5 252 250 8 239\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_19byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_19byte(*)(cls_struct_19byte, cls_struct_19byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n1 127 126 3 120 4 125 124 5 119: 5 252 250 8 239\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n-  CHECK( res_dbl.e == (g_dbl.e + f_dbl.e));\n+  printf(\"res: %g %d %d %g %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n+\t res_dbl.d, res_dbl.e);\n+  /* { dg-output \"\\nres: 5 252 250 8 239\" } */\n \n   exit(0);\n }"}, {"sha": "f7682fef550a284e0c03c7c758ee5e403155b67e", "filename": "libffi/testsuite/libffi.call/cls_1_1byte.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_1_1byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_1_1byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_1_1byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -72,13 +72,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_1_1byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 178: 190\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n+  printf(\"res: %d\\n\", res_dbl.a);\n+  /* { dg-output \"\\nres: 190\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_1_1byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_1_1byte(*)(cls_struct_1_1byte, cls_struct_1_1byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 178: 190\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n+  printf(\"res: %d\\n\", res_dbl.a);\n+  /* { dg-output \"\\nres: 190\" } */\n \n   exit(0);\n }"}, {"sha": "f3cc0ebbd13a72e22ac5bd4a2f8eec5c1d2cbb93", "filename": "libffi/testsuite/libffi.call/cls_20byte.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -76,17 +76,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_20byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"1 2 3 4 5 7: 5 7 10\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n+  printf(\"res: %g %g %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 5 7 10\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_20byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_20byte(*)(cls_struct_20byte, cls_struct_20byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n1 2 3 4 5 7: 5 7 10\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n+  printf(\"res: %g %g %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 5 7 10\" } */\n \n   exit(0);\n }"}, {"sha": "089f02e327efdbfcf8bd49f09bcd8325c46df459", "filename": "libffi/testsuite/libffi.call/cls_20byte1.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte1.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -76,17 +76,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_20byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"1 2 3 4 5 7: 5 7 10\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n+  printf(\"res: %d %g %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 5 7 10\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_20byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_20byte(*)(cls_struct_20byte, cls_struct_20byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n1 2 3 4 5 7: 5 7 10\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n+  printf(\"res: %d %g %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 5 7 10\" } */\n \n   exit(0);\n }"}, {"sha": "f3adb9da3524b04df8fa446d2c8ae012d3b3b55a", "filename": "libffi/testsuite/libffi.call/cls_24byte.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_24byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_24byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_24byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -94,22 +94,19 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_24byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"9 2 6 5 1 2 3 7 4 5 7 9 8 6 1 9: 22 15 17 25\" } */\n-  CHECK( res_dbl.a == (e_dbl.a + f_dbl.a + g_dbl.a + h_dbl.a));\n-  CHECK( res_dbl.b == (e_dbl.b + f_dbl.b + g_dbl.b + h_dbl.b));\n-  CHECK( res_dbl.c == (e_dbl.c + f_dbl.c + g_dbl.c + h_dbl.c));\n-  CHECK( res_dbl.d == (e_dbl.d + f_dbl.d + g_dbl.d + h_dbl.d));\n+  printf(\"res: %g %g %d %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 22 15 17 25\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_24byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_24byte(*)(cls_struct_24byte,\n-\t\t\t\t     cls_struct_24byte,\n-\t\t\t\t     cls_struct_24byte,\n-\t\t\t\t     cls_struct_24byte))\n+\t\t\t\t   cls_struct_24byte,\n+\t\t\t\t   cls_struct_24byte,\n+\t\t\t\t   cls_struct_24byte))\n \t     (pcl))(e_dbl, f_dbl, g_dbl, h_dbl);\n   /* { dg-output \"\\n9 2 6 5 1 2 3 7 4 5 7 9 8 6 1 9: 22 15 17 25\" } */\n-  CHECK( res_dbl.a == (e_dbl.a + f_dbl.a + g_dbl.a + h_dbl.a));\n-  CHECK( res_dbl.b == (e_dbl.b + f_dbl.b + g_dbl.b + h_dbl.b));\n-  CHECK( res_dbl.c == (e_dbl.c + f_dbl.c + g_dbl.c + h_dbl.c));\n-  CHECK( res_dbl.d == (e_dbl.d + f_dbl.d + g_dbl.d + h_dbl.d));\n+  printf(\"res: %g %g %d %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 22 15 17 25\" } */\n+\n   exit(0);\n }"}, {"sha": "672437d05c9d15ad9e958310c67f0545a8ead150", "filename": "libffi/testsuite/libffi.call/cls_2byte.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_2byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_2byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_2byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -75,15 +75,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_2byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 127 1 13: 13 140\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 13 140\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_2byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_2byte(*)(cls_struct_2byte, cls_struct_2byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 127 1 13: 13 140\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 13 140\" } */\n \n   exit(0);\n }"}, {"sha": "26f6501d365feb8fcd66bf1aa80ecfdeaa687180", "filename": "libffi/testsuite/libffi.call/cls_3_1byte.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3_1byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3_1byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3_1byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -80,19 +80,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_3_1byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 13 14 178 179 180: 190 192 194\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-\n+  printf(\"res: %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 190 192 194\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_3_1byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_3_1byte(*)(cls_struct_3_1byte, cls_struct_3_1byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 13 14 178 179 180: 190 192 194\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-\n+  printf(\"res: %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 190 192 194\" } */\n \n   exit(0);\n }"}, {"sha": "9f51f55f6fccb161bccaf3baa4923ab822335235", "filename": "libffi/testsuite/libffi.call/cls_3byte1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte1.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -75,15 +75,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_3byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 119 1 15: 13 134\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 13 134\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_3byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_3byte(*)(cls_struct_3byte, cls_struct_3byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 119 1 15: 13 134\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 13 134\" } */\n \n   exit(0);\n }"}, {"sha": "815debf591746daf50dd4c8c4a66864f0d0b6e41", "filename": "libffi/testsuite/libffi.call/cls_3byte2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte2.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -75,15 +75,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_3byte_fn1), &res_dbl, args_dbl);\n   /* { dg-output \"15 125 9 19: 24 144\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 24 144\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_3byte_gn1, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_3byte_1(*)(cls_struct_3byte_1, cls_struct_3byte_1))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n15 125 9 19: 24 144\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 24 144\" } */\n \n   exit(0);\n }"}, {"sha": "000506eabed1aa6d001f665daae7303518e85c65", "filename": "libffi/testsuite/libffi.call/cls_4_1byte.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4_1byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4_1byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4_1byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -83,19 +83,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_4_1byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 13 14 15 178 179 180 181: 190 192 194 196\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %d %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 190 192 194 196\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_4_1byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_4_1byte(*)(cls_struct_4_1byte, cls_struct_4_1byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 13 14 15 178 179 180 181: 190 192 194 196\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %d %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 190 192 194 196\" } */\n \n   exit(0);\n }"}, {"sha": "fdf9b9bf600c9b836d2fd51a26b13026c58c6aa1", "filename": "libffi/testsuite/libffi.call/cls_4byte.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -75,15 +75,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_4byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"127 120 12 128: 139 248\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 139 248\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_4byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_4byte(*)(cls_struct_4byte, cls_struct_4byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n127 120 12 128: 139 248\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 139 248\" } */\n \n   exit(0);\n }"}, {"sha": "877ea4cbff23fd269ade1db0a0455cb4f765764f", "filename": "libffi/testsuite/libffi.call/cls_5byte.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -79,17 +79,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_5byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"127 120 1 12 128 9: 139 248 10\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n+  printf(\"res: %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 139 248 10\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_5byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_5byte(*)(cls_struct_5byte, cls_struct_5byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n127 120 1 12 128 9: 139 248 10\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n+  printf(\"res: %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c);\n+  /* { dg-output \"\\nres: 139 248 10\" } */\n \n   exit(0);\n }"}, {"sha": "28d5590735fff83738acc2f5476a74f31c045649", "filename": "libffi/testsuite/libffi.call/cls_64byte.c", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_64byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_64byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_64byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -103,31 +103,21 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_64byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"22 15 17 25 6 13 19 18\" } */\n-  CHECK( res_dbl.a == (e_dbl.a + f_dbl.a + g_dbl.a + h_dbl.a));\n-  CHECK( res_dbl.b == (e_dbl.b + f_dbl.b + g_dbl.b + h_dbl.b));\n-  CHECK( res_dbl.c == (e_dbl.c + f_dbl.c + g_dbl.c + h_dbl.c));\n-  CHECK( res_dbl.d == (e_dbl.d + f_dbl.d + g_dbl.d + h_dbl.d));\n-  CHECK( res_dbl.e == (e_dbl.e + f_dbl.e + g_dbl.e + h_dbl.e));\n-  CHECK( res_dbl.f == (e_dbl.f + f_dbl.f + g_dbl.f + h_dbl.f));\n-  CHECK( res_dbl.g == (e_dbl.g + f_dbl.g + g_dbl.g + h_dbl.g));\n-  CHECK( res_dbl.h == (e_dbl.h + f_dbl.h + g_dbl.h + h_dbl.h));\n+  printf(\"res: %g %g %g %g %g %g %g %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n+\t res_dbl.d, res_dbl.e, res_dbl.f, res_dbl.g, res_dbl.h);\n+  /* { dg-output \"\\nres: 22 15 17 25 6 13 19 18\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_64byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_64byte(*)(cls_struct_64byte,\n-\t\t\t\t     cls_struct_64byte,\n-\t\t\t\t     cls_struct_64byte,\n-\t\t\t\t     cls_struct_64byte))\n+\t\t\t\t   cls_struct_64byte,\n+\t\t\t\t   cls_struct_64byte,\n+\t\t\t\t   cls_struct_64byte))\n \t     (pcl))(e_dbl, f_dbl, g_dbl, h_dbl);\n   /* { dg-output \"\\n22 15 17 25 6 13 19 18\" } */\n-  CHECK( res_dbl.a == (e_dbl.a + f_dbl.a + g_dbl.a + h_dbl.a));\n-  CHECK( res_dbl.b == (e_dbl.b + f_dbl.b + g_dbl.b + h_dbl.b));\n-  CHECK( res_dbl.c == (e_dbl.c + f_dbl.c + g_dbl.c + h_dbl.c));\n-  CHECK( res_dbl.d == (e_dbl.d + f_dbl.d + g_dbl.d + h_dbl.d));\n-  CHECK( res_dbl.e == (e_dbl.e + f_dbl.e + g_dbl.e + h_dbl.e));\n-  CHECK( res_dbl.f == (e_dbl.f + f_dbl.f + g_dbl.f + h_dbl.f));\n-  CHECK( res_dbl.g == (e_dbl.g + f_dbl.g + g_dbl.g + h_dbl.g));\n-  CHECK( res_dbl.h == (e_dbl.h + f_dbl.h + g_dbl.h + h_dbl.h));\n+  printf(\"res: %g %g %g %g %g %g %g %g\\n\", res_dbl.a, res_dbl.b, res_dbl.c,\n+\t res_dbl.d, res_dbl.e, res_dbl.f, res_dbl.g, res_dbl.h);\n+  /* { dg-output \"\\nres: 22 15 17 25 6 13 19 18\" } */\n \n   exit(0);\n }"}, {"sha": "5eb17d2430f7ebd579d066717e2a1818fc50a8ba", "filename": "libffi/testsuite/libffi.call/cls_6byte.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -82,19 +82,16 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_6byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"127 120 1 128 12 128 9 127: 139 248 10 255\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %d %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 139 248 10 255\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_6byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_6byte(*)(cls_struct_6byte, cls_struct_6byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n127 120 1 128 12 128 9 127: 139 248 10 255\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %d %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 139 248 10 255\" } */\n+\n \n   exit(0);\n }"}, {"sha": "9c1765af835a082b0fe9e436d56e9bd2e0f5fdf7", "filename": "libffi/testsuite/libffi.call/cls_7byte.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -82,19 +82,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_7byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"127 120 1 254 12 128 9 255: 139 248 10 509\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %d %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 139 248 10 509\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_7byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_7byte(*)(cls_struct_7byte, cls_struct_7byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n127 120 1 254 12 128 9 255: 139 248 10 509\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-  CHECK( res_dbl.c == (g_dbl.c + f_dbl.c));\n-  CHECK( res_dbl.d == (g_dbl.d + f_dbl.d));\n+  printf(\"res: %d %d %d %d\\n\", res_dbl.a, res_dbl.b, res_dbl.c, res_dbl.d);\n+  /* { dg-output \"\\nres: 139 248 10 509\" } */\n \n   exit(0);\n }"}, {"sha": "d9050d494c80341664f17ad734391af0f5483b2d", "filename": "libffi/testsuite/libffi.call/cls_8byte.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_8byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_8byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_8byte.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -74,15 +74,14 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_8byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"1 2 4 5: 5 7\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n-\n+  printf(\"res: %d %g\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 5 7\" } */\n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_8byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_8byte(*)(cls_struct_8byte, cls_struct_8byte))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n1 2 4 5: 5 7\" } */\n-  CHECK( res_dbl.a == (g_dbl.a + f_dbl.a));\n-  CHECK( res_dbl.b == (g_dbl.b + f_dbl.b));\n+  printf(\"res: %d %g\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 5 7\" } */\n \n   exit(0);\n }"}, {"sha": "06acca48b71aa059e24ccae71112062690b59adf", "filename": "libffi/testsuite/libffi.call/cls_9byte1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte1.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -76,15 +76,15 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_9byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"7 8 1 9: 8 17\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n+  printf(\"res: %d %g\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 8 17\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_9byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_9byte(*)(cls_struct_9byte, cls_struct_9byte))(pcl))(h_dbl, j_dbl);\n   /* { dg-output \"\\n7 8 1 9: 8 17\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n+  printf(\"res: %d %g\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 8 17\" } */\n \n   exit(0);\n }"}, {"sha": "21d7b49ab5c6b5ea2987400133cf7565234daa2c", "filename": "libffi/testsuite/libffi.call/cls_9byte2.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte2.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -76,15 +76,16 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_9byte_fn), &res_dbl, args_dbl);\n   /* { dg-output \"7 8 1 9: 8 17\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n+  printf(\"res: %g %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 8 17\" } */\n+\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_9byte_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_9byte(*)(cls_struct_9byte, cls_struct_9byte))(pcl))(h_dbl, j_dbl);\n   /* { dg-output \"\\n7 8 1 9: 8 17\" } */\n-  CHECK( res_dbl.a == (h_dbl.a + j_dbl.a));\n-  CHECK( res_dbl.b == (h_dbl.b + j_dbl.b));\n+  printf(\"res: %g %d\\n\", res_dbl.a, res_dbl.b);\n+  /* { dg-output \"\\nres: 8 17\" } */\n \n   exit(0);\n }"}, {"sha": "51ec26a3a05e2d7bdfab7dd51f622fb6c2cda3dd", "filename": "libffi/testsuite/libffi.call/cls_double.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -36,6 +36,8 @@ int main (void)\n \n   res = (*((cls_ret_double)pcl))(21474.789);\n   /* { dg-output \"21474.789000: 21474.789000\" } */\n-  CHECK(res == 21474.789000);\n+  printf(\"res: %.6f\\n\", res);\n+  /* { dg-output \"\\nres: 21474.789000\" } */\n+\n   exit(0);\n }"}, {"sha": "bd1601ebc78c91fd1b94747d923cbc8e778eb6be", "filename": "libffi/testsuite/libffi.call/cls_float.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_float.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -24,6 +24,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[2];\n+  float res;\n \n \n   cl_arg_types[0] = &ffi_type_float;\n@@ -34,10 +35,9 @@ int main (void)\n \t\t     &ffi_type_float, cl_arg_types) == FFI_OK);\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_float_fn, NULL)  == FFI_OK);\n-  ((((cls_ret_float)pcl)(-2122.12)));\n-  /* { dg-output \"\\\\-2122.12: \\\\-2122.12\\n\" } */\n-  printf(\"%f \\n\",(((cls_ret_float)pcl)(-2122.12)));\n+  res = ((((cls_ret_float)pcl)(-2122.12)));\n   /* { dg-output \"\\\\-2122.12: \\\\-2122.12\" } */\n-  /* { dg-output \"\\n\\-2122.120117\" } */\n+  printf(\"res: %.6f\\n\", res);\n+  /* { dg-output \"\\nres: \\-2122.120117\" } */\n   exit(0);\n }"}, {"sha": "ecdbfb695754ea295fb96d4e63dda8f29962cb27", "filename": "libffi/testsuite/libffi.call/cls_schar.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_schar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_schar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_schar.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -35,7 +35,8 @@ int main (void)\n \n   res = (*((cls_ret_schar)pcl))(127);\n   /* { dg-output \"127: 127\" } */\n-  CHECK(res == 127);\n+  printf(\"res: %d\\n\", res);\n+  /* { dg-output \"\\nres: 127\" } */\n \n   exit(0);\n }"}, {"sha": "caae0d456912f7b9b04896e0afcfd0c101acf900", "filename": "libffi/testsuite/libffi.call/cls_sint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sint.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -35,7 +35,8 @@ int main (void)\n \n   res = (*((cls_ret_sint)pcl))(65534);\n   /* { dg-output \"65534: 65534\" } */\n-  CHECK(res == 65534);\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 65534\" } */\n \n   exit(0);\n }"}, {"sha": "3b1e4c60d482c3bef2a1ad20a926e22bdd13ea94", "filename": "libffi/testsuite/libffi.call/cls_sshort.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sshort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sshort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sshort.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -35,7 +35,8 @@ int main (void)\n \n   res = (*((cls_ret_sshort)pcl))(255);\n   /* { dg-output \"255: 255\" } */\n-  CHECK(res == 255);\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 255\" } */\n \n   exit(0);\n }"}, {"sha": "e5027b2e45c6fe61b9addf4fb98ab28e7bf4f832", "filename": "libffi/testsuite/libffi.call/cls_uchar.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -35,6 +35,8 @@ int main (void)\n \n   res = (*((cls_ret_uchar)pcl))(127);\n   /* { dg-output \"127: 127\" } */\n-  CHECK(res == 127);\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 127\" } */\n+\n   exit(0);\n }"}, {"sha": "08f29122bd4bc50c0770c6454bcd1b9e1aabebf7", "filename": "libffi/testsuite/libffi.call/cls_uint.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -36,6 +36,8 @@ int main (void)\n \n   res = (*((cls_ret_uint)pcl))(2147483647);\n   /* { dg-output \"2147483647: 2147483647\" } */\n-  CHECK(res == 2147483647);\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 2147483647\" } */\n+\n   exit(0);\n }"}, {"sha": "80dc2db7aaa72ed5693c04a60d6d33eb556c9c0c", "filename": "libffi/testsuite/libffi.call/cls_ulonglong.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -34,9 +34,13 @@ int main (void)\n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_ulonglong_fn, NULL)  == FFI_OK);\n   res = (*((cls_ret_ulonglong)pcl))(214LL);\n   /* { dg-output \"214: 214\" } */\n-  CHECK(res == 214LL);\n+  printf(\"res: %lld\\n\", res);\n+  /* { dg-output \"\\nres: 214\" } */\n+\n   res = (*((cls_ret_ulonglong)pcl))(9223372035854775808LL);\n   /* { dg-output \"\\n9223372035854775808: 9223372035854775808\" } */\n-  CHECK(res == 9223372035854775808LL);\n+  printf(\"res: %lld\\n\", res);\n+  /* { dg-output \"\\nres: 9223372035854775808\" } */\n+\n   exit(0);\n }"}, {"sha": "3599f6776a5d18fd8a2f906902384a2880044bc4", "filename": "libffi/testsuite/libffi.call/cls_ushort.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -36,6 +36,8 @@ int main (void)\n \n   res = (*((cls_ret_ushort)pcl))(65535);\n   /* { dg-output \"65535: 65535\" } */\n-  CHECK(res == 65535);\n+  printf(\"res: %d\\n\",res);\n+  /* { dg-output \"\\nres: 65535\" } */\n+\n   exit(0);\n }"}, {"sha": "f3bd3b57739a6b6037aa67a3fffcc1dfb0c5d7b0", "filename": "libffi/testsuite/libffi.call/problem1.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fproblem1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.call%2Fproblem1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fproblem1.c?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -75,19 +75,15 @@ int main(void)\n     args[2] = NULL;\n     ffi_call(&cif, FFI_FN(callee), &res, args);\n     /* { dg-output \"1 2 3 1 2 3: 2 4 6\" } */\n-\n-    CHECK(res.a == 2.0);\n-    CHECK(res.b == 4.0);\n-    CHECK(res.c == 6.0);\n+    printf(\"res: %g %g %g\\n\", res.a, res.b, res.c);\n+    /* { dg-output \"\\nres: 2 4 6\" } */\n \n     CHECK(ffi_prep_closure(pcl, &cif, stub, NULL) == FFI_OK);\n \n     res = ((my_ffi_struct(*)(struct my_ffi_struct, struct my_ffi_struct))(pcl))(g, f);\n     /* { dg-output \"\\n1 2 3 1 2 3: 2 4 6\" } */\n-\n-    CHECK(res.a == 2.0);\n-    CHECK(res.b == 4.0);\n-    CHECK(res.c == 6.0);\n+    printf(\"res: %g %g %g\\n\", res.a, res.b, res.c);\n+    /* { dg-output \"\\nres: 2 4 6\" } */\n \n     exit(0);;\n }"}, {"sha": "d393a50f6a457c87c7724aedd5a3afbcb74c5fe9", "filename": "libffi/testsuite/libffi.special/unwindtest.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647af4a91c4035fe99c8db7ab9d726c091e7e153/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest.cc?ref=647af4a91c4035fe99c8db7ab9d726c091e7e153", "patch": "@@ -49,18 +49,20 @@ typedef int (*closure_test_type1)(float, float, float, float, signed short,\n int main (void)\n {\n   ffi_cif cif;\n-  ffi_closure cl;\n+  static ffi_closure cl;\n+  ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[17];\n+  int res;\n   {\n     cl_arg_types[1] = NULL;\n \n     CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 0,\n \t\t       &ffi_type_void, cl_arg_types) == FFI_OK);\n-    CHECK(ffi_prep_closure(&cl, &cif, closure_test_fn, NULL) == FFI_OK);\n+    CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn, NULL) == FFI_OK);\n \n     try\n       {\n-\t(*((closure_test_type)(&cl)))();\n+\t(*((closure_test_type)(pcl)))();\n       } catch (int exception_code)\n       {\n \tCHECK(exception_code == 9);\n@@ -94,11 +96,11 @@ int main (void)\n       CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 16,\n \t\t\t &ffi_type_sint, cl_arg_types) == FFI_OK);\n \n-      CHECK(ffi_prep_closure(&cl, &cif, closure_test_fn1,\n+      CHECK(ffi_prep_closure(pcl, &cif, closure_test_fn1,\n \t\t\t     (void *) 3 /* userdata */)  == FFI_OK);\n       try\n \t{\n-\t  (*((closure_test_type1)(&cl)))\n+\t  (*((closure_test_type1)pcl))\n \t    (1.1, 2.2, 3.3, 4.4, 127, 5.5, 6.6, 8, 9, 10, 11, 12.0, 13,\n \t     19, 21, 1);\n \t  /* { dg-output \"\\n1 2 3 4 127 5 6 8 9 10 11 12 13 19 21 1 3: 255\" } */"}]}