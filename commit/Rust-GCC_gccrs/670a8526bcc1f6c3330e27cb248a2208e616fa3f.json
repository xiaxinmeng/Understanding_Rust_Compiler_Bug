{"sha": "670a8526bcc1f6c3330e27cb248a2208e616fa3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcwYTg1MjZiY2MxZjZjMzMzMGUyN2NiMjQ4YTIyMDhlNjE2ZmEzZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-06-19T19:58:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-06-19T19:58:26Z"}, "message": "i386.c (ix86_emit_swsqrtsf): Filter out infinity result of rsqrt insn for zero input argument to avoid NaN.\n\n        * config/i386/i386.c (ix86_emit_swsqrtsf): Filter out infinity\n        result of rsqrt insn for zero input argument to avoid NaN.\n\nFrom-SVN: r125858", "tree": {"sha": "0b6c75c86430e89308b379f25d73b8e2161fd3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b6c75c86430e89308b379f25d73b8e2161fd3cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/670a8526bcc1f6c3330e27cb248a2208e616fa3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670a8526bcc1f6c3330e27cb248a2208e616fa3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/670a8526bcc1f6c3330e27cb248a2208e616fa3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670a8526bcc1f6c3330e27cb248a2208e616fa3f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89a95777068068a29677510065120620abd202f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a95777068068a29677510065120620abd202f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89a95777068068a29677510065120620abd202f1"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "32754f56f595860f271f0311750dd1ab7459f55b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670a8526bcc1f6c3330e27cb248a2208e616fa3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670a8526bcc1f6c3330e27cb248a2208e616fa3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=670a8526bcc1f6c3330e27cb248a2208e616fa3f", "patch": "@@ -106,8 +106,8 @@\n \n 2007-06-19  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/i386/i386.c (ix86_emit_swsqrtsf): Limit the result of\n-\trsqrt insn to FLT_MAX to avoid NaN for zero input argument.\n+\t* config/i386/i386.c (ix86_emit_swsqrtsf): Filter out infinity\n+\tresult of rsqrt insn for zero input argument to avoid NaN.\n \n 2007-06-19  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "1a8fa110927c1ebb5cd579c6563e55fd02499e71", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670a8526bcc1f6c3330e27cb248a2208e616fa3f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670a8526bcc1f6c3330e27cb248a2208e616fa3f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=670a8526bcc1f6c3330e27cb248a2208e616fa3f", "patch": "@@ -22593,7 +22593,7 @@ void ix86_emit_swdivsf (rtx res, rtx a, rtx b, enum machine_mode mode)\n void ix86_emit_swsqrtsf (rtx res, rtx a, enum machine_mode mode,\n \t\t\t bool recip)\n {\n-  rtx x0, e0, e1, e2, e3, three, half, bignum;\n+  rtx x0, e0, e1, e2, e3, three, half, zero, mask;\n \n   x0 = gen_reg_rtx (mode);\n   e0 = gen_reg_rtx (mode);\n@@ -22603,29 +22603,41 @@ void ix86_emit_swsqrtsf (rtx res, rtx a, enum machine_mode mode,\n \n   three = CONST_DOUBLE_FROM_REAL_VALUE (dconst3, SFmode);\n   half = CONST_DOUBLE_FROM_REAL_VALUE (dconsthalf, SFmode);\n-  bignum = gen_lowpart (SFmode, GEN_INT (0x7f7fffff));\n+\n+  mask = gen_reg_rtx (mode);\n \n   if (VECTOR_MODE_P (mode))\n     {\n       three = ix86_build_const_vector (SFmode, true, three);\n       half = ix86_build_const_vector (SFmode, true, half);\n-      bignum = ix86_build_const_vector (SFmode, true, bignum);\n     }\n \n   three = force_reg (mode, three);\n   half = force_reg (mode, half);\n-  bignum = force_reg (mode, bignum);\n+\n+  zero = force_reg (mode, CONST0_RTX(mode));\n \n   /* sqrt(a) = 0.5 * a * rsqrtss(a) * (3.0 - a * rsqrtss(a) * rsqrtss(a))\n      1.0 / sqrt(a) = 0.5 * rsqrtss(a) * (3.0 - a * rsqrtss(a) * rsqrtss(a)) */\n \n+  /* Compare a to zero.  */\n+  emit_insn (gen_rtx_SET (VOIDmode, mask,\n+\t\t\t  gen_rtx_NE (mode, a, zero)));\n+\n   /* x0 = 1./sqrt(a) estimate */\n   emit_insn (gen_rtx_SET (VOIDmode, x0,\n \t\t\t  gen_rtx_UNSPEC (mode, gen_rtvec (1, a),\n \t\t\t\t\t  UNSPEC_RSQRT)));\n-  emit_insn (gen_rtx_SET (VOIDmode, x0,\n-\t\t\t  gen_rtx_SMIN (mode, x0, bignum)));\n- \n+  /* Filter out infinity.  */\n+  if (VECTOR_MODE_P (mode))\n+    emit_insn (gen_rtx_SET (VOIDmode, gen_lowpart (V4SFmode, x0),\n+\t\t\t    gen_rtx_AND (mode,\n+\t\t\t\t\t gen_lowpart (V4SFmode, x0),\n+\t\t\t\t\t gen_lowpart (V4SFmode, mask))));\n+  else\n+    emit_insn (gen_rtx_SET (VOIDmode, x0,\n+\t\t\t    gen_rtx_AND (mode, x0, mask)));\n+\n   /* e0 = x0 * a */\n   emit_insn (gen_rtx_SET (VOIDmode, e0,\n \t\t\t  gen_rtx_MULT (mode, x0, a)));"}]}