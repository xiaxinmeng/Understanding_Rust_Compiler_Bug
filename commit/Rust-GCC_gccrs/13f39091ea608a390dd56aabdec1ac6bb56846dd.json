{"sha": "13f39091ea608a390dd56aabdec1ac6bb56846dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNmMzkwOTFlYTYwOGEzOTBkZDU2YWFiZGVjMWFjNmJiNTY4NDZkZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T14:48:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T14:48:32Z"}, "message": "[multiple changes]\n\n2014-02-19  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb, sem_util.ads, prj-conf.adb, s-os_lib.adb: Minor\n\treformatting.\n\n2014-02-19  Vincent Celier  <celier@adacore.com>\n\n\t* prj-part.adb (Parse_Single_Project): Use the fully resolved\n\tproject path, with all symbolic links resolved, to check if the\n\tsame project is imported with a different unresolved path.\n\t* prj-tree.ads (Project_Name_And_Node): Component Canonical_Path\n\tchanged to Resolved_Path to reflect that all symbolic links\n\tare resolved.\n\nFrom-SVN: r207904", "tree": {"sha": "2939b36369ceec25e8c911a56f5d25dd754b077d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2939b36369ceec25e8c911a56f5d25dd754b077d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13f39091ea608a390dd56aabdec1ac6bb56846dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f39091ea608a390dd56aabdec1ac6bb56846dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13f39091ea608a390dd56aabdec1ac6bb56846dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f39091ea608a390dd56aabdec1ac6bb56846dd/comments", "author": null, "committer": null, "parents": [{"sha": "110e2969e057932e42f7a97332b1a840959ab685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110e2969e057932e42f7a97332b1a840959ab685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110e2969e057932e42f7a97332b1a840959ab685"}], "stats": {"total": 138, "additions": 81, "deletions": 57}, "files": [{"sha": "a97d87985d9ddbe46341208ed9430526ce7857b5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -1,3 +1,17 @@\n+2014-02-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb, sem_util.ads, prj-conf.adb, s-os_lib.adb: Minor\n+\treformatting.\n+\n+2014-02-19  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-part.adb (Parse_Single_Project): Use the fully resolved\n+\tproject path, with all symbolic links resolved, to check if the\n+\tsame project is imported with a different unresolved path.\n+\t* prj-tree.ads (Project_Name_And_Node): Component Canonical_Path\n+\tchanged to Resolved_Path to reflect that all symbolic links\n+\tare resolved.\n+\n 2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.ads, sem_util.adb (Get_Cursor_Type): Moved to sem_util"}, {"sha": "b0dfceb6b6225ad9f6d69751ac4838d6162d05de", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -577,9 +577,10 @@ package body Prj.Conf is\n \n       OK :=\n         Target = \"\"\n-          or else (Tgt_Name /= No_Name\n-                   and then (Length_Of_Name (Tgt_Name) = 0\n-                    or else Target = Get_Name_String (Tgt_Name)));\n+          or else\n+            (Tgt_Name /= No_Name\n+              and then (Length_Of_Name (Tgt_Name) = 0\n+                          or else Target = Get_Name_String (Tgt_Name)));\n \n       if not OK then\n          if Autoconf_Specified then"}, {"sha": "48b57aa454bb32d731eb9a81d7e41f51b6ead59c", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -1126,8 +1126,8 @@ package body Prj.Part is\n \n             if Project_Qualifier_Of (Imported, In_Tree) = Aggregate then\n                Error_Msg_Name_1 := Name_Id (Path_Name_Of (Imported, In_Tree));\n-                  Error_Msg\n-                    (Flags, \"cannot import aggregate project %%\", Token_Ptr);\n+               Error_Msg\n+                 (Flags, \"cannot import aggregate project %%\", Token_Ptr);\n                exit;\n             end if;\n \n@@ -1280,6 +1280,7 @@ package body Prj.Part is\n \n       Normed_Path_Name    : Path_Name_Type;\n       Canonical_Path_Name : Path_Name_Type;\n+      Resolved_Path_Name  : Path_Name_Type;\n       Project_Directory   : Path_Name_Type;\n       Project_Scan_State  : Saved_Project_Scan_State;\n       Source_Index        : Source_File_Index;\n@@ -1329,6 +1330,20 @@ package body Prj.Part is\n          Name_Len := Canonical_Path'Length;\n          Name_Buffer (1 .. Name_Len) := Canonical_Path;\n          Canonical_Path_Name := Name_Find;\n+\n+         if Opt.Follow_Links_For_Files then\n+            Resolved_Path_Name := Canonical_Path_Name;\n+\n+         else\n+            Name_Len := 0;\n+            Add_Str_To_Name_Buffer\n+              (Normalize_Pathname\n+                 (Canonical_Path,\n+                  Resolve_Links => True,\n+                  Case_Sensitive => False));\n+            Resolved_Path_Name := Name_Find;\n+         end if;\n+\n       end;\n \n       if Has_Circular_Dependencies\n@@ -1351,7 +1366,7 @@ package body Prj.Part is\n       while\n         A_Project_Name_And_Node /= Tree_Private_Part.No_Project_Name_And_Node\n       loop\n-         if A_Project_Name_And_Node.Canonical_Path = Canonical_Path_Name then\n+         if A_Project_Name_And_Node.Resolved_Path = Resolved_Path_Name then\n             if Extended then\n \n                if A_Project_Name_And_Node.Extended then\n@@ -1773,6 +1788,17 @@ package body Prj.Part is\n \n                   if Present (Extended_Project) then\n \n+                     if Project_Qualifier_Of (Extended_Project, In_Tree) =\n+                                                                   Aggregate\n+                     then\n+                        Error_Msg_Name_1 :=\n+                          Name_Id (Path_Name_Of (Extended_Project, In_Tree));\n+                        Error_Msg\n+                          (Env.Flags,\n+                           \"cannot extend aggregate project %%\",\n+                           Location_Of (Project, In_Tree));\n+                     end if;\n+\n                      --  A project that extends an extending-all project is\n                      --  also an extending-all project.\n \n@@ -1987,7 +2013,7 @@ package body Prj.Part is\n             E => (Name           => Name_Of_Project,\n                   Display_Name   => Display_Name_Of_Project,\n                   Node           => Project,\n-                  Canonical_Path => Canonical_Path_Name,\n+                  Resolved_Path  => Resolved_Path_Name,\n                   Extended       => Extended,\n                   From_Extended  => From_Extended /= None,\n                   Proj_Qualifier => Project_Qualifier_Of (Project, In_Tree)));"}, {"sha": "37ec38fe7b85d3ef11887650805c06e145745094", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -2922,7 +2922,7 @@ package body Prj.Tree is\n             Prj.Tree.Tree_Private_Part.Project_Name_And_Node'\n               (Name           => Name,\n                Display_Name   => Name,\n-               Canonical_Path => No_Path,\n+               Resolved_Path  => No_Path,\n                Node           => Project,\n                Extended       => False,\n                From_Extended  => False,"}, {"sha": "0a7da7f20ef08bed6d054595d08b1011ed6552b6", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -1469,7 +1469,7 @@ package Prj.Tree is\n          Node : Project_Node_Id;\n          --  Node of the project in table Project_Nodes\n \n-         Canonical_Path : Path_Name_Type;\n+         Resolved_Path : Path_Name_Type;\n          --  Resolved and canonical path of a real project file.\n          --  No_Name in case of virtual projects.\n \n@@ -1488,7 +1488,7 @@ package Prj.Tree is\n         (Name           => No_Name,\n          Display_Name   => No_Name,\n          Node           => Empty_Node,\n-         Canonical_Path => No_Path,\n+         Resolved_Path  => No_Path,\n          Extended       => True,\n          From_Extended  => False,\n          Proj_Qualifier => Unspecified);"}, {"sha": "42e4c54940196c2189cd918b17991226c7616c02", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 26, "deletions": 43, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -611,7 +611,6 @@ package body System.OS_Lib is\n    ----------------------\n \n    procedure Copy_Time_Stamps (Source, Dest : String; Success : out Boolean) is\n-\n       function Copy_Attributes\n         (From, To : System.Address;\n          Mode     : Integer) return Integer;\n@@ -672,7 +671,6 @@ package body System.OS_Lib is\n         (Name  : C_File_Name;\n          Fmode : Mode) return File_Descriptor;\n       pragma Import (C, C_Create_File, \"__gnat_open_create\");\n-\n    begin\n       return C_Create_File (Name, Fmode);\n    end Create_File;\n@@ -682,7 +680,6 @@ package body System.OS_Lib is\n       Fmode : Mode) return File_Descriptor\n    is\n       C_Name : String (1 .. Name'Length + 1);\n-\n    begin\n       C_Name (1 .. Name'Length) := Name;\n       C_Name (C_Name'Last)      := ASCII.NUL;\n@@ -701,7 +698,6 @@ package body System.OS_Lib is\n         (Name  : C_File_Name;\n          Fmode : Mode) return File_Descriptor;\n       pragma Import (C, C_Create_New_File, \"__gnat_open_new\");\n-\n    begin\n       return C_Create_New_File (Name, Fmode);\n    end Create_New_File;\n@@ -711,7 +707,6 @@ package body System.OS_Lib is\n       Fmode : Mode) return File_Descriptor\n    is\n       C_Name : String (1 .. Name'Length + 1);\n-\n    begin\n       C_Name (1 .. Name'Length) := Name;\n       C_Name (C_Name'Last)      := ASCII.NUL;\n@@ -726,9 +721,7 @@ package body System.OS_Lib is\n       function C_Create_File\n         (Name : C_File_Name) return File_Descriptor;\n       pragma Import (C, C_Create_File, \"__gnat_create_output_file\");\n-\n       C_Name : String (1 .. Name'Length + 1);\n-\n    begin\n       C_Name (1 .. Name'Length) := Name;\n       C_Name (C_Name'Last)      := ASCII.NUL;\n@@ -760,6 +753,10 @@ package body System.OS_Lib is\n       Create_Temp_File_Internal (FD, Name, Stdout => False);\n    end Create_Temp_File;\n \n+   -----------------------------\n+   -- Create_Temp_Output_File --\n+   -----------------------------\n+\n    procedure Create_Temp_Output_File\n      (FD   : out File_Descriptor;\n       Name : out String_Access)\n@@ -773,18 +770,14 @@ package body System.OS_Lib is\n    -------------------------------\n \n    procedure Create_Temp_File_Internal\n-     (FD        : out File_Descriptor;\n-      Name      : out String_Access;\n-      Stdout    : Boolean)\n+     (FD     : out File_Descriptor;\n+      Name   : out String_Access;\n+      Stdout : Boolean)\n    is\n       Pos      : Positive;\n       Attempts : Natural := 0;\n       Current  : String (Current_Temp_File_Name'Range);\n \n-      ---------------------------------\n-      -- Create_New_Output_Text_File --\n-      ---------------------------------\n-\n       function Create_New_Output_Text_File\n         (Name : String) return File_Descriptor;\n       --  Similar to Create_Output_Text_File, except it fails if the file\n@@ -793,14 +786,17 @@ package body System.OS_Lib is\n       --  process. There is no point exposing this function, as it's generally\n       --  not particularly useful.\n \n+      ---------------------------------\n+      -- Create_New_Output_Text_File --\n+      ---------------------------------\n+\n       function Create_New_Output_Text_File\n-        (Name : String) return File_Descriptor is\n+        (Name : String) return File_Descriptor\n+      is\n          function C_Create_File\n            (Name : C_File_Name) return File_Descriptor;\n          pragma Import (C, C_Create_File, \"__gnat_create_output_file_new\");\n-\n          C_Name : String (1 .. Name'Length + 1);\n-\n       begin\n          C_Name (1 .. Name'Length) := Name;\n          C_Name (C_Name'Last)      := ASCII.NUL;\n@@ -812,6 +808,7 @@ package body System.OS_Lib is\n \n       File_Loop : loop\n          Locked : begin\n+\n             --  We need to protect global variable Current_Temp_File_Name\n             --  against concurrent access by different tasks.\n \n@@ -841,10 +838,10 @@ package body System.OS_Lib is\n                   when others =>\n \n                      --  If it is not a digit, then there are no available\n-                     --  temp file names. Return Invalid_FD. There is almost\n-                     --  no chance that this code will be ever be executed,\n-                     --  since it would mean that there are one million temp\n-                     --  files in the same directory.\n+                     --  temp file names. Return Invalid_FD. There is almost no\n+                     --  chance that this code will be ever be executed, since\n+                     --  it would mean that there are one million temp files in\n+                     --  the same directory.\n \n                      SSL.Unlock_Task.all;\n                      FD := Invalid_FD;\n@@ -855,8 +852,8 @@ package body System.OS_Lib is\n \n             Current := Current_Temp_File_Name;\n \n-            --  We can now release the lock, because we are no longer\n-            --  accessing Current_Temp_File_Name.\n+            --  We can now release the lock, because we are no longer accessing\n+            --  Current_Temp_File_Name.\n \n             SSL.Unlock_Task.all;\n \n@@ -909,11 +906,9 @@ package body System.OS_Lib is\n \n    procedure Delete_File (Name : String; Success : out Boolean) is\n       C_Name : String (1 .. Name'Length + 1);\n-\n    begin\n       C_Name (1 .. Name'Length) := Name;\n       C_Name (C_Name'Last)      := ASCII.NUL;\n-\n       Delete_File (C_Name'Address, Success);\n    end Delete_File;\n \n@@ -960,7 +955,6 @@ package body System.OS_Lib is\n \n    begin\n       Get_Suffix_Ptr (Suffix_Length'Address, Suffix_Ptr'Address);\n-\n       Result := new String (1 .. Suffix_Length);\n \n       if Suffix_Length > 0 then\n@@ -987,7 +981,6 @@ package body System.OS_Lib is\n \n    begin\n       Get_Suffix_Ptr (Suffix_Length'Address, Suffix_Ptr'Address);\n-\n       Result := new String (1 .. Suffix_Length);\n \n       if Suffix_Length > 0 then\n@@ -1014,7 +1007,6 @@ package body System.OS_Lib is\n \n    begin\n       Get_Suffix_Ptr (Suffix_Length'Address, Suffix_Ptr'Address);\n-\n       Result := new String (1 .. Suffix_Length);\n \n       if Suffix_Length > 0 then\n@@ -1044,7 +1036,6 @@ package body System.OS_Lib is\n \n    begin\n       Suffix_Length := Strlen (Target_Exec_Ext_Ptr);\n-\n       Result := new String (1 .. Suffix_Length);\n \n       if Suffix_Length > 0 then\n@@ -1074,7 +1065,6 @@ package body System.OS_Lib is\n \n    begin\n       Suffix_Length := Strlen (Target_Exec_Ext_Ptr);\n-\n       Result := new String (1 .. Suffix_Length);\n \n       if Suffix_Length > 0 then\n@@ -1104,7 +1094,6 @@ package body System.OS_Lib is\n \n    begin\n       Suffix_Length := Strlen (Target_Object_Ext_Ptr);\n-\n       Result := new String (1 .. Suffix_Length);\n \n       if Suffix_Length > 0 then\n@@ -1153,13 +1142,12 @@ package body System.OS_Lib is\n    function GM_Day (Date : OS_Time) return Day_Type is\n       D  : Day_Type;\n \n-      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n-      pragma Warnings (On);\n+      pragma Unreferenced (Y, Mo, H, Mn, S);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1173,13 +1161,12 @@ package body System.OS_Lib is\n    function GM_Hour (Date : OS_Time) return Hour_Type is\n       H  : Hour_Type;\n \n-      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       D  : Day_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n-      pragma Warnings (On);\n+      pragma Unreferenced (Y, Mo, D, Mn, S);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1193,13 +1180,12 @@ package body System.OS_Lib is\n    function GM_Minute (Date : OS_Time) return Minute_Type is\n       Mn : Minute_Type;\n \n-      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       S  : Second_Type;\n-      pragma Warnings (On);\n+      pragma Unreferenced (Y, Mo, D, H, S);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1213,13 +1199,12 @@ package body System.OS_Lib is\n    function GM_Month (Date : OS_Time) return Month_Type is\n       Mo : Month_Type;\n \n-      pragma Warnings (Off);\n       Y  : Year_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n-      pragma Warnings (On);\n+      pragma Unreferenced (Y, D, H, Mn, S);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1233,13 +1218,12 @@ package body System.OS_Lib is\n    function GM_Second (Date : OS_Time) return Second_Type is\n       S  : Second_Type;\n \n-      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n-      pragma Warnings (On);\n+      pragma Unreferenced (Y, Mo, D, H, Mn);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1302,13 +1286,12 @@ package body System.OS_Lib is\n    function GM_Year (Date : OS_Time) return Year_Type is\n       Y  : Year_Type;\n \n-      pragma Warnings (Off);\n       Mo : Month_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n-      pragma Warnings (On);\n+      pragma Unreferenced (Mo, D, H, Mn, S);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);"}, {"sha": "a53e245ec2f5111a17c438c2df665f72b228a993", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -6443,7 +6443,6 @@ package body Sem_Util is\n                Error_Msg_N\n                  (\"Operation First for iterable type must be unique\", Aspect);\n                return Any_Type;\n-\n             else\n                Cursor :=  Etype (Func);\n             end if;\n@@ -6461,6 +6460,7 @@ package body Sem_Util is\n \n       return Cursor;\n    end Get_Cursor_Type;\n+\n    -------------------------------\n    -- Get_Default_External_Name --\n    -------------------------------"}, {"sha": "e82d3e6bbc15e2d54d09ad28a7af2bdd53ecd215", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f39091ea608a390dd56aabdec1ac6bb56846dd/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=13f39091ea608a390dd56aabdec1ac6bb56846dd", "patch": "@@ -781,9 +781,9 @@ package Sem_Util is\n      (Aspect : Node_Id;\n       Typ    : Entity_Id) return Entity_Id;\n    --  Find Cursor type in scope of formal container Typ, by locating primitive\n-   --  operation First.\n-   --  For use in resolving the other primitive operations of an Iterable type\n-   --  and expanding loops and quantified expressions over formal containers.\n+   --  operation First. For use in resolving the other primitive operations\n+   --  of an Iterable type and expanding loops and quantified expressions\n+   --  over formal containers.\n \n    function Get_Default_External_Name (E : Node_Or_Entity_Id) return Node_Id;\n    --  This is used to construct the string literal node representing a"}]}