{"sha": "44087d555cb9baf64a5a7dde3f46653a971b8e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQwODdkNTU1Y2I5YmFmNjRhNWE3ZGRlM2Y0NjY1M2E5NzFiOGU4OQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-11-11T23:19:26Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-11-11T23:19:26Z"}, "message": "re PR middle-end/24750 (global-alloc (reload) trips over own confusion for unexpected addressing modes)\n\n\tPR middle-end/24750\n\t* gcc.dg/torture/pr24750-1.c, gcc.target/cris/torture/pr24750-2.c:\n        New tests.\n\nFrom-SVN: r106806", "tree": {"sha": "43413b92f5f7419b39f98f246522f63ffb2e0610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43413b92f5f7419b39f98f246522f63ffb2e0610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44087d555cb9baf64a5a7dde3f46653a971b8e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44087d555cb9baf64a5a7dde3f46653a971b8e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44087d555cb9baf64a5a7dde3f46653a971b8e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44087d555cb9baf64a5a7dde3f46653a971b8e89/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19fe122f9469f1513bfd1a4ac1bc75fcf22781db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fe122f9469f1513bfd1a4ac1bc75fcf22781db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19fe122f9469f1513bfd1a4ac1bc75fcf22781db"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "71698c4f943745b6c8e99eacab06e94b3d953257", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44087d555cb9baf64a5a7dde3f46653a971b8e89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44087d555cb9baf64a5a7dde3f46653a971b8e89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=44087d555cb9baf64a5a7dde3f46653a971b8e89", "patch": "@@ -1,3 +1,9 @@\n+2005-11-12  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR middle-end/24750\n+\t* gcc.dg/torture/pr24750-1.c, gcc.target/cris/torture/pr24750-2.c:\n+        New tests.\n+\n 2005-11-11  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* lib/target-libpath.exp (get_shlib_extension): New proc."}, {"sha": "6f84f3e8a7c55d03af5656194645e3d90d60f1ec", "filename": "gcc/testsuite/gcc.dg/torture/pr24750-1.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44087d555cb9baf64a5a7dde3f46653a971b8e89/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24750-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44087d555cb9baf64a5a7dde3f46653a971b8e89/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24750-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24750-1.c?ref=44087d555cb9baf64a5a7dde3f46653a971b8e89", "patch": "@@ -0,0 +1,72 @@\n+extern int unknown;\n+extern int n0;\n+extern short *s0;\n+extern int n1;\n+extern short *s1;\n+extern short *s2;\n+extern int *n2;\n+extern int *n3;\n+extern int n4;\n+extern short *n5;\n+extern int *n6;\n+extern int n7;\n+extern char *unc;\n+\n+void\n+f (short *sp)\n+{\n+  int j = 0;\n+  int i = 0;\n+  int n8 = 0;\n+  int n9 = 0;\n+  short *s3 = sp;\n+  short s4 = (short) unknown;\n+  short s5 = (short) unknown;\n+  char *c0 = unc;\n+  int n10 = 0;\n+  int n11 = 0;\n+  int u0 = unknown;\n+  int k = 0;\n+\n+  for (n8 = 1; n8 <= n7; n8++)\n+    {\n+      for (i = 1; i <= n0; i++)\n+\tc0[i] = 0;\n+      for (i = 1; i <= u0; i++) { }\n+      for (i = sp[0]; i != -32767; i = sp[i])\n+\tif (s4 == u0)\n+\t  for (j = 1; j <= u0; j++)\n+\t    if (!c0[s3[j]])\n+\t      break;\n+    }\n+  for (n9 = 1; n9 <= n0; n9++) s1[unknown + n9] = n9;\n+  for (i = 1; i <= n1; i++)\n+    for (j = 1; j <= s4; j++)\n+      s3[j] = s1[s3[j]];\n+  for (n8 = 1; n8 <= n7; n8++)\n+    for (i = 1; i <= s5; i++)\n+      s3[i] = s1[s3[i]];\n+  for (n9 = 1; n9 <= n0; n9++) sp[s1[n9]] = unknown;\n+  for (n10 = 2; n10 < n4; n10++) { }\n+  for (k = 1; k <= unknown; k++)\n+    {\n+      s4 = s0[n5[u0]];\n+      for (i = 1; i <= s4; i++) { }\n+      for (j = 1; j <= s4; j++)\n+\tif (n2[1] != 0)\n+\t  if (i == unknown)\n+\t    unknown = n3[unknown];\n+      n6[u0] = n10;\n+    }\n+  for (k = n7; k >= n11; k--)\n+    if (n2[k] == -32767)\n+      break;\n+  free (c0);\n+\n+  for (i = 1; i <= n7; i++)\n+    {\n+      for (j = 1; j <= s4; j++) { }\n+      for (n8 = s2[unknown]; n8 != -32767; n8 = s2[n8]) { }\n+      for (j = 1; j <= s5; j++) { }\n+    }\n+}"}, {"sha": "281fb47b7a86c443cdb2715823d87bf955f0a608", "filename": "gcc/testsuite/gcc.target/cris/torture/pr24750-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44087d555cb9baf64a5a7dde3f46653a971b8e89/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fpr24750-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44087d555cb9baf64a5a7dde3f46653a971b8e89/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fpr24750-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fpr24750-2.c?ref=44087d555cb9baf64a5a7dde3f46653a971b8e89", "patch": "@@ -0,0 +1,20 @@\n+/* As the invalid insn in this test got as far as to the target output\n+   code and was \"near enough\" to output invalid assembly-code, we need\n+   to pass it through the assembler as well.\n+   { dg-do assemble } */\n+\n+int\n+f (short *a, char *y)\n+{\n+  __asm__ (\"\" : : :\n+#ifndef __PIC__\n+\t   \"r0\",\n+#endif\n+\t   \"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"r6\", \"r7\",\n+\t   /* Register R8 is frame-pointer, and we don't have a means\n+\t      to not clobber it for the test-runs that don't eliminate\n+\t      it.  But that's ok; we have enough general-register\n+\t      pressure to repeat the bug without that.  */\n+\t   \"r9\", \"r10\", \"r11\", \"r12\", \"r13\");\n+  return y[*a];\n+}"}]}