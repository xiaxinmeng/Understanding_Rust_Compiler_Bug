{"sha": "1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUzNzczN2YyODRlYWFjZDhhMzM1ZDFjOGRiZmI2Y2QxMGIwODAzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-26T10:25:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-26T10:25:21Z"}, "message": "re PR c++/49165 (ICE on for-loop/throw combination)\n\n\tPR c++/49165\n\t* gimplify.c (shortcut_cond_r): Don't special case\n\tCOND_EXPRs if they have void type on one of their arms.\n\n\t* g++.dg/eh/cond5.C: New test.\n\nFrom-SVN: r174273", "tree": {"sha": "ae7149622fb245d57c64ae999c5287bfe155f862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7149622fb245d57c64ae999c5287bfe155f862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b1ac803d3fa6873c336109b1f68be1b62f31300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1ac803d3fa6873c336109b1f68be1b62f31300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1ac803d3fa6873c336109b1f68be1b62f31300"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "825858ceec81be082a7d1b71428d0e3b0094eb36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "patch": "@@ -1,3 +1,9 @@\n+2011-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/49165\n+\t* gimplify.c (shortcut_cond_r): Don't special case\n+\tCOND_EXPRs if they have void type on one of their arms.\n+\n 2011-05-26  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* haifa-sched.c (schedule-block): Reorder the inner scheduling loop"}, {"sha": "31e0daf3d41fdda2a94042591568f6fd74ca6343", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "patch": "@@ -2573,15 +2573,20 @@ shortcut_cond_r (tree pred, tree *true_label_p, tree *false_label_p,\n \t\t\t   new_locus);\n       append_to_statement_list (t, &expr);\n     }\n-  else if (TREE_CODE (pred) == COND_EXPR)\n+  else if (TREE_CODE (pred) == COND_EXPR\n+\t   && !VOID_TYPE_P (TREE_TYPE (TREE_OPERAND (pred, 1)))\n+\t   && !VOID_TYPE_P (TREE_TYPE (TREE_OPERAND (pred, 2))))\n     {\n       location_t new_locus;\n \n       /* As long as we're messing with gotos, turn if (a ? b : c) into\n \t if (a)\n \t   if (b) goto yes; else goto no;\n \t else\n-\t   if (c) goto yes; else goto no;  */\n+\t   if (c) goto yes; else goto no;\n+\n+\t Don't do this if one of the arms has void type, which can happen\n+\t in C++ when the arm is throw.  */\n \n       /* Keep the original source location on the first 'if'.  Set the source\n \t location of the ? on the second 'if'.  */"}, {"sha": "db7d49dbb6883179f1e82241c3c076f4e078813d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "patch": "@@ -1,5 +1,8 @@\n 2011-05-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/49165\n+\t* g++.dg/eh/cond5.C: New test.\n+\n \tPR tree-optimization/49161\n \t* gcc.c-torture/execute/pr49161.c: New test.\n "}, {"sha": "3f0c59964f117bf95b0cf0b05e89c284cca3b90c", "filename": "gcc/testsuite/g++.dg/eh/cond5.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1537737f284eaacd8a335d1c8dbfb6cd10b0803b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond5.C?ref=1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "patch": "@@ -0,0 +1,43 @@\n+// PR c++/49165\n+// { dg-do run }\n+\n+extern \"C\" void abort ();\n+\n+int\n+foo (bool x, int y)\n+{\n+  if (y < 10 && (x ? true : throw 1))\n+    y++;\n+  if (y > 20 || (x ? true : throw 2))\n+    y++;\n+  return y;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo (true, 0) != 2\n+      || foo (true, 10) != 11\n+      || foo (false, 30) != 31)\n+    abort ();\n+  try\n+    {\n+      foo (false, 0);\n+      abort ();\n+    }\n+  catch (int i)\n+    {\n+      if (i != 1)\n+\tabort ();\n+    }\n+  try\n+    {\n+      foo (false, 10);\n+      abort ();\n+    }\n+  catch (int i)\n+    {\n+      if (i != 2)\n+\tabort ();\n+    }\n+}"}]}