{"sha": "be8d605f16ed6ab090b411a7810911f4b7b7719a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU4ZDYwNWYxNmVkNmFiMDkwYjQxMWE3ODEwOTExZjRiN2I3NzE5YQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-07-06T12:58:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-19T09:53:38Z"}, "message": "[Ada] Reject use of Relaxed_Initialization on scalar/access param or result\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_Aspect_Relaxed_Initialization): Fix bug\n\twhere a call to Error_Msg_N leads to crash due to\n\tError_Msg_Name_1 being removed by the call, while a subsequent\n\tcall to Error_Msg_N tries to use it. The variable\n\tError_Msg_Name_1 should be restored prior to the next call. Also\n\tadd checking for the new rules.", "tree": {"sha": "c2c4f1955130e421aaf2a2c61533325b8568ce6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2c4f1955130e421aaf2a2c61533325b8568ce6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be8d605f16ed6ab090b411a7810911f4b7b7719a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8d605f16ed6ab090b411a7810911f4b7b7719a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8d605f16ed6ab090b411a7810911f4b7b7719a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8d605f16ed6ab090b411a7810911f4b7b7719a/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17ea7fad2830423188e2055708bb2d4a983c33bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ea7fad2830423188e2055708bb2d4a983c33bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17ea7fad2830423188e2055708bb2d4a983c33bc"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "b40c575695f7adc139405cf6c71ad4fd9078e5ad", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8d605f16ed6ab090b411a7810911f4b7b7719a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8d605f16ed6ab090b411a7810911f4b7b7719a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=be8d605f16ed6ab090b411a7810911f4b7b7719a", "patch": "@@ -2165,6 +2165,9 @@ package body Sem_Ch13 is\n                   Seen    : in out Elist_Id)\n                is\n                begin\n+                  --  Set name of the aspect for error messages\n+                  Error_Msg_Name_1 := Nam;\n+\n                   --  The relaxed parameter is a formal parameter\n \n                   if Nkind (Param) in N_Identifier | N_Expanded_Name then\n@@ -2179,6 +2182,14 @@ package body Sem_Ch13 is\n \n                            pragma Assert (Is_Formal (Item));\n \n+                           --  It must not have scalar or access type\n+\n+                           if Is_Elementary_Type (Etype (Item)) then\n+                              Error_Msg_N (\"illegal aspect % item\", Param);\n+                              Error_Msg_N\n+                                (\"\\item must not have elementary type\", Param);\n+                           end if;\n+\n                            --  Detect duplicated items\n \n                            if Contains (Seen, Item) then\n@@ -2205,6 +2216,16 @@ package body Sem_Ch13 is\n                           and then\n                             Entity (Pref) = Subp_Id\n                         then\n+                           --  Function result must not have scalar or access\n+                           --  type.\n+\n+                           if Is_Elementary_Type (Etype (Pref)) then\n+                              Error_Msg_N (\"illegal aspect % item\", Param);\n+                              Error_Msg_N\n+                                (\"\\function result must not have elementary\"\n+                                 & \" type\", Param);\n+                           end if;\n+\n                            --  Detect duplicated items\n \n                            if Contains (Seen, Subp_Id) then\n@@ -2345,12 +2366,14 @@ package body Sem_Ch13 is\n                                     if not Is_OK_Static_Expression\n                                       (Expression (Assoc))\n                                     then\n+                                       Error_Msg_Name_1 := Nam;\n                                        Error_Msg_N\n                                          (\"expression of aspect %\" &\n                                           \"must be static\", Aspect);\n                                     end if;\n \n                                  else\n+                                    Error_Msg_Name_1 := Nam;\n                                     Error_Msg_N\n                                       (\"illegal aspect % expression\", Expr);\n                                  end if;"}]}