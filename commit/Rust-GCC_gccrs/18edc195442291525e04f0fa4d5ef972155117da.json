{"sha": "18edc195442291525e04f0fa4d5ef972155117da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlZGMxOTU0NDIyOTE1MjVlMDRmMGZhNGQ1ZWY5NzIxNTUxMTdkYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-13T09:22:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-13T09:22:37Z"}, "message": "Fix -fcompare-debug issue in purge_dead_edges [PR95080]\n\nThe following testcase fails with -fcompare-debug, the bug used to be latent\nsince introduction of -fcompare-debug.\nThe loop at the start of purge_dead_edges behaves differently between -g0\nand -g - if the last insn is a DEBUG_INSN, then it skips not just\nDEBUG_INSNs but also NOTEs until it finds some other real insn (or bb head),\nwhile with -g0 it will not skip any NOTEs, so if we have\nreal_insn\nnote\ndebug_insn // not present with -g0\nthen with -g it might remove useless REG_EH_REGION from real_insn, while\nwith -g0 it will not.\n\nYet another option would be not skipping NOTE_P in the loop; I couldn't find\nin history rationale for why it is done.\n\n2020-05-13  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/95080\n\t* cfgrtl.c (purge_dead_edges): Skip over debug and note insns even\n\tif the last insn is a note.\n\n\t* g++.dg/opt/pr95080.C: New test.", "tree": {"sha": "cb9948b017460a3b4b98fb786b1e6f73384fb641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb9948b017460a3b4b98fb786b1e6f73384fb641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18edc195442291525e04f0fa4d5ef972155117da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18edc195442291525e04f0fa4d5ef972155117da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18edc195442291525e04f0fa4d5ef972155117da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18edc195442291525e04f0fa4d5ef972155117da/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0c39a765b0714aed36fced6fbba452a6619acb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c39a765b0714aed36fced6fbba452a6619acb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c39a765b0714aed36fced6fbba452a6619acb0"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "7fe1c6c93ee6276075c90ee4912ac0ff082d6590", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18edc195442291525e04f0fa4d5ef972155117da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18edc195442291525e04f0fa4d5ef972155117da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18edc195442291525e04f0fa4d5ef972155117da", "patch": "@@ -1,5 +1,9 @@\n 2020-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/95080\n+\t* cfgrtl.c (purge_dead_edges): Skip over debug and note insns even\n+\tif the last insn is a note.\n+\n \tPR tree-optimization/95060\n \t* tree-ssa-math-opts.c (convert_mult_to_fma_1): Fold a NEGATE_EXPR\n \tif it is the single use of the FMA internal builtin."}, {"sha": "827e84a44ddd957b3d0d37c1313b9e6cef190a1c", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18edc195442291525e04f0fa4d5ef972155117da/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18edc195442291525e04f0fa4d5ef972155117da/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=18edc195442291525e04f0fa4d5ef972155117da", "patch": "@@ -3100,7 +3100,7 @@ purge_dead_edges (basic_block bb)\n   bool found;\n   edge_iterator ei;\n \n-  if (DEBUG_INSN_P (insn) && insn != BB_HEAD (bb))\n+  if ((DEBUG_INSN_P (insn) || NOTE_P (insn)) && insn != BB_HEAD (bb))\n     do\n       insn = PREV_INSN (insn);\n     while ((DEBUG_INSN_P (insn) || NOTE_P (insn)) && insn != BB_HEAD (bb));"}, {"sha": "22adacb264c6dee3cdd1ecf627d8ec6cef1c1d1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18edc195442291525e04f0fa4d5ef972155117da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18edc195442291525e04f0fa4d5ef972155117da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18edc195442291525e04f0fa4d5ef972155117da", "patch": "@@ -1,5 +1,8 @@\n 2020-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/95080\n+\t* g++.dg/opt/pr95080.C: New test.\n+\n \tPR tree-optimization/95060\n \t* gcc.target/i386/avx512f-pr95060.c: New test.\n \t* gcc.target/i386/fma_double_1.c: Adjust expected insn counts."}, {"sha": "2da7df73b72562cff236300cc168d060ff93e00a", "filename": "gcc/testsuite/g++.dg/opt/pr95080.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18edc195442291525e04f0fa4d5ef972155117da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr95080.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18edc195442291525e04f0fa4d5ef972155117da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr95080.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr95080.C?ref=18edc195442291525e04f0fa4d5ef972155117da", "patch": "@@ -0,0 +1,41 @@\n+// PR debug/95080\n+// { dg-do compile }\n+// { dg-options \"-Og -fcse-follow-jumps -fnon-call-exceptions -fcompare-debug\" }\n+\n+char *a;\n+\n+void baz ();\n+\n+static inline bool\n+bar ()\n+{\n+  int j = a[0] - 1;\n+  switch (j)\n+    {\n+    case 0:\n+    case 2:\n+      return true;\n+    default:\n+      return false;\n+    }\n+}\n+\n+static inline bool\n+foo ()\n+{\n+  if (bar ())\n+    baz ();\n+  return 0;\n+}\n+\n+struct S\n+{\n+  int h;\n+   ~S ();\n+};\n+\n+S::~S ()\n+{\n+  if (a[0] == 0)\n+    foo () != h;\n+}"}]}