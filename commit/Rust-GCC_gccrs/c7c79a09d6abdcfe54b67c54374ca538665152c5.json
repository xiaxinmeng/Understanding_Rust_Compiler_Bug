{"sha": "c7c79a09d6abdcfe54b67c54374ca538665152c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdjNzlhMDlkNmFiZGNmZTU0YjY3YzU0Mzc0Y2E1Mzg2NjUxNTJjNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-10-07T18:15:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-10-07T18:15:32Z"}, "message": "f95-lang.c (poplevel): Don't clear BLOCK_VARS if functionbody.\n\n\t* f95-lang.c (poplevel): Don't clear BLOCK_VARS if functionbody.\n\t* trans-decl.c (gfc_build_qualified_array): Build accurate debug type\n\teven if nest.\n\t(build_entry_thunks, gfc_generate_function_code,\n\tgfc_generate_constructors): Ensure DECL_SAVED_TREE is a BIND_EXPR\n\twith DECL_INITIAL as its BLOCK.\n\nFrom-SVN: r140945", "tree": {"sha": "2678f9917d4d74b4f583c1caea68711e28016389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2678f9917d4d74b4f583c1caea68711e28016389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7c79a09d6abdcfe54b67c54374ca538665152c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c79a09d6abdcfe54b67c54374ca538665152c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c79a09d6abdcfe54b67c54374ca538665152c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c79a09d6abdcfe54b67c54374ca538665152c5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a107f086365bc6adb37c6d81f029af3d7fc73c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a107f086365bc6adb37c6d81f029af3d7fc73c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a107f086365bc6adb37c6d81f029af3d7fc73c52"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "b0ef1cef8be5ddc26b1206b521610b74ec1c6a5b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c79a09d6abdcfe54b67c54374ca538665152c5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c79a09d6abdcfe54b67c54374ca538665152c5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c7c79a09d6abdcfe54b67c54374ca538665152c5", "patch": "@@ -1,3 +1,12 @@\n+2008-10-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* f95-lang.c (poplevel): Don't clear BLOCK_VARS if functionbody.\n+\t* trans-decl.c (gfc_build_qualified_array): Build accurate debug type\n+\teven if nest.\n+\t(build_entry_thunks, gfc_generate_function_code,\n+\tgfc_generate_constructors): Ensure DECL_SAVED_TREE is a BIND_EXPR\n+\twith DECL_INITIAL as its BLOCK.\n+\n 2008-10-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/35680"}, {"sha": "a7d6c8f66a5facebd389c477253b803c4568f0ec", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c79a09d6abdcfe54b67c54374ca538665152c5/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c79a09d6abdcfe54b67c54374ca538665152c5/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=c7c79a09d6abdcfe54b67c54374ca538665152c5", "patch": "@@ -430,14 +430,8 @@ poplevel (int keep, int reverse, int functionbody)\n   current_binding_level = current_binding_level->level_chain;\n \n   if (functionbody)\n-    {\n-      /* This is the top level block of a function. The ..._DECL chain stored\n-         in BLOCK_VARS are the function's parameters (PARM_DECL nodes). Don't\n-         leave them in the BLOCK because they are found in the FUNCTION_DECL\n-         instead.  */\n-      DECL_INITIAL (current_function_decl) = block_node;\n-      BLOCK_VARS (block_node) = 0;\n-    }\n+    /* This is the top level block of a function. */\n+    DECL_INITIAL (current_function_decl) = block_node;\n   else if (current_binding_level == global_binding_level)\n     /* When using gfc_start_block/gfc_finish_block from middle-end hooks,\n        don't add newly created BLOCKs as subblocks of global_binding_level.  */"}, {"sha": "1b47f2673e612b412d2d3d1539700064191c5c08", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c79a09d6abdcfe54b67c54374ca538665152c5/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c79a09d6abdcfe54b67c54374ca538665152c5/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=c7c79a09d6abdcfe54b67c54374ca538665152c5", "patch": "@@ -704,7 +704,7 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n       layout_type (type);\n     }\n \n-  if (nest || write_symbols == NO_DEBUG)\n+  if (write_symbols == NO_DEBUG)\n     return;\n \n   if (TYPE_NAME (type) != NULL_TREE\n@@ -1761,7 +1761,7 @@ build_entry_thunks (gfc_namespace * ns)\n \n       thunk_fndecl = thunk_sym->backend_decl;\n \n-      gfc_start_block (&body);\n+      gfc_init_block (&body);\n \n       /* Pass extra parameter identifying this entry point.  */\n       tmp = build_int_cst (gfc_array_index_type, el->id);\n@@ -1869,8 +1869,12 @@ build_entry_thunks (gfc_namespace * ns)\n \n       /* Finish off this function and send it for code generation.  */\n       DECL_SAVED_TREE (thunk_fndecl) = gfc_finish_block (&body);\n+      tmp = getdecls ();\n       poplevel (1, 0, 1);\n       BLOCK_SUPERCONTEXT (DECL_INITIAL (thunk_fndecl)) = thunk_fndecl;\n+      DECL_SAVED_TREE (thunk_fndecl)\n+\t= build3_v (BIND_EXPR, tmp, DECL_SAVED_TREE (thunk_fndecl),\n+\t\t    DECL_INITIAL (thunk_fndecl));\n \n       /* Output the GENERIC tree.  */\n       dump_function (TDI_original, thunk_fndecl);\n@@ -3652,7 +3656,7 @@ gfc_generate_function_code (gfc_namespace * ns)\n \n   trans_function_start (sym);\n \n-  gfc_start_block (&block);\n+  gfc_init_block (&block);\n \n   if (ns->entries && ns->proc_name->ts.type == BT_CHARACTER)\n     {\n@@ -3886,11 +3890,16 @@ gfc_generate_function_code (gfc_namespace * ns)\n   saved_function_decls = NULL_TREE;\n \n   DECL_SAVED_TREE (fndecl) = gfc_finish_block (&block);\n+  decl = getdecls ();\n \n   /* Finish off this function and send it for code generation.  */\n   poplevel (1, 0, 1);\n   BLOCK_SUPERCONTEXT (DECL_INITIAL (fndecl)) = fndecl;\n \n+  DECL_SAVED_TREE (fndecl)\n+    = build3_v (BIND_EXPR, decl, DECL_SAVED_TREE (fndecl),\n+\t\tDECL_INITIAL (fndecl));\n+\n   /* Output the GENERIC tree.  */\n   dump_function (TDI_original, fndecl);\n \n@@ -3969,9 +3978,13 @@ gfc_generate_constructors (void)\n       DECL_SAVED_TREE (fndecl) = build_stmt (EXPR_STMT, tmp);\n     }\n \n+  decl = getdecls ();\n   poplevel (1, 0, 1);\n \n   BLOCK_SUPERCONTEXT (DECL_INITIAL (fndecl)) = fndecl;\n+  DECL_SAVED_TREE (fndecl)\n+    = build3_v (BIND_EXPR, decl, DECL_SAVED_TREE (fndecl),\n+\t\tDECL_INITIAL (fndecl));\n \n   free_after_parsing (cfun);\n   free_after_compilation (cfun);"}]}