{"sha": "a32452a5442cd05040af53787af0d8b537ac77a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMyNDUyYTU0NDJjZDA1MDQwYWY1Mzc4N2FmMGQ4YjUzN2FjNzdhNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-03-12T00:56:26Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-04-06T12:36:00Z"}, "message": "x86: Update memcpy/memset inline strategies for Skylake family CPUs\n\nSimply memcpy and memset inline strategies to avoid branches for\nSkylake family CPUs:\n\n1. With MOVE_RATIO and CLEAR_RATIO == 17, GCC will use integer/vector\n   load and store for up to 16 * 16 (256) bytes when the data size is\n   fixed and known.\n2. Inline only if data size is known to be <= 256.\n   a. Use \"rep movsb/stosb\" with simple code sequence if the data size\n      is a constant.\n   b. Use loop if data size is not a constant.\n3. Use memcpy/memset libray function if data size is unknown or > 256.\n\nOn Cascadelake processor with -march=native -Ofast -flto,\n\n1. Performance impacts of SPEC CPU 2017 rate are:\n\n500.perlbench_r  0.17%\n502.gcc_r       -0.36%\n505.mcf_r        0.00%\n520.omnetpp_r    0.08%\n523.xalancbmk_r -0.62%\n525.x264_r       1.04%\n531.deepsjeng_r  0.11%\n541.leela_r     -1.09%\n548.exchange2_r -0.25%\n557.xz_r         0.17%\nGeomean         -0.08%\n\n503.bwaves_r     0.00%\n507.cactuBSSN_r  0.69%\n508.namd_r      -0.07%\n510.parest_r     1.12%\n511.povray_r     1.82%\n519.lbm_r        0.00%\n521.wrf_r       -1.32%\n526.blender_r   -0.47%\n527.cam4_r       0.23%\n538.imagick_r   -1.72%\n544.nab_r       -0.56%\n549.fotonik3d_r  0.12%\n554.roms_r       0.43%\nGeomean          0.02%\n\n2. Significant impacts on eembc benchmarks are:\n\neembc/idctrn01   9.23%\neembc/nnet_test  29.26%\n\ngcc/\n\n\t* config/i386/x86-tune-costs.h (skylake_memcpy): Updated.\n\t(skylake_memset): Likewise.\n\t(skylake_cost): Change CLEAR_RATIO to 17.\n\t* config/i386/x86-tune.def (X86_TUNE_PREFER_KNOWN_REP_MOVSB_STOSB):\n\tReplace m_CANNONLAKE, m_ICELAKE_CLIENT, m_ICELAKE_SERVER,\n\tm_TIGERLAKE and m_SAPPHIRERAPIDS with m_SKYLAKE and m_CORE_AVX512.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/memcpy-strategy-9.c: New test.\n\t* gcc.target/i386/memcpy-strategy-10.c: Likewise.\n\t* gcc.target/i386/memcpy-strategy-11.c: Likewise.\n\t* gcc.target/i386/memset-strategy-7.c: Likewise.\n\t* gcc.target/i386/memset-strategy-8.c: Likewise.\n\t* gcc.target/i386/memset-strategy-9.c: Likewise.", "tree": {"sha": "1090d473d81fc8ed8a028d92d22ecb224c264f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1090d473d81fc8ed8a028d92d22ecb224c264f49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a32452a5442cd05040af53787af0d8b537ac77a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32452a5442cd05040af53787af0d8b537ac77a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32452a5442cd05040af53787af0d8b537ac77a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32452a5442cd05040af53787af0d8b537ac77a6/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5c170e080399fb3d24a38bbfcd66bd4675abe53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c170e080399fb3d24a38bbfcd66bd4675abe53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5c170e080399fb3d24a38bbfcd66bd4675abe53"}], "stats": {"total": 105, "additions": 93, "deletions": 12}, "files": [{"sha": "ffe810f2bcbf8033de0e769938e4a565335d6eeb", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -1822,17 +1822,24 @@ struct processor_costs znver3_cost = {\n \n /* skylake_cost should produce code tuned for Skylake familly of CPUs.  */\n static stringop_algs skylake_memcpy[2] =   {\n-  {libcall, {{1024, rep_prefix_4_byte, true}, {-1, libcall, false}}},\n-  {libcall, {{16, loop, false}, {512, unrolled_loop, false},\n-             {-1, libcall, false}}}};\n+  {libcall,\n+   {{256, rep_prefix_1_byte, true},\n+    {256, loop, false},\n+    {-1, libcall, false}}},\n+  {libcall,\n+   {{256, rep_prefix_1_byte, true},\n+    {256, loop, false},\n+    {-1, libcall, false}}}};\n \n static stringop_algs skylake_memset[2] = {\n-  {libcall, {{6, loop_1_byte, true},\n-             {24, loop, true},\n-             {8192, rep_prefix_4_byte, true},\n-             {-1, libcall, false}}},\n-  {libcall, {{24, loop, true}, {512, unrolled_loop, false},\n-             {-1, libcall, false}}}};\n+  {libcall,\n+   {{256, rep_prefix_1_byte, true},\n+    {256, loop, false},\n+    {-1, libcall, false}}},\n+  {libcall,\n+   {{256, rep_prefix_1_byte, true},\n+    {256, loop, false},\n+    {-1, libcall, false}}}};\n \n static const\n struct processor_costs skylake_cost = {\n@@ -1889,7 +1896,7 @@ struct processor_costs skylake_cost = {\n   COSTS_N_INSNS (0),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n-  6,\t\t\t\t\t/* CLEAR_RATIO */\n+  17,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */"}, {"sha": "eb057a677508cfa72ad586067a8625fa14603e9b", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -273,8 +273,7 @@ DEF_TUNE (X86_TUNE_SINGLE_STRINGOP, \"single_stringop\", m_386 | m_P4_NOCONA)\n    move/set sequences of bytes with known size.  */\n DEF_TUNE (X86_TUNE_PREFER_KNOWN_REP_MOVSB_STOSB,\n \t  \"prefer_known_rep_movsb_stosb\",\n-\t  m_CANNONLAKE | m_ICELAKE_CLIENT | m_ICELAKE_SERVER | m_TIGERLAKE\n-\t  | m_ALDERLAKE | m_SAPPHIRERAPIDS)\n+\t  m_SKYLAKE | m_ALDERLAKE | m_CORE_AVX512)\n \n /* X86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES: Enable generation of\n    compact prologues and epilogues by issuing a misaligned moves.  This"}, {"sha": "970aa7419718244f2d2fa56fde781e8eefa4e137", "filename": "gcc/testsuite/gcc.target/i386/memcpy-strategy-10.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-10.c?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake -mno-sse\" } */\n+/* { dg-final { scan-assembler \"jmp\\tmemcpy\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler \"call\\tmemcpy\" { target ia32 } } } */\n+/* { dg-final { scan-assembler-not \"rep movsb\" } } */\n+\n+void\n+foo (char *dest, char *src)\n+{\n+  __builtin_memcpy (dest, src, 257);\n+}"}, {"sha": "b604194463091dcee0ca0357c52abcf6f084b907", "filename": "gcc/testsuite/gcc.target/i386/memcpy-strategy-11.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-11.c?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake\" } */\n+/* { dg-final { scan-assembler-not \"jmp\\tmemcpy\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-not \"call\\tmemcpy\" { target ia32 } } } */\n+/* { dg-final { scan-assembler-not \"rep movsb\" } } */\n+\n+typedef unsigned char e_u8;\n+\n+#define MAXBC 8\n+\n+void MixColumn(e_u8 a[4][MAXBC], e_u8 BC)\n+{\n+  e_u8 b[4][MAXBC];\n+  int i, j;\n+\n+  for(i = 0; i < 4; i++)\n+    for(j = 0; j < BC; j++) a[i][j] = b[i][j];\n+}"}, {"sha": "b0dc7484d09c59c4fed567b36b80b93d740c4161", "filename": "gcc/testsuite/gcc.target/i386/memcpy-strategy-9.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-9.c?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake -mno-sse\" } */\n+/* { dg-final { scan-assembler \"rep movsb\" } } */\n+\n+void\n+foo (char *dest, char *src)\n+{\n+  __builtin_memcpy (dest, src, 256);\n+}"}, {"sha": "07c2816910ccc433e4507bccd28cf9453451d020", "filename": "gcc/testsuite/gcc.target/i386/memset-strategy-7.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-7.c?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake -mno-sse\" } */\n+/* { dg-final { scan-assembler \"jmp\\tmemset\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler \"call\\tmemset\" { target ia32 } } } */\n+/* { dg-final { scan-assembler-not \"rep stosb\" } } */\n+\n+void\n+foo (char *dest)\n+{\n+  __builtin_memset (dest, 0, 257);\n+}"}, {"sha": "52ea882c8148d50346ca906d1e1dfca232566aae", "filename": "gcc/testsuite/gcc.target/i386/memset-strategy-8.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-8.c?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake -mno-sse\" } */\n+/* { dg-final { scan-assembler \"rep stosb\" } } */\n+\n+void\n+foo (char *dest)\n+{\n+  __builtin_memset (dest, 0, 256);\n+}"}, {"sha": "d4db031958f2dffba3c464b816fa6a8b00f77b86", "filename": "gcc/testsuite/gcc.target/i386/memset-strategy-9.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32452a5442cd05040af53787af0d8b537ac77a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-9.c?ref=a32452a5442cd05040af53787af0d8b537ac77a6", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake\" } */\n+/* { dg-final { scan-assembler-not \"jmp\\tmemset\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-not \"call\\tmemset\" { target ia32 } } } */\n+/* { dg-final { scan-assembler-not \"rep stosb\" } } */\n+\n+typedef unsigned char e_u8;\n+\n+#define MAXBC 8\n+\n+void MixColumn(e_u8 a[4][MAXBC], e_u8 BC)\n+{\n+  int i, j;\n+\n+  for(i = 0; i < 4; i++)\n+    for(j = 0; j < BC; j++) a[i][j] = 1;\n+}"}]}