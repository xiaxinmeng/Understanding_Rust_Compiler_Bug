{"sha": "1ded1a1faeff3ed16dbd320bbb24035a6db21d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRlZDFhMWZhZWZmM2VkMTZkYmQzMjBiYmIyNDAzNWE2ZGIyMWQ0NQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-07-10T09:10:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T09:10:57Z"}, "message": "sem_ch11.adb (analyze_raise_xxx_error): Remove consecutive raise statements with the same condition.\n\n2009-07-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch11.adb (analyze_raise_xxx_error): Remove consecutive raise\n\tstatements with the same condition.\n\nFrom-SVN: r149462", "tree": {"sha": "3d5c76540be938aa80aed54e5c70146df915c29e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d5c76540be938aa80aed54e5c70146df915c29e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ded1a1faeff3ed16dbd320bbb24035a6db21d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ded1a1faeff3ed16dbd320bbb24035a6db21d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ded1a1faeff3ed16dbd320bbb24035a6db21d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ded1a1faeff3ed16dbd320bbb24035a6db21d45/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "73c966cbf5352c4de4ed2cc0492f8ba8df2ddbde", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ded1a1faeff3ed16dbd320bbb24035a6db21d45/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ded1a1faeff3ed16dbd320bbb24035a6db21d45/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=1ded1a1faeff3ed16dbd320bbb24035a6db21d45", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -555,6 +555,43 @@ package body Sem_Ch11 is\n    --  field if one is present.\n \n    procedure Analyze_Raise_xxx_Error (N : Node_Id) is\n+\n+      function Same_Expression (C1, C2 : Node_Id) return Boolean;\n+      --  It often occurs that two identical raise statements are generated in\n+      --  succession (for example when dynamic elaboration checks take place on\n+      --  separate expressions in a call). If the two statements are identical\n+      --  according to the simple criterion that follows, the raise is\n+      --  converted into a null statement.\n+\n+      ---------------------\n+      -- Same_Expression --\n+      ---------------------\n+\n+      function Same_Expression (C1, C2 : Node_Id) return Boolean is\n+      begin\n+         if No (C1) and then No (C2) then\n+            return True;\n+\n+         elsif Is_Entity_Name (C1) and then Is_Entity_Name (C2) then\n+            return Entity (C1) = Entity (C2);\n+\n+         elsif Nkind (C1) /= Nkind (C2) then\n+            return False;\n+\n+         elsif Nkind (C1) in N_Unary_Op then\n+            return Same_Expression (Right_Opnd (C1), Right_Opnd (C2));\n+\n+         elsif Nkind (C1) in N_Binary_Op then\n+            return Same_Expression (Left_Opnd (C1), Left_Opnd (C2))\n+              and then Same_Expression (Right_Opnd (C1), Right_Opnd (C2));\n+\n+         else\n+            return False;\n+         end if;\n+      end Same_Expression;\n+\n+   --  Start of processing for Analyze_Raise_xxx_Error\n+\n    begin\n       if No (Etype (N)) then\n          Set_Etype (N, Standard_Void_Type);\n@@ -574,6 +611,20 @@ package body Sem_Ch11 is\n             Rewrite (N, Make_Null_Statement (Sloc (N)));\n          end if;\n       end if;\n+\n+      --  Remove duplicate raise statements. Note that the previous one may\n+      --  already have been removed as well.\n+\n+      if not Comes_From_Source (N)\n+        and then Nkind (N) /= N_Null_Statement\n+        and then Is_List_Member (N)\n+        and then Present (Prev (N))\n+        and then Nkind (N) = Nkind (Original_Node (Prev (N)))\n+        and then Same_Expression\n+                   (Condition (N), Condition (Original_Node (Prev (N))))\n+      then\n+         Rewrite (N, Make_Null_Statement (Sloc (N)));\n+      end if;\n    end Analyze_Raise_xxx_Error;\n \n    -----------------------------"}]}