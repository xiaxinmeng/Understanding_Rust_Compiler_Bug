{"sha": "6356b546458da84c63596f9a377593de262e06bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM1NmI1NDY0NThkYTg0YzYzNTk2ZjlhMzc3NTkzZGUyNjJlMDZiZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2005-05-08T09:16:47Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-05-08T09:16:47Z"}, "message": "integrate.h (get_hard_reg_initial_val): Change type of register parameter from int to unsigned int.\n\n\t* integrate.h (get_hard_reg_initial_val): Change type of register\n\tparameter from int to unsigned int.\n\t(has_hard_reg_initial_val): Likewise.\n\t* integrate.c (get_hard_reg_initial_val): Likewise.\n\t(has_hard_reg_initial_val): Likewise.  Remove cast to unsigned int.\n\nFrom-SVN: r99379", "tree": {"sha": "74b9e7d7a7bbf094f20379a4523e53ba0f1fb873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74b9e7d7a7bbf094f20379a4523e53ba0f1fb873"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6356b546458da84c63596f9a377593de262e06bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6356b546458da84c63596f9a377593de262e06bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6356b546458da84c63596f9a377593de262e06bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6356b546458da84c63596f9a377593de262e06bf/comments", "author": null, "committer": null, "parents": [{"sha": "88877022e7d306101d9353f65fc5145046460cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88877022e7d306101d9353f65fc5145046460cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88877022e7d306101d9353f65fc5145046460cc7"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "110aecd8741b9ebe8ce384ab0e91bf5e9c36519a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6356b546458da84c63596f9a377593de262e06bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6356b546458da84c63596f9a377593de262e06bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6356b546458da84c63596f9a377593de262e06bf", "patch": "@@ -1,3 +1,11 @@\n+2005-05-08  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* integrate.h (get_hard_reg_initial_val): Change type of register\n+\tparameter from int to unsigned int.\n+\t(has_hard_reg_initial_val): Likewise.\n+\t* integrate.c (get_hard_reg_initial_val): Likewise.\n+\t(has_hard_reg_initial_val): Likewise.  Remove cast to unsigned int.\n+\n 2005-05-08  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* except.c (eh_status): Change the type of ttype_data to"}, {"sha": "86bb875670fe2efef295110a9078d5b63f2d69b7", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6356b546458da84c63596f9a377593de262e06bf/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6356b546458da84c63596f9a377593de262e06bf/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=6356b546458da84c63596f9a377593de262e06bf", "patch": "@@ -297,7 +297,7 @@ get_hard_reg_initial_reg (struct function *fun, rtx reg)\n    initial value of hard register REGNO.  Return an rtx for such a pseudo.  */\n \n rtx\n-get_hard_reg_initial_val (enum machine_mode mode, int regno)\n+get_hard_reg_initial_val (enum machine_mode mode, unsigned int regno)\n {\n   struct initial_value_struct *ivs;\n   rtx rv;\n@@ -335,7 +335,7 @@ get_hard_reg_initial_val (enum machine_mode mode, int regno)\n    the associated pseudo if so, otherwise return NULL.  */\n \n rtx\n-has_hard_reg_initial_val (enum machine_mode mode, int regno)\n+has_hard_reg_initial_val (enum machine_mode mode, unsigned int regno)\n {\n   struct initial_value_struct *ivs;\n   int i;\n@@ -344,7 +344,7 @@ has_hard_reg_initial_val (enum machine_mode mode, int regno)\n   if (ivs != 0)\n     for (i = 0; i < ivs->num_entries; i++)\n       if (GET_MODE (ivs->entries[i].hard_reg) == mode\n-\t  && REGNO (ivs->entries[i].hard_reg) == (unsigned int) regno)\n+\t  && REGNO (ivs->entries[i].hard_reg) == regno)\n \treturn ivs->entries[i].pseudo;\n \n   return NULL_RTX;"}, {"sha": "10174cb9cb2682a72b06d4e00d357331554ea4e6", "filename": "gcc/integrate.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6356b546458da84c63596f9a377593de262e06bf/gcc%2Fintegrate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6356b546458da84c63596f9a377593de262e06bf/gcc%2Fintegrate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.h?ref=6356b546458da84c63596f9a377593de262e06bf", "patch": "@@ -21,12 +21,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"varray.h\"\n \n-/* Return a pseudo that corresponds to the value in the specified hard\n-   reg as of the start of the function (for inlined functions, the\n-   value at the start of the parent function).  */\n-extern rtx get_hard_reg_initial_val (enum machine_mode, int);\n-/* Likewise, but for common cases.  */\n-extern rtx has_hard_reg_initial_val (enum machine_mode, int);\n+extern rtx get_hard_reg_initial_val (enum machine_mode, unsigned int);\n+extern rtx has_hard_reg_initial_val (enum machine_mode, unsigned int);\n /* If a pseudo represents an initial hard reg (or expression), return\n    it, else return NULL_RTX.  */\n extern rtx get_hard_reg_initial_reg (struct function *, rtx);"}]}