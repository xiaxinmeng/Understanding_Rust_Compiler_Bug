{"sha": "f95969eabcd42f10aa4b4ae3c13015e417031523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1OTY5ZWFiY2Q0MmYxMGFhNGI0YWUzYzEzMDE1ZTQxNzAzMTUyMw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-10-31T17:45:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T17:45:59Z"}, "message": "mlib-tgt-lynxos.adb, [...]: Use Append_To, instead of Ext_To, when building the library file name\n\n2006-10-31  Vincent Celier  <celier@adacore.com>\n\t    Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* mlib-tgt-lynxos.adb, mlib-tgt-mingw.adb, mlib-tgt-tru64.adb,\n\tmlib-tgt-aix.adb, mlib-tgt-irix.adb, mlib-tgt-hpux.adb,\n\tmlib-tgt-linux.adb, mlib-tgt-solaris.adb: Use Append_To, instead of\n\tExt_To, when building the library file name\n\n\t* mlib-tgt-vxworks.adb: ditto.\n\t(Get_Target_Suffix): Add support for x86 targets.\n\n\t* mlib-fil.ads, mlib-fil.adb: (Append_To): New function\n\n\t* mlib-tgt-darwin.adb: \n\tUse Append_To, instead of Ext_To, when building the library file name\n\t(Flat_Namespace): New global variable.\n\t(No_Shared_Libgcc_Switch): Rename to No_Shared_Libgcc_Options.\n\t(Shared_Libgcc_Switch): Rename to With_Shared_Libgcc_Options.\n\t(Link_Shared_Libgcc): Delete.\n\t(Build_Dynamic_Library): Adjust for above changes.\n\tUse Opt package.\n\t(Build_Dynamic_Library): Pass -shared-libgcc if GCC 4 or later.\n\nFrom-SVN: r118237", "tree": {"sha": "9eefa1d8fa112714d0415cc8df0ba158cd0c34c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eefa1d8fa112714d0415cc8df0ba158cd0c34c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f95969eabcd42f10aa4b4ae3c13015e417031523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95969eabcd42f10aa4b4ae3c13015e417031523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95969eabcd42f10aa4b4ae3c13015e417031523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95969eabcd42f10aa4b4ae3c13015e417031523/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f28ded01c65008b47ef62f0be2a3e987ec1c5b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28ded01c65008b47ef62f0be2a3e987ec1c5b61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28ded01c65008b47ef62f0be2a3e987ec1c5b61"}], "stats": {"total": 569, "additions": 325, "deletions": 244}, "files": [{"sha": "7af1bc2feb6fa8032af6de0c940e5bedf7ca4b8e", "filename": "gcc/ada/mlib-fil.adb", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-fil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-fil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-fil.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -35,14 +35,43 @@ package body MLib.Fil is\n \n    package Target renames MLib.Tgt;\n \n+   ---------------\n+   -- Append_To --\n+   ---------------\n+\n+   function Append_To\n+     (Filename : String;\n+      Ext      : String) return String\n+   is\n+   begin\n+      if Ext'Length = 0 then\n+         return Filename;\n+\n+      elsif Filename (Filename'Last) = '.' then\n+         if Ext (Ext'First) = '.' then\n+            return Filename & Ext (Ext'First + 1 .. Ext'Last);\n+\n+         else\n+            return Filename & Ext;\n+         end if;\n+\n+      else\n+         if Ext (Ext'First) = '.' then\n+            return Filename & Ext;\n+\n+         else\n+            return Filename & '.' & Ext;\n+         end if;\n+      end if;\n+   end Append_To;\n+\n    ------------\n    -- Ext_To --\n    ------------\n \n    function Ext_To\n      (Filename : String;\n-      New_Ext  : String := \"\")\n-      return     String\n+      New_Ext  : String := \"\") return String\n    is\n       use Strings.Fixed;\n "}, {"sha": "3431dc77b59107a92b6bbbf19bf597380633ff6a", "filename": "gcc/ada/mlib-fil.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-fil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-fil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-fil.ads?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,9 +30,13 @@ package MLib.Fil is\n \n    function Ext_To\n      (Filename : String;\n-      New_Ext  : String := \"\")\n-      return     String;\n-   --  Return Filename with the extension change to New_Ext\n+      New_Ext  : String := \"\") return String;\n+   --  Return Filename with the extension changed to New_Ext\n+\n+   function Append_To\n+     (Filename : String;\n+      Ext      : String) return String;\n+   --  Return Filename with the extension Ext\n \n    function Get_Ext (Filename : String) return String;\n    --  Return extension of filename"}, {"sha": "12fb4694b86b7bc11c2abe3f0dd7d567c4a2e5a9", "filename": "gcc/ada/mlib-tgt-aix.adb", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-aix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-aix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-aix.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005, AdaCore                     --\n+--                     Copyright (C) 2003-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,7 +138,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   MLib.Fil.Append_To (Lib_Filename, DLL_Ext);\n       --  The file name of the library\n \n       Thread_Opts : Argument_List_Access := Empty_Argument_List;\n@@ -276,7 +276,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -287,25 +288,22 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Dir  : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n-\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -328,8 +326,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -338,10 +336,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "31f03083833a3e254ab93381f70a84205329bfbd", "filename": "gcc/ada/mlib-tgt-darwin.adb", "status": "modified", "additions": 45, "deletions": 32, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-darwin.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,18 +30,29 @@\n \n --  This is the Darwin version of the body\n \n+with MLib;     use MLib;\n with MLib.Fil;\n with MLib.Utl;\n-with Namet;  use Namet;\n-with Opt;\n-with Output; use Output;\n+with Namet;    use Namet;\n+with Opt;      use Opt;\n+with Output;   use Output;\n with Prj.Com;\n+\n with System;\n \n package body MLib.Tgt is\n \n-   use GNAT;\n-   use MLib;\n+   Flat_Namespace : aliased String := \"-Wl,-flat_namespace\";\n+   --  Instruct the linker to build the shared library as a flat\n+   --  namespace image. The default is a two-level namespace image.\n+\n+   Shared_Libgcc : aliased String := \"-shared-libgcc\";\n+\n+   No_Shared_Libgcc_Options   : aliased Argument_List :=\n+                                  (1 => Flat_Namespace'Access);\n+   With_Shared_Libgcc_Options : aliased Argument_List :=\n+                                  (1 => Flat_Namespace'Access,\n+                                   2 => Shared_Libgcc'Access);\n \n    ---------------------\n    -- Archive_Builder --\n@@ -114,9 +125,10 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   Fil.Append_To (Lib_Filename, DLL_Ext);\n+\n+      Shared_Options : Argument_List_Access;\n \n-      Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n    begin\n@@ -125,28 +137,31 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n+      --  Invoke gcc with -shared-libgcc, but only for GCC 4 or higher\n+\n+      if GCC_Version >= 4 then\n+         Shared_Options := With_Shared_Libgcc_Options'Access;\n+      else\n+         Shared_Options := No_Shared_Libgcc_Options'Access;\n+      end if;\n+\n       --  If specified, add automatic elaboration/finalization\n \n       if Lib_Version = \"\" then\n          Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Options,\n+            Options     => Options & Shared_Options.all,\n             Driver_Name => Driver_Name,\n             Options_2   => Options_2);\n \n       else\n-         --  Instruct the linker to build the shared library as a flat\n-         --  namespace image, which is not the default. The default is a two\n-         --  level namespace image.\n-\n-         Version_Arg := new String'(\"-Wl,-flat_namespace\");\n \n          if Is_Absolute_Path (Lib_Version) then\n             Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg,\n+               Options     => Options & Shared_Options.all,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -155,7 +170,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg,\n+               Options     => Options & Shared_Options.all,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed :=\n@@ -258,7 +273,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -268,25 +284,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -309,19 +323,18 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n             Name_Buffer (1 .. Name_Len) := \"lib\";\n \n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "985667d7200a180ca163223ae4decf0d800b5934", "filename": "gcc/ada/mlib-tgt-hpux.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-hpux.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005, AdaCore                     --\n+--                     Copyright (C) 2003-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,7 +111,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   MLib.Fil.Append_To (Lib_Filename, DLL_Ext);\n \n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n@@ -256,7 +256,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -266,25 +267,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -307,8 +306,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -317,10 +316,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "2df88abe88d1176375f04726028edf02304591e2", "filename": "gcc/ada/mlib-tgt-irix.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-irix.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005, AdaCore                     --\n+--                     Copyright (C) 2003-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,7 +111,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   MLib.Fil.Append_To (Lib_Filename, DLL_Ext);\n \n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n@@ -294,7 +294,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -304,25 +305,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -345,8 +344,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -355,10 +354,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "737a40a9ee84b13330b128df79e8a67ec7445ba4", "filename": "gcc/ada/mlib-tgt-linux.adb", "status": "modified", "additions": 114, "deletions": 65, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-linux.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -115,7 +115,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   Fil.Append_To (Lib_Filename, DLL_Ext);\n \n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n@@ -135,53 +135,104 @@ package body MLib.Tgt is\n             Options_2   => Options_2);\n \n       else\n-         Version_Arg := new String'(\"-Wl,-soname,\" & Lib_Version);\n-\n-         if Is_Absolute_Path (Lib_Version) then\n-            Utl.Gcc\n-              (Output_File => Lib_Version,\n-               Objects     => Ofiles,\n-               Options     => Options & Version_Arg,\n-               Driver_Name => Driver_Name,\n-               Options_2   => Options_2);\n-            Symbolic_Link_Needed := Lib_Version /= Lib_File;\n-\n-         else\n-            Utl.Gcc\n-              (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n-               Objects     => Ofiles,\n-               Options     => Options & Version_Arg,\n-               Driver_Name => Driver_Name,\n-               Options_2   => Options_2);\n-            Symbolic_Link_Needed :=\n-              Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n-         end if;\n-\n-         if Symbolic_Link_Needed then\n-            declare\n-               Success : Boolean;\n-               Oldpath : String (1 .. Lib_Version'Length + 1);\n-               Newpath : String (1 .. Lib_File'Length + 1);\n-\n-               Result : Integer;\n-               pragma Unreferenced (Result);\n-\n-               function Symlink\n-                 (Oldpath : System.Address;\n-                  Newpath : System.Address) return Integer;\n-               pragma Import (C, Symlink, \"__gnat_symlink\");\n-\n-            begin\n-               Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n-               Oldpath (Oldpath'Last)            := ASCII.NUL;\n-               Newpath (1 .. Lib_File'Length)    := Lib_File;\n-               Newpath (Newpath'Last)            := ASCII.NUL;\n-\n-               Delete_File (Lib_File, Success);\n-\n-               Result := Symlink (Oldpath'Address, Newpath'Address);\n-            end;\n-         end if;\n+         declare\n+            Maj_Version : constant String := Lib_Version;\n+            Last_Maj    : Positive := Maj_Version'Last;\n+            Last        : Positive;\n+            Ok_Maj      : Boolean := False;\n+         begin\n+            while Last_Maj > Maj_Version'First loop\n+               if Maj_Version (Last_Maj) in '0' .. '9' then\n+                  Last_Maj := Last_Maj - 1;\n+\n+               else\n+                  Ok_Maj := Last_Maj /= Maj_Version'Last and then\n+                            Maj_Version (Last_Maj) = '.';\n+\n+                  if Ok_Maj then\n+                     Last_Maj := Last_Maj - 1;\n+                  end if;\n+\n+                  exit;\n+               end if;\n+            end loop;\n+\n+            if Ok_Maj then\n+               Last := Last_Maj;\n+\n+               while Last > Maj_Version'First loop\n+                  if Maj_Version (Last) in '0' .. '9' then\n+                     Last := Last - 1;\n+\n+                  else\n+                     Ok_Maj := Last /= Last_Maj and then\n+                               Maj_Version (Last) = '.';\n+\n+                     if Ok_Maj then\n+                        Last := Last - 1;\n+\n+                        Ok_Maj := Maj_Version (1 .. Last) = Lib_File;\n+                     end if;\n+\n+                     exit;\n+                  end if;\n+               end loop;\n+            end if;\n+\n+            if Ok_Maj then\n+               Version_Arg := new String'(\"-Wl,-soname,\" &\n+                                          Maj_Version (1 .. Last_Maj));\n+\n+            else\n+               Version_Arg := new String'(\"-Wl,-soname,\" & Lib_Version);\n+            end if;\n+\n+            if Is_Absolute_Path (Lib_Version) then\n+               Utl.Gcc\n+                 (Output_File => Lib_Version,\n+                  Objects     => Ofiles,\n+                  Options     => Options & Version_Arg,\n+                  Driver_Name => Driver_Name,\n+                  Options_2   => Options_2);\n+               Symbolic_Link_Needed := Lib_Version /= Lib_File;\n+\n+            else\n+               Utl.Gcc\n+                 (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n+                  Objects     => Ofiles,\n+                  Options     => Options & Version_Arg,\n+                  Driver_Name => Driver_Name,\n+                  Options_2   => Options_2);\n+               Symbolic_Link_Needed :=\n+                 Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n+            end if;\n+\n+            if Symbolic_Link_Needed then\n+               declare\n+                  Success : Boolean;\n+                  Oldpath : String (1 .. Lib_Version'Length + 1);\n+                  Newpath : String (1 .. Lib_File'Length + 1);\n+\n+                  Result : Integer;\n+                  pragma Unreferenced (Result);\n+\n+                  function Symlink\n+                    (Oldpath : System.Address;\n+                     Newpath : System.Address) return Integer;\n+                  pragma Import (C, Symlink, \"__gnat_symlink\");\n+\n+               begin\n+                  Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n+                  Oldpath (Oldpath'Last)            := ASCII.NUL;\n+                  Newpath (1 .. Lib_File'Length)    := Lib_File;\n+                  Newpath (Newpath'Last)            := ASCII.NUL;\n+\n+                  Delete_File (Lib_File, Success);\n+\n+                  Result := Symlink (Oldpath'Address, Newpath'Address);\n+               end;\n+            end if;\n+         end;\n       end if;\n    end Build_Dynamic_Library;\n \n@@ -253,7 +304,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -263,25 +315,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-                 Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -304,8 +354,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -314,10 +364,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n                  Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "4da0d4ab81f7b2db9f07f8404d3e746adb9ab985", "filename": "gcc/ada/mlib-tgt-lynxos.adb", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-lynxos.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2003-2005 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2003-2006 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -184,7 +184,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -194,25 +195,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -235,8 +234,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -245,10 +244,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "675f015217597c48ae35cdbe03771618564463da", "filename": "gcc/ada/mlib-tgt-mingw.adb", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-mingw.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator &\n-                   Files.Ext_To (Lib_Filename, DLL_Ext);\n+                   Files.Append_To (Lib_Filename, DLL_Ext);\n \n    --  Start of processing for Build_Dynamic_Library\n \n@@ -205,7 +205,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean is\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n          Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n@@ -214,25 +215,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  MLib.Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  MLib.Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator &\n-                  MLib.Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  MLib.Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -254,20 +253,20 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n                Name_Len := 3;\n                Name_Buffer (1 .. Name_Len) := \"lib\";\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                Name_Len := 0;\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "a66753e2c6cc2ccdd8e1ff6f3d8a8d2fb8911410", "filename": "gcc/ada/mlib-tgt-solaris.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-solaris.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2002-2005 Free Software Foundation, Inc.      --\n+--              Copyright (C) 2002-2006 Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,7 +111,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   Fil.Append_To (Lib_Filename, DLL_Ext);\n \n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n@@ -250,7 +250,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -260,25 +261,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -301,8 +300,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -311,10 +310,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "a211d6508694127ac304f18b25de0e57729646be", "filename": "gcc/ada/mlib-tgt-tru64.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-tru64.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -117,7 +117,7 @@ package body MLib.Tgt is\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n-                   Fil.Ext_To (Lib_Filename, DLL_Ext);\n+                   Fil.Append_To (Lib_Filename, DLL_Ext);\n \n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n@@ -260,7 +260,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -270,25 +271,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -311,8 +310,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -321,10 +320,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}, {"sha": "b9e24afb22727cf4e12283875a798fca02471eee", "filename": "gcc/ada/mlib-tgt-vxworks.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95969eabcd42f10aa4b4ae3c13015e417031523/gcc%2Fada%2Fmlib-tgt-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vxworks.adb?ref=f95969eabcd42f10aa4b4ae3c13015e417031523", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2003-2005 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2003-2006 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -179,6 +179,8 @@ package body MLib.Tgt is\n          return \"sparc64\";\n       elsif Target_Name (Target_Name'First .. Index) = \"xscale\" then\n          return \"arm\";\n+      elsif Target_Name (Target_Name'First .. Index) = \"i586\" then\n+         return \"pentium\";\n       else\n          return \"\";\n       end if;\n@@ -225,7 +227,8 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Boolean\n    is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n@@ -235,25 +238,23 @@ package body MLib.Tgt is\n \n       else\n          declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n \n             else\n                return Is_Regular_File\n                  (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n          end;\n       end if;\n@@ -276,8 +277,8 @@ package body MLib.Tgt is\n       else\n          declare\n             Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n \n          begin\n             Name_Len := 3;\n@@ -286,10 +287,9 @@ package body MLib.Tgt is\n             if In_Tree.Projects.Table (Project).Library_Kind =\n               Static\n             then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n             else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n             end if;\n \n             return Name_Find;"}]}