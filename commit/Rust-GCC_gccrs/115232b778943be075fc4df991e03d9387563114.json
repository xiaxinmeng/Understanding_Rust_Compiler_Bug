{"sha": "115232b778943be075fc4df991e03d9387563114", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE1MjMyYjc3ODk0M2JlMDc1ZmM0ZGY5OTFlMDNkOTM4NzU2MzExNA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-05-15T22:51:11Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-05-15T22:51:11Z"}, "message": "c++: decltype of invalid non-dependent expr [PR57943]\n\nWe sometimes fail to reject an invalid non-dependent operand to decltype\nwhen inside a template, because finish_decltype_type resolves the\ndecltype to the TREE_TYPE of the operand before we ever instantiate and\nfully process the operand.  Fix this by adding a call to\ninstantiate_non_dependent_expr_sfinae in finish_decltype_type.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/57943\n\t* semantics.c (finish_decltype_type): Call\n\tinstantiate_non_dependent_expr_sfinae on the expression.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/57943\n\t* g++.dg/cpp0x/decltype76.C: New test.", "tree": {"sha": "f9efb9c61ff16ac50f01e0f92a1eda1adac2a6b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9efb9c61ff16ac50f01e0f92a1eda1adac2a6b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/115232b778943be075fc4df991e03d9387563114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115232b778943be075fc4df991e03d9387563114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115232b778943be075fc4df991e03d9387563114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115232b778943be075fc4df991e03d9387563114/comments", "author": null, "committer": null, "parents": [{"sha": "9d495e725084b5464b17911a11fddfda3a3d906f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d495e725084b5464b17911a11fddfda3a3d906f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d495e725084b5464b17911a11fddfda3a3d906f"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "4b9fc52b6e3138a19a70acca7288e4a6a5a88891", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115232b778943be075fc4df991e03d9387563114/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115232b778943be075fc4df991e03d9387563114/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=115232b778943be075fc4df991e03d9387563114", "patch": "@@ -1,3 +1,9 @@\n+2020-05-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/57943\n+\t* semantics.c (finish_decltype_type): Call\n+\tinstantiate_non_dependent_expr_sfinae on the expression.\n+\n 2020-05-15  Patrick Palka  <ppalka@redhat.com>\n \n \tRevert:"}, {"sha": "64587c791c67950f1ca85587e9d7575f7068dfc1", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115232b778943be075fc4df991e03d9387563114/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115232b778943be075fc4df991e03d9387563114/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=115232b778943be075fc4df991e03d9387563114", "patch": "@@ -9746,6 +9746,14 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n \n       return type;\n     }\n+  else if (processing_template_decl)\n+    {\n+      ++cp_unevaluated_operand;\n+      expr = instantiate_non_dependent_expr_sfinae (expr, complain);\n+      --cp_unevaluated_operand;\n+      if (expr == error_mark_node)\n+\treturn error_mark_node;\n+    }\n \n   /* The type denoted by decltype(e) is defined as follows:  */\n "}, {"sha": "a7f777118f2614e7342399c3c941669f97985697", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115232b778943be075fc4df991e03d9387563114/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115232b778943be075fc4df991e03d9387563114/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=115232b778943be075fc4df991e03d9387563114", "patch": "@@ -1,3 +1,8 @@\n+2020-05-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/57943\n+\t* g++.dg/cpp0x/decltype76.C: New test.\n+\n 2020-05-15  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/coroutines/coro.h: Always #include <utility>."}, {"sha": "239fe6d2a8f269127e8a9b4ef7ebeefcbc3da977", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype76.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115232b778943be075fc4df991e03d9387563114/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype76.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115232b778943be075fc4df991e03d9387563114/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype76.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype76.C?ref=115232b778943be075fc4df991e03d9387563114", "patch": "@@ -0,0 +1,7 @@\n+// PR c+/57943\n+// { dg-do compile { target c++11 } }\n+\n+struct a { };\n+\n+template <typename T = decltype (a(0))> // { dg-error \"\" }\n+void f() { }"}]}