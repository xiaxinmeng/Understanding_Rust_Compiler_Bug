{"sha": "8e27715a9a56c41c74b8af878a3fd6503a1285bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyNzcxNWE5YTU2YzQxYzc0YjhhZjg3OGEzZmQ2NTAzYTEyODViZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-03T21:25:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-03T21:25:11Z"}, "message": "(build_complex): Set the TREE_TYPE based on real part.\n\nFrom-SVN: r3625", "tree": {"sha": "9cafc2f2378ebce6e96c0311a87851324ca95a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cafc2f2378ebce6e96c0311a87851324ca95a5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e27715a9a56c41c74b8af878a3fd6503a1285bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e27715a9a56c41c74b8af878a3fd6503a1285bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e27715a9a56c41c74b8af878a3fd6503a1285bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e27715a9a56c41c74b8af878a3fd6503a1285bf/comments", "author": null, "committer": null, "parents": [{"sha": "742e43a2fac36dbe9640552002b1404dc094e5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742e43a2fac36dbe9640552002b1404dc094e5d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742e43a2fac36dbe9640552002b1404dc094e5d9"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "36f5a94c47cf54710ad1777b3f158a5985ddfbcd", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e27715a9a56c41c74b8af878a3fd6503a1285bf/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e27715a9a56c41c74b8af878a3fd6503a1285bf/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=8e27715a9a56c41c74b8af878a3fd6503a1285bf", "patch": "@@ -1227,6 +1227,7 @@ build_complex (real, imag)\n   register tree t = make_node (COMPLEX_CST);\n   TREE_REALPART (t) = real;\n   TREE_IMAGPART (t) = imag;\n+  TREE_TYPE (t) = build_complex_type (TREE_TYPE (real));\n   return t;\n }\n "}]}