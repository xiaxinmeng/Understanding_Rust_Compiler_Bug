{"sha": "4b054b8004c01fbdc368f1adfbc35681ec63f435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIwNTRiODAwNGMwMWZiZGMzNjhmMWFkZmJjMzU2ODFlYzYzZjQzNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-08-17T12:26:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-08-17T12:26:39Z"}, "message": "cp-tree.h (CPTR_AGGR_TAG): New global tree node.\n\n\t* cp-tree.h (CPTR_AGGR_TAG): New global tree node.\n\t(current_aggr): Define.\n\t* decl.c (grokdeclarator): Make sure a friend class is an\n\telaborated type specifier.\n\t* parse.y (current_aggr): Remove static definition.\n\t(cp_parse_init): Adjust.\n\t(structsp): Clear and restore current_aggr.\n\t(component_decl_list): Clear current_aggr.\n\n\t* error.c (dump_type, case TYPENAME_TYPE): Don't emit the\n\taggregate tag on the typename's context.\n\n\t* pt.c (tsubst_friend_class): Return NULL, if parms becomes NULL.\n\t(instantiate_class_template): Ignore NULL friend types.\n\nFrom-SVN: r35755", "tree": {"sha": "dc83201e24e209489973c8e23767f94b2ee9b3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc83201e24e209489973c8e23767f94b2ee9b3ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b054b8004c01fbdc368f1adfbc35681ec63f435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b054b8004c01fbdc368f1adfbc35681ec63f435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b054b8004c01fbdc368f1adfbc35681ec63f435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b054b8004c01fbdc368f1adfbc35681ec63f435/comments", "author": null, "committer": null, "parents": [{"sha": "07745bdb36b003562aadda9564917e0413c7b403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07745bdb36b003562aadda9564917e0413c7b403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07745bdb36b003562aadda9564917e0413c7b403"}], "stats": {"total": 58, "additions": 47, "deletions": 11}, "files": [{"sha": "d92ba161a2fd9b90526b72234efbe839f6a9eadd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b054b8004c01fbdc368f1adfbc35681ec63f435", "patch": "@@ -1,3 +1,20 @@\n+2000-08-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (CPTR_AGGR_TAG): New global tree node.\n+\t(current_aggr): Define.\n+\t* decl.c (grokdeclarator): Make sure a friend class is an\n+\telaborated type specifier.\n+\t* parse.y (current_aggr): Remove static definition.\n+\t(cp_parse_init): Adjust.\n+\t(structsp): Clear and restore current_aggr.\n+\t(component_decl_list): Clear current_aggr.\n+\t\n+\t* error.c (dump_type, case TYPENAME_TYPE): Don't emit the\n+\taggregate tag on the typename's context.\n+\t\n+\t* pt.c (tsubst_friend_class): Return NULL, if parms becomes NULL.\n+\t(instantiate_class_template): Ignore NULL friend types.\n+\n 2000-08-14  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cvt.c (warn_ref_binding): New static function, broken out of ..."}, {"sha": "f5a38bab17c1575ba083712666bda2bba38c0ddc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=4b054b8004c01fbdc368f1adfbc35681ec63f435", "patch": "@@ -592,6 +592,7 @@ enum cp_tree_index\n     CPTI_TINFO_VAR_ID,\n     CPTI_ABORT_FNDECL,\n     CPTI_GLOBAL_DELETE_FNDECL,\n+    CPTI_AGGR_TAG,\n \n     CPTI_ACCESS_DEFAULT,\n     CPTI_ACCESS_PUBLIC,\n@@ -686,6 +687,7 @@ extern tree cp_global_trees[CPTI_MAX];\n #define tinfo_var_id                    cp_global_trees[CPTI_TINFO_VAR_ID]\n #define abort_fndecl\t\t\tcp_global_trees[CPTI_ABORT_FNDECL]\n #define global_delete_fndecl\t\tcp_global_trees[CPTI_GLOBAL_DELETE_FNDECL]\n+#define current_aggr\t\t\tcp_global_trees[CPTI_AGGR_TAG]\n \n /* Define the sets of attributes that member functions and baseclasses\n    can have.  These are sensible combinations of {public,private,protected}"}, {"sha": "e41562809b5327580a9d4536f2480ac381a5ad92", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4b054b8004c01fbdc368f1adfbc35681ec63f435", "patch": "@@ -11220,6 +11220,13 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t      cp_error (\"`inline' specified for friend class declaration\");\n \t      inlinep = 0;\n \t    }\n+\t  if (!current_aggr && TREE_CODE (type) != TYPENAME_TYPE)\n+\t    {\n+\t      if (TREE_CODE (type) == TEMPLATE_TYPE_PARM)\n+\t        cp_error (\"template parameters cannot be friends\");\n+\t      else\n+\t        cp_error (\"friend declaration requires `%#T'\", type);\n+\t    }\n \n \t  /* Only try to do this stuff if we didn't already give up.  */\n \t  if (type != integer_type_node)"}, {"sha": "fb8ff389eec67be4268b28435188781a3e9b6772", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=4b054b8004c01fbdc368f1adfbc35681ec63f435", "patch": "@@ -457,7 +457,7 @@ dump_type (t, flags)\n     }\n     case TYPENAME_TYPE:\n       OB_PUTS (\"typename \");\n-      dump_type (TYPE_CONTEXT (t), flags);\n+      dump_type (TYPE_CONTEXT (t), flags & ~TS_AGGR_TAGS);\n       OB_PUTS (\"::\");\n       dump_decl (TYPENAME_TYPE_FULLNAME (t), flags);\n       break;"}, {"sha": "49785f29c4a45a8e47baf3b91fb56893e897eb80", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=4b054b8004c01fbdc368f1adfbc35681ec63f435", "patch": "@@ -77,10 +77,6 @@ static tree current_declspecs;\n    a declspec list have been updated.  */\n static tree prefix_attributes;\n \n-/* When defining an aggregate, this is the kind of the most recent one\n-   being defined.  (For example, this might be class_type_node.)  */\n-static tree current_aggr;\n-\n /* When defining an enumeration, this is the type of the enumeration.  */\n static tree current_enum_type;\n \n@@ -213,7 +209,6 @@ cp_parse_init ()\n {\n   ggc_add_tree_root (&current_declspecs, 1);\n   ggc_add_tree_root (&prefix_attributes, 1);\n-  ggc_add_tree_root (&current_aggr, 1);\n   ggc_add_tree_root (&current_enum_type, 1);\n }\n %}\n@@ -2242,17 +2237,26 @@ structsp:\n \t\t    cp_pedwarn (\"using `typename' outside of template\"); }\n \t/* C++ extensions, merged with C to avoid shift/reduce conflicts */\n \t| class_head '{'\n-                { $1.t = begin_class_definition ($1.t); }\n+                { $1.t = begin_class_definition ($1.t); \n+                  current_aggr = NULL_TREE; }\n           opt.component_decl_list '}' maybe_attribute\n \t\t{ \n \t\t  int semi;\n+\t\t  tree t;\n \n \t\t  if (yychar == YYEMPTY)\n \t\t    yychar = YYLEX;\n \t\t  semi = yychar == ';';\n \n-\t\t  $<ttype>$ = finish_class_definition ($1.t, $6, semi,\n-\t\t\t\t\t\t       $1.new_type_flag); \n+\t\t  t = finish_class_definition ($1.t, $6, semi,\n+\t\t\t\t\t       $1.new_type_flag); \n+\t\t  $<ttype>$ = t;\n+\n+\t\t  /* restore current_aggr */\n+\t\t  current_aggr = TREE_CODE (t) != RECORD_TYPE\n+\t\t\t\t ? union_type_node\n+\t\t\t\t : CLASSTYPE_DECLARED_CLASS (t)\n+\t\t\t\t ? class_type_node : record_type_node;\n \t\t}\n \t  pending_defargs\n                 {\n@@ -2514,10 +2518,12 @@ component_decl_list:\n \t  component_decl\n \t\t{ \n \t\t  finish_member_declaration ($1);\n+\t\t  current_aggr = NULL_TREE;\n \t\t}\n \t| component_decl_list component_decl\n \t\t{ \n \t\t  finish_member_declaration ($2);\n+\t\t  current_aggr = NULL_TREE;\n \t\t}\n \t;\n "}, {"sha": "302d962118ea5063bacc12abf8351f0b5e45df0c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b054b8004c01fbdc368f1adfbc35681ec63f435/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4b054b8004c01fbdc368f1adfbc35681ec63f435", "patch": "@@ -4677,7 +4677,8 @@ tsubst_friend_function (decl, args)\n /* FRIEND_TMPL is a friend TEMPLATE_DECL.  ARGS is the vector of\n    template arguments, as for tsubst.\n \n-   Returns an appropriate tsbust'd friend type.  */\n+   Returns an appropriate tsbust'd friend type or error_mark_node on\n+   failure.  */\n \n static tree\n tsubst_friend_class (friend_tmpl, args)\n@@ -4718,6 +4719,8 @@ tsubst_friend_class (friend_tmpl, args)\n       tree parms \n \t= tsubst_template_parms (DECL_TEMPLATE_PARMS (friend_tmpl),\n \t\t\t\t args, /*complain=*/1);\n+      if (!parms)\n+        return error_mark_node;\n       redeclare_class_template (TREE_TYPE (tmpl), parms);\n       friend_type = TREE_TYPE (tmpl);\n     }\n@@ -5144,7 +5147,8 @@ instantiate_class_template (type)\n \t   information.  */\n \t++processing_template_decl;\n \n-      make_friend_class (type, new_friend_type);\n+      if (new_friend_type != error_mark_node)\n+        make_friend_class (type, new_friend_type);\n \n       if (TREE_CODE (friend_type) == TEMPLATE_DECL)\n \t--processing_template_decl;"}]}