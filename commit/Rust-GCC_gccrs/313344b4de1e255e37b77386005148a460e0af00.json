{"sha": "313344b4de1e255e37b77386005148a460e0af00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzMzQ0YjRkZTFlMjU1ZTM3Yjc3Mzg2MDA1MTQ4YTQ2MGUwYWYwMA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-05-22T06:55:21Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-05-22T06:55:21Z"}, "message": "mprec.c (mult, [...]): Add parenthesis to avoid warnings.\n\n\t* java/lang/mprec.c (mult, lshift, b2d, d2b): Add parenthesis to\n\tavoid warnings.\n\nFrom-SVN: r100057", "tree": {"sha": "aa0282e19d5a617b2f0dcbecc7eee3ef1c7b6ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa0282e19d5a617b2f0dcbecc7eee3ef1c7b6ae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/313344b4de1e255e37b77386005148a460e0af00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313344b4de1e255e37b77386005148a460e0af00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313344b4de1e255e37b77386005148a460e0af00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313344b4de1e255e37b77386005148a460e0af00/comments", "author": null, "committer": null, "parents": [{"sha": "cc7e6e8fbe4f63ee87ba505b15b76e9598a0e002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc7e6e8fbe4f63ee87ba505b15b76e9598a0e002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc7e6e8fbe4f63ee87ba505b15b76e9598a0e002"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "236dd4f6e753f512eb2bb0b2230b653d9ec0f530", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313344b4de1e255e37b77386005148a460e0af00/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313344b4de1e255e37b77386005148a460e0af00/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=313344b4de1e255e37b77386005148a460e0af00", "patch": "@@ -1,3 +1,8 @@\n+2005-05-22  Andreas Jaeger  <aj@suse.de>\n+\n+\t* java/lang/mprec.c (mult, lshift, b2d, d2b): Add parenthesis to\n+\tavoid warnings.\n+\n 2005-05-21  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* testsuite/libjava.jacks/jacks.xfail: Remove 3.10.2-round-6.\n@@ -9,7 +14,7 @@\n 2005-05-19  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/lang/natClassLoader.cc (_Jv_NewClass): Use\n-\t_Jv_RegisterInitiatingLoader to register array classes, not \n+\t_Jv_RegisterInitiatingLoader to register array classes, not\n \t_Jv_RegisterClass.\n \t(_Jv_RegisterInitiatingLoader): Give up if called very early during\n \tbootstrapping. Add a FIXME to handle this case better.\n@@ -55,9 +60,9 @@\n \tUse AC_CHECK_SIZEOF instead of AC_COMPILE_CHECK_SIZEOF.\n \t* aclocal.m4, configure, config.h.in, include/config.h.in,\n \tMakefile.in, include/Makefile.in, testsuite/Makefile.in,\n-\texternal/Makefile.in, external/sax/Makefile.in, \n+\texternal/Makefile.in, external/sax/Makefile.in,\n \texternal/w3c_dom/Makefile.in, gcj/Makefile.in: Regenerate.\n-\t\n+\n 2005-05-17  David Daney  <ddaney@avtrex.com>\n \n \tPR libgcj/18220\n@@ -169,7 +174,7 @@\n \t(gcj::verbose_class_flag): Move definition here.\n \t(_Jv_Linker::wait_for_state): Don't call verify_class\n \tif gcj::verifyClasses is not set.\n-\t* gij.cc (main): Set gcj::verifyClasses when '-noverify' is given.\t\n+\t* gij.cc (main): Set gcj::verifyClasses when '-noverify' is given.\n \n 2005-05-12  Aaron Luchko  <aluchko@redhat.com>\n \n@@ -411,7 +416,7 @@\n 2005-04-29  Andrew Haley  <aph@redhat.com>\n \n \t* java/lang/Class.h (_Jv_ResolvePoolEntry): Declare as friend.\n-\t\n+\n 2005-04-29  Dalibor Topic  <robilad@kaffe.org>\n \n \t* java/nio/channels/FileChannelImpl.java\n@@ -2486,7 +2491,7 @@\n \t(getLinearDay): Should be private.\n \n 2005-03-23  Tom Tromey  <tromey@redhat.com>\n- \n+\n \t* include/jvm.h (GCJ_40_BC_ABI_VERSION): New define.\n \t(_Jv_CheckABIVersion): Use it.\n \n@@ -6258,7 +6263,7 @@\n \t(setRowSelectionInterval): Likewise.\n \t(removeColumnSelectionInterval): Likewise.\n \t(removeRowSelectionInterval): Likewise.\n- \t(isColumnSelected): Likewise.\n+\t(isColumnSelected): Likewise.\n \t(isRowSelected): Likewise.\n \t(isCellSelected): Likewise.\n \t(selectAll): Likewise.\n@@ -7544,4 +7549,3 @@\n 2005-01-01  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* include/boehm-gc.h: Include gc_ext_config.h, not gc_config.h.\n-"}, {"sha": "00679ed391833932d0b9affbb60b75cb8689a8bf", "filename": "libjava/java/lang/mprec.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313344b4de1e255e37b77386005148a460e0af00/libjava%2Fjava%2Flang%2Fmprec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313344b4de1e255e37b77386005148a460e0af00/libjava%2Fjava%2Flang%2Fmprec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Fmprec.c?ref=313344b4de1e255e37b77386005148a460e0af00", "patch": "@@ -385,7 +385,7 @@ _DEFUN (mult, (ptr, a, b), struct _Jv_reent * ptr _AND _Jv_Bigint * a _AND _Jv_B\n #else\n   for (; xb < xbe; xc0++)\n     {\n-      if (y = *xb++)\n+      if ((y = *xb++))\n \t{\n \t  x = xa;\n \t  xc = xc0;\n@@ -488,11 +488,11 @@ _DEFUN (lshift, (ptr, b, k), struct _Jv_reent * ptr _AND _Jv_Bigint * b _AND int\n       z = 0;\n       do\n \t{\n-\t  *x1++ = *x << k & 0xffff | z;\n+\t  *x1++ = (*x << k & 0xffff) | z;\n \t  z = *x++ >> k1;\n \t}\n       while (x < xe);\n-      if (*x1 = z)\n+      if ((*x1 = z))\n \t++n1;\n     }\n #endif\n@@ -718,18 +718,18 @@ _DEFUN (b2d, (a, e),\n   if (k < Ebits + 16)\n     {\n       z = xa > xa0 ? *--xa : 0;\n-      d0 = Exp_1 | y << k - Ebits | z >> Ebits + 16 - k;\n+      d0 = Exp_1 | y << (k - Ebits) | z >> (Ebits + 16 - k);\n       w = xa > xa0 ? *--xa : 0;\n       y = xa > xa0 ? *--xa : 0;\n-      d1 = z << k + 16 - Ebits | w << k - Ebits | y >> 16 + Ebits - k;\n+      d1 = z << (k + 16 - Ebits) | w << (k - Ebits) | y >> (16 + Ebits - k);\n       goto ret_d;\n     }\n   z = xa > xa0 ? *--xa : 0;\n   w = xa > xa0 ? *--xa : 0;\n   k -= Ebits + 16;\n-  d0 = Exp_1 | y << k + 16 | z << k | w >> 16 - k;\n+  d0 = Exp_1 | y << (k + 16) | z << k | w >> (16 - k);\n   y = xa > xa0 ? *--xa : 0;\n-  d1 = w << k + 16 | y << k;\n+  d1 = w << (k + 16) | y << k;\n #endif\n ret_d:\n #ifdef VAX\n@@ -812,22 +812,22 @@ _DEFUN (d2b,\n #endif\n     }\n #else\n-  if (y = d1)\n+  if ((y = d1))\n     {\n-      if (k = lo0bits (&y))\n+      if ((k = lo0bits (&y)))\n \tif (k >= 16)\n \t  {\n-\t    x[0] = y | z << 32 - k & 0xffff;\n-\t    x[1] = z >> k - 16 & 0xffff;\n+\t    x[0] = y | (z << (32 - k) & 0xffff);\n+\t    x[1] = z >> (k - 16) & 0xffff;\n \t    x[2] = z >> k;\n \t    i = 2;\n \t  }\n \telse\n \t  {\n \t    x[0] = y & 0xffff;\n-\t    x[1] = y >> 16 | z << 16 - k & 0xffff;\n+\t    x[1] = (y >> 16 | z << (16 - k)) & 0xffff;\n \t    x[2] = z >> k & 0xffff;\n-\t    x[3] = z >> k + 16;\n+\t    x[3] = z >> (k + 16);\n \t    i = 3;\n \t  }\n       else"}]}