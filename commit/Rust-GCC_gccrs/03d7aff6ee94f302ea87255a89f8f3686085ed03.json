{"sha": "03d7aff6ee94f302ea87255a89f8f3686085ed03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNkN2FmZjZlZTk0ZjMwMmVhODcyNTVhODlmOGYzNjg2MDg1ZWQwMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-25T09:42:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-25T09:42:46Z"}, "message": "re PR libstdc++/57065 (incorrect default allocator template for debug and profile unordered_map)\n\n2013-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/57065\n\t* include/debug/unordered_map (unordered_map, unordered_multimap):\n\tFix default allocator type.\n\t* include/profile/unordered_map (unordered_map, unordered_multimap):\n\tLikewise.\n\t* include/bits/unordered_map.h: Fix comments.\n\nFrom-SVN: r198279", "tree": {"sha": "c259932e0323ae5053034c49d3ebc494549893e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c259932e0323ae5053034c49d3ebc494549893e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03d7aff6ee94f302ea87255a89f8f3686085ed03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d7aff6ee94f302ea87255a89f8f3686085ed03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d7aff6ee94f302ea87255a89f8f3686085ed03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d7aff6ee94f302ea87255a89f8f3686085ed03/comments", "author": null, "committer": null, "parents": [{"sha": "1ef395e461dd47b7d985c074a9f9ad6b399acc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef395e461dd47b7d985c074a9f9ad6b399acc1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef395e461dd47b7d985c074a9f9ad6b399acc1d"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "58460196d92453775b46904c0fa85414cda7bb48", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=03d7aff6ee94f302ea87255a89f8f3686085ed03", "patch": "@@ -1,3 +1,12 @@\n+2013-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/57065\n+\t* include/debug/unordered_map (unordered_map, unordered_multimap):\n+\tFix default allocator type.\n+\t* include/profile/unordered_map (unordered_map, unordered_multimap):\n+\tLikewise.\n+\t* include/bits/unordered_map.h: Fix comments.\n+\n 2013-04-24  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/56905"}, {"sha": "22a5166cc3c8759da60bc38ea483d3fff0c3838c", "filename": "libstdc++-v3/include/bits/unordered_map.h", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h?ref=03d7aff6ee94f302ea87255a89f8f3686085ed03", "patch": "@@ -75,12 +75,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n    *\n    *  @ingroup unordered_associative_containers\n    *\n-   *  @tparam  _Key  Type of key objects.\n-   *  @tparam  _Tp  Type of mapped objects.\n-   *  @tparam  _Hash  Hashing function object type, defaults to hash<_Value>.\n-   *  @tparam  _Pred  Predicate function object type, defaults\n-   *                  to equal_to<_Value>.\n-   *  @tparam  _Alloc  Allocator type, defaults to allocator<_Key>.\n+   *  @tparam  _Key    Type of key objects.\n+   *  @tparam  _Tp     Type of mapped objects.\n+   *  @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.\n+   *  @tparam  _Pred   Predicate function object type, defaults\n+   *                   to equal_to<_Value>.\n+   *  @tparam  _Alloc  Allocator type, defaults to \n+   *                   std::allocator<std::pair<const _Key, _Tp>>.\n    *\n    *  Meets the requirements of a <a href=\"tables.html#65\">container</a>, and\n    *  <a href=\"tables.html#xx\">unordered associative container</a>\n@@ -786,12 +787,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n    *\n    *  @ingroup unordered_associative_containers\n    *\n-   *  @tparam  _Key  Type of key objects.\n-   *  @tparam  _Tp  Type of mapped objects.\n-   *  @tparam  _Hash  Hashing function object type, defaults to hash<_Value>.\n-   *  @tparam  _Pred  Predicate function object type, defaults\n-   *                  to equal_to<_Value>.\n-   *  @tparam  _Alloc  Allocator type, defaults to allocator<_Key>.\n+   *  @tparam  _Key    Type of key objects.\n+   *  @tparam  _Tp     Type of mapped objects.\n+   *  @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.\n+   *  @tparam  _Pred   Predicate function object type, defaults\n+   *                   to equal_to<_Value>.\n+   *  @tparam  _Alloc  Allocator type, defaults to\n+   *                   std::allocator<std::pair<const _Key, _Tp>>.\n    *\n    *  Meets the requirements of a <a href=\"tables.html#65\">container</a>, and\n    *  <a href=\"tables.html#xx\">unordered associative container</a>"}, {"sha": "cbde903d8b8621f9e14a1d4ccccfd043b03764ee", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=03d7aff6ee94f302ea87255a89f8f3686085ed03", "patch": "@@ -46,7 +46,7 @@ namespace __debug\n   template<typename _Key, typename _Tp,\n \t   typename _Hash = std::hash<_Key>,\n \t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc = std::allocator<_Key> >\n+\t   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >\n     class unordered_map\n     : public _GLIBCXX_STD_C::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>,\n       public __gnu_debug::_Safe_unordered_container<unordered_map<_Key, _Tp,\n@@ -500,7 +500,7 @@ namespace __debug\n   template<typename _Key, typename _Tp,\n \t   typename _Hash = std::hash<_Key>,\n \t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc = std::allocator<_Key> >\n+\t   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >\n     class unordered_multimap\n     : public _GLIBCXX_STD_C::unordered_multimap<_Key, _Tp, _Hash,\n \t\t\t\t\t\t_Pred, _Alloc>,"}, {"sha": "f594ab8752c3d2f4390f01fce23c889778fc1260", "filename": "libstdc++-v3/include/profile/unordered_map", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d7aff6ee94f302ea87255a89f8f3686085ed03/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map?ref=03d7aff6ee94f302ea87255a89f8f3686085ed03", "patch": "@@ -44,9 +44,9 @@ namespace __profile\n {\n   /// Class std::unordered_map wrapper with performance instrumentation.\n   template<typename _Key, typename _Tp,\n-\t   typename _Hash  = std::hash<_Key>,\n+\t   typename _Hash = std::hash<_Key>,\n \t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc =  std::allocator<_Key> >\n+\t   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >\n     class unordered_map\n     : public _GLIBCXX_STD_BASE\n     {\n@@ -346,9 +346,9 @@ namespace __profile\n \n   /// Class std::unordered_multimap wrapper with performance instrumentation.\n   template<typename _Key, typename _Tp,\n-\t   typename _Hash  = std::hash<_Key>,\n+\t   typename _Hash = std::hash<_Key>,\n \t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc =  std::allocator<_Key> >\n+\t   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >\n     class unordered_multimap\n     : public _GLIBCXX_STD_BASE\n     {      "}]}