{"sha": "8be08b9b67df52d90280f3b1314dc038943ffa3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlMDhiOWI2N2RmNTJkOTAyODBmM2IxMzE0ZGMwMzg5NDNmZmEzZg==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-08-13T08:36:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:20Z"}, "message": "[Ada] Fix transformation of Suppress aspect into pragma\n\ngcc/ada/\n\n\t* sem_ch13.adb (Make_Aitem_Pragma): Turn into function. This\n\tremoves a side-effect on the Aitem variable.\n\t(Analyze_Aspect_Specifications): Handle Suppress and Unsuppress\n\taspects differently from the Linker_Section aspect.\n\t(Ceck_Aspect_At_Freeze_Point): Don't expect Suppress/Unsuppress\n\tto be delayed anymore.", "tree": {"sha": "40ee53a10f70a50532bcce4531715441d66d476a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40ee53a10f70a50532bcce4531715441d66d476a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8be08b9b67df52d90280f3b1314dc038943ffa3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be08b9b67df52d90280f3b1314dc038943ffa3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be08b9b67df52d90280f3b1314dc038943ffa3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be08b9b67df52d90280f3b1314dc038943ffa3f/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08c8883f44b80fd9802d90277db2a0a54975810c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c8883f44b80fd9802d90277db2a0a54975810c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c8883f44b80fd9802d90277db2a0a54975810c"}], "stats": {"total": 131, "additions": 72, "deletions": 59}, "files": [{"sha": "564aafadfa384f81896e5567defb283623db9c5d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 72, "deletions": 59, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be08b9b67df52d90280f3b1314dc038943ffa3f/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be08b9b67df52d90280f3b1314dc038943ffa3f/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8be08b9b67df52d90280f3b1314dc038943ffa3f", "patch": "@@ -1813,9 +1813,9 @@ package body Sem_Ch13 is\n             procedure Analyze_Aspect_Static;\n             --  Ada 202x (AI12-0075): Perform analysis of aspect Static\n \n-            procedure Make_Aitem_Pragma\n+            function Make_Aitem_Pragma\n               (Pragma_Argument_Associations : List_Id;\n-               Pragma_Name                  : Name_Id);\n+               Pragma_Name                  : Name_Id) return Node_Id;\n             --  This is a wrapper for Make_Pragma used for converting aspects\n             --  to pragmas. It takes care of Sloc (set from Loc) and building\n             --  the pragma identifier from the given name. In addition the\n@@ -1874,7 +1874,7 @@ package body Sem_Ch13 is\n                   --  Generate:\n                   --    pragma Convention (<Conv>, <E>);\n \n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Name => Name_Convention,\n                      Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n@@ -2677,12 +2677,12 @@ package body Sem_Ch13 is\n             -- Make_Aitem_Pragma --\n             -----------------------\n \n-            procedure Make_Aitem_Pragma\n+            function Make_Aitem_Pragma\n               (Pragma_Argument_Associations : List_Id;\n-               Pragma_Name                  : Name_Id)\n+               Pragma_Name                  : Name_Id) return Node_Id\n             is\n-               Args : List_Id := Pragma_Argument_Associations;\n-\n+               Args  : List_Id := Pragma_Argument_Associations;\n+               Aitem : Node_Id;\n             begin\n                --  We should never get here if aspect was disabled\n \n@@ -2715,6 +2715,8 @@ package body Sem_Ch13 is\n \n                Set_Corresponding_Aspect (Aitem, Aspect);\n                Set_From_Aspect_Specification (Aitem);\n+\n+               return Aitem;\n             end Make_Aitem_Pragma;\n \n          --  Start of processing for Analyze_One_Aspect\n@@ -3048,13 +3050,10 @@ package body Sem_Ch13 is\n                --  referring to the entity, and the second argument is the\n                --  aspect definition expression.\n \n-               --  Linker_Section/Suppress/Unsuppress\n+               --  Linker_Section\n \n-               when Aspect_Linker_Section\n-                  | Aspect_Suppress\n-                  | Aspect_Unsuppress\n-               =>\n-                  Make_Aitem_Pragma\n+               when Aspect_Linker_Section =>\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => New_Occurrence_Of (E, Loc)),\n@@ -3069,8 +3068,7 @@ package body Sem_Ch13 is\n                   --  code. (This is already done for types with implicit\n                   --  initialization, such as protected types.)\n \n-                  if A_Id = Aspect_Linker_Section\n-                    and then Nkind (N) = N_Object_Declaration\n+                  if Nkind (N) = N_Object_Declaration\n                     and then Has_Init_Expression (N)\n                   then\n                      Delay_Required := False;\n@@ -3081,7 +3079,7 @@ package body Sem_Ch13 is\n                --  Corresponds to pragma Implemented, construct the pragma\n \n                when Aspect_Synchronization =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => New_Occurrence_Of (E, Loc)),\n@@ -3092,7 +3090,7 @@ package body Sem_Ch13 is\n                --  Attach_Handler\n \n                when Aspect_Attach_Handler =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Sloc (Ent),\n                          Expression => Ent),\n@@ -3134,7 +3132,7 @@ package body Sem_Ch13 is\n                   --  flags recording whether it is static/dynamic). We also\n                   --  set flags recording this in the type itself.\n \n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Sloc (Ent),\n                          Expression => Ent),\n@@ -3219,7 +3217,7 @@ package body Sem_Ch13 is\n \n                   --  Construct the pragma\n \n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Sloc (Ent),\n                          Expression => Ent),\n@@ -3375,10 +3373,25 @@ package body Sem_Ch13 is\n                          Expression => Relocate_Node (Expr));\n                   end if;\n \n+               --  Suppress/Unsuppress\n+\n+               when Aspect_Suppress\n+                  | Aspect_Unsuppress\n+               =>\n+                  Aitem := Make_Aitem_Pragma\n+                    (Pragma_Argument_Associations => New_List (\n+                       Make_Pragma_Argument_Association (Loc,\n+                         Expression => Relocate_Node (Expr)),\n+                       Make_Pragma_Argument_Association (Sloc (Expr),\n+                         Expression => New_Occurrence_Of (E, Loc))),\n+                     Pragma_Name                  => Chars (Id));\n+\n+                  Delay_Required := False;\n+\n                --  Warnings\n \n                when Aspect_Warnings =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Sloc (Expr),\n                          Expression => Relocate_Node (Expr)),\n@@ -3406,7 +3419,7 @@ package body Sem_Ch13 is\n                   --  an invariant must apply to a private type, or appear in\n                   --  the private part of a spec and apply to a completion.\n \n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Sloc (Ent),\n                          Expression => Ent),\n@@ -3458,7 +3471,7 @@ package body Sem_Ch13 is\n                   if Nkind (Context) in N_Generic_Package_Declaration\n                                       | N_Package_Declaration\n                   then\n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n                           Make_Pragma_Argument_Association (Loc,\n                             Expression => Relocate_Node (Expr))),\n@@ -3484,7 +3497,7 @@ package body Sem_Ch13 is\n                --  related object declaration.\n \n                when Aspect_Async_Readers =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3499,7 +3512,7 @@ package body Sem_Ch13 is\n                --  related object declaration.\n \n                when Aspect_Async_Writers =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3514,7 +3527,7 @@ package body Sem_Ch13 is\n                --  related object declaration.\n \n                when Aspect_Constant_After_Elaboration =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3534,7 +3547,7 @@ package body Sem_Ch13 is\n                --  private type's full view.\n \n                when Aspect_Default_Initial_Condition =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3548,7 +3561,7 @@ package body Sem_Ch13 is\n                --  Default_Storage_Pool\n \n                when Aspect_Default_Storage_Pool =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3569,7 +3582,7 @@ package body Sem_Ch13 is\n                --  Analyze_Depends_In_Decl_Part for details.\n \n                when Aspect_Depends =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3584,7 +3597,7 @@ package body Sem_Ch13 is\n                --  related object declaration.\n \n                when Aspect_Effective_Reads =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3599,7 +3612,7 @@ package body Sem_Ch13 is\n                --  related object declaration.\n \n                when Aspect_Effective_Writes =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3614,7 +3627,7 @@ package body Sem_Ch13 is\n                --  related subprogram.\n \n                when Aspect_Extensions_Visible =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3630,7 +3643,7 @@ package body Sem_Ch13 is\n                --  a type declaration.\n \n                when Aspect_Ghost =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3650,7 +3663,7 @@ package body Sem_Ch13 is\n                --  Analyze_Global_In_Decl_Part for details.\n \n                when Aspect_Global =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3685,7 +3698,7 @@ package body Sem_Ch13 is\n                   if Nkind (Context) in N_Generic_Package_Declaration\n                                       | N_Package_Declaration\n                   then\n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n                           Make_Pragma_Argument_Association (Loc,\n                             Expression => Relocate_Node (Expr))),\n@@ -3733,7 +3746,7 @@ package body Sem_Ch13 is\n                   if Nkind (Context) in N_Generic_Package_Declaration\n                                       | N_Package_Declaration\n                   then\n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n                           Make_Pragma_Argument_Association (Loc,\n                             Expression => Relocate_Node (Expr))),\n@@ -3759,7 +3772,7 @@ package body Sem_Ch13 is\n                --  Max_Entry_Queue_Depth\n \n                when Aspect_Max_Entry_Queue_Depth =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3772,7 +3785,7 @@ package body Sem_Ch13 is\n                --  Max_Entry_Queue_Length\n \n                when Aspect_Max_Entry_Queue_Length =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3785,7 +3798,7 @@ package body Sem_Ch13 is\n                --  Max_Queue_Length\n \n                when Aspect_Max_Queue_Length =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3800,7 +3813,7 @@ package body Sem_Ch13 is\n                --  declaration.\n \n                when Aspect_No_Caching =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3824,7 +3837,7 @@ package body Sem_Ch13 is\n                          Expression => Relocate_Node (Expr)));\n                   end if;\n \n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => Args,\n                      Pragma_Name                  => Chars (Id));\n                end;\n@@ -3836,7 +3849,7 @@ package body Sem_Ch13 is\n                                 | N_Package_Instantiation\n                     or else Is_Single_Concurrent_Type_Declaration (N)\n                   then\n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n                           Make_Pragma_Argument_Association (Loc,\n                             Expression => Relocate_Node (Expr))),\n@@ -3857,7 +3870,7 @@ package body Sem_Ch13 is\n                --  SPARK_Mode\n \n                when Aspect_SPARK_Mode =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3878,7 +3891,7 @@ package body Sem_Ch13 is\n                --  routine Analyze_Refined_Depends_In_Decl_Part.\n \n                when Aspect_Refined_Depends =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3899,7 +3912,7 @@ package body Sem_Ch13 is\n                --  routine Analyze_Refined_Global_In_Decl_Part.\n \n                when Aspect_Refined_Global =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3912,7 +3925,7 @@ package body Sem_Ch13 is\n                --  Refined_Post\n \n                when Aspect_Refined_Post =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -3932,7 +3945,7 @@ package body Sem_Ch13 is\n                   --  the pragma.\n \n                   if Nkind (N) = N_Package_Body then\n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n                           Make_Pragma_Argument_Association (Loc,\n                             Expression => Relocate_Node (Expr))),\n@@ -3953,7 +3966,7 @@ package body Sem_Ch13 is\n                --  Relative_Deadline\n \n                when Aspect_Relative_Deadline =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -4002,7 +4015,7 @@ package body Sem_Ch13 is\n                --  attribute does not have visibility on the discriminant.\n \n                when Aspect_Secondary_Stack_Size =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -4020,7 +4033,7 @@ package body Sem_Ch13 is\n                --  related subprogram.\n \n                when Aspect_Volatile_Function =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -4100,7 +4113,7 @@ package body Sem_Ch13 is\n                          Chars      => Name_Entity,\n                          Expression => Ent));\n \n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => Pargs,\n                         Pragma_Name                  => Name_Annotate);\n                   end;\n@@ -4294,7 +4307,7 @@ package body Sem_Ch13 is\n                         New_Expr := Relocate_Node (Expr);\n                      end if;\n \n-                     Make_Aitem_Pragma\n+                     Aitem := Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n                           Make_Pragma_Argument_Association (Eloc,\n                             Chars      => Name_Check,\n@@ -4385,15 +4398,15 @@ package body Sem_Ch13 is\n \n                   --  Build the test-case pragma\n \n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => Args,\n                      Pragma_Name                  => Nam);\n                end Test_Case;\n \n                --  Contract_Cases\n \n                when Aspect_Contract_Cases =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -4406,7 +4419,7 @@ package body Sem_Ch13 is\n                --  Subprogram_Variant\n \n                when Aspect_Subprogram_Variant =>\n-                  Make_Aitem_Pragma\n+                  Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n@@ -4523,7 +4536,7 @@ package body Sem_Ch13 is\n                      if A_Id /= Aspect_Export\n                        and then A_Id /= Aspect_Import\n                      then\n-                        Make_Aitem_Pragma\n+                        Aitem := Make_Aitem_Pragma\n                           (Pragma_Argument_Associations => New_List (\n                              Make_Pragma_Argument_Association (Sloc (Ent),\n                                Expression => Ent)),\n@@ -4574,7 +4587,7 @@ package body Sem_Ch13 is\n                         --  Create a pragma and put it at the start of the task\n                         --  definition for the task type declaration.\n \n-                        Make_Aitem_Pragma\n+                        Aitem := Make_Aitem_Pragma\n                           (Pragma_Argument_Associations => New_List (\n                              Make_Pragma_Argument_Association (Loc,\n                                Expression => Relocate_Node (Expr))),\n@@ -4635,7 +4648,7 @@ package body Sem_Ch13 is\n \n                   if Is_Boolean_Aspect (Aspect) and then No (Aitem) then\n                      if Is_True (Static_Boolean (Expr)) then\n-                        Make_Aitem_Pragma\n+                        Aitem := Make_Aitem_Pragma\n                           (Pragma_Argument_Associations => New_List (\n                              Make_Pragma_Argument_Association (Sloc (Ent),\n                                Expression => Ent)),\n@@ -10753,8 +10766,6 @@ package body Sem_Ch13 is\n             | Aspect_Output\n             | Aspect_Put_Image\n             | Aspect_Read\n-            | Aspect_Suppress\n-            | Aspect_Unsuppress\n             | Aspect_Warnings\n             | Aspect_Write\n          =>\n@@ -10871,8 +10882,10 @@ package body Sem_Ch13 is\n             | Aspect_Relaxed_Initialization\n             | Aspect_SPARK_Mode\n             | Aspect_Subprogram_Variant\n+            | Aspect_Suppress\n             | Aspect_Test_Case\n             | Aspect_Unimplemented\n+            | Aspect_Unsuppress\n             | Aspect_Volatile_Function\n          =>\n             raise Program_Error;"}]}