{"sha": "e72f3fa192d67670fe3cbdb34b3b590054b684d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcyZjNmYTE5MmQ2NzY3MGZlM2NiZGIzNGIzYjU5MDA1NGI2ODRkNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-04-05T15:40:16Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-04-05T15:40:16Z"}, "message": "re PR c++/19159 (Undefined symbol: vtable for __cxxabiv1::__vmi_class_type_info)\n\n\tPR c++/19159\n\t* decl2.c (import_export_decl): Use non-COMDAT external linkage\n\tfor virtual tables, typeinfo, etc. that will be emitted in only\n\tone translation unit on systems without weak symbols.\n\nFrom-SVN: r97635", "tree": {"sha": "ef62790acadc736fc75d7819646fb6e91db5dda7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef62790acadc736fc75d7819646fb6e91db5dda7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e72f3fa192d67670fe3cbdb34b3b590054b684d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72f3fa192d67670fe3cbdb34b3b590054b684d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72f3fa192d67670fe3cbdb34b3b590054b684d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72f3fa192d67670fe3cbdb34b3b590054b684d5/comments", "author": null, "committer": null, "parents": [{"sha": "bf667275670a58261be7e15e9e9807cb60750e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf667275670a58261be7e15e9e9807cb60750e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf667275670a58261be7e15e9e9807cb60750e85"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "a2747146878a150d689e12ee796a0916f7a3112e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72f3fa192d67670fe3cbdb34b3b590054b684d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72f3fa192d67670fe3cbdb34b3b590054b684d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e72f3fa192d67670fe3cbdb34b3b590054b684d5", "patch": "@@ -1,3 +1,10 @@\n+2005-04-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/19159\n+\t* decl2.c (import_export_decl): Use non-COMDAT external linkage\n+\tfor virtual tables, typeinfo, etc. that will be emitted in only\n+\tone translation unit on systems without weak symbols.\n+\n 2005-04-04  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/20679"}, {"sha": "4a2659b3f215ae9a2fee83f83e400032f813db76", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 35, "deletions": 14, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72f3fa192d67670fe3cbdb34b3b590054b684d5/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72f3fa192d67670fe3cbdb34b3b590054b684d5/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=e72f3fa192d67670fe3cbdb34b3b590054b684d5", "patch": "@@ -1780,29 +1780,43 @@ import_export_decl (tree decl)\n       else if (CLASSTYPE_INTERFACE_KNOWN (type)\n \t       && CLASSTYPE_INTERFACE_ONLY (type))\n \timport_p = true;\n-      else if (TARGET_WEAK_NOT_IN_ARCHIVE_TOC\n+      else if ((!flag_weak || TARGET_WEAK_NOT_IN_ARCHIVE_TOC)\n \t       && !CLASSTYPE_USE_TEMPLATE (type)\n \t       && CLASSTYPE_KEY_METHOD (type)\n \t       && !DECL_DECLARED_INLINE_P (CLASSTYPE_KEY_METHOD (type)))\n \t/* The ABI requires that all virtual tables be emitted with\n \t   COMDAT linkage.  However, on systems where COMDAT symbols\n \t   don't show up in the table of contents for a static\n-\t   archive, the linker will report errors about undefined\n-\t   symbols because it will not see the virtual table\n-\t   definition.  Therefore, in the case that we know that the\n-\t   virtual table will be emitted in only one translation\n-\t   unit, we make the virtual table an ordinary definition\n-\t   with external linkage.  */\n+\t   archive, or on systems without weak symbols (where we\n+\t   approximate COMDAT linkage by using internal linkage), the\n+\t   linker will report errors about undefined symbols because\n+\t   it will not see the virtual table definition.  Therefore,\n+\t   in the case that we know that the virtual table will be\n+\t   emitted in only one translation unit, we make the virtual\n+\t   table an ordinary definition with external linkage.  */\n \tDECL_EXTERNAL (decl) = 0;\n       else if (CLASSTYPE_INTERFACE_KNOWN (type))\n \t{\n \t  /* TYPE is being exported from this translation unit, so DECL\n-\t     should be defined here.  The ABI requires COMDAT\n-\t     linkage.  Normally, we only emit COMDAT things when they\n-\t     are needed; make sure that we realize that this entity is\n-\t     indeed needed.  */\n-\t  comdat_p = true;\n-\t  mark_needed (decl);\n+\t     should be defined here.  */ \n+\t  if (!flag_weak && CLASSTYPE_EXPLICIT_INSTANTIATION (type))\n+\t    /* If a class is declared in a header with the \"extern\n+\t       template\" extension, then it will not be instantiated,\n+\t       even in translation units that would normally require\n+\t       it.  Often such classes are explicitly instantiated in\n+\t       one translation unit.  Therefore, the explicit\n+\t       instantiation must be made visible to other translation\n+\t       units.  */\n+\t    DECL_EXTERNAL (decl) = 0;\n+\t  else\n+\t    {\n+\t      /* The ABI requires COMDAT linkage.  Normally, we only\n+\t\t emit COMDAT things when they are needed; make sure\n+\t\t that we realize that this entity is indeed\n+\t\t needed.  */\n+\t      comdat_p = true;\n+\t      mark_needed (decl);\n+\t    }\n \t}\n       else if (!flag_implicit_templates\n \t       && CLASSTYPE_IMPLICIT_INSTANTIATION (type))\n@@ -1830,7 +1844,14 @@ import_export_decl (tree decl)\n \t      comdat_p = true;\n \t      if (CLASSTYPE_INTERFACE_KNOWN (type)\n \t\t  && !CLASSTYPE_INTERFACE_ONLY (type))\n-\t\tmark_needed (decl);\n+\t\t{\n+\t\t  mark_needed (decl);\n+\t\t  if (!flag_weak)\n+\t\t    {\n+\t\t      comdat_p = false;\n+\t\t      DECL_EXTERNAL (decl) = 0;\n+\t\t    }\n+\t\t}\n \t    }\n \t}\n       else"}]}