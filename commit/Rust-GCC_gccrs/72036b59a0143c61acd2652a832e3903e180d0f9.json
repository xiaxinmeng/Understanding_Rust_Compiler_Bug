{"sha": "72036b59a0143c61acd2652a832e3903e180d0f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIwMzZiNTlhMDE0M2M2MWFjZDI2NTJhODMyZTM5MDNlMTgwZDBmOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-05T00:49:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2020-01-05T00:49:14Z"}, "message": "re PR c++/93046 (ICE in cp_gimplify_init_expr)\n\n\tPR c++/93046\n\t* cp-gimplify.c (cp_gimplify_init_expr): Don't look through\n\tTARGET_EXPR if it has been gimplified already.\n\n\t* g++.dg/ext/cond4.C: New test.\n\nFrom-SVN: r279884", "tree": {"sha": "6fd71becf369d6803fab4a017e9d6b849d257fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd71becf369d6803fab4a017e9d6b849d257fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72036b59a0143c61acd2652a832e3903e180d0f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72036b59a0143c61acd2652a832e3903e180d0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72036b59a0143c61acd2652a832e3903e180d0f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72036b59a0143c61acd2652a832e3903e180d0f9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48cb874a04c2d34c91ad83e029ffeb8232bd3f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cb874a04c2d34c91ad83e029ffeb8232bd3f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48cb874a04c2d34c91ad83e029ffeb8232bd3f23"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "a1fb787e55526d28f2645fe4bfddf99e8636220f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=72036b59a0143c61acd2652a832e3903e180d0f9", "patch": "@@ -1,3 +1,9 @@\n+2010-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/93046\n+\t* cp-gimplify.c (cp_gimplify_init_expr): Don't look through\n+\tTARGET_EXPR if it has been gimplified already.\n+\n 2020-01-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/93033 - incorrect tree node sharing with array init."}, {"sha": "1d2a77d2c0ad330f203768a3a3389d57dfaa4921", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=72036b59a0143c61acd2652a832e3903e180d0f9", "patch": "@@ -523,7 +523,7 @@ cp_gimplify_init_expr (tree *expr_p, gimple_seq *pre_p)\n      think that such code never uses the TARGET_EXPR as an initializer.  If\n      I'm wrong, we'll abort because the temp won't have any RTL.  In that\n      case, I guess we'll need to replace references somehow.  */\n-  if (TREE_CODE (from) == TARGET_EXPR)\n+  if (TREE_CODE (from) == TARGET_EXPR && TARGET_EXPR_INITIAL (from))\n     from = TARGET_EXPR_INITIAL (from);\n \n   /* If we might need to clean up a partially constructed object, break down"}, {"sha": "4581c9f6c2777c7acac2121e5717cf7a7ddf25f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72036b59a0143c61acd2652a832e3903e180d0f9", "patch": "@@ -1,3 +1,8 @@\n+2010-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/93046\n+\t* g++.dg/ext/cond4.C: New test.\n+\n 2020-01-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/91640"}, {"sha": "d2853f403873e760ce225b121462d9c87e645b08", "filename": "gcc/testsuite/g++.dg/ext/cond4.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcond4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72036b59a0143c61acd2652a832e3903e180d0f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcond4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcond4.C?ref=72036b59a0143c61acd2652a832e3903e180d0f9", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/93046\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+struct S {\n+  S (int);\n+  operator bool ();\n+};\n+\n+S\n+foo ()\n+{\n+  return S (1) ? : S (2);\n+}"}]}