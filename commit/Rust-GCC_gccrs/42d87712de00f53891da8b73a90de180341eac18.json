{"sha": "42d87712de00f53891da8b73a90de180341eac18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJkODc3MTJkZTAwZjUzODkxZGE4YjczYTkwZGUxODAzNDFlYWMxOA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2010-09-24T20:32:48Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2010-09-24T20:32:48Z"}, "message": "vx-common.h (DBX_REGISTER_NUMBER): Reinstate.\n\n        * config/i386/vx-common.h (DBX_REGISTER_NUMBER): Reinstate.\n\nFrom-SVN: r164607", "tree": {"sha": "d5d8d71bc96afeb846d59f0f6a83370adf44a369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5d8d71bc96afeb846d59f0f6a83370adf44a369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42d87712de00f53891da8b73a90de180341eac18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d87712de00f53891da8b73a90de180341eac18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42d87712de00f53891da8b73a90de180341eac18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d87712de00f53891da8b73a90de180341eac18/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46a4da10f5b00da1091d9641836f0550ce9a5120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a4da10f5b00da1091d9641836f0550ce9a5120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46a4da10f5b00da1091d9641836f0550ce9a5120"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "ee1404f3be372b2089901c0a68d92a460e5dc501", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d87712de00f53891da8b73a90de180341eac18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d87712de00f53891da8b73a90de180341eac18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42d87712de00f53891da8b73a90de180341eac18", "patch": "@@ -1,3 +1,7 @@\n+2010-09-24  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/i386/vx-common.h (DBX_REGISTER_NUMBER): Reinstate.\n+\n 2010-09-24  Jan Hubicka  <jh@suse.cz>\n \n \t* doc/extend.texi: (attribute leaf): Document."}, {"sha": "f4547f08848a37558d61d9aa7e0d4660a8e67833", "filename": "gcc/config/i386/vx-common.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d87712de00f53891da8b73a90de180341eac18/gcc%2Fconfig%2Fi386%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d87712de00f53891da8b73a90de180341eac18/gcc%2Fconfig%2Fi386%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvx-common.h?ref=42d87712de00f53891da8b73a90de180341eac18", "patch": "@@ -24,3 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n \n #define SUBTARGET_RETURN_IN_MEMORY(TYPE, FNTYPE) \\\n \tix86_solaris_return_in_memory (TYPE, FNTYPE)\n+\n+/* Provide our target specific DBX_REGISTER_NUMBER, as advertised by the\n+   common svr4.h.  VxWorks relies on the SVR4 numbering.  */\n+\n+#undef DBX_REGISTER_NUMBER\n+#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]"}]}