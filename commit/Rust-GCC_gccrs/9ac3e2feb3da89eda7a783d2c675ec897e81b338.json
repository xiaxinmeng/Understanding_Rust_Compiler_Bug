{"sha": "9ac3e2feb3da89eda7a783d2c675ec897e81b338", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFjM2UyZmViM2RhODllZGE3YTc4M2QyYzY3NWVjODk3ZTgxYjMzOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-01-13T19:54:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-01-14T17:57:04Z"}, "message": "libgo: update hurd support\n\nPatch from Svante Signell.\n\nFixes PR go/98496\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/283692", "tree": {"sha": "996f5d30af6f64ea4c19357fe4a2e3e452fa9013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/996f5d30af6f64ea4c19357fe4a2e3e452fa9013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ac3e2feb3da89eda7a783d2c675ec897e81b338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac3e2feb3da89eda7a783d2c675ec897e81b338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac3e2feb3da89eda7a783d2c675ec897e81b338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac3e2feb3da89eda7a783d2c675ec897e81b338/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6106dfb9f73a33c87108ad5b2dcd4842bdd7828e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6106dfb9f73a33c87108ad5b2dcd4842bdd7828e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6106dfb9f73a33c87108ad5b2dcd4842bdd7828e"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "8cfc63248a72639455580293d340e7e79a4885a5", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -1,4 +1,4 @@\n-255657dc8d61ab26121ca68f124412ef37599166\n+fd5396b1af389a55d1e3612702cfdad6755084e9\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6188725f73be8d7b5be810e9c5effe14404a727d", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -881,7 +881,7 @@ GOBENCH =\n CHECK = \\\n \tGC=\"$(GOC) $(GOCFLAGS) $($(subst /,_,$@)_GOCFLAGS) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs\"; \\\n \texport GC; \\\n-\tGOLIBS=\"$(extra_check_libs_$(subst .,_,$(subst /,_,$(@D)))) $(MATH_LIBS) $(NET_LIBS) $(LIBS)\"; \\\n+\tGOLIBS=\"$(extra_check_libs_$(subst .,_,$(subst /,_,$(@D)))) $(PTHREAD_LIBS) $(MATH_LIBS) $(NET_LIBS) $(LIBS)\"; \\\n \texport GOLIBS; \\\n \tRUNTESTFLAGS=\"$(RUNTESTFLAGS)\"; \\\n \texport RUNTESTFLAGS; \\"}, {"sha": "daae4f842d74beb42dbeaac528977531a4af79cb", "filename": "libgo/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -1029,7 +1029,7 @@ GOBENCH =\n CHECK = \\\n \tGC=\"$(GOC) $(GOCFLAGS) $($(subst /,_,$@)_GOCFLAGS) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs\"; \\\n \texport GC; \\\n-\tGOLIBS=\"$(extra_check_libs_$(subst .,_,$(subst /,_,$(@D)))) $(MATH_LIBS) $(NET_LIBS) $(LIBS)\"; \\\n+\tGOLIBS=\"$(extra_check_libs_$(subst .,_,$(subst /,_,$(@D)))) $(PTHREAD_LIBS) $(MATH_LIBS) $(NET_LIBS) $(LIBS)\"; \\\n \texport GOLIBS; \\\n \tRUNTESTFLAGS=\"$(RUNTESTFLAGS)\"; \\\n \texport RUNTESTFLAGS; \\"}, {"sha": "a25b8a1bc08723fa63a166cf3483b0a59d2f2e08", "filename": "libgo/go/crypto/x509/root_hurd.go", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_hurd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_hurd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_hurd.go?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -9,3 +9,9 @@ package x509\n var certFiles = []string{\n \t\"/etc/ssl/certs/ca-certificates.crt\", // Debian/Ubuntu/Gentoo etc.\n }\n+\n+// Possible directories with certificate files; stop after successfully\n+// reading at least one file from a directory.\n+var certDirectories = []string{\n+\t\"/etc/ssl/certs\", // SLES10/SLES11, https://golang.org/issue/12139\n+}"}, {"sha": "209c6b14a112e485900616f190e4e0107cc69e6d", "filename": "libgo/go/runtime/export_pipe2_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fruntime%2Fexport_pipe2_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fruntime%2Fexport_pipe2_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fexport_pipe2_test.go?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build freebsd linux netbsd openbsd solaris\n+// +build freebsd hurd linux netbsd openbsd solaris\n \n package runtime\n "}, {"sha": "d7c5d45c854be6ab0628de6488d4d9a432fe48c6", "filename": "libgo/go/runtime/nbpipe_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fruntime%2Fnbpipe_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fruntime%2Fnbpipe_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fnbpipe_test.go?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build aix darwin dragonfly freebsd linux netbsd openbsd solaris\n+// +build aix darwin dragonfly freebsd hurd linux netbsd openbsd solaris\n \n package runtime_test\n "}, {"sha": "8bde23edb81fcdb418cf680101ecf15e3496697f", "filename": "libgo/go/runtime/os_hurd.go", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fruntime%2Fos_hurd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fgo%2Fruntime%2Fos_hurd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fos_hurd.go?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -27,19 +27,19 @@ func libc_malloc(uintptr) unsafe.Pointer\n \n //go:noescape\n //extern sem_init\n-func sem_init(sem *_sem_t, pshared int32, value uint32) int32\n+func sem_init(sem *semt, pshared int32, value uint32) int32\n \n //go:noescape\n //extern sem_wait\n-func sem_wait(sem *_sem_t) int32\n+func sem_wait(sem *semt) int32\n \n //go:noescape\n //extern sem_post\n-func sem_post(sem *_sem_t) int32\n+func sem_post(sem *semt) int32\n \n //go:noescape\n //extern sem_timedwait\n-func sem_timedwait(sem *_sem_t, timeout *timespec) int32\n+func sem_timedwait(sem *semt, timeout *timespec) int32\n \n //go:noescape\n //extern clock_gettime\n@@ -51,12 +51,12 @@ func semacreate(mp *m) {\n \t\treturn\n \t}\n \n-\tvar sem *_sem_t\n+\tvar sem *semt\n \n \t// Call libc's malloc rather than malloc. This will\n \t// allocate space on the C heap. We can't call malloc\n \t// here because it could cause a deadlock.\n-\tsem = (*_sem_t)(libc_malloc(unsafe.Sizeof(*sem)))\n+\tsem = (*semt)(libc_malloc(unsafe.Sizeof(*sem)))\n \tif sem_init(sem, 0, 0) != 0 {\n \t\tthrow(\"sem_init\")\n \t}\n@@ -86,7 +86,7 @@ func semasleep(ns int64) int32 {\n \t\tts.tv_sec = timespec_sec_t(sec)\n \t\tts.tv_nsec = timespec_nsec_t(nsec)\n \n-\t\tif sem_timedwait((*_sem_t)(unsafe.Pointer(_m_.waitsema)), &ts) != 0 {\n+\t\tif sem_timedwait((*semt)(unsafe.Pointer(_m_.waitsema)), &ts) != 0 {\n \t\t\terr := errno()\n \t\t\tif err == _ETIMEDOUT || err == _EAGAIN || err == _EINTR {\n \t\t\t\treturn -1\n@@ -96,7 +96,7 @@ func semasleep(ns int64) int32 {\n \t\treturn 0\n \t}\n \tfor {\n-\t\tr1 := sem_wait((*_sem_t)(unsafe.Pointer(_m_.waitsema)))\n+\t\tr1 := sem_wait((*semt)(unsafe.Pointer(_m_.waitsema)))\n \t\tif r1 == 0 {\n \t\t\tbreak\n \t\t}\n@@ -110,7 +110,7 @@ func semasleep(ns int64) int32 {\n \n //go:nosplit\n func semawakeup(mp *m) {\n-\tif sem_post((*_sem_t)(unsafe.Pointer(mp.waitsema))) != 0 {\n+\tif sem_post((*semt)(unsafe.Pointer(mp.waitsema))) != 0 {\n \t\tthrow(\"sem_post\")\n \t}\n }"}, {"sha": "e56a77e39a3d9cc323be23d2c9b7afc178aabf3d", "filename": "libgo/misc/cgo/test/cthread_unix.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fmisc%2Fcgo%2Ftest%2Fcthread_unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac3e2feb3da89eda7a783d2c675ec897e81b338/libgo%2Fmisc%2Fcgo%2Ftest%2Fcthread_unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmisc%2Fcgo%2Ftest%2Fcthread_unix.c?ref=9ac3e2feb3da89eda7a783d2c675ec897e81b338", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build aix darwin dragonfly freebsd linux netbsd openbsd solaris\n+// +build aix darwin dragonfly freebsd hurd linux netbsd openbsd solaris\n \n #include <pthread.h>\n #include \"_cgo_export.h\""}]}