{"sha": "b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0ZWEwYWY1ZTkyZmQzNGE0ZWIyMWVkYjM5YTg3MTViNDdlODRmOA==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-08-12T09:50:54Z"}, "committer": {"name": "Marc", "email": "dkm@kataplop.net", "date": "2021-08-18T20:59:54Z"}, "message": "tests: add tests for Module\n\nAdd tests for Module support.\n\nref #432", "tree": {"sha": "da149f0cb0bfd3019cc153eea6bd9eb074f6715a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da149f0cb0bfd3019cc153eea6bd9eb074f6715a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9a473c741f85685e8d9160155c16a92c010ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9a473c741f85685e8d9160155c16a92c010ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9a473c741f85685e8d9160155c16a92c010ca7"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "ca272f711deb1c9ad2907a5595c98a7e29791eb2", "filename": "gcc/testsuite/rust/compile/torture/mod1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod1.rs?ref=b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "patch": "@@ -0,0 +1,12 @@\n+// This is testing name resolution\n+\n+mod _foo {\n+    struct _A;\n+}\n+\n+mod _bar {\n+    mod _barbis {\n+        struct _B;\n+    }\n+}\n+"}, {"sha": "6a2d1ed5901071f14a2abd8fc6bce7fe712ccc2f", "filename": "gcc/testsuite/rust/compile/torture/mod2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod2.rs?ref=b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "patch": "@@ -0,0 +1,15 @@\n+mod foomod {\n+    pub struct Foo { // { dg-warning \"unused name\" }\n+    }\n+}\n+\n+impl foomod::Foo {\n+    pub fn new() -> Self {\n+        foomod::Foo {\n+        }\n+    }\n+}\n+ \n+fn main() {\n+   let _a = foomod::Foo::new();\n+}"}, {"sha": "e2418391b669a4189b737ab22d0e3c74c59be9f1", "filename": "gcc/testsuite/rust/compile/torture/mod3.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmod3.rs?ref=b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "patch": "@@ -0,0 +1,25 @@\n+mod A {\n+    pub mod B {  // { dg-warning \"unused name\" }\n+        pub mod C { // { dg-warning \"unused name\" }\n+            pub struct Foo {\n+                pub f: i32,\n+            }\n+            impl Foo {\n+                pub fn new() -> Self {  // { dg-warning \"unused name\" }\n+                    Foo {\n+                        f: 23i32,\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn main() ->i32 {\n+    let a = A::B::C::Foo::new();\n+    let b = A::B::C::Foo {\n+        f: -23i32,\n+    };\n+\n+    a.f - b.f\n+}"}, {"sha": "37e7ce33162f5d1e656668f157bcee042bda3c1f", "filename": "gcc/testsuite/rust/execute/torture/mod1.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmod1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34ea0af5e92fd34a4eb21edb39a8715b47e84f8/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmod1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmod1.rs?ref=b34ea0af5e92fd34a4eb21edb39a8715b47e84f8", "patch": "@@ -0,0 +1,25 @@\n+mod A {\n+    pub mod B {  // { dg-warning \"unused name\" }\n+        pub mod C { // { dg-warning \"unused name\" }\n+            pub struct Foo {\n+                pub f: i32,\n+            }\n+            impl Foo {\n+                pub fn new() -> Self {  // { dg-warning \"unused name\" }\n+                    Foo {\n+                        f: 23i32,\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn main() ->i32 {\n+    let a = A::B::C::Foo::new();\n+    let b = A::B::C::Foo {\n+        f: -23i32,\n+    };\n+\n+    a.f + b.f\n+}"}]}