{"sha": "38831dfe51e50e0c24de08cd1657efd69ca809ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg4MzFkZmU1MWU1MGUwYzI0ZGUwOGNkMTY1N2VmZDY5Y2E4MDlhYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-06-12T12:06:29Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-06-12T12:06:29Z"}, "message": "Mips warning fixes:\n\n        * mips.c (small_int): Mark parameter `mode' with ATTRIBUTE_UNUSED.\n        (large_int): Likewise.\n        (pc_or_label_operand): Likewise.\n        (call_insn_operand): Likewise.\n        (consttable_operand): Likewise.\n        (m16_uimm3_b): Likewise.\n        (m16_simm4_1): Likewise.\n        (m16_nsimm4_1): Likewise.\n        (m16_simm5_1): Likewise.\n        (m16_nsimm5_1): Likewise.\n        (m16_uimm5_4): Likewise.\n        (m16_nuimm5_4): Likewise.\n        (m16_simm8_1): Likewise.\n        (m16_nsimm8_1): Likewise.\n        (m16_uimm8_1): Likewise.\n        (m16_nuimm8_1): Likewise.\n        (m16_uimm8_m1_1): Likewise.\n        (m16_uimm8_4): Likewise.\n        (m16_nuimm8_4): Likewise.\n        (m16_simm8_8): Likewise.\n        (m16_nsimm8_8): Likewise.\n        (m16_usym8_4): Likewise.\n        (m16_usym5_4): Likewise.\n        (mips_move_1word): Change type of variable `i' from int to size_t.\n        (mips_move_2words): Likewise.\n        (output_block_move): Mark parameter `libname' with ATTRIBUTE_UNUSED.\n        (function_arg_advance): Use HOST_PTR_PRINTF to print an address.\n        (function_arg): Likewise.\n        (function_arg_partial_nregs): Mark parameter `named' with\n        ATTRIBUTE_UNUSED.\n        (override_options): Use ISDIGIT instead of isdigit.\n        (mips_output_external): Mark parameter `file' with ATTRIBUTE_UNUSED.\n        (final_prescan_insn): Likewise for parameters `opvec' and `noperands'.\n        (save_restore_insns): Cast HOST_WIDE_INT arguments passed to\n        function `fatal' to long before printing.  Use\n        HOST_WIDE_INT_PRINT_DEC in fprintf.  Both changes done several\n        times in this function.\n        (function_prologue): Mark parameter `size' with ATTRIBUTE_UNUSED.\n        (function_epilogue): Likewise for parameters `file' and `size'.\n        Print an int with \"%d\" not \"%ld\".\n        (mips_select_rtx_section): Mark parameter `x' with ATTRIBUTE_UNUSED.\n        (mips_function_value): Likewise for parameter `func'.\n        (function_arg_pass_by_reference): Likewise for parameters `cum'\n        and `named'.\n        (extend_operator): Likewise for parameter `mode'\n        (highpart_shift_operator): Likewise.\n        * mips.md (mul_acc_si): Remove unused variable `macc'.\n\nFrom-SVN: r20443", "tree": {"sha": "6602812f268b07bc60c5aac21a7b2feb03ca9cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6602812f268b07bc60c5aac21a7b2feb03ca9cd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38831dfe51e50e0c24de08cd1657efd69ca809ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38831dfe51e50e0c24de08cd1657efd69ca809ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38831dfe51e50e0c24de08cd1657efd69ca809ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38831dfe51e50e0c24de08cd1657efd69ca809ac/comments", "author": null, "committer": null, "parents": [{"sha": "2a238a974bdff827ac0d0928ca9fe10ff59e683a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a238a974bdff827ac0d0928ca9fe10ff59e683a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a238a974bdff827ac0d0928ca9fe10ff59e683a"}], "stats": {"total": 231, "additions": 150, "deletions": 81}, "files": [{"sha": "283230b129e75af722cd5560448b5491fe6c948c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38831dfe51e50e0c24de08cd1657efd69ca809ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38831dfe51e50e0c24de08cd1657efd69ca809ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38831dfe51e50e0c24de08cd1657efd69ca809ac", "patch": "@@ -1,3 +1,54 @@\n+Fri Jun 12 14:57:59 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* mips.c (small_int): Mark parameter `mode' with ATTRIBUTE_UNUSED.\n+\t(large_int): Likewise.\n+\t(pc_or_label_operand): Likewise.\n+\t(call_insn_operand): Likewise.\n+\t(consttable_operand): Likewise.\n+\t(m16_uimm3_b): Likewise.\n+\t(m16_simm4_1): Likewise.\n+\t(m16_nsimm4_1): Likewise.\n+\t(m16_simm5_1): Likewise.\n+\t(m16_nsimm5_1): Likewise.\n+\t(m16_uimm5_4): Likewise.\n+\t(m16_nuimm5_4): Likewise.\n+\t(m16_simm8_1): Likewise.\n+\t(m16_nsimm8_1): Likewise.\n+\t(m16_uimm8_1): Likewise.\n+\t(m16_nuimm8_1): Likewise.\n+\t(m16_uimm8_m1_1): Likewise.\n+\t(m16_uimm8_4): Likewise.\n+\t(m16_nuimm8_4): Likewise.\n+\t(m16_simm8_8): Likewise.\n+\t(m16_nsimm8_8): Likewise.\n+\t(m16_usym8_4): Likewise.\n+\t(m16_usym5_4): Likewise.\n+\t(mips_move_1word): Change type of variable `i' from int to size_t.\n+\t(mips_move_2words): Likewise.\n+\t(output_block_move): Mark parameter `libname' with ATTRIBUTE_UNUSED.\n+\t(function_arg_advance): Use HOST_PTR_PRINTF to print an address.\n+\t(function_arg): Likewise.\n+\t(function_arg_partial_nregs): Mark parameter `named' with\n+ \tATTRIBUTE_UNUSED.\n+\t(override_options): Use ISDIGIT instead of isdigit.\n+\t(mips_output_external): Mark parameter `file' with ATTRIBUTE_UNUSED.\n+\t(final_prescan_insn): Likewise for parameters `opvec' and `noperands'.\n+\t(save_restore_insns): Cast HOST_WIDE_INT arguments passed to\n+\tfunction `fatal' to long before printing.  Use\n+\tHOST_WIDE_INT_PRINT_DEC in fprintf.  Both changes done several\n+\ttimes in this function.\n+\t(function_prologue): Mark parameter `size' with ATTRIBUTE_UNUSED.\n+\t(function_epilogue): Likewise for parameters `file' and `size'.\n+\tPrint an int with \"%d\" not \"%ld\".\n+\t(mips_select_rtx_section): Mark parameter `x' with ATTRIBUTE_UNUSED.\n+\t(mips_function_value): Likewise for parameter `func'.\n+\t(function_arg_pass_by_reference): Likewise for parameters `cum'\n+\tand `named'.\n+\t(extend_operator): Likewise for parameter `mode'\n+\t(highpart_shift_operator): Likewise.\n+\n+\t* mips.md (mul_acc_si): Remove unused variable `macc'.\n+\n Fri Jun 12 09:33:44 1998  Richard Henderson <rth@cygnus.com>\n \n \t* fold-const.c (fold): Revert last change.  It breaks constant"}, {"sha": "e9ae838f1d2594d2eaef926526816405fc9e84ff", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 99, "deletions": 80, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38831dfe51e50e0c24de08cd1657efd69ca809ac/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38831dfe51e50e0c24de08cd1657efd69ca809ac/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=38831dfe51e50e0c24de08cd1657efd69ca809ac", "patch": "@@ -476,7 +476,7 @@ arith32_operand (op, mode)\n int\n small_int (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return (GET_CODE (op) == CONST_INT && SMALL_INT (op));\n }\n@@ -487,7 +487,7 @@ small_int (op, mode)\n int\n large_int (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   HOST_WIDE_INT value;\n \n@@ -930,7 +930,7 @@ cmp_op (op, mode)\n int\n pc_or_label_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   if (op == pc_rtx)\n     return 1;\n@@ -949,7 +949,7 @@ pc_or_label_operand (op, mode)\n int\n call_insn_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return (CONSTANT_ADDRESS_P (op)\n \t  || (GET_CODE (op) == REG && op != arg_pointer_rtx\n@@ -1132,7 +1132,7 @@ se_nonimmediate_operand (op, mode)\n int\n consttable_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return CONSTANT_P (op);\n }\n@@ -1194,127 +1194,127 @@ m16_check_op (op, low, high, mask)\n int\n m16_uimm3_b (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, 0x1, 0x8, 0);\n }\n \n int\n m16_simm4_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0x8, 0x7, 0);\n }\n \n int\n m16_nsimm4_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0x7, 0x8, 0);\n }\n \n int\n m16_simm5_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0x10, 0xf, 0);\n }\n \n int\n m16_nsimm5_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0xf, 0x10, 0);\n }\n \n int\n m16_uimm5_4 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, (- 0x10) << 2, 0xf << 2, 3);\n }\n \n int\n m16_nuimm5_4 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, (- 0xf) << 2, 0x10 << 2, 3);\n }\n \n int\n m16_simm8_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0x80, 0x7f, 0);\n }\n \n int\n m16_nsimm8_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0x7f, 0x80, 0);\n }\n \n int\n m16_uimm8_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, 0x0, 0xff, 0);\n }\n \n int\n m16_nuimm8_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0xff, 0x0, 0);\n }\n \n int\n m16_uimm8_m1_1 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, - 0x1, 0xfe, 0);\n }\n \n int\n m16_uimm8_4 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, 0x0, 0xff << 2, 3);\n }\n \n int\n m16_nuimm8_4 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, (- 0xff) << 2, 0x0, 3);\n }\n \n int\n m16_simm8_8 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, (- 0x80) << 3, 0x7f << 3, 7);\n }\n \n int\n m16_nsimm8_8 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return m16_check_op (op, (- 0x7f) << 3, 0x80 << 3, 7);\n }\n@@ -1328,7 +1328,7 @@ m16_nsimm8_8 (op, mode)\n int\n m16_usym8_4 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   if (GET_CODE (op) == SYMBOL_REF\n       && SYMBOL_REF_FLAG (op)\n@@ -1355,7 +1355,7 @@ m16_usym8_4 (op, mode)\n int\n m16_usym5_4 (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   if (GET_CODE (op) == SYMBOL_REF\n       && SYMBOL_REF_FLAG (op)\n@@ -1767,7 +1767,7 @@ mips_move_1word (operands, insn, unsignedp)\n \n \t  if (ret != (char *)0 && MEM_VOLATILE_P (op1))\n \t    {\n-\t      int i = strlen (ret);\n+\t      size_t i = strlen (ret);\n \t      if (i > sizeof (volatile_buffer) - sizeof (\"%{%}\"))\n \t\tabort ();\n \n@@ -1991,7 +1991,7 @@ mips_move_1word (operands, insn, unsignedp)\n \n       if (ret != 0 && MEM_VOLATILE_P (op0))\n \t{\n-\t  int i = strlen (ret);\n+\t  size_t i = strlen (ret);\n \n \t  if (i > sizeof (volatile_buffer) - sizeof (\"%{%}\"))\n \t    abort ();\n@@ -2324,7 +2324,7 @@ mips_move_2words (operands, insn)\n \n \t  if (ret != 0 && MEM_VOLATILE_P (op1))\n \t    {\n-\t      int i = strlen (ret);\n+\t      size_t i = strlen (ret);\n \n \t      if (i > sizeof (volatile_buffer) - sizeof (\"%{%}\"))\n \t\tabort ();\n@@ -2435,7 +2435,7 @@ mips_move_2words (operands, insn)\n \n       if (ret != 0 && MEM_VOLATILE_P (op0))\n \t{\n-\t  int i = strlen (ret);\n+\t  size_t i = strlen (ret);\n \n \t  if (i > sizeof (volatile_buffer) - sizeof (\"%{%}\"))\n \t    abort ();\n@@ -3538,9 +3538,9 @@ output_block_move (insn, operands, num_regs, move_type)\n \n void\n init_cumulative_args (cum, fntype, libname)\n-     CUMULATIVE_ARGS *cum;\t/* argument info to initialize */\n-     tree fntype;\t\t/* tree ptr for function decl */\n-     rtx libname;\t\t/* SYMBOL_REF of library name or 0 */\n+     CUMULATIVE_ARGS *cum;\t\t/* argument info to initialize */\n+     tree fntype;\t\t\t/* tree ptr for function decl */\n+     rtx libname ATTRIBUTE_UNUSED;\t/* SYMBOL_REF of library name or 0 */\n {\n   static CUMULATIVE_ARGS zero_cum;\n   tree param, next_param;\n@@ -3588,10 +3588,14 @@ function_arg_advance (cum, mode, type, named)\n      int named;\t\t\t/* whether or not the argument was named */\n {\n   if (TARGET_DEBUG_E_MODE)\n-    fprintf (stderr,\n-\t     \"function_adv({gp reg found = %d, arg # = %2d, words = %2d}, %4s, 0x%.8x, %d )\\n\\n\",\n-\t     cum->gp_reg_found, cum->arg_number, cum->arg_words,\n-\t     GET_MODE_NAME (mode), type, named);\n+    {\n+      fprintf (stderr,\n+\t       \"function_adv({gp reg found = %d, arg # = %2d, words = %2d}, %4s, \",\n+\t       cum->gp_reg_found, cum->arg_number, cum->arg_words,\n+\t       GET_MODE_NAME (mode));\n+      fprintf (stderr, HOST_PTR_PRINTF, type);\n+      fprintf (stderr, \", %d )\\n\\n\", named);\n+    }\n \n   cum->arg_number++;\n   switch (mode)\n@@ -3667,10 +3671,15 @@ function_arg (cum, mode, type, named)\n \t\t      || TREE_CODE (type) == QUAL_UNION_TYPE));\n \n   if (TARGET_DEBUG_E_MODE)\n-    fprintf (stderr,\n-\t     \"function_arg( {gp reg found = %d, arg # = %2d, words = %2d}, %4s, 0x%.8x, %d ) = \",\n-\t     cum->gp_reg_found, cum->arg_number, cum->arg_words,\n-\t     GET_MODE_NAME (mode), type, named);\n+    {\n+      fprintf (stderr,\n+\t       \"function_arg( {gp reg found = %d, arg # = %2d, words = %2d}, %4s, \",\n+\t       cum->gp_reg_found, cum->arg_number, cum->arg_words,\n+\t       GET_MODE_NAME (mode));\n+      fprintf (stderr, HOST_PTR_PRINTF, type);\n+      fprintf (stderr, \", %d ) = \", named);\n+    }\n+  \n \n   cum->last_arg_fp = 0;\n   switch (mode)\n@@ -3902,7 +3911,7 @@ function_arg_partial_nregs (cum, mode, type, named)\n      CUMULATIVE_ARGS *cum;\t/* current arg information */\n      enum machine_mode mode;\t/* current arg mode */\n      tree type;\t\t\t/* type of the argument or 0 if lib support */\n-     int named;\t\t\t/* != 0 for normal args, == 0 for ... args */\n+     int named ATTRIBUTE_UNUSED;/* != 0 for normal args, == 0 for ... args */\n {\n   if ((mode == BLKmode\n        || GET_MODE_CLASS (mode) != MODE_COMPLEX_INT\n@@ -3995,7 +4004,7 @@ override_options ()\n   if (mips_isa_string == 0)\n     mips_isa = MIPS_ISA_DEFAULT;\n \n-  else if (isdigit (*mips_isa_string))\n+  else if (ISDIGIT (*mips_isa_string))\n     {\n       mips_isa = atoi (mips_isa_string);\n       if (mips_isa == 16)\n@@ -4959,7 +4968,7 @@ print_operand_address (file, addr)\n \n int\n mips_output_external (file, decl, name)\n-     FILE *file;\n+     FILE *file ATTRIBUTE_UNUSED;\n      tree decl;\n      char *name;\n {\n@@ -5171,8 +5180,8 @@ mips_output_lineno (stream, line)\n void\n final_prescan_insn (insn, opvec, noperands)\n      rtx insn;\n-     rtx opvec[];\n-     int noperands;\n+     rtx opvec[] ATTRIBUTE_UNUSED;\n+     int noperands ATTRIBUTE_UNUSED;\n {\n   if (dslots_number_nops > 0)\n     {\n@@ -5671,7 +5680,7 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \n       if (gp_offset < 0 || end_offset < 0)\n \tfatal (\"gp_offset (%ld) or end_offset (%ld) is less than zero.\",\n-\t       gp_offset, end_offset);\n+\t       (long) gp_offset, (long) end_offset);\n \n       /* If we see a large frame in mips16 mode, we save the registers\n          before adjusting the stack pointer, and load them afterward.  */\n@@ -5749,13 +5758,16 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\tRTX_FRAME_RELATED_P (insn) = 1;\n \t    }\n \t  else\n-\t    fprintf (file, \"\\tli\\t%s,0x%.08lx\\t# %ld\\n\\t%s\\t%s,%s,%s\\n\",\n-\t\t     reg_names[MIPS_TEMP2_REGNUM],\n-\t\t     base_offset, base_offset,\n-\t\t     Pmode == DImode ? \"daddu\" : \"addu\",\n-\t\t     reg_names[MIPS_TEMP2_REGNUM],\n-\t\t     reg_names[MIPS_TEMP2_REGNUM],\n-\t\t     reg_names[STACK_POINTER_REGNUM]);\n+\t    {\n+\t      fprintf (file, \"\\tli\\t%s,0x%.08lx\\t# \",\n+\t\t       reg_names[MIPS_TEMP2_REGNUM], base_offset);\n+\t      fprintf (file, HOST_WIDE_INT_PRINT_DEC, base_offset);\n+\t      fprintf (file, \"\\n\\t%s\\t%s,%s,%s\\n\",\n+\t\t       Pmode == DImode ? \"daddu\" : \"addu\",\n+\t\t       reg_names[MIPS_TEMP2_REGNUM],\n+\t\t       reg_names[MIPS_TEMP2_REGNUM],\n+\t\t       reg_names[STACK_POINTER_REGNUM]);\n+\t    }\n \t}\n \n       /* When we restore the registers in MIPS16 mode, then if we are\n@@ -5848,13 +5860,14 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\t\t\t     reg_names[r], reg_names[regno]);\n \t\t\t  }\n \t\t      }\n-\t\t    fprintf (file, \"\\t%s\\t%s,%ld(%s)\\n\",\n+\t\t    fprintf (file, \"\\t%s\\t%s,\",\n \t\t\t     (TARGET_64BIT\n \t\t\t      ? (store_p) ? \"sd\" : \"ld\"\n \t\t\t      : (store_p) ? \"sw\" : \"lw\"),\n-\t\t\t     reg_names[r],\n-\t\t\t     gp_offset - base_offset,\n-\t\t\t     reg_names[REGNO(base_reg_rtx)]);\n+\t\t\t     reg_names[r]);\n+\t\t    fprintf (file, HOST_WIDE_INT_PRINT_DEC, \n+\t\t\t     gp_offset - base_offset);\n+\t\t    fprintf (file, \"(%s)\\n\", reg_names[REGNO(base_reg_rtx)]);\n \t\t    if (! store_p\n \t\t\t&& TARGET_MIPS16\n \t\t\t&& regno != GP_REG_FIRST + 31\n@@ -5882,7 +5895,7 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \n       if (fp_offset < 0 || end_offset < 0)\n \tfatal (\"fp_offset (%ld) or end_offset (%ld) is less than zero.\",\n-\t       fp_offset, end_offset);\n+\t       (long) fp_offset, (long) end_offset);\n \n       else if (fp_offset < 32768)\n \tbase_reg_rtx = stack_pointer_rtx, base_offset  = 0;\n@@ -5962,13 +5975,16 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\tRTX_FRAME_RELATED_P (insn) = 1;\n \t    }\n \t  else\n-\t    fprintf (file, \"\\tli\\t%s,0x%.08lx\\t# %ld\\n\\t%s\\t%s,%s,%s\\n\",\n-\t\t     reg_names[MIPS_TEMP2_REGNUM],\n-\t\t     base_offset, base_offset,\n-\t\t     Pmode == DImode ? \"daddu\" : \"addu\",\n-\t\t     reg_names[MIPS_TEMP2_REGNUM],\n-\t\t     reg_names[MIPS_TEMP2_REGNUM],\n-\t\t     reg_names[STACK_POINTER_REGNUM]);\n+\t    {\n+\t      fprintf (file, \"\\tli\\t%s,0x%.08lx\\t# \",\n+\t\t       reg_names[MIPS_TEMP2_REGNUM], base_offset);\n+\t      fprintf (file, HOST_WIDE_INT_PRINT_DEC, base_offset);\n+\t      fprintf (file, \"\\n\\t%s\\t%s,%s,%s\\n\",\n+\t\t       Pmode == DImode ? \"daddu\" : \"addu\",\n+\t\t       reg_names[MIPS_TEMP2_REGNUM],\n+\t\t       reg_names[MIPS_TEMP2_REGNUM],\n+\t\t       reg_names[STACK_POINTER_REGNUM]);\n+\t    }\n \t}\n \n       for (regno = FP_REG_LAST-1; regno >= FP_REG_FIRST; regno -= fp_inc)\n@@ -5994,13 +6010,16 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\t  emit_move_insn (reg_rtx, mem_rtx);\n \t      }\n \t    else\n-\t      fprintf (file, \"\\t%s\\t%s,%ld(%s)\\n\",\n-\t\t       (TARGET_SINGLE_FLOAT\n-\t\t\t? (store_p ? \"s.s\" : \"l.s\")\n-\t\t\t: (store_p ? \"s.d\" : \"l.d\")),\n-\t\t       reg_names[regno],\n-\t\t       fp_offset - base_offset,\n-\t\t       reg_names[REGNO(base_reg_rtx)]);\n+\t      {\n+\t\tfprintf (file, \"\\t%s\\t%s,\",\n+\t\t\t (TARGET_SINGLE_FLOAT\n+\t\t\t  ? (store_p ? \"s.s\" : \"l.s\")\n+\t\t\t  : (store_p ? \"s.d\" : \"l.d\")),\n+\t\t\t reg_names[regno]);\n+\t\tfprintf (file, HOST_WIDE_INT_PRINT_DEC,\n+\t\t\t fp_offset - base_offset);\n+\t\tfprintf (file, \"(%s)\\n\", reg_names[REGNO(base_reg_rtx)]);\n+\t      }\n \n \t    fp_offset -= fp_size;\n \t  }\n@@ -6012,7 +6031,7 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n void\n function_prologue (file, size)\n      FILE *file;\n-     int size;\n+     int size ATTRIBUTE_UNUSED;\n {\n #ifndef FUNCTION_NAME_ALREADY_DECLARED\n   char *fnname;\n@@ -6570,8 +6589,8 @@ mips_expand_prologue ()\n \n void\n function_epilogue (file, size)\n-     FILE *file;\n-     HOST_WIDE_INT size;\n+     FILE *file ATTRIBUTE_UNUSED;\n+     HOST_WIDE_INT size ATTRIBUTE_UNUSED;\n {\n   char *fnname;\n \n@@ -6602,7 +6621,7 @@ function_epilogue (file, size)\n       dslots_load_total += num_regs;\n \n       fprintf (stderr,\n-\t       \"%-20s fp=%c leaf=%c alloca=%c setjmp=%c stack=%4ld arg=%3ld reg=%2d/%d delay=%3d/%3dL %3d/%3dJ refs=%3d/%3d/%3d\",\n+\t       \"%-20s fp=%c leaf=%c alloca=%c setjmp=%c stack=%4ld arg=%3d reg=%2d/%d delay=%3d/%3dL %3d/%3dJ refs=%3d/%3d/%3d\",\n \t       name, frame_pointer_needed ? 'y' : 'n',\n \t       (current_frame_info.mask & RA_MASK) != 0 ? 'n' : 'y',\n \t       current_function_calls_alloca ? 'y' : 'n',\n@@ -6804,7 +6823,7 @@ mips_can_use_return_insn ()\n void\n mips_select_rtx_section (mode, x)\n      enum machine_mode mode;\n-     rtx x;\n+     rtx x ATTRIBUTE_UNUSED;\n {\n   if (TARGET_MIPS16)\n     {\n@@ -6904,7 +6923,7 @@ mips_select_section (decl, reloc)\n rtx\n mips_function_value (valtype, func)\n      tree valtype;\n-     tree func;\n+     tree func ATTRIBUTE_UNUSED;\n {\n   int reg = GP_RETURN;\n   enum machine_mode mode = TYPE_MODE (valtype);\n@@ -6999,10 +7018,10 @@ mips_function_value (valtype, func)\n \n int\n function_arg_pass_by_reference (cum, mode, type, named)\n-     CUMULATIVE_ARGS *cum;\n+     CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED;\n      enum machine_mode mode;\n      tree type;\n-     int named;\n+     int named ATTRIBUTE_UNUSED;\n {\n   int size;\n \n@@ -8395,7 +8414,7 @@ machine_dependent_reorg (first)\n int\n extend_operator (x, mode)\n      rtx x;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   enum rtx_code code = GET_CODE (x);\n   return code == SIGN_EXTEND || code == ZERO_EXTEND;\n@@ -8408,7 +8427,7 @@ extend_operator (x, mode)\n int\n highpart_shift_operator (x, mode)\n      rtx x;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   enum rtx_code code = GET_CODE (x);\n   return (code == LSHIFTRT"}, {"sha": "50ff6407e11f8bdd0b7e27cf3db7239a4f968320", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38831dfe51e50e0c24de08cd1657efd69ca809ac/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38831dfe51e50e0c24de08cd1657efd69ca809ac/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=38831dfe51e50e0c24de08cd1657efd69ca809ac", "patch": "@@ -1728,7 +1728,6 @@\n   \"*\n {\n   static char *const madd[] = { \\\"madd\\\\t%1,%2\\\",    \\\"madd\\\\t%0,%1,%2\\\" };\n-  static char *const macc[] = { \\\"macc\\\\t$0,%1,%2\\\", \\\"macc\\\\t%0,%1,%2\\\" };\n   if (which_alternative == 2)\n     return \\\"#\\\";\n   return madd[which_alternative];"}]}