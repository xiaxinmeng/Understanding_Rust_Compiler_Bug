{"sha": "fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVjNDBkMDZkYWRmOWNkNWJmNGFkYjBlZTlhNDdmMjY3ZTZjNzY5Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-26T14:59:36Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-26T14:59:36Z"}, "message": "Allow more complex call replacements in gimple-fold.c\n\nAn upcoming patch adds a match.pd rule that folds pow(pow(x,y),z)\nto pow(x,y*z).  This fold can reuse the existing pow gimple statement\nand simply replace the operands with x and y*z.  However, the y*z\nitself requires a separate gimple statement and the code wasn't\nprepared to handle that.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* gimple-fold.c (replace_stmt_with_simplification): Don't allow\n\tnew statements to be inserted if inplace.  Allow calls to have\n\tnonempty sequences.\n\nFrom-SVN: r229371", "tree": {"sha": "d47ed2f8bb25f49bb46b11ff5fbf031bfdb518f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d47ed2f8bb25f49bb46b11ff5fbf031bfdb518f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b7c37ee712fdc5164db6cd6acb816fcf6752c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7c37ee712fdc5164db6cd6acb816fcf6752c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7c37ee712fdc5164db6cd6acb816fcf6752c02"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "b35b201b0f7749dc8d1f221a55730e4b473a7cd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693", "patch": "@@ -1,3 +1,9 @@\n+2015-10-26  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gimple-fold.c (replace_stmt_with_simplification): Don't allow\n+\tnew statements to be inserted if inplace.  Allow calls to have\n+\tnonempty sequences.\n+\n 2015-10-26  Richard Biener  <rguenther@suse.de>\n \n \t* tree-object-size.c: Remove builtins.h include, include tree-cfg.h."}, {"sha": "392738d7f677f1fcec63ccf34af891f17c53e2bb", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=fec40d06dadf9cd5bf4adb0ee9a47f267e6c7693", "patch": "@@ -3289,6 +3289,11 @@ replace_stmt_with_simplification (gimple_stmt_iterator *gsi,\n \t  && !has_use_on_stmt (ops[2], stmt)))\n     return false;\n \n+  /* Don't insert new statements when INPLACE is true, even if we could\n+     reuse STMT for the final statement.  */\n+  if (inplace && !gimple_seq_empty_p (*seq))\n+    return false;\n+\n   if (gcond *cond_stmt = dyn_cast <gcond *> (stmt))\n     {\n       gcc_assert (rcode.is_tree_code ());\n@@ -3365,7 +3370,14 @@ replace_stmt_with_simplification (gimple_stmt_iterator *gsi,\n \t}\n       if (i < 3)\n \tgcc_assert (ops[i] == NULL_TREE);\n-      gcc_assert (gimple_seq_empty_p (*seq));\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t{\n+\t  fprintf (dump_file, \"gimple_simplified to \");\n+\t  if (!gimple_seq_empty_p (*seq))\n+\t    print_gimple_seq (dump_file, *seq, 0, TDF_SLIM);\n+\t  print_gimple_stmt (dump_file, gsi_stmt (*gsi), 0, TDF_SLIM);\n+\t}\n+      gsi_insert_seq_before (gsi, *seq, GSI_SAME_STMT);\n       return true;\n     }\n   else if (!inplace)"}]}