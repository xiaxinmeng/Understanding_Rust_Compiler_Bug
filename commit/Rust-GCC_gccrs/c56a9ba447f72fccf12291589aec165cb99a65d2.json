{"sha": "c56a9ba447f72fccf12291589aec165cb99a65d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU2YTliYTQ0N2Y3MmZjY2YxMjI5MTU4OWFlYzE2NWNiOTlhNjVkMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:00:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:00:18Z"}, "message": "[multiple changes]\n\n2010-10-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch5.adb, sem_ch5.adb, sinfo.ads, snames.ads-tmpl, par-ch5.adb:\n\tMinor reformatting.\n\n2010-10-22  Geert Bosch  <bosch@adacore.com>\n\n\t* stand.ads: Fix typo in comment.\n\n2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb: Enable in-out parameter for functions.\n\n2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Quantified_Expression): Handle properly loop\n\titerators that are transformed into container iterators after analysis.\n\t* exp_ch4.adb (Expand_N_Quantified_Expression): Handle properly both\n\titerator forms before rewriting as a loop.\n\n2010-10-22  Brett Porter  <porter@adacore.com>\n\n\t* a-locale.adb, a-locale.ads, locales.c: New files.\n\t* Makefile.rtl: Add a-locale\n\t* gcc-interface/Makefile.in: Add locales.c\n\nFrom-SVN: r165812", "tree": {"sha": "012fdf002a8460dafcfb42b7a4799ec65a6268f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/012fdf002a8460dafcfb42b7a4799ec65a6268f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c56a9ba447f72fccf12291589aec165cb99a65d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56a9ba447f72fccf12291589aec165cb99a65d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c56a9ba447f72fccf12291589aec165cb99a65d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56a9ba447f72fccf12291589aec165cb99a65d2/comments", "author": null, "committer": null, "parents": [{"sha": "57d62f0cb7346e2a76e7e70c3b3726d0140ec662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d62f0cb7346e2a76e7e70c3b3726d0140ec662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d62f0cb7346e2a76e7e70c3b3726d0140ec662"}], "stats": {"total": 526, "additions": 385, "deletions": 141}, "files": [{"sha": "7b62fc22d1ce556d6f381f65e45e656dbfa14614", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -1,3 +1,29 @@\n+2010-10-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch5.adb, sem_ch5.adb, sinfo.ads, snames.ads-tmpl, par-ch5.adb:\n+\tMinor reformatting.\n+\n+2010-10-22  Geert Bosch  <bosch@adacore.com>\n+\n+\t* stand.ads: Fix typo in comment.\n+\n+2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb: Enable in-out parameter for functions.\n+\n+2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Quantified_Expression): Handle properly loop\n+\titerators that are transformed into container iterators after analysis.\n+\t* exp_ch4.adb (Expand_N_Quantified_Expression): Handle properly both\n+\titerator forms before rewriting as a loop.\n+\n+2010-10-22  Brett Porter  <porter@adacore.com>\n+\n+\t* a-locale.adb, a-locale.ads, locales.c: New files.\n+\t* Makefile.rtl: Add a-locale\n+\t* gcc-interface/Makefile.in: Add locales.c\n+\n 2010-10-22  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.ads, sem_util.adb, sem_aux.ads, sem_aux.adb"}, {"sha": "229724c2b1c33d257e8f45a2fbdd16c88c78660a", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -158,6 +158,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-llitio$(objext) \\\n   a-lliwti$(objext) \\\n   a-llizti$(objext) \\\n+  a-locale$(objext) \\\n   a-ncelfu$(objext) \\\n   a-ngcefu$(objext) \\\n   a-ngcoty$(objext) \\"}, {"sha": "64c51256ad1900f97c8bd14dd6a3910652cd6038", "filename": "gcc/ada/a-locale.adb", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fa-locale.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fa-locale.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-locale.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -0,0 +1,65 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                           A D A . L O C A L E S                          --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--            Copyright (C) 2010, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with System; use System;\n+\n+package body Ada.Locales is\n+\n+   type Lower_4 is array (1 .. 4) of Character range 'a' .. 'z';\n+   type Upper_4 is array (1 .. 4) of Character range 'A' .. 'Z';\n+\n+   --------------\n+   -- Language --\n+   --------------\n+\n+   function Language return Language_Code is\n+      procedure C_Get_Language_Code (P : Address);\n+      pragma Import (C, C_Get_Language_Code);\n+      F : Lower_4;\n+   begin\n+      C_Get_Language_Code (F (1)'Address);\n+      return Language_Code (F (1 .. 3));\n+   end Language;\n+\n+   -------------\n+   -- Country --\n+   -------------\n+\n+   function Country return Country_Code is\n+      procedure C_Get_Country_Code (P : Address);\n+      pragma Import (C, C_Get_Country_Code);\n+      F : Upper_4;\n+   begin\n+      C_Get_Country_Code (F (1)'Address);\n+      return Country_Code (F (1 .. 2));\n+   end Country;\n+\n+end Ada.Locales;"}, {"sha": "629f367bb6cdb65b53780ac61e3e2c78de19835c", "filename": "gcc/ada/a-locale.ads", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fa-locale.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fa-locale.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-locale.ads?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -0,0 +1,31 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                           A D A . L O C A L E S                          --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--            Copyright (C) 2010, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package Ada.Locales is\n+   pragma Preelaborate (Locales);\n+   pragma Remote_Types (Locales);\n+\n+   type Language_Code is array (1 .. 3) of Character range 'a' .. 'z';\n+   type Country_Code  is array (1 .. 2) of Character range 'A' .. 'Z';\n+\n+   Language_Unknown : constant Language_Code := \"und\";\n+   Country_Unknown  : constant Country_Code := \"ZZ\";\n+\n+   function Language return Language_Code;\n+   function Country return Country_Code;\n+\n+end Ada.Locales;"}, {"sha": "31a43db6ba1dd3ceb9f242eec2c56b1c8e0abc93", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -7428,13 +7428,13 @@ package body Exp_Ch4 is\n \n    procedure Expand_N_Quantified_Expression (N : Node_Id) is\n       Loc      : constant Source_Ptr := Sloc (N);\n-      Iterator : constant Node_Id    := Loop_Parameter_Specification (N);\n       Cond     : constant Node_Id    := Condition (N);\n \n-      Actions : List_Id;\n-      Decl    : Node_Id;\n-      Test    : Node_Id;\n-      Tnn     : Entity_Id;\n+      Actions  : List_Id;\n+      Decl     : Node_Id;\n+      I_Scheme : Node_Id;\n+      Test     : Node_Id;\n+      Tnn      : Entity_Id;\n \n       --  We expand:\n \n@@ -7460,6 +7460,9 @@ package body Exp_Ch4 is\n       --           end if;\n       --        end loop;\n \n+      --  In both cases, the iteration may be over a container, in which\n+      --  case it is given by an iterator specification, not a loop.\n+\n    begin\n       Actions := New_List;\n       Tnn := Make_Temporary (Loc, 'T');\n@@ -7496,14 +7499,28 @@ package body Exp_Ch4 is\n                Make_Exit_Statement (Loc)));\n       end if;\n \n+      if Present (Loop_Parameter_Specification (N)) then\n+         I_Scheme :=\n+           Make_Iteration_Scheme (Loc,\n+              Loop_Parameter_Specification =>\n+                Loop_Parameter_Specification (N));\n+      else\n+         I_Scheme :=\n+           Make_Iteration_Scheme (Loc,\n+             Iterator_Specification => Iterator_Specification (N));\n+      end if;\n+\n       Append_To (Actions,\n         Make_Loop_Statement (Loc,\n-          Iteration_Scheme =>\n-            Make_Iteration_Scheme (Loc,\n-              Loop_Parameter_Specification => Iterator),\n+          Iteration_Scheme => I_Scheme,\n               Statements                   => New_List (Test),\n               End_Label                    => Empty));\n \n+      --  The components of the scheme have already been analyzed, and the\n+      --  loop index declaration has been processed.\n+\n+      Set_Analyzed (Iteration_Scheme (Last (Actions)));\n+\n       Rewrite (N,\n         Make_Expression_With_Actions (Loc,\n           Expression => New_Occurrence_Of (Tnn, Loc),"}, {"sha": "b0a4d496223ff5dac13528e1ec9255ab444fa2cc", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 86, "deletions": 75, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -104,8 +104,8 @@ package body Exp_Ch5 is\n    --  might be filled with components from child types).\n \n    procedure Expand_Iterator_Loop (N : Node_Id);\n-   --  Expand loops over arrays and containers that use the form \"for X of C\"\n-   --  with an optional subtype mark, and \"for Y in C\".\n+   --  Expand loop over arrays and containers that uses the form \"for X of C\"\n+   --  with an optional subtype mark, or \"for Y in C\".\n \n    function Make_Tag_Ctrl_Assignment (N : Node_Id) return List_Id;\n    --  Generate the necessary code for controlled and tagged assignment, that\n@@ -2773,71 +2773,77 @@ package body Exp_Ch5 is\n          if Of_Present (I_Spec) then\n             Cursor := Make_Temporary (Loc, 'C');\n \n-            --  For Elem of Arr loop ..\n+            --  for Elem of Arr loop ...\n \n             declare\n                Decl : constant Node_Id :=\n                         Make_Object_Renaming_Declaration (Loc,\n                           Defining_Identifier => Id,\n-                          Subtype_Mark =>\n+                          Subtype_Mark        =>\n                             New_Occurrence_Of (Component_Type (Typ), Loc),\n-                          Name => Make_Indexed_Component (Loc,\n-                            Prefix => New_Occurrence_Of (Container, Loc),\n-                            Expressions =>\n-                              New_List (New_Occurrence_Of (Cursor, Loc))));\n+                          Name                =>\n+                            Make_Indexed_Component (Loc,\n+                              Prefix      =>\n+                                New_Occurrence_Of (Container, Loc),\n+                              Expressions =>\n+                                New_List (New_Occurrence_Of (Cursor, Loc))));\n             begin\n                Stats := Statements (N);\n                Prepend (Decl, Stats);\n \n-               New_Loop := Make_Loop_Statement (Loc,\n-                 Iteration_Scheme =>\n-                   Make_Iteration_Scheme (Loc,\n-                     Loop_Parameter_Specification =>\n-                       Make_Loop_Parameter_Specification (Loc,\n-                         Defining_Identifier => Cursor,\n-                         Discrete_Subtype_Definition =>\n-                            Make_Attribute_Reference (Loc,\n-                              Prefix => New_Occurrence_Of (Container, Loc),\n-                              Attribute_Name => Name_Range),\n-                         Reverse_Present => Reverse_Present (I_Spec))),\n-                 Statements => Stats,\n-                 End_Label => Empty);\n+               New_Loop :=\n+                 Make_Loop_Statement (Loc,\n+                   Iteration_Scheme =>\n+                     Make_Iteration_Scheme (Loc,\n+                       Loop_Parameter_Specification =>\n+                         Make_Loop_Parameter_Specification (Loc,\n+                           Defining_Identifier         => Cursor,\n+                           Discrete_Subtype_Definition =>\n+                              Make_Attribute_Reference (Loc,\n+                                Prefix         =>\n+                                  New_Occurrence_Of (Container, Loc),\n+                                Attribute_Name => Name_Range),\n+                           Reverse_Present => Reverse_Present (I_Spec))),\n+                   Statements       => Stats,\n+                   End_Label        => Empty);\n             end;\n \n          else\n \n-            --  For Index in Array loop\n-            --\n-            --  The cursor (index into the array) is the source Id.\n+            --  for Index in Array loop ...\n+\n+            --  The cursor (index into the array) is the source Id\n \n             Cursor := Id;\n-            New_Loop := Make_Loop_Statement (Loc,\n-              Iteration_Scheme =>\n-                Make_Iteration_Scheme (Loc,\n-                  Loop_Parameter_Specification =>\n-                    Make_Loop_Parameter_Specification (Loc,\n-                      Defining_Identifier => Cursor,\n-                      Discrete_Subtype_Definition =>\n-                         Make_Attribute_Reference (Loc,\n-                           Prefix => New_Occurrence_Of (Container, Loc),\n-                           Attribute_Name => Name_Range),\n-                      Reverse_Present => Reverse_Present (I_Spec))),\n-              Statements => Statements (N),\n-              End_Label => Empty);\n+            New_Loop :=\n+              Make_Loop_Statement (Loc,\n+                Iteration_Scheme =>\n+                  Make_Iteration_Scheme (Loc,\n+                    Loop_Parameter_Specification =>\n+                      Make_Loop_Parameter_Specification (Loc,\n+                        Defining_Identifier         => Cursor,\n+                        Discrete_Subtype_Definition =>\n+                           Make_Attribute_Reference (Loc,\n+                             Prefix         =>\n+                               New_Occurrence_Of (Container, Loc),\n+                             Attribute_Name => Name_Range),\n+                        Reverse_Present => Reverse_Present (I_Spec))),\n+                Statements       => Statements (N),\n+                End_Label        => Empty);\n          end if;\n \n       else\n \n-         --  Iterators over containers. In both cases these require a\n-         --  cursor of the proper type.\n+         --  Iterators over containers. In both cases these require a cursor of\n+         --  the proper type.\n \n          --  Cursor : P.Cursor_Type := Container.First;\n          --  while Cursor /= P.No_Element loop\n \n-         --     --  for the \"of\" form, the element name renames\n-         --     --  the element denoted by the cursor.\n-\n          --     Obj : P.Element_Type renames Element (Cursor);\n+         --     --  For the \"of\" form, the element name renames the element\n+         --     --  designated by the cursor.\n+\n          --     Statements;\n          --     P.Next (Cursor);\n          --  end loop;\n@@ -2879,28 +2885,28 @@ package body Exp_Ch5 is\n \n             --  C : Cursor_Type := Container.First;\n \n-            Cursor_Decl := Make_Object_Declaration (Loc,\n-              Defining_Identifier => Cursor,\n-              Object_Definition =>\n-                Make_Selected_Component (Loc,\n-                  Prefix => New_Occurrence_Of (Pack, Loc),\n-                  Selector_Name =>\n-                    Make_Identifier (Loc, Name_Cursor)),\n-              Expression =>\n-                Make_Selected_Component (Loc,\n-                  Prefix => New_Occurrence_Of (Container, Loc),\n-                  Selector_Name => Make_Identifier (Loc, Name_Init)));\n+            Cursor_Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Cursor,\n+                Object_Definition   =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => New_Occurrence_Of (Pack, Loc),\n+                    Selector_Name => Make_Identifier (Loc, Name_Cursor)),\n+                Expression =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => New_Occurrence_Of (Container, Loc),\n+                    Selector_Name => Make_Identifier (Loc, Name_Init)));\n \n             Insert_Action (N, Cursor_Decl);\n \n             --  while C /= No_Element loop\n \n             Cond := Make_Op_Ne (Loc,\n-              Left_Opnd => New_Occurrence_Of (Cursor, Loc),\n-              Right_Opnd => Make_Selected_Component (Loc,\n-                 Prefix => New_Occurrence_Of (Pack, Loc),\n-                 Selector_Name => Make_Identifier (Loc,\n-                   Chars => Name_No_Element)));\n+                      Left_Opnd  => New_Occurrence_Of (Cursor, Loc),\n+                      Right_Opnd => Make_Selected_Component (Loc,\n+                         Prefix        => New_Occurrence_Of (Pack, Loc),\n+                         Selector_Name =>\n+                           Make_Identifier (Loc, Chars => Name_No_Element)));\n \n             if Of_Present (I_Spec) then\n \n@@ -2909,39 +2915,44 @@ package body Exp_Ch5 is\n                Renaming_Decl :=\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Id,\n-                   Subtype_Mark => New_Occurrence_Of (Element_Type, Loc),\n-                   Name => Make_Indexed_Component (Loc,\n-                     Prefix =>\n-                     Make_Selected_Component (Loc,\n-                       Prefix =>  New_Occurrence_Of (Pack, Loc),\n-                       Selector_Name =>\n-                         Make_Identifier (Loc, Chars => Name_Element)),\n-                     Expressions =>\n-                       New_List (New_Occurrence_Of (Cursor, Loc))));\n+                   Subtype_Mark        =>\n+                     New_Occurrence_Of (Element_Type, Loc),\n+                   Name                =>\n+                     Make_Indexed_Component (Loc,\n+                       Prefix =>\n+                         Make_Selected_Component (Loc,\n+                           Prefix        =>  New_Occurrence_Of (Pack, Loc),\n+                           Selector_Name =>\n+                             Make_Identifier (Loc, Chars => Name_Element)),\n+                       Expressions =>\n+                         New_List (New_Occurrence_Of (Cursor, Loc))));\n \n                Prepend (Renaming_Decl, Stats);\n             end if;\n \n-            --  For both iterator forms, add call to Next to advance cursor.\n+            --  For both iterator forms, add call to step operation (Next or\n+            --  Previous) to advance cursor.\n \n             Append_To (Stats,\n               Make_Procedure_Call_Statement (Loc,\n-                Name => Make_Selected_Component (Loc,\n-                  Prefix => New_Occurrence_Of (Pack, Loc),\n-                  Selector_Name => Make_Identifier (Loc, Name_Step)),\n+                Name =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => New_Occurrence_Of (Pack, Loc),\n+                    Selector_Name => Make_Identifier (Loc, Name_Step)),\n                 Parameter_Associations =>\n                   New_List (New_Occurrence_Of (Cursor, Loc))));\n \n             New_Loop := Make_Loop_Statement (Loc,\n               Iteration_Scheme =>\n-                Make_Iteration_Scheme (Loc,\n-                  Condition => Cond),\n-              Statements => Stats,\n-              End_Label => Empty);\n+                Make_Iteration_Scheme (Loc, Condition => Cond),\n+              Statements       => Stats,\n+              End_Label        => Empty);\n          end;\n       end if;\n \n       --  Set_Analyzed (I_Spec);\n+      --  Why is this commented out???\n+\n       Rewrite (N, New_Loop);\n       Analyze (N);\n    end Expand_Iterator_Loop;"}, {"sha": "f4a5c235f0db271eb07a999c1296d73e2ca9ed82", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -2215,13 +2215,13 @@ endif\n LIBGNAT_SRCS = adadecode.c adadecode.h adaint.c adaint.h\t\\\n   argv.c cio.c cstreams.c errno.c exit.c cal.c ctrl_c.c env.c env.h\t\\\n   arit64.c raise.h raise.c sysdep.c aux-io.c init.c initialize.c\t\\\n-  seh_init.c final.c tracebak.c tb-alvms.c tb-alvxw.c tb-gcc.c\t\t\\\n-  expect.c mkdir.c socket.c gsocket.h targext.c $(EXTRA_LIBGNAT_SRCS)\n+  locales.c seh_init.c final.c tracebak.c tb-alvms.c tb-alvxw.c         \\\n+  tb-gcc.c expect.c mkdir.c socket.c gsocket.h targext.c $(EXTRA_LIBGNAT_SRCS)\n \n LIBGNAT_OBJS = adadecode.o adaint.o argv.o cio.o cstreams.o ctrl_c.o\t\\\n   errno.o exit.o env.o raise.o sysdep.o aux-io.o init.o initialize.o\t\\\n-  seh_init.o cal.o arit64.o final.o tracebak.o expect.o mkdir.o\t\t\\\n-  socket.o targext.o $(EXTRA_LIBGNAT_OBJS)\n+  locales.o seh_init.o cal.o arit64.o final.o tracebak.o expect.o       \\\n+  mkdir.o socket.o targext.o $(EXTRA_LIBGNAT_OBJS)\n \n # NOTE ??? - when the -I option for compiling Ada code is made to work,\n #  the library installation will change and there will be a\n@@ -2757,6 +2757,7 @@ exit.o    : adaint.h exit.c\n expect.o  : expect.c\n final.o   : final.c\n link.o    : link.c\n+locales.o : locales.c\n mkdir.o   : mkdir.c\n socket.o  : socket.c gsocket.h\n sysdep.o  : sysdep.c"}, {"sha": "ba649e2b08b2a2048de76dac4f0f24b3a42b5954", "filename": "gcc/ada/locales.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Flocales.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Flocales.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flocales.c?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -0,0 +1,56 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                             L O C A L E S                                *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *             Copyright (C) 2010, Free Software Foundation, Inc.           *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n+ *                                                                          *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/*  This file provides OS-dependent support for the Ada.Locales package.    */\n+\n+typedef char char4 [4];\n+\n+/*\n+  c_get_language_code needs to fill in the Alpha-3 encoding of the\n+  language code (3 lowercase letters). That shoud be \"und\" if the\n+  language is unknown. [see Ada.Locales]\n+*/\n+void c_get_language_code (char4 p) {\n+  char *r = \"und\";\n+  for (; *r != '\\0'; p++, r++)\n+    *p = *r;\n+}\n+\n+/*\n+  c_get_country_code needs to fill in the Alpha-2 encoding of the\n+  country code (2 uppercase letters). That shoud be \"ZZ\" if the\n+  country is unknown. [see Ada.Locales]\n+*/\n+void c_get_country_code (char4 p) {\n+  char *r = \"ZZ\";\n+  for (; *r != '\\0'; p++, r++)\n+    *p = *r;\n+}"}, {"sha": "de5883a281b683a2a6038cc204d1850de46a3fbf", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -1571,8 +1571,7 @@ package body Ch5 is\n       Iter_Scheme_Node := New_Node (N_Iteration_Scheme, Token_Ptr);\n       Spec := P_Loop_Parameter_Specification;\n       if Nkind (Spec) = N_Loop_Parameter_Specification then\n-         Set_Loop_Parameter_Specification\n-           (Iter_Scheme_Node, Spec);\n+         Set_Loop_Parameter_Specification (Iter_Scheme_Node, Spec);\n       else\n          Set_Iterator_Specification (Iter_Scheme_Node, Spec);\n       end if;\n@@ -1701,18 +1700,16 @@ package body Ch5 is\n       Save_Scan_State (Scan_State);\n       ID_Node := P_Defining_Identifier (C_In);\n \n-      --  If the next token is OF it indicates the Ada2012 iterator. If the\n-      --  next token is a colon, the iterator includes a subtype indication\n-      --  for the bound variable of the iteration. Otherwise we parse the\n-      --  construct as a loop parameter specification. Note that the form:\n+      --  If the next token is OF, it indicates an Ada 2012 iterator. If the\n+      --  next token is a colon, this is also an Ada 2012 iterator, including a\n+      --  subtype indication for the loop parameter. Otherwise we parse the\n+      --  construct as a loop parameter specification. Note that the form\n       --  \"for A in B\" is ambiguous, and must be resolved semantically: if B\n       --  is a discrete subtype this is a loop specification, but if it is an\n       --  expression it is an iterator specification. Ambiguity is resolved\n       --  during analysis of the loop parameter specification.\n \n-      if Token = Tok_Of\n-        or else Token = Tok_Colon\n-      then\n+      if Token = Tok_Of or else Token = Tok_Colon then\n          return P_Iterator_Specification (ID_Node);\n       end if;\n \n@@ -1765,8 +1762,10 @@ package body Ch5 is\n       if Token = Tok_Of then\n          Set_Of_Present (Node1);\n          Scan;  --  past OF\n+\n       elsif Token = Tok_In then\n          Scan;  --  past IN\n+\n       else\n          return Error;\n       end if;"}, {"sha": "ab33375d533e4e463e8fa22bcdc0f431c76fd9b8", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -3198,12 +3198,32 @@ package body Sem_Ch4 is\n       Set_Etype  (Ent,  Standard_Void_Type);\n       Set_Parent (Ent, N);\n \n-      Iterator :=\n-        Make_Iteration_Scheme (Loc,\n-           Loop_Parameter_Specification =>  Loop_Parameter_Specification (N));\n+      if Present (Loop_Parameter_Specification (N)) then\n+         Iterator :=\n+           Make_Iteration_Scheme (Loc,\n+              Loop_Parameter_Specification =>\n+                Loop_Parameter_Specification (N));\n+      else\n+         Iterator :=\n+           Make_Iteration_Scheme (Loc,\n+              Iterator_Specification =>\n+                Iterator_Specification (N));\n+      end if;\n \n       Push_Scope (Ent);\n+      Set_Parent (Iterator, N);\n       Analyze_Iteration_Scheme (Iterator);\n+\n+      --  The loop specification may have been converted into an\n+      --  iterator specification during its analysis. Update the\n+      --  quantified node accordingly.\n+\n+      if Present (Iterator_Specification (Iterator)) then\n+         Set_Iterator_Specification\n+           (N, Iterator_Specification (Iterator));\n+         Set_Loop_Parameter_Specification (N, Empty);\n+      end if;\n+\n       Analyze (Condition (N));\n       End_Scope;\n "}, {"sha": "a4963be815d582078903e6a604b08d9f0eee544e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -1809,16 +1809,20 @@ package body Sem_Ch5 is\n                             and then not Is_Type (Entity (DS)))\n                      then\n \n-                        --  this is an iterator specification. Rewrite as\n-                        --  such and analyze.\n+                        --  This is an iterator specification. Rewrite as such\n+                        --  and analyze.\n \n                         declare\n                            I_Spec : constant Node_Id :=\n-                             Make_Iterator_Specification (Sloc (LP),\n-                               Defining_Identifier => Relocate_Node (Id),\n-                               Name => Relocate_Node (DS),\n-                               Subtype_Indication => Empty,\n-                               Reverse_Present => Reverse_Present (LP));\n+                                      Make_Iterator_Specification (Sloc (LP),\n+                                        Defining_Identifier =>\n+                                          Relocate_Node (Id),\n+                                        Name                =>\n+                                          Relocate_Node (DS),\n+                                        Subtype_Indication  =>\n+                                          Empty,\n+                                        Reverse_Present     =>\n+                                          Reverse_Present (LP));\n \n                         begin\n                            Set_Iterator_Specification (N, I_Spec);\n@@ -1833,8 +1837,8 @@ package body Sem_Ch5 is\n                      return;\n                   end if;\n \n-                  --  The subtype indication may denote the completion\n-                  --  of an incomplete type declaration.\n+                  --  The subtype indication may denote the completion of an\n+                  --  incomplete type declaration.\n \n                   if Is_Entity_Name (DS)\n                     and then Present (Entity (DS))\n@@ -1854,8 +1858,8 @@ package body Sem_Ch5 is\n \n                   Make_Index (DS, LP);\n \n-                  Set_Ekind          (Id, E_Loop_Parameter);\n-                  Set_Etype          (Id, Etype (DS));\n+                  Set_Ekind (Id, E_Loop_Parameter);\n+                  Set_Etype (Id, Etype (DS));\n \n                   --  Treat a range as an implicit reference to the type, to\n                   --  inhibit spurious warnings.\n@@ -1879,9 +1883,7 @@ package body Sem_Ch5 is\n                   --  instances, because in practice they tend to be dubious\n                   --  in these cases.\n \n-                  if Nkind (DS) = N_Range\n-                    and then Comes_From_Source (N)\n-                  then\n+                  if Nkind (DS) = N_Range and then Comes_From_Source (N) then\n                      declare\n                         L : constant Node_Id := Low_Bound  (DS);\n                         H : constant Node_Id := High_Bound (DS);\n@@ -1893,9 +1895,9 @@ package body Sem_Ch5 is\n                             (L, H, Assume_Valid => True) = GT\n                         then\n                            --  Suppress the warning if inside a generic\n-                           --  template or instance, since in practice\n-                           --  they tend to be dubious in these cases since\n-                           --  they can result from intended parametrization.\n+                           --  template or instance, since in practice they\n+                           --  tend to be dubious in these cases since they can\n+                           --  result from intended parametrization.\n \n                            if not Inside_A_Generic\n                               and then not In_Instance\n@@ -1937,20 +1939,20 @@ package body Sem_Ch5 is\n                            --  In either case, suppress warnings in the body of\n                            --  the loop, since it is likely that these warnings\n                            --  will be inappropriate if the loop never actually\n-                           --  executes, which is unlikely.\n+                           --  executes, which is likely.\n \n                            Set_Suppress_Loop_Warnings (Parent (N));\n \n                         --  The other case for a warning is a reverse loop\n-                        --  where the upper bound is the integer literal\n-                        --  zero or one, and the lower bound can be positive.\n+                        --  where the upper bound is the integer literal zero\n+                        --  or one, and the lower bound can be positive.\n \n                         --  For example, we have\n \n                         --     for J in reverse N .. 1 loop\n \n-                        --  In practice, this is very likely to be a case\n-                        --  of reversing the bounds incorrectly in the range.\n+                        --  In practice, this is very likely to be a case of\n+                        --  reversing the bounds incorrectly in the range.\n \n                         elsif Reverse_Present (LP)\n                           and then Nkind (Original_Node (H)) =\n@@ -2002,13 +2004,13 @@ package body Sem_Ch5 is\n          end if;\n \n       else\n-         --  Iteration over a container.\n+         --  Iteration over a container\n \n          Set_Ekind (Def_Id, E_Loop_Parameter);\n          if Of_Present (N) then\n \n-            --  Find the Element_Type in the package instance that defines\n-            --  the container type.\n+            --  Find the Element_Type in the package instance that defines the\n+            --  container type.\n \n             Ent := First_Entity (Scope (Typ));\n             while Present (Ent) loop\n@@ -2022,7 +2024,7 @@ package body Sem_Ch5 is\n \n          else\n \n-            --  Find the Cursor type in similar fashion.\n+            --  Find the Cursor type in similar fashion\n \n             Ent := First_Entity (Scope (Typ));\n             while Present (Ent) loop"}, {"sha": "88918f3d179d0fa666ee642e498007495bccb33c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -9365,8 +9365,18 @@ package body Sem_Ch6 is\n          if Ekind (Scope (Formal_Id)) = E_Function\n            or else Ekind (Scope (Formal_Id)) = E_Generic_Function\n          then\n-            Error_Msg_N (\"functions can only have IN parameters\", Spec);\n-            Set_Ekind (Formal_Id, E_In_Parameter);\n+\n+            if Ada_Version >= Ada_2012 then\n+               if In_Present (Spec) then\n+                  Set_Ekind (Formal_Id, E_In_Out_Parameter);\n+               else\n+                  Set_Ekind (Formal_Id, E_Out_Parameter);\n+               end if;\n+\n+            else\n+               Error_Msg_N (\"functions can only have IN parameters\", Spec);\n+               Set_Ekind (Formal_Id, E_In_Parameter);\n+            end if;\n \n          elsif In_Present (Spec) then\n             Set_Ekind (Formal_Id, E_In_Out_Parameter);"}, {"sha": "3608ad88dcf329035036be0e40c3af307f2d10fc", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -1545,7 +1545,7 @@ package Sinfo is\n    --    Initialize_Scalars and Normalize_Scalars.\n \n    --  Of_Present (Flag16)\n-   --  Present in N_Iterastor_Specification nodes, to mark the Ada2012 iterator\n+   --  Present in N_Iterator_Specification nodes, to mark the Ada 2012 iterator\n    --  form over arrays and containers.\n \n    --  Original_Discriminant (Node2-Sem)\n@@ -3826,14 +3826,17 @@ package Sinfo is\n       ---------------------------------\n \n       --  QUANTIFIED_EXPRESSION ::=\n-      --    for QUANTIFIER LOOP_PARAMETER_SPECIFICATION => PREDICATE |\n-      --    for QUANTIFIER ITERATOR_SPECIFICATION => PREDICATE\n+      --    for QUANTIFIER LOOP_PARAMETER_SPECIFICATION => PREDICATE\n+      --  | for QUANTIFIER ITERATOR_SPECIFICATION => PREDICATE\n       --\n       --  QUANTIFIER ::= all | some\n \n+      --  At most one of (Iterator_Specification, Loop_Parameter_Specification)\n+      --  is present at a time, in which case the other one is empty.\n+\n       --  N_Quantified_Expression\n       --  Sloc points to FOR\n-      --  Iterator_Specification (Node2) (set to Empty if not Present)\n+      --  Iterator_Specification (Node2)\n       --  Loop_Parameter_Specification (Node4)\n       --  Condition (Node1)\n       --  All_Present (Flag15)\n@@ -4169,11 +4172,13 @@ package Sinfo is\n       --------------------------\n \n       --  ITERATION_SCHEME ::=\n-      --    while CONDITION | for LOOP_PARAMETER_SPECIFICATION |\n-      --    for ITERATOR_SPECIFICATION\n+      --    while CONDITION\n+      --  | for LOOP_PARAMETER_SPECIFICATION\n+      --  | for ITERATOR_SPECIFICATION\n \n-      --  Only one of (Iterator_Specification, Loop_Parameter_Specification)\n-      --  is present at a time, the other one is empty.\n+      --  At most one of (Iterator_Specification, Loop_Parameter_Specification)\n+      --  is present at a time, in which case the other one is empty. Both are\n+      --  empty in the case of a WHILE loop.\n \n       --  Gigi restriction: This expander ensures that the type of the\n       --  Condition field is always Standard.Boolean, even if the type\n@@ -4183,7 +4188,7 @@ package Sinfo is\n       --  Sloc points to WHILE or FOR\n       --  Condition (Node1) (set to Empty if FOR case)\n       --  Condition_Actions (List3-Sem)\n-      --  Iterator_Specification (Node2) (set to Empty if not Present)\n+      --  Iterator_Specification (Node2) (set to Empty if WHILE case)\n       --  Loop_Parameter_Specification (Node4) (set to Empty if WHILE case)\n \n       ---------------------------------------\n@@ -4205,7 +4210,7 @@ package Sinfo is\n \n       --  ITERATOR_SPECIFICATION ::=\n       --    DEFINING_IDENTIFIER in [reverse] NAME\n-      --    DEFINING_IDENTIFIER [: SUBTYPE_INDICATION] of [reverse] NAME\n+      --  | DEFINING_IDENTIFIER [: SUBTYPE_INDICATION] of [reverse] NAME\n \n       --  N_Iterator_Specification\n       --  Sloc points to defining identifier"}, {"sha": "1a5eb033e1ebc37da2fc97253315efee39ecc9f9", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -1198,7 +1198,7 @@ package Snames is\n \n    Name_Unaligned_Valid                  : constant Name_Id := N + $;\n \n-   --  Names used to implement iterators over predefined  containers.\n+   --  Names used to implement iterators over predefined  containers\n \n    Name_Cursor                           : constant Name_Id := N + $;\n    Name_Element                          : constant Name_Id := N + $;"}, {"sha": "46bbe4cb8d3d63c44759b50736e521cf17d657bc", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56a9ba447f72fccf12291589aec165cb99a65d2/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=c56a9ba447f72fccf12291589aec165cb99a65d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -413,9 +413,9 @@ package Stand is\n \n    Universal_Real : Entity_Id;\n    --  Entity for universal real type. The bounds of this type correspond to\n-   --  to the largest supported real type (i.e. Long_Long_Real). It is the\n+   --  to the largest supported real type (i.e. Long_Long_Float). It is the\n    --  type used for runtime calculations in type universal real. Note that\n-   --  this type is always IEEE format, even if Long_Long_Real is Vax_Float\n+   --  this type is always IEEE format, even if Long_Long_Float is Vax_Float\n    --  (and in that case the bounds don't correspond exactly).\n \n    Universal_Fixed : Entity_Id;"}]}