{"sha": "2f3fdc527da65e0022466612ef40f13efbf45cbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzZmRjNTI3ZGE2NWUwMDIyNDY2NjEyZWY0MGYxM2VmYmY0NWNiZQ==", "commit": {"author": {"name": "Will Cohen", "email": "wcohen@redhat.com", "date": "2001-01-24T14:01:26Z"}, "committer": {"name": "William Cohen", "email": "wcohen@gcc.gnu.org", "date": "2001-01-24T14:01:26Z"}, "message": "abi64.h (RETURN_IN_MEMORY): Always take into account whether registers are 32 bits or 64 bits in size.\n\n2001-01-24  Will Cohen  <wcohen@redhat.com>\n\n\t* config/mips/abi64.h (RETURN_IN_MEMORY): Always take into account\n\twhether registers are 32 bits or 64 bits in size.\n\nFrom-SVN: r39237", "tree": {"sha": "e3e64662aa0881bcbfc975a21a45b406188cd3d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3e64662aa0881bcbfc975a21a45b406188cd3d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f3fdc527da65e0022466612ef40f13efbf45cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3fdc527da65e0022466612ef40f13efbf45cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3fdc527da65e0022466612ef40f13efbf45cbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3fdc527da65e0022466612ef40f13efbf45cbe/comments", "author": {"login": "wcohen", "id": 1050609, "node_id": "MDQ6VXNlcjEwNTA2MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1050609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcohen", "html_url": "https://github.com/wcohen", "followers_url": "https://api.github.com/users/wcohen/followers", "following_url": "https://api.github.com/users/wcohen/following{/other_user}", "gists_url": "https://api.github.com/users/wcohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcohen/subscriptions", "organizations_url": "https://api.github.com/users/wcohen/orgs", "repos_url": "https://api.github.com/users/wcohen/repos", "events_url": "https://api.github.com/users/wcohen/events{/privacy}", "received_events_url": "https://api.github.com/users/wcohen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a941b588e17466b3d046323c39415d468cb6b6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a941b588e17466b3d046323c39415d468cb6b6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a941b588e17466b3d046323c39415d468cb6b6aa"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "e5c63606d437b6eb335c0cacc1cfc2ab9e7d3a85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3fdc527da65e0022466612ef40f13efbf45cbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3fdc527da65e0022466612ef40f13efbf45cbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f3fdc527da65e0022466612ef40f13efbf45cbe", "patch": "@@ -1,3 +1,8 @@\n+2001-01-24  Will Cohen  <wcohen@redhat.com>\n+\n+\t* config/mips/abi64.h (RETURN_IN_MEMORY): Always take into account\n+\twhether registers are 32 bits or 64 bits in size.\n+\n 2001-01-24  Ben Elliston  <bje@redhat.com>\n \n \t* config/m32r/m32r.h (PREDICATE_CODES): Remove m32r_not_same_reg."}, {"sha": "95e7d82b9fc0d50376b644d7c6a54de26dfe33f6", "filename": "gcc/config/mips/abi64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3fdc527da65e0022466612ef40f13efbf45cbe/gcc%2Fconfig%2Fmips%2Fabi64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3fdc527da65e0022466612ef40f13efbf45cbe/gcc%2Fconfig%2Fmips%2Fabi64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fabi64.h?ref=2f3fdc527da65e0022466612ef40f13efbf45cbe", "patch": "@@ -91,7 +91,7 @@ Boston, MA 02111-1307, USA.  */\n   ((mips_abi == ABI_32 || mips_abi == ABI_O64)\t\t\t\t\\\n    ? TYPE_MODE (TYPE) == BLKmode\t\t\t\t\t\\\n    : (int_size_in_bytes (TYPE)\t\t\t\t\t\t\\\n-      > (mips_abi == ABI_EABI ? 2 * UNITS_PER_WORD : 16)))\n+      > (2 * UNITS_PER_WORD)))\n \n #ifdef ANSI_PROTOTYPES\n union tree_node;"}]}