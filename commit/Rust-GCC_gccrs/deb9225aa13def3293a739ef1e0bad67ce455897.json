{"sha": "deb9225aa13def3293a739ef1e0bad67ce455897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGViOTIyNWFhMTNkZWYzMjkzYTczOWVmMWUwYmFkNjdjZTQ1NTg5Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-28T22:08:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-28T22:08:28Z"}, "message": "(addsi3): Prefer add without carry instructions and flag input operands as commutative for condition register variant.\n\n(addsi3): Prefer add without carry instructions and\nflag input operands as commutative for condition register variant.\n(subsi3): Define PowerPC patterns using subtract without carry.\n(numerous): Flag input operands as commutative for condition register variant.\n(mov* matchers): Use mr instruction in ! TARGET_POWERPC case as well and\nmr. in condition register variant.\n\nFrom-SVN: r7166", "tree": {"sha": "3da58f81c2a582085b97396ef52ef9fd12280be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3da58f81c2a582085b97396ef52ef9fd12280be6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deb9225aa13def3293a739ef1e0bad67ce455897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb9225aa13def3293a739ef1e0bad67ce455897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb9225aa13def3293a739ef1e0bad67ce455897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb9225aa13def3293a739ef1e0bad67ce455897/comments", "author": null, "committer": null, "parents": [{"sha": "40acaab846c9ce54cc27f51f22d0d8c561801a3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40acaab846c9ce54cc27f51f22d0d8c561801a3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40acaab846c9ce54cc27f51f22d0d8c561801a3c"}], "stats": {"total": 137, "additions": 92, "deletions": 45}, "files": [{"sha": "69c2a617b03baa7e02594537bb0a82f155dde48a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 92, "deletions": 45, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deb9225aa13def3293a739ef1e0bad67ce455897/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deb9225aa13def3293a739ef1e0bad67ce455897/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=deb9225aa13def3293a739ef1e0bad67ce455897", "patch": "@@ -332,34 +332,43 @@\n   [(set_attr \"type\" \"compare\")])\n \f\n ;; Fixed-point arithmetic insns.\n+\n+;; Discourage ai/addic because of carry but provide it in an alternative\n+;; allowing register zero as source.\n (define_insn \"addsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,b\")\n-\t\t (match_operand:SI 2 \"add_operand\" \"rI,J\")))]\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,?r,r\")\n+\t(plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,b,r,b\")\n+\t\t (match_operand:SI 2 \"add_operand\" \"r,I,I,J\")))]\n   \"\"\n   \"@\n-   {a%I2|add%I2c} %0,%1,%2\n+   {cax|add} %0,%1,%2\n+   {cal %0,%2(%1)|addi %0,%1,%2}\n+   {ai|addic} %0,%1,%2\n    {cau|addis} %0,%1,%u2\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n+\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"\"\n-  \"{a%I2.|add%I2c.} %3,%1,%2\"\n+  \"@\n+   {cax.|add.} %3,%1,%2\n+   {ai.|addic.} %3,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n    \n (define_insn \"\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x\")\n+\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"{a%I2.|add%I2c.} %0,%1,%2\"\n+  \"@\n+   {cax.|add.} %0,%1,%2\n+   {ai.|addic.} %0,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n    \n ;; Split an add that we can't do in one insn into two insns, each of which\n@@ -414,30 +423,60 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_short_operand\" \"rI\")\n \t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n-  \"\"\n+  \"! TARGET_POWERPC\"\n   \"{sf%I1|subf%I1c} %0,%2,%1\")\n \n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(minus:SI (match_operand:SI 1 \"reg_or_short_operand\" \"r,I\")\n+\t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\")))]\n+  \"TARGET_POWERPC\"\n+  \"@\n+   subf %0,%2,%1\n+   subfic %0,%2,%1\")\n+\n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n-  \"\"\n+  \"! TARGET_POWERPC\"\n   \"{sf.|subfc.} %3,%2,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"=r\"))]\n+  \"TARGET_POWERPC\"\n+  \"subf. %3,%2,%1\"\n+  [(set_attr \"type\" \"compare\")])\n+\n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"! TARGET_POWERPC\"\n   \"{sf.|subfc.} %0,%2,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(minus:SI (match_dup 1) (match_dup 2)))]\n+  \"TARGET_POWERPC\"\n+  \"subf. %0,%2,%1\"\n+  [(set_attr \"type\" \"compare\")])\n+\n (define_expand \"subsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_short_operand\" \"\")\n@@ -657,7 +696,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))\n@@ -668,7 +707,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n@@ -678,7 +717,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -690,7 +729,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -722,6 +761,7 @@\n       DONE;\n     }\n }\")\n+\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(div:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n@@ -756,6 +796,7 @@\n       DONE;\n     }\n }\")\n+\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n         (udiv:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n@@ -1096,7 +1137,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n@@ -1106,7 +1147,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -1144,7 +1185,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n@@ -1154,7 +1195,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t(compare:CC (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -1266,14 +1307,14 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n+\t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t(not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"nand %0,%1,%2\")\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n+\t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n@@ -1283,7 +1324,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n+\t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -1294,14 +1335,14 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n+\t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t(not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"nor %0,%1,%2\")\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n+\t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n@@ -1311,7 +1352,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n+\t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -2767,6 +2808,7 @@\n   \"TARGET_POWER2 || TARGET_POWERPC\"\n   \"{fcirz|fctiwz} %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n+\n (define_expand \"fixuns_truncdfsi2\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(unsigned_fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"\")))]\n@@ -2778,7 +2820,6 @@\n   DONE;\n }\")\n \n-\n (define_expand \"trunc_call\"\n   [(parallel [(set (match_operand:SI 0 \"\" \"\")\n \t\t   (fix:SI (match_operand:DF 1 \"\" \"\")))\n@@ -2911,6 +2952,7 @@\n       DONE;\n     }\n }\")\n+\n (define_insn \"mulsidi3_mq\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n@@ -2920,6 +2962,7 @@\n   \"mul %0,%1,%2\\;mfmq %L0\"\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"length\" \"8\")])\n+\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n@@ -2928,6 +2971,7 @@\n   \"mulhw %0,%1,%2\\;mullw %L0,%1,%2\"\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"length\" \"8\")])\n+\n (define_expand \"smulsi3_highpart\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(truncate:SI\n@@ -2953,6 +2997,7 @@\n       DONE;\n     }\n }\")\n+\n (define_insn \"smulsi3_highpart_mq\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:SI\n@@ -2965,6 +3010,7 @@\n   \"TARGET_POWER\"\n   \"mul %0,%1,%2\"\n   [(set_attr \"type\" \"imul\")])\n+\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:SI\n@@ -2976,6 +3022,7 @@\n   \"TARGET_POWERPC\"\n   \"mulhw %0,%1,%2\"\n   [(set_attr \"type\" \"imul\")])\n+\n (define_insn \"umulsi3_highpart\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:SI\n@@ -3106,7 +3153,7 @@\n   \"TARGET_POWER && (gpc_reg_operand (operands[0], SImode)\n    || gpc_reg_operand (operands[1], SImode))\"\n   \"@\n-   {ai|addic} %0,%1,0\n+   mr %0,%1\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%X0|stw%U0%X0} %1,%0\n    {cal %0,%1(0)|li %0,%1}\n@@ -3158,7 +3205,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\") (match_dup 1))]\n   \"\"\n-  \"{ai.|addic.} %0,%1,0\"\n+  \"mr. %0,%1\"\n   [(set_attr \"type\" \"compare\")])\n \f\n (define_expand \"movhi\"\n@@ -3186,7 +3233,7 @@\n   \"TARGET_POWER && (gpc_reg_operand (operands[0], HImode)\n    || gpc_reg_operand (operands[1], HImode))\"\n   \"@\n-   {oril|ori} %0,%1,0\n+   mr %0,%1\n    lhz%U1%X1 %0,%1\n    sth%U0%X0 %1,%0\n    {cal %0,%w1(0)|li %0,%w1}\n@@ -3201,7 +3248,7 @@\n   \"! TARGET_POWER && (gpc_reg_operand (operands[0], HImode)\n    || gpc_reg_operand (operands[1], HImode))\"\n   \"@\n-   ori %0,%1,0\n+   mr %0,%1\n    lhz%U1%X1 %0,%1\n    sth%U0%X0 %1,%0\n    li %0,%w1\n@@ -3234,7 +3281,7 @@\n   \"TARGET_POWER && (gpc_reg_operand (operands[0], QImode)\n    || gpc_reg_operand (operands[1], QImode))\"\n   \"@\n-   {oril|ori} %0,%1,0\n+   mr %0,%1\n    lbz%U1%X1 %0,%1\n    stb%U0%X0 %1,%0\n    {cal %0,%1(0)|li %0,%1}\n@@ -3277,7 +3324,7 @@\n    {rlinm|rlwinm} %1,%1,%F0,0xffffffff\\;mtcrf %R0,%1\\;{rlinm|rlwinm} %1,%1,%f0,0xffffffff\n    mfcr %0\n    mfcr %0\\;{rlinm|rlwinm} %0,%0,%f1,0xf0000000\n-   {ai %0,%1,0|mr %0,%1}\n+   mr %0,%1\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%U1|stw%U0%U1} %1,%0\"\n   [(set_attr \"type\" \"*,*,*,compare,*,*,load,*\")\n@@ -3452,9 +3499,9 @@\n \t the first register operand 0 is the same as the second register of\n \t operand 1, we must copy in the opposite order.  */\n       if (REGNO (operands[0]) == REGNO (operands[1]) + 1)\n-\treturn \\\"{oril %L0,%L1,0|mr %L0,%L1}\\;{oril %0,%1,0|mr %0,%1}\\\";\n+\treturn \\\"mr %L0,%L1\\;mr %0,%1\\\";\n       else\n-\treturn \\\"{oril %0,%1,0|mr %0,%1}\\;{oril %L0,%L1,0|mr %L0,%L1}\\\";\n+\treturn \\\"mr %0,%1\\;mr %L0,%L1\\\";\n     case 1:\n       /* If the low-address word is used in the address, we must load it\n \t last.  Otherwise, load it first.  Note that we cannot have\n@@ -3516,9 +3563,9 @@\n \t the first register operand 0 is the same as the second register of\n \t operand 1, we must copy in the opposite order.  */\n       if (REGNO (operands[0]) == REGNO (operands[1]) + 1)\n-\treturn \\\"{oril %L0,%L1,0|mr %L0,%L1}\\;{oril %0,%1,0|mr %0,%1}\\\";\n+\treturn \\\"mr %L0,%L1\\;mr %0,%1\\\";\n       else\n-\treturn \\\"{oril %0,%1,0|mr %0,%1}\\;{oril %L0,%L1,0|mr %L0,%L1}\\\";\n+\treturn \\\"mr %0,%1\\;mr %L0,%L1\\\";\n     case 1:\n       /* If the low-address word is used in the address, we must load it\n \t last.  Otherwise, load it first.  Note that we cannot have\n@@ -3595,9 +3642,9 @@\n \t is the second, third, or fourth register in the input.  */\n       if (REGNO (operands[0]) >= REGNO (operands[1]) + 1\n \t  && REGNO (operands[0]) <= REGNO (operands[1]) + 3)\n-\treturn \\\"{oril %Z0,%Z1,0|mr %Z0,%Z1}\\;{oril %Y0,%Y1,0|mr %Y0,%Y1}\\;{oril %L0,%L1,0|mr %L0,%L1}\\;{oril %0,%1,0|mr %0,%1}\\\";\n+\treturn \\\"mr %Z0,%Z1\\;mr %Y0,%Y1\\;mr %L0,%L1\\;mr %0,%1\\\";\n       else\n-\treturn \\\"{oril %0,%1,0|mr %0,%1}\\;{oril %L0,%L1,0|mr %L0,%L1}\\;{oril %Y0,%Y1,0|mr %Y0,%Y1}\\;{oril %Z0,%Z1,0|mr %Z0,%Z1}\\\";\n+\treturn \\\"mr %0,%1\\;mr %L0,%L1\\;mr %Y0,%Y1\\;mr %Z0,%Z1\\\";\n     case 3:\n       /* If the address is not used in the output, we can use lsi.  Otherwise,\n \t fall through to generating four loads.  */\n@@ -4817,7 +4864,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n-\t(neg:SI (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r,r\")\n+\t(neg:SI (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n \t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"r,O,K,J,I\"))))]\n   \"\"\n   \"@"}]}