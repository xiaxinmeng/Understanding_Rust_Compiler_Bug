{"sha": "aff2c2d3af3233dfb2d237341f2fd8612dc61391", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmMmMyZDNhZjMyMzNkZmIyZDIzNzM0MWYyZmQ4NjEyZGM2MTM5MQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-09-15T15:35:03Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-09-15T15:35:03Z"}, "message": "Avoid copying libcall results directly to user variables.\n\nFrom-SVN: r36433", "tree": {"sha": "c85b3d299188bdcde03c7dc4b888789f679aa2e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c85b3d299188bdcde03c7dc4b888789f679aa2e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aff2c2d3af3233dfb2d237341f2fd8612dc61391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff2c2d3af3233dfb2d237341f2fd8612dc61391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff2c2d3af3233dfb2d237341f2fd8612dc61391", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff2c2d3af3233dfb2d237341f2fd8612dc61391/comments", "author": null, "committer": null, "parents": [{"sha": "4eaa189a5cfd20ca0f5271b4ca0240673ec61f44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaa189a5cfd20ca0f5271b4ca0240673ec61f44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eaa189a5cfd20ca0f5271b4ca0240673ec61f44"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "6c1152a9a38d0d2e6ba785efe1ac7a0e459405e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff2c2d3af3233dfb2d237341f2fd8612dc61391/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff2c2d3af3233dfb2d237341f2fd8612dc61391/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aff2c2d3af3233dfb2d237341f2fd8612dc61391", "patch": "@@ -1,3 +1,8 @@\n+2000-09-15  Bernd Schmidt  <bernds@redhat.co.uk>\n+\n+\t* optabs.c (emit_libcall_block): If target is a user variable,\n+\tcopy to a temporary first.\n+\n 2000-09-15  Richard Henderson  <rth@cygnus.com>\n \n \t* expmed.c (store_bit_field): Consider naturally aligned"}, {"sha": "136f17897ab5eb4eb8a4a3ab74c69688173d2676", "filename": "gcc/optabs.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff2c2d3af3233dfb2d237341f2fd8612dc61391/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff2c2d3af3233dfb2d237341f2fd8612dc61391/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=aff2c2d3af3233dfb2d237341f2fd8612dc61391", "patch": "@@ -2756,8 +2756,14 @@ emit_libcall_block (insns, target, result, equiv)\n      rtx result;\n      rtx equiv;\n {\n+  rtx final_dest = target;\n   rtx prev, next, first, last, insn;\n \n+  /* If this is a reg with REG_USERVAR_P set, then it could possibly turn\n+     into a MEM later.  Protect the libcall block from this change.  */\n+  if (! REG_P (target) || REG_USERVAR_P (target))\n+    target = gen_reg_rtx (GET_MODE (target));\n+\n   /* look for any CALL_INSNs in this sequence, and attach a REG_EH_REGION\n      reg note to indicate that this call cannot throw or execute a nonlocal\n      goto. (Unless there is already a REG_EH_REGION note, in which case\n@@ -2833,6 +2839,8 @@ emit_libcall_block (insns, target, result, equiv)\n       remove_note (last, find_reg_note (last, REG_EQUAL, NULL_RTX));\n     }\n \n+  emit_move_insn (final_dest, target);\n+\n   if (prev == 0)\n     first = get_insns ();\n   else"}]}