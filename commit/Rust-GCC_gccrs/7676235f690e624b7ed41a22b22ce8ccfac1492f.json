{"sha": "7676235f690e624b7ed41a22b22ce8ccfac1492f", "node_id": "C_kwDOANBUbNoAKDc2NzYyMzVmNjkwZTYyNGI3ZWQ0MWEyMmIyMmNlOGNjZmFjMTQ5MmY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-10T15:50:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-10T15:50:39Z"}, "message": "ivopts: Fix IP_END handling for asm goto [PR107997]\n\nThe following testcase ICEs, because the latch bb ends with\nasm goto which has both fallthrough to the header and one or more labels\nin the header too.  In that case there is just a single edge out of the\nlatch block, but still the asm goto is stmt_ends_bb_p statement, yet\nivopts decides to emit an IV bump at the IP_END position and inserts\nit into the same bb as the asm goto after it, which then fails verification\n(control flow in the middle of bb).\n\nThe following patch fixes it by splitting the latch -> header edge in that\ncase and inserting into the newly created bb, where split_edge ->\nredirect_edge_and_branch is able to deal with this case correctly.\n\n2022-12-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/107997\n\t* tree-ssa-loop-ivopts.cc: Include cfganal.h.\n\t(create_new_iv) <case IP_END>: If ip_end_pos bb is non-empty and ends\n\twith a stmt which ends bb, instead of adding iv update after it split\n\tthe latch edge and insert iterator into the new latch bb.\n\n\t* gcc.c-torture/compile/pr107997.c: New test.", "tree": {"sha": "cd434c2391ad6eb6707b64888f94c4f9aa5d43ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd434c2391ad6eb6707b64888f94c4f9aa5d43ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7676235f690e624b7ed41a22b22ce8ccfac1492f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7676235f690e624b7ed41a22b22ce8ccfac1492f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7676235f690e624b7ed41a22b22ce8ccfac1492f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7676235f690e624b7ed41a22b22ce8ccfac1492f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea4b23d9c82d9be3b982c3519fe5e8e9d833a6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4b23d9c82d9be3b982c3519fe5e8e9d833a6a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea4b23d9c82d9be3b982c3519fe5e8e9d833a6a8"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "89e1fd349c3db46dcc764fc980524e1eefbf8e6a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr107997.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7676235f690e624b7ed41a22b22ce8ccfac1492f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr107997.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7676235f690e624b7ed41a22b22ce8ccfac1492f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr107997.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr107997.c?ref=7676235f690e624b7ed41a22b22ce8ccfac1492f", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/107997 */\n+\n+int a, b;\n+void bar (int);\n+int baz (void);\n+\n+void *\n+foo (int x, void *y)\n+{\n+  asm goto (\"\" : : \"r\" (x || !a) : : l);\n+l:\n+  if (y)\n+    return 0;\n+  bar (b ? b : x);\n+  while (x--)\n+    {\n+      if (!baz ())\n+\tbaz ();\n+      asm goto (\"\" : : : : l2);\n+    l2:;\n+    }\n+  return y;\n+}"}, {"sha": "ebd4aecce37e5c77f57e9be0ebac212d9c4498eb", "filename": "gcc/tree-ssa-loop-ivopts.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7676235f690e624b7ed41a22b22ce8ccfac1492f/gcc%2Ftree-ssa-loop-ivopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7676235f690e624b7ed41a22b22ce8ccfac1492f/gcc%2Ftree-ssa-loop-ivopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.cc?ref=7676235f690e624b7ed41a22b22ce8ccfac1492f", "patch": "@@ -131,6 +131,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"builtins.h\"\n #include \"tree-vectorizer.h\"\n #include \"dbgcnt.h\"\n+#include \"cfganal.h\"\n \n /* For lang_hooks.types.type_for_mode.  */\n #include \"langhooks.h\"\n@@ -7235,6 +7236,12 @@ create_new_iv (struct ivopts_data *data, struct iv_cand *cand)\n     case IP_END:\n       incr_pos = gsi_last_bb (ip_end_pos (data->current_loop));\n       after = true;\n+      if (!gsi_end_p (incr_pos) && stmt_ends_bb_p (gsi_stmt (incr_pos)))\n+\t{\n+\t  edge e = find_edge (gsi_bb (incr_pos), data->current_loop->header);\n+\t  incr_pos = gsi_after_labels (split_edge (e));\n+\t  after = false;\n+\t}\n       break;\n \n     case IP_AFTER_USE:"}]}