{"sha": "62332eba32708fbe911dcea662b17410bab8faa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzMzJlYmEzMjcwOGZiZTkxMWRjZWE2NjJiMTc0MTBiYWI4ZmFhNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-08-26T19:20:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-08-26T19:20:31Z"}, "message": "mips.c (r10k_safe_mem_expr_p): Use get_inner_reference.\n\ngcc/\n\t* config/mips/mips.c (r10k_safe_mem_expr_p): Use get_inner_reference.\n\nFrom-SVN: r190700", "tree": {"sha": "2fcff95bf9d3750037a1db0cc7521d47392b2e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fcff95bf9d3750037a1db0cc7521d47392b2e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62332eba32708fbe911dcea662b17410bab8faa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62332eba32708fbe911dcea662b17410bab8faa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62332eba32708fbe911dcea662b17410bab8faa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62332eba32708fbe911dcea662b17410bab8faa5/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1209ab5ed6540a37f5b0afe0c494c5771ba515ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1209ab5ed6540a37f5b0afe0c494c5771ba515ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1209ab5ed6540a37f5b0afe0c494c5771ba515ab"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "7277a9af370efb021eac3fff95adc4fd62ba646e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62332eba32708fbe911dcea662b17410bab8faa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62332eba32708fbe911dcea662b17410bab8faa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62332eba32708fbe911dcea662b17410bab8faa5", "patch": "@@ -1,3 +1,7 @@\n+2012-08-26  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (r10k_safe_mem_expr_p): Use get_inner_reference.\n+\n 2012-08-26  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (mips_rtx_costs): Add costs for CINS."}, {"sha": "3a19f44a48f71006e8cb6686240865a9f644f6f7", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62332eba32708fbe911dcea662b17410bab8faa5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62332eba32708fbe911dcea662b17410bab8faa5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=62332eba32708fbe911dcea662b17410bab8faa5", "patch": "@@ -14398,17 +14398,18 @@ r10k_safe_address_p (rtx x, rtx insn)\n static bool\n r10k_safe_mem_expr_p (tree expr, HOST_WIDE_INT offset)\n {\n-  if (offset < 0 || offset >= int_size_in_bytes (TREE_TYPE (expr)))\n-    return false;\n+  HOST_WIDE_INT bitoffset, bitsize;\n+  tree inner, var_offset;\n+  enum machine_mode mode;\n+  int unsigned_p, volatile_p;\n \n-  while (TREE_CODE (expr) == COMPONENT_REF)\n-    {\n-      expr = TREE_OPERAND (expr, 0);\n-      if (expr == NULL_TREE)\n-\treturn false;\n-    }\n+  inner = get_inner_reference (expr, &bitsize, &bitoffset, &var_offset, &mode,\n+\t\t\t       &unsigned_p, &volatile_p, false);\n+  if (!DECL_P (inner) || !DECL_SIZE_UNIT (inner) || var_offset)\n+    return false;\n \n-  return DECL_P (expr);\n+  offset += bitoffset / BITS_PER_UNIT;\n+  return offset >= 0 && offset < tree_low_cst (DECL_SIZE_UNIT (inner), 1);\n }\n \n /* A for_each_rtx callback for which DATA points to the instruction"}]}