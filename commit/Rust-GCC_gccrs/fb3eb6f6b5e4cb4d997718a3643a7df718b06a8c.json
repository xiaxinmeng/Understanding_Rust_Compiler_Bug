{"sha": "fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzZWI2ZjZiNWU0Y2I0ZDk5NzcxOGEzNjQzYTdkZjcxOGIwNmE4Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-23T19:09:15Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-23T19:09:15Z"}, "message": "(SECONDARY_MEMORY_NEEDED_RTX, SECONDARY_MEMORY_NEEDED_MODE):\n\nUse MODE not mode.\n\nFrom-SVN: r8555", "tree": {"sha": "6d8bc28e924143344113bce5f923759b36997a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d8bc28e924143344113bce5f923759b36997a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c/comments", "author": null, "committer": null, "parents": [{"sha": "a98c9f1ab2c7f8ad5cb6153ce46731b66fd110ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98c9f1ab2c7f8ad5cb6153ce46731b66fd110ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98c9f1ab2c7f8ad5cb6153ce46731b66fd110ea"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "d320a7621ce545e2d948ef766b4b25f612405bb0", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=fb3eb6f6b5e4cb4d997718a3643a7df718b06a8c", "patch": "@@ -1097,7 +1097,7 @@ extern char leaf_reg_remap[];\n    if the frame size is zero.  */\n #define SECONDARY_MEMORY_NEEDED_RTX(MODE) \\\n   (get_frame_size () == 0\t\t\t\t\t\t\\\n-   ? assign_stack_local (mode, GET_MODE_SIZE (mode), 0)\t\t\t\\\n+   ? assign_stack_local (MODE, GET_MODE_SIZE (MODE), 0)\t\t\t\\\n    : gen_rtx (MEM, MODE, gen_rtx (PLUS, Pmode, frame_pointer_rtx,\t\\\n \t\t\t\t  GEN_INT (STARTING_FRAME_OFFSET))))\n \n@@ -1106,11 +1106,11 @@ extern char leaf_reg_remap[];\n    For v8 we copy the default definition.  */\n #define SECONDARY_MEMORY_NEEDED_MODE(MODE) \\\n   (TARGET_V9\t\t\t\t\t\t\t\\\n-   ? (GET_MODE_BITSIZE (mode) < 32\t\t\t\t\\\n-      ? mode_for_size (32, GET_MODE_CLASS (mode), 0)\t\t\\\n+   ? (GET_MODE_BITSIZE (MODE) < 32\t\t\t\t\\\n+      ? mode_for_size (32, GET_MODE_CLASS (MODE), 0)\t\t\\\n       : MODE)\t\t\t\t\t\t\t\\\n-   : (GET_MODE_BITSIZE (mode) < BITS_PER_WORD\t\t\t\\\n-      ? mode_for_size (BITS_PER_WORD, GET_MODE_CLASS (mode), 0)\t\\\n+   : (GET_MODE_BITSIZE (MODE) < BITS_PER_WORD\t\t\t\\\n+      ? mode_for_size (BITS_PER_WORD, GET_MODE_CLASS (MODE), 0)\t\\\n       : MODE))\n \n /* Return the maximum number of consecutive registers"}]}