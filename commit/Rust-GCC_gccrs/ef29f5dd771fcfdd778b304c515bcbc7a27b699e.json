{"sha": "ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyOWY1ZGQ3NzFmY2ZkZDc3OGIzMDRjNTE1YmNiYzdhMjdiNjk5ZQ==", "commit": {"author": {"name": "Jan Kratochvil", "email": "jan.kratochvil@redhat.com", "date": "2017-07-02T20:00:48Z"}, "committer": {"name": "Jan Kratochvil", "email": "jkratoch@gcc.gnu.org", "date": "2017-07-02T20:00:48Z"}, "message": "include/ChangeLog\n2017-07-02  Jan Kratochvil  <jan.kratochvil@redhat.com>\n\n        * dwarf2.def (DW_IDX_compile_unit, DW_IDX_type_unit, DW_IDX_die_offset)\n        (DW_IDX_parent, DW_IDX_type_hash, DW_IDX_lo_user, DW_IDX_hi_user)\n        (DW_IDX_GNU_internal, DW_IDX_GNU_external): New.\n        * dwarf2.h (DW_IDX, DW_IDX_DUP, DW_FIRST_IDX, DW_END_IDX): New.\n        (enum dwarf_name_index_attribute): Remove.\n        (get_DW_IDX_name): New declaration.\n\nlibiberty/ChangeLog\n2017-07-02  Jan Kratochvil  <jan.kratochvil@redhat.com>\n\n        * dwarfnames.c (DW_FIRST_IDX, DW_END_IDX, DW_IDX, DW_IDX_DUP): New.\n\nFrom-SVN: r249883", "tree": {"sha": "ec7baeca2cbc1230b84ed9dcf3618b7af8a12e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec7baeca2cbc1230b84ed9dcf3618b7af8a12e1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/comments", "author": {"login": "jankratochvil", "id": 1223939, "node_id": "MDQ6VXNlcjEyMjM5Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1223939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankratochvil", "html_url": "https://github.com/jankratochvil", "followers_url": "https://api.github.com/users/jankratochvil/followers", "following_url": "https://api.github.com/users/jankratochvil/following{/other_user}", "gists_url": "https://api.github.com/users/jankratochvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankratochvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankratochvil/subscriptions", "organizations_url": "https://api.github.com/users/jankratochvil/orgs", "repos_url": "https://api.github.com/users/jankratochvil/repos", "events_url": "https://api.github.com/users/jankratochvil/events{/privacy}", "received_events_url": "https://api.github.com/users/jankratochvil/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b677e2f67f72a8de2b0099f6548e42e4054c180f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b677e2f67f72a8de2b0099f6548e42e4054c180f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b677e2f67f72a8de2b0099f6548e42e4054c180f"}], "stats": {"total": 61, "additions": 49, "deletions": 12}, "files": [{"sha": "bbcc87d418b7be4e2fb5b6e0fdccd242739e15b5", "filename": "include/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "patch": "@@ -1,3 +1,12 @@\n+2017-07-02  Jan Kratochvil  <jan.kratochvil@redhat.com>\n+\n+\t* dwarf2.def (DW_IDX_compile_unit, DW_IDX_type_unit, DW_IDX_die_offset)\n+\t(DW_IDX_parent, DW_IDX_type_hash, DW_IDX_lo_user, DW_IDX_hi_user)\n+\t(DW_IDX_GNU_internal, DW_IDX_GNU_external): New.\n+\t* dwarf2.h (DW_IDX, DW_IDX_DUP, DW_FIRST_IDX, DW_END_IDX): New.\n+\t(enum dwarf_name_index_attribute): Remove.\n+\t(get_DW_IDX_name): New declaration.\n+\n 2017-05-27  Maya Rashish  <coypu@sdf.org>\n \n \t* longlong.h: Remove ns32k support."}, {"sha": "a91e9439cd82f3bb9fdddc14904114e5490c1af6", "filename": "include/dwarf2.def", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/include%2Fdwarf2.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/include%2Fdwarf2.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.def?ref=ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "patch": "@@ -782,3 +782,15 @@ DW_CFA (DW_CFA_GNU_args_size, 0x2e)\n DW_CFA (DW_CFA_GNU_negative_offset_extended, 0x2f)\n \n DW_END_CFA\n+\n+/* Index attributes in the Abbreviations Table.  */\n+DW_FIRST_IDX (DW_IDX_compile_unit, 1)\n+DW_IDX (DW_IDX_type_unit, 2)\n+DW_IDX (DW_IDX_die_offset, 3)\n+DW_IDX (DW_IDX_parent, 4)\n+DW_IDX (DW_IDX_type_hash, 5)\n+DW_IDX_DUP (DW_IDX_lo_user, 0x2000)\n+DW_IDX (DW_IDX_hi_user, 0x3fff)\n+DW_IDX (DW_IDX_GNU_internal, 0x2000)\n+DW_IDX (DW_IDX_GNU_external, 0x2001)\n+DW_END_IDX"}, {"sha": "14b6f22e39e2f2f8cadb05009bfd10fafa9ea07c", "filename": "include/dwarf2.h", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "patch": "@@ -52,6 +52,8 @@\n #define DW_ATE(name, value) , name = value\n #define DW_ATE_DUP(name, value) , name = value\n #define DW_CFA(name, value) , name = value\n+#define DW_IDX(name, value) , name = value\n+#define DW_IDX_DUP(name, value) , name = value\n \n #define DW_FIRST_TAG(name, value) enum dwarf_tag { \\\n   name = value\n@@ -71,6 +73,9 @@\n #define DW_FIRST_CFA(name, value) enum dwarf_call_frame_info { \\\n   name = value\n #define DW_END_CFA };\n+#define DW_FIRST_IDX(name, value) enum dwarf_name_index_attribute { \\\n+  name = value\n+#define DW_END_IDX };\n \n #include \"dwarf2.def\"\n \n@@ -86,6 +91,8 @@\n #undef DW_END_ATE\n #undef DW_FIRST_CFA\n #undef DW_END_CFA\n+#undef DW_FIRST_IDX\n+#undef DW_END_IDX\n \n #undef DW_TAG\n #undef DW_TAG_DUP\n@@ -97,6 +104,8 @@\n #undef DW_ATE\n #undef DW_ATE_DUP\n #undef DW_CFA\n+#undef DW_IDX\n+#undef DW_IDX_DUP\n \n /* Flag that tells whether entry has a child or not.  */\n #define DW_children_no   0\n@@ -420,18 +429,6 @@ enum dwarf_macro_record_type\n     DW_MACRO_GNU_hi_user = 0xff\n   };\n \n-/* Index attributes in the Abbreviations Table.  */\n-enum dwarf_name_index_attribute\n-  {\n-    DW_IDX_compile_unit = 1,\n-    DW_IDX_type_unit = 2,\n-    DW_IDX_die_offset = 3,\n-    DW_IDX_parent = 4,\n-    DW_IDX_type_hash = 5,\n-    DW_IDX_lo_user = 0x2000,\n-    DW_IDX_hi_user = 0x3fff\n-  };\n-\n /* Range list entry kinds in .debug_rnglists* section.  */\n enum dwarf_range_list_entry\n   {\n@@ -524,6 +521,10 @@ extern const char *get_DW_ATE_name (unsigned int enc);\n    recognized.  */\n extern const char *get_DW_CFA_name (unsigned int opc);\n \n+/* Return the name of a DW_IDX_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_IDX_name (unsigned int idx);\n+\n #ifdef __cplusplus\n }\n #endif /* __cplusplus */"}, {"sha": "027aa56c88df1a7eff54db04ab53bf1c97316b86", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "patch": "@@ -1,3 +1,7 @@\n+2017-07-02  Jan Kratochvil  <jan.kratochvil@redhat.com>\n+\n+\t* dwarfnames.c (DW_FIRST_IDX, DW_END_IDX, DW_IDX, DW_IDX_DUP): New.\n+\n 2017-06-07  Tony Reix  <tony.reix@atos.net>\n \t    Matthieu Sarter  <matthieu.sarter.external@atos.net>\n \t    David Edelsohn  <dje.gcc@gmail.com>"}, {"sha": "e58d03c3a3d814f3a271edb4689c6306a2f958f0", "filename": "libiberty/dwarfnames.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/libiberty%2Fdwarfnames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef29f5dd771fcfdd778b304c515bcbc7a27b699e/libiberty%2Fdwarfnames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fdwarfnames.c?ref=ef29f5dd771fcfdd778b304c515bcbc7a27b699e", "patch": "@@ -59,6 +59,11 @@ Boston, MA 02110-1301, USA.  */\n   switch (opc) {\t\t\t\t\t\\\n   DW_CFA (name, value)\n #define DW_END_CFA } return 0; }\n+#define DW_FIRST_IDX(name, value) \\\n+  const char *get_DW_IDX_name (unsigned int idx) {\t\\\n+  switch (idx) {\t\t\t\t\t\\\n+  DW_IDX (name, value)\n+#define DW_END_IDX } return 0; }\n \n #define DW_TAG(name, value) case name: return # name ;\n #define DW_TAG_DUP(name, value)\n@@ -70,6 +75,8 @@ Boston, MA 02110-1301, USA.  */\n #define DW_ATE(name, value) case name: return # name ;\n #define DW_ATE_DUP(name, value)\n #define DW_CFA(name, value) case name: return # name ;\n+#define DW_IDX(name, value) case name: return # name ;\n+#define DW_IDX_DUP(name, value)\n \n #include \"dwarf2.def\"\n \n@@ -85,6 +92,8 @@ Boston, MA 02110-1301, USA.  */\n #undef DW_END_ATE\n #undef DW_FIRST_CFA\n #undef DW_END_CFA\n+#undef DW_FIRST_IDX\n+#undef DW_END_IDX\n \n #undef DW_TAG\n #undef DW_TAG_DUP\n@@ -96,3 +105,5 @@ Boston, MA 02110-1301, USA.  */\n #undef DW_ATE\n #undef DW_ATE_DUP\n #undef DW_CFA\n+#undef DW_IDX\n+#undef DW_IDX_DUP"}]}