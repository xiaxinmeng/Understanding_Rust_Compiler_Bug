{"sha": "2d9a8c0ba10d03608aa2add8cf9f33053ab8c421", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ5YThjMGJhMTBkMDM2MDhhYTJhZGQ4Y2Y5ZjMzMDUzYWI4YzQyMQ==", "commit": {"author": {"name": "Maroua Maalej", "email": "maalej@adacore.com", "date": "2018-09-26T09:19:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:19:33Z"}, "message": "[Ada] SPARK: fix a bug related to loop exit environment\n\n2018-09-26  Maroua Maalej  <maalej@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Check_Loop_Statement): Fix a bug related to\n\tloop exit environment.\n\t(Check_Statement): fixing a bug when comparing the source and\n\ttarget in an assignment statement.\n\nFrom-SVN: r264631", "tree": {"sha": "5a0d7881408b088dfc35ce19279027818abb4fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a0d7881408b088dfc35ce19279027818abb4fce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421/comments", "author": null, "committer": null, "parents": [{"sha": "1a409f80df7452dbcab228390a2de483bed5b875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a409f80df7452dbcab228390a2de483bed5b875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a409f80df7452dbcab228390a2de483bed5b875"}], "stats": {"total": 81, "additions": 58, "deletions": 23}, "files": [{"sha": "c8145cfb141b7940a09189a9255250c82a711377", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d9a8c0ba10d03608aa2add8cf9f33053ab8c421", "patch": "@@ -1,3 +1,10 @@\n+2018-09-26  Maroua Maalej  <maalej@adacore.com>\n+\n+\t* sem_spark.adb (Check_Loop_Statement): Fix a bug related to\n+\tloop exit environment.\n+\t(Check_Statement): fixing a bug when comparing the source and\n+\ttarget in an assignment statement.\n+\n 2018-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch12.adb (Instantiate_Package_Body): Capture and restore"}, {"sha": "9a2209233b14c29040ed4b785146f9b74bc8b6fe", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 51, "deletions": 23, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d9a8c0ba10d03608aa2add8cf9f33053ab8c421/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=2d9a8c0ba10d03608aa2add8cf9f33053ab8c421", "patch": "@@ -866,8 +866,17 @@ package body Sem_SPARK is\n \n       Target_Ent : constant Entity_Id := Defining_Identifier (Decl);\n       Target_Typ : Node_Id renames Etype (Target_Ent);\n-      Check      : Boolean := True;\n+\n+      Target_View_Typ : Entity_Id;\n+\n+      Check : Boolean := True;\n    begin\n+      if Present (Full_View (Target_Typ)) then\n+         Target_View_Typ := Full_View (Target_Typ);\n+      else\n+         Target_View_Typ := Target_Typ;\n+      end if;\n+\n       case N_Declaration'(Nkind (Decl)) is\n          when N_Full_Type_Declaration =>\n             if not Has_Ownership_Aspect_True (Target_Ent, \"type declaration\")\n@@ -878,15 +887,15 @@ package body Sem_SPARK is\n             --  ??? What about component declarations with defaults.\n \n          when N_Object_Declaration =>\n-            if (Is_Access_Type (Target_Typ)\n+            if (Is_Access_Type (Target_View_Typ)\n                 or else Is_Deep (Target_Typ))\n               and then not Has_Ownership_Aspect_True\n                 (Target_Ent, \"Object declaration \")\n             then\n                Check := False;\n             end if;\n \n-            if Is_Anonymous_Access_Type (Target_Typ)\n+            if Is_Anonymous_Access_Type (Target_View_Typ)\n               and then not Present (Expression (Decl))\n             then\n \n@@ -905,23 +914,23 @@ package body Sem_SPARK is\n \n                --  Initializing object, access type\n \n-               if Is_Access_Type (Target_Typ) then\n+               if Is_Access_Type (Target_View_Typ) then\n \n                   --  Initializing object, constant access type\n \n                   if Is_Constant_Object (Target_Ent) then\n \n                      --  Initializing object, constant access to variable type\n \n-                     if not Is_Access_Constant (Target_Typ) then\n+                     if not Is_Access_Constant (Target_View_Typ) then\n                         Current_Checking_Mode := Borrow;\n \n                      --  Initializing object, constant access to constant type\n \n                      --  Initializing object,\n                      --  constant access to constant anonymous type.\n \n-                     elsif Is_Anonymous_Access_Type (Target_Typ) then\n+                     elsif Is_Anonymous_Access_Type (Target_View_Typ) then\n \n                         --  This is an object declaration so the target\n                         --  of the assignement is a stand-alone object.\n@@ -943,12 +952,12 @@ package body Sem_SPARK is\n                   else\n                      --  Initializing object, variable access to variable type\n \n-                     if not Is_Access_Constant (Target_Typ) then\n+                     if not Is_Access_Constant (Target_View_Typ) then\n \n                         --  Initializing object, variable named access to\n                         --  variable type.\n \n-                        if not Is_Anonymous_Access_Type (Target_Typ) then\n+                        if not Is_Anonymous_Access_Type (Target_View_Typ) then\n                            Current_Checking_Mode := Move;\n \n                         --  Initializing object, variable anonymous access to\n@@ -968,7 +977,7 @@ package body Sem_SPARK is\n                         --  Initializing object,\n                         --  variable named access to constant type.\n \n-                        if not Is_Anonymous_Access_Type (Target_Typ) then\n+                        if not Is_Anonymous_Access_Type (Target_View_Typ) then\n                            Error_Msg_N (\"assignment not allowed, Ownership \"\n                                         & \"Aspect False (Anonymous Access \"\n                                         & \"Object)\", Decl);\n@@ -1201,6 +1210,7 @@ package body Sem_SPARK is\n             Check_Node (Right_Opnd (Expr));\n \n          --  Forbid all deep expressions for Attribute ???\n+         --  What about generics? (formal parameters).\n \n          when N_Attribute_Reference =>\n             case Attribute_Name (Expr) is\n@@ -1690,12 +1700,12 @@ package body Sem_SPARK is\n \n          if Exit_Env /= null then\n             Copy_Env (From => Exit_Env.all, To => Current_Perm_Env);\n+            Free_Env (Loop_Env.all);\n+            Free_Env (Exit_Env.all);\n          else\n             Copy_Env (From => Loop_Env.all, To => Current_Perm_Env);\n+            Free_Env (Loop_Env.all);\n          end if;\n-\n-         Free_Env (Loop_Env.all);\n-         Free_Env (Exit_Env.all);\n       end;\n    end Check_Loop_Statement;\n \n@@ -2247,7 +2257,8 @@ package body Sem_SPARK is\n                         --  Target /= source root\n \n                         if Nkind_In (Expression (Stmt), N_Allocator, N_Null)\n-                        or else St_Name /= Get_Root (Expression (Stmt))\n+                          or else Entity (St_Name) /=\n+                          Entity (Get_Root (Expression (Stmt)))\n                         then\n                            Error_Msg_N (\"assignment not allowed, anonymous \"\n                                         & \"access Object with Different Root\",\n@@ -2307,7 +2318,10 @@ package body Sem_SPARK is\n                --  Assigning to composite (deep) type.\n \n                elsif Is_Deep (Ty_St_Name) then\n-                  if Ekind (Ty_St_Name) = E_Record_Type then\n+                  if Ekind_In (Ty_St_Name,\n+                               E_Record_Type,\n+                               E_Record_Subtype)\n+                  then\n                      declare\n                         Elmt : Entity_Id :=\n                           First_Component_Or_Discriminant (Ty_St_Name);\n@@ -2333,6 +2347,13 @@ package body Sem_SPARK is\n                      if Check then\n                         Current_Checking_Mode := Move;\n                      end if;\n+\n+                  elsif Ekind_In (Ty_St_Name,\n+                                  E_Array_Type,\n+                                  E_Array_Subtype)\n+                    and then Check\n+                  then\n+                     Current_Checking_Mode := Move;\n                   end if;\n \n                --  Now handle legality rules of using a borrowed, observed,\n@@ -3399,7 +3420,7 @@ package body Sem_SPARK is\n \n             if State_N = Moved then\n                Error_Msg_N (\"?the source or one of its extensions has\"\n-                         & \" already been moved\", N);\n+                            & \" already been moved\", N);\n             end if;\n \n             declare\n@@ -4451,9 +4472,16 @@ package body Sem_SPARK is\n       Mode       : Formal_Kind;\n       Global_Var : Boolean)\n    is\n-      Elem : Perm_Tree_Access;\n+      Elem     : Perm_Tree_Access;\n+      View_Typ : Entity_Id;\n \n    begin\n+      if Present (Full_View (Etype (Id))) then\n+         View_Typ := Full_View (Etype (Id));\n+      else\n+         View_Typ := Etype (Id);\n+      end if;\n+\n       Elem := new Perm_Tree_Wrapper'\n         (Tree =>\n            (Kind                => Entire_Object,\n@@ -4481,16 +4509,16 @@ package body Sem_SPARK is\n             --  a function, and a borrow operation for a procedure.\n \n             if not Global_Var then\n-               if (Is_Access_Type (Etype (Id))\n-                    and then Is_Access_Constant (Etype (Id))\n-                    and then Is_Anonymous_Access_Type (Etype (Id)))\n+               if (Is_Access_Type (View_Typ)\n+                    and then Is_Access_Constant (View_Typ)\n+                    and then Is_Anonymous_Access_Type (View_Typ))\n                  or else\n-                   (Is_Access_Type (Etype (Id))\n+                   (Is_Access_Type (View_Typ)\n                      and then Ekind (Scope (Id)) = E_Function)\n                  or else\n-                   (not Is_Access_Type (Etype (Id))\n-                     and then Is_Deep (Etype (Id))\n-                     and then not Is_Anonymous_Access_Type (Etype (Id)))\n+                   (not Is_Access_Type (View_Typ)\n+                     and then Is_Deep (View_Typ)\n+                     and then not Is_Anonymous_Access_Type (View_Typ))\n                then\n                   Elem.all.Tree.Permission := Observed;\n                   Elem.all.Tree.Children_Permission := Observed;"}]}