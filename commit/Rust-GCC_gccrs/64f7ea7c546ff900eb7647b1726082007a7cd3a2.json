{"sha": "64f7ea7c546ff900eb7647b1726082007a7cd3a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRmN2VhN2M1NDZmZjkwMGViNzY0N2IxNzI2MDgyMDA3YTdjZDNhMg==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2018-10-29T00:03:20Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2018-10-29T00:03:20Z"}, "message": "gimplefe-30.c: New test.\n\n\ngcc/testsuite/ChangeLog:\n\n2018-10-28  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* gcc.dg/gimplefe-30.c: New test.\n\t* gcc.dg/gimplefe-31.c: New test.\n\t* gcc.dg/gimplefe-32.c: New test.\n\t* gcc.dg/gimplefe-33.c: New test.\n\n\ngcc/ChangeLog:\n\n2018-10-28  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* doc/generic.texi (ABSU_EXPR): Document.\n        * match.pd (absu(x)*absu(x) -> x*x): Handle.\n        (absu(absu(X)) -> absu(X)): Likewise.\n        (absu(-X) -> absu(X)): Likewise.\n        (absu(X)  where X is nonnegative -> X): Likewise.\n\nFrom-SVN: r265578", "tree": {"sha": "144f8b42f63575422e934ff3c3ab7206e252bf9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/144f8b42f63575422e934ff3c3ab7206e252bf9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64f7ea7c546ff900eb7647b1726082007a7cd3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f7ea7c546ff900eb7647b1726082007a7cd3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f7ea7c546ff900eb7647b1726082007a7cd3a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f7ea7c546ff900eb7647b1726082007a7cd3a2/comments", "author": null, "committer": null, "parents": [{"sha": "881eaae68818cab0b3419482586174582c348ed7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881eaae68818cab0b3419482586174582c348ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881eaae68818cab0b3419482586174582c348ed7"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "e1b641fc005a5752915660cb5ba62d4993f1e58f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -1,3 +1,11 @@\n+2018-10-28  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* doc/generic.texi (ABSU_EXPR): Document.\n+\t* match.pd (absu(x)*absu(x) -> x*x): Handle.\n+\t(absu(absu(X)) -> absu(X)): Likewise.\n+\t(absu(-X) -> absu(X)): Likewise.\n+\t(absu(X)  where X is nonnegative -> X): Likewise.\n+\n 2018-10-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* Makefile.in (tm_d_file_list, tm_d_include_list): New variables."}, {"sha": "5d0a541451a38795d61c23df6219e4534f24318a", "filename": "gcc/doc/generic.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Fdoc%2Fgeneric.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Fdoc%2Fgeneric.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgeneric.texi?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -1274,6 +1274,7 @@ the byte offset of the field, but should not be used directly; call\n @subsection Unary and Binary Expressions\n @tindex NEGATE_EXPR\n @tindex ABS_EXPR\n+@tindex ABSU_EXPR\n @tindex BIT_NOT_EXPR\n @tindex TRUTH_NOT_EXPR\n @tindex PREDECREMENT_EXPR\n@@ -1371,6 +1372,11 @@ or complex abs of a complex value, use the @code{BUILT_IN_CABS},\n to implement the C99 @code{cabs}, @code{cabsf} and @code{cabsl}\n built-in functions.\n \n+@item ABSU_EXPR\n+These nodes represent the absolute value of the single operand in\n+equivalent unsigned type such that @code{ABSU_EXPR} of TYPE_MIN is\n+well defined.\n+\n @item BIT_NOT_EXPR\n These nodes represent bitwise complement, and will always have integral\n type.  The only operand is the value to be complemented."}, {"sha": "d07ceb7d087b8b5c5a7d7362ad9d8f71ac90dc08", "filename": "gcc/match.pd", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -590,6 +590,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (mult (abs@1 @0) @1)\n  (mult @0 @0))\n \n+/* Convert absu(x)*absu(x) -> x*x.  */\n+(simplify\n+ (mult (absu@1 @0) @1)\n+ (mult (convert@2 @0) @2))\n+\n /* cos(copysign(x, y)) -> cos(x).  Similarly for cosh.  */\n (for coss (COS COSH)\n      copysigns (COPYSIGN)\n@@ -1121,16 +1126,35 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       && tree_nop_conversion_p (type, TREE_TYPE (@2)))\n   (bit_xor (convert @1) (convert @2))))\n \n+/* Convert abs (abs (X)) into abs (X).\n+   also absu (absu (X)) into absu (X).  */\n (simplify\n  (abs (abs@1 @0))\n  @1)\n+\n+(simplify\n+ (absu (convert@2 (absu@1 @0)))\n+ (if (tree_nop_conversion_p (TREE_TYPE (@2), TREE_TYPE (@1)))\n+  @1))\n+\n+/* Convert abs[u] (-X) -> abs[u] (X).  */\n (simplify\n  (abs (negate @0))\n  (abs @0))\n+\n+(simplify\n+ (absu (negate @0))\n+ (absu @0))\n+\n+/* Convert abs[u] (X)  where X is nonnegative -> (X).  */\n (simplify\n  (abs tree_expr_nonnegative_p@0)\n  @0)\n \n+(simplify\n+ (absu tree_expr_nonnegative_p@0)\n+ (convert @0))\n+\n /* A few cases of fold-const.c negate_expr_p predicate.  */\n (match negate_expr_p\n  INTEGER_CST"}, {"sha": "40ea5a7b436a5fa4861cea359582da1689cfefa1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -1,3 +1,10 @@\n+2018-10-28  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* gcc.dg/gimplefe-30.c: New test.\n+\t* gcc.dg/gimplefe-31.c: New test.\n+\t* gcc.dg/gimplefe-32.c: New test.\n+\t* gcc.dg/gimplefe-33.c: New test.\n+\n 2018-10-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* gcc.misc-tests/help.exp: Add D to option descriptions check."}, {"sha": "6c251061604741008a40e8acf6311cece0a0a2af", "filename": "gcc/testsuite/gcc.dg/gimplefe-30.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-30.c?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fgimple -fdump-tree-optimized\" } */\n+\n+unsigned int __GIMPLE() f(int a)\n+{\n+  unsigned int t0;\n+  unsigned int t1;\n+  unsigned int t2;\n+  t0 = __ABSU a;\n+  t1 = __ABSU a;\n+  t2 = t0 * t1;\n+  return t2;\n+}\n+\n+\n+/* { dg-final { scan-tree-dump-times \"ABSU\" 0 \"optimized\" } } */"}, {"sha": "a97d0dd65e3548a4954b008b94d077546e1d130e", "filename": "gcc/testsuite/gcc.dg/gimplefe-31.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-31.c?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fgimple -fdump-tree-optimized\" } */\n+\n+\n+unsigned int __GIMPLE() f(int a)\n+{\n+  unsigned int t0;\n+  int t1;\n+  unsigned int t2;\n+  t0 = __ABSU a;\n+  t1 = (int) t0;\n+  t2 = __ABSU t1;\n+  return t2;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"ABSU\" 1 \"optimized\" } } */"}, {"sha": "9b3963cdde282714473c0a390ffed387a09c1538", "filename": "gcc/testsuite/gcc.dg/gimplefe-32.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-32.c?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fgimple -fdump-tree-optimized\" } */\n+\n+unsigned int __GIMPLE() f(int a)\n+{\n+  int t0;\n+  unsigned int t1;\n+  t0 = -a;\n+  t1 = __ABSU a;\n+  return t1;\n+}\n+\n+\n+/* { dg-final { scan-tree-dump-times \"= -\" 0 \"optimized\" } } */"}, {"sha": "4e4982247cdb19ec4d40fed76e3fa836b7348a2b", "filename": "gcc/testsuite/gcc.dg/gimplefe-33.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f7ea7c546ff900eb7647b1726082007a7cd3a2/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-33.c?ref=64f7ea7c546ff900eb7647b1726082007a7cd3a2", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fgimple -fdump-tree-optimized\" } */\n+\n+int __GIMPLE() f(int c)\n+{\n+  int D;\n+  int _1;\n+  unsigned int _2;\n+  _1 = __ABS c;\n+  _2 = __ABSU _1;\n+  D = (int) _2;\n+  return D;\n+}\n+\n+\n+/* { dg-final { scan-tree-dump-times \"ABSU\" 0 \"optimized\" } } */"}]}