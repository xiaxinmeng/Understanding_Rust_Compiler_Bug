{"sha": "613bc14fcd3f6b58289aca9a2980cacfc2e75299", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzYmMxNGZjZDNmNmI1ODI4OWFjYTlhMjk4MGNhY2ZjMmU3NTI5OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-12-06T19:56:11Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-12-06T19:56:11Z"}, "message": "Move macro-spellchecking code from \"gcc\" to new files in c-family\n\nThe code for spellchecking macros really belongs in c-family, rather\nthan in gcc/spellcheck-tree.c, so this patch moves it there.\n\ngcc/ChangeLog:\n\t* Makefile.in (C_COMMON_OBJS): Add c-family/c-spellcheck.o.\n\t* spellcheck-tree.c (find_closest_macro_cpp_cb): Move to\n\tc-family/c-spellcheck.cc.\n\t(best_macro_match::best_macro_match): Likewise.\n\t* spellcheck-tree.h\n\t(struct edit_distance_traits<cpp_hashnode *>): Move to\n\tc-family/c-spellcheck.h.\n\t(class best_macro_match): Likewise.\n\ngcc/c-family/ChangeLog:\n\t* c-spellcheck.cc: New file, taken from macro-handling code in\n\tspellcheck-tree.c.\n\t* c-spellcheck.h: New file, taken from macro-handling code in\n\tspellcheck-tree.h.\n\ngcc/c/ChangeLog:\n\t* c-decl.c: Include \"c-family/c-spellcheck.h\".\n\ngcc/cp/ChangeLog:\n\t* name-lookup.c: Include \"c-family/c-spellcheck.h\".\n\nFrom-SVN: r255452", "tree": {"sha": "adf0978b4aae44dff2d6b8e753023d32a03d9960", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adf0978b4aae44dff2d6b8e753023d32a03d9960"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/613bc14fcd3f6b58289aca9a2980cacfc2e75299", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613bc14fcd3f6b58289aca9a2980cacfc2e75299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613bc14fcd3f6b58289aca9a2980cacfc2e75299", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613bc14fcd3f6b58289aca9a2980cacfc2e75299/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06f9708454a5e644b1fb5ed17a863cd624985e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06f9708454a5e644b1fb5ed17a863cd624985e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06f9708454a5e644b1fb5ed17a863cd624985e17"}], "stats": {"total": 194, "additions": 137, "deletions": 57}, "files": [{"sha": "3661e97950078294afbc86069771ec444f7daa2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -1,3 +1,14 @@\n+2017-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (C_COMMON_OBJS): Add c-family/c-spellcheck.o.\n+\t* spellcheck-tree.c (find_closest_macro_cpp_cb): Move to\n+\tc-family/c-spellcheck.cc.\n+\t(best_macro_match::best_macro_match): Likewise.\n+\t* spellcheck-tree.h\n+\t(struct edit_distance_traits<cpp_hashnode *>): Move to\n+\tc-family/c-spellcheck.h.\n+\t(class best_macro_match): Likewise.\n+\n 2017-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/83293"}, {"sha": "6874f94e7f6f92a1600fdfc99dfed97083bcc65e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -1196,7 +1196,7 @@ C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n   c-family/c-ppoutput.o c-family/c-pragma.o c-family/c-pretty-print.o \\\n   c-family/c-semantics.o c-family/c-ada-spec.o \\\n   c-family/c-ubsan.o c-family/known-headers.o \\\n-  c-family/c-attribs.o c-family/c-warn.o\n+  c-family/c-attribs.o c-family/c-warn.o c-family/c-spellcheck.o\n \n # Language-independent object files.\n # We put the *-match.o and insn-*.o files first so that a parallel make"}, {"sha": "ee590ed10a59cbb4300b5f1b431ba6fdc885afa4", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -1,3 +1,10 @@\n+2017-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-spellcheck.cc: New file, taken from macro-handling code in\n+\tspellcheck-tree.c.\n+\t* c-spellcheck.h: New file, taken from macro-handling code in\n+\tspellcheck-tree.h.\n+\n 2017-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-attribs.c (c_common_attribute_table): Remove \"cilk simd function\""}, {"sha": "db70a64b40ccab7254a783421c6964396f694346", "filename": "gcc/c-family/c-spellcheck.cc", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc-family%2Fc-spellcheck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc-family%2Fc-spellcheck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-spellcheck.cc?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -0,0 +1,57 @@\n+/* Find near-matches for macros.\n+   Copyright (C) 2016-2017 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tree.h\"\n+#include \"cpplib.h\"\n+#include \"spellcheck-tree.h\"\n+#include \"c-family/c-spellcheck.h\"\n+\n+/* A callback for cpp_forall_identifiers, for use by best_macro_match's ctor.\n+   Process HASHNODE and update the best_macro_match instance pointed to be\n+   USER_DATA.  */\n+\n+static int\n+find_closest_macro_cpp_cb (cpp_reader *, cpp_hashnode *hashnode,\n+\t\t\t   void *user_data)\n+{\n+  if (hashnode->type != NT_MACRO)\n+    return 1;\n+\n+  best_macro_match *bmm = (best_macro_match *)user_data;\n+  bmm->consider (hashnode);\n+\n+  /* Keep iterating.  */\n+  return 1;\n+}\n+\n+/* Constructor for best_macro_match.\n+   Use find_closest_macro_cpp_cb to find the closest matching macro to\n+   NAME within distance < best_distance_so_far. */\n+\n+best_macro_match::best_macro_match (tree goal,\n+\t\t\t\t    edit_distance_t best_distance_so_far,\n+\t\t\t\t    cpp_reader *reader)\n+: best_match <goal_t, candidate_t> (goal, best_distance_so_far)\n+{\n+  cpp_forall_identifiers (reader, find_closest_macro_cpp_cb, this);\n+}"}, {"sha": "adc539aff1da951a799990b57fbd90f656af19f0", "filename": "gcc/c-family/c-spellcheck.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc-family%2Fc-spellcheck.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc-family%2Fc-spellcheck.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-spellcheck.h?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -0,0 +1,51 @@\n+/* Find near-matches for macros.\n+   Copyright (C) 2016-2017 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef C_SPELLCHECK_H\n+#define C_SPELLCHECK_H\n+\n+#include \"spellcheck.h\"\n+\n+/* Specialization of edit_distance_traits for preprocessor macros.  */\n+\n+template <>\n+struct edit_distance_traits<cpp_hashnode *>\n+{\n+  static size_t get_length (cpp_hashnode *hashnode)\n+  {\n+    return hashnode->ident.len;\n+  }\n+\n+  static const char *get_string (cpp_hashnode *hashnode)\n+  {\n+    return (const char *)hashnode->ident.str;\n+  }\n+};\n+\n+/* Specialization of best_match<> for finding the closest preprocessor\n+   macro to a given identifier.  */\n+\n+class best_macro_match : public best_match<tree, cpp_hashnode *>\n+{\n+ public:\n+  best_macro_match (tree goal, edit_distance_t best_distance_so_far,\n+\t\t    cpp_reader *reader);\n+};\n+\n+#endif  /* C_SPELLCHECK_H  */"}, {"sha": "b89939e24ad3cce720f67b1fabb01ae4978fccb7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -1,3 +1,7 @@\n+2017-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-decl.c: Include \"c-family/c-spellcheck.h\".\n+\n 2017-12-05  Martin Liska  <mliska@suse.cz>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "d7dad1a29a5a2ddde6778c0c34990c6dda7ac7cb", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -56,6 +56,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"asan.h\"\n #include \"c-family/name-hint.h\"\n #include \"c-family/known-headers.h\"\n+#include \"c-family/c-spellcheck.h\"\n \n /* In grokdeclarator, distinguish syntactic contexts of declarators.  */\n enum decl_context"}, {"sha": "4cd3917d8844173e976d9465df204df15f2ddf44", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -1,3 +1,7 @@\n+2017-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* name-lookup.c: Include \"c-family/c-spellcheck.h\".\n+\n 2017-12-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/82331 - ICE with variadic partial specialization of auto"}, {"sha": "482ddccfaa56818d9ddc3cee3051f20d2e896851", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -35,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"parser.h\"\n #include \"c-family/name-hint.h\"\n #include \"c-family/known-headers.h\"\n+#include \"c-family/c-spellcheck.h\"\n \n static cxx_binding *cxx_binding_make (tree value, tree type);\n static cp_binding_level *innermost_nonclass_level (void);"}, {"sha": "99878d5d9e543052613a85008a2863bb5364ad54", "filename": "gcc/spellcheck-tree.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fspellcheck-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fspellcheck-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck-tree.c?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -66,36 +66,6 @@ find_closest_identifier (tree target, const auto_vec<tree> *candidates)\n   return bm.get_best_meaningful_candidate ();\n }\n \n-/* A callback for cpp_forall_identifiers, for use by best_macro_match's ctor.\n-   Process HASHNODE and update the best_macro_match instance pointed to be\n-   USER_DATA.  */\n-\n-static int\n-find_closest_macro_cpp_cb (cpp_reader *, cpp_hashnode *hashnode,\n-\t\t\t   void *user_data)\n-{\n-  if (hashnode->type != NT_MACRO)\n-    return 1;\n-\n-  best_macro_match *bmm = (best_macro_match *)user_data;\n-  bmm->consider (hashnode);\n-\n-  /* Keep iterating.  */\n-  return 1;\n-}\n-\n-/* Constructor for best_macro_match.\n-   Use find_closest_macro_cpp_cb to find the closest matching macro to\n-   NAME within distance < best_distance_so_far. */\n-\n-best_macro_match::best_macro_match (tree goal,\n-\t\t\t\t    edit_distance_t best_distance_so_far,\n-\t\t\t\t    cpp_reader *reader)\n-: best_match <goal_t, candidate_t> (goal, best_distance_so_far)\n-{\n-  cpp_forall_identifiers (reader, find_closest_macro_cpp_cb, this);\n-}\n-\n #if CHECKING_P\n \n namespace selftest {"}, {"sha": "84b76e00a00c7346e048353090603f18a16331bc", "filename": "gcc/spellcheck-tree.h", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fspellcheck-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613bc14fcd3f6b58289aca9a2980cacfc2e75299/gcc%2Fspellcheck-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck-tree.h?ref=613bc14fcd3f6b58289aca9a2980cacfc2e75299", "patch": "@@ -48,30 +48,4 @@ struct edit_distance_traits<tree>\n   }\n };\n \n-/* Specialization of edit_distance_traits for preprocessor macros.  */\n-\n-template <>\n-struct edit_distance_traits<cpp_hashnode *>\n-{\n-  static size_t get_length (cpp_hashnode *hashnode)\n-  {\n-    return hashnode->ident.len;\n-  }\n-\n-  static const char *get_string (cpp_hashnode *hashnode)\n-  {\n-    return (const char *)hashnode->ident.str;\n-  }\n-};\n-\n-/* Specialization of best_match<> for finding the closest preprocessor\n-   macro to a given identifier.  */\n-\n-class best_macro_match : public best_match<tree, cpp_hashnode *>\n-{\n- public:\n-  best_macro_match (tree goal, edit_distance_t best_distance_so_far,\n-\t\t    cpp_reader *reader);\n-};\n-\n #endif  /* GCC_SPELLCHECK_TREE_H  */"}]}