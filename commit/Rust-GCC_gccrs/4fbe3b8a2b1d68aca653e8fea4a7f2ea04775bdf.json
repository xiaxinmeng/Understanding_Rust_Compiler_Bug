{"sha": "4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZiZTNiOGEyYjFkNjhhY2E2NTNlOGZlYTRhN2YyZWEwNDc3NWJkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-14T06:06:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-14T06:06:14Z"}, "message": "sse.md (*avx_cvtdq2pd256_2): Rename to...\n\n\t* config/i386/sse.md (*avx_cvtdq2pd256_2): Rename to...\n\t(avx_cvtdq2pd256_2): ... this.\n\t(sseunpackfltmode): New mode attr.\n\t(vec_unpacks_float_hi_v8hi, vec_unpacks_float_lo_v8hi,\n\tvec_unpacku_float_hi_v8hi, vec_unpacku_float_lo_v8hi): Macroize\n\tusing VI2_AVX2 iterator.\n\t(vec_unpacku_float_hi_v8si, vec_unpacku_float_lo_v8si): New\n\texpanders.\n\nFrom-SVN: r179960", "tree": {"sha": "4896ba81021ee3d2c1418a97cc25a3b7f0ceef95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4896ba81021ee3d2c1418a97cc25a3b7f0ceef95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e24e4091ccb02941b777d04195d43a434714715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e24e4091ccb02941b777d04195d43a434714715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e24e4091ccb02941b777d04195d43a434714715"}], "stats": {"total": 120, "additions": 95, "deletions": 25}, "files": [{"sha": "e1bb4809acbc46ec0584674773ad14596649c961", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf", "patch": "@@ -1,3 +1,14 @@\n+2011-10-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (*avx_cvtdq2pd256_2): Rename to...\n+\t(avx_cvtdq2pd256_2): ... this.\n+\t(sseunpackfltmode): New mode attr.\n+\t(vec_unpacks_float_hi_v8hi, vec_unpacks_float_lo_v8hi,\n+\tvec_unpacku_float_hi_v8hi, vec_unpacku_float_lo_v8hi): Macroize\n+\tusing VI2_AVX2 iterator.\n+\t(vec_unpacku_float_hi_v8si, vec_unpacku_float_lo_v8si): New\n+\texpanders.\n+\n 2011-10-13  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.md (plusminus): New code iterator."}, {"sha": "f1de7fc8d667e1aad91c1b6f4fc3312d0e4f9a0d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 84, "deletions": 25, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4fbe3b8a2b1d68aca653e8fea4a7f2ea04775bdf", "patch": "@@ -2517,7 +2517,7 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V4DF\")])\n \n-(define_insn \"*avx_cvtdq2pd256_2\"\n+(define_insn \"avx_cvtdq2pd256_2\"\n   [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n \t(float:V4DF\n \t  (vec_select:V4SI\n@@ -2786,51 +2786,58 @@\n \t\t       (const_int 2) (const_int 3)]))))]\n   \"TARGET_AVX\")\n \n-(define_expand \"vec_unpacks_float_hi_v8hi\"\n-  [(match_operand:V4SF 0 \"register_operand\" \"\")\n-   (match_operand:V8HI 1 \"register_operand\" \"\")]\n+(define_mode_attr sseunpackfltmode\n+  [(V8HI \"V4SF\") (V4SI \"V2DF\") (V16HI \"V8SF\") (V8SI \"V4DF\")])\n+\n+(define_expand \"vec_unpacks_float_hi_<mode>\"\n+  [(match_operand:<sseunpackfltmode> 0 \"register_operand\" \"\")\n+   (match_operand:VI2_AVX2 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  rtx tmp = gen_reg_rtx (V4SImode);\n+  rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n \n-  emit_insn (gen_vec_unpacks_hi_v8hi (tmp, operands[1]));\n-  emit_insn (gen_sse2_cvtdq2ps (operands[0], tmp));\n+  emit_insn (gen_vec_unpacks_hi_<mode> (tmp, operands[1]));\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t  gen_rtx_FLOAT (<sseunpackfltmode>mode, tmp)));\n   DONE;\n })\n \n-(define_expand \"vec_unpacks_float_lo_v8hi\"\n-  [(match_operand:V4SF 0 \"register_operand\" \"\")\n-   (match_operand:V8HI 1 \"register_operand\" \"\")]\n+(define_expand \"vec_unpacks_float_lo_<mode>\"\n+  [(match_operand:<sseunpackfltmode> 0 \"register_operand\" \"\")\n+   (match_operand:VI2_AVX2 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  rtx tmp = gen_reg_rtx (V4SImode);\n+  rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n \n-  emit_insn (gen_vec_unpacks_lo_v8hi (tmp, operands[1]));\n-  emit_insn (gen_sse2_cvtdq2ps (operands[0], tmp));\n+  emit_insn (gen_vec_unpacks_lo_<mode> (tmp, operands[1]));\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t  gen_rtx_FLOAT (<sseunpackfltmode>mode, tmp)));\n   DONE;\n })\n \n-(define_expand \"vec_unpacku_float_hi_v8hi\"\n-  [(match_operand:V4SF 0 \"register_operand\" \"\")\n-   (match_operand:V8HI 1 \"register_operand\" \"\")]\n+(define_expand \"vec_unpacku_float_hi_<mode>\"\n+  [(match_operand:<sseunpackfltmode> 0 \"register_operand\" \"\")\n+   (match_operand:VI2_AVX2 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  rtx tmp = gen_reg_rtx (V4SImode);\n+  rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n \n-  emit_insn (gen_vec_unpacku_hi_v8hi (tmp, operands[1]));\n-  emit_insn (gen_sse2_cvtdq2ps (operands[0], tmp));\n+  emit_insn (gen_vec_unpacku_hi_<mode> (tmp, operands[1]));\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t  gen_rtx_FLOAT (<sseunpackfltmode>mode, tmp)));\n   DONE;\n })\n \n-(define_expand \"vec_unpacku_float_lo_v8hi\"\n-  [(match_operand:V4SF 0 \"register_operand\" \"\")\n-   (match_operand:V8HI 1 \"register_operand\" \"\")]\n+(define_expand \"vec_unpacku_float_lo_<mode>\"\n+  [(match_operand:<sseunpackfltmode> 0 \"register_operand\" \"\")\n+   (match_operand:VI2_AVX2 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  rtx tmp = gen_reg_rtx (V4SImode);\n+  rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n \n-  emit_insn (gen_vec_unpacku_lo_v8hi (tmp, operands[1]));\n-  emit_insn (gen_sse2_cvtdq2ps (operands[0], tmp));\n+  emit_insn (gen_vec_unpacku_lo_<mode> (tmp, operands[1]));\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t  gen_rtx_FLOAT (<sseunpackfltmode>mode, tmp)));\n   DONE;\n })\n \n@@ -2942,6 +2949,58 @@\n     operands[i] = gen_reg_rtx (V2DFmode);\n })\n \n+(define_expand \"vec_unpacku_float_hi_v8si\"\n+  [(match_operand:V4DF 0 \"register_operand\" \"\")\n+   (match_operand:V8SI 1 \"register_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  REAL_VALUE_TYPE TWO32r;\n+  rtx x, tmp[6];\n+  int i;\n+\n+  real_ldexp (&TWO32r, &dconst1, 32);\n+  x = const_double_from_real_value (TWO32r, DFmode);\n+\n+  tmp[0] = force_reg (V4DFmode, CONST0_RTX (V4DFmode));\n+  tmp[1] = force_reg (V4DFmode, ix86_build_const_vector (V4DFmode, 1, x));\n+  tmp[5] = gen_reg_rtx (V4SImode);\n+\n+  for (i = 2; i < 5; i++)\n+    tmp[i] = gen_reg_rtx (V4DFmode);\n+  emit_insn (gen_vec_extract_hi_v8si (tmp[5], operands[1]));\n+  emit_insn (gen_avx_cvtdq2pd256 (tmp[2], tmp[5]));\n+  emit_insn (gen_rtx_SET (VOIDmode, tmp[3],\n+\t\t\t  gen_rtx_LT (V4DFmode, tmp[2], tmp[0])));\n+  emit_insn (gen_andv4df3 (tmp[4], tmp[3], tmp[1]));\n+  emit_insn (gen_addv4df3 (operands[0], tmp[2], tmp[4]));\n+  DONE;\n+})\n+\n+(define_expand \"vec_unpacku_float_lo_v8si\"\n+  [(match_operand:V4DF 0 \"register_operand\" \"\")\n+   (match_operand:V8SI 1 \"nonimmediate_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  REAL_VALUE_TYPE TWO32r;\n+  rtx x, tmp[5];\n+  int i;\n+\n+  real_ldexp (&TWO32r, &dconst1, 32);\n+  x = const_double_from_real_value (TWO32r, DFmode);\n+\n+  tmp[0] = force_reg (V4DFmode, CONST0_RTX (V4DFmode));\n+  tmp[1] = force_reg (V4DFmode, ix86_build_const_vector (V4DFmode, 1, x));\n+\n+  for (i = 2; i < 5; i++)\n+    tmp[i] = gen_reg_rtx (V4DFmode);\n+  emit_insn (gen_avx_cvtdq2pd256_2 (tmp[2], operands[1]));\n+  emit_insn (gen_rtx_SET (VOIDmode, tmp[3],\n+\t\t\t  gen_rtx_LT (V4DFmode, tmp[2], tmp[0])));\n+  emit_insn (gen_andv4df3 (tmp[4], tmp[3], tmp[1]));\n+  emit_insn (gen_addv4df3 (operands[0], tmp[2], tmp[4]));\n+  DONE;\n+})\n+\n (define_expand \"vec_pack_trunc_v4df\"\n   [(set (match_dup 3)\n \t(float_truncate:V4SF"}]}