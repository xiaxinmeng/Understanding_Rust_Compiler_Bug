{"sha": "d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyYTVhNGI5YWJiMDQzZmY2YTI0M2JiNGY5YTlhYWFjMmZiODY1Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-16T10:43:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-16T10:43:18Z"}, "message": "re PR debug/41717 (internal compiler error: in expand_debug_expr)\n\n\tPR debug/41717\n\t* cfgexpand.c (expand_debug_expr): Handle CONJ_EXPR.\n\t* dwarf2out.c (mem_loc_descriptor): Don't handle\n\tPOST_INT/POST_DEC/POST_MODIFY like SUBREG.  For SUBREG\n\tpunt if it is not lowpart subreg or if inner mode isn't\n\tMODE_INT.\n\n\t* gcc.dg/debug/pr41717.c: New test.\n\nFrom-SVN: r152897", "tree": {"sha": "6eba8425535818cb1b7315f03e20aef3130b2545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eba8425535818cb1b7315f03e20aef3130b2545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "200ab6fd4b218b3e9f5617bcf1d36857b68e0c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200ab6fd4b218b3e9f5617bcf1d36857b68e0c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200ab6fd4b218b3e9f5617bcf1d36857b68e0c1e"}], "stats": {"total": 94, "additions": 83, "deletions": 11}, "files": [{"sha": "2c8dff8cf498bdcaf035b8a4afbfc0a5b904f624", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "patch": "@@ -1,3 +1,12 @@\n+2009-10-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41717\n+\t* cfgexpand.c (expand_debug_expr): Handle CONJ_EXPR.\n+\t* dwarf2out.c (mem_loc_descriptor): Don't handle\n+\tPOST_INT/POST_DEC/POST_MODIFY like SUBREG.  For SUBREG\n+\tpunt if it is not lowpart subreg or if inner mode isn't\n+\tMODE_INT.\n+\n 2009-10-16  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c (s390_z10_optimize_cmp): Skip notes when"}, {"sha": "acd70c13869f7980982269b422dc6d93cd605039", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "patch": "@@ -2869,6 +2869,46 @@ expand_debug_expr (tree exp)\n \top1 = gen_rtx_CONST (GET_MODE_INNER (mode), op1);\n       return gen_rtx_CONCAT (mode, op0, op1);\n \n+    case CONJ_EXPR:\n+      if (GET_CODE (op0) == CONCAT)\n+\treturn gen_rtx_CONCAT (mode, XEXP (op0, 0),\n+\t\t\t       gen_rtx_NEG (GET_MODE_INNER (mode),\n+\t\t\t\t\t    XEXP (op0, 1)));\n+      else\n+\t{\n+\t  enum machine_mode imode = GET_MODE_INNER (mode);\n+\t  rtx re, im;\n+\n+\t  if (MEM_P (op0))\n+\t    {\n+\t      re = adjust_address_nv (op0, imode, 0);\n+\t      im = adjust_address_nv (op0, imode, GET_MODE_SIZE (imode));\n+\t    }\n+\t  else\n+\t    {\n+\t      enum machine_mode ifmode = int_mode_for_mode (mode);\n+\t      enum machine_mode ihmode = int_mode_for_mode (imode);\n+\t      rtx halfsize;\n+\t      if (ifmode == BLKmode || ihmode == BLKmode)\n+\t\treturn NULL;\n+\t      halfsize = GEN_INT (GET_MODE_BITSIZE (ihmode));\n+\t      re = op0;\n+\t      if (mode != ifmode)\n+\t\tre = gen_rtx_SUBREG (ifmode, re, 0);\n+\t      re = gen_rtx_ZERO_EXTRACT (ihmode, re, halfsize, const0_rtx);\n+\t      if (imode != ihmode)\n+\t\tre = gen_rtx_SUBREG (imode, re, 0);\n+\t      im = copy_rtx (op0);\n+\t      if (mode != ifmode)\n+\t\tim = gen_rtx_SUBREG (ifmode, im, 0);\n+\t      im = gen_rtx_ZERO_EXTRACT (ihmode, im, halfsize, halfsize);\n+\t      if (imode != ihmode)\n+\t\tim = gen_rtx_SUBREG (imode, im, 0);\n+\t    }\n+\t  im = gen_rtx_NEG (imode, im);\n+\t  return gen_rtx_CONCAT (mode, re, im);\n+\t}\n+\n     case ADDR_EXPR:\n       op0 = expand_debug_expr (TREE_OPERAND (exp, 0));\n       if (!op0 || !MEM_P (op0))"}, {"sha": "b67bab3f8e45d2dcab9060d2f274ae646f21448f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "patch": "@@ -12894,20 +12894,21 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n     case POST_INC:\n     case POST_DEC:\n     case POST_MODIFY:\n-      /* POST_INC and POST_DEC can be handled just like a SUBREG.  So we\n-\t just fall into the SUBREG code.  */\n-\n-      /* ... fall through ...  */\n+      return mem_loc_descriptor (XEXP (rtl, 0), mode, initialized);\n \n     case SUBREG:\n       /* The case of a subreg may arise when we have a local (register)\n \t variable or a formal (register) parameter which doesn't quite fill\n \t up an entire register.  For now, just assume that it is\n \t legitimate to make the Dwarf info refer to the whole register which\n \t contains the given subreg.  */\n-      rtl = XEXP (rtl, 0);\n+      if (!subreg_lowpart_p (rtl))\n+\tbreak;\n+      rtl = SUBREG_REG (rtl);\n       if (GET_MODE_SIZE (GET_MODE (rtl)) > DWARF2_ADDR_SIZE)\n \tbreak;\n+      if (GET_MODE_CLASS (GET_MODE (rtl)) != MODE_INT)\n+\tbreak;\n       mem_loc_result = mem_loc_descriptor (rtl, mode, initialized);\n       break;\n \n@@ -13392,12 +13393,19 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n \t  if (BITS_BIG_ENDIAN)\n \t    shift = GET_MODE_BITSIZE (GET_MODE (XEXP (rtl, 0)))\n \t\t    - shift - size;\n-\t  add_loc_descr (&mem_loc_result,\n-\t\t\t int_loc_descriptor (DWARF2_ADDR_SIZE - shift - size));\n-\t  add_loc_descr (&mem_loc_result, new_loc_descr (DW_OP_shl, 0, 0));\n-\t  add_loc_descr (&mem_loc_result,\n-\t\t\t int_loc_descriptor (DWARF2_ADDR_SIZE - size));\n-\t  add_loc_descr (&mem_loc_result, new_loc_descr (op, 0, 0));\n+\t  if (shift + size != DWARF2_ADDR_SIZE)\n+\t    {\n+\t      add_loc_descr (&mem_loc_result,\n+\t\t\t     int_loc_descriptor (DWARF2_ADDR_SIZE\n+\t\t\t\t\t\t - shift - size));\n+\t      add_loc_descr (&mem_loc_result, new_loc_descr (DW_OP_shl, 0, 0));\n+\t    }\n+\t  if (size != DWARF2_ADDR_SIZE)\n+\t    {\n+\t      add_loc_descr (&mem_loc_result,\n+\t\t\t     int_loc_descriptor (DWARF2_ADDR_SIZE - size));\n+\t      add_loc_descr (&mem_loc_result, new_loc_descr (op, 0, 0));\n+\t    }\n \t}\n       break;\n "}, {"sha": "587f15369207688f91555d34143db308cbf50a33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "patch": "@@ -1,3 +1,8 @@\n+2009-10-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41717\n+\t* gcc.dg/debug/pr41717.c: New test.\n+\n 2009-10-16  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41648"}, {"sha": "21250883a1154de580ae432d0eb84d79c8335bce", "filename": "gcc/testsuite/gcc.dg/debug/pr41717.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr41717.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr41717.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr41717.c?ref=d02a5a4b9abb043ff6a243bb4f9a9aaac2fb8656", "patch": "@@ -0,0 +1,10 @@\n+/* PR debug/41717 */\n+/* { dg-do compile } */\n+\n+void\n+foo (void)\n+{\n+  _Complex float v[1], w;\n+  v[1] = 0.0f + 0.8fi;\n+  w = __builtin_conjf (v[1] * v[1]);\n+}"}]}