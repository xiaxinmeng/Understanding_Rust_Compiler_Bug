{"sha": "8174836f1ebff55e127300c942adf3e689d3d3d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3NDgzNmYxZWJmZjU1ZTEyNzMwMGM5NDJhZGYzZTY4OWQzZDNkNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-10-08T14:44:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-10-08T14:44:14Z"}, "message": "re PR middle-end/33691 (Type checking error with bitwise and/or)\n\n2007-10-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/33691\n\tPR middle-end/33694\n\tPR middle-end/33696\n\t* fold-const.c (fold_binary): Use the correct types when\n\tfolding (A | CST1) & CST2 to (A & CST2) | (CST1 & CST2).\n\t(fold_binary): Use the correct types when folding\n\t(-A) - B to (-B) - A.\n\t(fold_unary): Use the correct types when folding ~(X).\n\n\t* gcc.dg/pr33691.c: New testcase.\n        * gcc.dg/pr33694.c: Likewise.\n        * gcc.dg/pr33696.c: Likewise.\n\nFrom-SVN: r129128", "tree": {"sha": "fed6dbf121ef1138a33f97ed54004b0db8ff84e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fed6dbf121ef1138a33f97ed54004b0db8ff84e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8174836f1ebff55e127300c942adf3e689d3d3d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8174836f1ebff55e127300c942adf3e689d3d3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8174836f1ebff55e127300c942adf3e689d3d3d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8174836f1ebff55e127300c942adf3e689d3d3d4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b6cb84335d934861a6058e2751435fbad61191d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b6cb84335d934861a6058e2751435fbad61191d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b6cb84335d934861a6058e2751435fbad61191d"}], "stats": {"total": 80, "additions": 69, "deletions": 11}, "files": [{"sha": "a54a60c868e532a58089d88861d421ad9a51eda2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8174836f1ebff55e127300c942adf3e689d3d3d4", "patch": "@@ -1,3 +1,14 @@\n+2007-10-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33691\n+\tPR middle-end/33694\n+\tPR middle-end/33696\n+\t* fold-const.c (fold_binary): Use the correct types when\n+\tfolding (A | CST1) & CST2 to (A & CST2) | (CST1 & CST2).\n+\t(fold_binary): Use the correct types when folding\n+\t(-A) - B to (-B) - A.\n+\t(fold_unary): Use the correct types when folding ~(X).\n+\n 2007-10-08  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* doc/invoke.texi (Wall): fix formatting issues."}, {"sha": "0313c0ca840e75b652668442ac99c8f8a08c3dbb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8174836f1ebff55e127300c942adf3e689d3d3d4", "patch": "@@ -8374,18 +8374,20 @@ fold_unary (enum tree_code code, tree type, tree op0)\n       if (TREE_CODE (arg0) == INTEGER_CST)\n         return fold_not_const (arg0, type);\n       else if (TREE_CODE (arg0) == BIT_NOT_EXPR)\n-\treturn TREE_OPERAND (arg0, 0);\n+\treturn TREE_OPERAND (op0, 0);\n       /* Convert ~ (-A) to A - 1.  */\n       else if (INTEGRAL_TYPE_P (type) && TREE_CODE (arg0) == NEGATE_EXPR)\n-\treturn fold_build2 (MINUS_EXPR, type, TREE_OPERAND (arg0, 0),\n+\treturn fold_build2 (MINUS_EXPR, type,\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg0, 0)),\n \t\t\t    build_int_cst (type, 1));\n       /* Convert ~ (A - 1) or ~ (A + -1) to -A.  */\n       else if (INTEGRAL_TYPE_P (type)\n \t       && ((TREE_CODE (arg0) == MINUS_EXPR\n \t\t    && integer_onep (TREE_OPERAND (arg0, 1)))\n \t\t   || (TREE_CODE (arg0) == PLUS_EXPR\n \t\t       && integer_all_onesp (TREE_OPERAND (arg0, 1)))))\n-\treturn fold_build1 (NEGATE_EXPR, type, TREE_OPERAND (arg0, 0));\n+\treturn fold_build1 (NEGATE_EXPR, type,\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg0, 0)));\n       /* Convert ~(X ^ Y) to ~X ^ Y or X ^ ~Y if ~X or ~Y simplify.  */\n       else if (TREE_CODE (arg0) == BIT_XOR_EXPR\n \t       && (tem = fold_unary (BIT_NOT_EXPR, type,\n@@ -10126,15 +10128,17 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t}\n       /* A - (-B) -> A + B */\n       if (TREE_CODE (arg1) == NEGATE_EXPR)\n-\treturn fold_build2 (PLUS_EXPR, type, arg0, TREE_OPERAND (arg1, 0));\n+\treturn fold_build2 (PLUS_EXPR, type, op0,\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg1, 0)));\n       /* (-A) - B -> (-B) - A  where B is easily negated and we can swap.  */\n       if (TREE_CODE (arg0) == NEGATE_EXPR\n \t  && (FLOAT_TYPE_P (type)\n \t      || INTEGRAL_TYPE_P (type))\n \t  && negate_expr_p (arg1)\n \t  && reorder_operands_p (arg0, arg1))\n-\treturn fold_build2 (MINUS_EXPR, type, negate_expr (arg1),\n-\t\t\t    TREE_OPERAND (arg0, 0));\n+\treturn fold_build2 (MINUS_EXPR, type,\n+\t\t\t    fold_convert (type, negate_expr (arg1)),\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg0, 0)));\n       /* Convert -A - 1 to ~A.  */\n       if (INTEGRAL_TYPE_P (type)\n \t  && TREE_CODE (arg0) == NEGATE_EXPR\n@@ -10889,11 +10893,16 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n       if (TREE_CODE (arg0) == BIT_IOR_EXPR\n \t  && TREE_CODE (arg1) == INTEGER_CST\n \t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST)\n-\treturn fold_build2 (BIT_IOR_EXPR, type,\n-\t\t\t    fold_build2 (BIT_AND_EXPR, type,\n-\t\t\t\t\t TREE_OPERAND (arg0, 0), arg1),\n-\t\t\t    fold_build2 (BIT_AND_EXPR, type,\n-\t\t\t\t\t TREE_OPERAND (arg0, 1), arg1));\n+\t{\n+\t  tree tmp1 = fold_convert (TREE_TYPE (arg0), arg1);\n+\t  tree tmp2 = fold_build2 (BIT_AND_EXPR, TREE_TYPE (arg0),\n+\t\t\t\t   TREE_OPERAND (arg0, 0), tmp1);\n+\t  tree tmp3 = fold_build2 (BIT_AND_EXPR, TREE_TYPE (arg0),\n+\t\t\t\t   TREE_OPERAND (arg0, 1), tmp1);\n+\t  return fold_convert (type,\n+\t\t\t       fold_build2 (BIT_IOR_EXPR, TREE_TYPE (arg0),\n+\t\t\t\t\t    tmp2, tmp3));\n+\t}\n \n       /* (X | Y) & Y is (X, Y).  */\n       if (TREE_CODE (arg0) == BIT_IOR_EXPR"}, {"sha": "9af8f71c4b55edee1ae049deba2d657afd9badc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8174836f1ebff55e127300c942adf3e689d3d3d4", "patch": "@@ -1,3 +1,12 @@\n+2007-10-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33691\n+\tPR middle-end/33694\n+\tPR middle-end/33696\n+\t* gcc.dg/pr33691.c: New testcase.\n+\t* gcc.dg/pr33694.c: Likewise.\n+\t* gcc.dg/pr33696.c: Likewise.\n+\n 2007-10-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/33683"}, {"sha": "93213610d28a8864f89a1d102eed32f5ee38b1e7", "filename": "gcc/testsuite/gcc.dg/pr33691.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33691.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33691.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33691.c?ref=8174836f1ebff55e127300c942adf3e689d3d3d4", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+\n+/* ICEd with type-checking enabled.  */\n+\n+unsigned int mgaSetTexImages(int i)\n+{\n+    return ((i | 0x40) & 0xffffffc0);\n+}"}, {"sha": "eb7655e8585b6e81e21dd19f0d7bd429d34cdf19", "filename": "gcc/testsuite/gcc.dg/pr33694.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33694.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33694.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33694.c?ref=8174836f1ebff55e127300c942adf3e689d3d3d4", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+\n+/* This used to ICE with type-checking enabled.  */\n+\n+__SIZE_TYPE__ cnfs_mapcntl(long pagesize)\n+{\n+     return ~(__SIZE_TYPE__)(pagesize - 1);\n+}"}, {"sha": "97bbfe8bf433834c9861e0f0829a7beaed66430d", "filename": "gcc/testsuite/gcc.dg/pr33696.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33696.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8174836f1ebff55e127300c942adf3e689d3d3d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33696.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33696.c?ref=8174836f1ebff55e127300c942adf3e689d3d3d4", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+/* This used to ICE with type-checking enabled.  */\n+\n+typedef unsigned char uint8_t;\n+typedef unsigned int uint_least32_t;\n+extern int foo (long int __off);\n+void write (uint_least32_t chunk_len)\n+{\n+     uint8_t tmp[4];\n+     foo (-(long)chunk_len - sizeof(tmp));\n+}\n+"}]}