{"sha": "dc2e89953683df032f15d65845eb2d287f646423", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMyZTg5OTUzNjgzZGYwMzJmMTVkNjU4NDVlYjJkMjg3ZjY0NjQyMw==", "commit": {"author": {"name": "James Bowman", "email": "james.bowman@ftdichip.com", "date": "2016-03-29T00:37:26Z"}, "committer": {"name": "James Bowman", "email": "jamesbowman@gcc.gnu.org", "date": "2016-03-29T00:37:26Z"}, "message": "ft32.opt (mnodiv): New.\n\n\t* config/ft32/ft32.opt (mnodiv): New.\n\t* config/ft32/ft32.md (*divsi3, *modsi3): Qualify with\n\tTARGET_NODIV.\n\t* doc/invoke.texi (FT32 Options -mnodiv): New.\n        * libgcc/config/ft32/lib1funcs.S (*divsi3, *modsi3): New.\n\nFrom-SVN: r234516", "tree": {"sha": "78033af93edbf5cad8e24458d1ab5cabd304f47b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78033af93edbf5cad8e24458d1ab5cabd304f47b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc2e89953683df032f15d65845eb2d287f646423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2e89953683df032f15d65845eb2d287f646423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc2e89953683df032f15d65845eb2d287f646423", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2e89953683df032f15d65845eb2d287f646423/comments", "author": null, "committer": null, "parents": [{"sha": "a06c2388e6c0215901673bd3f5328040bb70fc04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a06c2388e6c0215901673bd3f5328040bb70fc04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a06c2388e6c0215901673bd3f5328040bb70fc04"}], "stats": {"total": 123, "additions": 108, "deletions": 15}, "files": [{"sha": "93a26185637838b3d0ca225fd59f9780aadba5e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -1,3 +1,10 @@\n+2016-03-28  James Bowman  <james.bowman@ftdichip.com>\n+\n+\t* config/ft32/ft32.opt (mnodiv): New.\n+\t* config/ft32/ft32.md (*divsi3, *modsi3): Qualify with\n+\tTARGET_NODIV.\n+\t* doc/invoke.texi (FT32 Options -mnodiv): New.\n+\n 2016-03-28  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t PR target/70406"}, {"sha": "35b38a8896fe57348cd308a511d300a6bc16b3d9", "filename": "gcc/config/ft32/ft32.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/gcc%2Fconfig%2Fft32%2Fft32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/gcc%2Fconfig%2Fft32%2Fft32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fft32%2Fft32.md?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -101,31 +101,31 @@\n           (div:SI\n            (match_operand:SI 1 \"register_operand\" \"r,r\")\n            (match_operand:SI 2 \"ft32_rimm_operand\" \"r,KA\")))]\n-  \"\"\n+  \"!TARGET_NODIV\"\n   \"div.l  %0,%1,%2\")\n \n (define_insn \"modsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n           (mod:SI\n            (match_operand:SI 1 \"register_operand\" \"r,r\")\n            (match_operand:SI 2 \"ft32_rimm_operand\" \"r,KA\")))]\n-  \"\"\n+  \"!TARGET_NODIV\"\n   \"mod.l  %0,%1,%2\")\n \n (define_insn \"udivsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n           (udiv:SI\n            (match_operand:SI 1 \"register_operand\" \"r,r\")\n            (match_operand:SI 2 \"ft32_rimm_operand\" \"r,KA\")))]\n-  \"\"\n+  \"!TARGET_NODIV\"\n   \"udiv.l %0,%1,%2\")\n \n (define_insn \"umodsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n           (umod:SI\n            (match_operand:SI 1 \"register_operand\" \"r,r\")\n            (match_operand:SI 2 \"register_operand\" \"r,KA\")))]\n-  \"\"\n+  \"!TARGET_NODIV\"\n   \"umod.l %0,%1,%2\")\n \n (define_insn \"extvsi\""}, {"sha": "20054a20b3c518a9a53575896268648193e6a197", "filename": "gcc/config/ft32/ft32.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/gcc%2Fconfig%2Fft32%2Fft32.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/gcc%2Fconfig%2Fft32%2Fft32.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fft32%2Fft32.opt?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -25,3 +25,7 @@ target the software simulator.\n mlra\n Target Report Var(ft32_lra_flag) Init(0) Save\n Use LRA instead of reload.\n+\n+mnodiv\n+Target Report Mask(NODIV)\n+Avoid use of the DIV and MOD instructions"}, {"sha": "ed1ad6214b276176113e55f6499478466eecd60c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -712,7 +712,7 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-msmall-model -mno-lsim}\n \n @emph{FT32 Options}\n-@gccoptlist{-msim -mlra}\n+@gccoptlist{-msim -mlra -mnodiv}\n \n @emph{FRV Options}\n @gccoptlist{-mgpr-32  -mgpr-64  -mfpr-32  -mfpr-64 @gol\n@@ -15827,6 +15827,10 @@ I/O functions are needed.\n Enable Local Register Allocation.  This is still experimental for FT32,\n so by default the compiler uses standard reload.\n \n+@item -mnodiv\n+@opindex mnodiv\n+Do not use div and mod instructions.\n+\n @end table\n \n @node FRV Options"}, {"sha": "7c761b0351dc8ebd5ff4f757db590fe36e4c7a38", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -1,3 +1,7 @@\n+2016-03-28  James Bowman  <james.bowman@ftdichip.com>\n+\n+        * libgcc/config/ft32/lib1funcs.S (*divsi3, *modsi3): New.\n+\n 2016-03-22  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR libgcc/70363"}, {"sha": "a6b04789edf79fa328de059ca8c472534f63c0fb", "filename": "libgcc/config/ft32/lib1funcs.S", "status": "modified", "additions": 80, "deletions": 10, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/libgcc%2Fconfig%2Fft32%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/libgcc%2Fconfig%2Fft32%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fft32%2Flib1funcs.S?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -25,8 +25,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # for implementation details of all except division which is detailed below\n #\n \n+#ifdef L_fp_tools\n // .global __cmpsf2_\n-\n nan:            .long 0x7FFFFFFF    # also abs mask\n inf:            .long 0x7F800000\n sign_mask:      .long 0x80000000\n@@ -37,6 +37,14 @@ smallest_norm:  .long 0x00800000    # implicit bit\n high_FF:        .long 0xFF000000\n high_uint:      .long 0xFFFFFFFF\n \n+ntz_table:\n+    .byte   32,0,1,12,2,6,0,13,3,0,7,0,0,0,0,14\n+    .byte   10,4,0,0,8,0,0,25,0,0,0,0,0,21,27,15\n+    .byte   31,11,5,0,0,0,0,0,9,0,0,24,0,0,20,26\n+    .byte   30,0,0,0,0,23,0,19,29,0,22,18,28,17,16,0\n+\n+#endif\n+\n # Supply a few 'missing' instructions\n \n # not\n@@ -87,12 +95,6 @@ high_uint:      .long 0xFFFFFFFF\n     lpmi.b  \\x, \\x, 0\n .endm\n \n-ntz_table:\n-    .byte   32,0,1,12,2,6,0,13,3,0,7,0,0,0,0,14\n-    .byte   10,4,0,0,8,0,0,25,0,0,0,0,0,21,27,15\n-    .byte   31,11,5,0,0,0,0,0,9,0,0,24,0,0,20,26\n-    .byte   30,0,0,0,0,23,0,19,29,0,22,18,28,17,16,0\n-\n # calculate leading zero count\n .macro      nlz x, scr\n     flip    \\x, \\x, 31\n@@ -503,6 +505,9 @@ mul_z0:\n ## for implementation details\n \n \n+\n+\n+#ifdef  L_divsf3\n dc_1: .long             0xffffe7d7\n dc_2: .long             0xffffffe8\n dc_3: .long             0xffbad86f\n@@ -517,9 +522,6 @@ dc_11: .long            0x0452b1bf\n dc_12: .long            0xFFFFFFC0\n spec_val_test:  .long   0x7F7FFFFF\n \n-\n-\n-#ifdef  L_divsf3\n .global __divsf3\n __divsf3:\n     push    $r13\n@@ -869,6 +871,7 @@ float_not_zero2:\n     return\n #endif\n \n+#if 0\n ##########################################################################\n ##########################################################################\n ## float compare\n@@ -913,7 +916,74 @@ cmp_is_gt:\n cmp_is_eq:\n     ldk     $r0, 0\n     return\n+#endif\n \n+#ifdef  L_udivsi3\n+.global __udivsi3\n+__udivsi3:\n+\t# $r0 is dividend\n+\t# $r1 is divisor\n+\tldk\t$r2,0\n+\tpush\t$r28\n+\tldk\t$r28,-32\n+0:\n+\tlshr\t$r3,$r0,31\t# Shift $r2:$r0 left one\n+\tashl\t$r0,$r0,1\n+\tashl\t$r2,$r2,1\n+\tor\t$r2,$r2,$r3\n+\tcmp\t$r2,$r1\n+\tjmpc\tb,1f\n+2:\n+\tsub\t$r2,$r2,$r1\n+\tadd\t$r0,$r0,1\n+1:\n+\tadd\t$r28,$r28,1\n+\tjmpx\t31,$r28,1,0b\n+\tpop\t$r28\n+\t# $r0: quotient\n+\t# $r2: remainder\n+\treturn\n+#endif\n \n+#ifdef\tL_umodsi3\n+.global\t__umodsi3\n+__umodsi3:\n+\tcall\t__udivsi3\n+\tmove\t$r0,$r2\n+\treturn\n+#endif\n \n+#ifdef\tL_divsi3\n+.global\t__divsi3\n+__divsi3:\n+\txor\t$r5,$r0,$r1\t# $r5 is sign of result\n+\tashr\t$r2,$r0,31\t# $r0 = abs($r0)\n+\txor\t$r0,$r0,$r2\n+\tsub\t$r0,$r0,$r2\n+\tashr\t$r2,$r1,31\t# $r1 = abs($r1)\n+\txor\t$r1,$r1,$r2\n+\tsub\t$r1,$r1,$r2\n+\tcall\t__udivsi3\n+\tashr\t$r5,$r5,31\n+\txor\t$r0,$r0,$r5\n+\tsub\t$r0,$r0,$r5\n+\treturn\n+\t\n+#endif\n \n+#ifdef\tL_modsi3\n+.global\t__modsi3\n+__modsi3:\n+\tmove\t$r5,$r0\t\t# $r5 is sign of result\n+\tashr\t$r2,$r0,31\t# $r0 = abs($r0)\n+\txor\t$r0,$r0,$r2\n+\tsub\t$r0,$r0,$r2\n+\tashr\t$r2,$r1,31\t# $r1 = abs($r1)\n+\txor\t$r1,$r1,$r2\n+\tsub\t$r1,$r1,$r2\n+\tcall\t__umodsi3\n+\tashr\t$r5,$r5,31\n+\txor\t$r0,$r0,$r5\n+\tsub\t$r0,$r0,$r5\n+\treturn\n+#endif"}, {"sha": "33f26dbdc7774a3a9a482385a2b38d868cdab770", "filename": "libgcc/config/ft32/t-ft32", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc2e89953683df032f15d65845eb2d287f646423/libgcc%2Fconfig%2Fft32%2Ft-ft32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc2e89953683df032f15d65845eb2d287f646423/libgcc%2Fconfig%2Fft32%2Ft-ft32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fft32%2Ft-ft32?ref=dc2e89953683df032f15d65845eb2d287f646423", "patch": "@@ -1,3 +1,7 @@\n+LIB1ASMSRC = ft32/lib1funcs.S\n+LIB1ASMFUNCS = \\\n+  _udivsi3 _divsi3 _umodsi3 _modsi3\n+\n LIB2ADD = $(srcdir)/config/ft32/epilog.S $(srcdir)/config/ft32/prolog.S\n \n crti-hw.o: $(srcdir)/config/ft32/crti-hw.S"}]}