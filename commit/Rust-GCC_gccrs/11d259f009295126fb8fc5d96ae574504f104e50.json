{"sha": "11d259f009295126fb8fc5d96ae574504f104e50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkMjU5ZjAwOTI5NTEyNmZiOGZjNWQ5NmFlNTc0NTA0ZjEwNGU1MA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-17T18:18:41Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-17T18:18:41Z"}, "message": "v850-protos.h (print_operand): Delete.\n\n\t* v850-protos.h (print_operand): Delete.\n\t(print_operand_address): Delete.\n\t* v850.h (PRINT_OPERAND): Delete.\n\t(PRINT_OPERAND_PUNCT_VALID_P): Delete.\n\t(PRINT_OPERAND_ADDRESS): Delete.\n\t* v850.c (print_operand_address): Rename to...\n\t(v850_print_operand_address): ...this.  Make static. Call\n\tv850_print_operand.\n\t(print_operand): Rename to...\n\t(v850_print_operand): ...this.  Make static.  Call\n\tv850_print_operand_address.\n\t(v850_print_operand_punct_valid_p): New function.\n\t(TARGET_PRINT_OPERAND, TARGET_PRINT_OPERAND_ADDRESS): Define.\n\t(TARGET_PRINT_OPERAND_PUNCT_VALID_P): Define.\n\nFrom-SVN: r160943", "tree": {"sha": "1879ba5d58409a24444a95df711448756a483eb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1879ba5d58409a24444a95df711448756a483eb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11d259f009295126fb8fc5d96ae574504f104e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d259f009295126fb8fc5d96ae574504f104e50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d259f009295126fb8fc5d96ae574504f104e50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d259f009295126fb8fc5d96ae574504f104e50/comments", "author": null, "committer": null, "parents": [{"sha": "9e94b957db4fe058101d3c9cc1d62f2c5f763327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e94b957db4fe058101d3c9cc1d62f2c5f763327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e94b957db4fe058101d3c9cc1d62f2c5f763327"}], "stats": {"total": 74, "additions": 46, "deletions": 28}, "files": [{"sha": "32a182a6708409f362975edc1254c0433901daf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11d259f009295126fb8fc5d96ae574504f104e50", "patch": "@@ -1,3 +1,20 @@\n+2010-06-17  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* v850-protos.h (print_operand): Delete.\n+\t(print_operand_address): Delete.\n+\t* v850.h (PRINT_OPERAND): Delete.\n+\t(PRINT_OPERAND_PUNCT_VALID_P): Delete.\n+\t(PRINT_OPERAND_ADDRESS): Delete.\n+\t* v850.c (print_operand_address): Rename to...\n+\t(v850_print_operand_address): ...this.  Make static. Call\n+\tv850_print_operand.\n+\t(print_operand): Rename to...\n+\t(v850_print_operand): ...this.  Make static.  Call\n+\tv850_print_operand_address.\n+\t(v850_print_operand_punct_valid_p): New function.\n+\t(TARGET_PRINT_OPERAND, TARGET_PRINT_OPERAND_ADDRESS): Define.\n+\t(TARGET_PRINT_OPERAND_PUNCT_VALID_P): Define.\n+\n 2010-06-17  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/sh/sh-protos.h (print_operand): Delete."}, {"sha": "eadcc0a7637a164ab2a785030cb3ae49e4b6288c", "filename": "gcc/config/v850/v850-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-protos.h?ref=11d259f009295126fb8fc5d96ae574504f104e50", "patch": "@@ -35,8 +35,6 @@ extern void   v850_init_expanders           (void);\n #ifdef RTX_CODE\n extern int    v850_output_addr_const_extra  (FILE *, rtx);\n extern rtx    v850_return_addr              (int);\n-extern void   print_operand                 (FILE *, rtx, int );\n-extern void   print_operand_address         (FILE *, rtx);\n extern const char *output_move_single       (rtx *);\n extern void   notice_update_cc              (rtx, rtx);\n extern char * construct_save_jarl           (rtx);"}, {"sha": "28b4c87a2e4b75e5c1d7f1aff619c9f9e52cd6e9", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=11d259f009295126fb8fc5d96ae574504f104e50", "patch": "@@ -75,6 +75,9 @@ static int v850_arg_partial_bytes (CUMULATIVE_ARGS *, enum machine_mode,\n static bool v850_can_eliminate       (const int, const int);\n static void v850_asm_trampoline_template (FILE *);\n static void v850_trampoline_init (rtx, tree, rtx);\n+static void v850_print_operand (FILE *, rtx, int);\n+static void v850_print_operand_address (FILE *, rtx);\n+static bool v850_print_operand_punct_valid_p (unsigned char code);\n \n /* Information about the various small memory areas.  */\n struct small_memory_info small_memory[ (int)SMALL_MEMORY_max ] =\n@@ -124,6 +127,13 @@ static const struct attribute_spec v850_attribute_table[] =\n #undef TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.hword\\t\"\n \n+#undef TARGET_PRINT_OPERAND\n+#define TARGET_PRINT_OPERAND v850_print_operand\n+#undef TARGET_PRINT_OPERAND_ADDRESS\n+#define TARGET_PRINT_OPERAND_ADDRESS v850_print_operand_address\n+#undef TARGET_PRINT_OPERAND_PUNCT_VALID_P\n+#define TARGET_PRINT_OPERAND_PUNCT_VALID_P v850_print_operand_punct_valid_p\n+\n #undef TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE v850_attribute_table\n \n@@ -514,8 +524,8 @@ v850_rtx_costs (rtx x,\n /* Print operand X using operand code CODE to assembly language output file\n    FILE.  */\n \n-void\n-print_operand (FILE * file, rtx x, int code)\n+static void\n+v850_print_operand (FILE * file, rtx x, int code)\n {\n   HOST_WIDE_INT high, low;\n \n@@ -659,7 +669,7 @@ print_operand (FILE * file, rtx x, int code)\n \t  break;\n \tcase MEM:\n \t  x = XEXP (adjust_address (x, SImode, 4), 0);\n-\t  print_operand_address (file, x);\n+\t  v850_print_operand_address (file, x);\n \t  if (GET_CODE (x) == CONST_INT)\n \t    fprintf (file, \"[r0]\");\n \t  break;\n@@ -730,7 +740,7 @@ print_operand (FILE * file, rtx x, int code)\n \tcase CONST:\n \tcase LABEL_REF:\n \tcase CODE_LABEL:\n-\t  print_operand_address (file, x);\n+\t  v850_print_operand_address (file, x);\n \t  break;\n \tdefault:\n \t  gcc_unreachable ();\n@@ -743,24 +753,24 @@ print_operand (FILE * file, rtx x, int code)\n \f\n /* Output assembly language output for the address ADDR to FILE.  */\n \n-void\n-print_operand_address (FILE * file, rtx addr)\n+static void\n+v850_print_operand_address (FILE * file, rtx addr)\n {\n   switch (GET_CODE (addr))\n     {\n     case REG:\n       fprintf (file, \"0[\");\n-      print_operand (file, addr, 0);\n+      v850_print_operand (file, addr, 0);\n       fprintf (file, \"]\");\n       break;\n     case LO_SUM:\n       if (GET_CODE (XEXP (addr, 0)) == REG)\n \t{\n \t  /* reg,foo */\n \t  fprintf (file, \"lo(\");\n-\t  print_operand (file, XEXP (addr, 1), 0);\n+\t  v850_print_operand (file, XEXP (addr, 1), 0);\n \t  fprintf (file, \")[\");\n-\t  print_operand (file, XEXP (addr, 0), 0);\n+\t  v850_print_operand (file, XEXP (addr, 0), 0);\n \t  fprintf (file, \"]\");\n \t}\n       break;\n@@ -769,16 +779,16 @@ print_operand_address (FILE * file, rtx addr)\n \t  || GET_CODE (XEXP (addr, 0)) == SUBREG)\n \t{\n \t  /* reg,foo */\n-\t  print_operand (file, XEXP (addr, 1), 0);\n+\t  v850_print_operand (file, XEXP (addr, 1), 0);\n \t  fprintf (file, \"[\");\n-\t  print_operand (file, XEXP (addr, 0), 0);\n+\t  v850_print_operand (file, XEXP (addr, 0), 0);\n \t  fprintf (file, \"]\");\n \t}\n       else\n \t{\n-\t  print_operand (file, XEXP (addr, 0), 0);\n+\t  v850_print_operand (file, XEXP (addr, 0), 0);\n \t  fprintf (file, \"+\");\n-\t  print_operand (file, XEXP (addr, 1), 0);\n+\t  v850_print_operand (file, XEXP (addr, 1), 0);\n \t}\n       break;\n     case SYMBOL_REF:\n@@ -847,6 +857,12 @@ print_operand_address (FILE * file, rtx addr)\n     }\n }\n \n+static bool\n+v850_print_operand_punct_valid_p (unsigned char code)\n+{\n+  return code == '.';\n+}\n+\n /* When assemble_integer is used to emit the offsets for a switch\n    table it can encounter (TRUNCATE:HI (MINUS:SI (LABEL_REF:SI) (LABEL_REF:SI))).\n    output_addr_const will normally barf at this, but it is OK to omit"}, {"sha": "4c4c270db71cb070fe0774b842babf403c2221e8", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d259f009295126fb8fc5d96ae574504f104e50/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=11d259f009295126fb8fc5d96ae574504f104e50", "patch": "@@ -915,19 +915,6 @@ typedef enum\n   { \"r30\",\t30 },\t\t\t\t\t\t\t\\\n   { \"lp\",\t31} }\n \n-/* Print an instruction operand X on file FILE.\n-   look in v850.c for details */\n-\n-#define PRINT_OPERAND(FILE, X, CODE)  print_operand (FILE, X, CODE)\n-\n-#define PRINT_OPERAND_PUNCT_VALID_P(CODE) \\\n-  ((CODE) == '.')\n-\n-/* Print a memory operand whose address is X, on file FILE.\n-   This uses a function in output-vax.c.  */\n-\n-#define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)\n-\n #define ASM_OUTPUT_REG_PUSH(FILE,REGNO)\n #define ASM_OUTPUT_REG_POP(FILE,REGNO)\n "}]}