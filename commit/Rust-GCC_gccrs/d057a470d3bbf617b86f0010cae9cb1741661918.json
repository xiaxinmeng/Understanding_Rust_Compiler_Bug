{"sha": "d057a470d3bbf617b86f0010cae9cb1741661918", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1N2E0NzBkM2JiZjYxN2I4NmYwMDEwY2FlOWNiMTc0MTY2MTkxOA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-08-12T13:41:22Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-08-12T13:41:22Z"}, "message": "[NDS32] Add new option: -msched-prolog-epilog\n\ngcc/\n\t* config/nds32/nds32.c (nds32_expand_prologue, nds32_expand_epilogue):\n\tSupport -msched-prolog-epilog option.\n\t* config/nds32/nds32.opt (msched-prolog-epilog): New option.\n\nFrom-SVN: r263496", "tree": {"sha": "16cdd65673f7db27b38450ee4e12dc842d31a2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16cdd65673f7db27b38450ee4e12dc842d31a2d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d057a470d3bbf617b86f0010cae9cb1741661918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d057a470d3bbf617b86f0010cae9cb1741661918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d057a470d3bbf617b86f0010cae9cb1741661918", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d057a470d3bbf617b86f0010cae9cb1741661918/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68acadb1ff292f5f62cdeb5a17dcb92613087727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68acadb1ff292f5f62cdeb5a17dcb92613087727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68acadb1ff292f5f62cdeb5a17dcb92613087727"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "02f007bcb97e8c16305ecec6002084d015787d36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d057a470d3bbf617b86f0010cae9cb1741661918/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d057a470d3bbf617b86f0010cae9cb1741661918/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d057a470d3bbf617b86f0010cae9cb1741661918", "patch": "@@ -1,3 +1,9 @@\n+2018-08-12  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (nds32_expand_prologue, nds32_expand_epilogue):\n+\tSupport -msched-prolog-epilog option.\n+\t* config/nds32/nds32.opt (msched-prolog-epilog): New option.\n+\n 2018-08-12  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* common/config/nds32/nds32-common.c"}, {"sha": "d58be37ee9cf14a14469d75a9d7ee43bd75f7ac2", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d057a470d3bbf617b86f0010cae9cb1741661918/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d057a470d3bbf617b86f0010cae9cb1741661918/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=d057a470d3bbf617b86f0010cae9cb1741661918", "patch": "@@ -4763,9 +4763,11 @@ nds32_expand_prologue (void)\n   if (flag_pic && df_regs_ever_live_p (PIC_OFFSET_TABLE_REGNUM))\n     nds32_emit_load_gp ();\n \n-  /* Prevent the instruction scheduler from\n-     moving instructions across the boundary.  */\n-  emit_insn (gen_blockage ());\n+  /* If user applies -mno-sched-prolog-epilog option,\n+     we need to prevent instructions of function body from being\n+     scheduled with stack adjustment in prologue.  */\n+  if (!flag_sched_prolog_epilog)\n+    emit_insn (gen_blockage ());\n }\n \n /* Function for normal multiple pop epilogue.  */\n@@ -4779,9 +4781,11 @@ nds32_expand_epilogue (bool sibcall_p)\n      The result will be in cfun->machine.  */\n   nds32_compute_stack_frame ();\n \n-  /* Prevent the instruction scheduler from\n-     moving instructions across the boundary.  */\n-  emit_insn (gen_blockage ());\n+  /* If user applies -mno-sched-prolog-epilog option,\n+     we need to prevent instructions of function body from being\n+     scheduled with stack adjustment in epilogue.  */\n+  if (!flag_sched_prolog_epilog)\n+    emit_insn (gen_blockage ());\n \n   /* If the function is 'naked', we do not have to generate\n      epilogue code fragment BUT 'ret' instruction."}, {"sha": "0e50c991aba13b6c20c2ddde529ebe219aff85dd", "filename": "gcc/config/nds32/nds32.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d057a470d3bbf617b86f0010cae9cb1741661918/gcc%2Fconfig%2Fnds32%2Fnds32.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d057a470d3bbf617b86f0010cae9cb1741661918/gcc%2Fconfig%2Fnds32%2Fnds32.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.opt?ref=d057a470d3bbf617b86f0010cae9cb1741661918", "patch": "@@ -444,6 +444,10 @@ mforce-no-ext-dsp\n Target Undocumented Report Mask(FORCE_NO_EXT_DSP)\n Force disable hardware loop, even use -mext-dsp.\n \n+msched-prolog-epilog\n+Target Var(flag_sched_prolog_epilog) Init(0)\n+Permit scheduling of a function's prologue and epilogue sequence.\n+\n mret-in-naked-func\n Target Var(flag_ret_in_naked_func) Init(1)\n Generate return instruction in naked function."}]}