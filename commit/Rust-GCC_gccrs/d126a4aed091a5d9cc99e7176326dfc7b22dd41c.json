{"sha": "d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyNmE0YWVkMDkxYTVkOWNjOTllNzE3NjMyNmRmYzdiMjJkZDQxYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-01-14T19:55:59Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-01-14T19:55:59Z"}, "message": "aarch64-protos.h (tune_params): Add issue_rate.\n\n2014-01-14  Andrew Pinski  <apinski@cavium.com>\n\n\t* config/aarch64/aarch64-protos.h (tune_params): Add issue_rate.\n\t* config/aarch64/aarch64.c (generic_tunings): Add issue rate of 2.\n\t(cortexa53_tunings): Likewise.\n\t(aarch64_sched_issue_rate): New function.\n\t(TARGET_SCHED_ISSUE_RATE): Define.\n\nFrom-SVN: r206609", "tree": {"sha": "dc58617ebfff8975b70948f53f73bb94418940f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc58617ebfff8975b70948f53f73bb94418940f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc6875820cfc14f916bdfbe53aaf31f845dedfb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6875820cfc14f916bdfbe53aaf31f845dedfb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6875820cfc14f916bdfbe53aaf31f845dedfb5"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "bdee83f64209cbee7d70d98ff8aba6ff8b9c37dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "patch": "@@ -1,3 +1,11 @@\n+2014-01-14  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64-protos.h (tune_params): Add issue_rate.\n+\t* config/aarch64/aarch64.c (generic_tunings): Add issue rate of 2.\n+\t(cortexa53_tunings): Likewise.\n+\t(aarch64_sched_issue_rate): New function.\n+\t(TARGET_SCHED_ISSUE_RATE): Define.\n+\n 2014-01-14  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira-costs.c (find_costs_and_classes): Add missed"}, {"sha": "c5ac48b8cb1a7bdf58fd140e3f50e340545b20ed", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "patch": "@@ -156,6 +156,7 @@ struct tune_params\n   const struct cpu_regmove_cost *const regmove_cost;\n   const struct cpu_vector_cost *const vec_costs;\n   const int memmov_cost;\n+  const int issue_rate;\n };\n \n HOST_WIDE_INT aarch64_initial_elimination_offset (unsigned, unsigned);"}, {"sha": "62c659a18b27c2e81089d5e973b3997cbbf50e1e", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d126a4aed091a5d9cc99e7176326dfc7b22dd41c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d126a4aed091a5d9cc99e7176326dfc7b22dd41c", "patch": "@@ -221,7 +221,8 @@ static const struct tune_params generic_tunings =\n   &generic_addrcost_table,\n   &generic_regmove_cost,\n   &generic_vector_cost,\n-  NAMED_PARAM (memmov_cost, 4)\n+  NAMED_PARAM (memmov_cost, 4),\n+  NAMED_PARAM (issue_rate, 2)\n };\n \n static const struct tune_params cortexa53_tunings =\n@@ -230,7 +231,8 @@ static const struct tune_params cortexa53_tunings =\n   &generic_addrcost_table,\n   &generic_regmove_cost,\n   &generic_vector_cost,\n-  NAMED_PARAM (memmov_cost, 4)\n+  NAMED_PARAM (memmov_cost, 4),\n+  NAMED_PARAM (issue_rate, 2)\n };\n \n /* A processor implementing AArch64.  */\n@@ -4895,6 +4897,13 @@ aarch64_memory_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n   return aarch64_tune_params->memmov_cost;\n }\n \n+/* Return the number of instructions that can be issued per cycle.  */\n+static int\n+aarch64_sched_issue_rate (void)\n+{\n+  return aarch64_tune_params->issue_rate;\n+}\n+\n /* Vectorizer cost model target hooks.  */\n \n /* Implement targetm.vectorize.builtin_vectorization_cost.  */\n@@ -8411,6 +8420,9 @@ aarch64_vectorize_vec_perm_const_ok (enum machine_mode vmode,\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS aarch64_rtx_costs\n \n+#undef TARGET_SCHED_ISSUE_RATE\n+#define TARGET_SCHED_ISSUE_RATE aarch64_sched_issue_rate\n+\n #undef TARGET_TRAMPOLINE_INIT\n #define TARGET_TRAMPOLINE_INIT aarch64_trampoline_init\n "}]}