{"sha": "cef58349a086b8294d14514c37fbacdf44395d18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VmNTgzNDlhMDg2YjgyOTRkMTQ1MTRjMzdmYmFjZGY0NDM5NWQxOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-08-03T00:35:14Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-08-03T00:35:14Z"}, "message": "[RS6000] cost SLOW_UNALIGNED_ACCESS\n\n\t* config/rs6000/rs6000.c (rs6000_rtx_costs): Make unaligned mem\n\tcost more.\n\nFrom-SVN: r239012", "tree": {"sha": "fe32ca16242d64026f5b1384c7e000a4c3057333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe32ca16242d64026f5b1384c7e000a4c3057333"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cef58349a086b8294d14514c37fbacdf44395d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef58349a086b8294d14514c37fbacdf44395d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cef58349a086b8294d14514c37fbacdf44395d18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef58349a086b8294d14514c37fbacdf44395d18/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1f0a70a1284af293bbd95e31cdbeb8ac6db9885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f0a70a1284af293bbd95e31cdbeb8ac6db9885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f0a70a1284af293bbd95e31cdbeb8ac6db9885"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "e8de5b9f605e06a21cb457be1d494991c5a6a2ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef58349a086b8294d14514c37fbacdf44395d18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef58349a086b8294d14514c37fbacdf44395d18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cef58349a086b8294d14514c37fbacdf44395d18", "patch": "@@ -1,3 +1,8 @@\n+2016-08-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_rtx_costs): Make unaligned mem\n+\tcost more.\n+\n 2016-08-03  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.md (fix_trunc<mode>si2): Force source operand"}, {"sha": "2ae3e7e6796e372119e5c93af96a9c79bea4d299", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef58349a086b8294d14514c37fbacdf44395d18/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef58349a086b8294d14514c37fbacdf44395d18/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cef58349a086b8294d14514c37fbacdf44395d18", "patch": "@@ -34336,11 +34336,16 @@ rs6000_rtx_costs (rtx x, machine_mode mode, int outer_code,\n     case CONST:\n     case HIGH:\n     case SYMBOL_REF:\n+      *total = !speed ? COSTS_N_INSNS (1) + 1 : COSTS_N_INSNS (2);\n+      return true;\n+\n     case MEM:\n       /* When optimizing for size, MEM should be slightly more expensive\n \t than generating address, e.g., (plus (reg) (const)).\n \t L1 cache latency is about two instructions.  */\n       *total = !speed ? COSTS_N_INSNS (1) + 1 : COSTS_N_INSNS (2);\n+      if (SLOW_UNALIGNED_ACCESS (mode, MEM_ALIGN (x)))\n+\t*total += COSTS_N_INSNS (100);\n       return true;\n \n     case LABEL_REF:"}]}