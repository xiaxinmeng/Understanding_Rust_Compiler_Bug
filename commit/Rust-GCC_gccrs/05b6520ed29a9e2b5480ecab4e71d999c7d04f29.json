{"sha": "05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViNjUyMGVkMjlhOWUyYjU0ODBlY2FiNGU3MWQ5OTljN2QwNGYyOQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-30T09:03:33Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-30T10:16:11Z"}, "message": "d: Merge upstream dmd 934df6f8c, druntime 7bdd83d7\n\nCorrects a previous change made to the SPARC stdc bindings, and\nbackports PPC-related fixes.  The library and language testsuite now\npasses fully on powerpc64le-linux-gnu.\n\nFixes: PR d/90719\nFixes: PR d/94825\n\nReviewed-on: https://github.com/dlang/dmd/pull/11079\n\t     https://github.com/dlang/druntime/pull/3078\n\t     https://github.com/dlang/druntime/pull/3083\n\nlibphobos/ChangeLog:\n\n\tPR d/94825\n\t* libdruntime/Makefile.am (DRUNTIME_SOURCES_CONFIGURED): Remove\n\tconfig/powerpc/switchcontext.S\n\t* libdruntime/Makefile.in: Regenerate.\n\t* libdruntime/config/powerpc/callwithstack.S: Remove.\n\t* libdruntime/config/powerpc/switchcontext.S: Fix symbol name of\n\tfiber_switchContext.\n\t* libdruntime/core/thread.d: Disable fiber migration tests on PPC.\n\t* testsuite/libphobos.thread/fiber_guard_page.d: Set guardPageSize\n\tsame as stackSize.", "tree": {"sha": "95b6e674c59007d725360dedb8d12d3a48e48ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95b6e674c59007d725360dedb8d12d3a48e48ae4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e33a1eae25b8a8744db2fea72e739d64799ca61f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33a1eae25b8a8744db2fea72e739d64799ca61f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33a1eae25b8a8744db2fea72e739d64799ca61f"}], "stats": {"total": 371, "additions": 101, "deletions": 270}, "files": [{"sha": "82cb6128770a096767d9000be2658c5de172e2a3", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1,4 +1,4 @@\n-06160ccaed7af7955d169024f417c43beb7a8f9f\n+934df6f8cf848071dd0312098975f0c13873e01c\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "8c6b083fd30317a88b3fd79825e30a715ec0b8db", "filename": "gcc/testsuite/gdc.test/runnable/arrayop.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Farrayop.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Farrayop.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Farrayop.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.math;\n \n extern(C) int printf(const char*, ...);"}, {"sha": "1b81a9eb7b494fa63549e413627818a9dd3775ae", "filename": "gcc/testsuite/gdc.test/runnable/ctorpowtests.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fctorpowtests.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fctorpowtests.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fctorpowtests.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n int magicVariable()"}, {"sha": "3adaeae61ae5636ce8ecc0d6ddd9b761b7afaaea", "filename": "gcc/testsuite/gdc.test/runnable/template2.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate2.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // original post to the D newsgroup:\n //    http://www.digitalmars.com/pnews/read.php?server=news.digitalmars.com&group=D&artnum=10554&header\n // Test to manipulate 3D vectors, in D!"}, {"sha": "d9256039788cd2e5110413f00598934d3053f02d", "filename": "gcc/testsuite/gdc.test/runnable/testaa2.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa2.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n extern(C) int printf(const char*, ...);"}, {"sha": "c61ad7ca7ed020756ffffc0458fc9f39349bba56", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1,4 +1,4 @@\n-476882795473a884f837bea6da850ac5181868d1\n+7bdd83d7b4bd9fd4cb9ffca0d50babc90b31bfd6\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "1d340a0041cf5fb17825a4da5a8e26f5e610129f", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -81,8 +81,7 @@ if DRUNTIME_CPU_MIPS\n     DRUNTIME_SOURCES_CONFIGURED += config/mips/switchcontext.S\n endif\n if DRUNTIME_CPU_POWERPC\n-    DRUNTIME_SOURCES_CONFIGURED += config/powerpc/callwithstack.S \\\n-\t\t\t\t   config/powerpc/switchcontext.S\n+    DRUNTIME_SOURCES_CONFIGURED += config/powerpc/switchcontext.S\n endif\n if DRUNTIME_CPU_X86\n if DRUNTIME_OS_MINGW"}, {"sha": "3fddbc340de33bb5dd3b8aa7d35d7e204c2c2557", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -123,9 +123,7 @@ target_triplet = @target@\n @DRUNTIME_CPU_AARCH64_TRUE@am__append_11 = config/aarch64/switchcontext.S\n @DRUNTIME_CPU_ARM_TRUE@am__append_12 = config/arm/switchcontext.S\n @DRUNTIME_CPU_MIPS_TRUE@am__append_13 = config/mips/switchcontext.S\n-@DRUNTIME_CPU_POWERPC_TRUE@am__append_14 = config/powerpc/callwithstack.S \\\n-@DRUNTIME_CPU_POWERPC_TRUE@\t\t\t\t   config/powerpc/switchcontext.S\n-\n+@DRUNTIME_CPU_POWERPC_TRUE@am__append_14 = config/powerpc/switchcontext.S\n @DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__append_15 = config/mingw/switchcontext.S\n @DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__append_16 = config/x86/switchcontext.S\n @DRUNTIME_CPU_SYSTEMZ_TRUE@am__append_17 = config/systemz/get_tls_offset.S\n@@ -441,8 +439,7 @@ am__objects_21 = core/sys/solaris/dlfcn.lo core/sys/solaris/elf.lo \\\n @DRUNTIME_CPU_AARCH64_TRUE@am__objects_23 = config/aarch64/libgdruntime_la-switchcontext.lo\n @DRUNTIME_CPU_ARM_TRUE@am__objects_24 = config/arm/libgdruntime_la-switchcontext.lo\n @DRUNTIME_CPU_MIPS_TRUE@am__objects_25 = config/mips/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_POWERPC_TRUE@am__objects_26 = config/powerpc/libgdruntime_la-callwithstack.lo \\\n-@DRUNTIME_CPU_POWERPC_TRUE@\tconfig/powerpc/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_26 = config/powerpc/libgdruntime_la-switchcontext.lo\n @DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_27 = config/mingw/libgdruntime_la-switchcontext.lo\n @DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_28 = config/x86/libgdruntime_la-switchcontext.lo\n @DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_29 = config/systemz/libgdruntime_la-get_tls_offset.lo\n@@ -463,8 +460,7 @@ am__objects_34 = core/stdc/libgdruntime_convenience_la-errno_.lo\n @DRUNTIME_CPU_AARCH64_TRUE@am__objects_35 = config/aarch64/libgdruntime_convenience_la-switchcontext.lo\n @DRUNTIME_CPU_ARM_TRUE@am__objects_36 = config/arm/libgdruntime_convenience_la-switchcontext.lo\n @DRUNTIME_CPU_MIPS_TRUE@am__objects_37 = config/mips/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_POWERPC_TRUE@am__objects_38 = config/powerpc/libgdruntime_convenience_la-callwithstack.lo \\\n-@DRUNTIME_CPU_POWERPC_TRUE@\tconfig/powerpc/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_38 = config/powerpc/libgdruntime_convenience_la-switchcontext.lo\n @DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_39 = config/mingw/libgdruntime_convenience_la-switchcontext.lo\n @DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_40 = config/x86/libgdruntime_convenience_la-switchcontext.lo\n @DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_41 = config/systemz/libgdruntime_convenience_la-get_tls_offset.lo\n@@ -1748,8 +1744,6 @@ config/mips/libgdruntime_la-switchcontext.lo:  \\\n config/powerpc/$(am__dirstamp):\n \t@$(MKDIR_P) config/powerpc\n \t@: > config/powerpc/$(am__dirstamp)\n-config/powerpc/libgdruntime_la-callwithstack.lo:  \\\n-\tconfig/powerpc/$(am__dirstamp)\n config/powerpc/libgdruntime_la-switchcontext.lo:  \\\n \tconfig/powerpc/$(am__dirstamp)\n config/mingw/$(am__dirstamp):\n@@ -1785,8 +1779,6 @@ config/arm/libgdruntime_convenience_la-switchcontext.lo:  \\\n \tconfig/arm/$(am__dirstamp)\n config/mips/libgdruntime_convenience_la-switchcontext.lo:  \\\n \tconfig/mips/$(am__dirstamp)\n-config/powerpc/libgdruntime_convenience_la-callwithstack.lo:  \\\n-\tconfig/powerpc/$(am__dirstamp)\n config/powerpc/libgdruntime_convenience_la-switchcontext.lo:  \\\n \tconfig/powerpc/$(am__dirstamp)\n config/mingw/libgdruntime_convenience_la-switchcontext.lo:  \\\n@@ -1921,9 +1913,6 @@ config/arm/libgdruntime_la-switchcontext.lo: config/arm/switchcontext.S\n config/mips/libgdruntime_la-switchcontext.lo: config/mips/switchcontext.S\n \t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/mips/libgdruntime_la-switchcontext.lo `test -f 'config/mips/switchcontext.S' || echo '$(srcdir)/'`config/mips/switchcontext.S\n \n-config/powerpc/libgdruntime_la-callwithstack.lo: config/powerpc/callwithstack.S\n-\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc/libgdruntime_la-callwithstack.lo `test -f 'config/powerpc/callwithstack.S' || echo '$(srcdir)/'`config/powerpc/callwithstack.S\n-\n config/powerpc/libgdruntime_la-switchcontext.lo: config/powerpc/switchcontext.S\n \t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc/libgdruntime_la-switchcontext.lo `test -f 'config/powerpc/switchcontext.S' || echo '$(srcdir)/'`config/powerpc/switchcontext.S\n \n@@ -1948,9 +1937,6 @@ config/arm/libgdruntime_convenience_la-switchcontext.lo: config/arm/switchcontex\n config/mips/libgdruntime_convenience_la-switchcontext.lo: config/mips/switchcontext.S\n \t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/mips/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/mips/switchcontext.S' || echo '$(srcdir)/'`config/mips/switchcontext.S\n \n-config/powerpc/libgdruntime_convenience_la-callwithstack.lo: config/powerpc/callwithstack.S\n-\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc/libgdruntime_convenience_la-callwithstack.lo `test -f 'config/powerpc/callwithstack.S' || echo '$(srcdir)/'`config/powerpc/callwithstack.S\n-\n config/powerpc/libgdruntime_convenience_la-switchcontext.lo: config/powerpc/switchcontext.S\n \t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/powerpc/switchcontext.S' || echo '$(srcdir)/'`config/powerpc/switchcontext.S\n "}, {"sha": "0752c5d0322c4bfac402595e468970f675be1af5", "filename": "libphobos/libdruntime/config/powerpc/callwithstack.S", "status": "removed", "additions": 0, "deletions": 172, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33a1eae25b8a8744db2fea72e739d64799ca61f/libphobos%2Flibdruntime%2Fconfig%2Fpowerpc%2Fcallwithstack.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33a1eae25b8a8744db2fea72e739d64799ca61f/libphobos%2Flibdruntime%2Fconfig%2Fpowerpc%2Fcallwithstack.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fconfig%2Fpowerpc%2Fcallwithstack.S?ref=e33a1eae25b8a8744db2fea72e739d64799ca61f", "patch": "@@ -1,172 +0,0 @@\n-/* PowerPC64 support code for fibers and multithreading.\n-   Copyright (C) 2019-2020 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"../common/threadasm.S\"\n-\n-#if defined(__PPC64__)\n-\n-#if defined(_CALL_ELF) && _CALL_ELF == 2\n-#define USE_ABI_2\n-#define LINKAGE_SZ   32\n-#define LR_OFS       16\n-#define TOC_OFS      24\n-#define GPR_OFS      32\n-#define STACK_SZ     (LINKAGE_SZ + 26*8)\n-#define OFS_R3_R10   GPR_OFS\n-#define OFS_R14_R31  (GPR_OFS+8*8)\n-#else\n-#define LINKAGE_SZ   48\n-#define LR_OFS       16\n-#define TOC_OFS      40\n-#define GPR_OFS      112\n-#define STACK_SZ     (LINKAGE_SZ + 8*8 + 18*8)\n-#define OFS_R3_R10   (STACK_SZ+LINKAGE_SZ)\n-#define OFS_R14_R31  GPR_OFS\n-#endif\n-\n-    .text\n-#if defined( USE_ABI_2 )\n-    .abiversion 2\n-#endif\n-    .globl  _D4core6thread18callWithStackShellFNbMDFNbPvZvZv\n-    .align  2\n-    .type   _D4core6thread18callWithStackShellFNbMDFNbPvZvZv,@function\n-#if defined( USE_ABI_2 )\n-    .section .text._D4core6thread18callWithStackShellFNbMDFNbPvZvZv,\"a\",@progbits\n-#else\n-    .section .opd,\"aw\",@progbits\n-#endif\n-_D4core6thread18callWithStackShellFNbMDFNbPvZvZv:\n-#if !defined( USE_ABI_2 )\n-    .align  3\n-    .quad .L._D4core6thread18callWithStackShellFNbMDFNbPvZvZv\n-    .quad .TOC.@tocbase\n-    .quad 0\n-#endif\n-    .text\n-/*\n- * Called with:\n- * r3: pointer context\n- * r4: pointer to function\n- */\n-.L._D4core6thread18callWithStackShellFNbMDFNbPvZvZv:\n-    .cfi_startproc\n-    stdu    1, -STACK_SZ(1)\n-    mflr    0\n-    std     0, LR_OFS(1)\n-    .cfi_def_cfa_offset 256\n-    .cfi_offset lr, 16\n-\n-    /* Save r14-r31 in general register save area */\n-    std     14, (OFS_R14_R31 + 0 * 8)(1)\n-    std     15, (OFS_R14_R31 + 1 * 8)(1)\n-    std     16, (OFS_R14_R31 + 2 * 8)(1)\n-    std     17, (OFS_R14_R31 + 3 * 8)(1)\n-    std     18, (OFS_R14_R31 + 4 * 8)(1)\n-    std     19, (OFS_R14_R31 + 5 * 8)(1)\n-    std     20, (OFS_R14_R31 + 6 * 8)(1)\n-    std     21, (OFS_R14_R31 + 7 * 8)(1)\n-    std     22, (OFS_R14_R31 + 8 * 8)(1)\n-    std     23, (OFS_R14_R31 + 9 * 8)(1)\n-    std     24, (OFS_R14_R31 + 10 * 8)(1)\n-    std     25, (OFS_R14_R31 + 11 * 8)(1)\n-    std     26, (OFS_R14_R31 + 12 * 8)(1)\n-    std     27, (OFS_R14_R31 + 13 * 8)(1)\n-    std     28, (OFS_R14_R31 + 14 * 8)(1)\n-    std     29, (OFS_R14_R31 + 15 * 8)(1)\n-    std     30, (OFS_R14_R31 + 16 * 8)(1)\n-    std     31, (OFS_R14_R31 + 17 * 8)(1)\n-\n-    /* Save r3-r10 in parameter save area of caller */\n-    std     3, (OFS_R3_R10 + 0 * 8)(1)\n-    std     4, (OFS_R3_R10 + 1 * 8)(1)\n-    std     5, (OFS_R3_R10 + 2 * 8)(1)\n-    std     6, (OFS_R3_R10 + 3 * 8)(1)\n-    std     7, (OFS_R3_R10 + 4 * 8)(1)\n-    std     8, (OFS_R3_R10 + 5 * 8)(1)\n-    std     9, (OFS_R3_R10 + 6 * 8)(1)\n-    std     10, (OFS_R3_R10 + 7 * 8)(1)\n-\n-    /* Save r2 in TOC save area */\n-    std     2, TOC_OFS(1)\n-\n-    /* Do not save r11, r12 and r13. */\n-\n-    /* Call delegate:\n-     * r3: pointer to context\n-     * r4: pointer to stack\n-     */\n-    mr      5, 4\n-    mr      4, 1\n-    ld      6, 0(5)\n-    ld      11, 16(5)\n-    ld      2, 8(5)\n-    mtctr   6\n-    bctrl\n-    nop\n-\n-    /* Restore r2 from TOC save area */\n-    ld      2, TOC_OFS(1)\n-\n-    /* Restore r3-r10 from local variable space */\n-    ld      3, (OFS_R3_R10 + 0 * 8)(1)\n-    ld      4, (OFS_R3_R10 + 1 * 8)(1)\n-    ld      5, (OFS_R3_R10 + 2 * 8)(1)\n-    ld      6, (OFS_R3_R10 + 3 * 8)(1)\n-    ld      7, (OFS_R3_R10 + 4 * 8)(1)\n-    ld      8, (OFS_R3_R10 + 5 * 8)(1)\n-    ld      9, (OFS_R3_R10 + 6 * 8)(1)\n-    ld      10, (OFS_R3_R10 + 7 * 8)(1)\n-\n-    /* Restore r14-r31 from general register save area */\n-    ld      14, (OFS_R14_R31 + 0 * 8)(1)\n-    ld      15, (OFS_R14_R31 + 1 * 8)(1)\n-    ld      16, (OFS_R14_R31 + 2 * 8)(1)\n-    ld      17, (OFS_R14_R31 + 3 * 8)(1)\n-    ld      18, (OFS_R14_R31 + 4 * 8)(1)\n-    ld      19, (OFS_R14_R31 + 5 * 8)(1)\n-    ld      20, (OFS_R14_R31 + 6 * 8)(1)\n-    ld      21, (OFS_R14_R31 + 7 * 8)(1)\n-    ld      22, (OFS_R14_R31 + 8 * 8)(1)\n-    ld      23, (OFS_R14_R31 + 9 * 8)(1)\n-    ld      24, (OFS_R14_R31 + 10 * 8)(1)\n-    ld      25, (OFS_R14_R31 + 11 * 8)(1)\n-    ld      26, (OFS_R14_R31 + 12 * 8)(1)\n-    ld      27, (OFS_R14_R31 + 13 * 8)(1)\n-    ld      28, (OFS_R14_R31 + 14 * 8)(1)\n-    ld      29, (OFS_R14_R31 + 15 * 8)(1)\n-    ld      30, (OFS_R14_R31 + 16 * 8)(1)\n-    ld      31, (OFS_R14_R31 + 17 * 8)(1)\n-\n-    ld      0, LR_OFS(1)\n-    mtlr    0\n-    addi    1, 1, STACK_SZ\n-    blr\n-    .long 0\n-    .quad 0\n-.Lend:\n-    .size _D4core6thread18callWithStackShellFNbMDFNbPvZvZv, .Lend-.L._D4core6thread18callWithStackShellFNbMDFNbPvZvZv\n-    .cfi_endproc\n-\n-#endif /* defined(__PPC64__) */"}, {"sha": "6689217ca072bbd457bf8022b8f01da27c5ad140", "filename": "libphobos/libdruntime/config/powerpc/switchcontext.S", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fconfig%2Fpowerpc%2Fswitchcontext.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fconfig%2Fpowerpc%2Fswitchcontext.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fconfig%2Fpowerpc%2Fswitchcontext.S?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -34,10 +34,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n  *\n  */\n     .text\n-    .globl CSYM(_fiber_switchContext)\n-    .type CSYM(_fiber_switchContext), @function\n+    .globl CSYM(fiber_switchContext)\n+    .type CSYM(fiber_switchContext), @function\n     .align 2\n-CSYM(_fiber_switchContext):\n+CSYM(fiber_switchContext):\n     .cfi_startproc\n     /* Save linkage area */\n     mflr        0\n@@ -149,6 +149,6 @@ CSYM(_fiber_switchContext):\n     /* Return and switch context */\n     blr\n     .cfi_endproc\n-    .size CSYM(_fiber_switchContext),.-CSYM(_fiber_switchContext)\n+    .size CSYM(fiber_switchContext),.-CSYM(fiber_switchContext)\n \n #endif /* !defined(__PPC64__) */"}, {"sha": "8010ad773b848b6c8f8e625bfa06fb3fa76dd57c", "filename": "libphobos/libdruntime/core/internal/convert.d", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fcore%2Finternal%2Fconvert.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fcore%2Finternal%2Fconvert.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Finternal%2Fconvert.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -84,7 +84,10 @@ const(ubyte)[] toUbyte(T)(const ref T val) if (is(Unqual!T == float) || is(Unqua\n             ubyte[] buff = ctfe_alloc(T.sizeof);\n             enum msbSize = double.sizeof;\n \n-            double hi = toPrec!double(val);\n+            static if (is(Unqual!T == ireal))\n+                double hi = toPrec!double(val.im);\n+            else\n+                double hi = toPrec!double(val);\n             buff[0 .. msbSize] = toUbyte(hi)[];\n \n             if (val is cast(T)0.0 || val is cast(T)-0.0 ||\n@@ -98,7 +101,10 @@ const(ubyte)[] toUbyte(T)(const ref T val) if (is(Unqual!T == float) || is(Unqua\n             }\n             else\n             {\n-                double low = toPrec!double(val - hi);\n+                static if (is(Unqual!T == ireal))\n+                    double low = toPrec!double(val.im - hi);\n+                else\n+                    double low = toPrec!double(val - hi);\n                 buff[msbSize .. $] = toUbyte(low)[];\n             }\n "}, {"sha": "b154e1489a68e64ee84011c31abd6bff90dc46f9", "filename": "libphobos/libdruntime/core/sys/posix/sys/stat.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -1391,6 +1391,7 @@ else version (Solaris)\n             dev_t st_rdev;\n             c_long[2] st_pad2;\n             off_t st_size;\n+            c_long st_pad3;\n             union\n             {\n                 timestruc_t st_atim;\n@@ -1424,7 +1425,6 @@ else version (Solaris)\n             dev_t st_rdev;\n             c_long[2] st_pad2;\n             off64_t st_size;\n-            c_long st_pad3;\n             union\n             {\n                 timestruc_t st_atim;"}, {"sha": "e1a68057ca1901496b41c2c3a660ea3017c9b534", "filename": "libphobos/libdruntime/core/thread.d", "status": "modified", "additions": 77, "deletions": 69, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fcore%2Fthread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Flibdruntime%2Fcore%2Fthread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fthread.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -2407,93 +2407,84 @@ shared static ~this()\n // Used for needLock below.\n private __gshared bool multiThreadedFlag = false;\n \n-version (PPC64) version = ExternStackShell;\n-\n-version (ExternStackShell)\n+// Calls the given delegate, passing the current thread's stack pointer to it.\n+private void callWithStackShell(scope void delegate(void* sp) nothrow fn) nothrow\n+in\n {\n-    extern(D) public void callWithStackShell(scope void delegate(void* sp) nothrow fn) nothrow;\n+    assert(fn);\n }\n-else\n+body\n {\n-    // Calls the given delegate, passing the current thread's stack pointer to it.\n-    private void callWithStackShell(scope void delegate(void* sp) nothrow fn) nothrow\n-    in\n+    // The purpose of the 'shell' is to ensure all the registers get\n+    // put on the stack so they'll be scanned. We only need to push\n+    // the callee-save registers.\n+    void *sp = void;\n+\n+    version (GNU)\n     {\n-        assert(fn);\n+        __builtin_unwind_init();\n+        sp = &sp;\n     }\n-    body\n+    else version (AsmX86_Posix)\n     {\n-        // The purpose of the 'shell' is to ensure all the registers get\n-        // put on the stack so they'll be scanned. We only need to push\n-        // the callee-save registers.\n-        void *sp = void;\n-\n-        version (GNU)\n-        {\n-            __builtin_unwind_init();\n-            sp = &sp;\n-        }\n-        else version (AsmX86_Posix)\n+        size_t[3] regs = void;\n+        asm pure nothrow @nogc\n         {\n-            size_t[3] regs = void;\n-            asm pure nothrow @nogc\n-            {\n-                mov [regs + 0 * 4], EBX;\n-                mov [regs + 1 * 4], ESI;\n-                mov [regs + 2 * 4], EDI;\n+            mov [regs + 0 * 4], EBX;\n+            mov [regs + 1 * 4], ESI;\n+            mov [regs + 2 * 4], EDI;\n \n-                mov sp[EBP], ESP;\n-            }\n+            mov sp[EBP], ESP;\n         }\n-        else version (AsmX86_Windows)\n+    }\n+    else version (AsmX86_Windows)\n+    {\n+        size_t[3] regs = void;\n+        asm pure nothrow @nogc\n         {\n-            size_t[3] regs = void;\n-            asm pure nothrow @nogc\n-            {\n-                mov [regs + 0 * 4], EBX;\n-                mov [regs + 1 * 4], ESI;\n-                mov [regs + 2 * 4], EDI;\n+            mov [regs + 0 * 4], EBX;\n+            mov [regs + 1 * 4], ESI;\n+            mov [regs + 2 * 4], EDI;\n \n-                mov sp[EBP], ESP;\n-            }\n+            mov sp[EBP], ESP;\n         }\n-        else version (AsmX86_64_Posix)\n+    }\n+    else version (AsmX86_64_Posix)\n+    {\n+        size_t[5] regs = void;\n+        asm pure nothrow @nogc\n         {\n-            size_t[5] regs = void;\n-            asm pure nothrow @nogc\n-            {\n-                mov [regs + 0 * 8], RBX;\n-                mov [regs + 1 * 8], R12;\n-                mov [regs + 2 * 8], R13;\n-                mov [regs + 3 * 8], R14;\n-                mov [regs + 4 * 8], R15;\n+            mov [regs + 0 * 8], RBX;\n+            mov [regs + 1 * 8], R12;\n+            mov [regs + 2 * 8], R13;\n+            mov [regs + 3 * 8], R14;\n+            mov [regs + 4 * 8], R15;\n \n-                mov sp[RBP], RSP;\n-            }\n+            mov sp[RBP], RSP;\n         }\n-        else version (AsmX86_64_Windows)\n-        {\n-            size_t[7] regs = void;\n-            asm pure nothrow @nogc\n-            {\n-                mov [regs + 0 * 8], RBX;\n-                mov [regs + 1 * 8], RSI;\n-                mov [regs + 2 * 8], RDI;\n-                mov [regs + 3 * 8], R12;\n-                mov [regs + 4 * 8], R13;\n-                mov [regs + 5 * 8], R14;\n-                mov [regs + 6 * 8], R15;\n-\n-                mov sp[RBP], RSP;\n-            }\n-        }\n-        else\n+    }\n+    else version (AsmX86_64_Windows)\n+    {\n+        size_t[7] regs = void;\n+        asm pure nothrow @nogc\n         {\n-            static assert(false, \"Architecture not supported.\");\n-        }\n+            mov [regs + 0 * 8], RBX;\n+            mov [regs + 1 * 8], RSI;\n+            mov [regs + 2 * 8], RDI;\n+            mov [regs + 3 * 8], R12;\n+            mov [regs + 4 * 8], R13;\n+            mov [regs + 5 * 8], R14;\n+            mov [regs + 6 * 8], R15;\n \n-        fn(sp);\n+            mov sp[RBP], RSP;\n+        }\n     }\n+    else\n+    {\n+        static assert(false, \"Architecture not supported.\");\n+    }\n+\n+    fn(sp);\n }\n \n // Used for suspendAll/resumeAll below.\n@@ -5287,6 +5278,23 @@ unittest\n \n \n // Multiple threads running shared fibers\n+version (PPC)   version = UnsafeFiberMigration;\n+version (PPC64) version = UnsafeFiberMigration;\n+\n+version (UnsafeFiberMigration)\n+{\n+    // XBUG: core.thread fibers are supposed to be safe to migrate across\n+    // threads, however, there is a problem: GCC always assumes that the\n+    // address of thread-local variables don't change while on a given stack.\n+    // In consequence, migrating fibers between threads currently is an unsafe\n+    // thing to do, and will break on some targets (possibly PR26461).\n+}\n+else\n+{\n+    version = FiberMigrationUnittest;\n+}\n+\n+version (FiberMigrationUnittest)\n unittest\n {\n     shared bool[10] locks;"}, {"sha": "61a616acd8e04ba8345ea0415406fc3354b98377", "filename": "libphobos/testsuite/libphobos.thread/fiber_guard_page.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Ftestsuite%2Flibphobos.thread%2Ffiber_guard_page.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b6520ed29a9e2b5480ecab4e71d999c7d04f29/libphobos%2Ftestsuite%2Flibphobos.thread%2Ffiber_guard_page.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Flibphobos.thread%2Ffiber_guard_page.d?ref=05b6520ed29a9e2b5480ecab4e71d999c7d04f29", "patch": "@@ -18,7 +18,7 @@ void stackMethod()\n \n void main()\n {\n-    auto test_fiber = new Fiber(&stackMethod, stackSize);\n+    auto test_fiber = new Fiber(&stackMethod, stackSize, stackSize);\n \n     // allocate a page below (above) the fiber's stack to make stack overflows possible (w/o segfaulting)\n     version (StackGrowsDown)"}]}