{"sha": "aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhMGRjZGUxZmYyYjgxZWI2MzM1YmRmMmU4YWU3M2Y3NTE5Yzk5YQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-10-08T12:17:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-10-08T12:17:58Z"}, "message": "PR libstdc++/87538 Verify fix for std::experimental::not_fn\n\n\tPR libstdc++/87538\n\t* testsuite/experimental/functional/87538.cc: New test.\n\nFrom-SVN: r264922", "tree": {"sha": "e0f9b0de8cf28b64349820f790335a09d7d41f15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0f9b0de8cf28b64349820f790335a09d7d41f15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606f6be67bfc5b533d72d83063e184b6df0e125f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606f6be67bfc5b533d72d83063e184b6df0e125f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606f6be67bfc5b533d72d83063e184b6df0e125f"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "12dee3a273c7fef5ea2723cb9a00abe2d11c2bf1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a", "patch": "@@ -1,5 +1,8 @@\n 2018-10-08  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/87538\n+\t* testsuite/experimental/functional/87538.cc: New test.\n+\n \tPR libstdc++/87538\n \t* include/std/functional (_Not_fn::operator()): Check value of\n \t__is_nothrow_invocable as well."}, {"sha": "1ee9ecd55f3c8ac577465b882db103cc8d381de6", "filename": "libstdc++-v3/testsuite/experimental/functional/87538.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffunctional%2F87538.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffunctional%2F87538.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffunctional%2F87538.cc?ref=aca0dcde1ff2b81eb6335bdf2e8ae73f7519c99a", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++14 } }\n+\n+#include <experimental/functional>\n+#include <testsuite_hooks.h>\n+\n+struct N {\n+  int operator()(int i) { if (i == 0) throw -1; return i; }\n+};\n+\n+void\n+test01()\n+{\n+  N n;\n+  auto not_n = std::experimental::not_fn(n);\n+  static_assert( !noexcept(not_n(1)), \"can throw\" );\n+  VERIFY(not_n(1) == 0);\n+  int exception = 0;\n+  try {\n+    not_n(0);\n+  }\n+  catch (int e) {\n+    exception = e;\n+  }\n+  VERIFY(exception == -1);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}