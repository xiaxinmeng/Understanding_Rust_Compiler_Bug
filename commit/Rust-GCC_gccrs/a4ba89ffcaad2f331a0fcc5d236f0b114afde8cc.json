{"sha": "a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiYTg5ZmZjYWFkMmYzMzFhMGZjYzVkMjM2ZjBiMTE0YWZkZThjYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:04Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:04Z"}, "message": "dwarf2out.c: Include rtl-iter.h.\n\ngcc/\n\t* dwarf2out.c: Include rtl-iter.h.\n\t(const_ok_for_output_1): Take the rtx instead of a pointer to it.\n\tRemove unused data parameter.  Return a bool, inverting the result\n\tso that 0/false means \"not ok\".\n\t(const_ok_for_output): Update accordingly.  Use FOR_EACH_SUBRTX_VAR\n\tinstead of for_each_rtx.\n\nFrom-SVN: r214636", "tree": {"sha": "f1e2fc2e30445f13dd67b7d2ee7b4850ece51ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e2fc2e30445f13dd67b7d2ee7b4850ece51ec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7111da854bd560e3ea576ef954a8e93151a198c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7111da854bd560e3ea576ef954a8e93151a198c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7111da854bd560e3ea576ef954a8e93151a198c"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "01a7915bde1f4bbdc1331e77c519ec472415f223", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc", "patch": "@@ -1,3 +1,12 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* dwarf2out.c: Include rtl-iter.h.\n+\t(const_ok_for_output_1): Take the rtx instead of a pointer to it.\n+\tRemove unused data parameter.  Return a bool, inverting the result\n+\tso that 0/false means \"not ok\".\n+\t(const_ok_for_output): Update accordingly.  Use FOR_EACH_SUBRTX_VAR\n+\tinstead of for_each_rtx.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* dse.c: Include rtl-iter.h."}, {"sha": "6e040f5d7129109f37e7c0f8f0009e475f9afa2a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a4ba89ffcaad2f331a0fcc5d236f0b114afde8cc", "patch": "@@ -98,6 +98,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"tree-dfa.h\"\n #include \"gdb/gdb-index.h\"\n+#include \"rtl-iter.h\"\n \n static void dwarf2out_source_line (unsigned int, const char *, int, bool);\n static rtx_insn *last_var_location_insn;\n@@ -11413,14 +11414,11 @@ expansion_failed (tree expr, rtx rtl, char const *reason)\n     }\n }\n \n-/* Helper function for const_ok_for_output, called either directly\n-   or via for_each_rtx.  */\n+/* Helper function for const_ok_for_output.  */\n \n-static int\n-const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n+static bool\n+const_ok_for_output_1 (rtx rtl)\n {\n-  rtx rtl = *rtlp;\n-\n   if (GET_CODE (rtl) == UNSPEC)\n     {\n       /* If delegitimize_address couldn't do anything with the UNSPEC, assume\n@@ -11448,14 +11446,14 @@ const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n #endif\n       expansion_failed (NULL_TREE, rtl,\n \t\t\t\"UNSPEC hasn't been delegitimized.\\n\");\n-      return 1;\n+      return false;\n     }\n \n   if (targetm.const_not_ok_for_debug_p (rtl))\n     {\n       expansion_failed (NULL_TREE, rtl,\n \t\t\t\"Expression rejected for debug by the backend.\\n\");\n-      return 1;\n+      return false;\n     }\n \n   /* FIXME: Refer to PR60655. It is possible for simplification\n@@ -11466,9 +11464,8 @@ const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n   if (GET_CODE (rtl) != SYMBOL_REF)\n     {\n       if (GET_CODE (rtl) == NOT)\n-\t  return 1;\n-\n-      return 0;\n+\treturn false;\n+      return true;\n     }\n \n   if (CONSTANT_POOL_ADDRESS_P (rtl))\n@@ -11481,12 +11478,12 @@ const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n \t{\n \t  expansion_failed (NULL_TREE, rtl,\n \t\t\t    \"Constant was removed from constant pool.\\n\");\n-\t  return 1;\n+\t  return false;\n \t}\n     }\n \n   if (SYMBOL_REF_TLS_MODEL (rtl) != TLS_MODEL_NONE)\n-    return 1;\n+    return false;\n \n   /* Avoid references to external symbols in debug info, on several targets\n      the linker might even refuse to link when linking a shared library,\n@@ -11501,11 +11498,11 @@ const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n \t{\n \t  expansion_failed (NULL_TREE, rtl,\n \t\t\t    \"Symbol not defined in current TU.\\n\");\n-\t  return 1;\n+\t  return false;\n \t}\n     }\n \n-  return 0;\n+  return true;\n }\n \n /* Return true if constant RTL can be emitted in DW_OP_addr or\n@@ -11516,10 +11513,16 @@ static bool\n const_ok_for_output (rtx rtl)\n {\n   if (GET_CODE (rtl) == SYMBOL_REF)\n-    return const_ok_for_output_1 (&rtl, NULL) == 0;\n+    return const_ok_for_output_1 (rtl);\n \n   if (GET_CODE (rtl) == CONST)\n-    return for_each_rtx (&XEXP (rtl, 0), const_ok_for_output_1, NULL) == 0;\n+    {\n+      subrtx_var_iterator::array_type array;\n+      FOR_EACH_SUBRTX_VAR (iter, array, XEXP (rtl, 0), ALL)\n+\tif (!const_ok_for_output_1 (*iter))\n+\t  return false;\n+      return true;\n+    }\n \n   return true;\n }"}]}