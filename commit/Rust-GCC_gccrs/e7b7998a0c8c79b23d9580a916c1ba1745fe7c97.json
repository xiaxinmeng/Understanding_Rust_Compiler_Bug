{"sha": "e7b7998a0c8c79b23d9580a916c1ba1745fe7c97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiNzk5OGEwYzhjNzliMjNkOTU4MGE5MTZjMWJhMTc0NWZlN2M5Nw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-17T20:11:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-17T20:11:06Z"}, "message": "rs6000.c (secondary_reload_class): For TARGET_ELF...\n\n\ufffd\n        * rs6000.c (secondary_reload_class): For TARGET_ELF, indicate that\n        a BASE_REGS register is needed as an intermediate when copying\n        a symbolic value into any register class other than BASE_REGS.\n\nFrom-SVN: r21808", "tree": {"sha": "134edc78adcd85e5b811b25d20e314f4856a98d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/134edc78adcd85e5b811b25d20e314f4856a98d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7b7998a0c8c79b23d9580a916c1ba1745fe7c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b7998a0c8c79b23d9580a916c1ba1745fe7c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7b7998a0c8c79b23d9580a916c1ba1745fe7c97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b7998a0c8c79b23d9580a916c1ba1745fe7c97/comments", "author": null, "committer": null, "parents": [{"sha": "3c144fbd0cb7b84155163da04748b6b6171637db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c144fbd0cb7b84155163da04748b6b6171637db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c144fbd0cb7b84155163da04748b6b6171637db"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c1a2cea5028d1b5d4ca859246fdddfc04848a8db", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b7998a0c8c79b23d9580a916c1ba1745fe7c97/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b7998a0c8c79b23d9580a916c1ba1745fe7c97/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e7b7998a0c8c79b23d9580a916c1ba1745fe7c97", "patch": "@@ -2187,6 +2187,16 @@ secondary_reload_class (class, mode, in)\n   if (regno >= FIRST_PSEUDO_REGISTER)\n     regno = -1;\n \n+  /* We can not copy a symbolic operand directly into anyting other than\n+     BASE_REGS for TARGET_ELF.  So indicate that a register from BASE_REGS\n+     is needed as an intermediate register.  */\n+  if (TARGET_ELF\n+      && class != BASE_REGS\n+      && (GET_CODE (in) == SYMBOL_REF\n+\t  || GET_CODE (in) == LABEL_REF\n+\t  || GET_CODE (in) == CONST))\n+    return BASE_REGS;\n+\n   /* We can place anything into GENERAL_REGS and can put GENERAL_REGS\n      into anything.  */\n   if (class == GENERAL_REGS || class == BASE_REGS"}]}