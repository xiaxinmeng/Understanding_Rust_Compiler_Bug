{"sha": "a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg2ZDg2NGM0MWQ4ZGM4YmRjYmNmODdjZGZhNDkxODUzMTlmZDBlNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-10-10T22:03:34Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-10-10T22:03:34Z"}, "message": "basic-block.h (EXECUTE_IF_SET_IN_SBITMAP): New macro.\n\n        * basic-block.h (EXECUTE_IF_SET_IN_SBITMAP): New macro.\n        (sbitmap_free, sbitmap_vector_free): New macros.\n        * output.h (rtl_dump_file): Declare.\n\nFrom-SVN: r22978", "tree": {"sha": "901ab52e1327f069c4f7c0164e45b06ededaebd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/901ab52e1327f069c4f7c0164e45b06ededaebd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/comments", "author": null, "committer": null, "parents": [{"sha": "937e37cc6e345ed695b7bb5b9d58e2ba403fe427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937e37cc6e345ed695b7bb5b9d58e2ba403fe427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937e37cc6e345ed695b7bb5b9d58e2ba403fe427"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "d22e9d7951cf91167f4899da1a48f6565008a458", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "patch": "@@ -1,3 +1,9 @@\n+Sat Oct 10 22:00:34 1998  Richard Henderson  <rth@cygnus.com>\n+\n+        * basic-block.h (EXECUTE_IF_SET_IN_SBITMAP): New macro.\n+        (sbitmap_free, sbitmap_vector_free): New macros.\n+        * output.h (rtl_dump_file): Declare.\n+\n Sat Oct 10 17:01:42 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* regmove.c (optimize_reg_copy_3): Honor TRULY_NOOP_TRUNCATION."}, {"sha": "5f146286222a6adc29eb3f3e0d5f94680adc5883", "filename": "gcc/basic-block.h", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "patch": "@@ -235,7 +235,41 @@ do { \\\n   (bitmap)->elms [(bitno) / SBITMAP_ELT_BITS] &= ~((SBITMAP_ELT_TYPE) 1 << (bitno) % SBITMAP_ELT_BITS); \\\n } while (0)\n \n-extern void dump_sbitmap       PROTO ((FILE *, sbitmap));\n+/* Loop over all elements of SBITSET, starting with MIN.  */\n+#define EXECUTE_IF_SET_IN_SBITMAP(SBITMAP, MIN, N, CODE)\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  unsigned int bit_num_ = (MIN) % (unsigned) SBITMAP_ELT_BITS;\t\t\\\n+  unsigned int word_num_ = (MIN) / (unsigned) SBITMAP_ELT_BITS;\t\t\\\n+  unsigned int size_ = (SBITMAP)->size;\t\t\t\t\t\\\n+  SBITMAP_ELT_TYPE *ptr_ = (SBITMAP)->elms;\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  while (word_num_ < size_)\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      SBITMAP_ELT_TYPE word_ = ptr_[word_num_];\t\t\t\t\\\n+      if (word_ != 0)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  for (; bit_num_ < SBITMAP_ELT_BITS; ++bit_num_)\t\t\\\n+\t    {\t\t\t\t\t\t\t\t\\\n+\t      SBITMAP_ELT_TYPE mask_ = (SBITMAP_ELT_TYPE)1 << bit_num_;\t\\\n+\t      if ((word_ & mask_) != 0)\t\t\t\t\t\\\n+\t\t{\t\t\t\t\t\t\t\\\n+\t\t  word_ &= ~mask_;\t\t\t\t\t\\\n+\t\t  (N) = word_num_ * SBITMAP_ELT_BITS + bit_num_;\t\\\n+\t\t  CODE;\t\t\t\t\t\t\t\\\n+\t\t  if (word_ == 0)\t\t\t\t\t\\\n+\t\t    break;\t\t\t\t\t\t\\\n+\t\t}\t\t\t\t\t\t\t\\\n+\t    }\t\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      bit_num_ = 0;\t\t\t\t\t\t\t\\\n+      word_num_++;\t\t\t\t\t\t\t\\\n+   }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#define sbitmap_free(map)\t\tfree(map)\n+#define sbitmap_vector_free(vec)\tfree(vec)\n+\n+extern void dump_sbitmap PROTO ((FILE *, sbitmap));\n extern void dump_sbitmap_vector PROTO ((FILE *, char *, char *,\n \t\t\t\t\tsbitmap *, int));\n extern sbitmap sbitmap_alloc PROTO ((int));"}, {"sha": "353a9d6b9bfa0e0454bff6c11c8367c001772312", "filename": "gcc/output.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "patch": "@@ -460,6 +460,12 @@ extern int sdb_begin_function_line;\n extern FILE *asm_out_file;\n #endif\n \n+/* Default file in which to dump debug output.  */\n+\n+#ifdef BUFSIZ\n+extern FILE *rtl_dump_file;\n+#endif\n+\n /* Decide whether DECL needs to be in a writable section.  RELOC is the same\n    as for SELECT_SECTION.  */\n "}]}