{"sha": "56bba8cf57d0aa75d0266486595efe0d070af0b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiYmE4Y2Y1N2QwYWE3NWQwMjY2NDg2NTk1ZWZlMGQwNzBhZjBiNw==", "commit": {"author": {"name": "Hans Boehm", "email": "Hans_Boehm@hp.com", "date": "2003-02-19T00:35:35Z"}, "committer": {"name": "Hans Boehm", "email": "hboehm@gcc.gnu.org", "date": "2003-02-19T00:35:35Z"}, "message": "XToolkit.java (getFontMetrics): initialize if necessary.\n\n2003-02-18  Hans Boehm  <Hans.Boehm@hp.com>\n\n\t* gnu/awt/xlib/XToolkit.java (getFontMetrics): initialize\n\tif necessary.\n\n\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n\tgnu/java/awt/peer/gtk/GtkTextAreaPeer.java,\n\tgnu/java/awt/peer/gtk/GtkTextFieldPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c\n\t(setFont, gtkSetFont): add.\n\tgnu/java/awt/peer/gtk/GtkComponentPeer.java (GtkComponentPeer):\n\tPropagate font to peer.  (setFont): add FIXME comment.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n\t(gtkTextGetSize): fix height, width computation.\n\n\t* gnu/java/awt/peer/gtk/GtkFontPeer.java (GtkFontPeer):\n\tMake X font name a bit less bogus.\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c\n\t(post_adjustment_event): Pass on GTK_SCROLL_NONE.\n\n\t* java/awt/Scrollbar.java (setValues): Fix visibleAmount range check.\n\t(processAdjustmentEvent): Adjust value.\n\n\t* java/awt/FlowLayout.java (layoutContainer) Fix 2 indexing and one\n\tlogic errors.\n\n\t* java/awt/Component.java (setVisible, show, hide): Call show and\n\thide methods in subclasses.\n\t(getPreferredSize): don't set prefSize before we have peer.\n\n\t* java/awt/TextArea.java, java/awt/TextField.java (getPreferredSize):\n\tGuess (0,0) if we don't have peer.\n\nFrom-SVN: r63077", "tree": {"sha": "abb4641e8aaeacc764f059098100e1aa5dde90a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abb4641e8aaeacc764f059098100e1aa5dde90a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56bba8cf57d0aa75d0266486595efe0d070af0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bba8cf57d0aa75d0266486595efe0d070af0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bba8cf57d0aa75d0266486595efe0d070af0b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bba8cf57d0aa75d0266486595efe0d070af0b7/comments", "author": null, "committer": null, "parents": [{"sha": "35bd55199796da40e73ce07ac42c4e88a9e40e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35bd55199796da40e73ce07ac42c4e88a9e40e6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35bd55199796da40e73ce07ac42c4e88a9e40e6a"}], "stats": {"total": 253, "additions": 229, "deletions": 24}, "files": [{"sha": "116d2a10ec0abd157948fa896a9ec4f27f6148b1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -1,3 +1,41 @@\n+2003-02-18  Hans Boehm  <Hans.Boehm@hp.com>\n+\n+\t* gnu/awt/xlib/XToolkit.java (getFontMetrics): initialize\n+\tif necessary.\n+\t\n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkTextAreaPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkTextFieldPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c\n+\t(setFont, gtkSetFont): add.\n+\tgnu/java/awt/peer/gtk/GtkComponentPeer.java (GtkComponentPeer):\n+\tPropagate font to peer.  (setFont): add FIXME comment.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n+\t(gtkTextGetSize): fix height, width computation.\n+\n+\t* gnu/java/awt/peer/gtk/GtkFontPeer.java (GtkFontPeer):\n+\tMake X font name a bit less bogus.\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c\n+\t(post_adjustment_event): Pass on GTK_SCROLL_NONE.\n+\n+\t* java/awt/Scrollbar.java (setValues): Fix visibleAmount range check.\n+\t(processAdjustmentEvent): Adjust value.\n+\n+\t* java/awt/FlowLayout.java (layoutContainer) Fix 2 indexing and one\n+\tlogic errors.\n+\n+\t* java/awt/Component.java (setVisible, show, hide): Call show and\n+\thide methods in subclasses.\n+\t(getPreferredSize): don't set prefSize before we have peer.\n+\n+\t* java/awt/TextArea.java, java/awt/TextField.java (getPreferredSize):\n+\tGuess (0,0) if we don't have peer.\n+\n+\n 2003-02-18  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/channels/FileChannel.java"}, {"sha": "df3a2b6b59521cfdcb6277bf323a2d7eb64bb00f", "filename": "libjava/gnu/awt/xlib/XToolkit.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -183,7 +183,7 @@ public String[] getFontList()\n \n   public FontMetrics getFontMetrics(Font font)\n   {\n-    return defaultConfig.getXFontMetrics(font);\n+    return getDefaultXGraphicsConfiguration().getXFontMetrics(font);\n   }\n \n   public void sync()"}, {"sha": "a609f7ad818e135343d7c7b8f8fca94ac11f663e", "filename": "libjava/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -47,6 +47,8 @@ public class GtkButtonPeer extends GtkComponentPeer\n {\n   native void create ();\n \n+  native void gtkSetFont(String xlfd, int size);\n+\n   public GtkButtonPeer (Button b)\n   {\n     super (b);\n@@ -86,4 +88,9 @@ public void getArgs (Component component, GtkArgList args)\n \n     args.add (\"label\", ((Button)component).getLabel ());\n   }\n+\n+  public void setFont (Font f)\n+  {\n+    gtkSetFont(((GtkFontPeer)f.getPeer()).getXLFD(), f.getSize());\n+  }\n }"}, {"sha": "b3a4525314e3340c04105559cdaf76ac99f2830f", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -88,6 +88,8 @@ protected GtkComponentPeer (Component awtComponent)\n \tawtComponent.setBackground (getBackground ());\n       //        if (c.getFont () == null)\n       //  \tc.setFont (cp.getFont ());\n+      if (awtComponent.getFont() != null)\n+\tsetFont(awtComponent.getFont());\n       \n       if (! (awtComponent instanceof Window))\n \t{\n@@ -273,6 +275,9 @@ public void setEnabled (boolean b)\n \n   public void setFont (Font f)\n   {\n+    // FIXME: This should really affect the widget tree below me.\n+    // Currently this is only handled if the call is made directly on\n+    // a text widget, which implements setFont() itself.\n   }\n \n   public void setForeground (Color c) \n@@ -352,7 +357,8 @@ public void getArgs (Component component, GtkArgList args)\n \tp = component.getPeer ();\n       } while (p instanceof java.awt.peer.LightweightPeer);\n     \n-    args.add (\"parent\", p);\n+    if (p != null)\n+      args.add (\"parent\", p);\n   }\n \n   native void set (String name, String value);"}, {"sha": "d3130a905e98e2f52b8cd0ab7cda20d96ab3bb0e", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFontPeer.java", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -57,14 +57,34 @@ public class GtkFontPeer implements FontPeer\n       }\n   }\n \n-  final private String Xname;\n+  final private String Xname; // uses %d for font size.\n \n   public GtkFontPeer (String name, int style)\n   {\n     if (bundle != null)\n       Xname = bundle.getString (name.toLowerCase () + \".\" + style);\n     else\n-      Xname = \"-*-*-medium-r-normal-*-12-*-*-*-c-*-*-*\";\n+      {\n+\tString weight;\n+\tString slant;\n+\tString spacing;\n+\n+\tif (style == Font.ITALIC || (style == (Font.BOLD+Font.ITALIC)))\n+\t  slant = \"i\";\n+\telse\n+\t  slant = \"r\";\n+\tif (style == Font.BOLD || (style == (Font.BOLD+Font.ITALIC)))\n+\t  weight = \"bold\";\n+\telse\n+\t  weight = \"medium\";\n+\tif (name.equals(\"Serif\") || name.equals(\"SansSerif\")\n+\t    || name.equals(\"Helvetica\") || name.equals(\"Times\"))\n+\t  spacing = \"p\";\n+\telse\n+\t  spacing = \"c\";\n+\n+        Xname = \"-*-*-\" + weight + \"-\" + slant + \"-normal-*-%d-*-*-*-\" + spacing + \"-*-*-*\";\n+      }\n   }\n \n   public String getXLFD ()"}, {"sha": "ad83008cb8a3e5a84b10fa5aab18b7e93dee1d8d", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextAreaPeer.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -45,6 +45,8 @@ public class GtkTextAreaPeer extends GtkTextComponentPeer\n {\n   native void create (int scrollbarVisibility);\n \n+  native void gtkSetFont(String xlfd, int size);\n+\n   void create ()\n   {\n     create (((TextArea)awtComponent).getScrollbarVisibility ());\n@@ -99,4 +101,9 @@ public void insertText (String str, int pos)\n   {\n     insert (str, pos);\n   }\n+\n+  public void setFont (Font f)\n+  {\n+    gtkSetFont(((GtkFontPeer)f.getPeer()).getXLFD(), f.getSize());\n+  }\n }"}, {"sha": "628cdd627aecf84d8b201ead7d3e399193385d84", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -51,6 +51,8 @@ public class GtkTextFieldPeer extends GtkTextComponentPeer\n \n   native void gtkEntryGetSize (int cols, int dims[]);\n \n+  native void gtkSetFont(String xlfd, int size);\n+\n   public GtkTextFieldPeer (TextField tf)\n   {\n     super (tf);\n@@ -95,4 +97,9 @@ public void setEchoCharacter (char c)\n   {\n     setEchoChar (c);\n   }\n+\n+  public void setFont (Font f)\n+  {\n+    gtkSetFont(((GtkFontPeer)f.getPeer()).getXLFD(), f.getSize());\n+  }\n }"}, {"sha": "88f91810dc0b0fc8e8748a4972d78a6331d09492", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -844,9 +844,10 @@ public void setVisible(boolean b)\n     // Inspection by subclassing shows that Sun's implementation calls\n     // show(boolean) which then calls show() or hide(). It is the show()\n     // method that is overriden in subclasses like Window.\n-    if (peer != null)\n-      peer.setVisible(b);\n-    this.visible = b;\n+    if (b)\n+      show();\n+    else\n+      hide();\n   }\n \n   /**\n@@ -856,7 +857,9 @@ public void setVisible(boolean b)\n    */\n   public void show()\n   {\n-    setVisible(true);\n+    if (peer != null)\n+      peer.setVisible(true);\n+    this.visible = true;\n   }\n \n   /**\n@@ -877,7 +880,9 @@ public void show(boolean b)\n    */\n   public void hide()\n   {\n-    setVisible(false);\n+    if (peer != null)\n+      peer.setVisible(false);\n+    this.visible = false;\n   }\n \n   /**\n@@ -1448,8 +1453,10 @@ public boolean isLightweight()\n   public Dimension getPreferredSize()\n   {\n     if (prefSize == null)\n-      prefSize = (peer != null ? peer.getPreferredSize()\n-                       : new Dimension(width, height));\n+      if (peer == null)\n+\treturn new Dimension(width, height);\n+      else \n+        prefSize = peer.getPreferredSize();\n     return prefSize;\n   }\n "}, {"sha": "795dfd8e61ff8962c04bfde8bf771f81630d216f", "filename": "libjava/java/awt/FlowLayout.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FFlowLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FFlowLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFlowLayout.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -171,13 +171,13 @@ public void layoutContainer (Container parent)\n \t    int new_h = 0;\n \t    int j;\n \t    boolean found_one = false;\n-\t    for (j = i; j < num && ! found_one; ++j)\n+\t    for (j = i; j < num; ++j)\n \t      {\n \t\t// Skip invisible items.\n-\t\tif (! comps[i].visible)\n+\t\tif (! comps[j].visible)\n \t\t  continue;\n \n-\t\tDimension c = comps[i].getPreferredSize ();\n+\t\tDimension c = comps[j].getPreferredSize ();\n \n \t\tint next_w = new_w + hgap + c.width;\n \t\tif (next_w <= d.width || ! found_one)"}, {"sha": "b9a81a53b0fe5541092577a71c3a820bdd5b7f63", "filename": "libjava/java/awt/Scrollbar.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FScrollbar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FScrollbar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollbar.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -390,8 +390,8 @@ public class Scrollbar extends Component implements Accessible,\n   if (value > maximum)\n     value = maximum;\n \n-  if (visibleAmount > value)\n-    visibleAmount = value;\n+  if (visibleAmount > maximum - minimum)\n+    visibleAmount = maximum - minimum;\n \n   this.value = value;\n   this.visibleAmount = visibleAmount;\n@@ -664,6 +664,7 @@ public class Scrollbar extends Component implements Accessible,\n protected void\n processAdjustmentEvent(AdjustmentEvent event)\n {\n+  value = event.getValue();\n   if (adjustment_listeners != null)\n     adjustment_listeners.adjustmentValueChanged(event);\n }"}, {"sha": "ec87f87d49176d58d39246a4d27309c7599604f0", "filename": "libjava/java/awt/TextArea.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FTextArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FTextArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextArea.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -370,7 +370,11 @@ public class TextArea extends TextComponent implements java.io.Serializable\n {\n   TextAreaPeer tap = (TextAreaPeer)getPeer();\n   if (tap == null)\n-    return(null); // FIXME: What do we do if there is no peer?\n+    {\n+      // Sun's JDK just seems to return Dimension(0,0) in this case.\n+      // we do the same.\n+      return new Dimension(0, 0);\n+    }\n \n   return(tap.getPreferredSize(rows, columns));\n }"}, {"sha": "13275e3104afa0064c3715aec53a0c30376c4b61", "filename": "libjava/java/awt/TextField.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjava%2Fawt%2FTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextField.java?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -345,8 +345,9 @@ public class TextField extends TextComponent\n {\n   TextFieldPeer tfp = (TextFieldPeer)getPeer();\n   if (tfp == null)\n-    return(null); // FIXME: What do we do if there is no peer?\n-\n+    {\n+      return new Dimension(0, 0);\n+    }\n   return(tfp.getPreferredSize(columns));\n }\n "}, {"sha": "e33aff046fcdea56a401f730bd316066b9cfc278", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -50,3 +50,39 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_create\n \n   NSA_SET_PTR (env, obj, widget);\n }\n+\n+JNIEXPORT void JNICALL \n+Java_gnu_java_awt_peer_gtk_GtkButtonPeer_gtkSetFont\n+  (JNIEnv *env, jobject obj, jstring jname, jint size)\n+{\n+  const char *xlfd;\n+# define FBUFSZ 200\n+  char buf[FBUFSZ];\n+  void *ptr;\n+  GdkFont * new_font;\n+  GtkStyle * style;\n+  GtkWidget * button;\n+  GtkWidget * label;\n+\n+  ptr = NSA_GET_PTR (env, obj);\n+  button = GTK_WIDGET (ptr);\n+  label = GTK_BIN(button)->child;\n+  \n+  if (label == NULL) return;\n+  xlfd = (*env)->GetStringUTFChars (env, jname, NULL);\n+  snprintf(buf, FBUFSZ, xlfd, size);\n+  (*env)->ReleaseStringUTFChars (env, jname, xlfd);\n+  gdk_threads_enter();\n+  new_font = gdk_font_load (buf);  /* FIXME: deprecated. Replacement?\t*/\n+  if (new_font == NULL)\n+    {\n+      /* Fail quietly for now. */\n+      gdk_threads_leave();\n+      return;\n+    }\n+  style = gtk_style_copy (gtk_widget_get_style (label));\n+  style -> font = new_font;\n+  gtk_widget_set_style (label, style);\n+  /* FIXME: Documentation varies as to whether we should unref style. */\n+  gdk_threads_leave();\n+}"}, {"sha": "9237a01b5a857b8b0bba747e488aaababe112fb4", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -65,9 +65,10 @@ post_adjustment_event (GtkAdjustment *adj, struct range_scrollbar *rs)\n       type = AWT_ADJUSTMENT_BLOCK_DECREMENT;\n       break;\n     case GTK_SCROLL_JUMP:\n+    case GTK_SCROLL_NONE:  /* Apparently generated when slider is dragged. */\n       type = AWT_ADJUSTMENT_TRACK;\n       break;\n-    default: /* GTK_SCROLL_NONE */\n+    default: /* Can this happen?  If so, is this right? */\n       return;\n     }\n   "}, {"sha": "27f2746151832331b978d146365130d1f2137512", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -135,27 +135,32 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkTextGetSize\n   text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n   sw = GTK_SCROLLED_WINDOW (ptr);\n \n-  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->hscrollbar), \n+  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n \t\t\t   \"size_request\", &myreq);\n   //gtk_widget_size_request(GTK_WIDGET (GTK_SCROLLED_WINDOW(sw)->hscrollbar), \n   //\t\t\t\t      &myreq);\n   dims[0]=myreq.width+GTK_SCROLLED_WINDOW_CLASS \n     (GTK_OBJECT (sw)->klass)->scrollbar_spacing;\n \n-  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n+  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->hscrollbar), \n \t\t\t   \"size_request\", &myreq);\n   //gtk_widget_size_request(GTK_WIDGET (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n   //\t\t\t\t      &myreq);\n-  dims[1]=myreq.width+GTK_SCROLLED_WINDOW_CLASS \n+  dims[1]=myreq.height+GTK_SCROLLED_WINDOW_CLASS \n     (GTK_OBJECT (sw)->klass)->scrollbar_spacing;\n   \n   /* The '1' in the following assignments is from \n      #define TEXT_BORDER_ROOM         1\n      in gtktext.c */\n \n+  /* Gtk text seems to wrap slightly prematurely.  Compensate. */\n+    ++cols;\n+    ++dims[0];\n+\n   dims[0] += ((cols * gdk_char_width (text->style->font, 'W'))\n \t     + (2 * (text->style->klass->xthickness + 1)));\n-  dims[1] += ((rows * gdk_char_height (text->style->font, 'W'))\n+  /* Guess at the height.  Is there a better way?\t*/\n+  dims[1] += ((rows * gdk_string_height (text->style->font, \"Wg\"))\n \t     + (2 * (text->style->klass->ythickness + 1)));\n \n   gdk_threads_leave ();\n@@ -207,3 +212,35 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_replaceRange\n   (*env)->ReleaseStringUTFChars (env, contents, str);\n }\n \n+JNIEXPORT void JNICALL \n+Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkSetFont\n+  (JNIEnv *env, jobject obj, jstring jname, jint size)\n+{\n+  const char *xlfd;\n+# define FBUFSZ 200\n+  char buf[FBUFSZ];\n+  void *ptr;\n+  GdkFont * new_font;\n+  GtkStyle * style;\n+  GtkWidget * text;\n+\n+  ptr = NSA_GET_PTR (env, obj);\n+  text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n+  \n+  xlfd = (*env)->GetStringUTFChars (env, jname, NULL);\n+    snprintf(buf, FBUFSZ, xlfd, size);\n+  (*env)->ReleaseStringUTFChars (env, jname, xlfd);\n+  gdk_threads_enter();\n+  new_font = gdk_font_load (buf);  /* FIXME: deprecated. Replacement?\t*/\n+  if (new_font == NULL)\n+    {\n+      /* Fail quietly for now. */\n+      gdk_threads_leave();\n+      return;\n+    }\n+  style = gtk_style_copy (gtk_widget_get_style (text));\n+  style -> font = new_font;\n+  gtk_widget_set_style (text , style);\n+  /* FIXME: Documentation varies as to whether we should unref style. */\n+  gdk_threads_leave();\n+}"}, {"sha": "658c8639bb72d674587da5fd0f661215fe97fab4", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bba8cf57d0aa75d0266486595efe0d070af0b7/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c?ref=56bba8cf57d0aa75d0266486595efe0d070af0b7", "patch": "@@ -148,3 +148,36 @@ Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_setEchoChar\n \n   gdk_threads_leave ();\n }\n+\n+JNIEXPORT void JNICALL \n+Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_gtkSetFont\n+  (JNIEnv *env, jobject obj, jstring jname, jint size)\n+{\n+  const char *xlfd;\n+# define FBUFSZ 200\n+  char buf[FBUFSZ];\n+  void *ptr;\n+  GdkFont * new_font;\n+  GtkStyle * style;\n+  GtkWidget * text;\n+\n+  ptr = NSA_GET_PTR (env, obj);\n+  text = GTK_WIDGET (ptr);\n+  \n+  xlfd = (*env)->GetStringUTFChars (env, jname, NULL);\n+  snprintf(buf, FBUFSZ, xlfd, size);\n+  (*env)->ReleaseStringUTFChars (env, jname, xlfd);\n+  gdk_threads_enter();\n+  new_font = gdk_font_load(buf);  /* FIXME: deprecated. Replacement?\t*/\n+  if (new_font == NULL)\n+    {\n+      /* Fail quietly for now. */\n+      gdk_threads_leave();\n+      return;\n+    }\n+  style = gtk_style_copy (gtk_widget_get_style (text));\n+  style -> font = new_font;\n+  gtk_widget_set_style (text , style);\n+  /* FIXME: Documentation varies as to whether we should unref style. */\n+  gdk_threads_leave();\n+}"}]}