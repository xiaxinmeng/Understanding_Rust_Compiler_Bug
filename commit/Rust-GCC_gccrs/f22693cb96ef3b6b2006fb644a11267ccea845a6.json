{"sha": "f22693cb96ef3b6b2006fb644a11267ccea845a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIyNjkzY2I5NmVmM2I2YjIwMDZmYjY0NGExMTI2N2NjZWE4NDVhNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-04-28T19:43:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-04-28T19:43:20Z"}, "message": "compiler: Mark concurrent calls.\n\n    \n    If a call expression is executed in an independent goroutine via\n    use of a Go statement, mark it as concurrent.\n    \n    Reviewed-on: https://go-review.googlesource.com/18700\n\nFrom-SVN: r235608", "tree": {"sha": "924e1d6fc2b0c90546f930da66281a6a2b2e8d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924e1d6fc2b0c90546f930da66281a6a2b2e8d07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f22693cb96ef3b6b2006fb644a11267ccea845a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22693cb96ef3b6b2006fb644a11267ccea845a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22693cb96ef3b6b2006fb644a11267ccea845a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22693cb96ef3b6b2006fb644a11267ccea845a6/comments", "author": null, "committer": null, "parents": [{"sha": "6181bc30ab7b986f2de6119fc846cf0d58d3328a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6181bc30ab7b986f2de6119fc846cf0d58d3328a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6181bc30ab7b986f2de6119fc846cf0d58d3328a"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "8dc8dc0c1409cc62486549fcc34947c933fd84bf", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22693cb96ef3b6b2006fb644a11267ccea845a6/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22693cb96ef3b6b2006fb644a11267ccea845a6/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=f22693cb96ef3b6b2006fb644a11267ccea845a6", "patch": "@@ -1,4 +1,4 @@\n-b17e404f5b8954e008b512741296d238ab7b2ef9\n+50b2b468a85045c66d60112dc094c31ec4897123\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "339cb5d288bf864aeabda7acab0fb48d85dd7efb", "filename": "gcc/go/gofrontend/expressions.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22693cb96ef3b6b2006fb644a11267ccea845a6/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22693cb96ef3b6b2006fb644a11267ccea845a6/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.h?ref=f22693cb96ef3b6b2006fb644a11267ccea845a6", "patch": "@@ -1985,8 +1985,8 @@ class Call_expression : public Expression\n       fn_(fn), args_(args), type_(NULL), results_(NULL), call_(NULL),\n       call_temp_(NULL), expected_result_count_(0), is_varargs_(is_varargs),\n       varargs_are_lowered_(false), types_are_determined_(false),\n-      is_deferred_(false), issued_error_(false), is_multi_value_arg_(false),\n-      is_flattened_(false)\n+      is_deferred_(false), is_concurrent_(false), issued_error_(false),\n+      is_multi_value_arg_(false), is_flattened_(false)\n   { }\n \n   // The function to call.\n@@ -2057,6 +2057,16 @@ class Call_expression : public Expression\n   set_is_deferred()\n   { this->is_deferred_ = true; }\n \n+  // Whether this call is concurrently executed.\n+  bool\n+  is_concurrent() const\n+  { return this->is_concurrent_; }\n+\n+  // Note that the call is concurrently executed.\n+  void\n+  set_is_concurrent()\n+  { this->is_concurrent_ = true; }\n+\n   // We have found an error with this call expression; return true if\n   // we should report it.\n   bool\n@@ -2170,6 +2180,8 @@ class Call_expression : public Expression\n   bool types_are_determined_;\n   // True if the call is an argument to a defer statement.\n   bool is_deferred_;\n+  // True if the call is an argument to a go statement.\n+  bool is_concurrent_;\n   // True if we reported an error about a mismatch between call\n   // results and uses.  This is to avoid producing multiple errors\n   // when there are multiple Call_result_expressions."}, {"sha": "ba77fd677bc8b421c7820cc1ce2aff97944aecda", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22693cb96ef3b6b2006fb644a11267ccea845a6/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22693cb96ef3b6b2006fb644a11267ccea845a6/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=f22693cb96ef3b6b2006fb644a11267ccea845a6", "patch": "@@ -2532,7 +2532,9 @@ Thunk_statement::build_thunk(Gogo* gogo, const std::string& thunk_name)\n \n   gogo->flatten_block(function, b);\n \n-  if (may_call_recover || recover_arg != NULL)\n+  if (may_call_recover\n+      || recover_arg != NULL\n+      || this->classification() == STATEMENT_GO)\n     {\n       // Dig up the call expression, which may have been changed\n       // during lowering.\n@@ -2546,6 +2548,8 @@ Thunk_statement::build_thunk(Gogo* gogo, const std::string& thunk_name)\n \t{\n \t  if (may_call_recover)\n \t    ce->set_is_deferred();\n+\t  if (this->classification() == STATEMENT_GO)\n+\t    ce->set_is_concurrent();\n \t  if (recover_arg != NULL)\n \t    ce->set_recover_arg(recover_arg);\n \t}"}]}