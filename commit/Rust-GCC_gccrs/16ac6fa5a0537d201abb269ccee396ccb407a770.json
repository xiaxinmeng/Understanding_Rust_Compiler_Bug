{"sha": "16ac6fa5a0537d201abb269ccee396ccb407a770", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhYzZmYTVhMDUzN2QyMDFhYmIyNjljY2VlMzk2Y2NiNDA3YTc3MA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-11-10T23:12:48Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-11-10T23:12:48Z"}, "message": "combine: More make_more_copies\n\nThis makes make_more_copies do what its documentation says, that is,\nonly make an intermediate pseudo if copying to a pseudo.\n\nThis regressed generated code quality when we didn't keep the original\nnotes that were on the copy, but since r265582 we do, and only allowing\npseudos now is a win.  It also simplifies the code.\n\n\n\t* combine.c (make_more_copies): Only make an intermediate copy if the\n\tdest of a move is a pseudo.\n\nFrom-SVN: r266004", "tree": {"sha": "9dd244f9dddcc99a6057cc50ffa101a39b66adad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dd244f9dddcc99a6057cc50ffa101a39b66adad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ac6fa5a0537d201abb269ccee396ccb407a770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ac6fa5a0537d201abb269ccee396ccb407a770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ac6fa5a0537d201abb269ccee396ccb407a770", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ac6fa5a0537d201abb269ccee396ccb407a770/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "babe0c748d341aaa2d18fb901ae3e6eb8af4da1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babe0c748d341aaa2d18fb901ae3e6eb8af4da1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/babe0c748d341aaa2d18fb901ae3e6eb8af4da1a"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "51c7e42c81055e51059940202df96738583e2cc0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ac6fa5a0537d201abb269ccee396ccb407a770/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ac6fa5a0537d201abb269ccee396ccb407a770/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16ac6fa5a0537d201abb269ccee396ccb407a770", "patch": "@@ -1,3 +1,8 @@\n+2018-11-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c (make_more_copies): Only make an intermediate copy if the\n+\tdest of a move is a pseudo.\n+\n 2018-11-09  Maya Rashish  <coypu@sdf.org>\n \n \tPR target/87221"}, {"sha": "945eca3da5acf8b950f32b132cbba69f657b9afc", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ac6fa5a0537d201abb269ccee396ccb407a770/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ac6fa5a0537d201abb269ccee396ccb407a770/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=16ac6fa5a0537d201abb269ccee396ccb407a770", "patch": "@@ -14956,12 +14956,11 @@ make_more_copies (void)\n \t  rtx set = single_set (insn);\n \t  if (!set)\n \t    continue;\n+\n \t  rtx dest = SET_DEST (set);\n-\t  if (dest == pc_rtx)\n-\t    continue;\n-\t  /* See PR87871.  */\n-\t  if (dest == frame_pointer_rtx)\n-\t    continue;\n+\t  if (!(REG_P (dest) && !HARD_REGISTER_P (dest)))\n+\t      continue;\n+\n \t  rtx src = SET_SRC (set);\n \t  if (!(REG_P (src) && HARD_REGISTER_P (src)))\n \t    continue;"}]}