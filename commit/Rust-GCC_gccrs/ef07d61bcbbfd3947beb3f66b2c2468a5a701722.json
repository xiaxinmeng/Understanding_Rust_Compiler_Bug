{"sha": "ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwN2Q2MWJjYmJmZDM5NDdiZWIzZjY2YjJjMjQ2OGE1YTcwMTcyMg==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-08-31T10:32:54Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-08-31T10:32:54Z"}, "message": "re PR c++/13377 (unexpected behavior of namespace usage directive)\n\n\tPR c++/13377\n\t* parser.c (cp_parser_lookup_name): Pass LOOKUP_COMPLAIN to\n\tlookup_name_real on final parse.\n\n\t* g++.dg/lookup/ambig4.C: New test.\n\t* g++.dg/lookup/ambig5.C: New test.\n\t* g++.dg/tc1/dr101.C: Adjust error markers.\n\nFrom-SVN: r103667", "tree": {"sha": "d164db8a50a33031569262b519135bb099a64c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d164db8a50a33031569262b519135bb099a64c6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/comments", "author": null, "committer": null, "parents": [{"sha": "1e1b4b377ca66667f52b9f6ea0056c673136df90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1b4b377ca66667f52b9f6ea0056c673136df90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1b4b377ca66667f52b9f6ea0056c673136df90"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "aa8ce8917e1c046c9ce73c2a62e231f8615b39f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "patch": "@@ -1,3 +1,9 @@\n+2005-08-31  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/13377\n+\t* parser.c (cp_parser_lookup_name): Pass LOOKUP_COMPLAIN to\n+\tlookup_name_real on final parse.\n+\n 2005-08-31  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/23639"}, {"sha": "f6b5381f5a3cfb85d6864e06fcb5da31bc1ee285", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "patch": "@@ -14464,9 +14464,13 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n \t\t       bool check_dependency,\n \t\t       bool *ambiguous_p)\n {\n+  int flags = 0;\n   tree decl;\n   tree object_type = parser->context->object_type;\n \n+  if (!cp_parser_uncommitted_to_tentative_parse_p (parser))\n+    flags |= LOOKUP_COMPLAIN;\n+\n   /* Assume that the lookup will be unambiguous.  */\n   if (ambiguous_p)\n     *ambiguous_p = false;\n@@ -14599,8 +14603,7 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n       /* Look it up in the enclosing context, too.  */\n       decl = lookup_name_real (name, tag_type != none_type,\n \t\t\t       /*nonclass=*/0,\n-\t\t\t       /*block_p=*/true, is_namespace,\n-\t\t\t       /*flags=*/0);\n+\t\t\t       /*block_p=*/true, is_namespace, flags);\n       parser->object_scope = object_type;\n       parser->qualifying_scope = NULL_TREE;\n       if (object_decl)\n@@ -14610,8 +14613,7 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n     {\n       decl = lookup_name_real (name, tag_type != none_type,\n \t\t\t       /*nonclass=*/0,\n-\t\t\t       /*block_p=*/true, is_namespace,\n-\t\t\t       /*flags=*/0);\n+\t\t\t       /*block_p=*/true, is_namespace, flags);\n       parser->qualifying_scope = NULL_TREE;\n       parser->object_scope = NULL_TREE;\n     }"}, {"sha": "5fbdb9e01fbee840a4569405cd8484cf968f1e13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "patch": "@@ -1,3 +1,10 @@\n+2005-08-31  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/13377\n+\t* g++.dg/lookup/ambig4.C: New test.\n+\t* g++.dg/lookup/ambig5.C: New test.\n+\t* g++.dg/tc1/dr101.C: Adjust error markers.\n+\n 2005-08-31  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/23639"}, {"sha": "ab1a14518d59c79ab5b42173750490f8e2dd7e36", "filename": "gcc/testsuite/g++.dg/lookup/ambig4.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig4.C?ref=ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/13377\n+// Origin: Volker Reichelt <reichelt@igpm.rwth-aachen.de>\n+// { dg-do compile }\n+\n+namespace N\n+{\n+  int i;            // { dg-error \"declared\" }\n+}\n+\n+int i;              // { dg-error \"declared\" }\n+\n+using namespace N;\n+\n+void foo() { i; }   // { dg-error \"in this scope|ambiguous\" }"}, {"sha": "8f74efc751843e469f0fa171f4d9b6280cfd8b5c", "filename": "gcc/testsuite/g++.dg/lookup/ambig5.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig5.C?ref=ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/13377\n+// Origin: Boris Kolpackov <boris@kolpackov.net>\n+// { dg-do compile }\n+\n+namespace N\n+{\n+  namespace M {}    // { dg-error \"declared\" }\n+}\n+\n+namespace M {}      // { dg-error \"declared\" }\n+\n+using namespace N;\n+using namespace M;  // { dg-error \"namespace-name|ambiguous\" }"}, {"sha": "8d9cab518b9bd133cbde42745083ef8c05d4a66c", "filename": "gcc/testsuite/g++.dg/tc1/dr101.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr101.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef07d61bcbbfd3947beb3f66b2c2468a5a701722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr101.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr101.C?ref=ef07d61bcbbfd3947beb3f66b2c2468a5a701722", "patch": "@@ -17,10 +17,10 @@ namespace Test1 {\n \n namespace Test2 {\n \n-  typedef unsigned int X;\n+  typedef unsigned int X;   // { dg-bogus \"declared\" \"\" { xfail *-*-* } }\n   extern \"C\" int f2();\n   namespace N {\n-    typedef unsigned int X;\n+    typedef unsigned int X; // { dg-bogus \"declared\" \"\" { xfail *-*-* } }\n     extern \"C\" int f2();\n   }\n   using namespace N;"}]}