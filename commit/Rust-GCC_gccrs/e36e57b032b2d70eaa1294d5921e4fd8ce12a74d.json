{"sha": "e36e57b032b2d70eaa1294d5921e4fd8ce12a74d", "node_id": "C_kwDOANBUbNoAKGUzNmU1N2IwMzJiMmQ3MGVhYTEyOTRkNTkyMWU0ZmQ4Y2UxMmE3NGQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-04T16:43:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-05T00:46:00Z"}, "message": "libstdc++: Fix std::chrono::hh_mm_ss with unsigned rep [PR108265]\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/108265\n\t* include/std/chrono (hh_mm_ss): Do not use chrono::abs if\n\tduration rep is unsigned.\n\t* testsuite/std/time/hh_mm_ss/1.cc: Check unsigned rep.", "tree": {"sha": "7f45026fdbaa4e0aba1e121c85f17568f887e803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f45026fdbaa4e0aba1e121c85f17568f887e803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faccda276841adb687b624276f781ea147c65445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faccda276841adb687b624276f781ea147c65445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faccda276841adb687b624276f781ea147c65445"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "e7fd6ed57abad05c2234557dbd54702fc9d0d79d", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=e36e57b032b2d70eaa1294d5921e4fd8ce12a74d", "patch": "@@ -2294,7 +2294,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n \n \tconstexpr\n-\thh_mm_ss(_Duration __d, bool __is_neg) noexcept\n+\thh_mm_ss(_Duration __d, bool __is_neg)\n \t: _M_h (duration_cast<chrono::hours>(__d)),\n \t  _M_m (duration_cast<chrono::minutes>(__d - hours())),\n \t  _M_s (duration_cast<chrono::seconds>(__d - hours() - minutes())),\n@@ -2307,6 +2307,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    _M_ss._M_r = duration_cast<precision>(__ss).count();\n \t}\n \n+\tstatic constexpr _Duration\n+\t_S_abs(_Duration __d)\n+\t{\n+\t  if constexpr (numeric_limits<typename _Duration::rep>::is_signed)\n+\t    return chrono::abs(__d);\n+\t  else\n+\t    return __d;\n+\t}\n+\n       public:\n \tstatic constexpr unsigned fractional_width = {_S_fractional_width()};\n \n@@ -2318,8 +2327,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconstexpr hh_mm_ss() noexcept = default;\n \n \tconstexpr explicit\n-\thh_mm_ss(_Duration __d) noexcept\n-\t: hh_mm_ss(chrono::abs(__d), __d < _Duration::zero())\n+\thh_mm_ss(_Duration __d)\n+\t: hh_mm_ss(_S_abs(__d), __d < _Duration::zero())\n \t{ }\n \n \tconstexpr bool"}, {"sha": "3c61145317c39087b21bbd9646875ed64f969f85", "filename": "libstdc++-v3/testsuite/std/time/hh_mm_ss/1.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Ftime%2Fhh_mm_ss%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e36e57b032b2d70eaa1294d5921e4fd8ce12a74d/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Ftime%2Fhh_mm_ss%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Ftime%2Fhh_mm_ss%2F1.cc?ref=e36e57b032b2d70eaa1294d5921e4fd8ce12a74d", "patch": "@@ -115,3 +115,19 @@ size()\n   struct S4 { long long h; char m, s; bool neg; double ss; };\n   static_assert(sizeof(hh_mm_ss<duration<double, std::micro>>) == sizeof(S4));\n }\n+\n+constexpr void\n+unsigned_rep()\n+{\n+  using namespace std::chrono;\n+\n+  constexpr duration<unsigned, std::milli> ms(3690001);\n+\n+  constexpr hh_mm_ss hms(ms); // PR libstdc++/108265\n+  static_assert( ! hms.is_negative() );\n+  static_assert( hms.to_duration() == milliseconds(ms.count()) );\n+  static_assert( hms.hours() == 1h );\n+  static_assert( hms.minutes() == 1min );\n+  static_assert( hms.seconds() == 30s );\n+  static_assert( hms.subseconds() == 1ms );\n+}"}]}