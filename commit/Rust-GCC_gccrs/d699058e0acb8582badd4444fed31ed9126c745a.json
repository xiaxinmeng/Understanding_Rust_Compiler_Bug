{"sha": "d699058e0acb8582badd4444fed31ed9126c745a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5OTA1OGUwYWNiODU4MmJhZGQ0NDQ0ZmVkMzFlZDkxMjZjNzQ1YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-02-27T01:52:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-02-27T01:52:18Z"}, "message": "* config/alpha/alpha.md (ashldi_se): Re-enable.\n\nFrom-SVN: r50083", "tree": {"sha": "e89eca2978666490e01d2b9e38b9dc7d08a1fe02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e89eca2978666490e01d2b9e38b9dc7d08a1fe02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d699058e0acb8582badd4444fed31ed9126c745a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d699058e0acb8582badd4444fed31ed9126c745a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d699058e0acb8582badd4444fed31ed9126c745a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d699058e0acb8582badd4444fed31ed9126c745a/comments", "author": null, "committer": null, "parents": [{"sha": "eadccfbb857dfdac6c286b38bc500154785c5982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eadccfbb857dfdac6c286b38bc500154785c5982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eadccfbb857dfdac6c286b38bc500154785c5982"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "84085d3acebb7191c435bce01f7c90e6561a31cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d699058e0acb8582badd4444fed31ed9126c745a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d699058e0acb8582badd4444fed31ed9126c745a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d699058e0acb8582badd4444fed31ed9126c745a", "patch": "@@ -1,3 +1,7 @@\n+2002-02-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md (ashldi_se): Re-enable.\n+\n 2002-02-26  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_encode_section_info): Examine"}, {"sha": "fdbdf089b0ccc851b83e6f59b16fc4534bc1fc60", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d699058e0acb8582badd4444fed31ed9126c745a/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d699058e0acb8582badd4444fed31ed9126c745a/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=d699058e0acb8582badd4444fed31ed9126c745a", "patch": "@@ -1597,23 +1597,20 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n }\n   [(set_attr \"type\" \"iadd,shift\")])\n \n-;; ??? The following pattern is made by combine, but earlier phases\n-;; (specifically flow) can't handle it.  This occurs in jump.c.  Deal\n-;; with this in a better way at some point.\n-;;(define_insn \"\"\n-;;  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-;;\t(sign_extend:DI\n-;;\t (subreg:SI (ashift:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n-;;\t\t\t       (match_operand:DI 2 \"const_int_operand\" \"P\"))\n-;;\t\t    0)))]\n-;;  \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 3\"\n-;;{\n-;;  if (operands[2] == const1_rtx)\n-;;    return \"addl %r1,%r1,%0\";\n-;;  else\n-;;    return \"s%P2addl %r1,0,%0\";\n-;;}\n-;;  [(set_attr \"type\" \"iadd\")])\n+(define_insn \"*ashldi_se\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t (subreg:SI (ashift:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n+\t\t\t       (match_operand:DI 2 \"const_int_operand\" \"P\"))\n+\t\t    0)))]\n+  \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 3\"\n+{\n+  if (operands[2] == const1_rtx)\n+    return \"addl %r1,%r1,%0\";\n+  else\n+    return \"s%P2addl %r1,0,%0\";\n+}\n+  [(set_attr \"type\" \"iadd\")])\n \n (define_insn \"lshrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")"}]}