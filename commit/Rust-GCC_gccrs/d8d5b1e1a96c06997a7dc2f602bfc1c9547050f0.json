{"sha": "d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhkNWIxZTFhOTZjMDY5OTdhN2RjMmY2MDJiZmMxYzk1NDcwNTBmMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-11-21T12:53:59Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-11-21T12:53:59Z"}, "message": "Do not allow insns to be scheduled before prologue insns if profiling.\n\nFrom-SVN: r2766", "tree": {"sha": "687d59a69d2b4f469115514153e4f1d67c5ab195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/687d59a69d2b4f469115514153e4f1d67c5ab195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/comments", "author": null, "committer": null, "parents": [{"sha": "28bbe06bc2a3d3a1edf1aca7e8097c2bee2655c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28bbe06bc2a3d3a1edf1aca7e8097c2bee2655c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28bbe06bc2a3d3a1edf1aca7e8097c2bee2655c2"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "8d18d6bb9d675a9ce422b2abb7ed262be68f48cc", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "patch": "@@ -4207,6 +4207,12 @@ mips_expand_prologue ()\n       if (frame_pointer_needed)\n \temit_insn (gen_movsi (frame_pointer_rtx, stack_pointer_rtx));\n     }\n+\n+  /* If we are profiling, make sure no instructions are scheduled before\n+     the call to mcount.  */\n+\n+  if (profile_flag || profile_block_flag)\n+    emit_insn (gen_blockage ());\n }\n \n \f"}, {"sha": "49c54e2becfb7e8f0121e6902659add2bd5b8d7f", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "patch": "@@ -482,7 +482,7 @@ while (0)\n \f\n /* Print subsidiary information on the compiler version in use.  */\n \n-#define MIPS_VERSION \"[AL 1.1, MM 28]\"\n+#define MIPS_VERSION \"[AL 1.1, MM 29]\"\n \n #ifndef MACHINE_TYPE\n #define MACHINE_TYPE \"BSD Mips\"\n@@ -1929,6 +1929,12 @@ typedef struct mips_args {\n   fprintf (FILE, \"\\t.set\\tat\\n\");\t\t\t\t\t\\\n }\n \n+/* Define this macro if the code for function profiling should come\n+   before the function prologue.  Normally, the profiling code comes\n+   after.  */\n+\n+/* #define PROFILE_BEFORE_PROLOGUE */\n+\n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n    the stack pointer does not matter.  The value is tested only in\n    functions that have frame pointers."}, {"sha": "1e40306a9940a4ee40f07d1c841b50ee7bad3b65", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=d8d5b1e1a96c06997a7dc2f602bfc1c9547050f0", "patch": "@@ -4003,6 +4003,18 @@ move\\\\t%0,%z4\\\\n\\\\\n     }\n }\")\n \n+;; Block any insns from being moved before this point, since the\n+;; profiling call to mcount can use various registers that aren't\n+;; saved or used to pass arguments.\n+\n+(define_insn \"blockage\"\n+  [(unspec_volatile [(const_int 0)] 0)]\n+  \"\"\n+  \"\"\n+  [(set_attr \"type\"\t\"unknown\")\n+   (set_attr \"mode\"\t\"none\")\n+   (set_attr \"length\"\t\"0\")])\n+\n ;; At present, don't expand the epilogue, reorg.c will clobber the\n ;; return register in compiling gen_lowpart (emit-rtl.c).\n ;; "}]}