{"sha": "346ecba81ddd1a8555ca5704cbc484144e71f860", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ2ZWNiYTgxZGRkMWE4NTU1Y2E1NzA0Y2JjNDg0MTQ0ZTcxZjg2MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-01-06T18:17:14Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-01-06T18:17:14Z"}, "message": "re PR fortran/34658 (save / common)\n\n2007-01-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34658\n        * match.c (gfc_match_common): Remove blank common in\n        DATA BLOCK warning.\n        * resolve.c (resolve_common_vars): New function.\n        (resolve_common_blocks): Move checks to resolve_common_vars\n        and invoke that function.\n        (resolve_types): Call resolve_common_vars for blank commons.\n\n2007-01-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34658\n        * gfortran.dg/common_11.f90: New.\n        * gfortran.dg/blockdata_1.f90: Update test case.\n        * gfortran.dg/blockdata_2.f90: Update test case.\n\nFrom-SVN: r131355", "tree": {"sha": "755c332e1253a3663ea68c8f58fe8cb64596b09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/755c332e1253a3663ea68c8f58fe8cb64596b09c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/346ecba81ddd1a8555ca5704cbc484144e71f860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346ecba81ddd1a8555ca5704cbc484144e71f860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/346ecba81ddd1a8555ca5704cbc484144e71f860", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346ecba81ddd1a8555ca5704cbc484144e71f860/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "caa42d865f3ad3bd6986145a5e2e6597cacbcb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa42d865f3ad3bd6986145a5e2e6597cacbcb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caa42d865f3ad3bd6986145a5e2e6597cacbcb48"}], "stats": {"total": 104, "additions": 84, "deletions": 20}, "files": [{"sha": "f7b85b0673110eac514489ab0c571bf5929582c7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -1,3 +1,13 @@\n+2007-01-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34658\n+\t* match.c (gfc_match_common): Remove blank common in\n+\tDATA BLOCK warning.\n+\t* resolve.c (resolve_common_vars): New function.\n+\t(resolve_common_blocks): Move checks to resolve_common_vars\n+\tand invoke that function.\n+\t(resolve_types): Call resolve_common_vars for blank commons.\n+\n 2008-01-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34655"}, {"sha": "9a9ed8a41cb40c9807796fc8f5f79c8f6236ed8a", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -2784,11 +2784,6 @@ gfc_match_common (void)\n \n       if (name[0] == '\\0')\n \t{\n-\t  if (gfc_current_ns->is_block_data)\n-\t    {\n-\t      gfc_warning (\"BLOCK DATA unit cannot contain blank COMMON \"\n-\t\t\t   \"at %C\");\n-\t    }\n \t  t = &gfc_current_ns->blank_common;\n \t  if (t->head == NULL)\n \t    t->where = gfc_current_locus;"}, {"sha": "0f96cd6eb75c56c9e89870c5e5eedec5af4409cd", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 35, "deletions": 13, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -646,23 +646,27 @@ has_default_initializer (gfc_symbol *der)\n   return c != NULL;\n }\n \n-\n-/* Resolve common blocks.  */\n+/* Resolve common variables.  */\n static void\n-resolve_common_blocks (gfc_symtree *common_root)\n+resolve_common_vars (gfc_symbol *sym, bool named_common)\n {\n-  gfc_symbol *sym, *csym;\n-\n-  if (common_root == NULL)\n-    return;\n+  gfc_symbol *csym = sym;\n \n-  if (common_root->left)\n-    resolve_common_blocks (common_root->left);\n-  if (common_root->right)\n-    resolve_common_blocks (common_root->right);\n-\n-  for (csym = common_root->n.common->head; csym; csym = csym->common_next)\n+  for (; csym; csym = csym->common_next)\n     {\n+      if (csym->value || csym->attr.data)\n+\t{\n+\t  if (!csym->ns->is_block_data)\n+\t    gfc_notify_std (GFC_STD_GNU, \"Variable '%s' at %L is in COMMON \"\n+\t\t\t    \"but only in BLOCK DATA initialization is \"\n+\t\t\t    \"allowed\", csym->name, &csym->declared_at);\n+\t  else if (!named_common)\n+\t    gfc_notify_std (GFC_STD_GNU, \"Initialized variable '%s' at %L is \"\n+\t\t\t    \"in a blank COMMON but initialization is only \"\n+\t\t\t    \"allowed in named common blocks\", csym->name,\n+\t\t\t    &csym->declared_at);\n+\t}\n+\n       if (csym->ts.type != BT_DERIVED)\n \tcontinue;\n \n@@ -680,6 +684,23 @@ resolve_common_blocks (gfc_symtree *common_root)\n \t\t       \"may not have default initializer\", csym->name,\n \t\t       &csym->declared_at);\n     }\n+}\n+\n+/* Resolve common blocks.  */\n+static void\n+resolve_common_blocks (gfc_symtree *common_root)\n+{\n+  gfc_symbol *sym;\n+\n+  if (common_root == NULL)\n+    return;\n+\n+  if (common_root->left)\n+    resolve_common_blocks (common_root->left);\n+  if (common_root->right)\n+    resolve_common_blocks (common_root->right);\n+\n+  resolve_common_vars (common_root->n.common->head, true);\n \n   gfc_find_symbol (common_root->name, gfc_current_ns, 0, &sym);\n   if (sym == NULL)\n@@ -8939,6 +8960,7 @@ resolve_types (gfc_namespace *ns)\n \n   resolve_entries (ns);\n \n+  resolve_common_vars (ns->blank_common.head, false);\n   resolve_common_blocks (ns->common_root);\n \n   resolve_contained_functions (ns);"}, {"sha": "f59e8aa831630375b28db24ef3acff4b6468fcda", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -1,3 +1,10 @@\n+2007-01-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34658\n+\t* gfortran.dg/common_11.f90: New.\n+\t* gfortran.dg/blockdata_1.f90: Update test case.\n+\t* gfortran.dg/blockdata_2.f90: Update test case.\n+\n 2008-01-06  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/equiv_constraint_9.f90: Fix typo."}, {"sha": "74910c4d49ff74b2b2f623276a360c357d0df229", "filename": "gcc/testsuite/gfortran.dg/blockdata_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_1.f90?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -14,7 +14,7 @@\n \n block data d2\n  common /b/ u\n- common j ! { dg-warning \"cannot contain blank COMMON\" }\n+ common j ! { dg-warning \"blank COMMON but initialization is only allowed in named common\" }\n  data j /1/\n end block data d2\n !"}, {"sha": "b4badbaf7bc08c09281cc7e9ed91a86ac35c027c", "filename": "gcc/testsuite/gfortran.dg/blockdata_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_2.f90?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -3,6 +3,6 @@\n ! proc_name from an unnamed block data which we intended to use as locus\n ! for a blank common.\n block data\n-  common c ! { dg-warning \"cannot contain blank COMMON\" }\n+  common c\n end !block data\n end"}, {"sha": "ec01515cbe757cd45b54e4b8eceff3d962cded93", "filename": "gcc/testsuite/gfortran.dg/common_11.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346ecba81ddd1a8555ca5704cbc484144e71f860/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_11.f90?ref=346ecba81ddd1a8555ca5704cbc484144e71f860", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+!\n+! PR fortran/34658\n+!\n+! Check for more COMMON constrains\n+!\n+block data\n+  implicit none\n+  integer :: x, a  ! { dg-warning \"Initialized variable 'a' at .1. is in a blank COMMON\" }\n+  integer :: y = 5, b = 5 ! { dg-warning \"Initialized variable 'b' at .1. is in a blank COMMON\" }\n+  data x/5/, a/5/\n+  common // a, b\n+  common /a/ x, y\n+end block data\n+\n+subroutine foo()\n+  implicit none\n+  type t\n+    sequence\n+    integer :: i = 5\n+  end type t\n+  type(t) x ! { dg-error \"may not have default initializer\" }\n+  common // x\n+end subroutine foo\n+\n+program test\n+  implicit none\n+  common /a/ I ! { dg-warning \"in COMMON but only in BLOCK DATA initialization\" }\n+  integer :: I = 43\n+end program test"}]}