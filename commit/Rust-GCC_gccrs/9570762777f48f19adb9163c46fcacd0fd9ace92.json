{"sha": "9570762777f48f19adb9163c46fcacd0fd9ace92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3MDc2Mjc3N2Y0OGYxOWFkYjkxNjNjNDZmY2FjZDBmZDlhY2U5Mg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-04-20T14:40:04Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-04-20T14:40:04Z"}, "message": "final.c (shorten_branches, [...]): Move code to free label_align...\n\n\t* final.c (shorten_branches, init_insn_lengths): Move code\n\tto free label_align, uid_shuid, insn_lengths, insn_addresses\n\tand uid_align from the former function into the latter one;\n\tAdd code to clear these variables.\n\t* sh.h (label_align): Remove declaration.\n\nFrom-SVN: r19344", "tree": {"sha": "4d2fe114588250d53f3959245b785d5909675bd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d2fe114588250d53f3959245b785d5909675bd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9570762777f48f19adb9163c46fcacd0fd9ace92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9570762777f48f19adb9163c46fcacd0fd9ace92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9570762777f48f19adb9163c46fcacd0fd9ace92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9570762777f48f19adb9163c46fcacd0fd9ace92/comments", "author": null, "committer": null, "parents": [{"sha": "2b6ede1da67e6c12e5098ad2243a5a7bca31d018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6ede1da67e6c12e5098ad2243a5a7bca31d018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b6ede1da67e6c12e5098ad2243a5a7bca31d018"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "693014dce7b3b29b49978cc157e53b08629e5057", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9570762777f48f19adb9163c46fcacd0fd9ace92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9570762777f48f19adb9163c46fcacd0fd9ace92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9570762777f48f19adb9163c46fcacd0fd9ace92", "patch": "@@ -1,3 +1,11 @@\n+Mon Apr 20 22:37:50 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+        * final.c (shorten_branches, init_insn_lengths): Move code\n+        to free label_align, uid_shuid, insn_lengths, insn_addresses\n+        and uid_align from the former function into the latter one;\n+        Add code to clear these variables.\n+        * sh.h (label_align): Remove declaration.\n+\n Mon Apr 20 14:48:29 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* gcc.c (lang_specific_driver): Declare prototype properly so"}, {"sha": "ac1a622406ed9bc57bf7b6d356c84bd7e14eee41", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9570762777f48f19adb9163c46fcacd0fd9ace92/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9570762777f48f19adb9163c46fcacd0fd9ace92/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=9570762777f48f19adb9163c46fcacd0fd9ace92", "patch": "@@ -1720,8 +1720,6 @@ extern enum machine_mode sh_addr_diff_vec_mode;\n \n extern int optimize; /* needed for gen_casesi.  */\n \n-extern short *label_align;\n-\n /* Declare functions defined in sh.c and used in templates.  */\n \n extern char *output_branch();"}, {"sha": "038de928be96aef6cabfd25fb8e802fbff51914d", "filename": "gcc/final.c", "status": "modified", "additions": 40, "deletions": 24, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9570762777f48f19adb9163c46fcacd0fd9ace92/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9570762777f48f19adb9163c46fcacd0fd9ace92/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=9570762777f48f19adb9163c46fcacd0fd9ace92", "patch": "@@ -625,12 +625,49 @@ int insn_last_address;\n /* konwn invariant alignment of insn being processed.  */\n int insn_current_align;\n \n+/* After shorten_branches, for any insn, uid_align[INSN_UID (insn)]\n+   gives the next following alignment insn that increases the known\n+   alignment, or NULL_RTX if there is no such insn.\n+   For any alignment obtained this way, we can again index uid_align with\n+   its uid to obtain the next following align that in turn increases the\n+   alignment, till we reach NULL_RTX; the sequence obtained this way\n+   for each insn we'll call the alignment chain of this insn in the following\n+   comments.  */\n+\n+rtx *uid_align;\n+int *uid_shuid;\n+short *label_align;\n+\n /* Indicate that branch shortening hasn't yet been done.  */\n \n void\n init_insn_lengths ()\n {\n-  insn_lengths = 0;\n+  if (label_align)\n+    {\n+      free (label_align);\n+      label_align = 0;\n+    }\n+  if (uid_shuid)\n+    {\n+      free (uid_shuid);\n+      uid_shuid = 0;\n+    }\n+  if (insn_lengths)\n+    {\n+      free (insn_lengths);\n+      insn_lengths = 0;\n+    }\n+  if (insn_addresses)\n+    {\n+      free (insn_addresses);\n+      insn_addresses = 0;\n+    }\n+  if (uid_align)\n+    {\n+      free (uid_align);\n+      uid_align = 0;\n+    }\n }\n \n /* Obtain the current length of an insn.  If branch shortening has been done,\n@@ -769,19 +806,6 @@ final_addr_vec_align (addr_vec)\n #define INSN_LENGTH_ALIGNMENT(INSN) length_unit_log\n #endif\n \n-/* For any insn, uid_align[INSN_UID (insn)] gives the next following\n-   alignment insn that increases the known alignment, or NULL_RTX if\n-   there is no such insn.\n-   For any alignment obtained this way, we can again index uid_align with\n-   its uid to obtain the next following align that in turn increases the\n-   alignment, till we reach NULL_RTX; the sequence obtained this way\n-   for each insn we'll call the alignment chain of this insn in the following\n-   comments.  */\n-\n-rtx *uid_align;\n-int *uid_shuid;\n-short *label_align; /* sh.c needs this to calculate constant tables.  */\n-\n #define INSN_SHUID(INSN) (uid_shuid[INSN_UID (INSN)])\n \n static int min_labelno, max_labelno;\n@@ -955,19 +979,17 @@ shorten_branches (first)\n   /* We must do some computations even when not actually shortening, in\n      order to get the alignment information for the labels.  */\n \n+  init_insn_lengths ();\n+\n   /* Compute maximum UID and allocate label_align / uid_shuid.  */\n   max_uid = get_max_uid ();\n \n   max_labelno = max_label_num ();\n   min_labelno = get_first_label_num ();\n-  if (label_align)\n-    free (label_align);\n   label_align\n     = (short*) xmalloc ((max_labelno - min_labelno + 1) * sizeof (short));\n   bzero (label_align, (max_labelno - min_labelno + 1) * sizeof (short));\n \n-  if (uid_shuid)\n-    free (uid_shuid);\n   uid_shuid = (int *) xmalloc (max_uid * sizeof *uid_shuid);\n \n   /* Initialize label_align and set up uid_shuid to be strictly\n@@ -1050,17 +1072,11 @@ shorten_branches (first)\n #ifdef HAVE_ATTR_length\n \n   /* Allocate the rest of the arrays.  */\n-  if (insn_lengths)\n-    free (insn_lengths);\n   insn_lengths = (short *) xmalloc (max_uid * sizeof (short));\n-  if (insn_addresses)\n-    free (insn_addresses);\n   insn_addresses = (int *) xmalloc (max_uid * sizeof (int));\n   /* Syntax errors can lead to labels being outside of the main insn stream.\n      Initialize insn_addresses, so that we get reproducible results.  */\n   bzero ((char *)insn_addresses, max_uid * sizeof *insn_addresses);\n-  if (uid_align)\n-    free (uid_align);\n   uid_align = (rtx *) xmalloc (max_uid * sizeof *uid_align);\n \n   varying_length = (char *) xmalloc (max_uid * sizeof (char));"}]}