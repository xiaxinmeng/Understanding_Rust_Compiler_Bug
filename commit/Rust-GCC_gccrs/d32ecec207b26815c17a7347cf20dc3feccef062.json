{"sha": "d32ecec207b26815c17a7347cf20dc3feccef062", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMyZWNlYzIwN2IyNjgxNWMxN2E3MzQ3Y2YyMGRjM2ZlY2NlZjA2Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-21T20:24:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-21T20:24:56Z"}, "message": "Fix typo.\n\nFrom-SVN: r16649", "tree": {"sha": "431db9533bc8c428547fc6825a3ac6eb9c154758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/431db9533bc8c428547fc6825a3ac6eb9c154758"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d32ecec207b26815c17a7347cf20dc3feccef062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32ecec207b26815c17a7347cf20dc3feccef062", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d32ecec207b26815c17a7347cf20dc3feccef062", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32ecec207b26815c17a7347cf20dc3feccef062/comments", "author": null, "committer": null, "parents": [{"sha": "25d5eb3f317461c48e94e96b3ae1b4ab26b2270b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d5eb3f317461c48e94e96b3ae1b4ab26b2270b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d5eb3f317461c48e94e96b3ae1b4ab26b2270b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1db541f6f010344bcea9da08fc8d47d79e0de5fc", "filename": "gcc/tree.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32ecec207b26815c17a7347cf20dc3feccef062/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32ecec207b26815c17a7347cf20dc3feccef062/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=d32ecec207b26815c17a7347cf20dc3feccef062", "patch": "@@ -461,7 +461,7 @@ DEFTREECODE (METHOD_CALL_EXPR, \"method_call_expr\", \"e\", 4)\n    call expand_start_target_temps/expand_end_target_temps, as needed.\n \n    This differs from TRY_CATCH_EXPR in that operand 2 is always\n-   evaluated when an exception isn't throw when cleanups are run.  */\n+   evaluated when an exception isn't thrown when cleanups are run.  */\n DEFTREECODE (WITH_CLEANUP_EXPR, \"with_cleanup_expr\", \"e\", 3)\n \n /* Specify a cleanup point."}]}