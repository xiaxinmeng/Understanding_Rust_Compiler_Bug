{"sha": "0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEzYWY0ZDg2Y2JjZGIyZmQxMWQ0Y2E2NTgwZjU3MmMzYmU2NzNhNg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-19T12:32:39Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-19T12:32:39Z"}, "message": "Use new TRY_FINALLY_EXPR tree node.\n\n(\nUse new TRY_FINALLY_EXPR tree node.  See ChangeLog.\n\nFrom-SVN: r25312", "tree": {"sha": "8323b78239487471cc2a47c97baf601760665089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8323b78239487471cc2a47c97baf601760665089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6/comments", "author": null, "committer": null, "parents": [{"sha": "ececaeae34c362db09b9cfb0e62de0a4af0f53ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ececaeae34c362db09b9cfb0e62de0a4af0f53ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ececaeae34c362db09b9cfb0e62de0a4af0f53ef"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "24dcc2c714c1035afaa4e437dc89af6e1da18297", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=0a3af4d86cbcdb2fd11d4ca6580f572c3be673a6", "patch": "@@ -543,7 +543,6 @@ check_init (exp, before)\n       {\n \ttree try_clause = TREE_OPERAND (exp, 0);\n \ttree clause = TREE_OPERAND (exp, 1);\n-        tree finally = TREE_OPERAND (exp, 2);\n \twords save = ALLOC_WORDS (num_current_words);\n \twords tmp = ALLOC_WORDS (num_current_words);\n \tstruct alternatives alt;\n@@ -559,17 +558,22 @@ check_init (exp, before)\n \t    check_init (catch_clause, tmp);\n \t    done_alternative (tmp, &alt);\n \t  }\n-\tif (finally != NULL_TREE)\n-\t  {\n-\t    check_init (finally, save);\n-\t    UNION (alt.combined, alt.combined, save);\n-\t  }\n \tFREE_WORDS (tmp);\n \tFREE_WORDS (save);\n \tEND_ALTERNATIVES (before, alt);\n       }\n     return;\n \n+    case TRY_FINALLY_EXPR:\n+      {\n+\twords tmp = ALLOC_WORDS (num_current_words);\n+\tCOPY (tmp, before);\n+\tcheck_init (TREE_OPERAND (exp, 0), tmp);\n+\tcheck_init (TREE_OPERAND (exp, 1), before);\n+\tFREE_WORDS (tmp);\n+      }\n+      return;\n+\n     case RETURN_EXPR:\n     case THROW_EXPR:\n       if (TREE_OPERAND (exp, 0))"}]}