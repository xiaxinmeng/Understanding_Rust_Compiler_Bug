{"sha": "e3f9e7576252e829396af6bee854f1e5a6305da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNmOWU3NTc2MjUyZTgyOTM5NmFmNmJlZTg1NGYxZTVhNjMwNWRhOQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2014-05-12T16:17:09Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2014-05-12T16:17:09Z"}, "message": "re PR fortran/60834 ([OOP] ICE with ASSOCIATE  construct (gimplify_var_or_parm_decl, at gimplify.c:1721))\n\n2014-05-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/60834\n\t* frontend-passes.c (in_assoc_list):  New variable.\n\t(optimize_namespace):  Initialize in_assoc_list\n\t(combine_array_constructor): Don't try to combine\n\tassoc lists.\n\t(gfc_code_walker):  Keep track of in_assoc_list.\n\n2014-05-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/60834\n\t* gfortran.dg/associate_16.f90:  New test.\n\nFrom-SVN: r210329", "tree": {"sha": "701f44e1967d692188338d5ad05a0d538280050d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701f44e1967d692188338d5ad05a0d538280050d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3f9e7576252e829396af6bee854f1e5a6305da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f9e7576252e829396af6bee854f1e5a6305da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f9e7576252e829396af6bee854f1e5a6305da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f9e7576252e829396af6bee854f1e5a6305da9/comments", "author": null, "committer": null, "parents": [{"sha": "bc51de9cf8fa724cb2acb81ea6d6504ac2ebbd8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc51de9cf8fa724cb2acb81ea6d6504ac2ebbd8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc51de9cf8fa724cb2acb81ea6d6504ac2ebbd8d"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "9f5ba62814308c87ebed9205c9fac1dd1bf6bb00", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e3f9e7576252e829396af6bee854f1e5a6305da9", "patch": "@@ -1,3 +1,12 @@\n+2014-05-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/60834\n+\t* frontend-passes.c (in_assoc_list):  New variable.\n+\t(optimize_namespace):  Initialize in_assoc_list\n+\t(combine_array_constructor): Don't try to combine\n+\tassoc lists.\n+\t(gfc_code_walker):  Keep track of in_assoc_list.\n+\n 2014-05-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.h (gfc_statement): Add ST_OMP_CANCEL,"}, {"sha": "564231690c80a35d10995510e60588f56e753ee9", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=e3f9e7576252e829396af6bee854f1e5a6305da9", "patch": "@@ -88,6 +88,10 @@ static int doloop_size, doloop_level;\n \n struct my_struct *evec;\n \n+/* Keep track of association lists.  */\n+\n+static bool in_assoc_list;\n+\n /* Entry point - run all passes for a namespace. */\n \n void\n@@ -820,6 +824,7 @@ optimize_namespace (gfc_namespace *ns)\n   current_ns = ns;\n   forall_level = 0;\n   iterator_level = 0;\n+  in_assoc_list = false;\n   in_omp_workshare = false;\n \n   gfc_code_walker (&ns->code, convert_do_while, dummy_expr_callback, NULL);\n@@ -1054,6 +1059,11 @@ combine_array_constructor (gfc_expr *e)\n   if (e->rank != 1)\n     return false;\n \n+  /* Don't try to combine association lists, this makes no sense\n+     and leads to an ICE.  */\n+  if (in_assoc_list)\n+    return false;\n+\n   op1 = e->value.op.op1;\n   op2 = e->value.op.op2;\n \n@@ -1940,8 +1950,17 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \n \t    case EXEC_BLOCK:\n \t      WALK_SUBCODE (co->ext.block.ns->code);\n-\t      for (alist = co->ext.block.assoc; alist; alist = alist->next)\n-\t\tWALK_SUBEXPR (alist->target);\n+\t      if (co->ext.block.assoc)\n+\t\t{\n+\t\t  bool saved_in_assoc_list = in_assoc_list;\n+\n+\t\t  in_assoc_list = true;\n+\t\t  for (alist = co->ext.block.assoc; alist; alist = alist->next)\n+\t\t    WALK_SUBEXPR (alist->target);\n+\n+\t\t  in_assoc_list = saved_in_assoc_list;\n+\t\t}\n+\n \t      break;\n \n \t    case EXEC_DO:"}, {"sha": "667ce8cfe5d05187abe482da72c3cf60a911391a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3f9e7576252e829396af6bee854f1e5a6305da9", "patch": "@@ -1,3 +1,8 @@\n+2014-05-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/60834\n+\t* gfortran.dg/associate_16.f90:  New test.\n+\n 2014-05-12  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \tPR target/60991"}, {"sha": "9129388b25bd62fd989d951b597d5ea5c32fd8a7", "filename": "gcc/testsuite/gfortran.dg/associate_16.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9e7576252e829396af6bee854f1e5a6305da9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_16.f90?ref=e3f9e7576252e829396af6bee854f1e5a6305da9", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! PR 60834 - this used to ICE.\n+\n+module m\n+  implicit none\n+  type :: t\n+    real :: diffusion=1.\n+  end type\n+contains\n+  subroutine solve(this, x)\n+    class(t), intent(in) :: this\n+    real, intent(in) :: x(:)\n+    integer :: i\n+    integer, parameter :: n(1:5)=[(i,i=1, 5)]\n+\n+    associate( nu=>this%diffusion)\n+      associate( exponential=>exp(-(x(i)-n) ))\n+        do i = 1, size(x)\n+        end do\n+      end associate\n+    end associate\n+  end subroutine solve\n+end module m"}]}