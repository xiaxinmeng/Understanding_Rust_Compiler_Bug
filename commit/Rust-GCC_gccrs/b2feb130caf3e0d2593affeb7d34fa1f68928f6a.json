{"sha": "b2feb130caf3e0d2593affeb7d34fa1f68928f6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJmZWIxMzBjYWYzZTBkMjU5M2FmZmViN2QzNGZhMWY2ODkyOGY2YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-19T21:58:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-19T21:58:28Z"}, "message": "(c89): New decl.\n\n(main): Set it to 1 if -lang-c89.\n\nFrom-SVN: r13747", "tree": {"sha": "7842784ad68ea2203be7a57d120f788fab9b1689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7842784ad68ea2203be7a57d120f788fab9b1689"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2feb130caf3e0d2593affeb7d34fa1f68928f6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2feb130caf3e0d2593affeb7d34fa1f68928f6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2feb130caf3e0d2593affeb7d34fa1f68928f6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2feb130caf3e0d2593affeb7d34fa1f68928f6a/comments", "author": null, "committer": null, "parents": [{"sha": "21c24d8861a00025be2a91906ef5f70417538422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c24d8861a00025be2a91906ef5f70417538422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c24d8861a00025be2a91906ef5f70417538422"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "8be2e98679ea45dfb61c4ba6d022e5125e78db41", "filename": "gcc/cccp.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2feb130caf3e0d2593affeb7d34fa1f68928f6a/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2feb130caf3e0d2593affeb7d34fa1f68928f6a/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=b2feb130caf3e0d2593affeb7d34fa1f68928f6a", "patch": "@@ -464,6 +464,10 @@ static int warnings_are_errors;\n \n int traditional;\n \n+/* Nonzero for the 1989 C Standard, including corrigenda and amendments.  */\n+\n+int c89;\n+\n /* Nonzero causes output not to be done,\n    but directives such as #define that have side effects\n    are still obeyed.  */\n@@ -1502,15 +1506,15 @@ main (argc, argv)\n \n       case 'l':\n \tif (! strcmp (argv[i], \"-lang-c\"))\n-\t  cplusplus = 0, cplusplus_comments = 1, objc = 0;\n+\t  cplusplus = 0, cplusplus_comments = 1, c89 = 0, objc = 0;\n \tif (! strcmp (argv[i], \"-lang-c89\"))\n-\t  cplusplus = 0, cplusplus_comments = 0, objc = 0;\n+\t  cplusplus = 0, cplusplus_comments = 0, c89 = 1, objc = 0;\n \tif (! strcmp (argv[i], \"-lang-c++\"))\n-\t  cplusplus = 1, cplusplus_comments = 1, objc = 0;\n+\t  cplusplus = 1, cplusplus_comments = 1, c89 = 0, objc = 0;\n \tif (! strcmp (argv[i], \"-lang-objc\"))\n-\t  objc = 1, cplusplus = 0, cplusplus_comments = 1;\n+\t  cplusplus = 0, cplusplus_comments = 1, c89 = 0, objc = 1;\n \tif (! strcmp (argv[i], \"-lang-objc++\"))\n-\t  objc = 1, cplusplus = 1, cplusplus_comments = 1;\n+\t  cplusplus = 1, cplusplus_comments = 1, c89 = 0, objc = 1;\n  \tif (! strcmp (argv[i], \"-lang-asm\"))\n  \t  lang_asm = 1;\n  \tif (! strcmp (argv[i], \"-lint\"))\n@@ -3061,16 +3065,17 @@ do { ip = &instack[indepth];\t\t\\\n \t  }\n \t  *obp++ = c;\n \t  /* A sign can be part of a preprocessing number\n-\t     if it follows an e.  */\n-\t  if (c == 'e' || c == 'E') {\n+\t     if it follows an `e' or `p'.  */\n+\t  if (c == 'e' || c == 'E' || c == 'p' || c == 'P') {\n \t    while (ibp[0] == '\\\\' && ibp[1] == '\\n') {\n \t      ++ip->lineno;\n \t      ibp += 2;\n \t    }\n \t    if (*ibp == '+' || *ibp == '-') {\n \t      *obp++ = *ibp++;\n-\t      /* But traditional C does not let the token go past the sign.  */\n-\t      if (traditional)\n+\t      /* But traditional C does not let the token go past the sign,\n+\t\t and C89 does not allow `p'.  */\n+\t      if (traditional || (c89 && (c == 'p' || c == 'P')))\n \t\tbreak;\n \t    }\n \t  }"}]}