{"sha": "07ead779be0eb41130c2b658ef98d6388745fab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdlYWQ3NzliZTBlYjQxMTMwYzJiNjU4ZWY5OGQ2Mzg4NzQ1ZmFiNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-03-25T08:02:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-25T08:02:14Z"}, "message": "sse-17.c: Include sse2-check.h.\n\n\t* gcc.target/i386/sse-17.c: Include sse2-check.h.\n\t(main): Change to void and rename to sse2_test.\n\t* gcc.dg/vect/costmodel/i386/i386-costmodel-vect.exp: Set\n\tdg-do-what-default to \"compile\" if SSE2 hardware is not available.\n\t* gcc.dg/vect/costmodel/i386/x86_64-costmodel-vect.exp: Ditto.\n\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-reduc-1char.c: Remove\n\txfail vect_no_int_max from \"vectorization not profitable\" check.\n\nFrom-SVN: r133504", "tree": {"sha": "1cc2ee701f590da297718e5fe9b18f574d80eedb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cc2ee701f590da297718e5fe9b18f574d80eedb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07ead779be0eb41130c2b658ef98d6388745fab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ead779be0eb41130c2b658ef98d6388745fab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ead779be0eb41130c2b658ef98d6388745fab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ead779be0eb41130c2b658ef98d6388745fab6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "598848e4d62700217e10f5d30c12fec4aa4d6edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598848e4d62700217e10f5d30c12fec4aa4d6edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598848e4d62700217e10f5d30c12fec4aa4d6edb"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "68ba56bb446ca772d0aed2b19fd768e46f0aa63f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -1,3 +1,13 @@\n+2008-03-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/sse-17.c: Include sse2-check.h.\n+\t(main): Change to void and rename to sse2_test.\n+\t* gcc.dg/vect/costmodel/i386/i386-costmodel-vect.exp: Set\n+\tdg-do-what-default to \"compile\" if SSE2 hardware is not available.\n+\t* gcc.dg/vect/costmodel/i386/x86_64-costmodel-vect.exp: Ditto.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-reduc-1char.c: Remove\n+\txfail vect_no_int_max from \"vectorization not profitable\" check.\n+\n 2008-03-24  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR middle-end/26222"}, {"sha": "5627c265523bf3929ba22d97126202a01129461f", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -3,8 +3,8 @@\n #include <stdlib.h>\n #include \"../../tree-vect.h\"\n \n-__attribute__ ((noinline))\n-void interp_pitch(float *exc, float *interp, int pitch, int len)\n+__attribute__ ((noinline)) void\n+interp_pitch(float *exc, float *interp, int pitch, int len)\n {\n    int i,k;\n    int maxj;"}, {"sha": "dbf3b035d8e62203d8db17e3649302e0c0f88354", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/i386-costmodel-vect.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fi386-costmodel-vect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fi386-costmodel-vect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fi386-costmodel-vect.exp?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -39,7 +39,11 @@ global dg-do-what-default\n set save-dg-do-what-default ${dg-do-what-default}\n \n lappend DEFAULT_VECTCFLAGS \"-msse2\"\n-set dg-do-what-default run\n+if [check_sse2_hw_available] {\n+    set dg-do-what-default run\n+} else {\n+    set dg-do-what-default compile\n+}\n \n # Initialize `dg'.\n dg-init"}, {"sha": "00e631b1366eb1f42028a781eebdebb3d9219ec9", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/spu/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fspu%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fspu%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fspu%2Fcostmodel-fast-math-vect-pr29925.c?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -3,7 +3,7 @@\n #include <stdlib.h>\n #include \"../../tree-vect.h\"\n \n-__attribute__ ((noinline)) void \n+__attribute__ ((noinline)) void\n interp_pitch(float *exc, float *interp, int pitch, int len)\n {\n    int i,k;"}, {"sha": "5627c265523bf3929ba22d97126202a01129461f", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -3,7 +3,7 @@\n #include <stdlib.h>\n #include \"../../tree-vect.h\"\n \n-__attribute__ ((noinline)) void \n+__attribute__ ((noinline)) void\n interp_pitch(float *exc, float *interp, int pitch, int len)\n {\n    int i,k;"}, {"sha": "55334fdd20df312449cc8e885542abcb3cfb840a", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-vect-reduc-1char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-reduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-reduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-reduc-1char.c?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -47,5 +47,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_int_max } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 0 \"vect\" { xfail vect_no_int_max } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 0 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "66587e1090534de3ff48226a89fe0dc8371eb012", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/x86_64-costmodel-vect.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fx86_64-costmodel-vect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fx86_64-costmodel-vect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fx86_64-costmodel-vect.exp?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -40,7 +40,11 @@ global dg-do-what-default\n set save-dg-do-what-default ${dg-do-what-default}\n \n lappend DEFAULT_VECTCFLAGS \"-msse2\"\n-set dg-do-what-default run\n+if [check_sse2_hw_available] {\n+    set dg-do-what-default run\n+} else {\n+    set dg-do-what-default compile\n+}\n \n # Initialize `dg'.\n dg-init"}, {"sha": "f7b3d0d1c27498226dd730a36dda1c404d2e5a7e", "filename": "gcc/testsuite/gcc.target/i386/sse-17.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ead779be0eb41130c2b658ef98d6388745fab6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-17.c?ref=07ead779be0eb41130c2b658ef98d6388745fab6", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -msse2\" } */\n+#include \"sse2-check.h\"\n #include <xmmintrin.h>\n extern void abort();\n int untrue = 0;\n@@ -18,13 +19,13 @@ __v4sf setupa () __attribute((noinline));\n __v4sf setupa () { __v4sf t = { 1.0, 2.0, 3.0, 4.0 }; return t; }\n __v4sf setupb () __attribute((noinline));\n __v4sf setupb () { __v4sf t = { 5.0, 6.0, 7.0, 8.0 }; return t; }\n-main() {\n+void __attribute__((noinline))\n+sse2_test(void) {\n   u a, b;\n   a.v = setupa ();\n   b.v = setupb ();\n   if (untrue)\n     bar(a.v, b.v);\n   b.v = (__v4sf) _mm_movehl_ps ((__m128)a.v, (__m128)b.v);\n   foo (a, b);\n-  return 0;\n }"}]}