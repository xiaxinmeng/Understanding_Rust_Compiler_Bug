{"sha": "f4da031c416b7a5ef3aac0ed170c0787b04a1a57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkYTAzMWM0MTZiN2E1ZWYzYWFjMGVkMTcwYzA3ODdiMDRhMWE1Nw==", "commit": {"author": {"name": "Samuel Bronson", "email": "naesten@gmail.com", "date": "2014-07-11T15:32:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-07-11T15:32:29Z"}, "message": "gdb-test.exp (gdb-test): Turn off GDB's auto-load, list loaded libs.\n\n2014-07-11  Samuel Bronson  <naesten@gmail.com>\n\n\t* testsuite/lib/gdb-test.exp (gdb-test): Turn off GDB's auto-load,\n\tlist loaded libs.\n\nFrom-SVN: r212459", "tree": {"sha": "450a2bf21ab70a3ec9c3bea0711cbca36b8c3d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/450a2bf21ab70a3ec9c3bea0711cbca36b8c3d89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4da031c416b7a5ef3aac0ed170c0787b04a1a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4da031c416b7a5ef3aac0ed170c0787b04a1a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4da031c416b7a5ef3aac0ed170c0787b04a1a57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4da031c416b7a5ef3aac0ed170c0787b04a1a57/comments", "author": {"login": "SamB", "id": 13903, "node_id": "MDQ6VXNlcjEzOTAz", "avatar_url": "https://avatars.githubusercontent.com/u/13903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamB", "html_url": "https://github.com/SamB", "followers_url": "https://api.github.com/users/SamB/followers", "following_url": "https://api.github.com/users/SamB/following{/other_user}", "gists_url": "https://api.github.com/users/SamB/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamB/subscriptions", "organizations_url": "https://api.github.com/users/SamB/orgs", "repos_url": "https://api.github.com/users/SamB/repos", "events_url": "https://api.github.com/users/SamB/events{/privacy}", "received_events_url": "https://api.github.com/users/SamB/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cd41cda09923a7c57f9bfda863455e3040b69c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd41cda09923a7c57f9bfda863455e3040b69c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd41cda09923a7c57f9bfda863455e3040b69c6"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "5aed5bac40cdfa59bbe529d183da3dc9cbdc8643", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4da031c416b7a5ef3aac0ed170c0787b04a1a57/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4da031c416b7a5ef3aac0ed170c0787b04a1a57/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f4da031c416b7a5ef3aac0ed170c0787b04a1a57", "patch": "@@ -3,6 +3,9 @@\n \t* testsuite/lib/libstdc++.exp  (libstdc++_init): Set $GCC_COLORS=\"\"\n \tinstead of insisting that GCC understand -fdiagnostics-color=never\n \n+\t* testsuite/lib/gdb-test.exp (gdb-test): Turn off GDB's auto-load,\n+\tlist loaded libs.\n+\n 2014-07-11  Samuel Bronson  <naesten@gmail.com>\n \t    Matthias Klose  <doko@ubuntu.com>\n "}, {"sha": "9cb6ecfce3922b984485acfff34ff6ec69cc1ec5", "filename": "libstdc++-v3/testsuite/lib/gdb-test.exp", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4da031c416b7a5ef3aac0ed170c0787b04a1a57/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fgdb-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4da031c416b7a5ef3aac0ed170c0787b04a1a57/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fgdb-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fgdb-test.exp?ref=f4da031c416b7a5ef3aac0ed170c0787b04a1a57", "patch": "@@ -116,10 +116,18 @@ proc gdb-test { marker {selector {}} } {\n     global gdb_tests\n \n     set fd [open $cmd_file \"w\"]\n+    # We don't want the system copy of the pretty-printers loaded\n+    puts $fd \"set auto-load no\"\n+    # Now that we've disabled auto-load, it's safe to set the target file\n+    puts $fd \"file ./$output_file\"\n+    # Load & register *our* copy of the pretty-printers\n     puts $fd \"source $pycode\"\n     puts $fd \"python register_libstdcxx_printers(None)\"\n+    # And start the program\n     puts $fd \"break $line\"\n     puts $fd \"run\"\n+    # So we can verify that we're using the right libs ...\n+    puts $fd \"info share\"\n \n     set count 0\n     foreach {var result kind} $gdb_tests {\n@@ -147,8 +155,7 @@ proc gdb-test { marker {selector {}} } {\n     puts $fd \"quit\"\n     close $fd\n \n-    send_log \"Spawning: $gdb_name -nx -nw -quiet -batch -x $cmd_file ./$output_file\\n\"\n-    set res [remote_spawn target \"$gdb_name -nx -nw -quiet -batch -x $cmd_file ./$output_file\"]\n+    set res [remote_spawn target \"$gdb_name -nx -nw -quiet -batch -x $cmd_file \"]\n     if { $res < 0 || $res == \"\" } {\n \tunsupported \"$testname\"\n \treturn"}]}