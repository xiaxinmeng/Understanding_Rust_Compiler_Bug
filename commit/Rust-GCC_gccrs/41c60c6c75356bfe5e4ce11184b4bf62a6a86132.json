{"sha": "41c60c6c75356bfe5e4ce11184b4bf62a6a86132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjNjBjNmM3NTM1NmJmZTVlNGNlMTExODRiNGJmNjJhNmE4NjEzMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-12-08T20:46:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-12-08T20:46:42Z"}, "message": "re PR lto/61886 (LTO breaks fread with _FORTIFY_SOURCE=2)\n\n\tPR ipa/61886\n\t* lto-partition.c (add_symbol_to_partition_1): Transparent aliases\n\tare not part of the definition.\n\t(contained_in_symbol): Likewise.\n\t(promote_symbol): When promoting a symbol also promote all transparent\n\taliases.\n\t(rename_statics): Weakref needs unique name, too.\n\nFrom-SVN: r231425", "tree": {"sha": "070b72d4a6f7fcdb30376fb1606827653d3cd7a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/070b72d4a6f7fcdb30376fb1606827653d3cd7a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c60c6c75356bfe5e4ce11184b4bf62a6a86132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c60c6c75356bfe5e4ce11184b4bf62a6a86132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c60c6c75356bfe5e4ce11184b4bf62a6a86132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c60c6c75356bfe5e4ce11184b4bf62a6a86132/comments", "author": null, "committer": null, "parents": [{"sha": "21fc3950f686e37785b377d44d0054b75e8e203f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21fc3950f686e37785b377d44d0054b75e8e203f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21fc3950f686e37785b377d44d0054b75e8e203f"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "5fba06a21f227fa1864425bda529becf2812027c", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c60c6c75356bfe5e4ce11184b4bf62a6a86132/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c60c6c75356bfe5e4ce11184b4bf62a6a86132/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=41c60c6c75356bfe5e4ce11184b4bf62a6a86132", "patch": "@@ -1,3 +1,13 @@\n+2015-12-08  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/61886\n+\t* lto-partition.c (add_symbol_to_partition_1): Transparent aliases\n+\tare not part of the definition.\n+\t(contained_in_symbol): Likewise.\n+\t(promote_symbol): When promoting a symbol also promote all transparent\n+\taliases.\n+\t(rename_statics): Weakref needs unique name, too.\n+\n 2015-12-07  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/61886"}, {"sha": "8d58647dfe69ca081c97341bd40296215843c946", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c60c6c75356bfe5e4ce11184b4bf62a6a86132/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c60c6c75356bfe5e4ce11184b4bf62a6a86132/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=41c60c6c75356bfe5e4ce11184b4bf62a6a86132", "patch": "@@ -177,8 +177,20 @@ add_symbol_to_partition_1 (ltrans_partition part, symtab_node *node)\n   /* Add all aliases associated with the symbol.  */\n \n   FOR_EACH_ALIAS (node, ref)\n-    if (!node->weakref)\n+    if (!ref->referring->transparent_alias)\n       add_symbol_to_partition_1 (part, ref->referring);\n+    else\n+      {\n+\tstruct ipa_ref *ref2;\n+\t/* We do not need to add transparent aliases if they are not used.\n+\t   However we must add aliases of transparent aliases if they exist.  */\n+\tFOR_EACH_ALIAS (ref->referring, ref2)\n+\t  {\n+\t    /* Nested transparent aliases are not permitted.  */\n+\t    gcc_checking_assert (!ref2->referring->transparent_alias);\n+\t    add_symbol_to_partition_1 (part, ref2->referring);\n+\t  }\n+      }\n \n   /* Ensure that SAME_COMDAT_GROUP lists all allways added in a group.  */\n   if (node->same_comdat_group)\n@@ -199,8 +211,10 @@ add_symbol_to_partition_1 (ltrans_partition part, symtab_node *node)\n static symtab_node *\n contained_in_symbol (symtab_node *node)\n {\n-  /* Weakrefs are never contained in anything.  */\n-  if (node->weakref)\n+  /* There is no need to consider transparent aliases to be part of the\n+     definition: they are only useful insite the partition they are output\n+     and thus we will always see an explicit reference to it.  */\n+  if (node->transparent_alias)\n     return node;\n   if (cgraph_node *cnode = dyn_cast <cgraph_node *> (node))\n     {\n@@ -967,14 +981,32 @@ promote_symbol (symtab_node *node)\n   TREE_PUBLIC (node->decl) = 1;\n   DECL_VISIBILITY (node->decl) = VISIBILITY_HIDDEN;\n   DECL_VISIBILITY_SPECIFIED (node->decl) = true;\n+  ipa_ref *ref;\n+\n+  /* Promoting a symbol also promotes all trasparent aliases with exception\n+     of weakref where the visibility flags are always wrong and set to \n+     !PUBLIC.  */\n+  for (unsigned i = 0; node->iterate_direct_aliases (i, ref); i++)\n+    {\n+      struct symtab_node *alias = ref->referring;\n+      if (alias->transparent_alias && !alias->weakref)\n+\t{\n+\t  TREE_PUBLIC (alias->decl) = 1;\n+\t  DECL_VISIBILITY (alias->decl) = VISIBILITY_HIDDEN;\n+\t  DECL_VISIBILITY_SPECIFIED (alias->decl) = true;\n+\t}\n+      gcc_assert (!alias->weakref || TREE_PUBLIC (alias->decl));\n+    }\n+\n   if (symtab->dump_file)\n     fprintf (symtab->dump_file,\n \t    \"Promoting as hidden: %s\\n\", node->name ());\n }\n \n /* Return true if NODE needs named section even if it won't land in the partition\n    symbol table.\n-   FIXME: we should really not use named sections for inline clones and master clones.  */\n+   FIXME: we should really not use named sections for inline clones and master\n+   clones.  */\n \n static bool\n may_need_named_section_p (lto_symtab_encoder_t encoder, symtab_node *node)\n@@ -1004,7 +1036,7 @@ rename_statics (lto_symtab_encoder_t encoder, symtab_node *node)\n   tree name = DECL_ASSEMBLER_NAME (decl);\n \n   /* See if this is static symbol. */\n-  if ((node->externally_visible\n+  if (((node->externally_visible && !node->weakref)\n       /* FIXME: externally_visible is somewhat illogically not set for\n \t external symbols (i.e. those not defined).  Remove this test\n \t once this is fixed.  */"}]}