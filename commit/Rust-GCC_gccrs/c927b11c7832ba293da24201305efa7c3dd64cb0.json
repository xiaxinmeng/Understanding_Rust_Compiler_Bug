{"sha": "c927b11c7832ba293da24201305efa7c3dd64cb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkyN2IxMWM3ODMyYmEyOTNkYTI0MjAxMzA1ZWZhN2MzZGQ2NGNiMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-11-07T12:33:20Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-11-07T12:33:20Z"}, "message": "exception.hpp: Add translation support to exception strings.\n\n2006-11-07  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/pb_ds/exception.hpp: Add translation support to\n\texception strings.\n\t* include/ext/concurrence.h: Same.\n\t* include/tr1/array: Same.\n\nFrom-SVN: r118543", "tree": {"sha": "f0f1ce3bcf668f60cfde076cd47d5c1555f3a9e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0f1ce3bcf668f60cfde076cd47d5c1555f3a9e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c927b11c7832ba293da24201305efa7c3dd64cb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c927b11c7832ba293da24201305efa7c3dd64cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c927b11c7832ba293da24201305efa7c3dd64cb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c927b11c7832ba293da24201305efa7c3dd64cb0/comments", "author": null, "committer": null, "parents": [{"sha": "aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4183d8a5177cd45be6c0514be1b1b6efe7e890"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "374fbf6a50da77efce5f344853f0ce19198b531e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c927b11c7832ba293da24201305efa7c3dd64cb0", "patch": "@@ -1,3 +1,10 @@\n+2006-11-07  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/pb_ds/exception.hpp: Add translation support to\n+\texception strings.\n+\t* include/ext/concurrence.h: Same.\n+\t* include/tr1/array: Same.\n+\n 2006-11-05  Paolo Carlini  <pcarlini@suse.de>\n \n \t* docs/html/ext/lwg-active.html, lwg-defects.html: Import Revision 45."}, {"sha": "a19ba8eef4b4f8df02fd974ce9cd492c485b3011", "filename": "libstdc++-v3/include/ext/concurrence.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h?ref=c927b11c7832ba293da24201305efa7c3dd64cb0", "patch": "@@ -93,7 +93,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       if (__gthread_active_p())\n \t{\n \t  if (__gthread_mutex_lock(&_M_mutex) != 0)\n-\t    std::__throw_runtime_error(\"__mutex::lock\");\n+\t    std::__throw_runtime_error(__N(\"__mutex::lock\"));\n \t}\n #endif\n     }\n@@ -104,7 +104,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       if (__gthread_active_p())\n \t{\n \t  if (__gthread_mutex_unlock(&_M_mutex) != 0)\n-\t    std::__throw_runtime_error(\"__mutex::unlock\");\n+\t    std::__throw_runtime_error(__N(\"__mutex::unlock\"));\n \t}\n #endif\n     }\n@@ -140,7 +140,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       if (__gthread_active_p())\n \t{\n \t  if (__gthread_recursive_mutex_lock(&_M_mutex) != 0)\n-\t    std::__throw_runtime_error(\"__recursive_mutex::lock\");\n+\t    std::__throw_runtime_error(__N(\"__recursive_mutex::lock\"));\n \t}\n #endif\n     }\n@@ -151,7 +151,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       if (__gthread_active_p())\n \t{\n \t  if (__gthread_recursive_mutex_unlock(&_M_mutex) != 0)\n-\t    std::__throw_runtime_error(\"__recursive_mutex::unlock\");\n+\t    std::__throw_runtime_error(__N(\"__recursive_mutex::unlock\"));\n \t}\n #endif\n     }"}, {"sha": "4d1b053945695bde77736836f3bcf3efafc711bd", "filename": "libstdc++-v3/include/ext/pb_ds/exception.hpp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fexception.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fexception.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fexception.hpp?ref=c927b11c7832ba293da24201305efa7c3dd64cb0", "patch": "@@ -54,7 +54,8 @@ namespace pb_ds\n   // Base class for exceptions.\n   struct container_error : public std::logic_error\n   {\n-    container_error() : std::logic_error(\"data structure exception\") { }\n+    container_error() \n+    : std::logic_error(__N(\"policy based data structure exception\")) { }\n   };\n \n   // An entry cannot be inserted into a container object for logical"}, {"sha": "adf0e76c248858a4fbe3d07318ccefcb00ab1f8f", "filename": "libstdc++-v3/include/tr1/array", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c927b11c7832ba293da24201305efa7c3dd64cb0/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray?ref=c927b11c7832ba293da24201305efa7c3dd64cb0", "patch": "@@ -164,7 +164,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n         _M_at(size_type __n)\n         {\n \t  if (__builtin_expect(__n >= _Mm, false))\n-\t    std::__throw_out_of_range(\"array::_M_at\");\n+\t    std::__throw_out_of_range(__N(\"array::_M_at\"));\n \t  return _M_instance[__n];\n \t}\n \n@@ -173,7 +173,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n         typename __gnu_cxx::__enable_if<!_Mm, reference>::__type\n         _M_at(size_type)\n         {\n-\t  std::__throw_out_of_range(\"array::_M_at\");\n+\t  std::__throw_out_of_range(__N(\"array::_M_at\"));\n \t  return _M_instance[0];\n \t}\n \n@@ -182,15 +182,15 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n         _M_at(size_type __n) const\n         {\n \t  if (__builtin_expect(__n >= _Mm, false))\n-\t    std::__throw_out_of_range(\"array::_M_at\");\n+\t    std::__throw_out_of_range(__N(\"array::_M_at\"));\n \t  return _M_instance[__n];\n \t}\n \n       template<std::size_t _Mm>\n         typename __gnu_cxx::__enable_if<!_Mm, const_reference>::__type\n         _M_at(size_type) const\n         {\n-\t  std::__throw_out_of_range(\"array::_M_at\");\n+\t  std::__throw_out_of_range(__N(\"array::_M_at\"));\n \t  return _M_instance[0];\n \t}     \n     };"}]}