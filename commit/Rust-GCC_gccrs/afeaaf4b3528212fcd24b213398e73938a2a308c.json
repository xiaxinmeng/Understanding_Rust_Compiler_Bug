{"sha": "afeaaf4b3528212fcd24b213398e73938a2a308c", "node_id": "C_kwDOANBUbNoAKGFmZWFhZjRiMzUyODIxMmZjZDI0YjIxMzM5OGU3MzkzOGEyYTMwOGM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-26T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-26T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "5e67bd92e86f56285824d644ba5d0887f8b952fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e67bd92e86f56285824d644ba5d0887f8b952fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afeaaf4b3528212fcd24b213398e73938a2a308c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afeaaf4b3528212fcd24b213398e73938a2a308c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afeaaf4b3528212fcd24b213398e73938a2a308c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afeaaf4b3528212fcd24b213398e73938a2a308c/comments", "author": null, "committer": null, "parents": [{"sha": "f62115c9b770a66c5378f78a2d5866243d560573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62115c9b770a66c5378f78a2d5866243d560573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62115c9b770a66c5378f78a2d5866243d560573"}], "stats": {"total": 148, "additions": 147, "deletions": 1}, "files": [{"sha": "f3c470370355b670aa9cf148b779059f8662a100", "filename": "gcc/ChangeLog", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeaaf4b3528212fcd24b213398e73938a2a308c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeaaf4b3528212fcd24b213398e73938a2a308c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afeaaf4b3528212fcd24b213398e73938a2a308c", "patch": "@@ -1,3 +1,91 @@\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/104675\n+\t* match.pd (t * 2U / 2 -> t & (~0 / 2), t / 2U * 2 -> t & ~1):\n+\tRestrict simplifications to INTEGRAL_TYPE_P.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104681\n+\t* config/rs6000/vector.md (movmisalign<mode>): Use rs6000_emit_move.\n+\n+2022-02-25  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.cc (gen_compare_reg): Return NULL_RTX if the\n+\tcomparison is not valid.\n+\t* config/arc/arc.md (movsicc): Fail if comparison is not valid.\n+\t(movdicc): Likewise.\n+\t(movsfcc): Likewise.\n+\t(movdfcc): Likewise.\n+\n+2022-02-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103037\n+\t* tree-ssa-sccvn.h (alloc_vn_nary_op_noinit): Declare.\n+\t(vn_nary_length_from_stmt): Likewise.\n+\t(init_vn_nary_op_from_stmt): Likewise.\n+\t(vn_nary_op_compute_hash): Likewise.\n+\t* tree-ssa-sccvn.cc (alloc_vn_nary_op_noinit): Export.\n+\t(vn_nary_length_from_stmt): Likewise.\n+\t(init_vn_nary_op_from_stmt): Likewise.\n+\t(vn_nary_op_compute_hash): Likewise.\n+\t* tree-ssa-pre.cc (pre_expr_obstack): New obstack.\n+\t(get_or_alloc_expr_for_nary): Pass in the value-id to use,\n+\t(re-)compute the hash value and if the expression is not\n+\tfound allocate it from pre_expr_obstack.\n+\t(phi_translate_1): Do not insert the NARY found in the\n+\tVN tables but build a PRE expression from the valueized\n+\tNARY with the value-id we eventually found.\n+\t(find_or_generate_expression): Assert we have an entry\n+\tfor constant values.\n+\t(compute_avail): Insert not valueized expressions into\n+\tEXP_GEN using the value-id from the VN tables.\n+\t(init_pre): Allocate pre_expr_obstack.\n+\t(fini_pre): Free pre_expr_obstack.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104674\n+\t* config/i386/i386.h (enum ix86_stack_slot): Add SLOT_FLOATxFDI_387.\n+\t* config/i386/i386.md (splitter to floatdi<mode>2_i387_with_xmm): Use\n+\tSLOT_FLOATxFDI_387 rather than SLOT_TEMP.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* warning-control.cc (get_nowarn_spec): Comment spelling fix.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/104679\n+\t* internal-fn.cc (expand_SPACESHIP): Call do_pending_stack_adjust.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/104675\n+\t* match.pd (-A - 1 -> ~A, -1 - A -> ~A): Don't simplify for\n+\tCOMPLEX_TYPE.\n+\n+2022-02-25  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR target/104121\n+\tPR target/103302\n+\t* expr.cc (emit_move_multi_word): Restore clobbers during LRA.\n+\n+2022-02-25  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR middle-end/104540\n+\t* dwarf2cfi.cc (cfi_oprnd_equal_p): Cope with NULL\n+\tdw_cfi_cfa_loc.\n+\n+2022-02-25  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR tree-optimization/103856\n+\t* gimple-harden-conditionals.cc (non_eh_succ_edge): Enable the\n+\teh edge to be requested through an extra parameter.\n+\t(pass_harden_compares::execute): Copy PHI args in the EH dest\n+\tblock for the new EH edge added for the inverted compare.\n+\n 2022-02-24  Palmer Dabbelt  <palmer@rivosinc.com>\n \n \t* doc/invoke.texi (RISC-V -mcmodel=medany): Document the degree"}, {"sha": "fd6486afaf5b231c673265f6a455a70bfdfee035", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeaaf4b3528212fcd24b213398e73938a2a308c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeaaf4b3528212fcd24b213398e73938a2a308c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=afeaaf4b3528212fcd24b213398e73938a2a308c", "patch": "@@ -1 +1 @@\n-20220225\n+20220226"}, {"sha": "e6b856ea16bbd8d70992cbf87732805fddf8c06c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeaaf4b3528212fcd24b213398e73938a2a308c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeaaf4b3528212fcd24b213398e73938a2a308c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=afeaaf4b3528212fcd24b213398e73938a2a308c", "patch": "@@ -1,3 +1,61 @@\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/104675\n+\t* gcc.dg/pr104675-3.c : New test.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104681\n+\t* g++.dg/opt/pr104681.C: New test.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/pr104540.C: Move to ...\n+\t* g++.target/i386/pr104540.C: ... here.\n+\n+2022-02-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/104687\n+\t* gcc.dg/lto/20090717_0.c: Fix asan error.\n+\n+2022-02-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103037\n+\t* gcc.dg/torture/pr103037.c: New testcase.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104674\n+\t* gcc.target/i386/pr104674.c: New test.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/104679\n+\t* g++.dg/torture/pr104679.C: New test.\n+\n+2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/104675\n+\t* gcc.dg/pr104675-1.c: New test.\n+\t* gcc.dg/pr104675-2.c: New test.\n+\n+2022-02-25  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR tree-optimization/103845\n+\tPR tree-optimization/104263\n+\t* gcc.dg/pr103845.c: New.\n+\n+2022-02-25  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR middle-end/104540\n+\t* g++.dg/pr104540.C: New.\n+\n+2022-02-25  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR tree-optimization/103856\n+\t* g++.dg/pr103856.C: New.\n+\n 2022-02-24  Pat Haugen  <pthaugen@linux.ibm.com>\n \n \tPR testsuite/100407"}]}