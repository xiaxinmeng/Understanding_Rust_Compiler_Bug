{"sha": "34e646226fd083e18ae6e07a9ceb18e59bc20077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRlNjQ2MjI2ZmQwODNlMThhZTZlMDdhOWNlYjE4ZTU5YmMyMDA3Nw==", "commit": {"author": {"name": "Giuliano Belinassi", "email": "giuliano.belinassi@usp.br", "date": "2019-07-22T21:41:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-07-22T21:41:48Z"}, "message": "cgraph.c (dump_graphviz): New function.\n\n\t* cgraph.c (dump_graphviz): New function.\n\t* cgraph.h (dump_graphviz): New function.\n\t* symtab.c (dump_graphviz): New function.\n\n\t* lang.opt (flag_dump_callgraph): New flag.\n\t* lto-dump.c (dump_symtab_graphviz): New function.\n\t(dump_tool_help): New option.\n\t(lto_main): Handle graphviz dumping.\n\nFrom-SVN: r273708", "tree": {"sha": "fabbe280337e8b915b1ca035a02bb3ab20bbe573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fabbe280337e8b915b1ca035a02bb3ab20bbe573"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34e646226fd083e18ae6e07a9ceb18e59bc20077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34e646226fd083e18ae6e07a9ceb18e59bc20077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34e646226fd083e18ae6e07a9ceb18e59bc20077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34e646226fd083e18ae6e07a9ceb18e59bc20077/comments", "author": null, "committer": null, "parents": [{"sha": "2ac8e32236d0fe6c07545ab0e275403af4a63710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac8e32236d0fe6c07545ab0e275403af4a63710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac8e32236d0fe6c07545ab0e275403af4a63710"}], "stats": {"total": 110, "additions": 90, "deletions": 20}, "files": [{"sha": "eda95a0ac2016937db34deafd989067e1a0e8ec4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -1,3 +1,9 @@\n+2019-07-02  Giuliano Belinassi  <giuliano.belinassi@usp.br>\n+\n+\t* cgraph.c (dump_graphviz): New function.\n+\t* cgraph.h (dump_graphviz): New function.\n+\t* symtab.c (dump_graphviz): New function.\n+\n 2019-07-22  Sylvia Taylor  <sylvia.taylor@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "477db385c967b0297f3ff3638dadd9ae7c32b4cb", "filename": "gcc/cgraph.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -2204,6 +2204,22 @@ cgraph_node::dump (FILE *f)\n     }\n }\n \n+/* Dump call graph node to file F in graphviz format.  */\n+\n+void\n+cgraph_node::dump_graphviz (FILE *f)\n+{\n+  cgraph_edge *edge;\n+\n+  for (edge = callees; edge; edge = edge->next_callee)\n+    {\n+      cgraph_node *callee = edge->callee;\n+\n+      fprintf (f, \"\\t\\\"%s\\\" -> \\\"%s\\\"\\n\", name (), callee->name ());\n+    }\n+}\n+\n+\n /* Dump call graph node NODE to stderr.  */\n \n DEBUG_FUNCTION void"}, {"sha": "a7c97de9ff7f6ce974a1cc082f2e6c604f368764", "filename": "gcc/cgraph.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -135,6 +135,9 @@ struct GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"),\n   /* Dump symtab node to F.  */\n   void dump (FILE *f);\n \n+  /* Dump symtab callgraph in graphviz format.  */\n+  void dump_graphviz (FILE *f);\n+\n   /* Dump symtab node to stderr.  */\n   void DEBUG_FUNCTION debug (void);\n \n@@ -1106,6 +1109,9 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n   /* Dump call graph node to file F.  */\n   void dump (FILE *f);\n \n+  /* Dump call graph node to file F.  */\n+  void dump_graphviz (FILE *f);\n+\n   /* Dump call graph node to stderr.  */\n   void DEBUG_FUNCTION debug (void);\n \n@@ -2282,6 +2288,9 @@ class GTY((tag (\"SYMTAB\"))) symbol_table\n   /* Dump symbol table to F.  */\n   void dump (FILE *f);\n \n+  /* Dump symbol table to F in graphviz format.  */\n+  void dump_graphviz (FILE *f);\n+\n   /* Dump symbol table to stderr.  */\n   void DEBUG_FUNCTION debug (void);\n "}, {"sha": "c18b2c47cc1d6c4042e53d69687bbfa371925ffa", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Giuliano Belinassi  <giuliano.belinassi@usp.br>\n+\n+\t* lang.opt (flag_dump_callgraph): New flag.\n+\t* lto-dump.c (dump_symtab_graphviz): New function.\n+\t(dump_tool_help): New option.\n+\t(lto_main): Handle graphviz dumping.\n+\n 2019-07-18  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-common.c (gimple_register_canonical_type_1): Do not look for"}, {"sha": "c62dd5aac08522ca46442b8a8e68a91d155cfc55", "filename": "gcc/lto/lang.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Flto%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Flto%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flang.opt?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -127,6 +127,9 @@ help\n LTODump Var(flag_lto_dump_tool_help)\n Dump the dump tool command line options.\n \n+callgraph\n+LTODump Var(flag_dump_callgraph)\n+Dump the symtab callgraph.\n \n fresolution=\n LTO Joined"}, {"sha": "74d99b5f0f45400dfa28b2af390daf25c6ada333", "filename": "gcc/lto/lto-dump.c", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Flto%2Flto-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Flto%2Flto-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-dump.c?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -215,6 +215,12 @@ void dump_list_variables (void)\n     }\n }\n \n+/* Dump symbol table in graphviz format.  */\n+void dump_symtab_graphviz (void)\n+{\n+  symtab->dump_graphviz (stdout);\n+}\n+\n /* Dump symbol list.  */\n \n void dump_list (void)\n@@ -269,26 +275,27 @@ void dump_body ()\n /* List of command line options for dumping.  */\n void dump_tool_help ()\n {\n-  printf (\"Usage: lto-dump [OPTION]... SUB_COMMAND [OPTION]...\\n\\n\");\n-  printf (\"LTO dump tool command line options.\\n\\n\");\n-  printf (\"  -list [options]           Dump the symbol list.\\n\");\n-  printf (\"    -demangle               Dump the demangled output.\\n\");\n-  printf (\"    -defined-only           Dump only the defined symbols.\\n\");\n-  printf (\"    -print-value            Dump initial values of the \"\n-\t  \"variables.\\n\");\n-  printf (\"    -name-sort              Sort the symbols alphabetically.\\n\");\n-  printf (\"    -size-sort              Sort the symbols according to size.\\n\");\n-  printf (\"    -reverse-sort           Dump the symbols in reverse order.\\n\");\n-  printf (\"  -symbol=                  Dump the details of specific symbol.\\n\");\n-  printf (\"  -objects                  Dump the details of LTO objects.\\n\");\n-  printf (\"  -type-stats               Dump statistics of tree types.\\n\");\n-  printf (\"  -tree-stats               Dump statistics of trees.\\n\");\n-  printf (\"  -gimple-stats             Dump statistics of gimple \"\n-\t  \"statements.\\n\");\n-  printf (\"  -dump-body=               Dump the specific gimple body.\\n\");\n-  printf (\"  -dump-level=              Deciding the optimization level \"\n-\t  \"of body.\\n\");\n-  printf (\"  -help                     Display the dump tool help.\\n\");\n+  const char *msg =\n+    \"Usage: lto-dump [OPTION]... SUB_COMMAND [OPTION]...\\n\\n\"\n+    \"LTO dump tool command line options.\\n\\n\"\n+    \"  -list [options]           Dump the symbol list.\\n\"\n+    \"    -demangle               Dump the demangled output.\\n\"\n+    \"    -defined-only           Dump only the defined symbols.\\n\"\n+    \"    -print-value            Dump initial values of the variables.\\n\"\n+    \"    -name-sort              Sort the symbols alphabetically.\\n\"\n+    \"    -size-sort              Sort the symbols according to size.\\n\"\n+    \"    -reverse-sort           Dump the symbols in reverse order.\\n\"\n+    \"  -symbol=                  Dump the details of specific symbol.\\n\"\n+    \"  -objects                  Dump the details of LTO objects.\\n\"\n+    \"  -callgraph                Dump the callgraph in graphviz format.\\n\"\n+    \"  -type-stats               Dump statistics of tree types.\\n\"\n+    \"  -tree-stats               Dump statistics of trees.\\n\"\n+    \"  -gimple-stats             Dump statistics of gimple statements.\\n\"\n+    \"  -dump-body=               Dump the specific gimple body.\\n\"\n+    \"  -dump-level=              Deciding the optimization level of body.\\n\"\n+    \"  -help                     Display the dump tool help.\\n\";\n+\n+  fputs (msg, stdout);\n   return;\n }\n \n@@ -362,4 +369,9 @@ lto_main (void)\n       dump_body ();\n       return;\n     }\n+  else if (flag_dump_callgraph)\n+    {\n+      dump_symtab_graphviz ();\n+      return;\n+    }\n }"}, {"sha": "63e2820eb93b51fe7e11a0e5b78fa02ce455ef5c", "filename": "gcc/symtab.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e646226fd083e18ae6e07a9ceb18e59bc20077/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=34e646226fd083e18ae6e07a9ceb18e59bc20077", "patch": "@@ -955,6 +955,13 @@ symtab_node::dump (FILE *f)\n     vnode->dump (f);\n }\n \n+void\n+symtab_node::dump_graphviz (FILE *f)\n+{\n+  if (cgraph_node *cnode = dyn_cast <cgraph_node *> (this))\n+    cnode->dump_graphviz (f);\n+}\n+\n void\n symbol_table::dump (FILE *f)\n {\n@@ -964,6 +971,16 @@ symbol_table::dump (FILE *f)\n     node->dump (f);\n }\n \n+void\n+symbol_table::dump_graphviz (FILE *f)\n+{\n+  symtab_node *node;\n+  fprintf (f, \"digraph symtab {\\n\");\n+  FOR_EACH_SYMBOL (node)\n+    node->dump_graphviz (f);\n+  fprintf (f, \"}\\n\");\n+}\n+\n DEBUG_FUNCTION void\n symbol_table::debug (void)\n {"}]}