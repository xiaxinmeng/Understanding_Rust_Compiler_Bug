{"sha": "6e46ab25d4b257be152420fc71ce58b76d7b033e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0NmFiMjVkNGIyNTdiZTE1MjQyMGZjNzFjZTU4Yjc2ZDdiMDMzZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-01-18T20:04:59Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-01-18T20:04:59Z"}, "message": "builtins.c (expand_builtin_expect_jump): Fix thinko of reusing live \"next\" variable, which can lead to an infinite loop.\n\n\n\t* builtins.c (expand_builtin_expect_jump): Fix thinko of reusing\n\tlive \"next\" variable, which can lead to an infinite loop.\n\nFrom-SVN: r76111", "tree": {"sha": "6b199a82523b528d9de5ea680ad44a33702fe2c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b199a82523b528d9de5ea680ad44a33702fe2c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e46ab25d4b257be152420fc71ce58b76d7b033e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e46ab25d4b257be152420fc71ce58b76d7b033e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e46ab25d4b257be152420fc71ce58b76d7b033e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e46ab25d4b257be152420fc71ce58b76d7b033e/comments", "author": null, "committer": null, "parents": [{"sha": "b4be9e8e86ef2580b079b0ccf3d439af93cb2faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4be9e8e86ef2580b079b0ccf3d439af93cb2faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4be9e8e86ef2580b079b0ccf3d439af93cb2faa"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "922bbb90668716ad90b099e698c539cf62b6dfcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e46ab25d4b257be152420fc71ce58b76d7b033e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e46ab25d4b257be152420fc71ce58b76d7b033e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e46ab25d4b257be152420fc71ce58b76d7b033e", "patch": "@@ -1,3 +1,8 @@\n+2004-01-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.c (expand_builtin_expect_jump): Fix thinko of reusing\n+\tlive \"next\" variable, which could lead to an infinite loop.\n+\n 2004-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* config/rs6000/altivec.h: Wrap C++ functions in extern \"C++\""}, {"sha": "3174e75cea2fce9943d08ccbaf0b0d95bd2f2478", "filename": "gcc/builtins.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e46ab25d4b257be152420fc71ce58b76d7b033e/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e46ab25d4b257be152420fc71ce58b76d7b033e/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=6e46ab25d4b257be152420fc71ce58b76d7b033e", "patch": "@@ -4458,7 +4458,7 @@ expand_builtin_expect_jump (tree exp, rtx if_false_label, rtx if_true_label)\n   if (TREE_CODE (TREE_TYPE (arg1)) == INTEGER_TYPE\n       && (integer_zerop (arg1) || integer_onep (arg1)))\n     {\n-      rtx insn, drop_through_label;\n+      rtx insn, drop_through_label, temp;\n \n       /* Expand the jump insns.  */\n       start_sequence ();\n@@ -4511,13 +4511,15 @@ expand_builtin_expect_jump (tree exp, rtx if_false_label, rtx if_true_label)\n \n \t\t  if (next && GET_CODE (next) == JUMP_INSN\n \t\t      && any_uncondjump_p (next))\n-\t\t    next = XEXP (SET_SRC (pc_set (next)), 0);\n+\t\t    temp = XEXP (SET_SRC (pc_set (next)), 0);\n+\t\t  else\n+\t\t    temp = next;\n \n-\t\t  /* NEXT is either a CODE_LABEL, NULL_RTX or something\n+\t\t  /* TEMP is either a CODE_LABEL, NULL_RTX or something\n \t\t     else that can't possibly match either target label.  */\n-\t\t  if (next == if_false_label)\n+\t\t  if (temp == if_false_label)\n \t\t    taken = 1;\n-\t\t  else if (next == if_true_label)\n+\t\t  else if (temp == if_true_label)\n \t\t    taken = 0;\n \t\t}\n \t      else if (then_dest == pc_rtx)\n@@ -4527,11 +4529,13 @@ expand_builtin_expect_jump (tree exp, rtx if_false_label, rtx if_true_label)\n \n \t\t  if (next && GET_CODE (next) == JUMP_INSN\n \t\t      && any_uncondjump_p (next))\n-\t\t    next = XEXP (SET_SRC (pc_set (next)), 0);\n+\t\t    temp = XEXP (SET_SRC (pc_set (next)), 0);\n+\t\t  else\n+\t\t    temp = next;\n \n-\t\t  if (next == if_false_label)\n+\t\t  if (temp == if_false_label)\n \t\t    taken = 0;\n-\t\t  else if (next == if_true_label)\n+\t\t  else if (temp == if_true_label)\n \t\t    taken = 1;\n \t\t}\n "}]}