{"sha": "d9771f62959b956e116a8bba90fcc82f853aa1e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk3NzFmNjI5NTliOTU2ZTExNmE4YmJhOTBmY2M4MmY4NTNhYTFlNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-01T22:27:08Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-01T22:27:08Z"}, "message": "(form_sum): Undo Sep 28 change.\n\nFrom-SVN: r5548", "tree": {"sha": "3d20e0c99d2c106aa03850822e639f111951b649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d20e0c99d2c106aa03850822e639f111951b649"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9771f62959b956e116a8bba90fcc82f853aa1e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9771f62959b956e116a8bba90fcc82f853aa1e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9771f62959b956e116a8bba90fcc82f853aa1e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9771f62959b956e116a8bba90fcc82f853aa1e4/comments", "author": null, "committer": null, "parents": [{"sha": "0e54aab2ca0c95dd5f67dfe309ef49b81592a59c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e54aab2ca0c95dd5f67dfe309ef49b81592a59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e54aab2ca0c95dd5f67dfe309ef49b81592a59c"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "46df17265b7bdcada2f9e88d956c4578ec1a5712", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9771f62959b956e116a8bba90fcc82f853aa1e4/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9771f62959b956e116a8bba90fcc82f853aa1e4/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=d9771f62959b956e116a8bba90fcc82f853aa1e4", "patch": "@@ -4327,10 +4327,7 @@ form_sum (x, y)\n \n   /* Note that if the operands of Y are specified in the opposite\n      order in the recursive calls below, infinite recursion will occur.  */\n-  if (GET_CODE (y) == PLUS && CONSTANT_P (XEXP (y, 1))\n-      /* Moving the constant in with the MEM yields rtl that reload may not\n-\t be able to handle when this is an address calculation.  */\n-      && GET_CODE (x) != MEM)\n+  if (GET_CODE (y) == PLUS && CONSTANT_P (XEXP (y, 1)))\n     return form_sum (form_sum (x, XEXP (y, 0)), XEXP (y, 1));\n \n   /* If both constant, encapsulate sum.  Otherwise, just form sum.  A"}]}