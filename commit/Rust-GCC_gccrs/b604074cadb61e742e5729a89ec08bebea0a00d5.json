{"sha": "b604074cadb61e742e5729a89ec08bebea0a00d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwNDA3NGNhZGI2MWU3NDJlNTcyOWE4OWVjMDhiZWJlYTBhMDBkNQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-01-16T07:28:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-01-16T07:28:11Z"}, "message": "re PR pch/13689 (GGC PCH breaks aliasing)\n\n\tPR pch/13689\n\t* alias.c (struct alias_set_entry): Mark for GC.\n\t(alias_sets): Make static, mark for GC.\n\t(record_alias_subset): Use GC to allocate alias structures.\n\t* varray.c (element): Make generic varrays GCed.\n\nFrom-SVN: r75962", "tree": {"sha": "fb0803546a9062f4ca3b67f849d9857280108725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb0803546a9062f4ca3b67f849d9857280108725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b604074cadb61e742e5729a89ec08bebea0a00d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b604074cadb61e742e5729a89ec08bebea0a00d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b604074cadb61e742e5729a89ec08bebea0a00d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b604074cadb61e742e5729a89ec08bebea0a00d5/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6dd409400c73308da045537bb6ce4325b5fa3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6dd409400c73308da045537bb6ce4325b5fa3b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6dd409400c73308da045537bb6ce4325b5fa3b9"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "adc7d9bd8b70e8d5d7577e7501a0ec385065bd70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b604074cadb61e742e5729a89ec08bebea0a00d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b604074cadb61e742e5729a89ec08bebea0a00d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b604074cadb61e742e5729a89ec08bebea0a00d5", "patch": "@@ -1,5 +1,11 @@\n 2004-01-15  Geoffrey Keating  <geoffk@apple.com>\n \n+\tPR pch/13689\n+\t* alias.c (struct alias_set_entry): Mark for GC.\n+\t(alias_sets): Make static, mark for GC.\n+\t(record_alias_subset): Use GC to allocate alias structures.\n+\t* varray.c (element): Make generic varrays GCed.\n+\n \tPR pch/13361\n \t* c-typeck.c (constructor_asmspec): Delete.\n \t(struct initializer_stack): Delete field 'asmspec'."}, {"sha": "a56feae11707c1bae9c4af2d80702c77c25b2758", "filename": "gcc/alias.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b604074cadb61e742e5729a89ec08bebea0a00d5/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b604074cadb61e742e5729a89ec08bebea0a00d5/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=b604074cadb61e742e5729a89ec08bebea0a00d5", "patch": "@@ -74,7 +74,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    However, this is no actual entry for alias set zero.  It is an\n    error to attempt to explicitly construct a subset of zero.  */\n \n-typedef struct alias_set_entry\n+struct alias_set_entry GTY(())\n {\n   /* The alias set number, as stored in MEM_ALIAS_SET.  */\n   HOST_WIDE_INT alias_set;\n@@ -86,12 +86,13 @@ typedef struct alias_set_entry\n \n      continuing our example above, the children here will be all of\n      `int', `double', `float', and `struct S'.  */\n-  splay_tree children;\n+  splay_tree GTY((param1_is (int), param2_is (int))) children;\n \n   /* Nonzero if would have a child of zero: this effectively makes this\n      alias set the same as alias set zero.  */\n   int has_zero_child;\n-} *alias_set_entry;\n+};\n+typedef struct alias_set_entry *alias_set_entry;\n \n static int rtx_equal_for_memref_p (rtx, rtx);\n static rtx find_symbolic_term (rtx);\n@@ -206,7 +207,7 @@ char *reg_known_equiv_p;\n static bool copying_arguments;\n \n /* The splay-tree used to store the various alias set entries.  */\n-varray_type alias_sets;\n+static GTY ((param_is (struct alias_set_entry))) varray_type alias_sets;\n \f\n /* Returns a pointer to the alias set entry for ALIAS_SET, if there is\n    such an entry, or NULL otherwise.  */\n@@ -640,10 +641,10 @@ record_alias_subset (HOST_WIDE_INT superset, HOST_WIDE_INT subset)\n     {\n       /* Create an entry for the SUPERSET, so that we have a place to\n \t attach the SUBSET.  */\n-      superset_entry = xmalloc (sizeof (struct alias_set_entry));\n+      superset_entry = ggc_alloc (sizeof (struct alias_set_entry));\n       superset_entry->alias_set = superset;\n       superset_entry->children\n-\t= splay_tree_new (splay_tree_compare_ints, 0, 0);\n+\t= splay_tree_new_ggc (splay_tree_compare_ints);\n       superset_entry->has_zero_child = 0;\n       VARRAY_GENERIC_PTR (alias_sets, superset) = superset_entry;\n     }"}, {"sha": "dd4640d5d7798042aed34a1a5c2818dc97f3abb6", "filename": "gcc/varray.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b604074cadb61e742e5729a89ec08bebea0a00d5/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b604074cadb61e742e5729a89ec08bebea0a00d5/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=b604074cadb61e742e5729a89ec08bebea0a00d5", "patch": "@@ -30,8 +30,8 @@\n \n #define VARRAY_HDR_SIZE (sizeof (struct varray_head_tag) - sizeof (varray_data))\n \n-/* Do not add any more non-GC items here.  Please either remove or GC those items that\n-   are not GCed.  */\n+/* Do not add any more non-GC items here.  Please either remove or GC\n+   those items that are not GCed.  */\n \n static const struct {\n   unsigned char size;\n@@ -47,7 +47,7 @@ static const struct {\n   { sizeof (unsigned long), 1 },\n   { sizeof (HOST_WIDE_INT), 1 },\n   { sizeof (unsigned HOST_WIDE_INT), 1 },\n-  { sizeof (void *), 0 },\n+  { sizeof (void *), 1 },\n   { sizeof (char *), 1 },\n   { sizeof (struct rtx_def *), 1 },\n   { sizeof (struct rtvec_def *), 1 },"}]}