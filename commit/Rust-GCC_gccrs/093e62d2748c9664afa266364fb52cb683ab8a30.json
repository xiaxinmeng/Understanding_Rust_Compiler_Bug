{"sha": "093e62d2748c9664afa266364fb52cb683ab8a30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkzZTYyZDI3NDhjOTY2NGFmYTI2NjM2NGZiNTJjYjY4M2FiOGEzMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-03T15:39:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-03T15:39:20Z"}, "message": "re PR c++/60992 (ICE in tsubst_copy, at cp/pt.c:12637)\n\n\tPR c++/60992\n\t* pt.c (tsubst_copy) [VAR_DECL]: Try lookup first.  Add a new\n\tvariable to local_specializations.\n\nFrom-SVN: r211188", "tree": {"sha": "27b9dd0edd0954ae416610d36214f2c0a36c28f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27b9dd0edd0954ae416610d36214f2c0a36c28f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/093e62d2748c9664afa266364fb52cb683ab8a30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093e62d2748c9664afa266364fb52cb683ab8a30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/093e62d2748c9664afa266364fb52cb683ab8a30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093e62d2748c9664afa266364fb52cb683ab8a30/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "918621d3a8b84a6afda723f22e50b19ec305f77f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918621d3a8b84a6afda723f22e50b19ec305f77f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/918621d3a8b84a6afda723f22e50b19ec305f77f"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "f356caa6c84a3eede539dad1270438d574b72f40", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093e62d2748c9664afa266364fb52cb683ab8a30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093e62d2748c9664afa266364fb52cb683ab8a30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=093e62d2748c9664afa266364fb52cb683ab8a30", "patch": "@@ -1,5 +1,9 @@\n 2014-06-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60992\n+\t* pt.c (tsubst_copy) [VAR_DECL]: Try lookup first.  Add a new\n+\tvariable to local_specializations.\n+\n \tPR c++/60848\n \t* call.c (is_std_init_list): Check CLASSTYPE_TEMPLATE_INFO.\n "}, {"sha": "8858908906642215c4b78d7bb0aed8a69a6fee49", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093e62d2748c9664afa266364fb52cb683ab8a30/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093e62d2748c9664afa266364fb52cb683ab8a30/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=093e62d2748c9664afa266364fb52cb683ab8a30", "patch": "@@ -12730,14 +12730,19 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t  r = retrieve_local_specialization (t);\n \t  if (r == NULL_TREE)\n \t    {\n-\t      if (DECL_ANON_UNION_VAR_P (t))\n+\t      /* First try name lookup to find the instantiation.  */\n+\t      r = lookup_name (DECL_NAME (t));\n+\t      if (r)\n \t\t{\n-\t\t  /* Just use name lookup to find a member alias for an\n-\t\t     anonymous union, but then add it to the hash table.  */\n-\t\t  r = lookup_name (DECL_NAME (t));\n-\t\t  gcc_assert (DECL_ANON_UNION_VAR_P (r));\n-\t\t  register_local_specialization (r, t);\n+\t\t  /* Make sure that the one we found is the one we want.  */\n+\t\t  tree ctx = tsubst (DECL_CONTEXT (t), args,\n+\t\t\t\t     complain, in_decl);\n+\t\t  if (ctx != DECL_CONTEXT (r))\n+\t\t    r = NULL_TREE;\n \t\t}\n+\n+\t      if (r)\n+\t\t/* OK */;\n \t      else\n \t\t{\n \t\t  /* This can happen for a variable used in a\n@@ -12771,10 +12776,12 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\t      else if (decl_constant_var_p (r))\n \t\t\t/* A use of a local constant decays to its value.\n \t\t\t   FIXME update for core DR 696.  */\n-\t\t\treturn integral_constant_value (r);\n+\t\t\tr = integral_constant_value (r);\n \t\t    }\n-\t\t  return r;\n \t\t}\n+\t      /* Remember this for subsequent uses.  */\n+\t      if (local_specializations)\n+\t\tregister_local_specialization (r, t);\n \t    }\n \t}\n       else"}]}