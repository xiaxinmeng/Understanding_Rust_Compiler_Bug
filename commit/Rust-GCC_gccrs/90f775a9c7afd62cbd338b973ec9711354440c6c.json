{"sha": "90f775a9c7afd62cbd338b973ec9711354440c6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBmNzc1YTljN2FmZDYyY2JkMzM4Yjk3M2VjOTcxMTM1NDQ0MGM2Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-19T12:37:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-19T12:37:16Z"}, "message": "re PR target/43766 (x86 prefetch doesn't use complex memory addressing)\n\n\tPR target/43766\n\t* config/i386/i386.c (ix86_decompose_address): Handle ASHIFT addends.\n\ntestsuite/ChangeLog:\n\n\tPR target/43766\n\t* gcc.target/i386/pr43766.c: New test.\n\nFrom-SVN: r158515", "tree": {"sha": "3293fef3a8eb2314035ab22fa75dc319550e2c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3293fef3a8eb2314035ab22fa75dc319550e2c90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90f775a9c7afd62cbd338b973ec9711354440c6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f775a9c7afd62cbd338b973ec9711354440c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90f775a9c7afd62cbd338b973ec9711354440c6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f775a9c7afd62cbd338b973ec9711354440c6c/comments", "author": null, "committer": null, "parents": [{"sha": "7e4fe2c3279c07c5b60e09cd9b9128fd94ccbb22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4fe2c3279c07c5b60e09cd9b9128fd94ccbb22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4fe2c3279c07c5b60e09cd9b9128fd94ccbb22"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "f33e38f997b31f2e6aefb7e2357a3af9a7f668b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90f775a9c7afd62cbd338b973ec9711354440c6c", "patch": "@@ -1,8 +1,12 @@\n+2010-04-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/43766\n+\t* config/i386/i386.c (ix86_decompose_address): Handle ASHIFT addends.\n+\n 2010-04-19  Jie Zhang  <jie@codesourcery.com>\n \n \tPR target/43662\n-\t* reginfo.c (reinit_regs): Set caller_save_initialized_p\n-\tto false.\n+\t* reginfo.c (reinit_regs): Set caller_save_initialized_p to false.\n \n 2010-04-19 Ira Rosen <irar@il.ibm.com>\n \n@@ -82,10 +86,10 @@\n \t(sse_prologue_save_insn1): New pattern and splitter.\n \t(sse_prologue_save_insn): Update to deal also with 64bit aligned\n \tblocks.\n-\t* i386.c (setup_incoming_varargs_64): Do not compute jump destination here.\n+\t* i386.c (setup_incoming_varargs_64): Do not compute jump\n+\tdestination here.\n \t(ix86_gimplify_va_arg): Update alignment needed.\n-\t(ix86_local_alignment): Do not align all local arrays\n-\tto 128bit.\n+\t(ix86_local_alignment): Do not align all local arrays to 128bit.\n \n 2010-04-17  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "f91410a2d6623532759f0b30ee3fd2ccf0562d29", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=90f775a9c7afd62cbd338b973ec9711354440c6c", "patch": "@@ -9357,6 +9357,7 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n   rtx base_reg, index_reg;\n   HOST_WIDE_INT scale = 1;\n   rtx scale_rtx = NULL_RTX;\n+  rtx tmp;\n   int retval = 1;\n   enum ix86_address_seg seg = SEG_DEFAULT;\n \n@@ -9392,6 +9393,19 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n \t      scale_rtx = XEXP (op, 1);\n \t      break;\n \n+\t    case ASHIFT:\n+\t      if (index)\n+\t\treturn 0;\n+\t      index = XEXP (op, 0);\n+\t      tmp = XEXP (op, 1);\n+\t      if (!CONST_INT_P (tmp))\n+\t\treturn 0;\n+\t      scale = INTVAL (tmp);\n+\t      if ((unsigned HOST_WIDE_INT) scale > 3)\n+\t\treturn 0;\n+\t      scale = 1 << scale;\n+\t      break;\n+\n \t    case UNSPEC:\n \t      if (XINT (op, 1) == UNSPEC_TP\n \t          && TARGET_TLS_DIRECT_SEG_REFS\n@@ -9432,8 +9446,6 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n     }\n   else if (GET_CODE (addr) == ASHIFT)\n     {\n-      rtx tmp;\n-\n       /* We're called for lea too, which implements ashift on occasion.  */\n       index = XEXP (addr, 0);\n       tmp = XEXP (addr, 1);"}, {"sha": "06f9bf3c1463702f609fda1b7162848515e57d00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90f775a9c7afd62cbd338b973ec9711354440c6c", "patch": "@@ -1,3 +1,8 @@\n+2010-04-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/43766\n+\t* gcc.target/i386/pr43766.c: New test.\n+\n 2010-04-19  Jie Zhang  <jie@codesourcery.com>\n \n \tPR target/43662"}, {"sha": "701be6ef6f86a41eb753fe7e9459974b587986a5", "filename": "gcc/testsuite/gcc.target/i386/pr43766.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43766.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f775a9c7afd62cbd338b973ec9711354440c6c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43766.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43766.c?ref=90f775a9c7afd62cbd338b973ec9711354440c6c", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -msse -mregparm=3\" { target ilp32 } } */\n+\n+void p (int *a, int i)\n+{\n+  __builtin_prefetch (&a[i]);\n+}\n+\n+/* { dg-final { scan-assembler-not \"lea\" } } */"}]}