{"sha": "23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjNjQ0ODEzNmU5YThhYTdkYmY3YTZkMmE3NmVmYmU4ZWRmMTY4MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-09T08:25:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-09T08:25:48Z"}, "message": "re PR rtl-optimization/89634 (gmp-ecm miscompilation on s390x with -march=zEC12 -m64 -O2)\n\n\tPR rtl-optimization/89634\n\t* cfgcleanup.c (thread_jump): Punt if registers mentioned in cond1\n\tare modified in BB_END (e->src) instruction.\n\n\t* gcc.c-torture/execute/pr89634.c: New test.\n\nFrom-SVN: r269522", "tree": {"sha": "a6b9893340ec96cc932e5b81f252f33673f0e9db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6b9893340ec96cc932e5b81f252f33673f0e9db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee973155b2fd00dfe0ef6a3563c9623512f6632e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee973155b2fd00dfe0ef6a3563c9623512f6632e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee973155b2fd00dfe0ef6a3563c9623512f6632e"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "5cac152498a4a8900d188c1e081d72bd90c8d589", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "patch": "@@ -1,3 +1,9 @@\n+2019-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/89634\n+\t* cfgcleanup.c (thread_jump): Punt if registers mentioned in cond1\n+\tare modified in BB_END (e->src) instruction.\n+\n 2019-03-08  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR target/79926"}, {"sha": "86b262750330a29c56a4bbabf07e28fe07c9ded3", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "patch": "@@ -308,6 +308,11 @@ thread_jump (edge e, basic_block b)\n       || !rtx_equal_p (XEXP (cond1, 1), XEXP (cond2, 1)))\n     return NULL;\n \n+  /* Punt if BB_END (e->src) is doloop-like conditional jump that modifies\n+     the registers used in cond1.  */\n+  if (modified_in_p (cond1, BB_END (e->src)))\n+    return NULL;\n+\n   /* Short circuit cases where block B contains some side effects, as we can't\n      safely bypass it.  */\n   for (insn = NEXT_INSN (BB_HEAD (b)); insn != NEXT_INSN (BB_END (b));"}, {"sha": "f32b5afeed95236bffb6b8c3db34bac86b9b8ed0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "patch": "@@ -1,3 +1,8 @@\n+2019-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/89634\n+\t* gcc.c-torture/execute/pr89634.c: New test.\n+\n 2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/85870"}, {"sha": "b633e61b9b65815a35d4a54a88b1e87baf05b7d9", "filename": "gcc/testsuite/gcc.c-torture/execute/pr89634.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89634.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89634.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89634.c?ref=23c6448136e9a8aa7dbf7a6d2a76efbe8edf1681", "patch": "@@ -0,0 +1,40 @@\n+/* PR rtl-optimization/89634 */\n+\n+static unsigned long *\n+foo (unsigned long *x)\n+{\n+  return x + (1 + *x);\n+}\n+\n+__attribute__((noipa)) unsigned long\n+bar (unsigned long *x)\n+{\n+  unsigned long c, d = 1, e, *f, g, h = 0, i;\n+  for (e = *x - 1; e > 0; e--)\n+    {\n+      f = foo (x + 1);\n+      for (i = 1; i < e; i++)\n+\tf = foo (f);\n+      c = *f;\n+      if (c == 2)\n+\td *= 2;\n+      else\n+\t{\n+\t  i = (c - 1) / 2 - 1;\n+\t  g = (2 * i + 1) * (d + 1) + (2 * d + 1);\n+\t  if (g > h)\n+\t    h = g;\n+\t  d *= c;\n+\t}\n+    }\n+  return h;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned long a[18] = { 4, 2, -200, 200, 2, -400, 400, 3, -600, 0, 600, 5, -100, -66, 0, 66, 100, __LONG_MAX__ / 8 + 1 };\n+  if (bar (a) != 17)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}