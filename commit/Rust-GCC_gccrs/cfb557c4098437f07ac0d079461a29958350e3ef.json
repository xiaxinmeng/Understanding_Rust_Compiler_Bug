{"sha": "cfb557c4098437f07ac0d079461a29958350e3ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiNTU3YzQwOTg0MzdmMDdhYzBkMDc5NDYxYTI5OTU4MzUwZTNlZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-08T14:50:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-08T14:50:35Z"}, "message": "(define_attr): Expand list of instruction attributes.\n\n(define_function_unit): Compute delay information based upon processor type\nand expand functional unit types.\n(mulsi3, divsi3, divmodsi4, divsf3, divdf3, muldf3, movsf): Use expanded\nattributes.\n(load with update): Likewise.\n\nFrom-SVN: r5284", "tree": {"sha": "4a516ab89d9c255c18b6d7b27de61cd8e8bab846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a516ab89d9c255c18b6d7b27de61cd8e8bab846"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb557c4098437f07ac0d079461a29958350e3ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb557c4098437f07ac0d079461a29958350e3ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb557c4098437f07ac0d079461a29958350e3ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb557c4098437f07ac0d079461a29958350e3ef/comments", "author": null, "committer": null, "parents": [{"sha": "5248c9618c10842a86f0d9b8bb990590435898e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5248c9618c10842a86f0d9b8bb990590435898e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5248c9618c10842a86f0d9b8bb990590435898e5"}], "stats": {"total": 210, "additions": 170, "deletions": 40}, "files": [{"sha": "9f13e782da91451f66d208d5a709b755c96a675e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 170, "deletions": 40, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb557c4098437f07ac0d079461a29958350e3ef/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb557c4098437f07ac0d079461a29958350e3ef/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=cfb557c4098437f07ac0d079461a29958350e3ef", "patch": "@@ -22,7 +22,7 @@\n \f\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n-(define_attr \"type\" \"load,integer,fp,compare,delayed_compare,fpcompare,mtlr,branch\"\n+(define_attr \"type\" \"integer,load,fpload,imul,idiv,branch,compare,delayed_compare,fpcompare,mtlr,fp,dmul,sdiv,ddiv,ssqrt,dsqrt\"\n   (const_string \"integer\"))\n \n ;; Length (in bytes).\n@@ -36,24 +36,152 @@\n \t\t\t      (const_int 12))\n \t\t(const_int 4)))\n \n-;; Memory delivers its result in two cycles.\n-(define_function_unit \"memory\" 1 0 (eq_attr \"type\" \"load\") 2 0)\n-\n-;; We consider floating-point insns to deliver their result in two cycles\n-;; to try to intersperse integer and FP operations.\n-(define_function_unit \"fp\" 1 0 (eq_attr \"type\" \"fp,fpcompare\") 2 0)\n-\n-;; Most integer comparisons are ready in four cycles (a stall of three).\n-(define_function_unit \"compare\" 1 0 (eq_attr \"type\" \"compare\") 4 0)\n-\n-;; Some integer comparisons aren't ready for five cycles (a stall of four).\n-(define_function_unit \"compare\" 1 0 (eq_attr \"type\" \"delayed_compare\") 5 0)\n-\n-;; Floating-point comparisons take eight cycles.\n-(define_function_unit \"compare\" 1 0 (eq_attr \"type\" \"fpcompare\") 8 0)\n-\n-;; Branches on LR cannot be done until five cycles after LR is set.\n-(define_function_unit \"branch\" 1 0 (eq_attr \"type\" \"mtlr\") 5 0)\n+;; Processor type -- this attribute must exactly match the processor_type\n+;; enumeration in rs6000.h.\n+\n+(define_attr \"cpu\" \"rios,rios2,ppc601,ppc603,ppc604,ppc620\"\n+  (const (symbol_ref \"rs6000_cpu_attr\")))\n+\n+; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n+;\t\t\tTEST READY-DELAY ISSUE-DELAY [CONFLICT-LIST])\n+\n+(define_function_unit \"lsu\" 1 0\n+  (and (eq_attr \"type\" \"load\")\n+       (eq_attr \"cpu\" \"ppc603,ppc604,ppc620\"))\n+  2 0)\n+\n+(define_function_unit \"lsu\" 1 0\n+  (and (eq_attr \"type\" \"fpload\")\n+       (eq_attr \"cpu\" \"ppc603,ppc604,ppc620\"))\n+  2 0)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"load\")\n+       (eq_attr \"cpu\" \"rios,rios2\"))\n+  2 0)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"fpload\")\n+       (eq_attr \"cpu\" \"rios,rios2\"))\n+  3 0)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul\")\n+       (eq_attr \"cpu\" \"rios,rios2\"))\n+  3 0)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  5 0)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"idiv\")\n+       (eq_attr \"cpu\" \"rios,rios2\"))\n+  19 0)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"idiv\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  36 0)\n+\n+(define_function_unit \"bpu\" 1 0\n+  (eq_attr \"type\" \"compare\")\n+  4 0)\n+\n+(define_function_unit \"bpu\" 1 0\n+  (eq_attr \"type\" \"delayed_compare\")\n+  5 0)\n+\n+(define_function_unit \"bpu\" 1 0\n+  (and (eq_attr \"type\" \"fpcompare\")\n+       (eq_attr \"cpu\" \"rios,rios2\"))\n+  8 0)\n+\n+(define_function_unit \"bpu\" 1 0\n+  (and (eq_attr \"type\" \"fpcompare\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  4 0)\n+\n+(define_function_unit \"bpu\" 1 0\n+  (and (eq_attr \"type\" \"mtlr\")\n+       (eq_attr \"cpu\" \"rios,rios2\"))\n+  5 0)\n+\n+(define_function_unit \"bpu\" 1 0\n+  (and (eq_attr \"type\" \"mtlr\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  4 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"fp\")\n+       (eq_attr \"cpu\" \"rios\"))\n+  2 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"fp\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  4 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"dmul\")\n+       (eq_attr \"cpu\" \"rios\"))\n+  2 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"dmul\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  5 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"sdiv\")\n+       (eq_attr \"cpu\" \"rios\"))\n+  19 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"sdiv\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  17 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"ddiv\")\n+       (eq_attr \"cpu\" \"rios\"))\n+  19 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"ddiv\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603,ppc604,ppc620\"))\n+  31 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"ssqrt\")\n+       (eq_attr \"cpu\" \"ppc603,ppc604,ppc620\"))\n+  31 0)\n+\n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"dsqrt\")\n+       (eq_attr \"cpu\" \"ppc603,ppc604,ppc620\"))\n+  31 0)\n+\n+(define_function_unit \"fpu2\" 2 0\n+  (and (eq_attr \"type\" \"fp\")\n+       (eq_attr \"cpu\" \"rios2\"))\n+  2 0)\n+\n+(define_function_unit \"fpu2\" 2 0\n+  (and (eq_attr \"type\" \"dmul\")\n+       (eq_attr \"cpu\" \"rios2\"))\n+  2 0)\n+\n+(define_function_unit \"fpu2\" 2 0\n+  (and (eq_attr \"type\" \"sdiv\")\n+       (eq_attr \"cpu\" \"rios2\"))\n+  19 0)\n+\n+(define_function_unit \"fpu2\" 2 0\n+  (and (eq_attr \"type\" \"ddiv\")\n+       (eq_attr \"cpu\" \"rios2\"))\n+  19 0)\n \f\n ;; Start with fixed-point load and store insns.  Here we put only the more\n ;; complex forms.  Basic data transfer is done later.\n@@ -453,7 +581,8 @@\n   \"\"\n   \"@\n    muls %0,%1,%2\n-   muli %0,%1,%2\")\n+   muli %0,%1,%2\"\n+   [(set_attr \"type\" \"imul\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -489,7 +618,8 @@\n    (set (match_operand:SI 3 \"gpc_reg_operand\" \"=q\")\n \t(mod:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"divs %0,%1,%2\")\n+  \"divs %0,%1,%2\"\n+  [(set_attr \"type\" \"idiv\")])\n \n ;; For powers of two we can do srai/aze for divide and then adjust for\n ;; modulus.  If it isn't a power of two, FAIL so divmodsi4 will be used.\n@@ -571,7 +701,8 @@\n \t (match_dup 3)))]\n   \n   \"\"\n-  \"div %0,%1,%3\")\n+  \"div %0,%1,%3\"\n+  [(set_attr \"type\" \"idiv\")])\n \n ;; To do unsigned divide we handle the cases of the divisor looking like a\n ;; negative number.  If it is a constant that is less than 2**31, we don't\n@@ -1686,7 +1817,7 @@\n \t\t(match_operand:SF 2 \"gpc_reg_operand\" \"f\")))]\n   \"\"\n   \"fd %0,%1,%2\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"sdiv\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n@@ -1767,15 +1898,15 @@\n \t\t (match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n   \"\"\n   \"fm %0,%1,%2\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"divdf3\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n \t(div:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n \t\t(match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n   \"\"\n   \"fd %0,%1,%2\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"ddiv\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n@@ -1784,7 +1915,7 @@\n \t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n   \"\"\n   \"fma %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n@@ -1793,7 +1924,7 @@\n \t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n   \"\"\n   \"fms %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n@@ -1802,7 +1933,7 @@\n \t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))))]\n   \"\"\n   \"fnma %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n@@ -1811,7 +1942,7 @@\n \t\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))))]\n   \"\"\n   \"fnms %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \f\n ;; Conversions to and from floating-point.\n (define_expand \"floatsidf2\"\n@@ -2367,7 +2498,7 @@\n    fmr %0,%1\n    lfs%U1%X1 %0,%1\n    frsp %1,%1\\;stfs%U0%X0 %1,%0\"\n-  [(set_attr \"type\" \"fp,load,*\")\n+  [(set_attr \"type\" \"fp,fpload,*\")\n    (set_attr \"length\" \"*,*,8\")])\n \f\n (define_expand \"movdf\"\n@@ -2728,7 +2859,7 @@\n   \"@\n    lux %3,%0,%2\n    lu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (mem:SI (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")\n@@ -2751,7 +2882,7 @@\n   \"@\n    lhzux %3,%0,%2\n    lhzu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 3 \"gpc_reg_operand\" \"=r,r\")\n@@ -2764,7 +2895,7 @@\n   \"@\n    lhzux %3,%0,%2\n    lhzu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 3 \"gpc_reg_operand\" \"=r,r\")\n@@ -2777,7 +2908,7 @@\n   \"@\n    lhaux %3,%0,%2\n    lhau %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (mem:HI (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")\n@@ -2788,8 +2919,7 @@\n   \"\"\n   \"@\n    sthux %3,%0,%2\n-   sthu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+   sthu %3,%2(%0)\")\n \n (define_insn \"\"\n   [(set (match_operand:QI 3 \"gpc_reg_operand\" \"=r,r\")\n@@ -2801,7 +2931,7 @@\n   \"@\n    lbzux %3,%0,%2\n    lbzu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 3 \"gpc_reg_operand\" \"=r,r\")\n@@ -2814,7 +2944,7 @@\n   \"@\n    lbzux %3,%0,%2\n    lbzu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (mem:QI (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")\n@@ -2837,7 +2967,7 @@\n   \"@\n    lfsux %3,%0,%2\n    lfsu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"fpload\")])\n \n (define_insn \"\"\n   [(set (mem:SF (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")\n@@ -2860,7 +2990,7 @@\n   \"@\n    lfdux %3,%0,%2\n    lfdu %3,%2(%0)\"\n-  [(set_attr \"type\" \"load,load\")])\n+  [(set_attr \"type\" \"fpload\")])\n \n (define_insn \"\"\n   [(set (mem:DF (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")"}]}