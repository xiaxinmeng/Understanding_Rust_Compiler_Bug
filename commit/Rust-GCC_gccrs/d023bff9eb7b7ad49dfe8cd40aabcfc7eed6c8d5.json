{"sha": "d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyM2JmZjllYjdiN2FkNDlkZmU4Y2Q0MGFhYmNmYzdlZWQ2YzhkNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-19T15:09:12Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-19T15:09:12Z"}, "message": "(non_lvalue): Result must not be null ptr constant.\n\n(omit_one_operand): Use non_lvalue.\n(fold, case COMPOUND_EXPR): Use non_lvalue if value is 0.\n\nFrom-SVN: r3276", "tree": {"sha": "8e2bf4b60f4edf23b0806f1bb10917c2257ee489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e2bf4b60f4edf23b0806f1bb10917c2257ee489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5/comments", "author": null, "committer": null, "parents": [{"sha": "441cedbd685af32e608ce0676fe6133768521110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441cedbd685af32e608ce0676fe6133768521110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441cedbd685af32e608ce0676fe6133768521110"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "e3a7ca0efbc0494c516f1172f408764f9d2bf05d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d023bff9eb7b7ad49dfe8cd40aabcfc7eed6c8d5", "patch": "@@ -1580,7 +1580,8 @@ fold_convert (t, arg1)\n   return t;\n }\n \f\n-/* Return an expr equal to X but certainly not valid as an lvalue.  */\n+/* Return an expr equal to X but certainly not valid as an lvalue.\n+   Also make sure it is not valid as an null pointer constant.  */\n \n tree\n non_lvalue (x)\n@@ -1594,7 +1595,15 @@ non_lvalue (x)\n       || TREE_CODE (x) == REAL_CST\n       || TREE_CODE (x) == STRING_CST\n       || TREE_CODE (x) == ADDR_EXPR)\n-    return x;\n+    {\n+      if (TREE_CODE (x) == INTEGER_CST && integer_zerop (x))\n+\t{\n+\t  result = build1 (NOP_EXPR, TREE_TYPE (x), x);\n+\t  TREE_CONSTANT (result) = TREE_CONSTANT (x);\n+\t  return result;\n+\t}\n+      return x;\n+    }\n \n   result = build1 (NON_LVALUE_EXPR, TREE_TYPE (x), x);\n   TREE_CONSTANT (result) = TREE_CONSTANT (x);\n@@ -1990,7 +1999,7 @@ omit_one_operand (type, result, omitted)\n   if (TREE_SIDE_EFFECTS (omitted))\n     return build (COMPOUND_EXPR, type, omitted, t);\n \n-  return t;\n+  return non_lvalue (t);\n }\n \f\n /* Return a simplified tree node for the truth-negation of ARG.  This\n@@ -4339,9 +4348,12 @@ fold (expr)\n       return t;\n \n     case COMPOUND_EXPR:\n-      if (!TREE_SIDE_EFFECTS (arg0))\n-\treturn arg1;\n-      return t;\n+      if (TREE_SIDE_EFFECTS (arg0))\n+\treturn t;\n+      /* Don't let (0, 0) be null pointer constant.  */\n+      if (integer_zerop (arg1))\n+\treturn non_lvalue (arg1);\n+      return arg1;\n \n     default:\n       return t;"}]}