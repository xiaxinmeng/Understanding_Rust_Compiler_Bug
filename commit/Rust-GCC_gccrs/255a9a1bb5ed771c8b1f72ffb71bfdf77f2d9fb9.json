{"sha": "255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1YTlhMWJiNWVkNzcxYzhiMWY3MmZmYjcxYmZkZjc3ZjJkOWZiOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-02-13T21:46:38Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-13T21:46:38Z"}, "message": "gcc.c (LINK_COMMAND_SPEC): Deal with -fgnu-tm.\n\ngcc/\n\t* gcc.c (LINK_COMMAND_SPEC): Deal with -fgnu-tm.\n\t(GTM_SELF_SPECS): Define if not already defined.\n\t(driver_self_specs): Add GTM_SELF_SPECS.\n\t* config/darwin.h (LINK_COMMAND_SPEC_A): Deal with -fgnu-tm.\n\t(GTM_SELF_SPECS): Define.\n\t* config/i386/cygwin.h (GTM_SELF_SPECS): Likewise.\n\t* config/i386/mingw32.h (GTM_SELF_SPECS): Likewise.\nlibitm/\n\t* configure.ac (link_itm): Fix comment.\n\t* configure: Regenerate.\n\t* testsuite/lib/libitm.exp: Do not pass -litm for the link.\n\nFrom-SVN: r184174", "tree": {"sha": "b55e6dc77c9621f5c9185ca1566529c83dd91063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55e6dc77c9621f5c9185ca1566529c83dd91063"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/comments", "author": null, "committer": null, "parents": [{"sha": "b2cb69647e04765b87f0f1ba9f39b4a353574135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2cb69647e04765b87f0f1ba9f39b4a353574135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2cb69647e04765b87f0f1ba9f39b4a353574135"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "22777f1610eeb9c4778fea0763c3752fde86c107", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -1,3 +1,13 @@\n+2012-02-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c (LINK_COMMAND_SPEC): Deal with -fgnu-tm.\n+\t(GTM_SELF_SPECS): Define if not already defined.\n+\t(driver_self_specs): Add GTM_SELF_SPECS.\n+        * config/darwin.h (LINK_COMMAND_SPEC_A): Deal with -fgnu-tm.\n+        (GTM_SELF_SPECS): Define.\n+\t* config/i386/cygwin.h (GTM_SELF_SPECS): Likewise.\n+\t* config/i386/mingw32.h (GTM_SELF_SPECS): Likewise.\n+\n 2012-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cselib.c (expand_loc): Return sp, fp, hfp or cfa base reg right"}, {"sha": "24253320208113b9933bc1a400c098d03c8865a5", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -183,6 +183,8 @@ extern GTY(()) int darwin_ms_struct;\n     %{L*} %(link_libgcc) %o %{fprofile-arcs|fprofile-generate*|coverage:-lgcov} \\\n     %{fopenmp|ftree-parallelize-loops=*: \\\n       %{static|static-libgcc|static-libstdc++|static-libgfortran: libgomp.a%s; : -lgomp } } \\\n+    %{fgnu-tm: \\\n+      %{static|static-libgcc|static-libstdc++|static-libgfortran: libitm.a%s; : -litm } } \\\n     %{!nostdlib:%{!nodefaultlibs:\\\n       %(link_ssp) %(link_gcc_c_sequence)\\\n     }}\\\n@@ -915,6 +917,8 @@ void add_framework_path (char *);\n \n #undef GOMP_SELF_SPECS\n #define GOMP_SELF_SPECS \"\"\n+#undef GTM_SELF_SPECS\n+#define GTM_SELF_SPECS \"\"\n \n /* Darwin disables section anchors by default.  \n    They should be enabled per arch where support exists in that arch.  */"}, {"sha": "5cf7f9cf51d6e61f4a5093147b2d977c75197c25", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -126,6 +126,8 @@ along with GCC; see the file COPYING3.  If not see\n    and the -pthread flag is not recognized.  */\n #undef GOMP_SELF_SPECS\n #define GOMP_SELF_SPECS \"\"\n+#undef GTM_SELF_SPECS\n+#define GTM_SELF_SPECS \"\"\n \n /* This matches SHLIB_SONAME and SHLIB_SOVERSION in t-cygwin. */\n #if DWARF2_UNWIND_INFO"}, {"sha": "4fdef2664bd92d9daa0ba14183413698435aa6c1", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -187,6 +187,8 @@ do {\t\t\t\t\t\t         \\\n #undef GOMP_SELF_SPECS\n #define GOMP_SELF_SPECS \"%{fopenmp|ftree-parallelize-loops=*: \" \\\n \t\t\t\"-mthreads -pthread}\"\n+#undef GTM_SELF_SPECS\n+#define GTM_SELF_SPECS \"%{fgnu-tm:-mthreads -pthread}\"\n \n /* mingw32 atexit function is safe to use in shared libraries.  Use it\n    to register C++ static destructors.  */"}, {"sha": "c7c8c053ba341f98b198b40d587bab81c6c582c2", "filename": "gcc/gcc.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -675,6 +675,7 @@ proper position among the other output files.  */\n     %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}}\\\n     %{static:} %{L*} %(mfwrap) %(link_libgcc) %o\\\n     %{fopenmp|ftree-parallelize-loops=*:%:include(libgomp.spec)%(link_gomp)}\\\n+    %{fgnu-tm:%:include(libitm.spec)%(link_itm)}\\\n     %(mflib) \" STACK_SPLIT_SPEC \"\\\n     %{fprofile-arcs|fprofile-generate*|coverage:-lgcov}\\\n     %{!nostdlib:%{!nodefaultlibs:%(link_ssp) %(link_gcc_c_sequence)}}\\\n@@ -839,9 +840,14 @@ static const char *const multilib_defaults_raw[] = MULTILIB_DEFAULTS;\n #define GOMP_SELF_SPECS \"%{fopenmp|ftree-parallelize-loops=*: -pthread}\"\n #endif\n \n+/* Likewise for -fgnu-tm.  */\n+#ifndef GTM_SELF_SPECS\n+#define GTM_SELF_SPECS \"%{fgnu-tm: -pthread}\"\n+#endif\n+\n static const char *const driver_self_specs[] = {\n   \"%{fdump-final-insns:-fdump-final-insns=.} %<fdump-final-insns\",\n-  DRIVER_SELF_SPECS, CONFIGURE_SPECS, GOMP_SELF_SPECS\n+  DRIVER_SELF_SPECS, CONFIGURE_SPECS, GOMP_SELF_SPECS, GTM_SELF_SPECS\n };\n \n #ifndef OPTION_DEFAULT_SPECS"}, {"sha": "9ce9ba71a9a2b117716b4f25d72d1590e7280743", "filename": "libitm/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -1,3 +1,9 @@\n+2012-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.ac (link_itm): Fix comment.\n+\t* configure: Regenerate.\n+\t* testsuite/lib/libitm.exp: Do not pass -litm for the link.\n+\n 2012-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libitm/51822"}, {"sha": "47c7b0cd484819a47d6ead8aeddd386f8fb66d06", "filename": "libitm/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -17463,7 +17463,7 @@ else\n fi\n \n # Set up the set of libraries that we need to link against for libitm.\n-# Note that the GOMP_SELF_SPEC in gcc.c will force -pthread for -fopenmp,\n+# Note that the GTM_SELF_SPECS in gcc.c will force -pthread for -fgnu-tm,\n # which will force linkage against -lpthread (or equivalent for the system).\n # That's not 100% ideal, but about the best we can do easily.\n if test $enable_shared = yes; then"}, {"sha": "2cce2b102f55bb5454acef70669086842717d861", "filename": "libitm/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -268,7 +268,7 @@ else\n fi\n \n # Set up the set of libraries that we need to link against for libitm.\n-# Note that the GOMP_SELF_SPEC in gcc.c will force -pthread for -fopenmp,\n+# Note that the GTM_SELF_SPECS in gcc.c will force -pthread for -fgnu-tm,\n # which will force linkage against -lpthread (or equivalent for the system).\n # That's not 100% ideal, but about the best we can do easily.\n if test $enable_shared = yes; then"}, {"sha": "b2556d1409121e88c0b5af401e300b1d00075c79", "filename": "libitm/testsuite/lib/libitm.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2Flib%2Flibitm.exp?ref=255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "patch": "@@ -140,7 +140,6 @@ proc libitm_init { args } {\n \tlappend ALWAYS_CFLAGS \"ldflags=-L${blddir}/.libs\"\n     }\n     lappend ALWAYS_CFLAGS \"additional_flags=-I${srcdir}/..\"\n-    lappend ALWAYS_CFLAGS \"ldflags=-litm\"\n \n     # We use atomic operations in the testcases to validate results.\n     if { ([istarget i?86-*-*] || [istarget x86_64-*-*])"}]}