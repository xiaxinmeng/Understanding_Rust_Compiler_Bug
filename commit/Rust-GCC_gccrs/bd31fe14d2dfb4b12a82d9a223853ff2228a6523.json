{"sha": "bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQzMWZlMTRkMmRmYjRiMTJhODJkOWEyMjM4NTNmZjIyMjhhNjUyMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-03-03T09:21:56Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-03-03T09:21:56Z"}, "message": "re PR ipa/65087 (r220742 causes: ICE: in ipcp_verify_propagated_values, at ipa-cp.c:1057)\n\nFix PR ipa/65087.\n\n\tPR ipa/65087\n\t* ipa-icf.c (sem_item_optimizer::execute): Change function\n\treturn value to boolean.\n\t(sem_item_optimizer::merge_classes): Likewise.\n\t(ipa_icf_driver): Return TODO_remove_functions in case there's\n\ta merge operation processed.\n\t* ipa-icf.h: Change function return value to boolean.\n\n\nCo-Authored-By: Martin Jambor <mjambor@suse.cz>\n\nFrom-SVN: r221133", "tree": {"sha": "2f1787ece400c6ec88d79b288ef226c14672cd57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f1787ece400c6ec88d79b288ef226c14672cd57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0eef284e8842ee27f42595c9e0dfea9d6c078fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eef284e8842ee27f42595c9e0dfea9d6c078fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eef284e8842ee27f42595c9e0dfea9d6c078fc9"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "7d8cf784e9b535badf21cb4ab9e7910526b83ea2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "patch": "@@ -1,3 +1,14 @@\n+2015-03-03  Martin Liska  <mliska@suse.cz>\n+\t    Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/65087\n+\t* ipa-icf.c (sem_item_optimizer::execute): Change function\n+\treturn value to boolean.\n+\t(sem_item_optimizer::merge_classes): Likewise.\n+\t(ipa_icf_driver): Return TODO_remove_functions in case there's\n+\ta merge operation processed.\n+\t* ipa-icf.h: Change function return value to boolean.\n+\n 2015-03-02  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR 65138/target"}, {"sha": "9cdd73eb9d206e051c0f940977fe1b13c53ea2f0", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "patch": "@@ -2167,9 +2167,11 @@ sem_item_optimizer::filter_removed_items (void)\n     m_items.safe_push (filtered[i]);\n }\n \n-/* Optimizer entry point.  */\n+/* Optimizer entry point which returns true in case it processes\n+   a merge operation. True is returned if there's a merge operation\n+   processed.  */\n \n-void\n+bool\n sem_item_optimizer::execute (void)\n {\n   filter_removed_items ();\n@@ -2214,10 +2216,12 @@ sem_item_optimizer::execute (void)\n   process_cong_reduction ();\n   dump_cong_classes ();\n   verify_classes ();\n-  merge_classes (prev_class_count);\n+  bool merged_p = merge_classes (prev_class_count);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     symtab_node::dump_table (dump_file);\n+\n+  return merged_p;\n }\n \n /* Function responsible for visiting all potential functions and\n@@ -2870,9 +2874,10 @@ sem_item_optimizer::dump_cong_classes (void)\n \n /* After reduction is done, we can declare all items in a group\n    to be equal. PREV_CLASS_COUNT is start number of classes\n-   before reduction.  */\n+   before reduction. True is returned if there's a merge operation\n+   processed. */\n \n-void\n+bool\n sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n {\n   unsigned int item_count = m_items.length ();\n@@ -2882,6 +2887,8 @@ sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n   unsigned int non_singular_classes_count = 0;\n   unsigned int non_singular_classes_sum = 0;\n \n+  bool merged_p = false;\n+\n   for (hash_table<congruence_class_group_hash>::iterator it = m_classes.begin ();\n        it != m_classes.end (); ++it)\n     for (unsigned int i = 0; i < (*it)->classes.length (); i++)\n@@ -2952,9 +2959,12 @@ sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n \t\talias->dump_to_file (dump_file);\n \t      }\n \n-\t    source->merge (alias);\n+\t    if (source->merge (alias))\n+\t      merged_p = true;\n \t  }\n       }\n+\n+  return merged_p;\n }\n \n /* Dump function prints all class members to a FILE with an INDENT.  */\n@@ -3031,12 +3041,12 @@ ipa_icf_driver (void)\n {\n   gcc_assert (optimizer);\n \n-  optimizer->execute ();\n+  bool merged_p = optimizer->execute ();\n \n   delete optimizer;\n   optimizer = NULL;\n \n-  return 0;\n+  return merged_p ? TODO_remove_functions : 0;\n }\n \n const pass_data pass_data_ipa_icf ="}, {"sha": "148135338887b48a1504af7ef6e296e6088f585a", "filename": "gcc/ipa-icf.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/gcc%2Fipa-icf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd31fe14d2dfb4b12a82d9a223853ff2228a6523/gcc%2Fipa-icf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.h?ref=bd31fe14d2dfb4b12a82d9a223853ff2228a6523", "patch": "@@ -470,8 +470,10 @@ class sem_item_optimizer\n      read-only variables that can be merged.  */\n   void parse_funcs_and_vars (void);\n \n-  /* Optimizer entry point.  */\n-  void execute (void);\n+  /* Optimizer entry point which returns true in case it processes\n+     a merge operation. True is returned if there's a merge operation\n+     processed.  */\n+  bool execute (void);\n \n   /* Dump function. */\n   void dump (void);\n@@ -545,8 +547,9 @@ class sem_item_optimizer\n \n   /* After reduction is done, we can declare all items in a group\n      to be equal. PREV_CLASS_COUNT is start number of classes\n-     before reduction.  */\n-  void merge_classes (unsigned int prev_class_count);\n+     before reduction. True is returned if there's a merge operation\n+     processed.  */\n+  bool merge_classes (unsigned int prev_class_count);\n \n   /* Adds a newly created congruence class CLS to worklist.  */\n   void worklist_push (congruence_class *cls);"}]}