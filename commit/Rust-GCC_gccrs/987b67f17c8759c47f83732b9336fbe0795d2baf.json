{"sha": "987b67f17c8759c47f83732b9336fbe0795d2baf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg3YjY3ZjE3Yzg3NTljNDdmODM3MzJiOTMzNmZiZTA3OTVkMmJhZg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-04-19T02:49:54Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-04-19T02:49:54Z"}, "message": "re PR middle-end/70689 (ICE on valid code at -O1 in 32-bit mode on x86_64-linux-gnu in curr_insn_transform, at lra-constraints.c:3564)\n\n2016-04-18  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/70689\n\t* lra-constraints.c (equiv_substition_p): New.\n\t(process_alt_operands): Use it.\n\t(swap_operands): Swap it.\n\t(curr_insn_transform): Update it.\n\n2016-04-18  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/70689\n\t* testsuite/gcc.target/i386/pr70689.c: New.\n\nFrom-SVN: r235184", "tree": {"sha": "30b07935d39b2b8a32cc74405095ec2c61d3e862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30b07935d39b2b8a32cc74405095ec2c61d3e862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/987b67f17c8759c47f83732b9336fbe0795d2baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/987b67f17c8759c47f83732b9336fbe0795d2baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/987b67f17c8759c47f83732b9336fbe0795d2baf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/987b67f17c8759c47f83732b9336fbe0795d2baf/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd1c4ba8114115d7568a8e9d292413fd1b2c71a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1c4ba8114115d7568a8e9d292413fd1b2c71a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1c4ba8114115d7568a8e9d292413fd1b2c71a9"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "458f2cd338d49c66fd3edd0ef21223c684b9337a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=987b67f17c8759c47f83732b9336fbe0795d2baf", "patch": "@@ -1,3 +1,11 @@\n+2016-04-18  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/70689\n+\t* lra-constraints.c (equiv_substition_p): New.\n+\t(process_alt_operands): Use it.\n+\t(swap_operands): Swap it.\n+\t(curr_insn_transform): Update it.\n+\n 2016-04-18  Michael Matz  <matz@suse.de>\n \n \t* tree.h (TYPE_ALIGN, DECL_ALIGN): Return shifted amount."}, {"sha": "14d5f1dc538896d01748bbbd78bb4850f110602a", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=987b67f17c8759c47f83732b9336fbe0795d2baf", "patch": "@@ -1258,6 +1258,10 @@ static bool goal_alt_swapped;\n /* The chosen insn alternative.\t */\n static int goal_alt_number;\n \n+/* True if the corresponding operand is the result of an equivalence\n+   substitution.  */\n+static bool equiv_substition_p[MAX_RECOG_OPERANDS];\n+\n /* The following five variables are used to choose the best insn\n    alternative.\t They reflect final characteristics of the best\n    alternative.\t */\n@@ -2064,7 +2068,10 @@ process_alt_operands (int only_alternative)\n \t\t\t memory, or make other memory by reloading the\n \t\t\t address like for 'o'.  */\n \t\t      if (CONST_POOL_OK_P (mode, op)\n-\t\t\t  || MEM_P (op) || REG_P (op))\n+\t\t\t  || MEM_P (op) || REG_P (op)\n+\t\t\t  /* We can restore the equiv insn by a\n+\t\t\t     reload.  */\n+\t\t\t  || equiv_substition_p[nop])\n \t\t\tbadop = false;\n \t\t      constmemok = true;\n \t\t      offmemok = true;\n@@ -3371,6 +3378,7 @@ swap_operands (int nop)\n   std::swap (curr_operand_mode[nop], curr_operand_mode[nop + 1]);\n   std::swap (original_subreg_reg_mode[nop], original_subreg_reg_mode[nop + 1]);\n   std::swap (*curr_id->operand_loc[nop], *curr_id->operand_loc[nop + 1]);\n+  std::swap (equiv_substition_p[nop], equiv_substition_p[nop + 1]);\n   /* Swap the duplicates too.  */\n   lra_update_dup (curr_id, nop);\n   lra_update_dup (curr_id, nop + 1);\n@@ -3473,8 +3481,10 @@ curr_insn_transform (bool check_only_p)\n \t  old = SUBREG_REG (old);\n \tsubst = get_equiv_with_elimination (old, curr_insn);\n \toriginal_subreg_reg_mode[i] = VOIDmode;\n+\tequiv_substition_p[i] = false;\n \tif (subst != old)\n \t  {\n+\t    equiv_substition_p[i] = true;\n \t    subst = copy_rtx (subst);\n \t    lra_assert (REG_P (old));\n \t    if (GET_CODE (op) != SUBREG)"}, {"sha": "e6bd4062f21f97d5823f2bf4122efd7362d7bbf4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=987b67f17c8759c47f83732b9336fbe0795d2baf", "patch": "@@ -1,3 +1,8 @@\n+2016-04-18  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/70689\n+\t* testsuite/gcc.target/i386/pr70689.c: New.\n+\n 2016-04-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/70708"}, {"sha": "0529a00fcba26d27082e18c01cb9ff79eabe7dc7", "filename": "gcc/testsuite/gcc.target/i386/pr70689.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70689.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/987b67f17c8759c47f83732b9336fbe0795d2baf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70689.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70689.c?ref=987b67f17c8759c47f83732b9336fbe0795d2baf", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target ia32 } */\n+/* { dg-options \"-O1\" } */\n+\n+struct S\n+{\n+  int f;\n+};\n+\n+double a;\n+int c;\n+\n+static\n+void fn1 (struct S *p1)\n+{\n+  for (; c; )\n+    if (p1->f++)\n+      a = (int) p1;\n+}\n+\n+int\n+main ()\n+{\n+  struct S b = { 0 };\n+  fn1 (&b);\n+  return 0;\n+}"}]}