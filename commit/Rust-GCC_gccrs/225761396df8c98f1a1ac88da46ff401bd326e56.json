{"sha": "225761396df8c98f1a1ac88da46ff401bd326e56", "node_id": "C_kwDOANBUbNoAKDIyNTc2MTM5NmRmOGM5OGYxYTFhYzg4ZGE0NmZmNDAxYmQzMjZlNTY", "commit": {"author": {"name": "chenglulu", "email": "chenglulu@loongson.cn", "date": "2021-12-02T06:15:50Z"}, "committer": {"name": "Chenghua Xu", "email": "paul.hua.gm@gmail.com", "date": "2022-03-29T09:43:33Z"}, "message": "LoongArch Port: Regenerate gcc/configure.\n\n2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n\t    Lulu Cheng  <chenglulu@loongson.cn>\n\ngcc/ChangeLog:\n\n\t* configure: Regenerate file.", "tree": {"sha": "c04980da2334135289a45b2ceef038e9bf81e244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c04980da2334135289a45b2ceef038e9bf81e244"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/225761396df8c98f1a1ac88da46ff401bd326e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225761396df8c98f1a1ac88da46ff401bd326e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225761396df8c98f1a1ac88da46ff401bd326e56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225761396df8c98f1a1ac88da46ff401bd326e56/comments", "author": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChenghuaXu", "id": 87753117, "node_id": "MDQ6VXNlcjg3NzUzMTE3", "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChenghuaXu", "html_url": "https://github.com/ChenghuaXu", "followers_url": "https://api.github.com/users/ChenghuaXu/followers", "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}", "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions", "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs", "repos_url": "https://api.github.com/users/ChenghuaXu/repos", "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}", "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b44786f64019e7164cab687b19914e7e13c949a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b44786f64019e7164cab687b19914e7e13c949a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b44786f64019e7164cab687b19914e7e13c949a4"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "1c1195e95cb5f00f360697e1876cc957777845f8", "filename": "gcc/configure", "status": "modified", "additions": 60, "deletions": 6, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225761396df8c98f1a1ac88da46ff401bd326e56/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225761396df8c98f1a1ac88da46ff401bd326e56/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=225761396df8c98f1a1ac88da46ff401bd326e56", "patch": "@@ -5442,6 +5442,9 @@ case \"${target}\" in\n \t# sets the default TLS model and affects inlining.\n \tPICFLAG_FOR_TARGET=-fPIC\n \t;;\n+    loongarch*-*-*)\n+\tPICFLAG_FOR_TARGET=-fpic\n+\t;;\n     mips-sgi-irix6*)\n \t# PIC is the default.\n \t;;\n@@ -7963,6 +7966,9 @@ else\n     mips*-*-*)\n       enable_fixed_point=yes\n       ;;\n+    loongarch*-*-*)\n+      enable_fixed_point=yes\n+      ;;\n     *)\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: fixed-point is not supported for this target, ignored\" >&5\n $as_echo \"$as_me: WARNING: fixed-point is not supported for this target, ignored\" >&2;}\n@@ -19667,7 +19673,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19670 \"configure\"\n+#line 19676 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19773,7 +19779,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19776 \"configure\"\n+#line 19782 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -25556,6 +25562,17 @@ foo:\tdata8\t25\n \tmovl\tr24 = @tprel(foo#)'\n \ttls_as_opt=--fatal-warnings\n \t;;\n+  loongarch*-*-*)\n+    conftest_s='\n+\t.section .tdata,\"awT\",@progbits\n+x:\t.word 2\n+\t.text\n+\tla.tls.gd $a0,x\n+\tbl __tls_get_addr'\n+\ttls_first_major=0\n+\ttls_first_minor=0\n+\ttls_as_opt='--fatal-warnings'\n+\t;;\n   microblaze*-*-*)\n     conftest_s='\n \t.section .tdata,\"awT\",@progbits\n@@ -28780,6 +28797,43 @@ $as_echo \"#define HAVE_AS_MARCH_ZIFENCEI 1\" >>confdefs.h\n fi\n \n     ;;\n+  loongarch*-*-*)\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .dtprelword support\" >&5\n+$as_echo_n \"checking assembler for .dtprelword support... \" >&6; }\n+if ${gcc_cv_as_loongarch_dtprelword+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_loongarch_dtprelword=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags 2,18,0 -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\t.section .tdata,\"awT\",@progbits\n+x:\n+\t.word 2\n+\t.text\n+\t.dtprelword x+0x8000\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_loongarch_dtprelword\" >&5\n+$as_echo \"$gcc_cv_as_loongarch_dtprelword\" >&6; }\n+\n+if test $gcc_cv_as_loongarch_dtprelword != yes; then\n+\n+$as_echo \"#define HAVE_AS_DTPRELWORD 1\" >>confdefs.h\n+\n+fi\n+    ;;\n     s390*-*-*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .gnu_attribute support\" >&5\n $as_echo_n \"checking assembler for .gnu_attribute support... \" >&6; }\n@@ -28943,11 +28997,11 @@ fi\n     ;;\n esac\n \n-# Mips and HP-UX need the GNU assembler.\n+# Mips, LoongArch and HP-UX need the GNU assembler.\n # Linux on IA64 might be able to use the Intel assembler.\n \n case \"$target\" in\n-  mips*-*-* | *-*-hpux* )\n+  mips*-*-* | loongarch*-*-* | *-*-hpux* )\n     if test x$gas_flag = xyes \\\n        || test x\"$host\" != x\"$build\" \\\n        || test ! -x \"$gcc_cv_as\" \\\n@@ -29384,8 +29438,8 @@ esac\n # ??? Once 2.11 is released, probably need to add first known working\n # version to the per-target configury.\n case \"$cpu_type\" in\n-  aarch64 | alpha | arc | arm | avr | bfin | cris | csky | i386 | m32c | m68k \\\n-  | microblaze | mips | nds32 | nios2 | pa | riscv | rs6000 | score | sparc \\\n+  aarch64 | alpha | arc | arm | avr | bfin | cris | csky | i386 | loongarch | m32c \\\n+  | m68k | microblaze | mips | nds32 | nios2 | pa | riscv | rs6000 | score | sparc \\\n   | tilegx | tilepro | visium | xstormy16 | xtensa)\n     insn=\"nop\"\n     ;;"}]}