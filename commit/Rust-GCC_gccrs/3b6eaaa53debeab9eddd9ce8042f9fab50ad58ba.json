{"sha": "3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2ZWFhYTUzZGViZWFiOWVkZGQ5Y2U4MDQyZjlmYWI1MGFkNThiYQ==", "commit": {"author": {"name": "Andrew Bennett", "email": "andrew.bennett@imgtec.com", "date": "2014-11-21T14:34:55Z"}, "committer": {"name": "Andrew Bennett", "email": "abennett@gcc.gnu.org", "date": "2014-11-21T14:34:55Z"}, "message": "[MIPS] If using branch likelies in MIPS sync code fill the delay slot \nwith a nop.\n\ngcc/\n\t* config/mips/mips.c (mips_process_sync_loop): Place a \n\tnop in the delay slot of the branch likely instruction.\n\t(mips_output_sync_loop): Ensure mips_branch_likely is \n\tset before calling mips_output_sync_loop.\n\t(mips_sync_loop_insns): Likewise.\n\nFrom-SVN: r217926", "tree": {"sha": "de256a7c54a3038c424444883e5ad5a8da4461d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de256a7c54a3038c424444883e5ad5a8da4461d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba/comments", "author": {"login": "andrewb-IMG", "id": 12913579, "node_id": "MDQ6VXNlcjEyOTEzNTc5", "avatar_url": "https://avatars.githubusercontent.com/u/12913579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewb-IMG", "html_url": "https://github.com/andrewb-IMG", "followers_url": "https://api.github.com/users/andrewb-IMG/followers", "following_url": "https://api.github.com/users/andrewb-IMG/following{/other_user}", "gists_url": "https://api.github.com/users/andrewb-IMG/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewb-IMG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewb-IMG/subscriptions", "organizations_url": "https://api.github.com/users/andrewb-IMG/orgs", "repos_url": "https://api.github.com/users/andrewb-IMG/repos", "events_url": "https://api.github.com/users/andrewb-IMG/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewb-IMG/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bec983122f95df5e58de30ea76cbbb67e737cd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bec983122f95df5e58de30ea76cbbb67e737cd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bec983122f95df5e58de30ea76cbbb67e737cd3"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "4b14d1d62a05b20bb994ab3ccf0ff39b59dbd1b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba", "patch": "@@ -1,3 +1,11 @@\n+2014-11-21  Andrew Bennett  <andrew.bennett@imgtec.com>\n+\n+\t* config/mips/mips.c (mips_process_sync_loop): Place a \n+\tnop in the delay slot of the branch likely instruction.\n+\t(mips_output_sync_loop): Ensure mips_branch_likely is \n+\tset before calling mips_output_sync_loop.\n+\t(mips_sync_loop_insns): Likewise.\n+\n 2014-11-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR/target 63673"}, {"sha": "dad63eb3ed72cbb32c07f3d3787f72fa687178bb", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=3b6eaaa53debeab9eddd9ce8042f9fab50ad58ba", "patch": "@@ -12997,15 +12997,22 @@ mips_process_sync_loop (rtx_insn *insn, rtx *operands)\n      This will sometimes be a delayed branch; see the write code below\n      for details.  */\n   mips_multi_add_insn (is_64bit_p ? \"scd\\t%0,%1\" : \"sc\\t%0,%1\", at, mem, NULL);\n-  mips_multi_add_insn (\"beq%?\\t%0,%.,1b\", at, NULL);\n+\n+  /* When using branch likely (-mfix-r10000), the delay slot instruction\n+     will be annulled on false.  The normal delay slot instructions\n+     calculate the overall result of the atomic operation and must not\n+     be annulled.  To ensure this behaviour unconditionally use a NOP\n+     in the delay slot for the branch likely case.  */\n+\n+  mips_multi_add_insn (\"beq%?\\t%0,%.,1b%~\", at, NULL);\n \n   /* if (INSN1 != MOVE && INSN1 != LI) NEWVAL = $TMP3 [delay slot].  */\n   if (insn1 != SYNC_INSN1_MOVE && insn1 != SYNC_INSN1_LI && tmp3 != newval)\n     {\n       mips_multi_copy_insn (tmp3_insn);\n       mips_multi_set_operand (mips_multi_last_index (), 0, newval);\n     }\n-  else if (!(required_oldval && cmp))\n+  else if (!(required_oldval && cmp) && !mips_branch_likely)\n     mips_multi_add_insn (\"nop\", NULL);\n \n   /* CMP = 1 -- either standalone or in a delay slot.  */\n@@ -13029,12 +13036,12 @@ mips_process_sync_loop (rtx_insn *insn, rtx *operands)\n const char *\n mips_output_sync_loop (rtx_insn *insn, rtx *operands)\n {\n-  mips_process_sync_loop (insn, operands);\n-\n   /* Use branch-likely instructions to work around the LL/SC R10000\n      errata.  */\n   mips_branch_likely = TARGET_FIX_R10000;\n \n+  mips_process_sync_loop (insn, operands);\n+\n   mips_push_asm_switch (&mips_noreorder);\n   mips_push_asm_switch (&mips_nomacro);\n   mips_push_asm_switch (&mips_noat);\n@@ -13056,6 +13063,9 @@ mips_output_sync_loop (rtx_insn *insn, rtx *operands)\n unsigned int\n mips_sync_loop_insns (rtx_insn *insn, rtx *operands)\n {\n+  /* Use branch-likely instructions to work around the LL/SC R10000\n+     errata.  */\n+  mips_branch_likely = TARGET_FIX_R10000;\n   mips_process_sync_loop (insn, operands);\n   return mips_multi_num_insns;\n }"}]}