{"sha": "8c92f3e81be19ed6f544c06ee313af0cf5af107b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5MmYzZTgxYmUxOWVkNmY1NDRjMDZlZTMxM2FmMGNmNWFmMTA3Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-02-11T00:14:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-11T00:14:08Z"}, "message": "sparc.c (sparc_flat_expand_prologue): Use emit_use.\n\n\t* config/sparc/sparc.c (sparc_flat_expand_prologue): Use emit_use.\n\t* config/sparc/sparc.md (UNSPECV_GOTO): Delete.\n\t(nonlocal_goto_internal): Likewise.\n\t(nonlocal_goto): Emit a use and an indirect jump directly.\n\nFrom-SVN: r184116", "tree": {"sha": "0bc12d2c725f18f35fc92a06e89bee409ff34376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bc12d2c725f18f35fc92a06e89bee409ff34376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c92f3e81be19ed6f544c06ee313af0cf5af107b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c92f3e81be19ed6f544c06ee313af0cf5af107b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c92f3e81be19ed6f544c06ee313af0cf5af107b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c92f3e81be19ed6f544c06ee313af0cf5af107b/comments", "author": null, "committer": null, "parents": [{"sha": "41da64ed3a42abd8b4e502b1a958322f62940d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41da64ed3a42abd8b4e502b1a958322f62940d27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41da64ed3a42abd8b4e502b1a958322f62940d27"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "391217a397e93a335692b973b5f03e56633ce594", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c92f3e81be19ed6f544c06ee313af0cf5af107b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c92f3e81be19ed6f544c06ee313af0cf5af107b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c92f3e81be19ed6f544c06ee313af0cf5af107b", "patch": "@@ -1,3 +1,10 @@\n+2012-02-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.c (sparc_flat_expand_prologue): Use emit_use.\n+\t* config/sparc/sparc.md (UNSPECV_GOTO): Delete.\n+\t(nonlocal_goto_internal): Likewise.\n+\t(nonlocal_goto): Emit a use and an indirect jump directly.\n+\n 2012-02-10  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR c/52190"}, {"sha": "134843d98a3957c3c8f0459e1034ae519037a959", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c92f3e81be19ed6f544c06ee313af0cf5af107b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c92f3e81be19ed6f544c06ee313af0cf5af107b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=8c92f3e81be19ed6f544c06ee313af0cf5af107b", "patch": "@@ -5131,7 +5131,7 @@ sparc_flat_expand_prologue (void)\n \n \t  /* Prevent this instruction from ever being considered dead,\n \t     even if this function has no epilogue.  */\n-\t  emit_insn (gen_rtx_USE (VOIDmode, i7));\n+\t  emit_use (i7);\n \t}\n     }\n "}, {"sha": "f70acd373372b8aa74abc705b48cb19010018978", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 29, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c92f3e81be19ed6f544c06ee313af0cf5af107b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c92f3e81be19ed6f544c06ee313af0cf5af107b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=8c92f3e81be19ed6f544c06ee313af0cf5af107b", "patch": "@@ -99,7 +99,6 @@\n (define_constants\n   [(UNSPECV_BLOCKAGE\t\t0)\n    (UNSPECV_FLUSHW\t\t1)\n-   (UNSPECV_GOTO\t\t2)\n    (UNSPECV_FLUSH\t\t4)\n    (UNSPECV_SAVEW\t\t6)\n    (UNSPECV_CAS\t\t\t8)\n@@ -6524,6 +6523,7 @@\n    (match_operand 3 \"memory_operand\" \"\")]\n   \"\"\n {\n+  rtx i7 = gen_rtx_REG (Pmode, RETURN_ADDR_REGNUM);\n   rtx r_label = copy_to_reg (operands[1]);\n   rtx r_sp = adjust_address_nv (operands[2], Pmode, 0);\n   rtx r_fp = operands[3];\n@@ -6540,44 +6540,19 @@\n   /* Restore frame pointer for containing function.  */\n   emit_move_insn (hard_frame_pointer_rtx, r_fp);\n   emit_stack_restore (SAVE_NONLOCAL, r_sp);\n+  emit_move_insn (i7, r_i7);\n \n   /* USE of hard_frame_pointer_rtx added for consistency;\n      not clear if really needed.  */\n   emit_use (hard_frame_pointer_rtx);\n   emit_use (stack_pointer_rtx);\n+  emit_use (i7);\n \n-  /* We need to smuggle the load of %i7 as it is a fixed register.  */\n-  emit_jump_insn (gen_nonlocal_goto_internal (r_label, r_i7));\n+  emit_jump_insn (gen_indirect_jump (r_label));\n   emit_barrier ();\n   DONE;\n })\n \n-(define_insn \"nonlocal_goto_internal\"\n-  [(unspec_volatile [(match_operand 0 \"register_operand\" \"r\")\n-                     (match_operand 1 \"memory_operand\" \"m\")] UNSPECV_GOTO)]\n-  \"GET_MODE (operands[0]) == Pmode && GET_MODE (operands[1]) == Pmode\"\n-{\n-  if (flag_delayed_branch)\n-    {\n-      if (TARGET_ARCH64)\n-\treturn \"jmp\\t%0\\n\\t ldx\\t%1, %%i7\";\n-      else\n-\treturn \"jmp\\t%0\\n\\t ld\\t%1, %%i7\";\n-    }\n-  else\n-    {\n-      if (TARGET_ARCH64)\n-\treturn \"ldx\\t%1, %%i7\\n\\tjmp\\t%0\\n\\t nop\";\n-      else\n-\treturn \"ld\\t%1, %%i7\\n\\tjmp\\t%0\\n\\t nop\";\n-    }\n-}\n-  [(set (attr \"type\") (const_string \"multi\"))\n-   (set (attr \"length\")\n-\t(if_then_else (eq_attr \"delayed_branch\" \"true\")\n-\t\t      (const_int 2)\n-\t\t      (const_int 3)))])\n-\n (define_expand \"builtin_setjmp_receiver\"\n   [(label_ref (match_operand 0 \"\" \"\"))]\n   \"flag_pic\""}]}