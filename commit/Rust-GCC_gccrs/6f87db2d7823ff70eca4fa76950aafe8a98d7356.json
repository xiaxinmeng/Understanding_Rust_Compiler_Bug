{"sha": "6f87db2d7823ff70eca4fa76950aafe8a98d7356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4N2RiMmQ3ODIzZmY3MGVjYTRmYTc2OTUwYWFmZThhOThkNzM1Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-02-28T20:31:01Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-02-28T20:31:01Z"}, "message": "[PR72741, PR89433] Accept intrinsic symbols in Fortran OpenACC 'routine' directives\n\n\tgcc/fortran/\n\tPR fortran/72741\n\tPR fortran/89433\n\t* openmp.c (gfc_match_oacc_routine): Accept intrinsic symbols.\n\tgcc/testsuite/\n\tPR fortran/72741\n\tPR fortran/89433\n\t* gfortran.dg/goacc/routine-6.f90: Update\n\t* gfortran.dg/goacc/routine-intrinsic-1.f: New file.\n\t* gfortran.dg/goacc/routine-intrinsic-2.f: Likewise.\n\nCo-Authored-By: Cesar Philippidis <cesar@codesourcery.com>\n\nFrom-SVN: r269285", "tree": {"sha": "63f9d34cc4c79ffa6aef5199ea0ce3a0ac966e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f9d34cc4c79ffa6aef5199ea0ce3a0ac966e72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f87db2d7823ff70eca4fa76950aafe8a98d7356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f87db2d7823ff70eca4fa76950aafe8a98d7356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f87db2d7823ff70eca4fa76950aafe8a98d7356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f87db2d7823ff70eca4fa76950aafe8a98d7356/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80f52b400e1fc770c96d5e28ac7343aac3733df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f52b400e1fc770c96d5e28ac7343aac3733df9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f52b400e1fc770c96d5e28ac7343aac3733df9"}], "stats": {"total": 100, "additions": 95, "deletions": 5}, "files": [{"sha": "78c6324d1b8399163483eec37a671911ff8b5eed", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6f87db2d7823ff70eca4fa76950aafe8a98d7356", "patch": "@@ -1,3 +1,10 @@\n+2019-02-28  Thomas Schwinge  <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR fortran/72741\n+\tPR fortran/89433\n+\t* openmp.c (gfc_match_oacc_routine): Accept intrinsic symbols.\n+\n 2019-02-26  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/89492"}, {"sha": "6999ac34a1a9d3d5c3901b4c467ae9831951427c", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=6f87db2d7823ff70eca4fa76950aafe8a98d7356", "patch": "@@ -2275,8 +2275,9 @@ match\n gfc_match_oacc_routine (void)\n {\n   locus old_loc;\n-  gfc_symbol *sym = NULL;\n   match m;\n+  gfc_intrinsic_sym *isym = NULL;\n+  gfc_symbol *sym = NULL;\n   gfc_omp_clauses *c = NULL;\n   gfc_oacc_routine_name *n = NULL;\n \n@@ -2296,12 +2297,19 @@ gfc_match_oacc_routine (void)\n   if (m == MATCH_YES)\n     {\n       char buffer[GFC_MAX_SYMBOL_LEN + 1];\n-      gfc_symtree *st;\n \n       m = gfc_match_name (buffer);\n       if (m == MATCH_YES)\n \t{\n-\t  st = gfc_find_symtree (gfc_current_ns->sym_root, buffer);\n+\t  gfc_symtree *st = NULL;\n+\n+\t  /* First look for an intrinsic symbol.  */\n+\t  isym = gfc_find_function (buffer);\n+\t  if (!isym)\n+\t    isym = gfc_find_subroutine (buffer);\n+\t  /* If no intrinsic symbol found, search the current namespace.  */\n+\t  if (!isym)\n+\t    st = gfc_find_symtree (gfc_current_ns->sym_root, buffer);\n \t  if (st)\n \t    {\n \t      sym = st->n.sym;\n@@ -2310,7 +2318,7 @@ gfc_match_oacc_routine (void)\n \t        sym = NULL;\n \t    }\n \n-\t  if (st == NULL\n+\t  if ((isym == NULL && st == NULL)\n \t      || (sym\n \t\t  && !sym->attr.external\n \t\t  && !sym->attr.function\n@@ -2344,7 +2352,19 @@ gfc_match_oacc_routine (void)\n \t  != MATCH_YES))\n     return MATCH_ERROR;\n \n-  if (sym != NULL)\n+  if (isym != NULL)\n+    {\n+      /* Diagnose any OpenACC 'routine' directive that doesn't match the\n+\t (implicit) one with a 'seq' clause.  */\n+      if (c && (c->gang || c->worker || c->vector))\n+\t{\n+\t  gfc_error (\"Intrinsic symbol specified in !$ACC ROUTINE ( NAME )\"\n+\t\t     \" at %C marked with incompatible GANG, WORKER, or VECTOR\"\n+\t\t     \" clause\");\n+\t  goto cleanup;\n+\t}\n+    }\n+  else if (sym != NULL)\n     {\n       n = gfc_get_oacc_routine_name ();\n       n->sym = sym;\n@@ -2364,6 +2384,9 @@ gfc_match_oacc_routine (void)\n       gfc_current_ns->proc_name->attr.oacc_routine_lop\n \t= gfc_oacc_routine_lop (c);\n     }\n+  else\n+    /* Something has gone wrong, possibly a syntax error.  */\n+    goto cleanup;\n \n   if (n)\n     n->clauses = c;"}, {"sha": "c45e7b7546a9b8e66403b551f83d8adeb7764d74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f87db2d7823ff70eca4fa76950aafe8a98d7356", "patch": "@@ -1,3 +1,12 @@\n+2019-02-28  Thomas Schwinge  <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR fortran/72741\n+\tPR fortran/89433\n+\t* gfortran.dg/goacc/routine-6.f90: Update\n+\t* gfortran.dg/goacc/routine-intrinsic-1.f: New file.\n+\t* gfortran.dg/goacc/routine-intrinsic-2.f: Likewise.\n+\n 2019-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/89521"}, {"sha": "0201b8d1fee5a48024084664a5e365f44f559409", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-6.f90", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-6.f90?ref=6f87db2d7823ff70eca4fa76950aafe8a98d7356", "patch": "@@ -1,3 +1,4 @@\n+! Check for invalid syntax with !$ACC ROUTINE.\n \n module m\n   integer m1int\n@@ -45,6 +46,12 @@ end function subr6\n   !$acc end parallel\n end program main\n \n+! Ensure that we recover from incomplete function definitions.\n+\n+integer function f1 ! { dg-error \"Expected formal argument list in function definition\" }\n+  !$acc routine ! { dg-error \"Unclassifiable OpenACC directive\" }\n+end function f1 ! { dg-error \"Expecting END PROGRAM statement\" }\n+\n subroutine subr1 (x) \n   !$acc routine\n   integer, intent(inout) :: x"}, {"sha": "5dab573a99662ba1e7a6574bbbb63e2af20f26a6", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-intrinsic-1.f", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-intrinsic-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-intrinsic-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-intrinsic-1.f?ref=6f87db2d7823ff70eca4fa76950aafe8a98d7356", "patch": "@@ -0,0 +1,21 @@\n+! Check for valid clauses with intrinsic symbols specified in OpenACC\n+! 'routine' directives.\n+\n+      SUBROUTINE sub_1\n+      IMPLICIT NONE\n+!$ACC ROUTINE (ABORT)\n+!$ACC ROUTINE (ABORT) SEQ\n+\n+      CALL ABORT\n+      END SUBROUTINE sub_1\n+\n+      MODULE m_w_1\n+      IMPLICIT NONE\n+!$ACC ROUTINE (ABORT) SEQ\n+!$ACC ROUTINE (ABORT)\n+\n+      CONTAINS\n+      SUBROUTINE sub_2\n+      CALL ABORT\n+      END SUBROUTINE sub_2\n+      END MODULE m_w_1"}, {"sha": "22524cc164515b91acfa1fafe08760d19f309010", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-intrinsic-2.f", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-intrinsic-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87db2d7823ff70eca4fa76950aafe8a98d7356/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-intrinsic-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-intrinsic-2.f?ref=6f87db2d7823ff70eca4fa76950aafe8a98d7356", "patch": "@@ -0,0 +1,23 @@\n+! Check for invalid clauses with intrinsic symbols specified in OpenACC\n+! 'routine' directives.\n+\n+      SUBROUTINE sub_1\n+      IMPLICIT NONE\n+!$ACC ROUTINE (ABORT) WORKER ! { dg-error \"Intrinsic symbol specified in \\\\!\\\\\\$ACC ROUTINE \\\\( NAME \\\\) at \\\\(1\\\\) marked with incompatible GANG, WORKER, or VECTOR clause\" }\n+!$ACC ROUTINE (ABORT) GANG ! { dg-error \"Intrinsic symbol specified in \\\\!\\\\\\$ACC ROUTINE \\\\( NAME \\\\) at \\\\(1\\\\) marked with incompatible GANG, WORKER, or VECTOR clause\" }\n+!$ACC ROUTINE (ABORT) VECTOR ! { dg-error \"Intrinsic symbol specified in \\\\!\\\\\\$ACC ROUTINE \\\\( NAME \\\\) at \\\\(1\\\\) marked with incompatible GANG, WORKER, or VECTOR clause\" }\n+\n+      CALL ABORT\n+      END SUBROUTINE sub_1\n+\n+      MODULE m_w_1\n+      IMPLICIT NONE\n+!$ACC ROUTINE (ABORT) VECTOR ! { dg-error \"Intrinsic symbol specified in \\\\!\\\\\\$ACC ROUTINE \\\\( NAME \\\\) at \\\\(1\\\\) marked with incompatible GANG, WORKER, or VECTOR clause\" }\n+!$ACC ROUTINE (ABORT) WORKER ! { dg-error \"Intrinsic symbol specified in \\\\!\\\\\\$ACC ROUTINE \\\\( NAME \\\\) at \\\\(1\\\\) marked with incompatible GANG, WORKER, or VECTOR clause\" }\n+!$ACC ROUTINE (ABORT) GANG ! { dg-error \"Intrinsic symbol specified in \\\\!\\\\\\$ACC ROUTINE \\\\( NAME \\\\) at \\\\(1\\\\) marked with incompatible GANG, WORKER, or VECTOR clause\" }\n+\n+      CONTAINS\n+      SUBROUTINE sub_2\n+      CALL ABORT\n+      END SUBROUTINE sub_2\n+      END MODULE m_w_1"}]}