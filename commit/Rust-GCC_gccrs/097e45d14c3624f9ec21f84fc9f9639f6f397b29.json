{"sha": "097e45d14c3624f9ec21f84fc9f9639f6f397b29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk3ZTQ1ZDE0YzM2MjRmOWVjMjFmODRmYzlmOTYzOWY2ZjM5N2IyOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-24T08:02:52Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-24T08:02:52Z"}, "message": "(subst): Typo in prev change.\n\nFrom-SVN: r4557", "tree": {"sha": "37a1d38c67ae6c9913d2748253b0578d0257c631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37a1d38c67ae6c9913d2748253b0578d0257c631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/097e45d14c3624f9ec21f84fc9f9639f6f397b29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097e45d14c3624f9ec21f84fc9f9639f6f397b29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/097e45d14c3624f9ec21f84fc9f9639f6f397b29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097e45d14c3624f9ec21f84fc9f9639f6f397b29/comments", "author": null, "committer": null, "parents": [{"sha": "86c31b2d150ede7efba5e394716e341396a8b450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c31b2d150ede7efba5e394716e341396a8b450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c31b2d150ede7efba5e394716e341396a8b450"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b254d36b0a634d8ac6539b12fcb7e44ecc9bde26", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097e45d14c3624f9ec21f84fc9f9639f6f397b29/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097e45d14c3624f9ec21f84fc9f9639f6f397b29/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=097e45d14c3624f9ec21f84fc9f9639f6f397b29", "patch": "@@ -3092,7 +3092,7 @@ subst (x, from, to, in_dest, unique_copy)\n       if (CONSTANT_P (SUBREG_REG (x)) && subreg_lowpart_p (x)\n \t  && GET_MODE_SIZE (mode) < GET_MODE_SIZE (op0_mode)\n #if WORDS_BIG_ENDIAN\n-\t  && GET_MODE_BITSIZE (op0_mode) < BITS_PER_WORD\n+\t  && GET_MODE_BITSIZE (op0_mode) <= BITS_PER_WORD\n #endif\n \t  )\n \treturn gen_lowpart_for_combine (mode, SUBREG_REG (x));"}]}