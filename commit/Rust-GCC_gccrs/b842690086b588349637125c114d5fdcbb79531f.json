{"sha": "b842690086b588349637125c114d5fdcbb79531f", "node_id": "C_kwDOANBUbNoAKGI4NDI2OTAwODZiNTg4MzQ5NjM3MTI1YzExNGQ1ZmRjYmI3OTUzMWY", "commit": {"author": {"name": "zhongjuzhe", "email": "juzhe.zhong@rivai.ai", "date": "2022-08-27T10:57:23Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-08-29T02:16:03Z"}, "message": "RISC-V: Add RVV instructions classification\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.md: Add new type for vector instructions.", "tree": {"sha": "e4be38fb8c983649907f42d494c0b606a13d1867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4be38fb8c983649907f42d494c0b606a13d1867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b842690086b588349637125c114d5fdcbb79531f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b842690086b588349637125c114d5fdcbb79531f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b842690086b588349637125c114d5fdcbb79531f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b842690086b588349637125c114d5fdcbb79531f/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b37f96f1afab2d6ed32625e04700bd55b02261c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37f96f1afab2d6ed32625e04700bd55b02261c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b37f96f1afab2d6ed32625e04700bd55b02261c2"}], "stats": {"total": 100, "additions": 99, "deletions": 1}, "files": [{"sha": "ee3e7c53b78d4e576942134effc2e29c5432a02b", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 99, "deletions": 1, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b842690086b588349637125c114d5fdcbb79531f/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b842690086b588349637125c114d5fdcbb79531f/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=b842690086b588349637125c114d5fdcbb79531f", "patch": "@@ -195,10 +195,108 @@\n ;; nop\t\tno operation\n ;; ghost\tan instruction that produces no real code\n ;; bitmanip\tbit manipulation instructions\n+;; Classification of RVV instructions which will be added to each RVV .md pattern and used by scheduler.\n+;; rdvlenb     vector byte length vlenb csrr read\n+;; rdvl        vector length vl csrr read\n+;; 7. Vector Loads and Stores\n+;; vlde        vector unit-stride load instructions\n+;; vste        vector unit-stride store instructions\n+;; vldm        vector unit-stride mask load instructions\n+;; vstm        vector unit-stride mask store instructions\n+;; vlds        vector strided load instructions\n+;; vsts        vector strided store instructions\n+;; vldux       vector unordered indexed load instructions\n+;; vldox       vector ordered indexed load instructions\n+;; vstux       vector unordered indexed store instructions\n+;; vstox       vector ordered indexed store instructions\n+;; vldff       vector unit-stride fault-only-first load instructions\n+;; vldr        vector whole register load instructions\n+;; vstr        vector whole register store instructions\n+;; 11. Vector integer arithmetic instructions\n+;; vialu       vector single-width integer add and subtract and logical nstructions\n+;; viwalu      vector widening integer add/subtract\n+;; vext        vector integer extension\n+;; vicalu      vector arithmetic with carry or borrow instructions\n+;; vshift      vector single-width bit shift instructions\n+;; vnshift     vector narrowing integer shift instructions\n+;; vicmp       vector integer comparison/min/max instructions\n+;; vimul       vector single-width integer multiply instructions\n+;; vidiv       vector single-width integer divide instructions\n+;; viwmul      vector widening integer multiply instructions\n+;; vimuladd    vector single-width integer multiply-add instructions\n+;; viwmuladd   vector widening integer multiply-add instructions\n+;; vimerge     vector integer merge instructions\n+;; vimov       vector integer move vector instructions\n+;; 12. Vector fixed-point arithmetic instructions\n+;; vsalu       vector single-width saturating add and subtract and logical instructions\n+;; vaalu       vector single-width averaging add and subtract and logical instructions\n+;; vsmul       vector single-width fractional multiply with rounding and saturation instructions\n+;; vsshift     vector single-width scaling shift instructions\n+;; vnclip      vector narrowing fixed-point clip instructions\n+;; 13. Vector floating-point instructions\n+;; vfalu       vector single-width floating-point add/subtract instructions\n+;; vfwalu      vector widening floating-point add/subtract instructions\n+;; vfmul       vector single-width floating-point multiply instructions\n+;; vfdiv       vector single-width floating-point divide instructions\n+;; vfwmul      vector widening floating-point multiply instructions\n+;; vfmuladd    vector single-width floating-point multiply-add instructions\n+;; vfwmuladd   vector widening floating-point multiply-add instructions\n+;; vfsqrt      vector floating-point square-root instructions\n+;; vfrecp      vector floating-point reciprocal square-root instructions\n+;; vfcmp       vector floating-point comparison/min/max instructions\n+;; vfsgnj      vector floating-point sign-injection instructions\n+;; vfclass     vector floating-point classify instruction\n+;; vfmerge     vector floating-point merge instruction\n+;; vfmov       vector floating-point move instruction\n+;; vfcvtitof   vector single-width integer to floating-point instruction\n+;; vfcvtftoi   vector single-width floating-point to integer instruction\n+;; vfwcvtitof  vector widening integer to floating-point instruction\n+;; vfwcvtftoi  vector widening floating-point to integer instruction\n+;; vfwcvtftof  vector widening floating-point to floating-point instruction\n+;; vfncvtitof  vector narrowing integer to floating-point instruction\n+;; vfncvtftoi  vector narrowing floating-point to integer instruction\n+;; vfncvtftof  vector narrowing floating-point to floating-point instruction\n+;; 14. Vector reduction operations\n+;; vired       vector single-width integer reduction instructions\n+;; viwred      vector widening integer reduction instructions\n+;; vfred       vector single-width floating-point un-ordered reduction instruction\n+;; vfredo      vector single-width floating-point ordered reduction instruction\n+;; vfwred      vector widening floating-point un-ordered reduction instruction\n+;; vfwredo     vector widening floating-point ordered reduction instruction\n+;; 15. Vector mask instructions\n+;; vmalu       vector mask-register logical instructions\n+;; vmpop       vector mask population count\n+;; vmffs       vector find-first-set mask bit\n+;; vmsfs       vector set mask bit\n+;; vmiota      vector iota\n+;; vmidx       vector element index instruction\n+;; 16. Vector permutation instructions\n+;; vimovvx     integer scalar move instructions\n+;; vimovxv     integer scalar move instructions\n+;; vfmovvf     floating-point scalar move instructions\n+;; vfmovfv     floating-point scalar move instructions\n+;; vislide     vector slide instructions\n+;; vislide1    vector slide instructions\n+;; vfslide1    vector slide instructions\n+;; vgather     vector register gather instructions\n+;; vcompress   vector compress instruction\n+;; vmov        whole vector register move\n (define_attr \"type\"\n   \"unknown,branch,jump,call,load,fpload,store,fpstore,\n    mtc,mfc,const,arith,logical,shift,slt,imul,idiv,move,fmove,fadd,fmul,\n-   fmadd,fdiv,fcmp,fcvt,fsqrt,multi,auipc,sfb_alu,nop,ghost,bitmanip,rotate\"\n+   fmadd,fdiv,fcmp,fcvt,fsqrt,multi,auipc,sfb_alu,nop,ghost,bitmanip,rotate,\n+   rdvlenb,rdvl,vlde,vste,vldm,vstm,vlds,vsts,\n+   vldux,vldox,vstux,vstox,vldff,vldr,vstr,\n+   vialu,viwalu,vext,vicalu,vshift,vnshift,vicmp,\n+   vimul,vidiv,viwmul,vimuladd,viwmuladd,vimerge,vimov,\n+   vsalu,vaalu,vsmul,vsshift,vnclip,\n+   vfalu,vfwalu,vfmul,vfdiv,vfwmul,vfmuladd,vfwmuladd,vfsqrt,vfrecp,\n+   vfcmp,vfsgnj,vfclass,vfmerge,vfmov,\n+   vfcvtitof,vfcvtftoi,vfwcvtitof,vfwcvtftoi,\n+   vfwcvtftof,vfncvtitof,vfncvtftoi,vfncvtftof,\n+   vired,viwred,vfred,vfredo,vfwred,vfwredo,\n+   vmalu,vmpop,vmffs,vmsfs,vmiota,vmidx,vimovvx,vimovxv,vfmovvf,vfmovfv,\n+   vislide,vislide1,vfslide1,vgather,vcompress,vmov\"\n   (cond [(eq_attr \"got\" \"load\") (const_string \"load\")\n \n \t ;; If a doubleword move uses these expensive instructions,"}]}