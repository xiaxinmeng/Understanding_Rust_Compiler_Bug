{"sha": "afeeac3f8845c16d6165f59b1823f89dbca569bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlZWFjM2Y4ODQ1YzE2ZDYxNjVmNTliMTgyM2Y4OWRiY2E1NjliYg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-07-08T00:28:47Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-07-08T00:28:47Z"}, "message": "re PR target/10979 (ICE in subst_stack_regs_pat with -O -ffast-math and atan2)\n\n\n\tPR target/10979\n\t* config/i386/i386.md (atan2df3, atan2sf3, atan2xf3, atan2tf3):\n\tChanged to define_expand patterns that copy operand[1] to prevent\n\tit from being clobbered before emitting an atan2?f3_1 insn.\n\t(atan2df3_1, atan2sf3_1, atan2xf_1, atan2tf3_1): New define_insn\n\tpatterns that actually specify the behaviour of x87's FPATAN.\n\n\t* gcc.dg/20030707-1.c: New testcase.\n\nFrom-SVN: r69060", "tree": {"sha": "be83c44e11e1b7ef8910a79b837a206bed590044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be83c44e11e1b7ef8910a79b837a206bed590044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afeeac3f8845c16d6165f59b1823f89dbca569bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afeeac3f8845c16d6165f59b1823f89dbca569bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afeeac3f8845c16d6165f59b1823f89dbca569bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afeeac3f8845c16d6165f59b1823f89dbca569bb/comments", "author": null, "committer": null, "parents": [{"sha": "37bf2a13c5fae780bf1d460a48ab832a667ea1c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37bf2a13c5fae780bf1d460a48ab832a667ea1c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37bf2a13c5fae780bf1d460a48ab832a667ea1c5"}], "stats": {"total": 92, "additions": 87, "deletions": 5}, "files": [{"sha": "aa55701fb5ec9a4f86caf5f355a77be3108447bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afeeac3f8845c16d6165f59b1823f89dbca569bb", "patch": "@@ -1,3 +1,12 @@\n+2003-07-07  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/10979\n+\t* config/i386/i386.md (atan2df3, atan2sf3, atan2xf3, atan2tf3):\n+\tChanged to define_expand patterns that copy operand[1] to prevent\n+\tit from being clobbered before emitting an atan2?f3_1 insn.\n+\t(atan2df3_1, atan2sf3_1, atan2xf_1, atan2tf3_1): New define_insn\n+\tpatterns that actually specify the behaviour of x87's FPATAN.\n+\n 2003-07-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (rs6000_output_mi_thunk): Remove bogus"}, {"sha": "c90e0d12a1314b0290f4e5ec54bf3595a93f3a26", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 57, "deletions": 5, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=afeeac3f8845c16d6165f59b1823f89dbca569bb", "patch": "@@ -15582,7 +15582,7 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"atan2df3\"\n+(define_insn \"atan2df3_1\"\n   [(parallel [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t\t   (unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n \t\t\t       (match_operand:DF 1 \"register_operand\" \"u\")]\n@@ -15594,7 +15594,20 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"DF\")])\n \n-(define_insn \"atan2sf3\"\n+(define_expand \"atan2df3\"\n+  [(use (match_operand:DF 0 \"register_operand\" \"=f\"))\n+   (use (match_operand:DF 2 \"register_operand\" \"0\"))\n+   (use (match_operand:DF 1 \"register_operand\" \"u\"))]\n+  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  rtx copy = gen_reg_rtx (DFmode);\n+  emit_move_insn (copy, operands[1]);\n+  emit_insn (gen_atan2df3_1 (operands[0], copy, operands[2]));\n+  DONE;\n+}\n+\n+(define_insn \"atan2sf3_1\"\n   [(parallel [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t\t   (unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n \t\t\t       (match_operand:SF 1 \"register_operand\" \"u\")]\n@@ -15606,19 +15619,45 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"atan2xf3\"\n+(define_expand \"atan2sf3\"\n+  [(use (match_operand:SF 0 \"register_operand\" \"=f\"))\n+   (use (match_operand:SF 2 \"register_operand\" \"0\"))\n+   (use (match_operand:SF 1 \"register_operand\" \"u\"))]\n+  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  rtx copy = gen_reg_rtx (SFmode);\n+  emit_move_insn (copy, operands[1]);\n+  emit_insn (gen_atan2sf3_1 (operands[0], copy, operands[2]));\n+  DONE;\n+}\n+\n+(define_insn \"atan2xf3_1\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t\t   (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n \t\t\t       (match_operand:XF 1 \"register_operand\" \"u\")]\n \t\t    UNSPEC_FPATAN))\n \t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n-   && flag_unsafe_math_optimizations && !TARGET_128BIT_LONG_DOUBLE\"\n+   && flag_unsafe_math_optimizations && ! TARGET_128BIT_LONG_DOUBLE\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"atan2tf3\"\n+(define_expand \"atan2xf3\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"=f\"))\n+   (use (match_operand:XF 2 \"register_operand\" \"0\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"u\"))]\n+  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n+   && flag_unsafe_math_optimizations && ! TARGET_128BIT_LONG_DOUBLE\"\n+{\n+  rtx copy = gen_reg_rtx (XFmode);\n+  emit_move_insn (copy, operands[1]);\n+  emit_insn (gen_atan2xf3_1 (operands[0], copy, operands[2]));\n+  DONE;\n+}\n+\n+(define_insn \"atan2tf3_1\"\n   [(parallel [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n \t\t   (unspec:TF [(match_operand:TF 2 \"register_operand\" \"0\")\n \t\t\t       (match_operand:TF 1 \"register_operand\" \"u\")]\n@@ -15630,6 +15669,19 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"atan2tf3\"\n+  [(use (match_operand:TF 0 \"register_operand\" \"=f\"))\n+   (use (match_operand:TF 2 \"register_operand\" \"0\"))\n+   (use (match_operand:TF 1 \"register_operand\" \"u\"))]\n+  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n+   && flag_unsafe_math_optimizations && TARGET_128BIT_LONG_DOUBLE\"\n+{\n+  rtx copy = gen_reg_rtx (TFmode);\n+  emit_move_insn (copy, operands[1]);\n+  emit_insn (gen_atan2tf3_1 (operands[0], copy, operands[2]));\n+  DONE;\n+}\n+\n (define_insn \"*fyl2x_sfxf3\"\n   [(parallel [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t\t   (unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")"}, {"sha": "5ee11fb1baba0f94920e0b96e76a07a381c2fcfd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=afeeac3f8845c16d6165f59b1823f89dbca569bb", "patch": "@@ -1,3 +1,8 @@\n+2003-07-07  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/10979\n+\t* gcc.dg/20030707-1.c: New testcase.\n+\n 2003-07-07  Roger Sayle  <roger@eyesopen.com>\n \n \tPR optimization/11059"}, {"sha": "cd3e88ebbd81bd9623cdce64620c4f45126165e5", "filename": "gcc/testsuite/gcc.dg/20030707-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2Ftestsuite%2Fgcc.dg%2F20030707-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeeac3f8845c16d6165f59b1823f89dbca569bb/gcc%2Ftestsuite%2Fgcc.dg%2F20030707-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030707-1.c?ref=afeeac3f8845c16d6165f59b1823f89dbca569bb", "patch": "@@ -0,0 +1,16 @@\n+/* Derived from PR target/10979.  */\n+/* This testcase used to ICE on x86.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+void t(double);\n+double atan2(double,double);\n+\n+void temp(double *c)\n+{\n+  double c2 = 8;\n+  double s2 = 0;\n+  *c = atan2(s2,c2);\n+  t(1/s2);\n+}\n+"}]}