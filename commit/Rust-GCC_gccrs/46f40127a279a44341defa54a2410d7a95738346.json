{"sha": "46f40127a279a44341defa54a2410d7a95738346", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmNDAxMjdhMjc5YTQ0MzQxZGVmYTU0YTI0MTBkN2E5NTczODM0Ng==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-24T13:17:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-24T13:17:04Z"}, "message": "regclass.c (record_reg_classes, case 'p'): Set classes appropriately.\n\n        * regclass.c (record_reg_classes, case 'p'): Set classes appropriately.\n        An alternative always fails if it needs a pseudo and no suitable\n        register class can be found.\nBootstrapped on solaris.\n\nFrom-SVN: r25402", "tree": {"sha": "0c67dbf28427a3da25928be7bb0f90340b0645fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c67dbf28427a3da25928be7bb0f90340b0645fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f40127a279a44341defa54a2410d7a95738346", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f40127a279a44341defa54a2410d7a95738346", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f40127a279a44341defa54a2410d7a95738346", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f40127a279a44341defa54a2410d7a95738346/comments", "author": null, "committer": null, "parents": [{"sha": "c99f8c2a3e3a5a81f3bec3c1fd3a080343bd57d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99f8c2a3e3a5a81f3bec3c1fd3a080343bd57d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c99f8c2a3e3a5a81f3bec3c1fd3a080343bd57d1"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "057facc746142aa75097b7f36d43258fa8d68f75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f40127a279a44341defa54a2410d7a95738346/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f40127a279a44341defa54a2410d7a95738346/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46f40127a279a44341defa54a2410d7a95738346", "patch": "@@ -1,3 +1,9 @@\n+Wed Feb 24 14:03:54 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* regclass.c (record_reg_classes, case 'p'): Set classes appropriately.\n+\tAn alternative always fails if it needs a pseudo and no suitable\n+\tregister class can be found.\n+\n Wed Feb 24 19:47:56 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* loop.h (loop_insn_first_p): Declare."}, {"sha": "57be11828646608eff7ac7611f58b6a82cecb754", "filename": "gcc/regclass.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f40127a279a44341defa54a2410d7a95738346/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f40127a279a44341defa54a2410d7a95738346/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=46f40127a279a44341defa54a2410d7a95738346", "patch": "@@ -1268,6 +1268,12 @@ record_reg_classes (n_alts, n_ops, ops, modes, constraints, insn)\n \t      case 'p':\n \t\tallows_addr = 1;\n \t\twin = address_operand (op, GET_MODE (op));\n+\t\t/* We know this operand is an address, so we want it to be\n+\t\t   allocated to a register that can be the base of an\n+\t\t   address, ie BASE_REG_CLASS.  */\n+\t\tclasses[i]\n+\t\t  = reg_class_subunion[(int) classes[i]]\n+\t\t    [(int) BASE_REG_CLASS];\n \t\tbreak;\n \n \t      case 'm':  case 'o':  case 'V':\n@@ -1399,7 +1405,12 @@ record_reg_classes (n_alts, n_ops, ops, modes, constraints, insn)\n \t    {\n \t      if (classes[i] == NO_REGS)\n \t\t{\n-\t\t  if (! allows_addr)\n+\t\t    /* We must always fail if the operand is a REG, but\n+\t\t       we did not find a suitable class.\n+\n+\t\t       Otherwise we may perform an uninitialized read\n+\t\t       from this_op_costs after the `continue' statement\n+\t\t       below.  */\n \t\t    alt_fail = 1;\n \t\t}\n \t      else"}]}