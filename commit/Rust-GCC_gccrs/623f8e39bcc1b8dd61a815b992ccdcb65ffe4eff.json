{"sha": "623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzZjhlMzliY2MxYjhkZDYxYTgxNWI5OTJjY2RjYjY1ZmZlNGVmZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-04-28T09:45:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-04-28T09:45:26Z"}, "message": "re PR debug/36060 (Too big stack requirements of cc1plus during GC)\n\n\tPR debug/36060\n\t* dwarf2out.c (struct die_struct): Mark as chain_circular through\n\tdie_sub field.\n\t* gengtype.c (walk_type, write_func_for_structure): Handle\n\tchain_circular.\n\t* doc/gty.texi: Document chain_circular.\n\nFrom-SVN: r134750", "tree": {"sha": "37249f8b6b4632747ea172b9860309ecc5ad4c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37249f8b6b4632747ea172b9860309ecc5ad4c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/comments", "author": null, "committer": null, "parents": [{"sha": "0e8d83837e0c00a7bd52deedd2e3ed691f703310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8d83837e0c00a7bd52deedd2e3ed691f703310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8d83837e0c00a7bd52deedd2e3ed691f703310"}], "stats": {"total": 78, "additions": 55, "deletions": 23}, "files": [{"sha": "b8392545ac5b6b67fed34c9a75b294062eca92f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "patch": "@@ -1,3 +1,12 @@\n+2008-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/36060\n+\t* dwarf2out.c (struct die_struct): Mark as chain_circular through\n+\tdie_sub field.\n+\t* gengtype.c (walk_type, write_func_for_structure): Handle\n+\tchain_circular.\n+\t* doc/gty.texi: Document chain_circular.\n+\n 2008-04-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36066\n@@ -78,7 +87,7 @@\n \t* config/vxworks.c: Include tree.h.\n \t(vxworks_emutls_var_fields, vxworks_emutls_var_init): New.\n \t(vxworks_override_options): Set TLS scheme.\n-\t* gcc/doc/tm.texi (Emulated TLS): New node.\n+\t* doc/tm.texi (Emulated TLS): New node.\n \n 2008-04-26  Simon Baldwin <simonb@google.com>\n \n@@ -2190,10 +2199,7 @@\n \n 2008-04-01  George Helffrich  <george@gcc.gnu.org>\n \n-\tPR fortran/PR35154, fortran/PR23057\n-\t* fortran/trans-common.c (create_common):  Add decl to function\n-\tchain to preserve identifier scope in debug output.\n-\n+\tPR fortran/35154, fortran/23057\n \t* dbxout.c: Emit .stabs debug info for Fortran COMMON block\n \tvariables as base symbol name + offset using N_BCOMM/N_ECOMM.\n \t(is_fortran, dbxout_common_name, dbxout_common_check): New functions.\n@@ -2211,18 +2217,6 @@\n \t(common_check): New function to check whether symbol in Fortran COMMON.\n \t(gen_variable_die): If COMMON, use DW_TAG_common_block.\n \n-\t* testsuite/gcc.dg/debug/pr35154.c:  New test to check that non-Fortran\n-\tuse of common is unchanged.\n-\n-\t* testsuite/lib/gfortran-dg.exp:  New harness to compile Fortran progs\n-\twith all combinations of debug options available on target.\n-\t* testsuite/gfortran.dg/debug/debug.exp:  Ditto.\n-\t* testsuite/gfortran.dg/debug/trivial.f:  Ditto.\n-\t* testsuite/gfortran.dg/debug/pr35154-stabs.f:  New test case for\n-\t.stabs functionality.\n-\t* testsuite/gfortran.dg/debug/pr35154-dwarf2.f:  New test case for\n-\tDWARF functionality.\n-\n 2008-04-01  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \tPR c/35436\n@@ -6040,7 +6034,6 @@\n \n \t* config/spu/spu-builtins.def: Fixed wrong parameter type in spu \n \tintrinsics spu_convts, spu_convtu, spu_convtf.\n-\t* testsuite/gcc.target/spu/intrinsics-3.c: New. Test error messages.\n \n 2008-02-08  Hans-Peter Nilsson  <hp@axis.com>\n "}, {"sha": "c063d0184e3223abf4f0fbde1e9378d8784e6a62", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "patch": "@@ -316,8 +316,10 @@ escape.\n \n @findex chain_next\n @findex chain_prev\n+@findex chain_circular\n @item chain_next (\"@var{expression}\")\n @itemx chain_prev (\"@var{expression}\")\n+@itemx chain_circular (\"@var{expression}\")\n \n It's helpful for the type machinery to know if objects are often\n chained together in long lists; this lets it generate code that uses\n@@ -326,7 +328,8 @@ it.  @code{chain_next} is an expression for the next item in the list,\n @code{chain_prev} is an expression for the previous item.  For singly\n linked lists, use only @code{chain_next}; for doubly linked lists, use\n both.  The machinery requires that taking the next item of the\n-previous item gives the original item.\n+previous item gives the original item.  @code{chain_circular} is similar\n+to @code{chain_next}, but can be used for circular single linked lists.\n \n @findex reorder\n @item reorder (\"@var{function name}\")"}, {"sha": "cdf5250b49d9b75311fc67c3e453381d57d958e7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "patch": "@@ -3837,7 +3837,7 @@ DEF_VEC_ALLOC_O(dw_attr_node,gc);\n    The children of each node form a circular list linked by\n    die_sib.  die_child points to the node *before* the \"first\" child node.  */\n \n-typedef struct die_struct GTY(())\n+typedef struct die_struct GTY((chain_circular (\"%h.die_sib\")))\n {\n   enum dwarf_tag die_tag;\n   char *die_symbol;"}, {"sha": "84e8f7b0128209cf021630bf59bb012b5827414c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "patch": "@@ -227,6 +227,7 @@\n \n 2008-04-01  George Helffrich <george@gcc.gnu.org>\n \n+\tPR fortran/35154, fortran/23057\n \t* trans-common.c (create_common):  Add decl to function\n \tchain to preserve identifier scope in debug output.\n "}, {"sha": "aef52e2cdca571fe7e9b50ab941ff7a3462a96e7", "filename": "gcc/gengtype.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "patch": "@@ -1937,6 +1937,8 @@ walk_type (type_p t, struct walk_type_data *d)\n       ;\n     else if (strcmp (oo->name, \"chain_prev\") == 0)\n       ;\n+    else if (strcmp (oo->name, \"chain_circular\") == 0)\n+      ;\n     else if (strcmp (oo->name, \"reorder\") == 0)\n       ;\n     else\n@@ -2414,6 +2416,7 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n   int i;\n   const char *chain_next = NULL;\n   const char *chain_prev = NULL;\n+  const char *chain_circular = NULL;\n   const char *mark_hook_name = NULL;\n   options_p opt;\n   struct walk_type_data d;\n@@ -2432,11 +2435,17 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n       chain_next = opt->info;\n     else if (strcmp (opt->name, \"chain_prev\") == 0)\n       chain_prev = opt->info;\n+    else if (strcmp (opt->name, \"chain_circular\") == 0)\n+      chain_circular = opt->info;\n     else if (strcmp (opt->name, \"mark_hook\") == 0)\n       mark_hook_name = opt->info;\n \n   if (chain_prev != NULL && chain_next == NULL)\n     error_at_line (&s->u.s.line, \"chain_prev without chain_next\");\n+  if (chain_circular != NULL && chain_next != NULL)\n+    error_at_line (&s->u.s.line, \"chain_circular with chain_next\");\n+  if (chain_circular != NULL)\n+    chain_next = chain_circular;\n \n   d.process_field = write_types_process_field;\n   d.cookie = wtd;\n@@ -2481,14 +2490,19 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n     }\n   else\n     {\n-      oprintf (d.of, \"  while (%s (xlimit\", wtd->marker_routine);\n+      if (chain_circular != NULL)\n+\toprintf (d.of, \"  if (!%s (xlimit\", wtd->marker_routine);\n+      else\n+\toprintf (d.of, \"  while (%s (xlimit\", wtd->marker_routine);\n       if (wtd->param_prefix)\n \t{\n \t  oprintf (d.of, \", xlimit, gt_%s_\", wtd->param_prefix);\n \t  output_mangled_typename (d.of, orig_s);\n \t  output_type_enum (d.of, orig_s);\n \t}\n       oprintf (d.of, \"))\\n\");\n+      if (chain_circular != NULL)\n+\toprintf (d.of, \"    return;\\n  do\\n\");\n       if (mark_hook_name && !wtd->skip_hooks)\n \t{\n \t  oprintf (d.of, \"    {\\n\");\n@@ -2524,7 +2538,22 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n \t  oprintf (d.of, \");\\n\");\n \t  oprintf (d.of, \"      }\\n\");\n \t}\n-      oprintf (d.of, \"  while (x != xlimit)\\n\");\n+      if (chain_circular != NULL)\n+\t{\n+\t  oprintf (d.of, \"  while (%s (xlimit\", wtd->marker_routine);\n+\t  if (wtd->param_prefix)\n+\t    {\n+\t      oprintf (d.of, \", xlimit, gt_%s_\", wtd->param_prefix);\n+\t      output_mangled_typename (d.of, orig_s);\n+\t      output_type_enum (d.of, orig_s);\n+\t    }\n+\t  oprintf (d.of, \"));\\n\");\n+\t  if (mark_hook_name && !wtd->skip_hooks)\n+\t    oprintf (d.of, \"  %s (xlimit);\\n\", mark_hook_name);\n+\t  oprintf (d.of, \"  do\\n\");\n+\t}\n+      else\n+\toprintf (d.of, \"  while (x != xlimit)\\n\");\n     }\n   oprintf (d.of, \"    {\\n\");\n   if (mark_hook_name && chain_next == NULL && !wtd->skip_hooks)\n@@ -2543,6 +2572,8 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n     }\n \n   oprintf (d.of, \"    }\\n\");\n+  if (chain_circular != NULL)\n+    oprintf (d.of, \"  while (x != xlimit);\\n\");\n   oprintf (d.of, \"}\\n\");\n }\n "}, {"sha": "70a716a69074582381e1521fd70666e18a25c905", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=623f8e39bcc1b8dd61a815b992ccdcb65ffe4eff", "patch": "@@ -852,7 +852,7 @@\n \n 2008-04-01  George Helffrich  <george@gcc.gnu.org>\n \n-\tPRs fortran/PR35154, fortran/PR23057\n+\tPRs fortran/35154, fortran/23057\n \t* gcc.dg/debug/pr35154.c:  New test to check that non-Fortran\n \tuse of common is unchanged.\n \n@@ -2580,6 +2580,10 @@\n \tPR objc++/34193\n \t* obj-c++.dg/gnu-runtime-2.mm: Fix signature of function main().\n \n+2008-02-08  Sa Liu  <saliu@de.ibm.com>\n+\n+\t* gcc.target/spu/intrinsics-3.c: New. Test error messages.\n+\n 2008-02-06  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/35056"}]}