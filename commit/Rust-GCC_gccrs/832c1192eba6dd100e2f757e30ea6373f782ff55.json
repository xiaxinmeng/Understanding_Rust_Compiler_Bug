{"sha": "832c1192eba6dd100e2f757e30ea6373f782ff55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMyYzExOTJlYmE2ZGQxMDBlMmY3NTdlMzBlYTYzNzNmNzgyZmY1NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-06-01T20:23:51Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-06-01T20:29:20Z"}, "message": "i386: Add __attribute__ ((gcc_struct)) to struct fenv [PR95418]\n\nWindows ABI (MinGW) is different than Linux ABI when bitfileds are involved.\nThe following patch adds __attribute__ ((gcc_struct)) to struct fenv in order\nto match the layout of x87 state image in memory.\n\n2020-06-01  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\nlibatomic/ChangeLog:\n\t* config/x86/fenv.c (struct fenv): Add __attribute__ ((gcc_struct)).\n\nlibgcc/ChangeLog:\n\t* config/i386/sfp-exceptions.c (struct fenv):\n\tAdd __attribute__ ((gcc_struct)).\n\nlibgfortran/ChangeLog:\n\tPR libfortran/95418\n\t* config/fpu-387.h (struct fenv): Add __attribute__ ((gcc_struct)).", "tree": {"sha": "6ee3bf871a48de7e3054ec6dbd5e50d2b23ec97c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ee3bf871a48de7e3054ec6dbd5e50d2b23ec97c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/832c1192eba6dd100e2f757e30ea6373f782ff55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832c1192eba6dd100e2f757e30ea6373f782ff55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/832c1192eba6dd100e2f757e30ea6373f782ff55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832c1192eba6dd100e2f757e30ea6373f782ff55/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88f48e2967ead9be262483618238efa9c7c842ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f48e2967ead9be262483618238efa9c7c842ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f48e2967ead9be262483618238efa9c7c842ec"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "138a67ff2176fdaca2b2b3e61e269ac092b2d955", "filename": "libatomic/config/x86/fenv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832c1192eba6dd100e2f757e30ea6373f782ff55/libatomic%2Fconfig%2Fx86%2Ffenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832c1192eba6dd100e2f757e30ea6373f782ff55/libatomic%2Fconfig%2Fx86%2Ffenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfig%2Fx86%2Ffenv.c?ref=832c1192eba6dd100e2f757e30ea6373f782ff55", "patch": "@@ -45,7 +45,7 @@ struct fenv\n   unsigned int __data_offset;\n   unsigned short int __data_selector;\n   unsigned short int __unused5;\n-};\n+} __attribute__ ((gcc_struct));\n \n #ifdef __SSE_MATH__\n # define __math_force_eval_div(x, y) \\"}, {"sha": "3aed0af7c46b2bc6fc79809a5a07184f7a56b503", "filename": "libgcc/config/i386/sfp-exceptions.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832c1192eba6dd100e2f757e30ea6373f782ff55/libgcc%2Fconfig%2Fi386%2Fsfp-exceptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832c1192eba6dd100e2f757e30ea6373f782ff55/libgcc%2Fconfig%2Fi386%2Fsfp-exceptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsfp-exceptions.c?ref=832c1192eba6dd100e2f757e30ea6373f782ff55", "patch": "@@ -39,7 +39,7 @@ struct fenv\n   unsigned int __data_offset;\n   unsigned short int __data_selector;\n   unsigned short int __unused5;\n-};\n+} __attribute__ ((gcc_struct));\n \n #ifdef __SSE_MATH__\n # define __math_force_eval_div(x, y) \\"}, {"sha": "7ff5acdc933bc01c402070cf6d7ac45eee6cc8e1", "filename": "libgfortran/config/fpu-387.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832c1192eba6dd100e2f757e30ea6373f782ff55/libgfortran%2Fconfig%2Ffpu-387.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832c1192eba6dd100e2f757e30ea6373f782ff55/libgfortran%2Fconfig%2Ffpu-387.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-387.h?ref=832c1192eba6dd100e2f757e30ea6373f782ff55", "patch": "@@ -85,7 +85,7 @@ struct fenv\n   unsigned short int __data_selector;\n   unsigned short int __unused5;\n   unsigned int __mxcsr;\n-};\n+} __attribute__ ((gcc_struct));\n \n /* Check we can actually store the FPU state in the allocated size.  */\n _Static_assert (sizeof(struct fenv) <= (size_t) GFC_FPE_STATE_BUFFER_SIZE,"}]}