{"sha": "688a9b51c97414c7957825865a8ebc7458c15ebd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4YTliNTFjOTc0MTRjNzk1NzgyNTg2NWE4ZWJjNzQ1OGMxNWViZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-10-14T12:45:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T12:45:14Z"}, "message": "einfo.ads, einfo.adb (Default_Aspect_Component_Value): Is on base type only.\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Default_Aspect_Component_Value): Is on base type\n\tonly.\n\t* exp_aggr.adb (Expand_Array_Aggregate): Handle proper\n\tinitialization of <> component.\n\t* exp_ch3.adb, exp_tss.adb: Minor reformatting\n\t* sem_ch13.adb (Default_Aspect_Component_Value, Default_Aspect_Value):\n\tIs on base type only.\n\t* sinfo.ads: Minor comment revision.\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* g-decstr.adb (Decode_Wide_Wide_Character): Fix failure\n\tto detect invalid sequences where longer than necessary\n\tsequences are used for encoding.\n\t(Validate_Wide_Character):\n\tCall Decode_Wide_Character to get the above validations.\n\t(Validate_Wide_Wide_Character): Same fix\n\t* g-decstr.ads: Add documentation making it clear that the UTF-8\n\timplementation here recognizes all valid UTF-8 sequences, rather\n\tthan the well-formed subset corresponding to characters defined\n\tin Unicode.\n\t(Next_Wide_Character): Remove comment about this\n\tbeing more efficient than Decode_Wide_Character (because this\n\tno longer the case).\n\t(Prev_Wide_Character): Add note that valid encoding is assumed.\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* a-wichha.adb (Character_Set_Version): New function.\n\t* a-wichha.ads: Remove comments for pragma Pure (final RM has\n\tthis).\n\t(Character_Set_Version): New function.\n\t* gnat_rm.texi: Update doc.\n\nFrom-SVN: r203527", "tree": {"sha": "66eac7cd5ac22d91d26fdd7aca350b7e25d39cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66eac7cd5ac22d91d26fdd7aca350b7e25d39cd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688a9b51c97414c7957825865a8ebc7458c15ebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a9b51c97414c7957825865a8ebc7458c15ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688a9b51c97414c7957825865a8ebc7458c15ebd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a9b51c97414c7957825865a8ebc7458c15ebd/comments", "author": null, "committer": null, "parents": [{"sha": "124092ee8afddc68ec7905bd951cc647f7de84e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124092ee8afddc68ec7905bd951cc647f7de84e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124092ee8afddc68ec7905bd951cc647f7de84e6"}], "stats": {"total": 554, "additions": 241, "deletions": 313}, "files": [{"sha": "567d644f188ccd867568c27aefc6601c6324dd02", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -1,3 +1,39 @@\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Default_Aspect_Component_Value): Is on base type\n+\tonly.\n+\t* exp_aggr.adb (Expand_Array_Aggregate): Handle proper\n+\tinitialization of <> component.\n+\t* exp_ch3.adb, exp_tss.adb: Minor reformatting\n+\t* sem_ch13.adb (Default_Aspect_Component_Value, Default_Aspect_Value):\n+\tIs on base type only.\n+\t* sinfo.ads: Minor comment revision.\n+\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-decstr.adb (Decode_Wide_Wide_Character): Fix failure\n+\tto detect invalid sequences where longer than necessary\n+\tsequences are used for encoding.\n+\t(Validate_Wide_Character):\n+\tCall Decode_Wide_Character to get the above validations.\n+\t(Validate_Wide_Wide_Character): Same fix\n+\t* g-decstr.ads: Add documentation making it clear that the UTF-8\n+\timplementation here recognizes all valid UTF-8 sequences, rather\n+\tthan the well-formed subset corresponding to characters defined\n+\tin Unicode.\n+\t(Next_Wide_Character): Remove comment about this\n+\tbeing more efficient than Decode_Wide_Character (because this\n+\tno longer the case).\n+\t(Prev_Wide_Character): Add note that valid encoding is assumed.\n+\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-wichha.adb (Character_Set_Version): New function.\n+\t* a-wichha.ads: Remove comments for pragma Pure (final RM has\n+\tthis).\n+\t(Character_Set_Version): New function.\n+\t* gnat_rm.texi: Update doc.\n+\n 2013-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb: Flag263 is now known as Has_Null_Refinement."}, {"sha": "6692cbf445ffe932a2e1c63d1b009c8d27636a80", "filename": "gcc/ada/a-wichha.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fa-wichha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fa-wichha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wichha.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -33,6 +33,11 @@ with Ada.Wide_Characters.Unicode; use Ada.Wide_Characters.Unicode;\n \n package body Ada.Wide_Characters.Handling is\n \n+   function Character_Set_Version return String is\n+   begin\n+      return \"Unicode 6.2\";\n+   end Character_Set_Version;\n+\n    ---------------------\n    -- Is_Alphanumeric --\n    ---------------------"}, {"sha": "583308ec6a0c3fdbf0b4527d41bb8db7d8a00e52", "filename": "gcc/ada/a-wichha.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fa-wichha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fa-wichha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wichha.ads?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -15,10 +15,12 @@\n \n package Ada.Wide_Characters.Handling is\n    pragma Pure;\n-   --  This package is clearly intended to be Pure, by analogy with the\n-   --  base Ada.Characters.Handling package. The version in the RM does\n-   --  not yet have this pragma, but that is a clear omission. This will\n-   --  be fixed in a future version of AI05-0266-1.\n+\n+   function Character_Set_Version return String;\n+   pragma Inline (Character_Set_Version);\n+   --  Returns an implementation-defined identifier that identifies the version\n+   --  of the character set standard that is used for categorizing characters\n+   --  by the implementation. For GNAT this is \"Unicode v.v\".\n \n    function Is_Control (Item : Wide_Character) return Boolean;\n    pragma Inline (Is_Control);"}, {"sha": "8b6b3614b4733c7ba837730012579fd9100dcac5", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -853,13 +853,13 @@ package body Einfo is\n    function Default_Aspect_Component_Value (Id : E) return N is\n    begin\n       pragma Assert (Is_Array_Type (Id));\n-      return Node19 (Id);\n+      return Node19 (Base_Type (Id));\n    end Default_Aspect_Component_Value;\n \n    function Default_Aspect_Value (Id : E) return N is\n    begin\n       pragma Assert (Is_Scalar_Type (Id));\n-      return Node19 (Id);\n+      return Node19 (Base_Type (Id));\n    end Default_Aspect_Value;\n \n    function Default_Expr_Function (Id : E) return E is\n@@ -3456,13 +3456,13 @@ package body Einfo is\n \n    procedure Set_Default_Aspect_Component_Value (Id : E; V : E) is\n    begin\n-      pragma Assert (Is_Array_Type (Id));\n+      pragma Assert (Is_Array_Type (Id) and then Is_Base_Type (Id));\n       Set_Node19 (Id, V);\n    end Set_Default_Aspect_Component_Value;\n \n    procedure Set_Default_Aspect_Value (Id : E; V : E) is\n    begin\n-      pragma Assert (Is_Scalar_Type (Id));\n+      pragma Assert (Is_Scalar_Type (Id) and then Is_Base_Type (Id));\n       Set_Node19 (Id, V);\n    end Set_Default_Aspect_Value;\n "}, {"sha": "c1ffa0018d4875c892eeb403a5e0d5b8b2e72ea2", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -738,13 +738,13 @@ package Einfo is\n --       subprograms, this returns the {function,procedure}_specification, not\n --       the subprogram_declaration.\n \n---    Default_Aspect_Component_Value (Node19)\n+--    Default_Aspect_Component_Value (Node19) [base type only]\n --       Defined in array types. Holds the static value specified in a\n---       default_component_value aspect specification for the array type.\n+--       Default_Component_Value aspect specification for the array type.\n \n---    Default_Aspect_Value (Node19)\n+--    Default_Aspect_Value (Node19) [base type only]\n --       Defined in scalar types. Holds the static value specified in a\n---       default_value aspect specification for the type.\n+--       Default_Value aspect specification for the type.\n \n --    Default_Expr_Function (Node21)\n --       Defined in parameters. It holds the entity of the parameterless\n@@ -5171,7 +5171,7 @@ package Einfo is\n    --  E_Array_Type\n    --  E_Array_Subtype\n    --    First_Index                         (Node17)\n-   --    Default_Aspect_Component_Value      (Node19)\n+   --    Default_Aspect_Component_Value      (Node19)   (base type only)\n    --    Component_Type                      (Node20)   (base type only)\n    --    Original_Array_Type                 (Node21)\n    --    Component_Size                      (Uint22)   (base type only)\n@@ -5354,7 +5354,7 @@ package Einfo is\n    --    Lit_Indexes                         (Node15)   (root type only)\n    --    Lit_Strings                         (Node16)   (root type only)\n    --    First_Literal                       (Node17)\n-   --    Default_Aspect_Value                (Node19)\n+   --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Scalar_Range                        (Node20)\n    --    Enum_Pos_To_Rep                     (Node23)   (type only)\n    --    Static_Predicate                    (List25)\n@@ -5386,7 +5386,7 @@ package Einfo is\n    --  E_Floating_Point_Subtype\n    --    Digits_Value                        (Uint17)\n    --    Float_Rep                           (Uint10)   (Float_Rep_Kind)\n-   --    Default_Aspect_Value                (Node19)\n+   --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Scalar_Range                        (Node20)\n    --    Machine_Emax_Value                  (synth)\n    --    Machine_Emin_Value                  (synth)\n@@ -5564,7 +5564,7 @@ package Einfo is\n    --  E_Modular_Integer_Type\n    --  E_Modular_Integer_Subtype\n    --    Modulus                             (Uint17)   (base type only)\n-   --    Default_Aspect_Value                (Node19)\n+   --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Original_Array_Type                 (Node21)\n    --    Scalar_Range                        (Node20)\n    --    Static_Predicate                    (List25)\n@@ -5599,7 +5599,7 @@ package Einfo is\n    --  E_Ordinary_Fixed_Point_Type\n    --  E_Ordinary_Fixed_Point_Subtype\n    --    Delta_Value                         (Ureal18)\n-   --    Default_Aspect_Value                (Node19)\n+   --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Scalar_Range                        (Node20)\n    --    Small_Value                         (Ureal21)\n    --    Has_Small_Clause                    (Flag67)\n@@ -5853,7 +5853,7 @@ package Einfo is\n \n    --  E_Signed_Integer_Type\n    --  E_Signed_Integer_Subtype\n-   --    Default_Aspect_Value                (Node19)\n+   --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Scalar_Range                        (Node20)\n    --    Static_Predicate                    (List25)\n    --    Has_Biased_Representation           (Flag139)"}, {"sha": "e58e5b22f67cf36158b7c64fb4b61a4ddc277ae0", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -4878,6 +4878,43 @@ package body Exp_Aggr is\n          Check_Same_Aggr_Bounds (N, 1);\n       end if;\n \n+      --  STEP 1d\n+\n+      --  If we have a default component value, or simple initialization is\n+      --  required for the component type, then we replace <> in component\n+      --  associations by the required default value.\n+\n+      declare\n+         Default_Val : Node_Id;\n+         Assoc       : Node_Id;\n+\n+      begin\n+         if (Present (Default_Aspect_Component_Value (Typ))\n+              or else Needs_Simple_Initialization (Ctyp))\n+           and then Present (Component_Associations (N))\n+         then\n+            Assoc := First (Component_Associations (N));\n+            while Present (Assoc) loop\n+               if Nkind (Assoc) = N_Component_Association\n+                 and then Box_Present (Assoc)\n+               then\n+                  Set_Box_Present (Assoc, False);\n+\n+                  if Present (Default_Aspect_Component_Value (Typ)) then\n+                     Default_Val := Default_Aspect_Component_Value (Typ);\n+                  else\n+                     Default_Val := Get_Simple_Init_Val (Ctyp, N);\n+                  end if;\n+\n+                  Set_Expression (Assoc, New_Copy_Tree (Default_Val));\n+                  Analyze_And_Resolve (Expression (Assoc), Ctyp);\n+               end if;\n+\n+               Next (Assoc);\n+            end loop;\n+         end if;\n+      end;\n+\n       --  STEP 2\n \n       --  Here we test for is packed array aggregate that we can handle at"}, {"sha": "6b3a19327a414176b155ca891d9aaaf78bdc14c1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -4940,7 +4940,7 @@ package body Exp_Ch3 is\n                Next_Elmt (Discr);\n             end loop;\n \n-            --  Now collect values of initialized components.\n+            --  Now collect values of initialized components\n \n             Comp := First_Component (Full_Type);\n             while Present (Comp) loop\n@@ -4957,11 +4957,11 @@ package body Exp_Ch3 is\n                Next_Component (Comp);\n             end loop;\n \n-            --  Finally, box-initialize remaining components.\n+            --  Finally, box-initialize remaining components\n \n             Append_To (Component_Associations (Aggr),\n               Make_Component_Association (Loc,\n-                Choices => New_List (Make_Others_Choice (Loc)),\n+                Choices    => New_List (Make_Others_Choice (Loc)),\n                 Expression => Empty));\n             Set_Box_Present (Last (Component_Associations (Aggr)));\n             Set_Expression (N, Aggr);"}, {"sha": "2b6dc92d315eaebc3e5b2c275827b880bd395a29", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -211,7 +211,7 @@ package body Exp_Tss is\n    begin\n       return Present (BIP)\n         and then (Restriction_Active (No_Default_Initialization)\n-                    or else not Is_Null_Init_Proc (BIP));\n+                   or else not Is_Null_Init_Proc (BIP));\n    end Has_Non_Null_Base_Init_Proc;\n \n    ---------------"}, {"sha": "255e78a2614d81e65c391096851dbc43c814955b", "filename": "gcc/ada/g-decstr.adb", "status": "modified", "additions": 25, "deletions": 197, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fg-decstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fg-decstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-decstr.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2007-2010, AdaCore                     --\n+--                     Copyright (C) 2007-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -192,6 +192,11 @@ package body GNAT.Decode_String is\n             elsif (U and 2#11100000#) = 2#110_00000# then\n                W := U and 2#00011111#;\n                Get_UTF_Byte;\n+\n+               if W not in 16#00_0080# .. 16#00_07FF# then\n+                  Bad;\n+               end if;\n+\n                Result := Wide_Wide_Character'Val (W);\n \n             --  16#00_0800#-16#00_ffff#: 1110xxxx 10xxxxxx 10xxxxxx\n@@ -200,6 +205,11 @@ package body GNAT.Decode_String is\n                W := U and 2#00001111#;\n                Get_UTF_Byte;\n                Get_UTF_Byte;\n+\n+               if W not in 16#00_0800# .. 16#00_FFFF# then\n+                  Bad;\n+               end if;\n+\n                Result := Wide_Wide_Character'Val (W);\n \n             --  16#01_0000#-16#10_FFFF#: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n@@ -211,6 +221,10 @@ package body GNAT.Decode_String is\n                   Get_UTF_Byte;\n                end loop;\n \n+               if W not in 16#01_0000# .. 16#10_FFFF# then\n+                  Bad;\n+               end if;\n+\n                Result := Wide_Wide_Character'Val (W);\n \n             --  16#0020_0000#-16#03FF_FFFF#: 111110xx 10xxxxxx 10xxxxxx\n@@ -223,6 +237,10 @@ package body GNAT.Decode_String is\n                   Get_UTF_Byte;\n                end loop;\n \n+               if W not in 16#0020_0000# .. 16#03FF_FFFF# then\n+                  Bad;\n+               end if;\n+\n                Result := Wide_Wide_Character'Val (W);\n \n             --  All other cases are invalid, note that this includes:\n@@ -304,211 +322,21 @@ package body GNAT.Decode_String is\n    -------------------------\n \n    procedure Next_Wide_Character (Input : String; Ptr : in out Natural) is\n+      Discard : Wide_Character;\n+      pragma Unreferenced (Discard);\n    begin\n-      if Ptr < Input'First then\n-         Past_End;\n-      end if;\n-\n-      --  Special efficient encoding for UTF-8 case\n-\n-      if Encoding_Method = WCEM_UTF8 then\n-         UTF8 : declare\n-            U : Unsigned_32;\n-\n-            procedure Getc;\n-            pragma Inline (Getc);\n-            --  Gets the character at Input (Ptr) and returns code in U as\n-            --  Unsigned_32 value. On return Ptr is bumped past the character.\n-\n-            procedure Skip_UTF_Byte;\n-            pragma Inline (Skip_UTF_Byte);\n-            --  Skips past one encoded byte which must be 2#10xxxxxx#\n-\n-            ----------\n-            -- Getc --\n-            ----------\n-\n-            procedure Getc is\n-            begin\n-               if Ptr > Input'Last then\n-                  Past_End;\n-               else\n-                  U := Unsigned_32 (Character'Pos (Input (Ptr)));\n-                  Ptr := Ptr + 1;\n-               end if;\n-            end Getc;\n-\n-            -------------------\n-            -- Skip_UTF_Byte --\n-            -------------------\n-\n-            procedure Skip_UTF_Byte is\n-            begin\n-               Getc;\n-\n-               if (U and 2#11000000#) /= 2#10_000000# then\n-                  Bad;\n-               end if;\n-            end Skip_UTF_Byte;\n-\n-         --  Start of processing for UTF-8 case\n-\n-         begin\n-            --  16#00_0000#-16#00_007F#: 0xxxxxxx\n-\n-            Getc;\n-\n-            if (U and 2#10000000#) = 2#00000000# then\n-               return;\n-\n-            --  16#00_0080#-16#00_07FF#: 110xxxxx 10xxxxxx\n-\n-            elsif (U and 2#11100000#) = 2#110_00000# then\n-               Skip_UTF_Byte;\n-\n-            --  16#00_0800#-16#00_ffff#: 1110xxxx 10xxxxxx 10xxxxxx\n-\n-            elsif (U and 2#11110000#) = 2#1110_0000# then\n-               Skip_UTF_Byte;\n-               Skip_UTF_Byte;\n-\n-            --  Any other code is invalid, note that this includes:\n-\n-            --  16#01_0000#-16#10_FFFF#: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n-\n-            --  16#0020_0000#-16#03FF_FFFF#: 111110xx 10xxxxxx 10xxxxxx\n-            --                               10xxxxxx 10xxxxxx\n-\n-            --  16#0400_0000#-16#7FFF_FFFF#: 1111110x 10xxxxxx 10xxxxxx\n-            --                               10xxxxxx 10xxxxxx 10xxxxxx\n-\n-            --  since Wide_Character does not allow codes > 16#FFFF#\n-\n-            else\n-               Bad;\n-            end if;\n-         end UTF8;\n-\n-      --  Non-UTF-8 case\n-\n-      else\n-         declare\n-            Discard : Wide_Character;\n-         begin\n-            Decode_Wide_Character (Input, Ptr, Discard);\n-         end;\n-      end if;\n+      Decode_Wide_Character (Input, Ptr, Discard);\n    end Next_Wide_Character;\n \n    ------------------------------\n    -- Next_Wide_Wide_Character --\n    ------------------------------\n \n    procedure Next_Wide_Wide_Character (Input : String; Ptr : in out Natural) is\n+      Discard : Wide_Wide_Character;\n+      pragma Unreferenced (Discard);\n    begin\n-      --  Special efficient encoding for UTF-8 case\n-\n-      if Encoding_Method = WCEM_UTF8 then\n-         UTF8 : declare\n-            U : Unsigned_32;\n-\n-            procedure Getc;\n-            pragma Inline (Getc);\n-            --  Gets the character at Input (Ptr) and returns code in U as\n-            --  Unsigned_32 value. On return Ptr is bumped past the character.\n-\n-            procedure Skip_UTF_Byte;\n-            pragma Inline (Skip_UTF_Byte);\n-            --  Skips past one encoded byte which must be 2#10xxxxxx#\n-\n-            ----------\n-            -- Getc --\n-            ----------\n-\n-            procedure Getc is\n-            begin\n-               if Ptr > Input'Last then\n-                  Past_End;\n-               else\n-                  U := Unsigned_32 (Character'Pos (Input (Ptr)));\n-                  Ptr := Ptr + 1;\n-               end if;\n-            end Getc;\n-\n-            -------------------\n-            -- Skip_UTF_Byte --\n-            -------------------\n-\n-            procedure Skip_UTF_Byte is\n-            begin\n-               Getc;\n-\n-               if (U and 2#11000000#) /= 2#10_000000# then\n-                  Bad;\n-               end if;\n-            end Skip_UTF_Byte;\n-\n-         --  Start of processing for UTF-8 case\n-\n-         begin\n-            if Ptr < Input'First then\n-               Past_End;\n-            end if;\n-\n-            --  16#00_0000#-16#00_007F#: 0xxxxxxx\n-\n-            Getc;\n-\n-            if (U and 2#10000000#) = 2#00000000# then\n-               null;\n-\n-            --  16#00_0080#-16#00_07FF#: 110xxxxx 10xxxxxx\n-\n-            elsif (U and 2#11100000#) = 2#110_00000# then\n-               Skip_UTF_Byte;\n-\n-            --  16#00_0800#-16#00_ffff#: 1110xxxx 10xxxxxx 10xxxxxx\n-\n-            elsif (U and 2#11110000#) = 2#1110_0000# then\n-               Skip_UTF_Byte;\n-               Skip_UTF_Byte;\n-\n-            --  16#01_0000#-16#10_FFFF#: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n-\n-            elsif (U and 2#11111000#) = 2#11110_000# then\n-               for K in 1 .. 3 loop\n-                  Skip_UTF_Byte;\n-               end loop;\n-\n-            --  16#0020_0000#-16#03FF_FFFF#: 111110xx 10xxxxxx 10xxxxxx\n-            --                               10xxxxxx 10xxxxxx\n-\n-            elsif (U and 2#11111100#) = 2#111110_00# then\n-               for K in 1 .. 4 loop\n-                  Skip_UTF_Byte;\n-               end loop;\n-\n-            --  Any other code is invalid, note that this includes:\n-\n-            --  16#0400_0000#-16#7FFF_FFFF#: 1111110x 10xxxxxx 10xxxxxx\n-            --                               10xxxxxx 10xxxxxx 10xxxxxx\n-\n-            --  since Wide_Wide_Character does not allow codes > 16#03FF_FFFF#\n-\n-            else\n-               Bad;\n-            end if;\n-         end UTF8;\n-\n-      --  Non-UTF-8 case\n-\n-      else\n-         declare\n-            Discard : Wide_Wide_Character;\n-         begin\n-            Decode_Wide_Wide_Character (Input, Ptr, Discard);\n-         end;\n-      end if;\n+      Decode_Wide_Wide_Character (Input, Ptr, Discard);\n    end Next_Wide_Wide_Character;\n \n    --------------"}, {"sha": "d59f10dcb2005d66c8ceb4f6cb332fc43746ee3a", "filename": "gcc/ada/g-decstr.ads", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fg-decstr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fg-decstr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-decstr.ads?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                       Copyright (C) 2007-2010, AdaCore                   --\n+--                     Copyright (C) 2007-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,17 @@\n --  does not make any assumptions about the character coding. See also the\n --  packages Ada.Wide_[Wide_]Characters.Unicode for unicode specific functions.\n \n+--  In particular, in the case of UTF-8, all valid UTF-8 encodings, as listed\n+--  in table 3.6 of the Unicode Standard, version 6.2.0, are recognized as\n+--  legitimate. This includes the full range 16#0000_0000# .. 16#03FF_FFFF#.\n+--  This includes codes in the range 16#D800# - 16#DFFF#. These codes all\n+--  have UTF-8 encoding sequences that are well-defined (e.g. the encoding for\n+--  16#D800# is ED A0 80). But these codes do not correspond to defined Unicode\n+--  characters and are thus considered to be \"not well-formed\" (see table 3.7\n+--  of the Unicode Standard). If you need to exclude these codes, you must do\n+--  that manually, e.g. use Decode_Wide_Character/Decode_Wide_String and check\n+--  that the resulting code(s) are not in this range.\n+\n --  Note on the use of brackets encoding (WCEM_Brackets). The brackets encoding\n --  method is ambiguous in the context of this package, since there is no way\n --  to tell if [\"1234\"] is eight unencoded characters or one encoded character.\n@@ -86,7 +97,6 @@ package GNAT.Decode_String is\n    --  will be raised.\n \n    function Decode_Wide_Wide_String (S : String) return Wide_Wide_String;\n-   pragma Inline (Decode_Wide_Wide_String);\n    --  Same as above function but for Wide_Wide_String output\n \n    procedure Decode_Wide_Wide_String\n@@ -124,16 +134,17 @@ package GNAT.Decode_String is\n      (Input  : String;\n       Ptr    : in out Natural;\n       Result : out Wide_Wide_Character);\n+   pragma Inline (Decode_Wide_Wide_Character);\n    --  Same as above procedure but with Wide_Wide_Character input\n \n    procedure Next_Wide_Character (Input : String; Ptr : in out Natural);\n+   pragma Inline (Next_Wide_Character);\n    --  This procedure examines the input string starting at Input (Ptr), and\n    --  advances Ptr past one character in the encoded string, so that on return\n    --  Ptr points to the next encoded character. Constraint_Error is raised if\n    --  an invalid encoding is encountered, or the end of the string is reached\n    --  or if Ptr is less than String'First on entry, or if the character\n-   --  skipped is not a valid Wide_Character code. This call may be more\n-   --  efficient than calling Decode_Wide_Character and discarding the result.\n+   --  skipped is not a valid Wide_Character code.\n \n    procedure Prev_Wide_Character (Input : String; Ptr : in out Natural);\n    --  This procedure is similar to Next_Encoded_Character except that it moves\n@@ -149,8 +160,12 @@ package GNAT.Decode_String is\n    --  WCEM_Brackets). For all other encodings, we work by starting at the\n    --  beginning of the string and moving forward till Ptr is reached, which\n    --  is correct but slow.\n+   --\n+   --  Note: this routine assumes that the sequence prior to Ptr is correctly\n+   --  encoded, it does not have a defined behavior if this is not the case.\n \n    procedure Next_Wide_Wide_Character (Input : String; Ptr : in out Natural);\n+   pragma Inline (Next_Wide_Wide_Character);\n    --  Similar to Next_Wide_Character except that codes skipped must be valid\n    --  Wide_Wide_Character codes.\n "}, {"sha": "3c62f3d2127e9fe8c5f69d985f0b1fb8f67f1dd4", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 90, "deletions": 79, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -12217,7 +12217,18 @@ See items describing the integer and floating-point types supported.\n @sp 1\n @cartouche\n @noindent\n-@strong{61}.  The accuracy actually achieved by the elementary\n+@strong{61}. The string returned by @code{Character_Set_Version}.\n+See A.3.5(3).\n+@end cartouche\n+@noindent\n+@code{Ada.Wide_Characters.Handling.Character_Set_Version} returns\n+the string \"Unicode 6.2\", referring to version 6.2.x of the\n+Unicode specification.\n+\n+@sp 1\n+@cartouche\n+@noindent\n+@strong{62}.  The accuracy actually achieved by the elementary\n functions.  See A.5.1(1).\n @end cartouche\n @noindent\n@@ -12227,7 +12238,7 @@ library.  Only fast math mode is implemented.\n @sp 1\n @cartouche\n @noindent\n-@strong{62}.  The sign of a zero result from some of the operators or\n+@strong{63}.  The sign of a zero result from some of the operators or\n functions in @code{Numerics.Generic_Elementary_Functions}, when\n @code{Float_Type'Signed_Zeros} is @code{True}.  See A.5.1(46).\n @end cartouche\n@@ -12238,7 +12249,7 @@ floating-point.\n @sp 1\n @cartouche\n @noindent\n-@strong{63}.  The value of\n+@strong{64}.  The value of\n @code{Numerics.Float_Random.Max_Image_Width}.  See A.5.2(27).\n @end cartouche\n @noindent\n@@ -12247,7 +12258,7 @@ Maximum image width is 6864, see library file @file{s-rannum.ads}.\n @sp 1\n @cartouche\n @noindent\n-@strong{64}.  The value of\n+@strong{65}.  The value of\n @code{Numerics.Discrete_Random.Max_Image_Width}.  See A.5.2(27).\n @end cartouche\n @noindent\n@@ -12256,7 +12267,7 @@ Maximum image width is 6864, see library file @file{s-rannum.ads}.\n @sp 1\n @cartouche\n @noindent\n-@strong{65}.  The algorithms for random number generation.  See\n+@strong{66}.  The algorithms for random number generation.  See\n A.5.2(32).\n @end cartouche\n @noindent\n@@ -12267,7 +12278,7 @@ The algorithm is the Mersenne Twister, as documented in the source file\n @sp 1\n @cartouche\n @noindent\n-@strong{66}.  The string representation of a random number generator's\n+@strong{67}.  The string representation of a random number generator's\n state.  See A.5.2(38).\n @end cartouche\n @noindent\n@@ -12278,7 +12289,7 @@ of the state vector.\n @sp 1\n @cartouche\n @noindent\n-@strong{67}.  The minimum time interval between calls to the\n+@strong{68}.  The minimum time interval between calls to the\n time-dependent Reset procedure that are guaranteed to initiate different\n random number sequences.  See A.5.2(45).\n @end cartouche\n@@ -12289,7 +12300,7 @@ random numbers is one microsecond.\n @sp 1\n @cartouche\n @noindent\n-@strong{68}.  The values of the @code{Model_Mantissa},\n+@strong{69}.  The values of the @code{Model_Mantissa},\n @code{Model_Emin}, @code{Model_Epsilon}, @code{Model},\n @code{Safe_First}, and @code{Safe_Last} attributes, if the Numerics\n Annex is not supported.  See A.5.3(72).\n@@ -12301,7 +12312,7 @@ Run the compiler with @option{-gnatS} to produce a listing of package\n @sp 1\n @cartouche\n @noindent\n-@strong{69}.  Any implementation-defined characteristics of the\n+@strong{70}.  Any implementation-defined characteristics of the\n input-output packages.  See A.7(14).\n @end cartouche\n @noindent\n@@ -12311,7 +12322,7 @@ packages.\n @sp 1\n @cartouche\n @noindent\n-@strong{70}.  The value of @code{Buffer_Size} in @code{Storage_IO}.  See\n+@strong{71}.  The value of @code{Buffer_Size} in @code{Storage_IO}.  See\n A.9(10).\n @end cartouche\n @noindent\n@@ -12322,7 +12333,7 @@ boundary.\n @sp 1\n @cartouche\n @noindent\n-@strong{71}.  External files for standard input, standard output, and\n+@strong{72}.  External files for standard input, standard output, and\n standard error See A.10(5).\n @end cartouche\n @noindent\n@@ -12332,7 +12343,7 @@ libraries.  See source file @file{i-cstrea.ads} for further details.\n @sp 1\n @cartouche\n @noindent\n-@strong{72}.  The accuracy of the value produced by @code{Put}.  See\n+@strong{73}.  The accuracy of the value produced by @code{Put}.  See\n A.10.9(36).\n @end cartouche\n @noindent\n@@ -12343,7 +12354,7 @@ significant digit positions.\n @sp 1\n @cartouche\n @noindent\n-@strong{73}.  The meaning of @code{Argument_Count}, @code{Argument}, and\n+@strong{74}.  The meaning of @code{Argument_Count}, @code{Argument}, and\n @code{Command_Name}.  See A.15(1).\n @end cartouche\n @noindent\n@@ -12353,7 +12364,7 @@ main program in the natural manner.\n @sp 1\n @cartouche\n @noindent\n-@strong{74}.  The interpretation of the @code{Form} parameter in procedure\n+@strong{75}.  The interpretation of the @code{Form} parameter in procedure\n @code{Create_Directory}.  See A.16(56).\n @end cartouche\n @noindent\n@@ -12362,7 +12373,7 @@ The @code{Form} parameter is not used.\n @sp 1\n @cartouche\n @noindent\n-@strong{75}.  The interpretation of the @code{Form} parameter in procedure\n+@strong{76}.  The interpretation of the @code{Form} parameter in procedure\n @code{Create_Path}.  See A.16(60).\n @end cartouche\n @noindent\n@@ -12371,7 +12382,7 @@ The @code{Form} parameter is not used.\n @sp 1\n @cartouche\n @noindent\n-@strong{76}.  The interpretation of the @code{Form} parameter in procedure\n+@strong{77}.  The interpretation of the @code{Form} parameter in procedure\n @code{Copy_File}.  See A.16(68).\n @end cartouche\n @noindent\n@@ -12450,7 +12461,7 @@ Form => \"mode=internal, preserve=timestamps\"\n @sp 1\n @cartouche\n @noindent\n-@strong{77}.  Implementation-defined convention names.  See B.1(11).\n+@strong{78}.  Implementation-defined convention names.  See B.1(11).\n @end cartouche\n @noindent\n The following convention names are supported\n@@ -12517,15 +12528,15 @@ implementations, these names are accepted silently.\n @sp 1\n @cartouche\n @noindent\n-@strong{78}.  The meaning of link names.  See B.1(36).\n+@strong{79}.  The meaning of link names.  See B.1(36).\n @end cartouche\n @noindent\n Link names are the actual names used by the linker.\n \n @sp 1\n @cartouche\n @noindent\n-@strong{79}.  The manner of choosing link names when neither the link\n+@strong{80}.  The manner of choosing link names when neither the link\n name nor the address of an imported or exported entity is specified.  See\n B.1(36).\n @end cartouche\n@@ -12537,7 +12548,7 @@ letters.\n @sp 1\n @cartouche\n @noindent\n-@strong{80}.  The effect of pragma @code{Linker_Options}.  See B.1(37).\n+@strong{81}.  The effect of pragma @code{Linker_Options}.  See B.1(37).\n @end cartouche\n @noindent\n The string passed to @code{Linker_Options} is presented uninterpreted as\n@@ -12558,7 +12569,7 @@ from the corresponding package spec.\n @sp 1\n @cartouche\n @noindent\n-@strong{81}.  The contents of the visible part of package\n+@strong{82}.  The contents of the visible part of package\n @code{Interfaces} and its language-defined descendants.  See B.2(1).\n @end cartouche\n @noindent\n@@ -12567,7 +12578,7 @@ See files with prefix @file{i-} in the distributed library.\n @sp 1\n @cartouche\n @noindent\n-@strong{82}.  Implementation-defined children of package\n+@strong{83}.  Implementation-defined children of package\n @code{Interfaces}.  The contents of the visible part of package\n @code{Interfaces}.  See B.2(11).\n @end cartouche\n@@ -12577,7 +12588,7 @@ See files with prefix @file{i-} in the distributed library.\n @sp 1\n @cartouche\n @noindent\n-@strong{83}.  The types @code{Floating}, @code{Long_Floating},\n+@strong{84}.  The types @code{Floating}, @code{Long_Floating},\n @code{Binary}, @code{Long_Binary}, @code{Decimal_ Element}, and\n @code{COBOL_Character}; and the initialization of the variables\n @code{Ada_To_COBOL} and @code{COBOL_To_Ada}, in\n@@ -12605,15 +12616,15 @@ For initialization, see the file @file{i-cobol.ads} in the distributed library.\n @sp 1\n @cartouche\n @noindent\n-@strong{84}.  Support for access to machine instructions.  See C.1(1).\n+@strong{85}.  Support for access to machine instructions.  See C.1(1).\n @end cartouche\n @noindent\n See documentation in file @file{s-maccod.ads} in the distributed library.\n \n @sp 1\n @cartouche\n @noindent\n-@strong{85}.  Implementation-defined aspects of access to machine\n+@strong{86}.  Implementation-defined aspects of access to machine\n operations.  See C.1(9).\n @end cartouche\n @noindent\n@@ -12622,7 +12633,7 @@ See documentation in file @file{s-maccod.ads} in the distributed library.\n @sp 1\n @cartouche\n @noindent\n-@strong{86}.  Implementation-defined aspects of interrupts.  See C.3(2).\n+@strong{87}.  Implementation-defined aspects of interrupts.  See C.3(2).\n @end cartouche\n @noindent\n Interrupts are mapped to signals or conditions as appropriate.  See\n@@ -12633,7 +12644,7 @@ on the interrupts supported on a particular target.\n @sp 1\n @cartouche\n @noindent\n-@strong{87}.  Implementation-defined aspects of pre-elaboration.  See\n+@strong{88}.  Implementation-defined aspects of pre-elaboration.  See\n C.4(13).\n @end cartouche\n @noindent\n@@ -12643,7 +12654,7 @@ except under control of the debugger.\n @sp 1\n @cartouche\n @noindent\n-@strong{88}.  The semantics of pragma @code{Discard_Names}.  See C.5(7).\n+@strong{89}.  The semantics of pragma @code{Discard_Names}.  See C.5(7).\n @end cartouche\n @noindent\n Pragma @code{Discard_Names} causes names of enumeration literals to\n@@ -12654,7 +12665,7 @@ Pos values.\n @sp 1\n @cartouche\n @noindent\n-@strong{89}.  The result of the @code{Task_Identification.Image}\n+@strong{90}.  The result of the @code{Task_Identification.Image}\n attribute.  See C.7.1(7).\n @end cartouche\n @noindent\n@@ -12684,7 +12695,7 @@ virtual address of the control block of the task.\n @sp 1\n @cartouche\n @noindent\n-@strong{90}.  The value of @code{Current_Task} when in a protected entry\n+@strong{91}.  The value of @code{Current_Task} when in a protected entry\n or interrupt handler.  See C.7.1(17).\n @end cartouche\n @noindent\n@@ -12694,7 +12705,7 @@ convenient thread, so the value of @code{Current_Task} is undefined.\n @sp 1\n @cartouche\n @noindent\n-@strong{91}.  The effect of calling @code{Current_Task} from an entry\n+@strong{92}.  The effect of calling @code{Current_Task} from an entry\n body or interrupt handler.  See C.7.1(19).\n @end cartouche\n @noindent\n@@ -12705,7 +12716,7 @@ executing the code.\n @sp 1\n @cartouche\n @noindent\n-@strong{92}.  Implementation-defined aspects of\n+@strong{93}.  Implementation-defined aspects of\n @code{Task_Attributes}.  See C.7.2(19).\n @end cartouche\n @noindent\n@@ -12714,7 +12725,7 @@ There are no implementation-defined aspects of @code{Task_Attributes}.\n @sp 1\n @cartouche\n @noindent\n-@strong{93}.  Values of all @code{Metrics}.  See D(2).\n+@strong{94}.  Values of all @code{Metrics}.  See D(2).\n @end cartouche\n @noindent\n The metrics information for GNAT depends on the performance of the\n@@ -12729,7 +12740,7 @@ the required metrics.\n @sp 1\n @cartouche\n @noindent\n-@strong{94}.  The declarations of @code{Any_Priority} and\n+@strong{95}.  The declarations of @code{Any_Priority} and\n @code{Priority}.  See D.1(11).\n @end cartouche\n @noindent\n@@ -12738,15 +12749,15 @@ See declarations in file @file{system.ads}.\n @sp 1\n @cartouche\n @noindent\n-@strong{95}.  Implementation-defined execution resources.  See D.1(15).\n+@strong{96}.  Implementation-defined execution resources.  See D.1(15).\n @end cartouche\n @noindent\n There are no implementation-defined execution resources.\n \n @sp 1\n @cartouche\n @noindent\n-@strong{96}.  Whether, on a multiprocessor, a task that is waiting for\n+@strong{97}.  Whether, on a multiprocessor, a task that is waiting for\n access to a protected object keeps its processor busy.  See D.2.1(3).\n @end cartouche\n @noindent\n@@ -12756,7 +12767,7 @@ object does not keep its processor busy.\n @sp 1\n @cartouche\n @noindent\n-@strong{97}.  The affect of implementation defined execution resources\n+@strong{98}.  The affect of implementation defined execution resources\n on task dispatching.  See D.2.1(9).\n @end cartouche\n @noindent\n@@ -12767,7 +12778,7 @@ underlying operating system.\n @sp 1\n @cartouche\n @noindent\n-@strong{98}.  Implementation-defined @code{policy_identifiers} allowed\n+@strong{99}.  Implementation-defined @code{policy_identifiers} allowed\n in a pragma @code{Task_Dispatching_Policy}.  See D.2.2(3).\n @end cartouche\n @noindent\n@@ -12777,7 +12788,7 @@ pragma.\n @sp 1\n @cartouche\n @noindent\n-@strong{99}.  Implementation-defined aspects of priority inversion.  See\n+@strong{100}.  Implementation-defined aspects of priority inversion.  See\n D.2.2(16).\n @end cartouche\n @noindent\n@@ -12787,15 +12798,15 @@ of delay expirations for lower priority tasks.\n @sp 1\n @cartouche\n @noindent\n-@strong{100}.  Implementation-defined task dispatching.  See D.2.2(18).\n+@strong{101}.  Implementation-defined task dispatching.  See D.2.2(18).\n @end cartouche\n @noindent\n The policy is the same as that of the underlying threads implementation.\n \n @sp 1\n @cartouche\n @noindent\n-@strong{101}.  Implementation-defined @code{policy_identifiers} allowed\n+@strong{102}.  Implementation-defined @code{policy_identifiers} allowed\n in a pragma @code{Locking_Policy}.  See D.3(4).\n @end cartouche\n @noindent\n@@ -12812,7 +12823,7 @@ concurrently.\n @sp 1\n @cartouche\n @noindent\n-@strong{102}.  Default ceiling priorities.  See D.3(10).\n+@strong{103}.  Default ceiling priorities.  See D.3(10).\n @end cartouche\n @noindent\n The ceiling priority of protected objects of the type\n@@ -12822,7 +12833,7 @@ Reference Manual D.3(10),\n @sp 1\n @cartouche\n @noindent\n-@strong{103}.  The ceiling of any protected object used internally by\n+@strong{104}.  The ceiling of any protected object used internally by\n the implementation.  See D.3(16).\n @end cartouche\n @noindent\n@@ -12832,15 +12843,15 @@ The ceiling priority of internal protected objects is\n @sp 1\n @cartouche\n @noindent\n-@strong{104}.  Implementation-defined queuing policies.  See D.4(1).\n+@strong{105}.  Implementation-defined queuing policies.  See D.4(1).\n @end cartouche\n @noindent\n There are no implementation-defined queuing policies.\n \n @sp 1\n @cartouche\n @noindent\n-@strong{105}.  On a multiprocessor, any conditions that cause the\n+@strong{106}.  On a multiprocessor, any conditions that cause the\n completion of an aborted construct to be delayed later than what is\n specified for a single processor.  See D.6(3).\n @end cartouche\n@@ -12851,7 +12862,7 @@ processor, there are no further delays.\n @sp 1\n @cartouche\n @noindent\n-@strong{106}.  Any operations that implicitly require heap storage\n+@strong{107}.  Any operations that implicitly require heap storage\n allocation.  See D.7(8).\n @end cartouche\n @noindent\n@@ -12861,7 +12872,7 @@ task creation.\n @sp 1\n @cartouche\n @noindent\n-@strong{107}.  Implementation-defined aspects of pragma\n+@strong{108}.  Implementation-defined aspects of pragma\n @code{Restrictions}.  See D.7(20).\n @end cartouche\n @noindent\n@@ -12870,7 +12881,7 @@ There are no such implementation-defined aspects.\n @sp 1\n @cartouche\n @noindent\n-@strong{108}.  Implementation-defined aspects of package\n+@strong{109}.  Implementation-defined aspects of package\n @code{Real_Time}.  See D.8(17).\n @end cartouche\n @noindent\n@@ -12879,7 +12890,7 @@ There are no implementation defined aspects of package @code{Real_Time}.\n @sp 1\n @cartouche\n @noindent\n-@strong{109}.  Implementation-defined aspects of\n+@strong{110}.  Implementation-defined aspects of\n @code{delay_statements}.  See D.9(8).\n @end cartouche\n @noindent\n@@ -12889,7 +12900,7 @@ delayed (see D.9(7)).\n @sp 1\n @cartouche\n @noindent\n-@strong{110}.  The upper bound on the duration of interrupt blocking\n+@strong{111}.  The upper bound on the duration of interrupt blocking\n caused by the implementation.  See D.12(5).\n @end cartouche\n @noindent\n@@ -12899,7 +12910,7 @@ no cases is it more than 10 milliseconds.\n @sp 1\n @cartouche\n @noindent\n-@strong{111}.  The means for creating and executing distributed\n+@strong{112}.  The means for creating and executing distributed\n programs.  See E(5).\n @end cartouche\n @noindent\n@@ -12909,7 +12920,7 @@ distributed programs.  See the GLADE reference manual for further details.\n @sp 1\n @cartouche\n @noindent\n-@strong{112}.  Any events that can result in a partition becoming\n+@strong{113}.  Any events that can result in a partition becoming\n inaccessible.  See E.1(7).\n @end cartouche\n @noindent\n@@ -12918,7 +12929,7 @@ See the GLADE reference manual for full details on such events.\n @sp 1\n @cartouche\n @noindent\n-@strong{113}.  The scheduling policies, treatment of priorities, and\n+@strong{114}.  The scheduling policies, treatment of priorities, and\n management of shared resources between partitions in certain cases.  See\n E.1(11).\n @end cartouche\n@@ -12929,7 +12940,7 @@ multi-partition execution.\n @sp 1\n @cartouche\n @noindent\n-@strong{114}.  Events that cause the version of a compilation unit to\n+@strong{115}.  Events that cause the version of a compilation unit to\n change.  See E.3(5).\n @end cartouche\n @noindent\n@@ -12942,7 +12953,7 @@ comments.\n @sp 1\n @cartouche\n @noindent\n-@strong{115}.  Whether the execution of the remote subprogram is\n+@strong{116}.  Whether the execution of the remote subprogram is\n immediately aborted as a result of cancellation.  See E.4(13).\n @end cartouche\n @noindent\n@@ -12952,7 +12963,7 @@ a distributed application.\n @sp 1\n @cartouche\n @noindent\n-@strong{116}.  Implementation-defined aspects of the PCS@.  See E.5(25).\n+@strong{117}.  Implementation-defined aspects of the PCS@.  See E.5(25).\n @end cartouche\n @noindent\n See the GLADE reference manual for a full description of all implementation\n@@ -12961,7 +12972,7 @@ defined aspects of the PCS@.\n @sp 1\n @cartouche\n @noindent\n-@strong{117}.  Implementation-defined interfaces in the PCS@.  See\n+@strong{118}.  Implementation-defined interfaces in the PCS@.  See\n E.5(26).\n @end cartouche\n @noindent\n@@ -12971,7 +12982,7 @@ implementation defined interfaces.\n @sp 1\n @cartouche\n @noindent\n-@strong{118}.  The values of named numbers in the package\n+@strong{119}.  The values of named numbers in the package\n @code{Decimal}.  See F.2(7).\n @end cartouche\n @noindent\n@@ -12991,7 +13002,7 @@ implementation defined interfaces.\n @sp 1\n @cartouche\n @noindent\n-@strong{119}.  The value of @code{Max_Picture_Length} in the package\n+@strong{120}.  The value of @code{Max_Picture_Length} in the package\n @code{Text_IO.Editing}.  See F.3.3(16).\n @end cartouche\n @noindent\n@@ -13000,7 +13011,7 @@ implementation defined interfaces.\n @sp 1\n @cartouche\n @noindent\n-@strong{120}.  The value of @code{Max_Picture_Length} in the package\n+@strong{121}.  The value of @code{Max_Picture_Length} in the package\n @code{Wide_Text_IO.Editing}.  See F.3.4(5).\n @end cartouche\n @noindent\n@@ -13009,7 +13020,7 @@ implementation defined interfaces.\n @sp 1\n @cartouche\n @noindent\n-@strong{121}.  The accuracy actually achieved by the complex elementary\n+@strong{122}.  The accuracy actually achieved by the complex elementary\n functions and by other complex arithmetic operations.  See G.1(1).\n @end cartouche\n @noindent\n@@ -13019,7 +13030,7 @@ operations.  Only fast math mode is currently supported.\n @sp 1\n @cartouche\n @noindent\n-@strong{122}.  The sign of a zero result (or a component thereof) from\n+@strong{123}.  The sign of a zero result (or a component thereof) from\n any operator or function in @code{Numerics.Generic_Complex_Types}, when\n @code{Real'Signed_Zeros} is True.  See G.1.1(53).\n @end cartouche\n@@ -13030,7 +13041,7 @@ implementation advice.\n @sp 1\n @cartouche\n @noindent\n-@strong{123}.  The sign of a zero result (or a component thereof) from\n+@strong{124}.  The sign of a zero result (or a component thereof) from\n any operator or function in\n @code{Numerics.Generic_Complex_Elementary_Functions}, when\n @code{Real'Signed_Zeros} is @code{True}.  See G.1.2(45).\n@@ -13042,7 +13053,7 @@ implementation advice.\n @sp 1\n @cartouche\n @noindent\n-@strong{124}.  Whether the strict mode or the relaxed mode is the\n+@strong{125}.  Whether the strict mode or the relaxed mode is the\n default.  See G.2(2).\n @end cartouche\n @noindent\n@@ -13052,7 +13063,7 @@ provides a highly efficient implementation of strict mode.\n @sp 1\n @cartouche\n @noindent\n-@strong{125}.  The result interval in certain cases of fixed-to-float\n+@strong{126}.  The result interval in certain cases of fixed-to-float\n conversion.  See G.2.1(10).\n @end cartouche\n @noindent\n@@ -13063,7 +13074,7 @@ floating-point format.\n @sp 1\n @cartouche\n @noindent\n-@strong{126}.  The result of a floating point arithmetic operation in\n+@strong{127}.  The result of a floating point arithmetic operation in\n overflow situations, when the @code{Machine_Overflows} attribute of the\n result type is @code{False}.  See G.2.1(13).\n @end cartouche\n@@ -13080,7 +13091,7 @@ properly generated.\n @sp 1\n @cartouche\n @noindent\n-@strong{127}.  The result interval for division (or exponentiation by a\n+@strong{128}.  The result interval for division (or exponentiation by a\n negative exponent), when the floating point hardware implements division\n as multiplication by a reciprocal.  See G.2.1(16).\n @end cartouche\n@@ -13090,7 +13101,7 @@ Not relevant, division is IEEE exact.\n @sp 1\n @cartouche\n @noindent\n-@strong{128}.  The definition of close result set, which determines the\n+@strong{129}.  The definition of close result set, which determines the\n accuracy of certain fixed point multiplications and divisions.  See\n G.2.3(5).\n @end cartouche\n@@ -13103,7 +13114,7 @@ is converted to the target type.\n @sp 1\n @cartouche\n @noindent\n-@strong{129}.  Conditions on a @code{universal_real} operand of a fixed\n+@strong{130}.  Conditions on a @code{universal_real} operand of a fixed\n point multiplication or division for which the result shall be in the\n perfect result set.  See G.2.3(22).\n @end cartouche\n@@ -13115,7 +13126,7 @@ representable in 64-bits.\n @sp 1\n @cartouche\n @noindent\n-@strong{130}.  The result of a fixed point arithmetic operation in\n+@strong{131}.  The result of a fixed point arithmetic operation in\n overflow situations, when the @code{Machine_Overflows} attribute of the\n result type is @code{False}.  See G.2.3(27).\n @end cartouche\n@@ -13126,7 +13137,7 @@ types.\n @sp 1\n @cartouche\n @noindent\n-@strong{131}.  The result of an elementary function reference in\n+@strong{132}.  The result of an elementary function reference in\n overflow situations, when the @code{Machine_Overflows} attribute of the\n result type is @code{False}.  See G.2.4(4).\n @end cartouche\n@@ -13136,7 +13147,7 @@ IEEE infinite and Nan values are produced as appropriate.\n @sp 1\n @cartouche\n @noindent\n-@strong{132}.  The value of the angle threshold, within which certain\n+@strong{133}.  The value of the angle threshold, within which certain\n elementary functions, complex arithmetic operations, and complex\n elementary functions yield results conforming to a maximum relative\n error bound.  See G.2.4(10).\n@@ -13147,7 +13158,7 @@ Information on this subject is not yet available.\n @sp 1\n @cartouche\n @noindent\n-@strong{133}.  The accuracy of certain elementary functions for\n+@strong{134}.  The accuracy of certain elementary functions for\n parameters beyond the angle threshold.  See G.2.4(10).\n @end cartouche\n @noindent\n@@ -13156,7 +13167,7 @@ Information on this subject is not yet available.\n @sp 1\n @cartouche\n @noindent\n-@strong{134}.  The result of a complex arithmetic operation or complex\n+@strong{135}.  The result of a complex arithmetic operation or complex\n elementary function reference in overflow situations, when the\n @code{Machine_Overflows} attribute of the corresponding real type is\n @code{False}.  See G.2.6(5).\n@@ -13167,7 +13178,7 @@ IEEE infinite and Nan values are produced as appropriate.\n @sp 1\n @cartouche\n @noindent\n-@strong{135}.  The accuracy of certain complex arithmetic operations and\n+@strong{136}.  The accuracy of certain complex arithmetic operations and\n certain complex elementary functions for parameters (or components\n thereof) beyond the angle threshold.  See G.2.6(8).\n @end cartouche\n@@ -13177,7 +13188,7 @@ Information on those subjects is not yet available.\n @sp 1\n @cartouche\n @noindent\n-@strong{136}.  Information regarding bounded errors and erroneous\n+@strong{137}.  Information regarding bounded errors and erroneous\n execution.  See H.2(1).\n @end cartouche\n @noindent\n@@ -13186,7 +13197,7 @@ Information on this subject is not yet available.\n @sp 1\n @cartouche\n @noindent\n-@strong{137}.  Implementation-defined aspects of pragma\n+@strong{138}.  Implementation-defined aspects of pragma\n @code{Inspection_Point}.  See H.3.2(8).\n @end cartouche\n @noindent\n@@ -13196,7 +13207,7 @@ be examined by the debugger at the inspection point.\n @sp 1\n @cartouche\n @noindent\n-@strong{138}.  Implementation-defined aspects of pragma\n+@strong{139}.  Implementation-defined aspects of pragma\n @code{Restrictions}.  See H.4(25).\n @end cartouche\n @noindent\n@@ -13207,7 +13218,7 @@ generated code.  Checks must suppressed by use of pragma @code{Suppress}.\n @sp 1\n @cartouche\n @noindent\n-@strong{139}.  Any restrictions on pragma @code{Restrictions}.  See\n+@strong{140}.  Any restrictions on pragma @code{Restrictions}.  See\n H.4(27).\n @end cartouche\n @noindent"}, {"sha": "fb5abed1c43b8526fc26513b925cdd09d4190adf", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -770,17 +770,9 @@ package body Sem_Ch13 is\n          Set_Has_Default_Aspect (Base_Type (Ent));\n \n          if Is_Scalar_Type (Ent) then\n-            Set_Default_Aspect_Value (Ent, Expr);\n-\n-            --  Place default value of base type as well, because that is\n-            --  the semantics of the aspect. It is convenient to link the\n-            --  aspect to both the (possibly anonymous) base type and to\n-            --  the given first subtype.\n-\n             Set_Default_Aspect_Value (Base_Type (Ent), Expr);\n-\n          else\n-            Set_Default_Aspect_Component_Value (Ent, Expr);\n+            Set_Default_Aspect_Component_Value (Base_Type (Ent), Expr);\n          end if;\n       end Analyze_Aspect_Default_Value;\n \n@@ -9457,6 +9449,7 @@ package body Sem_Ch13 is\n       --  Default_Component_Value\n \n       if Is_Array_Type (Typ)\n+        and then Is_Base_Type (Typ)\n         and then Has_Rep_Item (Typ, Name_Default_Component_Value, False)\n         and then Has_Rep_Item (Typ, Name_Default_Component_Value)\n       then\n@@ -9468,6 +9461,7 @@ package body Sem_Ch13 is\n       --  Default_Value\n \n       if Is_Scalar_Type (Typ)\n+        and then Is_Base_Type (Typ)\n         and then Has_Rep_Item (Typ, Name_Default_Value, False)\n         and then Has_Rep_Item (Typ, Name_Default_Value)\n       then"}, {"sha": "c39f3c4885cdb61b2b80a8e83955996bd5052658", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a9b51c97414c7957825865a8ebc7458c15ebd/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=688a9b51c97414c7957825865a8ebc7458c15ebd", "patch": "@@ -3596,7 +3596,7 @@ package Sinfo is\n       --  Sloc points to first selector name\n       --  Choices (List1)\n       --  Loop_Actions (List2-Sem)\n-      --  Expression (Node3)\n+      --  Expression (Node3) (empty if Box_Present)\n       --  Box_Present (Flag15)\n       --  Inherited_Discriminant (Flag13)\n "}]}