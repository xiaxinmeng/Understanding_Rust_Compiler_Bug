{"sha": "45cc9f96c2ebbdad293d071211011d30d228296b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVjYzlmOTZjMmViYmRhZDI5M2QwNzEyMTEwMTFkMzBkMjI4Mjk2Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-28T14:23:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-28T14:23:27Z"}, "message": "gimple-fold.h (follow_single_use_edges): Declare.\n\n2014-10-28  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-fold.h (follow_single_use_edges): Declare.\n\t* gimple-fold.c (follow_single_use_edges): New function.\n\t(gimple_fold_stmt_to_constant_1): Dispatch to gimple_simplify.\n\t* tree-ssa-propagate.c\n\t(substitute_and_fold_dom_walker::before_dom_children): Allow\n\tfollowing single-use edges when folding stmts we propagated into.\n\nFrom-SVN: r216799", "tree": {"sha": "9a0c1ff3317b62c1e1d764dcfa9b97e606178106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a0c1ff3317b62c1e1d764dcfa9b97e606178106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45cc9f96c2ebbdad293d071211011d30d228296b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45cc9f96c2ebbdad293d071211011d30d228296b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45cc9f96c2ebbdad293d071211011d30d228296b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45cc9f96c2ebbdad293d071211011d30d228296b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "936c0fe4cbaa0f03a047d46122d1a87b893f5589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/936c0fe4cbaa0f03a047d46122d1a87b893f5589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/936c0fe4cbaa0f03a047d46122d1a87b893f5589"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "00708ed6d5e977a142997d7d82b74e3a694ca525", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45cc9f96c2ebbdad293d071211011d30d228296b", "patch": "@@ -1,3 +1,12 @@\n+2014-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.h (follow_single_use_edges): Declare.\n+\t* gimple-fold.c (follow_single_use_edges): New function.\n+\t(gimple_fold_stmt_to_constant_1): Dispatch to gimple_simplify.\n+\t* tree-ssa-propagate.c\n+\t(substitute_and_fold_dom_walker::before_dom_children): Allow\n+\tfollowing single-use edges when folding stmts we propagated into.\n+\n 2014-10-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "d0554f4e54f7ec5a07f62612f16e2738bcec753f", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=45cc9f96c2ebbdad293d071211011d30d228296b", "patch": "@@ -65,6 +65,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"tree-eh.h\"\n #include \"gimple-match.h\"\n+#include \"tree-phinodes.h\"\n+#include \"ssa-iterators.h\"\n \n /* Return true when DECL can be referenced from current unit.\n    FROM_DECL (if non-null) specify constructor of variable DECL was taken from.\n@@ -3241,6 +3243,17 @@ no_follow_ssa_edges (tree)\n   return NULL_TREE;\n }\n \n+/* Valueization callback that ends up following single-use SSA edges only.  */\n+\n+tree\n+follow_single_use_edges (tree val)\n+{\n+  if (TREE_CODE (val) == SSA_NAME\n+      && !has_single_use (val))\n+    return NULL_TREE;\n+  return val;\n+}\n+\n /* Fold the statement pointed to by GSI.  In some cases, this function may\n    replace the whole statement with a new one.  Returns true iff folding\n    makes any changes.\n@@ -4371,6 +4384,30 @@ maybe_fold_or_comparisons (enum tree_code code1, tree op1a, tree op1b,\n tree\n gimple_fold_stmt_to_constant_1 (gimple stmt, tree (*valueize) (tree))\n {\n+  code_helper rcode;\n+  tree ops[3] = {};\n+  /* ???  The SSA propagators do not correctly deal with following SSA use-def\n+     edges if there are intermediate VARYING defs.  For this reason\n+     do not follow SSA edges here even though SCCVN can technically\n+     just deal fine with that.  */\n+  if (gimple_simplify (stmt, &rcode, ops, NULL, no_follow_ssa_edges)\n+      && rcode.is_tree_code ()\n+      && (TREE_CODE_LENGTH ((tree_code) rcode) == 0\n+\t  || ((tree_code) rcode) == ADDR_EXPR)\n+      && is_gimple_val (ops[0]))\n+    {\n+      tree res = ops[0];\n+      if (dump_file && dump_flags & TDF_DETAILS)\n+\t{\n+\t  fprintf (dump_file, \"Match-and-simplified \");\n+\t  print_gimple_expr (dump_file, stmt, 0, TDF_SLIM);\n+\t  fprintf (dump_file, \" to \");\n+\t  print_generic_expr (dump_file, res, 0);\n+\t  fprintf (dump_file, \"\\n\");\n+\t}\n+      return res;\n+    }\n+\n   location_t loc = gimple_location (stmt);\n   switch (gimple_code (stmt))\n     {"}, {"sha": "0cd2899494ebaaaf69e1495b4bad886592d3e96d", "filename": "gcc/gimple-fold.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2Fgimple-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2Fgimple-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.h?ref=45cc9f96c2ebbdad293d071211011d30d228296b", "patch": "@@ -33,6 +33,7 @@ extern tree maybe_fold_and_comparisons (enum tree_code, tree, tree,\n extern tree maybe_fold_or_comparisons (enum tree_code, tree, tree,\n \t\t\t\t       enum tree_code, tree, tree);\n extern tree no_follow_ssa_edges (tree);\n+extern tree follow_single_use_edges (tree);\n extern tree gimple_fold_stmt_to_constant_1 (gimple, tree (*) (tree));\n extern tree gimple_fold_stmt_to_constant (gimple, tree (*) (tree));\n extern tree fold_const_aggregate_ref_1 (tree, tree (*) (tree));"}, {"sha": "9f4d3811f2872ac06babd177ba53e3b6e395efb2", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cc9f96c2ebbdad293d071211011d30d228296b/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=45cc9f96c2ebbdad293d071211011d30d228296b", "patch": "@@ -1150,7 +1150,7 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n \n       /* If we made a replacement, fold the statement.  */\n       if (did_replace)\n-\tfold_stmt (&i);\n+\tfold_stmt (&i, follow_single_use_edges);\n \n       /* Now cleanup.  */\n       if (did_replace)"}]}