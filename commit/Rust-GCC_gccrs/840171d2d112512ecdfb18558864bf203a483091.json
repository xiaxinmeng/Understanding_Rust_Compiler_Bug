{"sha": "840171d2d112512ecdfb18558864bf203a483091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQwMTcxZDJkMTEyNTEyZWNkZmIxODU1ODg2NGJmMjAzYTQ4MzA5MQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-09-22T10:32:51Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-09-22T10:32:51Z"}, "message": "re PR fortran/54599 (Issues found in gfortran by the Coverity Scan)\n\n2012-09-22  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/54599\n\t* dependency.c (gfc_dep_compare_expr):  Clarify logic,\n\tremove dead code.\n\nFrom-SVN: r191640", "tree": {"sha": "d28780de150087a52f20c89fad117dd77b374031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d28780de150087a52f20c89fad117dd77b374031"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/840171d2d112512ecdfb18558864bf203a483091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/840171d2d112512ecdfb18558864bf203a483091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/840171d2d112512ecdfb18558864bf203a483091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/840171d2d112512ecdfb18558864bf203a483091/comments", "author": null, "committer": null, "parents": [{"sha": "a2383b317b9d082d5d8d1661d61adc3d902efa83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2383b317b9d082d5d8d1661d61adc3d902efa83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2383b317b9d082d5d8d1661d61adc3d902efa83"}], "stats": {"total": 39, "additions": 18, "deletions": 21}, "files": [{"sha": "983d305419d1ff9b6951a919571751a5d7a16fb7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/840171d2d112512ecdfb18558864bf203a483091/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/840171d2d112512ecdfb18558864bf203a483091/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=840171d2d112512ecdfb18558864bf203a483091", "patch": "@@ -1,3 +1,9 @@\n+2012-09-22  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/54599\n+\t* dependency.c (gfc_dep_compare_expr):  Clarify logic,\n+\tremove dead code.\n+\n 2012-09-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54599"}, {"sha": "7c9525ac805d9c6b88c1c4984a63305c8564a535", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/840171d2d112512ecdfb18558864bf203a483091/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/840171d2d112512ecdfb18558864bf203a483091/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=840171d2d112512ecdfb18558864bf203a483091", "patch": "@@ -395,30 +395,21 @@ gfc_dep_compare_expr (gfc_expr *e1, gfc_expr *e2)\n       l = gfc_dep_compare_expr (e1->value.op.op1, e2->value.op.op1);\n       r = gfc_dep_compare_expr (e1->value.op.op2, e2->value.op.op2);\n \n-      if (l <= -2)\n+      if (l != 0)\n \treturn l;\n \n-      if (l == 0)\n-\t{\n-\t  /* Watch out for 'A ' // x vs. 'A' // x.  */\n-\t  gfc_expr *e1_left = e1->value.op.op1;\n-\t  gfc_expr *e2_left = e2->value.op.op1;\n-\n-\t  if (e1_left->expr_type == EXPR_CONSTANT\n-\t      && e2_left->expr_type == EXPR_CONSTANT\n-\t      && e1_left->value.character.length\n-\t\t != e2_left->value.character.length)\n-\t    return -2;\n-\t  else\n-\t    return r;\n-\t}\n+      /* Left expressions of // compare equal, but\n+\t watch out for 'A ' // x vs. 'A' // x.  */\n+      gfc_expr *e1_left = e1->value.op.op1;\n+      gfc_expr *e2_left = e2->value.op.op1;\n+\n+      if (e1_left->expr_type == EXPR_CONSTANT\n+\t  && e2_left->expr_type == EXPR_CONSTANT\n+\t  && e1_left->value.character.length\n+\t  != e2_left->value.character.length)\n+\treturn -2;\n       else\n-\t{\n-\t  if (l != 0)\n-\t    return l;\n-\t  else\n-\t    return r;\n-\t}\n+\treturn r;\n     }\n \n   /* Compare X vs. X-C, for INTEGER only.  */"}]}