{"sha": "fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0MGRhYTBjM2M3ZmE2YmU5N2ZhNGIxZTIxODVjNzhjOWYzZTA5YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-11-20T23:51:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-11-20T23:51:52Z"}, "message": "i386-builtin-types.awk: New file.\n\n\t* config/i386/i386-builtin-types.awk: New file.\n\t* config/i386/i386-builtin-types.def: New file.\n\t* config/i386/t-i386: Use them to build i386-builtin-types.inc.\n\t* config/i386/i386.c: Include it.\n\t(ix86_builtin_type_tab, ix86_get_builtin_type): New.\n\t(ix86_builtin_func_type_tab, ix86_get_builtin_func_type): New.\n\t(struct builtin_isa): Remove GTY marker.  Replace tree type with\n\tix86_builtin_func_type; add set_and_not_built_p.\n\t(def_builtin): Change type parameter to tcode; use\n\tix86_get_builtin_func_type; update all callers.  Accept zero mask\n\tto mean the builtin is unconditionally available.\n\t(ix86_add_new_builtins): Use set_and_not_built_p instead of type\n\tbeing set to NULL.\n\t(enum ix86_special_builtin_type, enum ix86_builtin_type): Remove.\n\tUpdate some users to rationalized enumeration codes from new include.\n\t(enum multi_arg_type): Remove.  Replace all enumeration values\n\twith defines to new ix86_builtin_func_type.\n\t(ix86_init_mmx_sse_builtins): Don't build any types here.  Defer\n\tall type resolution to def_builtin.\n\t(ix86_init_builtin_types): Split out from ...\n\t(ix86_init_builtins): ... here.  Use ix86_get_builtin_func_type.\n\nFrom-SVN: r154388", "tree": {"sha": "2d75ea9c893310d1f59925e218d85aa20adf29d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d75ea9c893310d1f59925e218d85aa20adf29d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/comments", "author": null, "committer": null, "parents": [{"sha": "497d383424c5d3c54d15d7fe6f3c4a2a1db128b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497d383424c5d3c54d15d7fe6f3c4a2a1db128b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497d383424c5d3c54d15d7fe6f3c4a2a1db128b4"}], "stats": {"total": 2943, "additions": 1027, "deletions": 1916}, "files": [{"sha": "b93f35b103f4931db618fa2cc5c78eb40185a233", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "patch": "@@ -1,3 +1,27 @@\n+2009-11-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386-builtin-types.awk: New file.\n+\t* config/i386/i386-builtin-types.def: New file.\n+\t* config/i386/t-i386: Use them to build i386-builtin-types.inc.\n+\t* config/i386/i386.c: Include it.\n+\t(ix86_builtin_type_tab, ix86_get_builtin_type): New.\n+\t(ix86_builtin_func_type_tab, ix86_get_builtin_func_type): New.\n+\t(struct builtin_isa): Remove GTY marker.  Replace tree type with\n+\tix86_builtin_func_type; add set_and_not_built_p.\n+\t(def_builtin): Change type parameter to tcode; use\n+\tix86_get_builtin_func_type; update all callers.  Accept zero mask\n+\tto mean the builtin is unconditionally available.\n+\t(ix86_add_new_builtins): Use set_and_not_built_p instead of type\n+\tbeing set to NULL.\n+\t(enum ix86_special_builtin_type, enum ix86_builtin_type): Remove.\n+\tUpdate some users to rationalized enumeration codes from new include.\n+\t(enum multi_arg_type): Remove.  Replace all enumeration values\n+\twith defines to new ix86_builtin_func_type.\n+\t(ix86_init_mmx_sse_builtins): Don't build any types here.  Defer\n+\tall type resolution to def_builtin.\n+\t(ix86_init_builtin_types): Split out from ...\n+\t(ix86_init_builtins): ... here.  Use ix86_get_builtin_func_type.\n+\n 2009-11-20  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/41787"}, {"sha": "0c54458d5165fd3000c85b317c2cee45d16a08ff", "filename": "gcc/config/i386/i386-builtin-types.awk", "status": "added", "additions": 279, "deletions": 0, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.awk?ref=fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "patch": "@@ -0,0 +1,279 @@\n+#  Copyright (C) 2009 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 3, or (at your option) any\n+# later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Generates compressed tables for types for i386 builtin functions.\n+\n+function do_error(string) {\n+    print FILENAME \":\" FNR \": \" string > \"/dev/stderr\"\n+    errors = 1\n+}\n+\n+function check_type(string) {\n+    if (!(string in type_hash))\n+\tdo_error(\"undefined type code \" string)\n+}\n+\n+# We can significantly reduce the size of the read-only tables\n+# by forcing the compiler to use a smaller implementation type\n+# for the enumerations.\n+function attribute_mode(count) {\n+    # ??? Except that we get strange \"comparison always false\" warnings\n+    # for comparisons between different elements of the enumeration.\n+    #    print \"#ifdef __GNUC__\"\n+    #    if (count < 256)\n+    #\tprint \"  __attribute__((__mode__(__QI__)))\"\n+    #    else\n+    #\tprint \"  __attribute__((__mode__(__HI__)))\"\n+    #    print \"#endif\"\n+}\n+\n+BEGIN {\n+    FS = \"[() \\t,]+\"\n+   \n+    prim_defs = 0\n+    vect_defs = 0\n+    ptr_defs = 0\n+    cptr_defs = 0\n+    func_defs = 0\n+    func_args = 0\n+    alias_defs = 0\n+}\n+\n+# Skip blank lines or comments.\n+/^[ \\t]*(#|$)/ {\n+    next\n+}\n+\n+$1 == \"DEF_PRIMITIVE_TYPE\" {\n+    if (NF == 4) {\n+\ttype_hash[$2] = 1\n+\tprim_name[prim_defs] = $2\n+\tprim_base[prim_defs] = $3\n+\tprim_defs++\n+    } else\n+\tdo_error(\"DEF_PRIMITIVE_TYPE expected 2 arguments\")\n+    next\n+}\n+\n+$1 == \"DEF_VECTOR_TYPE\" {\n+    if (NF == 4) {\n+\tcheck_type($3)\n+\ttype_hash[$2] = 1\n+\tvect_mode[vect_defs] = $2\n+\tvect_base[vect_defs] = $3\n+\tvect_defs++\n+    } else\n+\tdo_error(\"DEF_VECTOR_TYPE expected 2 arguments\")\n+    next\n+}\n+\n+$1 == \"DEF_POINTER_TYPE\" {\n+    if (NF == 4) {\n+\tcheck_type($3)\n+\ttype_hash[$2] = 1\n+\tptr_name[ptr_defs] = $2\n+\tptr_base[ptr_defs] = $3\n+\tptr_defs++\n+    } else if (NF == 5) {\n+\tcheck_type($3)\n+\tif ($4 == \"CONST\") {\n+\t    type_hash[$2] = 1\n+\t    cptr_name[cptr_defs] = $2\n+\t    cptr_base[cptr_defs] = $3\n+\t    cptr_defs++\n+\t} else\n+\t    do_error(\"invalid qualifier \\\"\" $4 \"\\\"\")\n+    }\n+    else\n+\tdo_error(\"DEF_POINTER_TYPE expected 2 or 3 arguments\")\n+    next\n+}\n+\n+$1 == \"DEF_FUNCTION_TYPE\" {\n+    func_start[func_defs] = func_args\n+    for (i = 2; i < NF; ++i) {\n+\tcheck_type($i)\n+\tfunc_types[func_args++] = $i\n+    }\n+\n+    if (NF < 3)\n+\tdo_error(\"DEF_FUNCTION_TYPE expected at least 1 argument\")\n+    else if (NF == 3)\n+\tname = $2 \"_FTYPE_VOID\"\n+    else {\n+\tname = $2 \"_FTYPE\"\n+\tfor (i = 3; i < NF; ++i)\n+\t    name = name \"_\" $i\n+    }\n+    func_hash[name] = 1\n+    func_name[func_defs++] = name\n+    next\n+}\n+\n+$1 == \"DEF_FUNCTION_TYPE_ALIAS\" {\n+    if (NF == 4) {\n+\tif ($2 in func_hash) {\n+\t    alias_base[alias_defs] = $2\n+\t    alias_name[alias_defs] = $2 \"_\" $3\n+\t    alias_defs++\n+\t} else\n+\t    do_error(\"undefined function code \" $2)\n+    } else\n+\tdo_error(\"DEF_FUNCTION_TYPE_ALIAS expected 2 arguments\")\n+    next\n+}\n+\n+{\n+    do_error(\"unknown directive \\\"\" $1 \"\\\"\");\n+}\n+\n+END {\n+    if (errors)\n+\texit 1\n+\n+    print \"/* This file is auto-generated by i386-builtin-types.awk.  */\\n\"\n+\n+    # This first enumeration contains all of the non-function types.\n+    print \"enum ix86_builtin_type {\"\n+    for (i = 0; i < prim_defs; ++i)\n+\tprint \"  IX86_BT_\" prim_name[i] \",\"\n+    print \"  IX86_BT_LAST_PRIM = IX86_BT_\" prim_name[i-1] \",\"\n+    for (i = 0; i < vect_defs; ++i)\n+\tprint \"  IX86_BT_\" vect_mode[i] \",\"\n+    print \"  IX86_BT_LAST_VECT = IX86_BT_\" vect_mode[i-1] \",\"\n+    for (i = 0; i < ptr_defs; ++i)\n+\tprint \"  IX86_BT_\" ptr_name[i] \",\"\n+    print \"  IX86_BT_LAST_PTR = IX86_BT_\" ptr_name[i-1] \",\"\n+    for (i = 0; i < cptr_defs; ++i)\n+\tprint \"  IX86_BT_\" cptr_name[i] \",\"\n+    print \"  IX86_BT_LAST_CPTR = IX86_BT_\" cptr_name[i-1] \"\\n}\"\n+    attribute_mode(prim_defs + vect_defs + ptr_defs + cptr_defs)\n+    print \";\\n\\n\"\n+\n+    # We can't tabularize the initialization of the primitives, since\n+    # at least one of them is created via a local variable.  That's ok,\n+    # just create a nice big macro to do all the work.\n+    print \"#define DEFINE_BUILTIN_PRIMITIVE_TYPES \\\\\"\n+    for (i = 0; i < prim_defs; ++i) {\n+\tprintf \"  ix86_builtin_type_tab[(int)IX86_BT_\" prim_name[i] \\\n+\t    \"] = \" prim_base[i]\n+\tif (i < prim_defs - 1)\n+\t    print \", \\\\\"\n+    }\n+    print \"\\n\\n\"\n+\n+    # The vector types are defined via two tables defining the real\n+    # machine mode and the builtin primitive type.  We use two tables\n+    # rather than a structure to avoid structure padding and save space.\n+    print \"static const enum machine_mode ix86_builtin_type_vect_mode[] = {\"\n+    for (i = 0; i < vect_defs; ++i) {\n+\tif (i == 0)\n+\t    printf \"  \"\n+\telse if (i % 6 == 0)\n+\t    printf \",\\n  \"\n+\telse\n+\t    printf \", \"\n+\tprintf vect_mode[i] \"mode\"\n+    }\n+    print \"\\n};\\n\\n\"\n+\n+    print \"static const enum ix86_builtin_type \" \\\n+\t\"ix86_builtin_type_vect_base[] = {\"\n+    for (i = 0; i < vect_defs; ++i) {\n+\tif (i == 0)\n+\t    printf \"  \"\n+\telse if (i % 4 == 0)\n+\t    printf \",\\n  \"\n+\telse\n+\t    printf \", \"\n+\tprintf \"IX86_BT_\" vect_base[i]\n+    }\n+    print \"\\n};\\n\\n\"\n+\n+    # The pointer types are defined via a single table defining the\n+    # builtin primitive type.  The const-ness of the pointer is taken\n+    # from the enumeration value > IX86_BT_LAST_PTR.\n+    print \"static const enum ix86_builtin_type \" \\\n+\t\"ix86_builtin_type_ptr_base[] = {\"\n+    for (i = 0; i < ptr_defs; ++i) {\n+\tif (i == 0)\n+\t    printf \" \"\n+\telse if (i % 4 == 0)\n+\t    printf \"\\n \"\n+\tprintf \" IX86_BT_\" ptr_base[i] \",\"\n+    }\n+    print \"\\n  /* pointer-to-constant defs start here */\"\n+    for (i = 0; i < cptr_defs; ++i) {\n+\tif (i == 0)\n+\t    printf \"  \"\n+\telse if (i % 4 == 0)\n+\t    printf \",\\n  \"\n+\telse\n+\t    printf \", \"\n+\tprintf \"IX86_BT_\" cptr_base[i]\n+    }\n+    print \"\\n};\\n\\n\"\n+\n+    # This second enumeration contains all of the function types.\n+    print \"enum ix86_builtin_func_type {\"\n+    for (i = 0; i < func_defs; ++i)\n+\tprint \"  \" func_name[i] \",\"\n+    print \"  IX86_BT_LAST_FUNC = \" func_name[i-1] \",\"\n+    for (i = 0; i < alias_defs; ++i)\n+\tprint \"  \" alias_name[i] \",\"\n+    print \"  IX86_BT_LAST_ALIAS = \" alias_name[i-1] \"\\n}\"\n+    attribute_mode(func_defs + alias_defs)\n+    print \";\\n\\n\"\n+\n+    # The function types are defined via two tables.  The first contains\n+    # ranges consiting of the function's return type, followed by all of\n+    # the function argument types.  The ranges for all of the builtin\n+    # functions are smooshed together in the same array.  The second array\n+    # contains, for each builtin, the index of the function's return type\n+    # within the first array.\n+    print \"static const enum ix86_builtin_type ix86_builtin_func_args[] = {\"\n+    for (i = 0; i < func_args; ++i) {\n+\tif (i == 0)\n+\t    printf \"  \"\n+\telse if (i % 4 == 0)\n+\t    printf \",\\n  \"\n+\telse\n+\t    printf \", \"\n+\tprintf \"IX86_BT_\" func_types[i]\n+    }\n+    print \"\\n};\\n\\n\"\n+\n+    print \"static const unsigned short ix86_builtin_func_start[] = {\"\n+    for (i = 0; i < func_defs; ++i) {\n+\tif (i == 0)\n+\t    printf \" \"\n+\telse if (i % 10 == 0)\n+\t    printf \"\\n \"\n+\tprintf \" \" func_start[i] \",\"\n+    }\n+    print \" \" func_args \"\\n};\\n\\n\"\n+\n+    print \"static const enum ix86_builtin_func_type \" \\\n+\t\"ix86_builtin_func_alias_base[] = {\"\n+    for (i = 0; i < alias_defs; ++i) {\n+\tif (i == 0)\n+\t    printf \"  \"\n+\telse\n+\t    printf \",\\n  \"\n+\tprintf alias_base[i]\n+    }\n+    print \"\\n};\"\n+}"}, {"sha": "3f0b20b4de2a8e81da3585f050435ce0e9268d9b", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "added", "additions": 375, "deletions": 0, "changes": 375, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "patch": "@@ -0,0 +1,375 @@\n+# This file provides a declarative way of describing the types that\n+# are used when declaring ix86 builtin functions.  It is processed\n+# with i386-builtin-type.awk to produce C code.\n+#\n+# DEF_PRIMITIVE_TYPE (ENUM, TYPE)\n+#\n+#   The ENUM is an identifier indicating which type is being defined.\n+#   TYPE is a variable that represents the type.\n+#   ??? Note that the awk program expects a single token for TYPE.\n+#   At present, that's all that's required; revisit if it turns out\n+#   that we need more than that.\n+#\n+# DEF_VECTOR_TYPE (ENUM, TYPE)\n+#\n+#  This describes a vector type.  ENUM doubles as both the identifier\n+#  to define in the enumeration as well as the mode of the vector; TYPE is\n+#  the enumeral for the inner type which should of course name a type of\n+#  the proper inner mode.\n+#\n+# DEF_POINTER_TYPE (ENUM, TYPE [, CONST])\n+#\n+#  This describes a pointer type.  ENUM is an identifier as above;\n+#  TYPE is the enumeral for the type pointed to.  An optional third \n+#  argument is the keyword CONST, which defines this to be a pointer to\n+#  a constant type.\n+#\n+# DEF_FUNCTION_TYPE (RETURN, ARGN*)\n+#\n+#   This describes a function type.  The return type and the arguments\n+#   are the enumerals defined above.  The enumeration name for the \n+#   function is formed by RETURN ## _FTYPE_ ## ARG1 ## _ ## ARG2 ...\n+#\n+# DEF_FUNCTION_TYPE_ALIAS (ENUM, SUFFIX)\n+#\n+#   This defines an enumeration ENUM ## _ ## SUFFIX and arranges for\n+#   the function type to be copied from ENUM.  This is used to control\n+#   how the expanders treat the function.\n+#\n+\n+DEF_PRIMITIVE_TYPE (VOID, void_type_node)\n+DEF_PRIMITIVE_TYPE (CHAR, char_type_node)\n+DEF_PRIMITIVE_TYPE (UCHAR, unsigned_char_type_node)\n+DEF_PRIMITIVE_TYPE (QI, intQI_type_node)\n+DEF_PRIMITIVE_TYPE (HI, intHI_type_node)\n+DEF_PRIMITIVE_TYPE (SI, intSI_type_node)\n+DEF_PRIMITIVE_TYPE (DI, long_long_integer_type_node)\n+DEF_PRIMITIVE_TYPE (USHORT, short_unsigned_type_node)\n+DEF_PRIMITIVE_TYPE (INT, integer_type_node)\n+DEF_PRIMITIVE_TYPE (UINT, unsigned_type_node)\n+DEF_PRIMITIVE_TYPE (UNSIGNED, unsigned_type_node)\n+DEF_PRIMITIVE_TYPE (LONGLONG, long_long_integer_type_node)\n+DEF_PRIMITIVE_TYPE (ULONGLONG, long_long_unsigned_type_node)\n+DEF_PRIMITIVE_TYPE (UINT8, unsigned_char_type_node)\n+DEF_PRIMITIVE_TYPE (UINT16, short_unsigned_type_node)\n+DEF_PRIMITIVE_TYPE (INT64, long_long_integer_type_node)\n+DEF_PRIMITIVE_TYPE (UINT64, long_long_unsigned_type_node)\n+DEF_PRIMITIVE_TYPE (FLOAT, float_type_node)\n+DEF_PRIMITIVE_TYPE (DOUBLE, double_type_node)\n+DEF_PRIMITIVE_TYPE (FLOAT80, float80_type_node)\n+DEF_PRIMITIVE_TYPE (FLOAT128, float128_type_node)\n+\n+DEF_VECTOR_TYPE (V16HI, HI)\n+DEF_VECTOR_TYPE (V16QI, CHAR)\n+DEF_VECTOR_TYPE (V1DI, DI)\n+DEF_VECTOR_TYPE (V2DF, DOUBLE)\n+DEF_VECTOR_TYPE (V2DI, DI)\n+DEF_VECTOR_TYPE (V2SF, FLOAT)\n+DEF_VECTOR_TYPE (V2SI, SI)\n+DEF_VECTOR_TYPE (V32QI, CHAR)\n+DEF_VECTOR_TYPE (V4DF, DOUBLE)\n+DEF_VECTOR_TYPE (V4DI, DI)\n+DEF_VECTOR_TYPE (V4HI, HI)\n+DEF_VECTOR_TYPE (V4SF, FLOAT)\n+DEF_VECTOR_TYPE (V4SI, SI)\n+DEF_VECTOR_TYPE (V8HI, HI)\n+DEF_VECTOR_TYPE (V8QI, CHAR)\n+DEF_VECTOR_TYPE (V8SF, FLOAT)\n+DEF_VECTOR_TYPE (V8SI, SI)\n+\n+DEF_POINTER_TYPE (PCCHAR, CHAR, CONST)\n+DEF_POINTER_TYPE (PCDOUBLE, DOUBLE, CONST)\n+DEF_POINTER_TYPE (PCFLOAT, FLOAT, CONST)\n+DEF_POINTER_TYPE (PCHAR, CHAR)\n+DEF_POINTER_TYPE (PCVOID, VOID, CONST)\n+DEF_POINTER_TYPE (PDOUBLE, DOUBLE)\n+DEF_POINTER_TYPE (PFLOAT, FLOAT)\n+DEF_POINTER_TYPE (PINT, INT)\n+DEF_POINTER_TYPE (PULONGLONG, ULONGLONG)\n+DEF_POINTER_TYPE (PUNSIGNED, UNSIGNED)\n+\n+DEF_POINTER_TYPE (PV2DF, V2DF)\n+DEF_POINTER_TYPE (PV2DI, V2DI)\n+DEF_POINTER_TYPE (PV2SF, V2SF)\n+DEF_POINTER_TYPE (PV4DF, V4DF)\n+DEF_POINTER_TYPE (PV4DI, V4DI)\n+DEF_POINTER_TYPE (PV4SF, V4SF)\n+DEF_POINTER_TYPE (PV8SF, V8SF)\n+\n+DEF_POINTER_TYPE (PCV2DF, V2DF, CONST)\n+DEF_POINTER_TYPE (PCV2SF, V2SF, CONST)\n+DEF_POINTER_TYPE (PCV4DF, V4DF, CONST)\n+DEF_POINTER_TYPE (PCV4SF, V4SF, CONST)\n+DEF_POINTER_TYPE (PCV8SF, V8SF, CONST)\n+\n+DEF_FUNCTION_TYPE (FLOAT128)\n+DEF_FUNCTION_TYPE (UINT64)\n+DEF_FUNCTION_TYPE (UNSIGNED)\n+DEF_FUNCTION_TYPE (VOID)\n+\n+DEF_FUNCTION_TYPE (FLOAT, FLOAT)\n+DEF_FUNCTION_TYPE (FLOAT128, FLOAT128)\n+DEF_FUNCTION_TYPE (INT, INT)\n+DEF_FUNCTION_TYPE (INT, V16QI)\n+DEF_FUNCTION_TYPE (INT, V2DF)\n+DEF_FUNCTION_TYPE (INT, V4DF)\n+DEF_FUNCTION_TYPE (INT, V4SF)\n+DEF_FUNCTION_TYPE (INT, V8QI)\n+DEF_FUNCTION_TYPE (INT, V8SF)\n+DEF_FUNCTION_TYPE (INT64, INT64)\n+DEF_FUNCTION_TYPE (INT64, V2DF)\n+DEF_FUNCTION_TYPE (INT64, V4SF)\n+DEF_FUNCTION_TYPE (UINT64, INT)\n+DEF_FUNCTION_TYPE (UINT64, PUNSIGNED)\n+DEF_FUNCTION_TYPE (V16QI, PCCHAR)\n+DEF_FUNCTION_TYPE (V16QI, V16QI)\n+DEF_FUNCTION_TYPE (V2DF, PCDOUBLE)\n+DEF_FUNCTION_TYPE (V2DF, V2DF)\n+DEF_FUNCTION_TYPE (V2DF, V2SI)\n+DEF_FUNCTION_TYPE (V2DF, V4DF)\n+DEF_FUNCTION_TYPE (V2DF, V4SF)\n+DEF_FUNCTION_TYPE (V2DF, V4SI)\n+DEF_FUNCTION_TYPE (V2DI, PV2DI)\n+DEF_FUNCTION_TYPE (V2DI, V16QI)\n+DEF_FUNCTION_TYPE (V2DI, V2DI)\n+DEF_FUNCTION_TYPE (V2DI, V4SI)\n+DEF_FUNCTION_TYPE (V2DI, V8HI)\n+DEF_FUNCTION_TYPE (V2SF, V2SF)\n+DEF_FUNCTION_TYPE (V2SF, V2SI)\n+DEF_FUNCTION_TYPE (V2SI, V2DF)\n+DEF_FUNCTION_TYPE (V2SI, V2SF)\n+DEF_FUNCTION_TYPE (V2SI, V2SI)\n+DEF_FUNCTION_TYPE (V2SI, V4SF)\n+DEF_FUNCTION_TYPE (V32QI, PCCHAR)\n+DEF_FUNCTION_TYPE (V4DF, PCDOUBLE)\n+DEF_FUNCTION_TYPE (V4DF, PCV2DF)\n+DEF_FUNCTION_TYPE (V4DF, V2DF)\n+DEF_FUNCTION_TYPE (V4DF, V4DF)\n+DEF_FUNCTION_TYPE (V4DF, V4SF)\n+DEF_FUNCTION_TYPE (V4DF, V4SI)\n+DEF_FUNCTION_TYPE (V4HI, V4HI)\n+DEF_FUNCTION_TYPE (V4SF, PCFLOAT)\n+DEF_FUNCTION_TYPE (V4SF, V2DF)\n+DEF_FUNCTION_TYPE (V4SF, V4DF)\n+DEF_FUNCTION_TYPE (V4SF, V4SF)\n+DEF_FUNCTION_TYPE (V4SF, V4SI)\n+DEF_FUNCTION_TYPE (V4SF, V8SF)\n+DEF_FUNCTION_TYPE (V4SI, V16QI)\n+DEF_FUNCTION_TYPE (V4SI, V2DF)\n+DEF_FUNCTION_TYPE (V4SI, V4DF)\n+DEF_FUNCTION_TYPE (V4SI, V4SF)\n+DEF_FUNCTION_TYPE (V4SI, V4SI)\n+DEF_FUNCTION_TYPE (V4SI, V8HI)\n+DEF_FUNCTION_TYPE (V4SI, V8SI)\n+DEF_FUNCTION_TYPE (V8HI, V16QI)\n+DEF_FUNCTION_TYPE (V8HI, V8HI)\n+DEF_FUNCTION_TYPE (V8QI, V8QI)\n+DEF_FUNCTION_TYPE (V8SF, PCFLOAT)\n+DEF_FUNCTION_TYPE (V8SF, PCV4SF)\n+DEF_FUNCTION_TYPE (V8SF, V4SF)\n+DEF_FUNCTION_TYPE (V8SF, V8SF)\n+DEF_FUNCTION_TYPE (V8SF, V8SI)\n+DEF_FUNCTION_TYPE (V8SI, V4SI)\n+DEF_FUNCTION_TYPE (V8SI, V8SF)\n+DEF_FUNCTION_TYPE (VOID, PCVOID)\n+DEF_FUNCTION_TYPE (VOID, UNSIGNED)\n+\n+DEF_FUNCTION_TYPE (DI, V2DI, INT)\n+DEF_FUNCTION_TYPE (DOUBLE, V2DF, INT)\n+DEF_FUNCTION_TYPE (FLOAT, V4SF, INT)\n+DEF_FUNCTION_TYPE (FLOAT128, FLOAT128, FLOAT128)\n+DEF_FUNCTION_TYPE (HI, V4HI, INT)\n+DEF_FUNCTION_TYPE (HI, V8HI, INT)\n+DEF_FUNCTION_TYPE (INT, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (INT, V2DI, V2DI)\n+DEF_FUNCTION_TYPE (INT, V4DF, V4DF)\n+DEF_FUNCTION_TYPE (INT, V4DI, V4DI)\n+DEF_FUNCTION_TYPE (INT, V4SF, V4SF)\n+DEF_FUNCTION_TYPE (INT, V8SF, V8SF)\n+DEF_FUNCTION_TYPE (QI, V16QI, INT)\n+DEF_FUNCTION_TYPE (QI, V8QI, INT)\n+DEF_FUNCTION_TYPE (SI, V2SI, INT)\n+DEF_FUNCTION_TYPE (SI, V4SI, INT)\n+DEF_FUNCTION_TYPE (UINT, UINT, UCHAR)\n+DEF_FUNCTION_TYPE (UINT, UINT, UINT)\n+DEF_FUNCTION_TYPE (UINT, UINT, USHORT)\n+DEF_FUNCTION_TYPE (UINT16, UINT16, INT)\n+DEF_FUNCTION_TYPE (UINT64, UINT64, UINT64)\n+DEF_FUNCTION_TYPE (UINT8, UINT8, INT)\n+DEF_FUNCTION_TYPE (V16QI, V16QI, SI)\n+DEF_FUNCTION_TYPE (V16QI, V16QI, V16QI)\n+DEF_FUNCTION_TYPE (V16QI, V8HI, V8HI)\n+DEF_FUNCTION_TYPE (V1DI, V1DI, SI)\n+DEF_FUNCTION_TYPE (V1DI, V1DI, V1DI)\n+DEF_FUNCTION_TYPE (V1DI, V2SI, V2SI)\n+DEF_FUNCTION_TYPE (V1DI, V8QI, V8QI)\n+DEF_FUNCTION_TYPE (V2DF, PCV2DF, V2DF)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, DI)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, INT)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, PCDOUBLE)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, SI)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, V2DI)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, V4SF)\n+DEF_FUNCTION_TYPE (V2DF, V4DF, INT)\n+DEF_FUNCTION_TYPE (V2DI, V16QI, V16QI)\n+DEF_FUNCTION_TYPE (V2DI, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, INT)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, SI)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, V16QI)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, V2DI)\n+DEF_FUNCTION_TYPE (V2DI, V4SI, V4SI)\n+DEF_FUNCTION_TYPE (V2SF, V2SF, V2SF)\n+DEF_FUNCTION_TYPE (V2SI, INT, INT)\n+DEF_FUNCTION_TYPE (V2SI, V2SF, V2SF)\n+DEF_FUNCTION_TYPE (V2SI, V2SI, SI)\n+DEF_FUNCTION_TYPE (V2SI, V2SI, V2SI)\n+DEF_FUNCTION_TYPE (V2SI, V4HI, V4HI)\n+DEF_FUNCTION_TYPE (V4DF, PCV4DF, V4DF)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, INT)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, V4DF)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, V4DI)\n+DEF_FUNCTION_TYPE (V4HI, V2SI, V2SI)\n+DEF_FUNCTION_TYPE (V4HI, V4HI, INT)\n+DEF_FUNCTION_TYPE (V4HI, V4HI, SI)\n+DEF_FUNCTION_TYPE (V4HI, V4HI, V4HI)\n+DEF_FUNCTION_TYPE (V4HI, V8QI, V8QI)\n+DEF_FUNCTION_TYPE (V4SF, PCV4SF, V4SF)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, DI)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, INT)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, PCV2SF)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, SI)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V2DF)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V2SI)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V4SF)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V4SI)\n+DEF_FUNCTION_TYPE (V4SF, V8SF, INT)\n+DEF_FUNCTION_TYPE (V4SI, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (V4SI, V4SF, V4SF)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, INT)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, SI)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, V4SI)\n+DEF_FUNCTION_TYPE (V4SI, V8HI, V8HI)\n+DEF_FUNCTION_TYPE (V4SI, V8SI, INT)\n+DEF_FUNCTION_TYPE (V8HI, V16QI, V16QI)\n+DEF_FUNCTION_TYPE (V8HI, V4SI, V4SI)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, INT)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, SI)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, V8HI)\n+DEF_FUNCTION_TYPE (V8QI, V4HI, V4HI)\n+DEF_FUNCTION_TYPE (V8QI, V8QI, V8QI)\n+DEF_FUNCTION_TYPE (V8SF, PCV8SF, V8SF)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, INT)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, V8SF)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, V8SI)\n+DEF_FUNCTION_TYPE (VOID, PCHAR, V16QI)\n+DEF_FUNCTION_TYPE (VOID, PCHAR, V32QI)\n+DEF_FUNCTION_TYPE (VOID, PDOUBLE, V2DF)\n+DEF_FUNCTION_TYPE (VOID, PDOUBLE, V4DF)\n+DEF_FUNCTION_TYPE (VOID, PFLOAT, V4SF)\n+DEF_FUNCTION_TYPE (VOID, PFLOAT, V8SF)\n+DEF_FUNCTION_TYPE (VOID, PINT, INT)\n+DEF_FUNCTION_TYPE (VOID, PULONGLONG, ULONGLONG)\n+DEF_FUNCTION_TYPE (VOID, PV2DI, V2DI)\n+DEF_FUNCTION_TYPE (VOID, PV2SF, V4SF)\n+DEF_FUNCTION_TYPE (VOID, PV4DI, V4DI)\n+DEF_FUNCTION_TYPE (VOID, UNSIGNED, UNSIGNED)\n+\n+DEF_FUNCTION_TYPE (INT, V16QI, V16QI, INT)\n+DEF_FUNCTION_TYPE (UCHAR, UINT, UINT, UINT)\n+DEF_FUNCTION_TYPE (UCHAR, UINT64, UINT, UINT)\n+DEF_FUNCTION_TYPE (UCHAR, USHORT, UINT, USHORT)\n+DEF_FUNCTION_TYPE (V16HI, V16HI, V16HI, V16HI)\n+DEF_FUNCTION_TYPE (V16QI, V16QI, QI, INT)\n+DEF_FUNCTION_TYPE (V16QI, V16QI, V16QI, INT)\n+DEF_FUNCTION_TYPE (V16QI, V16QI, V16QI, V16QI)\n+DEF_FUNCTION_TYPE (V1DI, V1DI, V1DI, INT)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, V2DF, INT)\n+DEF_FUNCTION_TYPE (V2DF, V2DF, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, DI, INT)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, UINT, UINT)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, V2DI, INT)\n+DEF_FUNCTION_TYPE (V2DI, V2DI, V2DI, V2DI)\n+DEF_FUNCTION_TYPE (V32QI, V32QI, V32QI, V32QI)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, V2DF, INT)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, V4DF, INT)\n+DEF_FUNCTION_TYPE (V4DF, V4DF, V4DF, V4DF)\n+DEF_FUNCTION_TYPE (V4DI, V4DI, V4DI, V4DI)\n+DEF_FUNCTION_TYPE (V4HI, V4HI, HI, INT)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, FLOAT, INT)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V4SF, INT)\n+DEF_FUNCTION_TYPE (V4SF, V4SF, V4SF, V4SF)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, SI, INT)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, V4SI, INT)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, V4SI, V2DI)\n+DEF_FUNCTION_TYPE (V4SI, V4SI, V4SI, V4SI)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, HI, INT)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, V8HI, INT)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, V8HI, V4SI)\n+DEF_FUNCTION_TYPE (V8HI, V8HI, V8HI, V8HI)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, V4SF, INT)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, V8SF, INT)\n+DEF_FUNCTION_TYPE (V8SF, V8SF, V8SF, V8SF)\n+DEF_FUNCTION_TYPE (V8SI, V8SI, V4SI, INT)\n+DEF_FUNCTION_TYPE (V8SI, V8SI, V8SI, INT)\n+DEF_FUNCTION_TYPE (V8SI, V8SI, V8SI, V8SI)\n+DEF_FUNCTION_TYPE (VOID, PCVOID, UNSIGNED, UNSIGNED)\n+DEF_FUNCTION_TYPE (VOID, PV2DF, V2DF, V2DF)\n+DEF_FUNCTION_TYPE (VOID, PV4DF, V4DF, V4DF)\n+DEF_FUNCTION_TYPE (VOID, PV4SF, V4SF, V4SF)\n+DEF_FUNCTION_TYPE (VOID, PV8SF, V8SF, V8SF)\n+DEF_FUNCTION_TYPE (VOID, UINT, UINT, UINT)\n+DEF_FUNCTION_TYPE (VOID, UINT64, UINT, UINT)\n+DEF_FUNCTION_TYPE (VOID, USHORT, UINT, USHORT)\n+DEF_FUNCTION_TYPE (VOID, V16QI, V16QI, PCHAR)\n+DEF_FUNCTION_TYPE (VOID, V8QI, V8QI, PCHAR)\n+\n+DEF_FUNCTION_TYPE (V2DI, V2DI, V2DI, UINT, UINT)\n+DEF_FUNCTION_TYPE (V4HI, HI, HI, HI, HI)\n+\n+DEF_FUNCTION_TYPE (INT, V16QI, INT, V16QI, INT, INT)\n+DEF_FUNCTION_TYPE (V16QI, V16QI, INT, V16QI, INT, INT)\n+\n+DEF_FUNCTION_TYPE (V8QI, QI, QI, QI, QI, QI, QI, QI, QI)\n+\n+DEF_FUNCTION_TYPE_ALIAS (INT_FTYPE_V2DF_V2DF, PTEST)\n+DEF_FUNCTION_TYPE_ALIAS (INT_FTYPE_V2DI_V2DI, PTEST)\n+DEF_FUNCTION_TYPE_ALIAS (INT_FTYPE_V4DF_V4DF, PTEST)\n+DEF_FUNCTION_TYPE_ALIAS (INT_FTYPE_V4DI_V4DI, PTEST)\n+DEF_FUNCTION_TYPE_ALIAS (INT_FTYPE_V4SF_V4SF, PTEST)\n+DEF_FUNCTION_TYPE_ALIAS (INT_FTYPE_V8SF_V8SF, PTEST)\n+\n+DEF_FUNCTION_TYPE_ALIAS (V2DF_FTYPE_V2DF, VEC_MERGE)\n+DEF_FUNCTION_TYPE_ALIAS (V4SF_FTYPE_V4SF, VEC_MERGE)\n+\n+DEF_FUNCTION_TYPE_ALIAS (V1DI_FTYPE_V1DI_SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V2SI_FTYPE_V2SI_SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4HI_FTYPE_V4HI_SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4SI_FTYPE_V4SI_SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8HI_FTYPE_V8HI_SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V1DI_FTYPE_V1DI_V1DI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_V2DI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V2SI_FTYPE_V2SI_V2SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4HI_FTYPE_V4HI_V4HI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4SI_FTYPE_V4SI_V4SI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8HI_FTYPE_V8HI_V8HI, COUNT)\n+\n+DEF_FUNCTION_TYPE_ALIAS (V2DF_FTYPE_V2DF_V2DF, SWAP)\n+DEF_FUNCTION_TYPE_ALIAS (V4SF_FTYPE_V4SF_V4SF, SWAP)\n+\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_INT, CONVERT)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_V2DI_INT, CONVERT)\n+DEF_FUNCTION_TYPE_ALIAS (V1DI_FTYPE_V1DI_V1DI_INT, CONVERT)\n+\n+DEF_FUNCTION_TYPE_ALIAS (V16QI_FTYPE_V16QI_V16QI, CMP)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_V2DI, CMP)\n+DEF_FUNCTION_TYPE_ALIAS (V4SI_FTYPE_V4SI_V4SI, CMP)\n+DEF_FUNCTION_TYPE_ALIAS (V8HI_FTYPE_V8HI_V8HI, CMP)\n+\n+DEF_FUNCTION_TYPE_ALIAS (V16QI_FTYPE_V16QI_V16QI, TF)\n+DEF_FUNCTION_TYPE_ALIAS (V2DF_FTYPE_V2DF_V2DF, TF)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_V2DI, TF)\n+DEF_FUNCTION_TYPE_ALIAS (V4SF_FTYPE_V4SF_V4SF, TF)\n+DEF_FUNCTION_TYPE_ALIAS (V4SI_FTYPE_V4SI_V4SI, TF)\n+DEF_FUNCTION_TYPE_ALIAS (V8HI_FTYPE_V8HI_V8HI, TF)"}, {"sha": "b85ef632c3a84888f3f887baf8c75b70a5fd60be", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 339, "deletions": 1915, "changes": 2254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "patch": "@@ -20194,6 +20194,108 @@ ix86_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n #endif\n }\n \f\n+/* The following file contains several enumerations and data structures\n+   built from the definitions in i386-builtin-types.def.  */\n+\n+#include \"i386-builtin-types.inc\"\n+\n+/* Table for the ix86 builtin non-function types.  */\n+static GTY(()) tree ix86_builtin_type_tab[(int) IX86_BT_LAST_CPTR + 1];\n+\n+/* Retrieve an element from the above table, building some of\n+   the types lazily.  */\n+\n+static tree\n+ix86_get_builtin_type (enum ix86_builtin_type tcode)\n+{\n+  unsigned int index;\n+  tree type, itype;\n+\n+  gcc_assert ((unsigned)tcode < ARRAY_SIZE(ix86_builtin_type_tab));\n+\n+  type = ix86_builtin_type_tab[(int) tcode];\n+  if (type != NULL)\n+    return type;\n+\n+  gcc_assert (tcode > IX86_BT_LAST_PRIM);\n+  if (tcode <= IX86_BT_LAST_VECT)\n+    {\n+      enum machine_mode mode;\n+\n+      index = tcode - IX86_BT_LAST_PRIM - 1;\n+      itype = ix86_get_builtin_type (ix86_builtin_type_vect_base[index]);\n+      mode = ix86_builtin_type_vect_mode[index];\n+\n+      type = build_vector_type_for_mode (itype, mode);\n+    }\n+  else\n+    {\n+      int quals;\n+\n+      index = tcode - IX86_BT_LAST_VECT - 1;\n+      if (tcode <= IX86_BT_LAST_PTR)\n+\tquals = TYPE_UNQUALIFIED;\n+      else\n+\tquals = TYPE_QUAL_CONST;\n+\n+      itype = ix86_get_builtin_type (ix86_builtin_type_ptr_base[index]);\n+      if (quals != TYPE_UNQUALIFIED)\n+\titype = build_qualified_type (itype, quals);\n+\n+      type = build_pointer_type (itype);\n+    }\n+\n+  ix86_builtin_type_tab[(int) tcode] = type;\n+  return type;\n+}\n+\n+/* Table for the ix86 builtin function types.  */\n+static GTY(()) tree ix86_builtin_func_type_tab[(int) IX86_BT_LAST_ALIAS + 1];\n+\n+/* Retrieve an element from the above table, building some of\n+   the types lazily.  */\n+\n+static tree\n+ix86_get_builtin_func_type (enum ix86_builtin_func_type tcode)\n+{\n+  tree type;\n+\n+  gcc_assert ((unsigned)tcode < ARRAY_SIZE (ix86_builtin_func_type_tab));\n+\n+  type = ix86_builtin_func_type_tab[(int) tcode];\n+  if (type != NULL)\n+    return type;\n+\n+  if (tcode <= IX86_BT_LAST_FUNC)\n+    {\n+      unsigned start = ix86_builtin_func_start[(int) tcode];\n+      unsigned after = ix86_builtin_func_start[(int) tcode + 1];\n+      tree rtype, atype, args = void_list_node;\n+      unsigned i;\n+\n+      rtype = ix86_get_builtin_type (ix86_builtin_func_args[start]);\n+      for (i = after - 1; i > start; --i)\n+\t{\n+\t  atype = ix86_get_builtin_type (ix86_builtin_func_args[i]);\n+\t  args = tree_cons (NULL, atype, args);\n+\t}\n+\n+      type = build_function_type (rtype, args);\n+    }\n+  else\n+    {\n+      unsigned index = tcode - IX86_BT_LAST_FUNC - 1;\n+      enum ix86_builtin_func_type icode;\n+\n+      icode = ix86_builtin_func_alias_base[index];\n+      type = ix86_get_builtin_func_type (icode);\n+    }\n+\n+  ix86_builtin_func_type_tab[(int) tcode] = type;\n+  return type;\n+}\n+\n+\n /* Codes for all the SSE/MMX builtins.  */\n enum ix86_builtins\n {\n@@ -21124,57 +21226,62 @@ static GTY(()) tree ix86_builtins[(int) IX86_BUILTIN_MAX];\n /* Table of all of the builtin functions that are possible with different ISA's\n    but are waiting to be built until a function is declared to use that\n    ISA.  */\n-struct GTY(()) builtin_isa {\n-  tree type;\t\t\t/* builtin type to use in the declaration */\n+struct builtin_isa {\n   const char *name;\t\t/* function name */\n+  enum ix86_builtin_func_type tcode; /* type to use in the declaration */\n   int isa;\t\t\t/* isa_flags this builtin is defined for */\n   bool const_p;\t\t\t/* true if the declaration is constant */\n+  bool set_and_not_built_p;\n };\n \n-static GTY(()) struct builtin_isa ix86_builtins_isa[(int) IX86_BUILTIN_MAX];\n+static struct builtin_isa ix86_builtins_isa[(int) IX86_BUILTIN_MAX];\n \n \n /* Add an ix86 target builtin function with CODE, NAME and TYPE.  Save the MASK\n- * of which isa_flags to use in the ix86_builtins_isa array.  Stores the\n- * function decl in the ix86_builtins array.  Returns the function decl or\n- * NULL_TREE, if the builtin was not added.\n- *\n- * If the front end has a special hook for builtin functions, delay adding\n- * builtin functions that aren't in the current ISA until the ISA is changed\n- * with function specific optimization.  Doing so, can save about 300K for the\n- * default compiler.  When the builtin is expanded, check at that time whether\n- * it is valid.\n- *\n- * If the front end doesn't have a special hook, record all builtins, even if\n- * it isn't an instruction set in the current ISA in case the user uses\n- * function specific options for a different ISA, so that we don't get scope\n- * errors if a builtin is added in the middle of a function scope.  */\n+   of which isa_flags to use in the ix86_builtins_isa array.  Stores the\n+   function decl in the ix86_builtins array.  Returns the function decl or\n+   NULL_TREE, if the builtin was not added.\n+\n+   If the front end has a special hook for builtin functions, delay adding\n+   builtin functions that aren't in the current ISA until the ISA is changed\n+   with function specific optimization.  Doing so, can save about 300K for the\n+   default compiler.  When the builtin is expanded, check at that time whether\n+   it is valid.\n+\n+   If the front end doesn't have a special hook, record all builtins, even if\n+   it isn't an instruction set in the current ISA in case the user uses\n+   function specific options for a different ISA, so that we don't get scope\n+   errors if a builtin is added in the middle of a function scope.  */\n \n static inline tree\n-def_builtin (int mask, const char *name, tree type, enum ix86_builtins code)\n+def_builtin (int mask, const char *name, enum ix86_builtin_func_type tcode,\n+\t     enum ix86_builtins code)\n {\n   tree decl = NULL_TREE;\n \n   if (!(mask & OPTION_MASK_ISA_64BIT) || TARGET_64BIT)\n     {\n       ix86_builtins_isa[(int) code].isa = mask;\n \n-      if ((mask & ix86_isa_flags) != 0\n+      if (mask == 0\n+\t  || (mask & ix86_isa_flags) != 0\n \t  || (lang_hooks.builtin_function\n \t      == lang_hooks.builtin_function_ext_scope))\n \n \t{\n-\t  decl = add_builtin_function (name, type, code, BUILT_IN_MD, NULL,\n-\t\t\t\t       NULL_TREE);\n+\t  tree type = ix86_get_builtin_func_type (tcode);\n+\t  decl = add_builtin_function (name, type, code, BUILT_IN_MD,\n+\t\t\t\t       NULL, NULL_TREE);\n \t  ix86_builtins[(int) code] = decl;\n-\t  ix86_builtins_isa[(int) code].type = NULL_TREE;\n+\t  ix86_builtins_isa[(int) code].set_and_not_built_p = false;\n \t}\n       else\n \t{\n \t  ix86_builtins[(int) code] = NULL_TREE;\n-\t  ix86_builtins_isa[(int) code].const_p = false;\n-\t  ix86_builtins_isa[(int) code].type = type;\n+\t  ix86_builtins_isa[(int) code].tcode = tcode;\n \t  ix86_builtins_isa[(int) code].name = name;\n+\t  ix86_builtins_isa[(int) code].const_p = false;\n+\t  ix86_builtins_isa[(int) code].set_and_not_built_p = true;\n \t}\n     }\n \n@@ -21184,10 +21291,10 @@ def_builtin (int mask, const char *name, tree type, enum ix86_builtins code)\n /* Like def_builtin, but also marks the function decl \"const\".  */\n \n static inline tree\n-def_builtin_const (int mask, const char *name, tree type,\n-\t\t   enum ix86_builtins code)\n+def_builtin_const (int mask, const char *name,\n+\t\t   enum ix86_builtin_func_type tcode, enum ix86_builtins code)\n {\n-  tree decl = def_builtin (mask, name, type, code);\n+  tree decl = def_builtin (mask, name, tcode, code);\n   if (decl)\n     TREE_READONLY (decl) = 1;\n   else\n@@ -21204,20 +21311,23 @@ static void\n ix86_add_new_builtins (int isa)\n {\n   int i;\n-  tree decl;\n \n   for (i = 0; i < (int)IX86_BUILTIN_MAX; i++)\n     {\n       if ((ix86_builtins_isa[i].isa & isa) != 0\n-\t  && ix86_builtins_isa[i].type != NULL_TREE)\n+\t  && ix86_builtins_isa[i].set_and_not_built_p)\n \t{\n+\t  tree decl, type;\n+\n+\t  /* Don't define the builtin again.  */\n+\t  ix86_builtins_isa[i].set_and_not_built_p = false;\n+\n+\t  type = ix86_get_builtin_func_type (ix86_builtins_isa[i].tcode);\n \t  decl = add_builtin_function_ext_scope (ix86_builtins_isa[i].name,\n-\t\t\t\t\t\t ix86_builtins_isa[i].type,\n-\t\t\t\t\t\t i, BUILT_IN_MD, NULL,\n+\t\t\t\t\t\t type, i, BUILT_IN_MD, NULL,\n \t\t\t\t\t\t NULL_TREE);\n \n \t  ix86_builtins[i] = decl;\n-\t  ix86_builtins_isa[i].type = NULL_TREE;\n \t  if (ix86_builtins_isa[i].const_p)\n \t    TREE_READONLY (decl) = 1;\n \t}\n@@ -21292,214 +21402,6 @@ static const struct builtin_description bdesc_pcmpistr[] =\n   { OPTION_MASK_ISA_SSE4_2, CODE_FOR_sse4_2_pcmpistr, \"__builtin_ia32_pcmpistriz128\", IX86_BUILTIN_PCMPISTRZ128, UNKNOWN, (int) CCZmode },\n };\n \n-/* Special builtin types */\n-enum ix86_special_builtin_type\n-{\n-  SPECIAL_FTYPE_UNKNOWN,\n-  VOID_FTYPE_VOID,\n-  UINT64_FTYPE_VOID,\n-  UINT64_FTYPE_PUNSIGNED,\n-  V32QI_FTYPE_PCCHAR,\n-  V16QI_FTYPE_PCCHAR,\n-  V8SF_FTYPE_PCV4SF,\n-  V8SF_FTYPE_PCFLOAT,\n-  V4DF_FTYPE_PCV2DF,\n-  V4DF_FTYPE_PCDOUBLE,\n-  V4SF_FTYPE_PCFLOAT,\n-  V2DF_FTYPE_PCDOUBLE,\n-  V8SF_FTYPE_PCV8SF_V8SF,\n-  V4DF_FTYPE_PCV4DF_V4DF,\n-  V4SF_FTYPE_V4SF_PCV2SF,\n-  V4SF_FTYPE_PCV4SF_V4SF,\n-  V2DF_FTYPE_V2DF_PCDOUBLE,\n-  V2DF_FTYPE_PCV2DF_V2DF,\n-  V2DI_FTYPE_PV2DI,\n-  VOID_FTYPE_PV2SF_V4SF,\n-  VOID_FTYPE_PV4DI_V4DI,\n-  VOID_FTYPE_PV2DI_V2DI,\n-  VOID_FTYPE_PCHAR_V32QI,\n-  VOID_FTYPE_PCHAR_V16QI,\n-  VOID_FTYPE_PFLOAT_V8SF,\n-  VOID_FTYPE_PFLOAT_V4SF,\n-  VOID_FTYPE_PDOUBLE_V4DF,\n-  VOID_FTYPE_PDOUBLE_V2DF,\n-  VOID_FTYPE_PDI_DI,\n-  VOID_FTYPE_PINT_INT,\n-  VOID_FTYPE_PV8SF_V8SF_V8SF,\n-  VOID_FTYPE_PV4DF_V4DF_V4DF,\n-  VOID_FTYPE_PV4SF_V4SF_V4SF,\n-  VOID_FTYPE_PV2DF_V2DF_V2DF,\n-  VOID_FTYPE_USHORT_UINT_USHORT,\n-  VOID_FTYPE_UINT_UINT_UINT,\n-  VOID_FTYPE_UINT64_UINT_UINT,\n-  UCHAR_FTYPE_USHORT_UINT_USHORT,\n-  UCHAR_FTYPE_UINT_UINT_UINT,\n-  UCHAR_FTYPE_UINT64_UINT_UINT\n-};\n-\n-/* Builtin types */\n-enum ix86_builtin_type\n-{\n-  FTYPE_UNKNOWN,\n-  FLOAT128_FTYPE_FLOAT128,\n-  FLOAT_FTYPE_FLOAT,\n-  FLOAT128_FTYPE_FLOAT128_FLOAT128,\n-  INT_FTYPE_V8SF_V8SF_PTEST,\n-  INT_FTYPE_V4DI_V4DI_PTEST,\n-  INT_FTYPE_V4DF_V4DF_PTEST,\n-  INT_FTYPE_V4SF_V4SF_PTEST,\n-  INT_FTYPE_V2DI_V2DI_PTEST,\n-  INT_FTYPE_V2DF_V2DF_PTEST,\n-  INT_FTYPE_INT,\n-  UINT64_FTYPE_INT,\n-  INT64_FTYPE_INT64,\n-  INT64_FTYPE_V4SF,\n-  INT64_FTYPE_V2DF,\n-  INT_FTYPE_V16QI,\n-  INT_FTYPE_V8QI,\n-  INT_FTYPE_V8SF,\n-  INT_FTYPE_V4DF,\n-  INT_FTYPE_V4SF,\n-  INT_FTYPE_V2DF,\n-  V16QI_FTYPE_V16QI,\n-  V8SI_FTYPE_V8SF,\n-  V8SI_FTYPE_V4SI,\n-  V8HI_FTYPE_V8HI,\n-  V8HI_FTYPE_V16QI,\n-  V8QI_FTYPE_V8QI,\n-  V8SF_FTYPE_V8SF,\n-  V8SF_FTYPE_V8SI,\n-  V8SF_FTYPE_V4SF,\n-  V4SI_FTYPE_V4SI,\n-  V4SI_FTYPE_V16QI,\n-  V4SI_FTYPE_V8SI,\n-  V4SI_FTYPE_V8HI,\n-  V4SI_FTYPE_V4DF,\n-  V4SI_FTYPE_V4SF,\n-  V4SI_FTYPE_V2DF,\n-  V4HI_FTYPE_V4HI,\n-  V4DF_FTYPE_V4DF,\n-  V4DF_FTYPE_V4SI,\n-  V4DF_FTYPE_V4SF,\n-  V4DF_FTYPE_V2DF,\n-  V4SF_FTYPE_V4DF,\n-  V4SF_FTYPE_V4SF,\n-  V4SF_FTYPE_V4SF_VEC_MERGE,\n-  V4SF_FTYPE_V8SF,\n-  V4SF_FTYPE_V4SI,\n-  V4SF_FTYPE_V2DF,\n-  V2DI_FTYPE_V2DI,\n-  V2DI_FTYPE_V16QI,\n-  V2DI_FTYPE_V8HI,\n-  V2DI_FTYPE_V4SI,\n-  V2DF_FTYPE_V2DF,\n-  V2DF_FTYPE_V2DF_VEC_MERGE,\n-  V2DF_FTYPE_V4SI,\n-  V2DF_FTYPE_V4DF,\n-  V2DF_FTYPE_V4SF,\n-  V2DF_FTYPE_V2SI,\n-  V2SI_FTYPE_V2SI,\n-  V2SI_FTYPE_V4SF,\n-  V2SI_FTYPE_V2SF,\n-  V2SI_FTYPE_V2DF,\n-  V2SF_FTYPE_V2SF,\n-  V2SF_FTYPE_V2SI,\n-  V16QI_FTYPE_V16QI_V16QI,\n-  V16QI_FTYPE_V8HI_V8HI,\n-  V8QI_FTYPE_V8QI_V8QI,\n-  V8QI_FTYPE_V4HI_V4HI,\n-  V8HI_FTYPE_V8HI_V8HI,\n-  V8HI_FTYPE_V8HI_V8HI_COUNT,\n-  V8HI_FTYPE_V16QI_V16QI,\n-  V8HI_FTYPE_V4SI_V4SI,\n-  V8HI_FTYPE_V8HI_SI_COUNT,\n-  V8SF_FTYPE_V8SF_V8SF,\n-  V8SF_FTYPE_V8SF_V8SI,\n-  V4SI_FTYPE_V4SI_V4SI,\n-  V4SI_FTYPE_V4SI_V4SI_COUNT,\n-  V4SI_FTYPE_V8HI_V8HI,\n-  V4SI_FTYPE_V4SF_V4SF,\n-  V4SI_FTYPE_V2DF_V2DF,\n-  V4SI_FTYPE_V4SI_SI_COUNT,\n-  V4HI_FTYPE_V4HI_V4HI,\n-  V4HI_FTYPE_V4HI_V4HI_COUNT,\n-  V4HI_FTYPE_V8QI_V8QI,\n-  V4HI_FTYPE_V2SI_V2SI,\n-  V4HI_FTYPE_V4HI_SI_COUNT,\n-  V4DF_FTYPE_V4DF_V4DF,\n-  V4DF_FTYPE_V4DF_V4DI,\n-  V4SF_FTYPE_V4SF_V4SF,\n-  V4SF_FTYPE_V4SF_V4SF_SWAP,\n-  V4SF_FTYPE_V4SF_V4SI,\n-  V4SF_FTYPE_V4SF_V2SI,\n-  V4SF_FTYPE_V4SF_V2DF,\n-  V4SF_FTYPE_V4SF_DI,\n-  V4SF_FTYPE_V4SF_SI,\n-  V2DI_FTYPE_V2DI_V2DI,\n-  V2DI_FTYPE_V2DI_V2DI_COUNT,\n-  V2DI_FTYPE_V16QI_V16QI,\n-  V2DI_FTYPE_V4SI_V4SI,\n-  V2DI_FTYPE_V2DI_V16QI,\n-  V2DI_FTYPE_V2DF_V2DF,\n-  V2DI_FTYPE_V2DI_SI_COUNT,\n-  V2SI_FTYPE_V2SI_V2SI,\n-  V2SI_FTYPE_V2SI_V2SI_COUNT,\n-  V2SI_FTYPE_V4HI_V4HI,\n-  V2SI_FTYPE_V2SF_V2SF,\n-  V2SI_FTYPE_V2SI_SI_COUNT,\n-  V2DF_FTYPE_V2DF_V2DF,\n-  V2DF_FTYPE_V2DF_V2DF_SWAP,\n-  V2DF_FTYPE_V2DF_V4SF,\n-  V2DF_FTYPE_V2DF_V2DI,\n-  V2DF_FTYPE_V2DF_DI,\n-  V2DF_FTYPE_V2DF_SI,\n-  V2SF_FTYPE_V2SF_V2SF,\n-  V1DI_FTYPE_V1DI_V1DI,\n-  V1DI_FTYPE_V1DI_V1DI_COUNT,\n-  V1DI_FTYPE_V8QI_V8QI,\n-  V1DI_FTYPE_V2SI_V2SI,\n-  V1DI_FTYPE_V1DI_SI_COUNT,\n-  UINT64_FTYPE_UINT64_UINT64,\n-  UINT_FTYPE_UINT_UINT,\n-  UINT_FTYPE_UINT_USHORT,\n-  UINT_FTYPE_UINT_UCHAR,\n-  UINT16_FTYPE_UINT16_INT,\n-  UINT8_FTYPE_UINT8_INT,\n-  V8HI_FTYPE_V8HI_INT,\n-  V4SI_FTYPE_V4SI_INT,\n-  V4HI_FTYPE_V4HI_INT,\n-  V8SF_FTYPE_V8SF_INT,\n-  V4SI_FTYPE_V8SI_INT,\n-  V4SF_FTYPE_V8SF_INT,\n-  V2DF_FTYPE_V4DF_INT,\n-  V4DF_FTYPE_V4DF_INT,\n-  V4SF_FTYPE_V4SF_INT,\n-  V2DI_FTYPE_V2DI_INT,\n-  V2DI2TI_FTYPE_V2DI_INT,\n-  V2DF_FTYPE_V2DF_INT,\n-  V16QI_FTYPE_V16QI_V16QI_V16QI,\n-  V8SF_FTYPE_V8SF_V8SF_V8SF,\n-  V4DF_FTYPE_V4DF_V4DF_V4DF,\n-  V4SF_FTYPE_V4SF_V4SF_V4SF,\n-  V2DF_FTYPE_V2DF_V2DF_V2DF,\n-  V16QI_FTYPE_V16QI_V16QI_INT,\n-  V8SI_FTYPE_V8SI_V8SI_INT,\n-  V8SI_FTYPE_V8SI_V4SI_INT,\n-  V8HI_FTYPE_V8HI_V8HI_INT,\n-  V8SF_FTYPE_V8SF_V8SF_INT,\n-  V8SF_FTYPE_V8SF_V4SF_INT,\n-  V4SI_FTYPE_V4SI_V4SI_INT,\n-  V4DF_FTYPE_V4DF_V4DF_INT,\n-  V4DF_FTYPE_V4DF_V2DF_INT,\n-  V4SF_FTYPE_V4SF_V4SF_INT,\n-  V2DI_FTYPE_V2DI_V2DI_INT,\n-  V2DI2TI_FTYPE_V2DI_V2DI_INT,\n-  V1DI2DI_FTYPE_V1DI_V1DI_INT,\n-  V2DF_FTYPE_V2DF_V2DF_INT,\n-  V2DI_FTYPE_V2DI_UINT_UINT,\n-  V2DI_FTYPE_V2DI_V2DI_UINT_UINT\n-};\n-\n /* Special builtins with variable number of arguments.  */\n static const struct builtin_description bdesc_special_args[] =\n {\n@@ -21524,7 +21426,7 @@ static const struct builtin_description bdesc_special_args[] =\n \n   /* SSE or 3DNow!A  */\n   { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_sse_sfence, \"__builtin_ia32_sfence\", IX86_BUILTIN_SFENCE, UNKNOWN, (int) VOID_FTYPE_VOID },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_sse_movntdi, \"__builtin_ia32_movntq\", IX86_BUILTIN_MOVNTQ, UNKNOWN, (int) VOID_FTYPE_PDI_DI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_sse_movntdi, \"__builtin_ia32_movntq\", IX86_BUILTIN_MOVNTQ, UNKNOWN, (int) VOID_FTYPE_PULONGLONG_ULONGLONG },\n \n   /* SSE2 */\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_lfence, \"__builtin_ia32_lfence\", IX86_BUILTIN_LFENCE, UNKNOWN, (int) VOID_FTYPE_VOID },\n@@ -21937,15 +21839,15 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtsd2ss, \"__builtin_ia32_cvtsd2ss\", IX86_BUILTIN_CVTSD2SS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2DF },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtss2sd, \"__builtin_ia32_cvtss2sd\", IX86_BUILTIN_CVTSS2SD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V4SF },\n \n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_ashlti3, \"__builtin_ia32_pslldqi128\", IX86_BUILTIN_PSLLDQI128, UNKNOWN, (int) V2DI2TI_FTYPE_V2DI_INT },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_ashlti3, \"__builtin_ia32_pslldqi128\", IX86_BUILTIN_PSLLDQI128, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_CONVERT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_ashlv8hi3, \"__builtin_ia32_psllwi128\", IX86_BUILTIN_PSLLWI128, UNKNOWN, (int) V8HI_FTYPE_V8HI_SI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_ashlv4si3, \"__builtin_ia32_pslldi128\", IX86_BUILTIN_PSLLDI128, UNKNOWN, (int) V4SI_FTYPE_V4SI_SI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_ashlv2di3, \"__builtin_ia32_psllqi128\", IX86_BUILTIN_PSLLQI128, UNKNOWN, (int) V2DI_FTYPE_V2DI_SI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_ashlv8hi3, \"__builtin_ia32_psllw128\", IX86_BUILTIN_PSLLW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_ashlv4si3, \"__builtin_ia32_pslld128\", IX86_BUILTIN_PSLLD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_ashlv2di3, \"__builtin_ia32_psllq128\", IX86_BUILTIN_PSLLQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_COUNT },\n \n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_lshrti3, \"__builtin_ia32_psrldqi128\", IX86_BUILTIN_PSRLDQI128, UNKNOWN, (int) V2DI2TI_FTYPE_V2DI_INT },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_lshrti3, \"__builtin_ia32_psrldqi128\", IX86_BUILTIN_PSRLDQI128, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_CONVERT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_lshrv8hi3, \"__builtin_ia32_psrlwi128\", IX86_BUILTIN_PSRLWI128, UNKNOWN, (int) V8HI_FTYPE_V8HI_SI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_lshrv4si3, \"__builtin_ia32_psrldi128\", IX86_BUILTIN_PSRLDI128, UNKNOWN, (int) V4SI_FTYPE_V4SI_SI_COUNT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_lshrv2di3, \"__builtin_ia32_psrlqi128\", IX86_BUILTIN_PSRLQI128, UNKNOWN, (int) V2DI_FTYPE_V2DI_SI_COUNT },\n@@ -22018,8 +21920,8 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv2si3, \"__builtin_ia32_psignd\", IX86_BUILTIN_PSIGND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n \n   /* SSSE3.  */\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_palignrti, \"__builtin_ia32_palignr128\", IX86_BUILTIN_PALIGNR128, UNKNOWN, (int) V2DI2TI_FTYPE_V2DI_V2DI_INT },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_palignrdi, \"__builtin_ia32_palignr\", IX86_BUILTIN_PALIGNR, UNKNOWN, (int) V1DI2DI_FTYPE_V1DI_V1DI_INT },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_palignrti, \"__builtin_ia32_palignr128\", IX86_BUILTIN_PALIGNR128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT_CONVERT },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_palignrdi, \"__builtin_ia32_palignr\", IX86_BUILTIN_PALIGNR, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_INT_CONVERT },\n \n   /* SSE4.1 */\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_blendpd, \"__builtin_ia32_blendpd\", IX86_BUILTIN_BLENDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT },\n@@ -22211,58 +22113,54 @@ static const struct builtin_description bdesc_args[] =\n };\n \n /* FMA4 and XOP.  */\n-enum multi_arg_type {\n-  MULTI_ARG_UNKNOWN,\n-  MULTI_ARG_3_SF,\n-  MULTI_ARG_3_DF,\n-  MULTI_ARG_3_SF2,\n-  MULTI_ARG_3_DF2,\n-  MULTI_ARG_3_DI,\n-  MULTI_ARG_3_SI,\n-  MULTI_ARG_3_SI_DI,\n-  MULTI_ARG_3_HI,\n-  MULTI_ARG_3_HI_SI,\n-  MULTI_ARG_3_QI,\n-  MULTI_ARG_3_DI2,\n-  MULTI_ARG_3_SI2,\n-  MULTI_ARG_3_HI2,\n-  MULTI_ARG_3_QI2,\n-  MULTI_ARG_2_SF,\n-  MULTI_ARG_2_DF,\n-  MULTI_ARG_2_DI,\n-  MULTI_ARG_2_SI,\n-  MULTI_ARG_2_HI,\n-  MULTI_ARG_2_QI,\n-  MULTI_ARG_2_DI_IMM,\n-  MULTI_ARG_2_SI_IMM,\n-  MULTI_ARG_2_HI_IMM,\n-  MULTI_ARG_2_QI_IMM,\n-  MULTI_ARG_2_DI_CMP,\n-  MULTI_ARG_2_SI_CMP,\n-  MULTI_ARG_2_HI_CMP,\n-  MULTI_ARG_2_QI_CMP,\n-  MULTI_ARG_2_DI_TF,\n-  MULTI_ARG_2_SI_TF,\n-  MULTI_ARG_2_HI_TF,\n-  MULTI_ARG_2_QI_TF,\n-  MULTI_ARG_2_SF_TF,\n-  MULTI_ARG_2_DF_TF,\n-  MULTI_ARG_1_SF,\n-  MULTI_ARG_1_DF,\n-  MULTI_ARG_1_SF2,\n-  MULTI_ARG_1_DF2,\n-  MULTI_ARG_1_DI,\n-  MULTI_ARG_1_SI,\n-  MULTI_ARG_1_HI,\n-  MULTI_ARG_1_QI,\n-  MULTI_ARG_1_SI_DI,\n-  MULTI_ARG_1_HI_DI,\n-  MULTI_ARG_1_HI_SI,\n-  MULTI_ARG_1_QI_DI,\n-  MULTI_ARG_1_QI_SI,\n-  MULTI_ARG_1_QI_HI\n-\n-};\n+#define MULTI_ARG_3_SF\t\tV4SF_FTYPE_V4SF_V4SF_V4SF\n+#define MULTI_ARG_3_DF\t\tV2DF_FTYPE_V2DF_V2DF_V2DF\n+#define MULTI_ARG_3_SF2\t\tV8SF_FTYPE_V8SF_V8SF_V8SF\n+#define MULTI_ARG_3_DF2\t\tV4DF_FTYPE_V4DF_V4DF_V4DF\n+#define MULTI_ARG_3_DI\t\tV2DI_FTYPE_V2DI_V2DI_V2DI\n+#define MULTI_ARG_3_SI\t\tV4SI_FTYPE_V4SI_V4SI_V4SI\n+#define MULTI_ARG_3_SI_DI\tV4SI_FTYPE_V4SI_V4SI_V2DI\n+#define MULTI_ARG_3_HI\t\tV8HI_FTYPE_V8HI_V8HI_V8HI\n+#define MULTI_ARG_3_HI_SI\tV8HI_FTYPE_V8HI_V8HI_V4SI\n+#define MULTI_ARG_3_QI\t\tV16QI_FTYPE_V16QI_V16QI_V16QI\n+#define MULTI_ARG_3_DI2\t\tV4DI_FTYPE_V4DI_V4DI_V4DI\n+#define MULTI_ARG_3_SI2\t\tV8SI_FTYPE_V8SI_V8SI_V8SI\n+#define MULTI_ARG_3_HI2\t\tV16HI_FTYPE_V16HI_V16HI_V16HI\n+#define MULTI_ARG_3_QI2\t\tV32QI_FTYPE_V32QI_V32QI_V32QI\n+#define MULTI_ARG_2_SF\t\tV4SF_FTYPE_V4SF_V4SF\n+#define MULTI_ARG_2_DF\t\tV2DF_FTYPE_V2DF_V2DF\n+#define MULTI_ARG_2_DI\t\tV2DI_FTYPE_V2DI_V2DI\n+#define MULTI_ARG_2_SI\t\tV4SI_FTYPE_V4SI_V4SI\n+#define MULTI_ARG_2_HI\t\tV8HI_FTYPE_V8HI_V8HI\n+#define MULTI_ARG_2_QI\t\tV16QI_FTYPE_V16QI_V16QI\n+#define MULTI_ARG_2_DI_IMM\tV2DI_FTYPE_V2DI_SI\n+#define MULTI_ARG_2_SI_IMM\tV4SI_FTYPE_V4SI_SI\n+#define MULTI_ARG_2_HI_IMM\tV8HI_FTYPE_V8HI_SI\n+#define MULTI_ARG_2_QI_IMM\tV16QI_FTYPE_V16QI_SI\n+#define MULTI_ARG_2_DI_CMP\tV2DI_FTYPE_V2DI_V2DI_CMP\n+#define MULTI_ARG_2_SI_CMP\tV4SI_FTYPE_V4SI_V4SI_CMP\n+#define MULTI_ARG_2_HI_CMP\tV8HI_FTYPE_V8HI_V8HI_CMP\n+#define MULTI_ARG_2_QI_CMP\tV16QI_FTYPE_V16QI_V16QI_CMP\n+#define MULTI_ARG_2_SF_TF\tV4SF_FTYPE_V4SF_V4SF_TF\n+#define MULTI_ARG_2_DF_TF\tV2DF_FTYPE_V2DF_V2DF_TF\n+#define MULTI_ARG_2_DI_TF\tV2DI_FTYPE_V2DI_V2DI_TF\n+#define MULTI_ARG_2_SI_TF\tV4SI_FTYPE_V4SI_V4SI_TF\n+#define MULTI_ARG_2_HI_TF\tV8HI_FTYPE_V8HI_V8HI_TF\n+#define MULTI_ARG_2_QI_TF\tV16QI_FTYPE_V16QI_V16QI_TF\n+#define MULTI_ARG_1_SF\t\tV4SF_FTYPE_V4SF\n+#define MULTI_ARG_1_DF\t\tV2DF_FTYPE_V2DF\n+#define MULTI_ARG_1_SF2\t\tV8SF_FTYPE_V8SF\n+#define MULTI_ARG_1_DF2\t\tV4DF_FTYPE_V4DF\n+#define MULTI_ARG_1_DI\t\tV2DI_FTYPE_V2DI\n+#define MULTI_ARG_1_SI\t\tV4SI_FTYPE_V4SI\n+#define MULTI_ARG_1_HI\t\tV8HI_FTYPE_V8HI\n+#define MULTI_ARG_1_QI\t\tV16QI_FTYPE_V16QI\n+#define MULTI_ARG_1_SI_DI\tV2DI_FTYPE_V4SI\n+#define MULTI_ARG_1_HI_DI\tV2DI_FTYPE_V8HI\n+#define MULTI_ARG_1_HI_SI\tV4SI_FTYPE_V8HI\n+#define MULTI_ARG_1_QI_DI\tV2DI_FTYPE_V16QI\n+#define MULTI_ARG_1_QI_SI\tV4SI_FTYPE_V16QI\n+#define MULTI_ARG_1_QI_HI\tV8HI_FTYPE_V16QI\n \n static const struct builtin_description bdesc_multi_arg[] =\n {\n@@ -22467,1435 +22365,31 @@ static void\n ix86_init_mmx_sse_builtins (void)\n {\n   const struct builtin_description * d;\n+  enum ix86_builtin_func_type ftype;\n   size_t i;\n \n-  tree V16QI_type_node = build_vector_type_for_mode (char_type_node, V16QImode);\n-  tree V2SI_type_node = build_vector_type_for_mode (intSI_type_node, V2SImode);\n-  tree V1DI_type_node\n-    = build_vector_type_for_mode (long_long_integer_type_node, V1DImode);\n-  tree V2SF_type_node = build_vector_type_for_mode (float_type_node, V2SFmode);\n-  tree V2DI_type_node\n-    = build_vector_type_for_mode (long_long_integer_type_node, V2DImode);\n-  tree V2DF_type_node = build_vector_type_for_mode (double_type_node, V2DFmode);\n-  tree V4SF_type_node = build_vector_type_for_mode (float_type_node, V4SFmode);\n-  tree V4SI_type_node = build_vector_type_for_mode (intSI_type_node, V4SImode);\n-  tree V4HI_type_node = build_vector_type_for_mode (intHI_type_node, V4HImode);\n-  tree V8QI_type_node = build_vector_type_for_mode (char_type_node, V8QImode);\n-  tree V8HI_type_node = build_vector_type_for_mode (intHI_type_node, V8HImode);\n-\n-  tree pchar_type_node = build_pointer_type (char_type_node);\n-  tree pcchar_type_node\n-    = build_pointer_type (build_type_variant (char_type_node, 1, 0));\n-  tree pfloat_type_node = build_pointer_type (float_type_node);\n-  tree pcfloat_type_node\n-    = build_pointer_type (build_type_variant (float_type_node, 1, 0));\n-  tree pv2sf_type_node = build_pointer_type (V2SF_type_node);\n-  tree pcv2sf_type_node\n-    = build_pointer_type (build_type_variant (V2SF_type_node, 1, 0));\n-  tree pv2di_type_node = build_pointer_type (V2DI_type_node);\n-  tree pdi_type_node = build_pointer_type (long_long_unsigned_type_node);\n-\n-  /* Comparisons.  */\n-  tree int_ftype_v4sf_v4sf\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n-  tree v4si_ftype_v4sf_v4sf\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n-  /* MMX/SSE/integer conversions.  */\n-  tree int_ftype_v4sf\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV4SF_type_node, NULL_TREE);\n-  tree int64_ftype_v4sf\n-    = build_function_type_list (long_long_integer_type_node,\n-\t\t\t\tV4SF_type_node, NULL_TREE);\n-  tree int_ftype_v8qi\n-    = build_function_type_list (integer_type_node, V8QI_type_node, NULL_TREE);\n-  tree v4sf_ftype_v4sf_int\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, integer_type_node, NULL_TREE);\n-  tree v4sf_ftype_v4sf_int64\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, long_long_integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v4sf_v2si\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V2SI_type_node, NULL_TREE);\n-\n-  /* Miscellaneous.  */\n-  tree v8qi_ftype_v4hi_v4hi\n-    = build_function_type_list (V8QI_type_node,\n-\t\t\t\tV4HI_type_node, V4HI_type_node, NULL_TREE);\n-  tree v4hi_ftype_v2si_v2si\n-    = build_function_type_list (V4HI_type_node,\n-\t\t\t\tV2SI_type_node, V2SI_type_node, NULL_TREE);\n-  tree v4sf_ftype_v4sf_v4sf_int\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V4SF_type_node,\n-\t\t\t\tinteger_type_node, NULL_TREE);\n-  tree v2si_ftype_v4hi_v4hi\n-    = build_function_type_list (V2SI_type_node,\n-\t\t\t\tV4HI_type_node, V4HI_type_node, NULL_TREE);\n-  tree v4hi_ftype_v4hi_int\n-    = build_function_type_list (V4HI_type_node,\n-\t\t\t\tV4HI_type_node, integer_type_node, NULL_TREE);\n-  tree v2si_ftype_v2si_int\n-    = build_function_type_list (V2SI_type_node,\n-\t\t\t\tV2SI_type_node, integer_type_node, NULL_TREE);\n-  tree v1di_ftype_v1di_int\n-    = build_function_type_list (V1DI_type_node,\n-\t\t\t\tV1DI_type_node, integer_type_node, NULL_TREE);\n-\n-  tree void_ftype_void\n-    = build_function_type (void_type_node, void_list_node);\n-  tree void_ftype_unsigned\n-    = build_function_type_list (void_type_node, unsigned_type_node, NULL_TREE);\n-  tree void_ftype_unsigned_unsigned\n-    = build_function_type_list (void_type_node, unsigned_type_node,\n-\t\t\t\tunsigned_type_node, NULL_TREE);\n-  tree void_ftype_pcvoid_unsigned_unsigned\n-    = build_function_type_list (void_type_node, const_ptr_type_node,\n-\t\t\t\tunsigned_type_node, unsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree unsigned_ftype_void\n-    = build_function_type (unsigned_type_node, void_list_node);\n-  tree v2si_ftype_v4sf\n-    = build_function_type_list (V2SI_type_node, V4SF_type_node, NULL_TREE);\n-  /* Loads/stores.  */\n-  tree void_ftype_v8qi_v8qi_pchar\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tV8QI_type_node, V8QI_type_node,\n-\t\t\t\tpchar_type_node, NULL_TREE);\n-  tree v4sf_ftype_pcfloat\n-    = build_function_type_list (V4SF_type_node, pcfloat_type_node, NULL_TREE);\n-  tree v4sf_ftype_v4sf_pcv2sf\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, pcv2sf_type_node, NULL_TREE);\n-  tree void_ftype_pv2sf_v4sf\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpv2sf_type_node, V4SF_type_node, NULL_TREE);\n-  tree void_ftype_pfloat_v4sf\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpfloat_type_node, V4SF_type_node, NULL_TREE);\n-  tree void_ftype_pdi_di\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpdi_type_node, long_long_unsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pv2di_v2di\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpv2di_type_node, V2DI_type_node, NULL_TREE);\n-  /* Normal vector unops.  */\n-  tree v4sf_ftype_v4sf\n-    = build_function_type_list (V4SF_type_node, V4SF_type_node, NULL_TREE);\n-  tree v16qi_ftype_v16qi\n-    = build_function_type_list (V16QI_type_node, V16QI_type_node, NULL_TREE);\n-  tree v8hi_ftype_v8hi\n-    = build_function_type_list (V8HI_type_node, V8HI_type_node, NULL_TREE);\n-  tree v4si_ftype_v4si\n-    = build_function_type_list (V4SI_type_node, V4SI_type_node, NULL_TREE);\n-  tree v8qi_ftype_v8qi\n-    = build_function_type_list (V8QI_type_node, V8QI_type_node, NULL_TREE);\n-  tree v4hi_ftype_v4hi\n-    = build_function_type_list (V4HI_type_node, V4HI_type_node, NULL_TREE);\n-\n-  /* Normal vector binops.  */\n-  tree v4sf_ftype_v4sf_v4sf\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n-  tree v8qi_ftype_v8qi_v8qi\n-    = build_function_type_list (V8QI_type_node,\n-\t\t\t\tV8QI_type_node, V8QI_type_node, NULL_TREE);\n-  tree v4hi_ftype_v4hi_v4hi\n-    = build_function_type_list (V4HI_type_node,\n-\t\t\t\tV4HI_type_node, V4HI_type_node, NULL_TREE);\n-  tree v2si_ftype_v2si_v2si\n-    = build_function_type_list (V2SI_type_node,\n-\t\t\t\tV2SI_type_node, V2SI_type_node, NULL_TREE);\n-  tree v1di_ftype_v1di_v1di\n-    = build_function_type_list (V1DI_type_node,\n-\t\t\t\tV1DI_type_node, V1DI_type_node, NULL_TREE);\n-  tree v1di_ftype_v1di_v1di_int\n-    = build_function_type_list (V1DI_type_node,\n-\t\t\t\tV1DI_type_node, V1DI_type_node,\n-\t\t\t\tinteger_type_node, NULL_TREE);\n-  tree v2si_ftype_v2sf\n-    = build_function_type_list (V2SI_type_node, V2SF_type_node, NULL_TREE);\n-  tree v2sf_ftype_v2si\n-    = build_function_type_list (V2SF_type_node, V2SI_type_node, NULL_TREE);\n-  tree v2si_ftype_v2si\n-    = build_function_type_list (V2SI_type_node, V2SI_type_node, NULL_TREE);\n-  tree v2sf_ftype_v2sf\n-    = build_function_type_list (V2SF_type_node, V2SF_type_node, NULL_TREE);\n-  tree v2sf_ftype_v2sf_v2sf\n-    = build_function_type_list (V2SF_type_node,\n-\t\t\t\tV2SF_type_node, V2SF_type_node, NULL_TREE);\n-  tree v2si_ftype_v2sf_v2sf\n-    = build_function_type_list (V2SI_type_node,\n-\t\t\t\tV2SF_type_node, V2SF_type_node, NULL_TREE);\n-  tree pint_type_node    = build_pointer_type (integer_type_node);\n-  tree pdouble_type_node = build_pointer_type (double_type_node);\n-  tree pcdouble_type_node = build_pointer_type (\n-\t\t\t\tbuild_type_variant (double_type_node, 1, 0));\n-  tree int_ftype_v2df_v2df\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n-\n-  tree void_ftype_pcvoid\n-    = build_function_type_list (void_type_node, const_ptr_type_node, NULL_TREE);\n-  tree v4sf_ftype_v4si\n-    = build_function_type_list (V4SF_type_node, V4SI_type_node, NULL_TREE);\n-  tree v4si_ftype_v4sf\n-    = build_function_type_list (V4SI_type_node, V4SF_type_node, NULL_TREE);\n-  tree v2df_ftype_v4si\n-    = build_function_type_list (V2DF_type_node, V4SI_type_node, NULL_TREE);\n-  tree v4si_ftype_v2df\n-    = build_function_type_list (V4SI_type_node, V2DF_type_node, NULL_TREE);\n-  tree v4si_ftype_v2df_v2df\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n-  tree v2si_ftype_v2df\n-    = build_function_type_list (V2SI_type_node, V2DF_type_node, NULL_TREE);\n-  tree v4sf_ftype_v2df\n-    = build_function_type_list (V4SF_type_node, V2DF_type_node, NULL_TREE);\n-  tree v2df_ftype_v2si\n-    = build_function_type_list (V2DF_type_node, V2SI_type_node, NULL_TREE);\n-  tree v2df_ftype_v4sf\n-    = build_function_type_list (V2DF_type_node, V4SF_type_node, NULL_TREE);\n-  tree int_ftype_v2df\n-    = build_function_type_list (integer_type_node, V2DF_type_node, NULL_TREE);\n-  tree int64_ftype_v2df\n-    = build_function_type_list (long_long_integer_type_node,\n-\t\t\t\tV2DF_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df_int\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, integer_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df_int64\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, long_long_integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v4sf_v2df\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V2DF_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df_v4sf\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, V4SF_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df_v2df_int\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2df_ftype_v2df_pcdouble\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, pcdouble_type_node, NULL_TREE);\n-  tree void_ftype_pdouble_v2df\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpdouble_type_node, V2DF_type_node, NULL_TREE);\n-  tree void_ftype_pint_int\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpint_type_node, integer_type_node, NULL_TREE);\n-  tree void_ftype_v16qi_v16qi_pchar\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tV16QI_type_node, V16QI_type_node,\n-\t\t\t\tpchar_type_node, NULL_TREE);\n-  tree v2df_ftype_pcdouble\n-    = build_function_type_list (V2DF_type_node, pcdouble_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df_v2df\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n-  tree v16qi_ftype_v16qi_v16qi\n-    = build_function_type_list (V16QI_type_node,\n-\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n-  tree v8hi_ftype_v8hi_v8hi\n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n-  tree v4si_ftype_v4si_v4si\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4SI_type_node, V4SI_type_node, NULL_TREE);\n-  tree v2di_ftype_v2di_v2di\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV2DI_type_node, V2DI_type_node, NULL_TREE);\n-  tree v2di_ftype_v2df_v2df\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df\n-    = build_function_type_list (V2DF_type_node, V2DF_type_node, NULL_TREE);\n-  tree v2di_ftype_v2di_int\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV2DI_type_node, integer_type_node, NULL_TREE);\n-  tree v2di_ftype_v2di_v2di_int\n-    = build_function_type_list (V2DI_type_node, V2DI_type_node,\n-\t\t\t\tV2DI_type_node, integer_type_node, NULL_TREE);\n-  tree v4si_ftype_v4si_int\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4SI_type_node, integer_type_node, NULL_TREE);\n-  tree v8hi_ftype_v8hi_int\n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV8HI_type_node, integer_type_node, NULL_TREE);\n-  tree v4si_ftype_v8hi_v8hi\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n-  tree v1di_ftype_v8qi_v8qi\n-    = build_function_type_list (V1DI_type_node,\n-\t\t\t\tV8QI_type_node, V8QI_type_node, NULL_TREE);\n-  tree v1di_ftype_v2si_v2si\n-    = build_function_type_list (V1DI_type_node,\n-\t\t\t\tV2SI_type_node, V2SI_type_node, NULL_TREE);\n-  tree v2di_ftype_v16qi_v16qi\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n-  tree v2di_ftype_v4si_v4si\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV4SI_type_node, V4SI_type_node, NULL_TREE);\n-  tree int_ftype_v16qi\n-    = build_function_type_list (integer_type_node, V16QI_type_node, NULL_TREE);\n-  tree v16qi_ftype_pcchar\n-    = build_function_type_list (V16QI_type_node, pcchar_type_node, NULL_TREE);\n-  tree void_ftype_pchar_v16qi\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pchar_type_node, V16QI_type_node, NULL_TREE);\n-\n-  tree v2di_ftype_v2di_unsigned_unsigned\n-    = build_function_type_list (V2DI_type_node, V2DI_type_node,\n-                                unsigned_type_node, unsigned_type_node,\n-                                NULL_TREE);\n-  tree v2di_ftype_v2di_v2di_unsigned_unsigned\n-    = build_function_type_list (V2DI_type_node, V2DI_type_node, V2DI_type_node,\n-                                unsigned_type_node, unsigned_type_node,\n-                                NULL_TREE);\n-  tree v2di_ftype_v2di_v16qi\n-    = build_function_type_list (V2DI_type_node, V2DI_type_node, V16QI_type_node,\n-                                NULL_TREE);\n-  tree v2df_ftype_v2df_v2df_v2df\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node,\n-\t\t\t\tV2DF_type_node, NULL_TREE);\n-  tree v4sf_ftype_v4sf_v4sf_v4sf\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V4SF_type_node,\n-\t\t\t\tV4SF_type_node, NULL_TREE);\n-  tree v8hi_ftype_v16qi\n-    = build_function_type_list (V8HI_type_node, V16QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4si_ftype_v16qi\n-    = build_function_type_list (V4SI_type_node, V16QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2di_ftype_v16qi\n-    = build_function_type_list (V2DI_type_node, V16QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4si_ftype_v8hi\n-    = build_function_type_list (V4SI_type_node, V8HI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2di_ftype_v8hi\n-    = build_function_type_list (V2DI_type_node, V8HI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2di_ftype_v4si\n-    = build_function_type_list (V2DI_type_node, V4SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2di_ftype_pv2di\n-    = build_function_type_list (V2DI_type_node, pv2di_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v16qi_ftype_v16qi_v16qi_int\n-    = build_function_type_list (V16QI_type_node, V16QI_type_node,\n-\t\t\t\tV16QI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v16qi_ftype_v16qi_v16qi_v16qi\n-    = build_function_type_list (V16QI_type_node, V16QI_type_node,\n-\t\t\t\tV16QI_type_node, V16QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8hi_ftype_v8hi_v8hi_int\n-    = build_function_type_list (V8HI_type_node, V8HI_type_node,\n-\t\t\t\tV8HI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4si_ftype_v4si_v4si_int\n-    = build_function_type_list (V4SI_type_node, V4SI_type_node,\n-\t\t\t\tV4SI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v2di_v2di\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV2DI_type_node, V2DI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v16qi_int_v16qi_int_int\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v16qi_ftype_v16qi_int_v16qi_int_int\n-    = build_function_type_list (V16QI_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v16qi_v16qi_int\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  /* AVX builtins  */\n-  tree V32QI_type_node = build_vector_type_for_mode (char_type_node,\n-\t\t\t\t\t\t     V32QImode);\n-  tree V8SI_type_node = build_vector_type_for_mode (intSI_type_node,\n-\t\t\t\t\t\t    V8SImode);\n-  tree V8SF_type_node = build_vector_type_for_mode (float_type_node,\n-\t\t\t\t\t\t    V8SFmode);\n-  tree V4DI_type_node = build_vector_type_for_mode (long_long_integer_type_node,\n-\t\t\t\t\t\t    V4DImode);\n-  tree V4DF_type_node = build_vector_type_for_mode (double_type_node,\n-\t\t\t\t\t\t    V4DFmode);\n-  tree V16HI_type_node = build_vector_type_for_mode (intHI_type_node,\n-\t\t\t\t\t\t     V16HImode);\n-  tree v8sf_ftype_v8sf\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8si_ftype_v8sf\n-    = build_function_type_list (V8SI_type_node,\n-\t\t\t\tV8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8si\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4si_ftype_v4df\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4si\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4sf\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v4df\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_v8sf\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, V8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_v4df\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, V4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_int\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4si_ftype_v8si_int\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV8SI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_int\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v8sf_int\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV8SF_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2df_ftype_v4df_int\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV4DF_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_v8sf_int\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, V8SF_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_v8sf_v8sf\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, V8SF_type_node,\n-\t\t\t\tV8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_v4df_v4df\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, V4DF_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8si_ftype_v8si_v8si_int\n-    = build_function_type_list (V8SI_type_node,\n-\t\t\t\tV8SI_type_node, V8SI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_v4df_int\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, V4DF_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_pcfloat\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tpcfloat_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_pcdouble\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tpcdouble_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree pcv4sf_type_node\n-    = build_pointer_type (build_type_variant (V4SF_type_node, 1, 0));\n-  tree pcv2df_type_node\n-    = build_pointer_type (build_type_variant (V2DF_type_node, 1, 0));\n-  tree v8sf_ftype_pcv4sf\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tpcv4sf_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_pcv2df\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tpcv2df_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v32qi_ftype_pcchar\n-    = build_function_type_list (V32QI_type_node,\n-\t\t\t\tpcchar_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pchar_v32qi\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pchar_type_node, V32QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8si_ftype_v8si_v4si_int\n-    = build_function_type_list (V8SI_type_node,\n-\t\t\t\tV8SI_type_node, V4SI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree pv4di_type_node = build_pointer_type (V4DI_type_node);\n-  tree void_ftype_pv4di_v4di\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tpv4di_type_node, V4DI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_v4sf_int\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, V4SF_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_v2df_int\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, V2DF_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pfloat_v8sf\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pfloat_type_node, V8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pdouble_v4df\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pdouble_type_node, V4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree pv8sf_type_node = build_pointer_type (V8SF_type_node);\n-  tree pv4sf_type_node = build_pointer_type (V4SF_type_node);\n-  tree pv4df_type_node = build_pointer_type (V4DF_type_node);\n-  tree pv2df_type_node = build_pointer_type (V2DF_type_node);\n-  tree pcv8sf_type_node\n-    = build_pointer_type (build_type_variant (V8SF_type_node, 1, 0));\n-  tree pcv4df_type_node\n-    = build_pointer_type (build_type_variant (V4DF_type_node, 1, 0));\n-  tree v8sf_ftype_pcv8sf_v8sf\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tpcv8sf_type_node, V8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_pcv4df_v4df\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tpcv4df_type_node, V4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_pcv4sf_v4sf\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tpcv4sf_type_node, V4SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2df_ftype_pcv2df_v2df\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tpcv2df_type_node, V2DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pv8sf_v8sf_v8sf\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pv8sf_type_node, V8SF_type_node,\n-\t\t\t\tV8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pv4df_v4df_v4df\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pv4df_type_node, V4DF_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pv4sf_v4sf_v4sf\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pv4sf_type_node, V4SF_type_node,\n-\t\t\t\tV4SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree void_ftype_pv2df_v2df_v2df\n-    = build_function_type_list (void_type_node,\n-\t\t\t        pv2df_type_node, V2DF_type_node,\n-\t\t\t\tV2DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v2df\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV2DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v4sf\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV4SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8si_ftype_v4si\n-    = build_function_type_list (V8SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2df_ftype_v4df\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v8sf\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4si_ftype_v8si\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV8SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v4df\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v8sf\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v8sf_v8sf\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV8SF_type_node, V8SF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v4di_v4di\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV4DI_type_node, V4DI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree int_ftype_v4df_v4df\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tV4DF_type_node, V4DF_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_v8si\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, V8SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_v4di\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, V4DI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v4sf_v4si\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V4SI_type_node, NULL_TREE);\n-  tree v2df_ftype_v2df_v2di\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, V2DI_type_node, NULL_TREE);\n-\n-  /* XOP instructions */\n-  tree v2di_ftype_v2di_v2di_v2di\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV2DI_type_node,\n-\t\t\t\tV2DI_type_node,\n-\t\t\t\tV2DI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v4di_ftype_v4di_v4di_v4di\n-    = build_function_type_list (V4DI_type_node,\n-\t\t\t\tV4DI_type_node,\n-\t\t\t\tV4DI_type_node,\n-\t\t\t\tV4DI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v4si_ftype_v4si_v4si_v4si\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v8si_ftype_v8si_v8si_v8si\n-    = build_function_type_list (V8SI_type_node,\n-\t\t\t\tV8SI_type_node,\n-\t\t\t\tV8SI_type_node,\n-\t\t\t\tV8SI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v32qi_ftype_v32qi_v32qi_v32qi\n-    = build_function_type_list (V32QI_type_node,\n-\t\t\t\tV32QI_type_node,\n-\t\t\t\tV32QI_type_node,\n-\t\t\t\tV32QI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v4si_ftype_v4si_v4si_v2di\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tV2DI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v8hi_ftype_v8hi_v8hi_v8hi\n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV8HI_type_node,\n-\t\t\t\tV8HI_type_node,\n-\t\t\t\tV8HI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v16hi_ftype_v16hi_v16hi_v16hi\n-    = build_function_type_list (V16HI_type_node,\n-\t\t\t\tV16HI_type_node,\n-\t\t\t\tV16HI_type_node,\n-\t\t\t\tV16HI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v8hi_ftype_v8hi_v8hi_v4si\n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV8HI_type_node,\n-\t\t\t\tV8HI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v2di_ftype_v2di_si\n-    = build_function_type_list (V2DI_type_node,\n-\t\t\t\tV2DI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v4si_ftype_v4si_si\n-    = build_function_type_list (V4SI_type_node,\n-\t\t\t\tV4SI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v8hi_ftype_v8hi_si\n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV8HI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v16qi_ftype_v16qi_si\n-    = build_function_type_list (V16QI_type_node,\n-\t\t\t\tV16QI_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree v2di_ftype_v2di\n-    = build_function_type_list (V2DI_type_node, V2DI_type_node, NULL_TREE);\n-\n-  tree v16qi_ftype_v8hi_v8hi\n-    = build_function_type_list (V16QI_type_node,\n-\t\t\t\tV8HI_type_node, V8HI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8hi_ftype_v4si_v4si\n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV4SI_type_node, V4SI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v8hi_ftype_v16qi_v16qi \n-    = build_function_type_list (V8HI_type_node,\n-\t\t\t\tV16QI_type_node, V16QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4hi_ftype_v8qi_v8qi \n-    = build_function_type_list (V4HI_type_node,\n-\t\t\t\tV8QI_type_node, V8QI_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree unsigned_ftype_unsigned_uchar\n-    = build_function_type_list (unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_char_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree unsigned_ftype_unsigned_ushort\n-    = build_function_type_list (unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tshort_unsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree unsigned_ftype_unsigned_unsigned\n-    = build_function_type_list (unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree uint64_ftype_uint64_uint64\n-    = build_function_type_list (long_long_unsigned_type_node,\n-\t\t\t\tlong_long_unsigned_type_node,\n-\t\t\t\tlong_long_unsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree float_ftype_float\n-    = build_function_type_list (float_type_node,\n-\t\t\t\tfloat_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  /* Integer intrinsics.  */\n-  tree uint64_ftype_void\n-    = build_function_type (long_long_unsigned_type_node,\n-\t\t\t   void_list_node);\n-  tree int_ftype_int\n-    = build_function_type_list (integer_type_node,\n-\t\t\t\tinteger_type_node, NULL_TREE);\n-  tree int64_ftype_int64\n-    = build_function_type_list (long_long_integer_type_node,\n-\t\t\t\tlong_long_integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree uint64_ftype_int\n-    = build_function_type_list (long_long_unsigned_type_node,\n-\t\t\t\tinteger_type_node, NULL_TREE);\n-  tree punsigned_type_node = build_pointer_type (unsigned_type_node);\n-  tree uint64_ftype_punsigned\n-    = build_function_type_list (long_long_unsigned_type_node,\n-\t\t\t\tpunsigned_type_node, NULL_TREE);\n-  tree ushort_ftype_ushort_int\n-    = build_function_type_list (short_unsigned_type_node,\n-\t\t\t\tshort_unsigned_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree uchar_ftype_uchar_int\n-    = build_function_type_list (unsigned_char_type_node,\n-\t\t\t\tunsigned_char_type_node,\n-\t\t\t\tinteger_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  /* LWP instructions.  */\n-\n-  tree void_ftype_ushort_unsigned_ushort\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tshort_unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tshort_unsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree void_ftype_unsigned_unsigned_unsigned\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree void_ftype_uint64_unsigned_unsigned\n-    = build_function_type_list (void_type_node,\n-\t\t\t\tlong_long_unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree uchar_ftype_ushort_unsigned_ushort\n-    = build_function_type_list (unsigned_char_type_node,\n-\t\t\t\tshort_unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tshort_unsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree uchar_ftype_unsigned_unsigned_unsigned\n-    = build_function_type_list (unsigned_char_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree uchar_ftype_uint64_unsigned_unsigned\n-    = build_function_type_list (unsigned_char_type_node,\n-\t\t\t\tlong_long_unsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tunsigned_type_node,\n-\t\t\t\tNULL_TREE);\n-\n-  tree ftype;\n-\n   /* Add all special builtins with variable number of operands.  */\n   for (i = 0, d = bdesc_special_args;\n        i < ARRAY_SIZE (bdesc_special_args);\n        i++, d++)\n     {\n-      tree type;\n-\n       if (d->name == 0)\n \tcontinue;\n \n-      switch ((enum ix86_special_builtin_type) d->flag)\n-\t{\n-\tcase VOID_FTYPE_VOID:\n-\t  type = void_ftype_void;\n-\t  break;\n-\tcase UINT64_FTYPE_VOID:\n-\t  type = uint64_ftype_void;\n-\t  break;\n-\tcase UINT64_FTYPE_PUNSIGNED:\n-\t  type = uint64_ftype_punsigned;\n-\t  break;\n-\tcase V32QI_FTYPE_PCCHAR:\n-\t  type = v32qi_ftype_pcchar;\n-\t  break;\n-\tcase V16QI_FTYPE_PCCHAR:\n-\t  type = v16qi_ftype_pcchar;\n-\t  break;\n-\tcase V8SF_FTYPE_PCV4SF:\n-\t  type = v8sf_ftype_pcv4sf;\n-\t  break;\n-\tcase V8SF_FTYPE_PCFLOAT:\n-\t  type = v8sf_ftype_pcfloat;\n-\t  break;\n-\tcase V4DF_FTYPE_PCV2DF:\n-\t  type = v4df_ftype_pcv2df;\n-\t  break;\n-\tcase V4DF_FTYPE_PCDOUBLE:\n-\t  type = v4df_ftype_pcdouble;\n-\t  break;\n-\tcase V4SF_FTYPE_PCFLOAT:\n-\t  type = v4sf_ftype_pcfloat;\n-\t  break;\n-\tcase V2DI_FTYPE_PV2DI:\n-\t  type = v2di_ftype_pv2di;\n-\t  break;\n-\tcase V2DF_FTYPE_PCDOUBLE:\n-\t  type = v2df_ftype_pcdouble;\n-\t  break;\n-\tcase V8SF_FTYPE_PCV8SF_V8SF:\n-\t  type = v8sf_ftype_pcv8sf_v8sf;\n-\t  break;\n-\tcase V4DF_FTYPE_PCV4DF_V4DF:\n-\t  type = v4df_ftype_pcv4df_v4df;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_PCV2SF:\n-\t  type = v4sf_ftype_v4sf_pcv2sf;\n-\t  break;\n-\tcase V4SF_FTYPE_PCV4SF_V4SF:\n-\t  type = v4sf_ftype_pcv4sf_v4sf;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_PCDOUBLE:\n-\t  type = v2df_ftype_v2df_pcdouble;\n-\t  break;\n-\tcase V2DF_FTYPE_PCV2DF_V2DF:\n-\t  type = v2df_ftype_pcv2df_v2df;\n-\t  break;\n-\tcase VOID_FTYPE_PV2SF_V4SF:\n-\t  type = void_ftype_pv2sf_v4sf;\n-\t  break;\n-\tcase VOID_FTYPE_PV4DI_V4DI:\n-\t  type = void_ftype_pv4di_v4di;\n-\t  break;\n-\tcase VOID_FTYPE_PV2DI_V2DI:\n-\t  type = void_ftype_pv2di_v2di;\n-\t  break;\n-\tcase VOID_FTYPE_PCHAR_V32QI:\n-\t  type = void_ftype_pchar_v32qi;\n-\t  break;\n-\tcase VOID_FTYPE_PCHAR_V16QI:\n-\t  type = void_ftype_pchar_v16qi;\n-\t  break;\n-\tcase VOID_FTYPE_PFLOAT_V8SF:\n-\t  type = void_ftype_pfloat_v8sf;\n-\t  break;\n-\tcase VOID_FTYPE_PFLOAT_V4SF:\n-\t  type = void_ftype_pfloat_v4sf;\n-\t  break;\n-\tcase VOID_FTYPE_PDOUBLE_V4DF:\n-\t  type = void_ftype_pdouble_v4df;\n-\t  break;\n-\tcase VOID_FTYPE_PDOUBLE_V2DF:\n-\t  type = void_ftype_pdouble_v2df;\n-\t  break;\n-\tcase VOID_FTYPE_PDI_DI:\n-\t  type = void_ftype_pdi_di;\n-\t  break;\n-\tcase VOID_FTYPE_PINT_INT:\n-\t  type = void_ftype_pint_int;\n-\t  break;\n-\tcase VOID_FTYPE_PV8SF_V8SF_V8SF:\n-\t  type = void_ftype_pv8sf_v8sf_v8sf;\n-\t  break;\n-\tcase VOID_FTYPE_PV4DF_V4DF_V4DF:\n-\t  type = void_ftype_pv4df_v4df_v4df;\n-\t  break;\n-\tcase VOID_FTYPE_PV4SF_V4SF_V4SF:\n-\t  type = void_ftype_pv4sf_v4sf_v4sf;\n-\t  break;\n-\tcase VOID_FTYPE_PV2DF_V2DF_V2DF:\n-\t  type = void_ftype_pv2df_v2df_v2df;\n-\t  break;\n-\tcase VOID_FTYPE_USHORT_UINT_USHORT:\n-\t  type = void_ftype_ushort_unsigned_ushort;\n-\t  break;\n-\tcase VOID_FTYPE_UINT_UINT_UINT:\n-\t  type = void_ftype_unsigned_unsigned_unsigned;\n-\t  break;\n-\tcase VOID_FTYPE_UINT64_UINT_UINT:\n-\t  type = void_ftype_uint64_unsigned_unsigned;\n-\t  break;\n-\tcase UCHAR_FTYPE_USHORT_UINT_USHORT:\n-\t  type = uchar_ftype_ushort_unsigned_ushort;\n-\t  break;\n-\tcase UCHAR_FTYPE_UINT_UINT_UINT:\n-\t  type = uchar_ftype_unsigned_unsigned_unsigned;\n-\t  break;\n-\tcase UCHAR_FTYPE_UINT64_UINT_UINT:\n-\t  type = uchar_ftype_uint64_unsigned_unsigned;\n-\t  break;\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n-\n-      def_builtin (d->mask, d->name, type, d->code);\n+      ftype = (enum ix86_builtin_func_type) d->flag;\n+      def_builtin (d->mask, d->name, ftype, d->code);\n     }\n \n   /* Add all builtins with variable number of operands.  */\n   for (i = 0, d = bdesc_args;\n        i < ARRAY_SIZE (bdesc_args);\n        i++, d++)\n     {\n-      tree type;\n-\n       if (d->name == 0)\n \tcontinue;\n \n-      switch ((enum ix86_builtin_type) d->flag)\n-\t{\n-\tcase FLOAT_FTYPE_FLOAT:\n-\t  type = float_ftype_float;\n-\t  break;\n-\tcase INT_FTYPE_V8SF_V8SF_PTEST:\n-\t  type = int_ftype_v8sf_v8sf;\n-\t  break;\n-\tcase INT_FTYPE_V4DI_V4DI_PTEST:\n-\t  type = int_ftype_v4di_v4di;\n-\t  break;\n-\tcase INT_FTYPE_V4DF_V4DF_PTEST:\n-\t  type = int_ftype_v4df_v4df;\n-\t  break;\n-\tcase INT_FTYPE_V4SF_V4SF_PTEST:\n-\t  type = int_ftype_v4sf_v4sf;\n-\t  break;\n-\tcase INT_FTYPE_V2DI_V2DI_PTEST:\n-\t  type = int_ftype_v2di_v2di;\n-\t  break;\n-\tcase INT_FTYPE_V2DF_V2DF_PTEST:\n-\t  type = int_ftype_v2df_v2df;\n-\t  break;\n-\tcase INT_FTYPE_INT:\n-\t  type = int_ftype_int;\n-\t  break;\n-\tcase UINT64_FTYPE_INT:\n-\t  type = uint64_ftype_int;\n-\t  break;\n-\tcase INT64_FTYPE_INT64:\n-\t  type = int64_ftype_int64;\n-\t  break;\n-\tcase INT64_FTYPE_V4SF:\n-\t  type = int64_ftype_v4sf;\n-\t  break;\n-\tcase INT64_FTYPE_V2DF:\n-\t  type = int64_ftype_v2df;\n-\t  break;\n-\tcase INT_FTYPE_V16QI:\n-\t  type = int_ftype_v16qi;\n-\t  break;\n-\tcase INT_FTYPE_V8QI:\n-\t  type = int_ftype_v8qi;\n-\t  break;\n-\tcase INT_FTYPE_V8SF:\n-\t  type = int_ftype_v8sf;\n-\t  break;\n-\tcase INT_FTYPE_V4DF:\n-\t  type = int_ftype_v4df;\n-\t  break;\n-\tcase INT_FTYPE_V4SF:\n-\t  type = int_ftype_v4sf;\n-\t  break;\n-\tcase INT_FTYPE_V2DF:\n-\t  type = int_ftype_v2df;\n-\t  break;\n-\tcase V16QI_FTYPE_V16QI:\n-\t  type = v16qi_ftype_v16qi;\n-\t  break;\n-\tcase V8SI_FTYPE_V8SF:\n-\t  type = v8si_ftype_v8sf;\n-\t  break;\n-\tcase V8SI_FTYPE_V4SI:\n-\t  type = v8si_ftype_v4si;\n-\t  break;\n-\tcase V8HI_FTYPE_V8HI:\n-\t  type = v8hi_ftype_v8hi;\n-\t  break;\n-\tcase V8HI_FTYPE_V16QI:\n-\t  type = v8hi_ftype_v16qi;\n-\t  break;\n-\tcase V8QI_FTYPE_V8QI:\n-\t  type = v8qi_ftype_v8qi;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF:\n-\t  type = v8sf_ftype_v8sf;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SI:\n-\t  type = v8sf_ftype_v8si;\n-\t  break;\n-\tcase V8SF_FTYPE_V4SF:\n-\t  type = v8sf_ftype_v4sf;\n-\t  break;\n-\tcase V4SI_FTYPE_V4DF:\n-\t  type = v4si_ftype_v4df;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SI:\n-\t  type = v4si_ftype_v4si;\n-\t  break;\n-\tcase V4SI_FTYPE_V16QI:\n-\t  type = v4si_ftype_v16qi;\n-\t  break;\n-\tcase V4SI_FTYPE_V8SI:\n-\t  type = v4si_ftype_v8si;\n-\t  break;\n-\tcase V4SI_FTYPE_V8HI:\n-\t  type = v4si_ftype_v8hi;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SF:\n-\t  type = v4si_ftype_v4sf;\n-\t  break;\n-\tcase V4SI_FTYPE_V2DF:\n-\t  type = v4si_ftype_v2df;\n-\t  break;\n-\tcase V4HI_FTYPE_V4HI:\n-\t  type = v4hi_ftype_v4hi;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF:\n-\t  type = v4df_ftype_v4df;\n-\t  break;\n-\tcase V4DF_FTYPE_V4SI:\n-\t  type = v4df_ftype_v4si;\n-\t  break;\n-\tcase V4DF_FTYPE_V4SF:\n-\t  type = v4df_ftype_v4sf;\n-\t  break;\n-\tcase V4DF_FTYPE_V2DF:\n-\t  type = v4df_ftype_v2df;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF:\n-\tcase V4SF_FTYPE_V4SF_VEC_MERGE:\n-\t  type = v4sf_ftype_v4sf;\n-\t  break;\n-\tcase V4SF_FTYPE_V8SF:\n-\t  type = v4sf_ftype_v8sf;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SI:\n-\t  type = v4sf_ftype_v4si;\n-\t  break;\n-\tcase V4SF_FTYPE_V4DF:\n-\t  type = v4sf_ftype_v4df;\n-\t  break;\n-\tcase V4SF_FTYPE_V2DF:\n-\t  type = v4sf_ftype_v2df;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI:\n-\t  type = v2di_ftype_v2di;\n-\t  break;\n-\tcase V2DI_FTYPE_V16QI:\n-\t  type = v2di_ftype_v16qi;\n-\t  break;\n-\tcase V2DI_FTYPE_V8HI:\n-\t  type = v2di_ftype_v8hi;\n-\t  break;\n-\tcase V2DI_FTYPE_V4SI:\n-\t  type = v2di_ftype_v4si;\n-\t  break;\n-\tcase V2SI_FTYPE_V2SI:\n-\t  type = v2si_ftype_v2si;\n-\t  break;\n-\tcase V2SI_FTYPE_V4SF:\n-\t  type = v2si_ftype_v4sf;\n-\t  break;\n-\tcase V2SI_FTYPE_V2DF:\n-\t  type = v2si_ftype_v2df;\n-\t  break;\n-\tcase V2SI_FTYPE_V2SF:\n-\t  type = v2si_ftype_v2sf;\n-\t  break;\n-\tcase V2DF_FTYPE_V4DF:\n-\t  type = v2df_ftype_v4df;\n-\t  break;\n-\tcase V2DF_FTYPE_V4SF:\n-\t  type = v2df_ftype_v4sf;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF:\n-\tcase V2DF_FTYPE_V2DF_VEC_MERGE:\n-\t  type = v2df_ftype_v2df;\n-\t  break;\n-\tcase V2DF_FTYPE_V2SI:\n-\t  type = v2df_ftype_v2si;\n-\t  break;\n-\tcase V2DF_FTYPE_V4SI:\n-\t  type = v2df_ftype_v4si;\n-\t  break;\n-\tcase V2SF_FTYPE_V2SF:\n-\t  type = v2sf_ftype_v2sf;\n-\t  break;\n-\tcase V2SF_FTYPE_V2SI:\n-\t  type = v2sf_ftype_v2si;\n-\t  break;\n-\tcase V16QI_FTYPE_V16QI_V16QI:\n-\t  type = v16qi_ftype_v16qi_v16qi;\n-\t  break;\n-\tcase V16QI_FTYPE_V8HI_V8HI:\n-\t  type = v16qi_ftype_v8hi_v8hi;\n-\t  break;\n-\tcase V8QI_FTYPE_V8QI_V8QI:\n-\t  type = v8qi_ftype_v8qi_v8qi;\n-\t  break;\n-\tcase V8QI_FTYPE_V4HI_V4HI:\n-\t  type = v8qi_ftype_v4hi_v4hi;\n-\t  break;\n-\tcase V8HI_FTYPE_V8HI_V8HI:\n-\tcase V8HI_FTYPE_V8HI_V8HI_COUNT:\n-\t  type = v8hi_ftype_v8hi_v8hi;\n-\t  break;\n-\tcase V8HI_FTYPE_V16QI_V16QI:\n-\t  type = v8hi_ftype_v16qi_v16qi;\n-\t  break;\n-\tcase V8HI_FTYPE_V4SI_V4SI:\n-\t  type = v8hi_ftype_v4si_v4si;\n-\t  break;\n-\tcase V8HI_FTYPE_V8HI_SI_COUNT:\n-\t  type = v8hi_ftype_v8hi_int;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF_V8SF:\n-\t  type = v8sf_ftype_v8sf_v8sf;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF_V8SI:\n-\t  type = v8sf_ftype_v8sf_v8si;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SI_V4SI:\n-\tcase V4SI_FTYPE_V4SI_V4SI_COUNT:\n-\t  type = v4si_ftype_v4si_v4si;\n-\t  break;\n-\tcase V4SI_FTYPE_V8HI_V8HI:\n-\t  type = v4si_ftype_v8hi_v8hi;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SF_V4SF:\n-\t  type = v4si_ftype_v4sf_v4sf;\n-\t  break;\n-\tcase V4SI_FTYPE_V2DF_V2DF:\n-\t  type = v4si_ftype_v2df_v2df;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SI_SI_COUNT:\n-\t  type = v4si_ftype_v4si_int;\n-\t  break;\n-\tcase V4HI_FTYPE_V4HI_V4HI:\n-\tcase V4HI_FTYPE_V4HI_V4HI_COUNT:\n-\t  type = v4hi_ftype_v4hi_v4hi;\n-\t  break;\n-\tcase V4HI_FTYPE_V8QI_V8QI:\n-\t  type = v4hi_ftype_v8qi_v8qi;\n-\t  break;\n-\tcase V4HI_FTYPE_V2SI_V2SI:\n-\t  type = v4hi_ftype_v2si_v2si;\n-\t  break;\n-\tcase V4HI_FTYPE_V4HI_SI_COUNT:\n-\t  type = v4hi_ftype_v4hi_int;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_V4DF:\n-\t  type = v4df_ftype_v4df_v4df;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_V4DI:\n-\t  type = v4df_ftype_v4df_v4di;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V4SF:\n-\tcase V4SF_FTYPE_V4SF_V4SF_SWAP:\n-\t  type = v4sf_ftype_v4sf_v4sf;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V4SI:\n-\t  type = v4sf_ftype_v4sf_v4si;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V2SI:\n-\t  type = v4sf_ftype_v4sf_v2si;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V2DF:\n-\t  type = v4sf_ftype_v4sf_v2df;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_DI:\n-\t  type = v4sf_ftype_v4sf_int64;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_SI:\n-\t  type = v4sf_ftype_v4sf_int;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_V2DI:\n-\tcase V2DI_FTYPE_V2DI_V2DI_COUNT:\n-\t  type = v2di_ftype_v2di_v2di;\n-\t  break;\n-\tcase V2DI_FTYPE_V16QI_V16QI:\n-\t  type = v2di_ftype_v16qi_v16qi;\n-\t  break;\n-\tcase V2DI_FTYPE_V4SI_V4SI:\n-\t  type = v2di_ftype_v4si_v4si;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_V16QI:\n-\t  type = v2di_ftype_v2di_v16qi;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DF_V2DF:\n-\t  type = v2di_ftype_v2df_v2df;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_SI_COUNT:\n-\t  type = v2di_ftype_v2di_int;\n-\t  break;\n-\tcase V2SI_FTYPE_V2SI_V2SI:\n-\tcase V2SI_FTYPE_V2SI_V2SI_COUNT:\n-\t  type = v2si_ftype_v2si_v2si;\n-\t  break;\n-\tcase V2SI_FTYPE_V4HI_V4HI:\n-\t  type = v2si_ftype_v4hi_v4hi;\n-\t  break;\n-\tcase V2SI_FTYPE_V2SF_V2SF:\n-\t  type = v2si_ftype_v2sf_v2sf;\n-\t  break;\n-\tcase V2SI_FTYPE_V2SI_SI_COUNT:\n-\t  type = v2si_ftype_v2si_int;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_V2DF:\n-\tcase V2DF_FTYPE_V2DF_V2DF_SWAP:\n-\t  type = v2df_ftype_v2df_v2df;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_V4SF:\n-\t  type = v2df_ftype_v2df_v4sf;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_V2DI:\n-\t  type = v2df_ftype_v2df_v2di;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_DI:\n-\t  type = v2df_ftype_v2df_int64;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_SI:\n-\t  type = v2df_ftype_v2df_int;\n-\t  break;\n-\tcase V2SF_FTYPE_V2SF_V2SF:\n-\t  type = v2sf_ftype_v2sf_v2sf;\n-\t  break;\n-\tcase V1DI_FTYPE_V1DI_V1DI:\n-\tcase V1DI_FTYPE_V1DI_V1DI_COUNT:\n-\t  type = v1di_ftype_v1di_v1di;\n-\t  break;\n-\tcase V1DI_FTYPE_V8QI_V8QI:\n-\t  type = v1di_ftype_v8qi_v8qi;\n-\t  break;\n-\tcase V1DI_FTYPE_V2SI_V2SI:\n-\t  type = v1di_ftype_v2si_v2si;\n-\t  break;\n-\tcase V1DI_FTYPE_V1DI_SI_COUNT:\n-\t  type = v1di_ftype_v1di_int;\n-\t  break;\n-\tcase UINT64_FTYPE_UINT64_UINT64:\n-\t  type = uint64_ftype_uint64_uint64;\n-\t  break;\n-\tcase UINT_FTYPE_UINT_UINT:\n-\t  type = unsigned_ftype_unsigned_unsigned;\n-\t  break;\n-\tcase UINT_FTYPE_UINT_USHORT:\n-\t  type = unsigned_ftype_unsigned_ushort;\n-\t  break;\n-\tcase UINT_FTYPE_UINT_UCHAR:\n-\t  type = unsigned_ftype_unsigned_uchar;\n-\t  break;\n-\tcase UINT16_FTYPE_UINT16_INT:\n-\t  type = ushort_ftype_ushort_int;\n-\t  break;\n-\tcase UINT8_FTYPE_UINT8_INT:\n-\t  type = uchar_ftype_uchar_int;\n-\t  break;\n-\tcase V8HI_FTYPE_V8HI_INT:\n-\t  type = v8hi_ftype_v8hi_int;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF_INT:\n-\t  type = v8sf_ftype_v8sf_int;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SI_INT:\n-\t  type = v4si_ftype_v4si_int;\n-\t  break;\n-\tcase V4SI_FTYPE_V8SI_INT:\n-\t  type = v4si_ftype_v8si_int;\n-\t  break;\n-\tcase V4HI_FTYPE_V4HI_INT:\n-\t  type = v4hi_ftype_v4hi_int;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_INT:\n-\t  type = v4df_ftype_v4df_int;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_INT:\n-\t  type = v4sf_ftype_v4sf_int;\n-\t  break;\n-\tcase V4SF_FTYPE_V8SF_INT:\n-\t  type = v4sf_ftype_v8sf_int;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_INT:\n-\tcase V2DI2TI_FTYPE_V2DI_INT:\n-\t  type = v2di_ftype_v2di_int;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_INT:\n-\t  type = v2df_ftype_v2df_int;\n-\t  break;\n-\tcase V2DF_FTYPE_V4DF_INT:\n-\t  type = v2df_ftype_v4df_int;\n-\t  break;\n-\tcase V16QI_FTYPE_V16QI_V16QI_V16QI:\n-\t  type = v16qi_ftype_v16qi_v16qi_v16qi;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF_V8SF_V8SF:\n-\t  type = v8sf_ftype_v8sf_v8sf_v8sf;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_V4DF_V4DF:\n-\t  type = v4df_ftype_v4df_v4df_v4df;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V4SF_V4SF:\n-\t  type = v4sf_ftype_v4sf_v4sf_v4sf;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_V2DF_V2DF:\n-\t  type = v2df_ftype_v2df_v2df_v2df;\n-\t  break;\n-\tcase V16QI_FTYPE_V16QI_V16QI_INT:\n-\t  type = v16qi_ftype_v16qi_v16qi_int;\n-\t  break;\n-\tcase V8SI_FTYPE_V8SI_V8SI_INT:\n-\t  type = v8si_ftype_v8si_v8si_int;\n-\t  break;\n-\tcase V8SI_FTYPE_V8SI_V4SI_INT:\n-\t  type = v8si_ftype_v8si_v4si_int;\n-\t  break;\n-\tcase V8HI_FTYPE_V8HI_V8HI_INT:\n-\t  type = v8hi_ftype_v8hi_v8hi_int;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF_V8SF_INT:\n-\t  type = v8sf_ftype_v8sf_v8sf_int;\n-\t  break;\n-\tcase V8SF_FTYPE_V8SF_V4SF_INT:\n-\t  type = v8sf_ftype_v8sf_v4sf_int;\n-\t  break;\n-\tcase V4SI_FTYPE_V4SI_V4SI_INT:\n-\t  type = v4si_ftype_v4si_v4si_int;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_V4DF_INT:\n-\t  type = v4df_ftype_v4df_v4df_int;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_V2DF_INT:\n-\t  type = v4df_ftype_v4df_v2df_int;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V4SF_INT:\n-\t  type = v4sf_ftype_v4sf_v4sf_int;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_V2DI_INT:\n-\tcase V2DI2TI_FTYPE_V2DI_V2DI_INT:\n-\t  type = v2di_ftype_v2di_v2di_int;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_V2DF_INT:\n-\t  type = v2df_ftype_v2df_v2df_int;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_UINT_UINT:\n-\t  type = v2di_ftype_v2di_unsigned_unsigned;\n-\t  break;\n-\tcase V2DI_FTYPE_V2DI_V2DI_UINT_UINT:\n-\t  type = v2di_ftype_v2di_v2di_unsigned_unsigned;\n-\t  break;\n-\tcase V1DI2DI_FTYPE_V1DI_V1DI_INT:\n-\t  type = v1di_ftype_v1di_v1di_int;\n-\t  break;\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n-\n-      def_builtin_const (d->mask, d->name, type, d->code);\n+      ftype = (enum ix86_builtin_func_type) d->flag;\n+      def_builtin_const (d->mask, d->name, ftype, d->code);\n     }\n \n   /* pcmpestr[im] insns.  */\n@@ -23904,9 +22398,9 @@ ix86_init_mmx_sse_builtins (void)\n        i++, d++)\n     {\n       if (d->code == IX86_BUILTIN_PCMPESTRM128)\n-\tftype = v16qi_ftype_v16qi_int_v16qi_int_int;\n+\tftype = V16QI_FTYPE_V16QI_INT_V16QI_INT_INT;\n       else\n-\tftype = int_ftype_v16qi_int_v16qi_int_int;\n+\tftype = INT_FTYPE_V16QI_INT_V16QI_INT_INT;\n       def_builtin_const (d->mask, d->name, ftype, d->code);\n     }\n \n@@ -23916,199 +22410,135 @@ ix86_init_mmx_sse_builtins (void)\n        i++, d++)\n     {\n       if (d->code == IX86_BUILTIN_PCMPISTRM128)\n-\tftype = v16qi_ftype_v16qi_v16qi_int;\n+\tftype = V16QI_FTYPE_V16QI_V16QI_INT;\n       else\n-\tftype = int_ftype_v16qi_v16qi_int;\n+\tftype = INT_FTYPE_V16QI_V16QI_INT;\n       def_builtin_const (d->mask, d->name, ftype, d->code);\n     }\n \n   /* comi/ucomi insns.  */\n   for (i = 0, d = bdesc_comi; i < ARRAY_SIZE (bdesc_comi); i++, d++)\n-    if (d->mask == OPTION_MASK_ISA_SSE2)\n-      def_builtin_const (d->mask, d->name, int_ftype_v2df_v2df, d->code);\n-    else\n-      def_builtin_const (d->mask, d->name, int_ftype_v4sf_v4sf, d->code);\n+    {\n+      if (d->mask == OPTION_MASK_ISA_SSE2)\n+\tftype = INT_FTYPE_V2DF_V2DF;\n+      else\n+\tftype = INT_FTYPE_V4SF_V4SF;\n+      def_builtin_const (d->mask, d->name, ftype, d->code);\n+    }\n \n   /* SSE */\n-  def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_ldmxcsr\", void_ftype_unsigned, IX86_BUILTIN_LDMXCSR);\n-  def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_stmxcsr\", unsigned_ftype_void, IX86_BUILTIN_STMXCSR);\n+  def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_ldmxcsr\",\n+\t       VOID_FTYPE_UNSIGNED, IX86_BUILTIN_LDMXCSR);\n+  def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_stmxcsr\",\n+\t       UNSIGNED_FTYPE_VOID, IX86_BUILTIN_STMXCSR);\n \n   /* SSE or 3DNow!A */\n-  def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_maskmovq\", void_ftype_v8qi_v8qi_pchar, IX86_BUILTIN_MASKMOVQ);\n+  def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A,\n+\t       \"__builtin_ia32_maskmovq\", VOID_FTYPE_V8QI_V8QI_PCHAR,\n+\t       IX86_BUILTIN_MASKMOVQ);\n \n   /* SSE2 */\n-  def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_maskmovdqu\", void_ftype_v16qi_v16qi_pchar, IX86_BUILTIN_MASKMOVDQU);\n+  def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_maskmovdqu\",\n+\t       VOID_FTYPE_V16QI_V16QI_PCHAR, IX86_BUILTIN_MASKMOVDQU);\n \n-  def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_clflush\", void_ftype_pcvoid, IX86_BUILTIN_CLFLUSH);\n-  x86_mfence = def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_mfence\", void_ftype_void, IX86_BUILTIN_MFENCE);\n+  def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_clflush\",\n+\t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLFLUSH);\n+  x86_mfence = def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_mfence\",\n+\t\t\t    VOID_FTYPE_VOID, IX86_BUILTIN_MFENCE);\n \n   /* SSE3.  */\n-  def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_monitor\", void_ftype_pcvoid_unsigned_unsigned, IX86_BUILTIN_MONITOR);\n-  def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_mwait\", void_ftype_unsigned_unsigned, IX86_BUILTIN_MWAIT);\n+  def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_monitor\",\n+\t       VOID_FTYPE_PCVOID_UNSIGNED_UNSIGNED, IX86_BUILTIN_MONITOR);\n+  def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_mwait\",\n+\t       VOID_FTYPE_UNSIGNED_UNSIGNED, IX86_BUILTIN_MWAIT);\n \n   /* AES */\n-  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesenc128\", v2di_ftype_v2di_v2di, IX86_BUILTIN_AESENC128);\n-  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesenclast128\", v2di_ftype_v2di_v2di, IX86_BUILTIN_AESENCLAST128);\n-  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesdec128\", v2di_ftype_v2di_v2di, IX86_BUILTIN_AESDEC128);\n-  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesdeclast128\", v2di_ftype_v2di_v2di, IX86_BUILTIN_AESDECLAST128);\n-  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesimc128\", v2di_ftype_v2di, IX86_BUILTIN_AESIMC128);\n-  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aeskeygenassist128\", v2di_ftype_v2di_int, IX86_BUILTIN_AESKEYGENASSIST128);\n+  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesenc128\",\n+\t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESENC128);\n+  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesenclast128\",\n+\t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESENCLAST128);\n+  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesdec128\",\n+\t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESDEC128);\n+  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesdeclast128\",\n+\t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESDECLAST128);\n+  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aesimc128\",\n+\t\t     V2DI_FTYPE_V2DI, IX86_BUILTIN_AESIMC128);\n+  def_builtin_const (OPTION_MASK_ISA_AES, \"__builtin_ia32_aeskeygenassist128\",\n+\t\t     V2DI_FTYPE_V2DI_INT, IX86_BUILTIN_AESKEYGENASSIST128);\n \n   /* PCLMUL */\n-  def_builtin_const (OPTION_MASK_ISA_PCLMUL, \"__builtin_ia32_pclmulqdq128\", v2di_ftype_v2di_v2di_int, IX86_BUILTIN_PCLMULQDQ128);\n+  def_builtin_const (OPTION_MASK_ISA_PCLMUL, \"__builtin_ia32_pclmulqdq128\",\n+\t\t     V2DI_FTYPE_V2DI_V2DI_INT, IX86_BUILTIN_PCLMULQDQ128);\n \n   /* AVX */\n-  def_builtin (OPTION_MASK_ISA_AVX, \"__builtin_ia32_vzeroupper\", void_ftype_void,\n-\t       TARGET_64BIT ? IX86_BUILTIN_VZEROUPPER_REX64 : IX86_BUILTIN_VZEROUPPER);\n-\n-  /* Access to the vec_init patterns.  */\n-  ftype = build_function_type_list (V2SI_type_node, integer_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v2si\", ftype, IX86_BUILTIN_VEC_INIT_V2SI);\n-\n-  ftype = build_function_type_list (V4HI_type_node, short_integer_type_node,\n-\t\t\t\t    short_integer_type_node,\n-\t\t\t\t    short_integer_type_node,\n-\t\t\t\t    short_integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v4hi\", ftype, IX86_BUILTIN_VEC_INIT_V4HI);\n-\n-  ftype = build_function_type_list (V8QI_type_node, char_type_node,\n-\t\t\t\t    char_type_node, char_type_node,\n-\t\t\t\t    char_type_node, char_type_node,\n-\t\t\t\t    char_type_node, char_type_node,\n-\t\t\t\t    char_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v8qi\", ftype, IX86_BUILTIN_VEC_INIT_V8QI);\n+  def_builtin (OPTION_MASK_ISA_AVX, \"__builtin_ia32_vzeroupper\",\n+\t       VOID_FTYPE_VOID,\n+\t       (TARGET_64BIT ? IX86_BUILTIN_VZEROUPPER_REX64\n+\t\t: IX86_BUILTIN_VZEROUPPER));\n \n-  /* Access to the vec_extract patterns.  */\n-  ftype = build_function_type_list (double_type_node, V2DF_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v2df\", ftype, IX86_BUILTIN_VEC_EXT_V2DF);\n+  /* MMX access to the vec_init patterns.  */\n+  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v2si\",\n+\t\t     V2SI_FTYPE_INT_INT, IX86_BUILTIN_VEC_INIT_V2SI);\n \n-  ftype = build_function_type_list (long_long_integer_type_node,\n-\t\t\t\t    V2DI_type_node, integer_type_node,\n-\t\t\t\t    NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v2di\", ftype, IX86_BUILTIN_VEC_EXT_V2DI);\n+  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v4hi\",\n+\t\t     V4HI_FTYPE_HI_HI_HI_HI,\n+\t\t     IX86_BUILTIN_VEC_INIT_V4HI);\n \n-  ftype = build_function_type_list (float_type_node, V4SF_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_vec_ext_v4sf\", ftype, IX86_BUILTIN_VEC_EXT_V4SF);\n+  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v8qi\",\n+\t\t     V8QI_FTYPE_QI_QI_QI_QI_QI_QI_QI_QI,\n+\t\t     IX86_BUILTIN_VEC_INIT_V8QI);\n \n-  ftype = build_function_type_list (intSI_type_node, V4SI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v4si\", ftype, IX86_BUILTIN_VEC_EXT_V4SI);\n+  /* Access to the vec_extract patterns.  */\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v2df\",\n+\t\t     DOUBLE_FTYPE_V2DF_INT, IX86_BUILTIN_VEC_EXT_V2DF);\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v2di\",\n+\t\t     DI_FTYPE_V2DI_INT, IX86_BUILTIN_VEC_EXT_V2DI);\n+  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_vec_ext_v4sf\",\n+\t\t     FLOAT_FTYPE_V4SF_INT, IX86_BUILTIN_VEC_EXT_V4SF);\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v4si\",\n+\t\t     SI_FTYPE_V4SI_INT, IX86_BUILTIN_VEC_EXT_V4SI);\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v8hi\",\n+\t\t     HI_FTYPE_V8HI_INT, IX86_BUILTIN_VEC_EXT_V8HI);\n+\n+  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A,\n+\t\t     \"__builtin_ia32_vec_ext_v4hi\",\n+\t\t     HI_FTYPE_V4HI_INT, IX86_BUILTIN_VEC_EXT_V4HI);\n+\n+  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_ext_v2si\",\n+\t\t     SI_FTYPE_V2SI_INT, IX86_BUILTIN_VEC_EXT_V2SI);\n+\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v16qi\",\n+\t\t     QI_FTYPE_V16QI_INT, IX86_BUILTIN_VEC_EXT_V16QI);\n \n-  ftype = build_function_type_list (intHI_type_node, V8HI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v8hi\", ftype, IX86_BUILTIN_VEC_EXT_V8HI);\n+  /* Access to the vec_set patterns.  */\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_64BIT,\n+\t\t     \"__builtin_ia32_vec_set_v2di\",\n+\t\t     V2DI_FTYPE_V2DI_DI_INT, IX86_BUILTIN_VEC_SET_V2DI);\n \n-  ftype = build_function_type_list (intHI_type_node, V4HI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_vec_ext_v4hi\", ftype, IX86_BUILTIN_VEC_EXT_V4HI);\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v4sf\",\n+\t\t     V4SF_FTYPE_V4SF_FLOAT_INT, IX86_BUILTIN_VEC_SET_V4SF);\n \n-  ftype = build_function_type_list (intSI_type_node, V2SI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_ext_v2si\", ftype, IX86_BUILTIN_VEC_EXT_V2SI);\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v4si\",\n+\t\t     V4SI_FTYPE_V4SI_SI_INT, IX86_BUILTIN_VEC_SET_V4SI);\n \n-  ftype = build_function_type_list (intQI_type_node, V16QI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v16qi\", ftype, IX86_BUILTIN_VEC_EXT_V16QI);\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_set_v8hi\",\n+\t\t     V8HI_FTYPE_V8HI_HI_INT, IX86_BUILTIN_VEC_SET_V8HI);\n+\n+  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A,\n+\t\t     \"__builtin_ia32_vec_set_v4hi\",\n+\t\t     V4HI_FTYPE_V4HI_HI_INT, IX86_BUILTIN_VEC_SET_V4HI);\n+\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v16qi\",\n+\t\t     V16QI_FTYPE_V16QI_QI_INT, IX86_BUILTIN_VEC_SET_V16QI);\n \n-  /* Access to the vec_set patterns.  */\n-  ftype = build_function_type_list (V2DI_type_node, V2DI_type_node,\n-\t\t\t\t    intDI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_64BIT, \"__builtin_ia32_vec_set_v2di\", ftype, IX86_BUILTIN_VEC_SET_V2DI);\n-\n-  ftype = build_function_type_list (V4SF_type_node, V4SF_type_node,\n-\t\t\t\t    float_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v4sf\", ftype, IX86_BUILTIN_VEC_SET_V4SF);\n-\n-  ftype = build_function_type_list (V4SI_type_node, V4SI_type_node,\n-\t\t\t\t    intSI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v4si\", ftype, IX86_BUILTIN_VEC_SET_V4SI);\n-\n-  ftype = build_function_type_list (V8HI_type_node, V8HI_type_node,\n-\t\t\t\t    intHI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_set_v8hi\", ftype, IX86_BUILTIN_VEC_SET_V8HI);\n-\n-  ftype = build_function_type_list (V4HI_type_node, V4HI_type_node,\n-\t\t\t\t    intHI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_vec_set_v4hi\", ftype, IX86_BUILTIN_VEC_SET_V4HI);\n-\n-  ftype = build_function_type_list (V16QI_type_node, V16QI_type_node,\n-\t\t\t\t    intQI_type_node,\n-\t\t\t\t    integer_type_node, NULL_TREE);\n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v16qi\", ftype, IX86_BUILTIN_VEC_SET_V16QI);\n   /* Add FMA4 multi-arg argument instructions */\n   for (i = 0, d = bdesc_multi_arg; i < ARRAY_SIZE (bdesc_multi_arg); i++, d++)\n     {\n-      tree mtype = NULL_TREE;\n-\n       if (d->name == 0)\n \tcontinue;\n \n-      switch ((enum multi_arg_type)d->flag)\n-\t{\n-\tcase MULTI_ARG_3_SF:     mtype = v4sf_ftype_v4sf_v4sf_v4sf; \tbreak;\n-\tcase MULTI_ARG_3_DF:     mtype = v2df_ftype_v2df_v2df_v2df; \tbreak;\n-\tcase MULTI_ARG_3_SF2:    mtype = v8sf_ftype_v8sf_v8sf_v8sf; \tbreak;\n-\tcase MULTI_ARG_3_DF2:    mtype = v4df_ftype_v4df_v4df_v4df; \tbreak;\n-\tcase MULTI_ARG_3_DI:     mtype = v2di_ftype_v2di_v2di_v2di; \tbreak;\n-\tcase MULTI_ARG_3_SI:     mtype = v4si_ftype_v4si_v4si_v4si; \tbreak;\n-\tcase MULTI_ARG_3_SI_DI:  mtype = v4si_ftype_v4si_v4si_v2di; \tbreak;\n-\tcase MULTI_ARG_3_HI:     mtype = v8hi_ftype_v8hi_v8hi_v8hi; \tbreak;\n-\tcase MULTI_ARG_3_HI_SI:  mtype = v8hi_ftype_v8hi_v8hi_v4si; \tbreak;\n-\tcase MULTI_ARG_3_QI:     mtype = v16qi_ftype_v16qi_v16qi_v16qi; break;\n-\tcase MULTI_ARG_3_DI2:    mtype = v4di_ftype_v4di_v4di_v4di; \tbreak;\n-\tcase MULTI_ARG_3_SI2:    mtype = v8si_ftype_v8si_v8si_v8si; \tbreak;\n-\tcase MULTI_ARG_3_HI2:    mtype = v16hi_ftype_v16hi_v16hi_v16hi; break;\n-\tcase MULTI_ARG_3_QI2:    mtype = v32qi_ftype_v32qi_v32qi_v32qi; break;\n-\tcase MULTI_ARG_2_SF:     mtype = v4sf_ftype_v4sf_v4sf;      \tbreak;\n-\tcase MULTI_ARG_2_DF:     mtype = v2df_ftype_v2df_v2df;      \tbreak;\n-\tcase MULTI_ARG_2_DI:     mtype = v2di_ftype_v2di_v2di;      \tbreak;\n-\tcase MULTI_ARG_2_SI:     mtype = v4si_ftype_v4si_v4si;      \tbreak;\n-\tcase MULTI_ARG_2_HI:     mtype = v8hi_ftype_v8hi_v8hi;      \tbreak;\n-\tcase MULTI_ARG_2_QI:     mtype = v16qi_ftype_v16qi_v16qi;      \tbreak;\n-\tcase MULTI_ARG_2_DI_IMM: mtype = v2di_ftype_v2di_si;        \tbreak;\n-\tcase MULTI_ARG_2_SI_IMM: mtype = v4si_ftype_v4si_si;        \tbreak;\n-\tcase MULTI_ARG_2_HI_IMM: mtype = v8hi_ftype_v8hi_si;        \tbreak;\n-\tcase MULTI_ARG_2_QI_IMM: mtype = v16qi_ftype_v16qi_si;        \tbreak;\n-\tcase MULTI_ARG_2_DI_CMP: mtype = v2di_ftype_v2di_v2di;      \tbreak;\n-\tcase MULTI_ARG_2_SI_CMP: mtype = v4si_ftype_v4si_v4si;      \tbreak;\n-\tcase MULTI_ARG_2_HI_CMP: mtype = v8hi_ftype_v8hi_v8hi;      \tbreak;\n-\tcase MULTI_ARG_2_QI_CMP: mtype = v16qi_ftype_v16qi_v16qi;      \tbreak;\n-\tcase MULTI_ARG_2_SF_TF:  mtype = v4sf_ftype_v4sf_v4sf;      \tbreak;\n-\tcase MULTI_ARG_2_DF_TF:  mtype = v2df_ftype_v2df_v2df;      \tbreak;\n-\tcase MULTI_ARG_2_DI_TF:  mtype = v2di_ftype_v2di_v2di;      \tbreak;\n-\tcase MULTI_ARG_2_SI_TF:  mtype = v4si_ftype_v4si_v4si;      \tbreak;\n-\tcase MULTI_ARG_2_HI_TF:  mtype = v8hi_ftype_v8hi_v8hi;      \tbreak;\n-\tcase MULTI_ARG_2_QI_TF:  mtype = v16qi_ftype_v16qi_v16qi;      \tbreak;\n-\tcase MULTI_ARG_1_SF:     mtype = v4sf_ftype_v4sf;           \tbreak;\n-\tcase MULTI_ARG_1_DF:     mtype = v2df_ftype_v2df;           \tbreak;\n-\tcase MULTI_ARG_1_SF2:    mtype = v8sf_ftype_v8sf;           \tbreak;\n-\tcase MULTI_ARG_1_DF2:    mtype = v4df_ftype_v4df;           \tbreak;\n-\tcase MULTI_ARG_1_DI:     mtype = v2di_ftype_v2di;           \tbreak;\n-\tcase MULTI_ARG_1_SI:     mtype = v4si_ftype_v4si;           \tbreak;\n-\tcase MULTI_ARG_1_HI:     mtype = v8hi_ftype_v8hi;           \tbreak;\n-\tcase MULTI_ARG_1_QI:     mtype = v16qi_ftype_v16qi;           \tbreak;\n-\tcase MULTI_ARG_1_SI_DI:  mtype = v2di_ftype_v4si;           \tbreak;\n-\tcase MULTI_ARG_1_HI_DI:  mtype = v2di_ftype_v8hi;           \tbreak;\n-\tcase MULTI_ARG_1_HI_SI:  mtype = v4si_ftype_v8hi;           \tbreak;\n-\tcase MULTI_ARG_1_QI_DI:  mtype = v2di_ftype_v16qi;           \tbreak;\n-\tcase MULTI_ARG_1_QI_SI:  mtype = v4si_ftype_v16qi;           \tbreak;\n-\tcase MULTI_ARG_1_QI_HI:  mtype = v8hi_ftype_v16qi;           \tbreak;\n-\n-\tcase MULTI_ARG_UNKNOWN:\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n-\n-      if (mtype)\n-\tdef_builtin_const (d->mask, d->name, mtype, d->code);\n+      ftype = (enum ix86_builtin_func_type) d->flag;\n+      def_builtin_const (d->mask, d->name, ftype, d->code);\n     }\n }\n \n@@ -24162,66 +22592,61 @@ ix86_init_builtins_va_builtins_abi (void)\n }\n \n static void\n-ix86_init_builtins (void)\n+ix86_init_builtin_types (void)\n {\n-  tree float128_type_node = make_node (REAL_TYPE);\n-  tree ftype, decl;\n+  tree float128_type_node, float80_type_node;\n \n   /* The __float80 type.  */\n-  if (TYPE_MODE (long_double_type_node) == XFmode)\n-    (*lang_hooks.types.register_builtin_type) (long_double_type_node,\n-\t\t\t\t\t       \"__float80\");\n-  else\n+  float80_type_node = long_double_type_node;\n+  if (TYPE_MODE (float80_type_node) != XFmode)\n     {\n       /* The __float80 type.  */\n-      tree float80_type_node = make_node (REAL_TYPE);\n+      float80_type_node = make_node (REAL_TYPE);\n \n       TYPE_PRECISION (float80_type_node) = 80;\n       layout_type (float80_type_node);\n-      (*lang_hooks.types.register_builtin_type) (float80_type_node,\n-\t\t\t\t\t\t \"__float80\");\n     }\n+  (*lang_hooks.types.register_builtin_type) (float80_type_node, \"__float80\");\n \n   /* The __float128 type.  */\n+  float128_type_node = make_node (REAL_TYPE);\n   TYPE_PRECISION (float128_type_node) = 128;\n   layout_type (float128_type_node);\n-  (*lang_hooks.types.register_builtin_type) (float128_type_node,\n-\t\t\t\t\t     \"__float128\");\n+  (*lang_hooks.types.register_builtin_type) (float128_type_node, \"__float128\");\n \n-  /* TFmode support builtins.  */\n-  ftype = build_function_type (float128_type_node, void_list_node);\n-  decl = add_builtin_function (\"__builtin_infq\", ftype,\n-\t\t\t       IX86_BUILTIN_INFQ, BUILT_IN_MD,\n-\t\t\t       NULL, NULL_TREE);\n-  ix86_builtins[(int) IX86_BUILTIN_INFQ] = decl;\n+  /* This macro is built by i386-builtin-types.awk.  */\n+  DEFINE_BUILTIN_PRIMITIVE_TYPES;\n+}\n+\n+static void\n+ix86_init_builtins (void)\n+{\n+  tree t;\n+\n+  ix86_init_builtin_types ();\n \n-  decl = add_builtin_function (\"__builtin_huge_valq\", ftype,\n-\t\t\t       IX86_BUILTIN_HUGE_VALQ, BUILT_IN_MD,\n-\t\t\t       NULL, NULL_TREE);\n-  ix86_builtins[(int) IX86_BUILTIN_HUGE_VALQ] = decl;\n+  /* TFmode support builtins.  */\n+  def_builtin_const (0, \"__builtin_infq\",\n+\t\t     FLOAT128_FTYPE_VOID, IX86_BUILTIN_INFQ);\n+  def_builtin_const (0, \"__builtin_huge_valq\",\n+\t\t     FLOAT128_FTYPE_VOID, IX86_BUILTIN_HUGE_VALQ);\n \n   /* We will expand them to normal call if SSE2 isn't available since\n      they are used by libgcc. */\n-  ftype = build_function_type_list (float128_type_node,\n-\t\t\t\t    float128_type_node,\n-\t\t\t\t    NULL_TREE);\n-  decl = add_builtin_function (\"__builtin_fabsq\", ftype,\n-\t\t\t       IX86_BUILTIN_FABSQ, BUILT_IN_MD,\n-\t\t\t       \"__fabstf2\", NULL_TREE);\n-  ix86_builtins[(int) IX86_BUILTIN_FABSQ] = decl;\n-  TREE_READONLY (decl) = 1;\n-\n-  ftype = build_function_type_list (float128_type_node,\n-\t\t\t\t    float128_type_node,\n-\t\t\t\t    float128_type_node,\n-\t\t\t\t    NULL_TREE);\n-  decl = add_builtin_function (\"__builtin_copysignq\", ftype,\n-\t\t\t       IX86_BUILTIN_COPYSIGNQ, BUILT_IN_MD,\n-\t\t\t       \"__copysigntf3\", NULL_TREE);\n-  ix86_builtins[(int) IX86_BUILTIN_COPYSIGNQ] = decl;\n-  TREE_READONLY (decl) = 1;\n+  t = ix86_get_builtin_func_type (FLOAT128_FTYPE_FLOAT128);\n+  t = add_builtin_function (\"__builtin_fabsq\", t, IX86_BUILTIN_FABSQ,\n+\t\t\t    BUILT_IN_MD, \"__fabstf2\", NULL_TREE);\n+  TREE_READONLY (t) = 1;\n+  ix86_builtins[(int) IX86_BUILTIN_FABSQ] = t;\n+\n+  t = ix86_get_builtin_func_type (FLOAT128_FTYPE_FLOAT128_FLOAT128);\n+  t = add_builtin_function (\"__builtin_copysignq\", t, IX86_BUILTIN_COPYSIGNQ,\n+\t\t\t    BUILT_IN_MD, \"__copysigntf3\", NULL_TREE);\n+  TREE_READONLY (t) = 1;\n+  ix86_builtins[(int) IX86_BUILTIN_COPYSIGNQ] = t;\n \n   ix86_init_mmx_sse_builtins ();\n+\n   if (TARGET_64BIT)\n     ix86_init_builtins_va_builtins_abi ();\n }\n@@ -24297,7 +22722,7 @@ ix86_expand_binop_builtin (enum insn_code icode, tree exp, rtx target)\n \n static rtx\n ix86_expand_multi_arg_builtin (enum insn_code icode, tree exp, rtx target,\n-\t\t\t       enum multi_arg_type m_type,\n+\t\t\t       enum ix86_builtin_func_type m_type,\n \t\t\t       enum rtx_code sub_code)\n {\n   rtx pat;\n@@ -24385,7 +22810,6 @@ ix86_expand_multi_arg_builtin (enum insn_code icode, tree exp, rtx target,\n       tf_p = true;\n       break;\n \n-    case MULTI_ARG_UNKNOWN:\n     default:\n       gcc_unreachable ();\n     }\n@@ -24879,7 +23303,7 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n   bool swap = false;\n   enum rtx_code comparison = d->comparison;\n \n-  switch ((enum ix86_builtin_type) d->flag)\n+  switch ((enum ix86_builtin_func_type) d->flag)\n     {\n     case INT_FTYPE_V8SF_V8SF_PTEST:\n     case INT_FTYPE_V4DI_V4DI_PTEST:\n@@ -25022,7 +23446,7 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n     case UINT8_FTYPE_UINT8_INT:\n       nargs = 2;\n       break;\n-    case V2DI2TI_FTYPE_V2DI_INT:\n+    case V2DI_FTYPE_V2DI_INT_CONVERT:\n       nargs = 2;\n       rmode = V2DImode;\n       nargs_constant = 1;\n@@ -25063,12 +23487,12 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n       nargs = 3;\n       nargs_constant = 1;\n       break;\n-    case V2DI2TI_FTYPE_V2DI_V2DI_INT:\n+    case V2DI_FTYPE_V2DI_V2DI_INT_CONVERT:\n       nargs = 3;\n       rmode = V2DImode;\n       nargs_constant = 1;\n       break;\n-    case V1DI2DI_FTYPE_V1DI_V1DI_INT:\n+    case V1DI_FTYPE_V1DI_V1DI_INT_CONVERT:\n       nargs = 3;\n       rmode = DImode;\n       nargs_constant = 1;\n@@ -25259,7 +23683,7 @@ ix86_expand_special_args_builtin (const struct builtin_description *d,\n   enum machine_mode tmode = insn_p->operand[0].mode;\n   enum { load, store } klass;\n \n-  switch ((enum ix86_special_builtin_type) d->flag)\n+  switch ((enum ix86_builtin_func_type) d->flag)\n     {\n     case VOID_FTYPE_VOID:\n       emit_insn (GEN_FCN (icode) (target));\n@@ -25292,7 +23716,7 @@ ix86_expand_special_args_builtin (const struct builtin_description *d,\n     case VOID_FTYPE_PFLOAT_V4SF:\n     case VOID_FTYPE_PDOUBLE_V4DF:\n     case VOID_FTYPE_PDOUBLE_V2DF:\n-    case VOID_FTYPE_PDI_DI:\n+    case VOID_FTYPE_PULONGLONG_ULONGLONG:\n     case VOID_FTYPE_PINT_INT:\n       nargs = 1;\n       klass = store;\n@@ -25753,8 +24177,8 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n   for (i = 0, d = bdesc_multi_arg; i < ARRAY_SIZE (bdesc_multi_arg); i++, d++)\n     if (d->code == fcode)\n       return ix86_expand_multi_arg_builtin (d->icode, exp, target,\n-\t\t\t\t\t    (enum multi_arg_type)d->flag,\n-\t\t\t\t\t    d->comparison);\n+\t\t\t\t\t    (enum ix86_builtin_func_type)\n+\t\t\t\t\t    d->flag, d->comparison);\n \n   gcc_unreachable ();\n }"}, {"sha": "87a25fbc075fb196fabe4fb2e74f77fea105ef2a", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=fe40daa0c3c7fa6be97fa4b1e2185c78c9f3e09a", "patch": "@@ -22,11 +22,20 @@ i386.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(INSN_ATTR_H) $(FLAGS_H) $(C_COMMON_H) except.h $(FUNCTION_H) \\\n   $(RECOG_H) $(EXPR_H) $(OPTABS_H) toplev.h $(BASIC_BLOCK_H) \\\n   $(GGC_H) $(TARGET_H) $(TARGET_DEF_H) langhooks.h $(CGRAPH_H) \\\n-  $(TREE_GIMPLE_H) $(DWARF2_H) $(DF_H) tm-constrs.h $(PARAMS_H)\n+  $(TREE_GIMPLE_H) $(DWARF2_H) $(DF_H) tm-constrs.h $(PARAMS_H) \\\n+  i386-builtin-types.inc\n \n i386-c.o: $(srcdir)/config/i386/i386-c.c \\\n   $(srcdir)/config/i386/i386-protos.h $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(FLAGS_H) $(C_COMMON_H) $(GGC_H) \\\n   $(TARGET_H) $(TARGET_DEF_H) $(CPPLIB_H) $(C_PRAGMA_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/i386/i386-c.c\n+\n+\n+i386-builtin-types.inc: s-i386-bt ; @true\n+s-i386-bt: $(srcdir)/config/i386/i386-builtin-types.awk \\\n+  $(srcdir)/config/i386/i386-builtin-types.def\n+\t$(AWK) -f $^ > tmp-bt.inc\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-bt.inc i386-builtin-types.inc\n+\t$(STAMP) $@"}]}