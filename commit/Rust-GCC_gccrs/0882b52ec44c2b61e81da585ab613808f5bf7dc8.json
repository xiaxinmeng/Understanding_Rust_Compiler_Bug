{"sha": "0882b52ec44c2b61e81da585ab613808f5bf7dc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4MmI1MmVjNDRjMmI2MWU4MWRhNTg1YWI2MTM4MDhmNWJmN2RjOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-06-21T10:36:53Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-06-21T10:36:53Z"}, "message": "mips.c (function_arg): Where one part of a complex argument is in registers and the other part in the...\n\n\t* config/mips/mips.c (function_arg): Where one part of a\n\tcomplex argument is in registers and the other part in the stack,\n\treturn a REG not a PARALLEL.\n\ntestsuite:\n\t* gcc.c-torture/execute/complex-7.c: New.\n\nFrom-SVN: r114847", "tree": {"sha": "766e7ce8c8e171b7d75ff576ea71e76bd233126f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/766e7ce8c8e171b7d75ff576ea71e76bd233126f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0882b52ec44c2b61e81da585ab613808f5bf7dc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0882b52ec44c2b61e81da585ab613808f5bf7dc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0882b52ec44c2b61e81da585ab613808f5bf7dc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0882b52ec44c2b61e81da585ab613808f5bf7dc8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f57bf40b889941ee61338063068f50d73e8d86d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f57bf40b889941ee61338063068f50d73e8d86d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f57bf40b889941ee61338063068f50d73e8d86d"}], "stats": {"total": 91, "additions": 84, "deletions": 7}, "files": [{"sha": "d3d05e15b77d3c6daaf9781e836aea7010ed69f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0882b52ec44c2b61e81da585ab613808f5bf7dc8", "patch": "@@ -1,3 +1,9 @@\n+2006-06-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/mips/mips.c (function_arg): Where one part of a\n+\tcomplex argument is in registers and the other part in the stack,\n+\treturn a REG not a PARALLEL.\n+\n 2006-06-21  Mark Mitchell  <mark@codesourcery.com>\n \n \t* configure.ac: Set gcc_gxx_include_dir to $target/include/c++"}, {"sha": "5f88ed5633c741e19d73b2381642ce48b7762bd2", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=0882b52ec44c2b61e81da585ab613808f5bf7dc8", "patch": "@@ -3894,13 +3894,24 @@ function_arg (const CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \n       inner = GET_MODE_INNER (mode);\n       reg = FP_ARG_FIRST + info.reg_offset;\n-      real = gen_rtx_EXPR_LIST (VOIDmode,\n-\t\t\t\tgen_rtx_REG (inner, reg),\n-\t\t\t\tconst0_rtx);\n-      imag = gen_rtx_EXPR_LIST (VOIDmode,\n-\t\t\t\tgen_rtx_REG (inner, reg + info.reg_words / 2),\n-\t\t\t\tGEN_INT (GET_MODE_SIZE (inner)));\n-      return gen_rtx_PARALLEL (mode, gen_rtvec (2, real, imag));\n+      if (info.reg_words * UNITS_PER_WORD == GET_MODE_SIZE (inner))\n+\t{\n+\t  /* Real part in registers, imaginary part on stack.  */\n+\t  gcc_assert (info.stack_words == info.reg_words);\n+\t  return gen_rtx_REG (inner, reg);\n+\t}\n+      else\n+\t{\n+\t  gcc_assert (info.stack_words == 0);\n+\t  real = gen_rtx_EXPR_LIST (VOIDmode,\n+\t\t\t\t    gen_rtx_REG (inner, reg),\n+\t\t\t\t    const0_rtx);\n+\t  imag = gen_rtx_EXPR_LIST (VOIDmode,\n+\t\t\t\t    gen_rtx_REG (inner,\n+\t\t\t\t\t\t reg + info.reg_words / 2),\n+\t\t\t\t    GEN_INT (GET_MODE_SIZE (inner)));\n+\t  return gen_rtx_PARALLEL (mode, gen_rtvec (2, real, imag));\n+\t}\n     }\n \n   if (!info.fpr_p)"}, {"sha": "93cb39ebb46c2628b2f1c97b448ea22fe57b91ae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0882b52ec44c2b61e81da585ab613808f5bf7dc8", "patch": "@@ -1,3 +1,7 @@\n+2006-06-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/complex-7.c: New.\n+\n 2006-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/merge-all-constants-1.c: New test."}, {"sha": "c5bf89df77251e5190ef9e90c3c5e7e2c4fa652d", "filename": "gcc/testsuite/gcc.c-torture/execute/complex-7.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0882b52ec44c2b61e81da585ab613808f5bf7dc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-7.c?ref=0882b52ec44c2b61e81da585ab613808f5bf7dc8", "patch": "@@ -0,0 +1,56 @@\n+/* Test argument passing of complex values.  The MIPS64 compiler had a\n+   bug when they were split between registers and the stack.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+\n+volatile _Complex float f1 = 1.1f + 2.2if;\n+volatile _Complex float f2 = 3.3f + 4.4if;\n+volatile _Complex float f3 = 5.5f + 6.6if;\n+volatile _Complex float f4 = 7.7f + 8.8if;\n+volatile _Complex float f5 = 9.9f + 10.1if;\n+volatile _Complex double d1 = 1.1 + 2.2i;\n+volatile _Complex double d2 = 3.3 + 4.4i;\n+volatile _Complex double d3 = 5.5 + 6.6i;\n+volatile _Complex double d4 = 7.7 + 8.8i;\n+volatile _Complex double d5 = 9.9 + 10.1i;\n+volatile _Complex long double ld1 = 1.1L + 2.2iL;\n+volatile _Complex long double ld2 = 3.3L + 4.4iL;\n+volatile _Complex long double ld3 = 5.5L + 6.6iL;\n+volatile _Complex long double ld4 = 7.7L + 8.8iL;\n+volatile _Complex long double ld5 = 9.9L + 10.1iL;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+__attribute__((noinline)) void\n+check_float (int a, _Complex float a1, _Complex float a2,\n+\t     _Complex float a3, _Complex float a4, _Complex float a5)\n+{\n+  if (a1 != f1 || a2 != f2 || a3 != f3 || a4 != f4 || a5 != f5)\n+    abort ();\n+}\n+\n+__attribute__((noinline)) void\n+check_double (int a, _Complex double a1, _Complex double a2,\n+\t     _Complex double a3, _Complex double a4, _Complex double a5)\n+{\n+  if (a1 != d1 || a2 != d2 || a3 != d3 || a4 != d4 || a5 != d5)\n+    abort ();\n+}\n+\n+__attribute__((noinline)) void\n+check_long_double (int a, _Complex long double a1, _Complex long double a2,\n+\t     _Complex long double a3, _Complex long double a4,\n+\t\t   _Complex long double a5)\n+{\n+  if (a1 != ld1 || a2 != ld2 || a3 != ld3 || a4 != ld4 || a5 != ld5)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  check_float (0, f1, f2, f3, f4, f5);\n+  check_double (0, d1, d2, d3, d4, d5);\n+  check_long_double (0, ld1, ld2, ld3, ld4, ld5);\n+  exit (0);\n+}"}]}