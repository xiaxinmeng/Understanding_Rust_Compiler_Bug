{"sha": "009088865692bb3999805873933be155592d484b", "node_id": "C_kwDOANBUbNoAKDAwOTA4ODg2NTY5MmJiMzk5OTgwNTg3MzkzM2JlMTU1NTkyZDQ4NGI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-30T00:17:02Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-30T00:17:02Z"}, "message": "Daily bump.", "tree": {"sha": "340d0d39a56d5f8f71392f2e961ab008d8723ed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/340d0d39a56d5f8f71392f2e961ab008d8723ed6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/009088865692bb3999805873933be155592d484b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009088865692bb3999805873933be155592d484b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/009088865692bb3999805873933be155592d484b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009088865692bb3999805873933be155592d484b/comments", "author": null, "committer": null, "parents": [{"sha": "ee122a2eeaea2ffec0e32577c7372bd4e2289e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee122a2eeaea2ffec0e32577c7372bd4e2289e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee122a2eeaea2ffec0e32577c7372bd4e2289e11"}], "stats": {"total": 184, "additions": 183, "deletions": 1}, "files": [{"sha": "6fbc2694319473f7b63dca1c09b5ebc65ce41ae0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009088865692bb3999805873933be155592d484b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009088865692bb3999805873933be155592d484b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=009088865692bb3999805873933be155592d484b", "patch": "@@ -1,3 +1,54 @@\n+2023-03-29  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.cc (cris_rtx_costs) [CONST_INT]: Return 0\n+\tfor many quick operands, for register-sized modes.\n+\n+2023-03-29  Jiawei  <jiawei@iscas.ac.cn>\n+\n+\t* common/config/riscv/riscv-common.cc (riscv_subset_list::parse):\n+\tNew check.\n+\n+2023-03-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/109310\n+\t* configure.ac: Emit a warning for deprecated option\n+\t--enable-link-mutex.\n+\t* configure: Regenerate.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109331\n+\t* tree-ssa-forwprop.cc (pass_forwprop::execute): When we\n+\tdiscover a taken edge make sure to cleanup the CFG.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109327\n+\t* tree-ssa-forwprop.cc (pass_forwprop::execute): Deal with\n+\talready removed stmts when draining to_remove.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/106124\n+\t* dwarf2out.cc (lookup_type_die): Reset TREE_ASM_WRITTEN\n+\tso we can re-create the DIE for the type if required.\n+\n+2023-03-29  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109301\n+\t* tree-ssa-math-opts.cc (pass_data_cse_sincos): Change\n+\tproperties_provided from PROP_gimple_opt_math to 0.\n+\t(pass_data_expand_powcabs): Change properties_provided from 0 to\n+\tPROP_gimple_opt_math.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109154\n+\t* tree-if-conv.cc (gen_phi_arg_condition): Handle single\n+\tinverted condition specially by inverting at the caller.\n+\t(gen_phi_arg_condition): Swap COND_EXPR arms if requested.\n+\n 2023-03-28  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/107002"}, {"sha": "6800443be954bdcb2071b2b573e50744079a5094", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009088865692bb3999805873933be155592d484b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009088865692bb3999805873933be155592d484b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=009088865692bb3999805873933be155592d484b", "patch": "@@ -1 +1 @@\n-20230329\n+20230330"}, {"sha": "d74c8c4a6f3027523982da337387eda4925dbc2f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009088865692bb3999805873933be155592d484b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009088865692bb3999805873933be155592d484b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=009088865692bb3999805873933be155592d484b", "patch": "@@ -1,3 +1,10 @@\n+2023-03-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/109321\n+\tPR c++/109320\n+\t* pt.cc (alias_ctad_tweaks): Rewrite deduced args.\n+\t(type_targs_deducible_from): Handle null pack deduction.\n+\n 2023-03-28  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/107002"}, {"sha": "9e02313203e44b0b537e87a50e20d5e4c10f6a13", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009088865692bb3999805873933be155592d484b/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009088865692bb3999805873933be155592d484b/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=009088865692bb3999805873933be155592d484b", "patch": "@@ -1,3 +1,32 @@\n+2023-03-29  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109336\n+\tPR modula2/109315\n+\t* gm2-compiler/M2FileName.mod (CalculateFileName): Simplified by\n+\tensuring the extension contains the \".\".\n+\t(CalculateStemName): Re-formatted.\n+\t(ExtractExtension): Re-formatted.\n+\t(ExtractModule): Re-formatted.\n+\t* gm2-compiler/M2Options.def (setdefextension): Add block comment.\n+\t(setmodextension): Add block comment.  Re-formatted.\n+\t* gm2-compiler/M2Options.mod (setdefextension): Add block comment.\n+\t(setmodextension): Add block comment.  Re-formatted.\n+\t* gm2-compiler/M2Search.mod (FindSourceDefFile): Use\n+\tDefaultDefExt.\n+\t(DefaultDefExt): New constant.\n+\t(DefaultModExt): New constant.\n+\t(FindSourceModFile): Use DefaultModExt.\n+\t* gm2-gcc/m2decl.cc (m2decl_DeclareKnownVariable): Correct\n+\tspelling.\n+\t* gm2spec.cc (M2SOURCE): New constant.\n+\t(LANGSPEC): New value.\n+\t(MATHLIB): New value.\n+\t(WITHLIBC): New value.\n+\t(SKIPOPT): New value.\n+\t(lang_specific_driver): Replace seen_module_extension bool with\n+\tmodule_extension char *.  Detect -fmod= and remember extension.\n+\tUse the extension to detect modula-2 source and mark it as such.\n+\n 2023-03-23  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109264"}, {"sha": "e894c23c285a5d54072309bac266f5f9616f23df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009088865692bb3999805873933be155592d484b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009088865692bb3999805873933be155592d484b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=009088865692bb3999805873933be155592d484b", "patch": "@@ -1,3 +1,47 @@\n+2023-03-29  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109336\n+\t* gm2/link/nondefaultext/pass/hello.md: New test.\n+\t* gm2/link/nondefaultext/pass/liba.dm: New test.\n+\t* gm2/link/nondefaultext/pass/liba.md: New test.\n+\t* gm2/link/nondefaultext/pass/link-nondefaultext-pass.exp: New test.\n+\n+2023-03-29  Jiawei  <jiawei@iscas.ac.cn>\n+\n+\t* gcc.target/riscv/arch-19.c: New test.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109331\n+\t* gcc.dg/torture/pr109331.c: New testcase.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/pr94920.C: Scan forwprop1 instead of optimized.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109327\n+\t* gcc.dg/pr109327.c: New testcase.\n+\n+2023-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/106124\n+\t* g++.dg/gomp/pr106124.C: New testcase.\n+\n+2023-03-29  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109301\n+\t* gcc.dg/pr109301.c: New test.\n+\n+2023-03-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/109321\n+\tPR c++/109320\n+\t* g++.dg/cpp2a/class-deduction-alias16.C: New test.\n+\t* g++.dg/cpp2a/class-deduction-alias17.C: New test.\n+\n 2023-03-28  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* gfortran.dg/weak-2.f90: Enable for nvptx target."}, {"sha": "fb9cbd2732302588cd2582db5860e0d7c48eb799", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009088865692bb3999805873933be155592d484b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009088865692bb3999805873933be155592d484b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=009088865692bb3999805873933be155592d484b", "patch": "@@ -1,3 +1,54 @@\n+2023-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/109242\n+\t* testsuite/20_util/optional/monadic/pr109340.cc: Moved to...\n+\t* testsuite/20_util/optional/monadic/pr109242.cc: ...here.\n+\n+2023-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/experimental/internet (ip::make_address): Implement\n+\tmissing overload.\n+\t(ip::address_v4::broadcast()): Avoid undefined shift.\n+\t(ip::basic_endpoint): Fix member functions for constexpr.\n+\t(ip::basic_endpoint::_M_is_v6): Replace member function with\n+\tdata member, adjust member functions using it.\n+\t(ip::basic_endpoint::resize): Update _M_is_v6 based on sockaddr\n+\tcontent.\n+\t* testsuite/experimental/net/internet/address/v4/cons.cc: Fix\n+\tconstexpr checks to work in C++14.\n+\t* testsuite/experimental/net/internet/address/v4/creation.cc:\n+\tLikewise.\n+\t* testsuite/experimental/net/internet/endpoint/cons.cc:\n+\tLikewise.\n+\t* testsuite/experimental/net/internet/network/v4/cons.cc:\n+\tLikewise.\n+\t* testsuite/experimental/net/internet/network/v4/members.cc:\n+\tLikewise.\n+\t* testsuite/experimental/net/internet/endpoint/extensible.cc: New test.\n+\n+2023-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/expected (expected::value() &): Use const lvalue\n+\tfor unex member passed to bad_expected_access constructor, as\n+\tper LWG 3843.\n+\n+2023-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/109340\n+\t* include/std/expected (expected::transform): Use\n+\tstd::remove_cv_t instead of std::remove_cvref_t.\n+\t(expected::transform_error): Likewise.\n+\t(expected<cv void, E>::transform): Likewise.\n+\t(expected<cv void, E>::transform_error): Likewise.\n+\t* include/std/optional (transform): Use std::remove_cv_t.\n+\t* testsuite/20_util/optional/monadic/pr109340.cc: New test.\n+\n+2023-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/optional (optional): Adjust static assertion to\n+\treject arrays and functions as well as references.\n+\t* testsuite/20_util/optional/requirements_neg.cc: New test.\n+\n 2023-03-28  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/103387"}]}