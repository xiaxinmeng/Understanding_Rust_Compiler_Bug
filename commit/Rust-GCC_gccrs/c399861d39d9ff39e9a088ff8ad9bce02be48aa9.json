{"sha": "c399861d39d9ff39e9a088ff8ad9bce02be48aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM5OTg2MWQzOWQ5ZmYzOWU5YTA4OGZmOGFkOWJjZTAyYmU0OGFhOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-10-05T18:37:55Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-10-05T18:37:55Z"}, "message": "Supprt LABEL_REFs when using -fpic.\n\nFrom-SVN: r8222", "tree": {"sha": "36f3073a375da537502abe82f5c45c09ae5ddedb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f3073a375da537502abe82f5c45c09ae5ddedb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c399861d39d9ff39e9a088ff8ad9bce02be48aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c399861d39d9ff39e9a088ff8ad9bce02be48aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c399861d39d9ff39e9a088ff8ad9bce02be48aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c399861d39d9ff39e9a088ff8ad9bce02be48aa9/comments", "author": null, "committer": null, "parents": [{"sha": "8ad4abfc946cff807bf8f0c23b1408ca1ce8a4d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad4abfc946cff807bf8f0c23b1408ca1ce8a4d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad4abfc946cff807bf8f0c23b1408ca1ce8a4d1"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "7a7c607aeb9b82726c03e8f0833579155718eea6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c399861d39d9ff39e9a088ff8ad9bce02be48aa9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c399861d39d9ff39e9a088ff8ad9bce02be48aa9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c399861d39d9ff39e9a088ff8ad9bce02be48aa9", "patch": "@@ -1572,7 +1572,8 @@ legitimize_pic_address (orig, reg)\n \t  if (reg == 0)\n \t    reg = gen_reg_rtx (Pmode);\n \n-\t  if (GET_CODE (addr) == SYMBOL_REF && SYMBOL_REF_FLAG (addr))\n+\t  if ((GET_CODE (addr) == SYMBOL_REF && SYMBOL_REF_FLAG (addr))\n+\t      || GET_CODE (addr) == LABEL_REF)\n \t    new = gen_rtx (PLUS, Pmode, pic_offset_table_rtx, orig);\n \t  else\n \t    new = gen_rtx (MEM, Pmode,\n@@ -1854,7 +1855,9 @@ output_pic_addr_const (file, x, code)\n \tfprintf (file, \"@GOTOFF(%%ebx)\");\n       else if (code == 'P')\n \tfprintf (file, \"@PLT\");\n-      else if (GET_CODE (x) == LABEL_REF || ! SYMBOL_REF_FLAG (x))\n+      else if (GET_CODE (x) == LABEL_REF)\n+\tfprintf (file, \"@GOTOFF\");\n+      else if (! SYMBOL_REF_FLAG (x))\n \tfprintf (file, \"@GOT\");\n       else\n \tfprintf (file, \"@GOTOFF\");\n@@ -2176,15 +2179,14 @@ print_operand_address (file, addr)\n \n \t  if (addr != 0)\n \t    {\n-\t      if (GET_CODE (addr) == LABEL_REF)\n+\t      if (flag_pic)\n+\t\toutput_pic_addr_const (file, addr, 0);\n+\n+\t      else if (GET_CODE (addr) == LABEL_REF)\n \t\toutput_asm_label (addr);\n+\n \t      else\n-\t\t{\n-\t\t  if (flag_pic)\n-\t\t    output_pic_addr_const (file, addr, 0);\n-\t\t  else\n-\t\t    output_addr_const (file, addr);\n-\t\t}\n+\t\toutput_addr_const (file, addr);\n \t    }\n \n   \t  if (ireg != 0 && GET_CODE (ireg) == MULT)"}, {"sha": "18d56f66a0331211272360f80a3f6a81cc4479c9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c399861d39d9ff39e9a088ff8ad9bce02be48aa9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c399861d39d9ff39e9a088ff8ad9bce02be48aa9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c399861d39d9ff39e9a088ff8ad9bce02be48aa9", "patch": "@@ -808,9 +808,7 @@\n     /* Fastest way to change a 0 to a 1.  */\n     return AS1 (inc%L0,%0);\n \n-  if (flag_pic\n-      && GET_CODE (operands[1]) == SYMBOL_REF\n-      && CONSTANT_POOL_ADDRESS_P (operands[1]))\n+  if (flag_pic && SYMBOLIC_CONST (operands[1]))\n     return AS2 (lea%L0,%a1,%0);\n \n   return AS2 (mov%L0,%1,%0);\n@@ -2538,7 +2536,7 @@\n \n ;; addsi3 is faster, so put this after.\n \n-(define_insn \"\"\n+(define_insn \"movsi_lea\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (match_operand:QI 1 \"address_operand\" \"p\"))]\n   \"\""}]}