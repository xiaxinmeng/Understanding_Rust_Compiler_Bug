{"sha": "667c517b378a6e09c4790aa2111492c9609996ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY3YzUxN2IzNzhhNmUwOWM0NzkwYWEyMTExNDkyYzk2MDk5OTZiYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-05-30T06:53:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-05-30T06:53:46Z"}, "message": "re PR rtl-optimization/53519 (ice in do_SUBST, at combine.c:707)\n\n\tPR rtl-optimization/53519\n\t* combine.c (simplify_shift_const_1) <case NOT>: Use constm1_rtx\n\tinstead of GEN_INT (GET_MODE_MASK (mode)) as second operand of XOR.\n\n\t* gcc.c-torture/compile/pr53519.c: New test.\n\nFrom-SVN: r188001", "tree": {"sha": "716cc6742c97b8f4aa23addb4244350e75ac4657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/716cc6742c97b8f4aa23addb4244350e75ac4657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/667c517b378a6e09c4790aa2111492c9609996ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667c517b378a6e09c4790aa2111492c9609996ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667c517b378a6e09c4790aa2111492c9609996ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667c517b378a6e09c4790aa2111492c9609996ba/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eea58adb130013762b585f149c2dfaddb2072818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea58adb130013762b585f149c2dfaddb2072818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eea58adb130013762b585f149c2dfaddb2072818"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "b915e682a45ac2d55ac5135f82e2554c46bfb0d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=667c517b378a6e09c4790aa2111492c9609996ba", "patch": "@@ -1,3 +1,9 @@\n+2012-05-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/53519\n+\t* combine.c (simplify_shift_const_1) <case NOT>: Use constm1_rtx\n+\tinstead of GEN_INT (GET_MODE_MASK (mode)) as second operand of XOR.\n+\n 2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \t* config/arm/arm.c (arm_evpc_neon_vrev): Adjust off by one error."}, {"sha": "d6897a1795865c427d3d464d7e8e09d3c31350b4", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=667c517b378a6e09c4790aa2111492c9609996ba", "patch": "@@ -10284,8 +10284,7 @@ simplify_shift_const_1 (enum rtx_code code, enum machine_mode result_mode,\n \t    break;\n \n \t  /* Make this fit the case below.  */\n-\t  varop = gen_rtx_XOR (mode, XEXP (varop, 0),\n-\t\t\t       GEN_INT (GET_MODE_MASK (mode)));\n+\t  varop = gen_rtx_XOR (mode, XEXP (varop, 0), constm1_rtx);\n \t  continue;\n \n \tcase IOR:"}, {"sha": "2f42a8e671e98508637df4938fa9006e065a59e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=667c517b378a6e09c4790aa2111492c9609996ba", "patch": "@@ -1,3 +1,8 @@\n+2012-05-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/53519\n+\t* gcc.c-torture/compile/pr53519.c: New test.\n+\n 2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \t* gcc.target/arm/neon-vrev.c: New."}, {"sha": "3adadcb2c0e9d7ffe1d22e1164a38b1c96cc64d1", "filename": "gcc/testsuite/gcc.c-torture/compile/pr53519.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53519.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667c517b378a6e09c4790aa2111492c9609996ba/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53519.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53519.c?ref=667c517b378a6e09c4790aa2111492c9609996ba", "patch": "@@ -0,0 +1,26 @@\n+/* PR rtl-optimization/53519 */\n+\n+int a, b, c, d, e;\n+\n+short int\n+foo (short int x)\n+{\n+  return a == 0 ? x : 0;\n+}\n+\n+short int\n+bar (int x, int y)\n+{\n+  return x + y;\n+}\n+\n+void\n+baz (void)\n+{\n+  if (!e)\n+    {\n+      int f = foo (65535 ^ b);\n+      if (bar (!6L <= ~f, ~e) == c)\n+\td = 0;\n+    }\n+}"}]}