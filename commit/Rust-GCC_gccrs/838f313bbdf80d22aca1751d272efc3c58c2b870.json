{"sha": "838f313bbdf80d22aca1751d272efc3c58c2b870", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM4ZjMxM2JiZGY4MGQyMmFjYTE3NTFkMjcyZWZjM2M1OGMyYjg3MA==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-09-24T10:42:09Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-09-24T10:42:09Z"}, "message": "cpplex.c: Update TODO comment.\n\n\t* cpplex.c: Update TODO comment.\n\t* cpplib.c (do_error, do_warning): Merge common code of\n\tdo_error and do_warning\tinto do_diagnostic.  Use it.\n\t(do_diagnostic): New function.\n\t* cpplib.h: Fix comment typo.\n\nFrom-SVN: r36587", "tree": {"sha": "cc48c49fb97eab0d2417c46c7dfcc7a7a9fb8e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc48c49fb97eab0d2417c46c7dfcc7a7a9fb8e95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/838f313bbdf80d22aca1751d272efc3c58c2b870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838f313bbdf80d22aca1751d272efc3c58c2b870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838f313bbdf80d22aca1751d272efc3c58c2b870", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838f313bbdf80d22aca1751d272efc3c58c2b870/comments", "author": null, "committer": null, "parents": [{"sha": "c5412f0646a072dde262a8643ee2494fd55884eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5412f0646a072dde262a8643ee2494fd55884eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5412f0646a072dde262a8643ee2494fd55884eb"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "c6ecd38ca78e5501a090639556ada842bbe7f3e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=838f313bbdf80d22aca1751d272efc3c58c2b870", "patch": "@@ -1,3 +1,11 @@\n+Sun 24-Sep-2000 11:40:23 BST  Neil Booth  <NeilB@earthling.net>\n+\n+\t* cpplex.c: Update TODO comment.\n+\t* cpplib.c (do_error, do_warning): Merge common code of\n+\tdo_error and do_warning\tinto do_diagnostic.  Use it.\n+\t(do_diagnostic): New function.\n+\t* cpplib.h: Fix comment typo.\n+\n 2000-09-24  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (check_format_info): Warn for a wide character string"}, {"sha": "720574bfcd04e20eaca2d55c17e4e4c2bf01241b", "filename": "gcc/cpplex.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=838f313bbdf80d22aca1751d272efc3c58c2b870", "patch": "@@ -24,12 +24,9 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n Cleanups to do:-\n \n-o Check line numbers assigned to all errors.\n o Distinguish integers, floats, and 'other' pp-numbers.\n o Store ints and char constants as binary values.\n o New command-line assertion syntax.\n-o Work towards functions in cpperror.c taking a message level parameter.\n-  If we do this, merge the common code of do_warning and do_error.\n o Comment all functions, and describe macro expansion algorithm.\n o Move as much out of header files as possible.\n o Remove single quote pairs `', and some '', from diagnostics."}, {"sha": "d6fcf9bfb2d2184b09b6d86ec2a9d11cc398285b", "filename": "gcc/cpplib.c", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=838f313bbdf80d22aca1751d272efc3c58c2b870", "patch": "@@ -52,7 +52,7 @@ static void push_conditional\tPARAMS ((cpp_reader *, int, int,\n static int  read_line_number\tPARAMS ((cpp_reader *, int *));\n static int  strtoul_for_line\tPARAMS ((const U_CHAR *, unsigned int,\n \t\t\t\t\t unsigned long *));\n-\n+static void do_diagnostic\tPARAMS ((cpp_reader *, enum error_type));\n static const cpp_hashnode *\n \t    parse_ifdef\t\tPARAMS ((cpp_reader *, const U_CHAR *));\n static const cpp_hashnode *\n@@ -583,38 +583,35 @@ do_line (pfile)\n }\n \n /*\n- * Report an error detected by the program we are processing.\n- * Use the text of the line in the error message.\n- * (We use error because it prints the filename & line#.)\n+ * Report a warning or error detected by the program we are\n+ * processing.  Use the directive's tokens in the error message.\n  */\n \n static void\n-do_error (pfile)\n+do_diagnostic (pfile, code)\n      cpp_reader *pfile;\n+     enum error_type code;\n {\n-  if (_cpp_begin_message (pfile, ERROR, NULL, 0, 0))\n+  if (_cpp_begin_message (pfile, code, NULL, 0, 0))\n     {\n       cpp_output_list (pfile, stderr, &pfile->token_list,\n \t\t       pfile->first_directive_token);\n       putc ('\\n', stderr);\n     }\n }\n \n-/*\n- * Report a warning detected by the program we are processing.\n- * Use the text of the line in the warning message, then continue.\n- */\n+static void\n+do_error (pfile)\n+     cpp_reader *pfile;\n+{\n+  do_diagnostic (pfile, ERROR);\n+}\n \n static void\n do_warning (pfile)\n      cpp_reader *pfile;\n {\n-  if (_cpp_begin_message (pfile, WARNING, NULL, 0, 0))\n-    {\n-      cpp_output_list (pfile, stderr, &pfile->token_list,\n-\t\t       pfile->first_directive_token);\n-      putc ('\\n', stderr);\n-    }\n+  do_diagnostic (pfile, WARNING);\n }\n \n /* Report program identification.  */"}, {"sha": "c6f7ed34e8534951013133d6a6ab7c7ad83c0251", "filename": "gcc/cpplib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838f313bbdf80d22aca1751d272efc3c58c2b870/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=838f313bbdf80d22aca1751d272efc3c58c2b870", "patch": "@@ -457,7 +457,7 @@ struct lexer_state\n      all directives apart from #define.  */\n   unsigned char save_comments;\n \n-  /* Nonzero to get force the lexer to skip newlines.  */\n+  /* Nonzero to force the lexer to skip newlines.  */\n   unsigned char skip_newlines;\n \n   /* Nonzero if we're in the subroutine lex_line.  */"}]}