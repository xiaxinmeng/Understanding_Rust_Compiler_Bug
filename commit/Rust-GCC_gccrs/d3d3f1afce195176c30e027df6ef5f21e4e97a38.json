{"sha": "d3d3f1afce195176c30e027df6ef5f21e4e97a38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNkM2YxYWZjZTE5NTE3NmMzMGUwMjdkZjZlZjVmMjFlNGU5N2EzOA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-11-03T19:12:40Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-11-03T19:12:40Z"}, "message": "Add missing hunk from previous commit.\n\nFrom-SVN: r241829", "tree": {"sha": "967ac0ff85bb15dbc611a9436acb1b8983a2ea45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/967ac0ff85bb15dbc611a9436acb1b8983a2ea45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3d3f1afce195176c30e027df6ef5f21e4e97a38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d3f1afce195176c30e027df6ef5f21e4e97a38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d3f1afce195176c30e027df6ef5f21e4e97a38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d3f1afce195176c30e027df6ef5f21e4e97a38/comments", "author": null, "committer": null, "parents": [{"sha": "6869e9c69f446161edba48722a75813934643382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6869e9c69f446161edba48722a75813934643382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6869e9c69f446161edba48722a75813934643382"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "6d98d965d34d3d9f690bf9df0746b0837cbab60a", "filename": "gcc/config.gcc", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d3f1afce195176c30e027df6ef5f21e4e97a38/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d3f1afce195176c30e027df6ef5f21e4e97a38/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d3d3f1afce195176c30e027df6ef5f21e4e97a38", "patch": "@@ -1049,6 +1049,7 @@ arm-wrs-vxworks)\n \ttm_file=\"elfos.h arm/elf.h arm/aout.h ${tm_file} vx-common.h vxworks.h arm/vxworks.h\"\n \textra_options=\"${extra_options} arm/vxworks.opt\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-vxworks\"\n+\ttarget_cpu_cname=\"arm6\"\n \t;;\n arm*-*-freebsd*)                # ARM FreeBSD EABI\n \ttm_file=\"dbxelf.h elfos.h ${fbsd_tm_file} arm/elf.h\"\n@@ -1061,18 +1062,23 @@ arm*-*-freebsd*)                # ARM FreeBSD EABI\n \ttm_file=\"${tm_file} arm/bpabi.h arm/freebsd.h arm/aout.h arm/arm.h\"\n \tcase $target in\n \tarmv6*-*-freebsd*)\n+\t    target_cpu_cname=\"arm1176jzfs\"\n \t    tm_defines=\"${tm_defines} TARGET_FREEBSD_ARMv6=1\"\n             if test $fbsd_major -ge 11; then\n                tm_defines=\"${tm_defines} TARGET_FREEBSD_ARM_HARD_FLOAT=1\"\n             fi\n \t    ;;\n+\t*)\n+\t    target_cpu_cname=\"arm9\"\n+\t    ;;\n \tesac\n \twith_tls=${with_tls:-gnu}\n \t;;\n arm*-*-netbsdelf*)\n \ttm_file=\"dbxelf.h elfos.h netbsd.h netbsd-elf.h arm/elf.h arm/aout.h ${tm_file} arm/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttmake_file=\"${tmake_file} arm/t-arm\"\n+\ttarget_cpu_cname=\"arm6\"\n \t;;\n arm*-*-linux-*)\t\t\t# ARM GNU/Linux with ELF\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n@@ -1084,6 +1090,7 @@ arm*-*-linux-*)\t\t\t# ARM GNU/Linux with ELF\n \tesac\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n \ttm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h arm/aout.h vxworks-dummy.h arm/arm.h\"\n+\ttarget_cpu_cname=\"arm10tdmi\"\n \t# Define multilib configuration for arm-linux-androideabi.\n \tcase ${target} in\n \t*-androideabi)\n@@ -1098,6 +1105,7 @@ arm*-*-uclinux*eabi*)\t\t# ARM ucLinux\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/linux-gas.h arm/uclinux-elf.h glibc-stdint.h\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi\"\n \ttm_file=\"$tm_file arm/bpabi.h arm/uclinux-eabi.h arm/aout.h vxworks-dummy.h arm/arm.h\"\n+\ttarget_cpu_cname=\"arm7tdmi\"\n \t# The EABI requires the use of __cxa_atexit.\n \tdefault_use_cxa_atexit=yes\n \t;;\n@@ -1106,6 +1114,7 @@ arm*-*-phoenix*)\n \ttm_file=\"${tm_file} newlib-stdint.h phoenix.h\"\n \ttm_file=\"${tm_file} arm/aout.h arm/arm.h\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-bpabi arm/t-phoenix\"\n+\ttarget_cpu_cname=\"arm7tdmi\"\n \t;;\n arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems*)\n \tcase ${target} in\n@@ -1115,6 +1124,7 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems*)\n \tdefault_use_cxa_atexit=yes\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/bpabi.h\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf\"\n+\ttarget_cpu_cname=\"arm7tdmi\"\n \tcase ${target} in\n \tarm*-*-eabi*)\n \t  tm_file=\"$tm_file newlib-stdint.h\"\n@@ -1130,6 +1140,7 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems*)\n \t  # We do not include t-bpabi for Symbian OS because the system\n \t  # provides its own implementation of the BPABI functions.\n \t  tmake_file=\"${tmake_file} arm/t-symbian\"\n+\t  target_cpu_cname=\"arm10tdmi\"\n \t  ;;\n \tesac\n \ttm_file=\"${tm_file} arm/aout.h vxworks-dummy.h arm/arm.h\"\n@@ -3638,8 +3649,10 @@ case \"${target}\" in\n \t\t\t\t${srcdir}/config/arm/arm-cores.def | \\\n \t\t\t\tsed -e 's/^[^,]*,[ \t]*//' | \\\n \t\t\t\tsed -e 's/,.*$//'`\n-\t\t\t  eval \"target_${which}_cname=$new_val\"\n-\t\t\techo \"For $val real value is $new_val\"\n+\t\t\t  if [ x\"$val\" != x ] ; then\n+\t\t\t\teval \"target_${which}_cname=$new_val\"\n+\t\t\t\techo \"For $val real value is $new_val\"\n+\t\t\t  fi\n \t\t\t  true\n \t\t\telse\n \t\t\t  echo \"Unknown CPU used in --with-$which=$val\" 1>&2\n@@ -4313,7 +4326,7 @@ case ${target} in\n \tarm*-*-*)\n \t\tif test x$target_cpu_cname = x\n \t\tthen\n-\t\t\ttarget_cpu_default2=TARGET_CPU_generic\n+\t\t\ttarget_cpu_default2=TARGET_CPU_arm6\n \t\telse\n \t\t\ttarget_cpu_default2=TARGET_CPU_$target_cpu_cname\n \t\tfi"}]}