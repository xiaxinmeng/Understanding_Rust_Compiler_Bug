{"sha": "42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5MDZmNzk0MDQ4ZDZlM2EwMjdhNmNlMWQ4ZjQ3Y2RiMzdhNWE1Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-02-11T23:42:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-02-11T23:42:43Z"}, "message": "cstdlib (at_quick_exit, quick_exit): Do not declare.\n\n2013-02-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/c_std/cstdlib (at_quick_exit, quick_exit): Do not declare.\n\t* include/c_global/cstdlib (at_quick_exit, quick_exit): Declare only\n\tin C++11 mode and if available in the underlying C library.\n\t* testsuite/18_support/quick_exit/quick_exit.cc: Compile with\n\t-std=gnu++11; check _GLIBCXX_HAVE_AT_QUICK_EXIT and\n\t_GLIBCXX_HAVE_QUICK_EXIT.\n\nFrom-SVN: r195961", "tree": {"sha": "4e003d8edff0469a1c9b46de5802c1c04d5857d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e003d8edff0469a1c9b46de5802c1c04d5857d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/comments", "author": null, "committer": null, "parents": [{"sha": "6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c59ffd1ac3a56fc1819282ce820ec8d95922f38"}], "stats": {"total": 55, "additions": 38, "deletions": 17}, "files": [{"sha": "096fd68fd13e5b41d328c604a6025caaf37c99a8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "patch": "@@ -1,7 +1,16 @@\n+2013-02-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/c_std/cstdlib (at_quick_exit, quick_exit): Do not declare.\n+\t* include/c_global/cstdlib (at_quick_exit, quick_exit): Declare only\n+\tin C++11 mode and if available in the underlying C library.\n+\t* testsuite/18_support/quick_exit/quick_exit.cc: Compile with\n+\t-std=gnu++11; check _GLIBCXX_HAVE_AT_QUICK_EXIT and\n+\t_GLIBCXX_HAVE_QUICK_EXIT.\n+\n 2013-02-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/html/*: Regenerate.\n-\t\n+\n 2013-02-11  Jason Merrill  <jason@redhat.com>\n \n \t* linkage.m4 (GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE): New."}, {"sha": "9180036e634aa75de3d27b1fc6b5b372ea83cfbf", "filename": "libstdc++-v3/include/c_global/cstdlib", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib?ref=42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "patch": "@@ -57,8 +57,14 @@ namespace std\n   extern \"C\" void abort(void) throw () _GLIBCXX_NORETURN;\n   extern \"C\" int atexit(void (*)()) throw ();\n   extern \"C\" void exit(int) throw () _GLIBCXX_NORETURN;\n+#if __cplusplus >= 201103L\n+# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n   extern \"C\" int at_quick_exit(void (*)()) throw ();\n+# endif\n+# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n   extern \"C\" void quick_exit(int) throw() _GLIBCXX_NORETURN;\n+# endif\n+#endif\n } // namespace std\n \n #else\n@@ -69,7 +75,11 @@ namespace std\n #undef abort\n #undef abs\n #undef atexit\n-#undef at_quick_exit\n+#if __cplusplus >= 201103L\n+# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n+#  undef at_quick_exit\n+# endif\n+#endif\n #undef atof\n #undef atoi\n #undef atol\n@@ -86,7 +96,11 @@ namespace std\n #undef mbstowcs\n #undef mbtowc\n #undef qsort\n-#undef quick_exit\n+#if __cplusplus >= 201103L\n+# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n+#  undef quick_exit\n+# endif\n+#endif\n #undef rand\n #undef realloc\n #undef srand\n@@ -107,8 +121,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::abort;\n   using ::abs;\n   using ::atexit;\n-#ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n+#if __cplusplus >= 201103L\n+# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n   using ::at_quick_exit;\n+# endif\n #endif\n   using ::atof;\n   using ::atoi;\n@@ -128,8 +144,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::mbtowc;\n #endif // _GLIBCXX_HAVE_MBSTATE_T\n   using ::qsort;\n-#ifdef _GLIBCXX_HAVE_QUICK_EXIT\n+#if __cplusplus >= 201103L\n+# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n   using ::quick_exit;\n+# endif\n #endif\n   using ::rand;\n   using ::realloc;"}, {"sha": "224fccfd9c508d5a72c3d85d35276f733b28732c", "filename": "libstdc++-v3/include/c_std/cstdlib", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdlib?ref=42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "patch": "@@ -57,8 +57,6 @@ namespace std\n   extern \"C\" void abort(void) throw () _GLIBCXX_NORETURN;\n   extern \"C\" int atexit(void (*)()) throw ();\n   extern \"C\" void exit(int) throw () _GLIBCXX_NORETURN;\n-  extern \"C\" int at_quick_exit(void (*)()) throw ();\n-  extern \"C\" void quick_exit(int) throw() _GLIBCXX_NORETURN;\n } // namespace\n \n #else\n@@ -69,7 +67,6 @@ namespace std\n #undef abort\n #undef abs\n #undef atexit\n-#undef at_quick_exit\n #undef atof\n #undef atoi\n #undef atol\n@@ -86,7 +83,6 @@ namespace std\n #undef mbstowcs\n #undef mbtowc\n #undef qsort\n-#undef quick_exit\n #undef rand\n #undef realloc\n #undef srand\n@@ -107,9 +103,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::abort;\n   using ::abs;\n   using ::atexit;\n-#ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n-  using ::at_quick_exit;\n-#endif\n   using ::atof;\n   using ::atoi;\n   using ::atol;\n@@ -128,9 +121,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::mbtowc;\n #endif // _GLIBCXX_HAVE_MBSTATE_T\n   using ::qsort;\n-#ifdef _GLIBCXX_HAVE_QUICK_EXIT\n-  using ::quick_exit;\n-#endif\n   using ::rand;\n   using ::realloc;\n   using ::srand;"}, {"sha": "8e55890bacce2b2bdf60b0685c0daef3332a0e7b", "filename": "libstdc++-v3/testsuite/18_support/quick_exit/quick_exit.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fquick_exit%2Fquick_exit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42906f794048d6e3a027a6ce1d8f47cdb37a5a52/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fquick_exit%2Fquick_exit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fquick_exit%2Fquick_exit.cc?ref=42906f794048d6e3a027a6ce1d8f47cdb37a5a52", "patch": "@@ -1,5 +1,7 @@\n-// 2013-02-11 Jason Merrill\n-\n+// { dg-options \"-std=gnu++11\" }\n+//\n+// 2013-02-11  Jason  Merrill\n+//\n // Copyright (C) 2013 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,7 +35,9 @@ void wrong_handler()\n \n int main()\n {\n+#if defined(_GLIBCXX_HAVE_AT_QUICK_EXIT) && defined(_GLIBCXX_HAVE_QUICK_EXIT)\n   std::at_quick_exit (handler);\n   std::atexit (wrong_handler);\n   std::quick_exit (1);\n+#endif\n }"}]}