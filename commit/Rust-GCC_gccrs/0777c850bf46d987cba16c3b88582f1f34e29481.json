{"sha": "0777c850bf46d987cba16c3b88582f1f34e29481", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3N2M4NTBiZjQ2ZDk4N2NiYTE2YzNiODg1ODJmMWYzNGUyOTQ4MQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-06T23:53:15Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-06T23:53:15Z"}, "message": "make stores rtx_insn_list a vec\n\ngcc/ChangeLog:\n\n2016-07-06  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* gcse.c (struct ls_expr): Make stores field a vector.\n\t(ldst_entry): Adjust.\n\t(free_ldst_entry): Likewise.\n\t(print_ldst_list): Likewise.\n\t(compute_ld_motion_mems): Likewise.\n\t(update_ld_motion_stores): Likewise.\n\nFrom-SVN: r238065", "tree": {"sha": "1de6b95857238a8beca154029e494ca9281cffbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de6b95857238a8beca154029e494ca9281cffbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0777c850bf46d987cba16c3b88582f1f34e29481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0777c850bf46d987cba16c3b88582f1f34e29481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0777c850bf46d987cba16c3b88582f1f34e29481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0777c850bf46d987cba16c3b88582f1f34e29481/comments", "author": null, "committer": null, "parents": [{"sha": "5c576429715342e1a4a7f6346022bd93f473b8ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c576429715342e1a4a7f6346022bd93f473b8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c576429715342e1a4a7f6346022bd93f473b8ee"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "4a35420b85cd8f658e502069ebc1883e0e15a1a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0777c850bf46d987cba16c3b88582f1f34e29481/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0777c850bf46d987cba16c3b88582f1f34e29481/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0777c850bf46d987cba16c3b88582f1f34e29481", "patch": "@@ -1,3 +1,12 @@\n+2016-07-06  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* gcse.c (struct ls_expr): Make stores field a vector.\n+\t(ldst_entry): Adjust.\n+\t(free_ldst_entry): Likewise.\n+\t(print_ldst_list): Likewise.\n+\t(compute_ld_motion_mems): Likewise.\n+\t(update_ld_motion_stores): Likewise.\n+\n 2016-07-06  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* gcse.c (struct ls_expr): Remove loads field."}, {"sha": "49534f255f61476c81fa55d8f552b57f71203586", "filename": "gcc/gcse.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0777c850bf46d987cba16c3b88582f1f34e29481/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0777c850bf46d987cba16c3b88582f1f34e29481/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=0777c850bf46d987cba16c3b88582f1f34e29481", "patch": "@@ -143,6 +143,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"tm_p.h\"\n #include \"insn-config.h\"\n+#include \"print-rtl.h\"\n #include \"regs.h\"\n #include \"ira.h\"\n #include \"recog.h\"\n@@ -342,7 +343,7 @@ struct ls_expr\n   struct gcse_expr * expr;\t/* Gcse expression reference for LM.  */\n   rtx pattern;\t\t\t/* Pattern of this mem.  */\n   rtx pattern_regs;\t\t/* List of registers mentioned by the mem.  */\n-  rtx_insn_list *stores;\t/* INSN list of stores seen.  */\n+  vec<rtx_insn *> stores;\t/* INSN list of stores seen.  */\n   struct ls_expr * next;\t/* Next in the list.  */\n   int invalid;\t\t\t/* Invalid for some reason.  */\n   int index;\t\t\t/* If it maps to a bitmap index.  */\n@@ -3604,7 +3605,7 @@ ldst_entry (rtx x)\n   ptr->expr         = NULL;\n   ptr->pattern      = x;\n   ptr->pattern_regs = NULL_RTX;\n-  ptr->stores       = NULL;\n+  ptr->stores.create (0);\n   ptr->reaching_reg = NULL_RTX;\n   ptr->invalid      = 0;\n   ptr->index        = 0;\n@@ -3620,7 +3621,7 @@ ldst_entry (rtx x)\n static void\n free_ldst_entry (struct ls_expr * ptr)\n {\n-  free_INSN_LIST_list (& ptr->stores);\n+  ptr->stores.release ();\n \n   free (ptr);\n }\n@@ -3661,11 +3662,7 @@ print_ldst_list (FILE * file)\n       print_rtl (file, ptr->pattern);\n \n       fprintf (file, \"\\n\tStores : \");\n-\n-      if (ptr->stores)\n-\tprint_rtl (file, ptr->stores);\n-      else\n-\tfprintf (file, \"(nil)\");\n+      print_rtx_insn_vec (file, ptr->stores);\n \n       fprintf (file, \"\\n\\n\");\n     }\n@@ -3822,7 +3819,7 @@ compute_ld_motion_mems (void)\n \t\t\t     returns 0 for all REGs.  */\n \t\t\t  && can_assign_to_reg_without_clobbers_p (src,\n \t\t\t\t\t\t\t\t    src_mode))\n-\t\t\tptr->stores = alloc_INSN_LIST (insn, ptr->stores);\n+\t\t\tptr->stores.safe_push (insn);\n \t\t      else\n \t\t\tptr->invalid = 1;\n \t\t    }\n@@ -3915,11 +3912,10 @@ update_ld_motion_stores (struct gcse_expr * expr)\n \t where reg is the reaching reg used in the load.  We checked in\n \t compute_ld_motion_mems that we can replace (set mem expr) with\n \t (set reg expr) in that insn.  */\n-      rtx list = mem_ptr->stores;\n-\n-      for ( ; list != NULL_RTX; list = XEXP (list, 1))\n+      rtx_insn *insn;\n+      unsigned int i;\n+      FOR_EACH_VEC_ELT_REVERSE (mem_ptr->stores, i, insn)\n \t{\n-\t  rtx_insn *insn = as_a <rtx_insn *> (XEXP (list, 0));\n \t  rtx pat = PATTERN (insn);\n \t  rtx src = SET_SRC (pat);\n \t  rtx reg = expr->reaching_reg;"}]}