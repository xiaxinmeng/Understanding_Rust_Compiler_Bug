{"sha": "8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b", "node_id": "C_kwDOANBUbNoAKDhhNzE5Njk3N2Y2ZTkxYWQxMmMyMDljYjJlM2RiZmU5ZjBmZDNjM2I", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-02T10:37:41Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-02-01T14:42:34Z"}, "message": "ipa: silent -Wodr notes with -w\n\nIf -w is used, warn_odr properly sets *warned = false and\nso it should be preserved when calling warn_types_mismatch.\n\nNoticed that during a LTO reduction where I used -w.\n\ngcc/ChangeLog:\n\n\t* ipa-devirt.cc (odr_types_equivalent_p): Respect *warned\n\tvalue if set.", "tree": {"sha": "76c91f937f9fbf76c62c55b8d611a6fe4d7fc0bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76c91f937f9fbf76c62c55b8d611a6fe4d7fc0bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881bf8de9b07fb501d61ade8f521f1cc9dbe712e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e26266e9426b66dda596fedd11ec7970e7c2ed27", "filename": "gcc/ipa-devirt.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b/gcc%2Fipa-devirt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b/gcc%2Fipa-devirt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.cc?ref=8a7196977f6e91ad12c209cb2e3dbfe9f0fd3c3b", "patch": "@@ -1300,7 +1300,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \t      warn_odr (t1, t2, NULL, NULL, warn, warned,\n \t\t\tG_(\"it is defined as a pointer to different type \"\n \t\t\t   \"in another translation unit\"));\n-\t      if (warn && warned)\n+\t      if (warn && (warned == NULL || *warned))\n \t        warn_types_mismatch (TREE_TYPE (t1), TREE_TYPE (t2),\n \t\t\t\t     loc1, loc2);\n \t      return false;\n@@ -1315,7 +1315,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \t  warn_odr (t1, t2, NULL, NULL, warn, warned,\n \t\t    G_(\"a different type is defined \"\n \t\t       \"in another translation unit\"));\n-\t  if (warn && warned)\n+\t  if (warn && (warned == NULL || *warned))\n \t    warn_types_mismatch (TREE_TYPE (t1), TREE_TYPE (t2), loc1, loc2);\n \t  return false;\n \t}\n@@ -1333,7 +1333,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \t    warn_odr (t1, t2, NULL, NULL, warn, warned,\n \t\t      G_(\"a different type is defined in another \"\n \t\t\t \"translation unit\"));\n-\t    if (warn && warned)\n+\t    if (warn && (warned == NULL || *warned))\n \t      warn_types_mismatch (TREE_TYPE (t1), TREE_TYPE (t2), loc1, loc2);\n \t  }\n \tgcc_assert (TYPE_STRING_FLAG (t1) == TYPE_STRING_FLAG (t2));\n@@ -1375,7 +1375,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \t  warn_odr (t1, t2, NULL, NULL, warn, warned,\n \t\t    G_(\"has different return value \"\n \t\t       \"in another translation unit\"));\n-\t  if (warn && warned)\n+\t  if (warn && (warned == NULL || *warned))\n \t    warn_types_mismatch (TREE_TYPE (t1), TREE_TYPE (t2), loc1, loc2);\n \t  return false;\n \t}\n@@ -1398,7 +1398,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \t\t  warn_odr (t1, t2, NULL, NULL, warn, warned,\n \t\t\t    G_(\"has different parameters in another \"\n \t\t\t       \"translation unit\"));\n-\t\t  if (warn && warned)\n+\t\t  if (warn && (warned == NULL || *warned))\n \t\t    warn_types_mismatch (TREE_VALUE (parms1),\n \t\t\t\t\t TREE_VALUE (parms2), loc1, loc2);\n \t\t  return false;\n@@ -1484,7 +1484,7 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n \t\t    warn_odr (t1, t2, f1, f2, warn, warned,\n \t\t\t      G_(\"a field of same name but different type \"\n \t\t\t\t \"is defined in another translation unit\"));\n-\t\t    if (warn && warned)\n+\t\t    if (warn && (warned == NULL || *warned))\n \t\t      warn_types_mismatch (TREE_TYPE (f1), TREE_TYPE (f2), loc1, loc2);\n \t\t    return false;\n \t\t  }"}]}