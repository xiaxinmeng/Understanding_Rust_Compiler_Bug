{"sha": "b5b1842549c359a16002b52b0de2b82183c1735b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViMTg0MjU0OWMzNTlhMTYwMDJiNTJiMGRlMmI4MjE4M2MxNzM1Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2006-07-07T10:26:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-07-07T10:26:07Z"}, "message": "address_conversion.adb: New test.\n\n\t* gnat.dg/address_conversion.adb: New test.\n\t* gnat.dg/boolean_subtype.adb: Likewise.\n\t* gnat.dg/frame_overflow.adb: Likewise.\n\t* gnat.dg/pointer_array.adb: Likewise.\n\t* gnat.dg/pointer_conversion.adb: Likewise.\n\nFrom-SVN: r115253", "tree": {"sha": "e735cfadc6bbb1d7e015f1820a2f8b5de6d37f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e735cfadc6bbb1d7e015f1820a2f8b5de6d37f51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b1842549c359a16002b52b0de2b82183c1735b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b1842549c359a16002b52b0de2b82183c1735b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b1842549c359a16002b52b0de2b82183c1735b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b1842549c359a16002b52b0de2b82183c1735b/comments", "author": null, "committer": null, "parents": [{"sha": "01ade80d07990f16adfa29a86c10b8e0dfed7b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ade80d07990f16adfa29a86c10b8e0dfed7b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ade80d07990f16adfa29a86c10b8e0dfed7b4a"}], "stats": {"total": 150, "additions": 149, "deletions": 1}, "files": [{"sha": "6537b287b35e83f51df5609d4781db208fbedebc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5b1842549c359a16002b52b0de2b82183c1735b", "patch": "@@ -1,3 +1,11 @@\n+2006-07-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/address_conversion.adb: New test.\n+\t* gnat.dg/boolean_subtype.adb: Likewise.\n+\t* gnat.dg/frame_overflow.adb: Likewise.\n+\t* gnat.dg/pointer_array.adb: Likewise.\n+\t* gnat.dg/pointer_conversion.adb: Likewise.\n+\n 2006-07-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/28237\n@@ -50,7 +58,7 @@\n \n 2006-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n-\t* gnat.dg/gnat.dg/string_slice.adb: New test.\n+\t* gnat.dg/string_slice.adb: New test.\n \n 2006-07-01  Tobias Schl\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n "}, {"sha": "5813638c46b34c119b1dce583bbd953db4836ce0", "filename": "gcc/testsuite/gnat.dg/address_conversion.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Faddress_conversion.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Faddress_conversion.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddress_conversion.adb?ref=b5b1842549c359a16002b52b0de2b82183c1735b", "patch": "@@ -0,0 +1,24 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+with System.Address_To_Access_Conversions;\n+\n+procedure address_conversion is\n+\n+   type Integer_type1 is new Integer;\n+   type Integer_type2 is new Integer;\n+\n+   package AA is new System.Address_To_Access_Conversions (Integer_type1);\n+\n+   K1 : Integer_type1;\n+   K2 : Integer_type2;\n+\n+begin\n+   K1 := 1;\n+   K2 := 2;\n+\n+   AA.To_Pointer(K2'Address).all := K1;\n+   if K2 /= 1 then\n+      raise Program_Error;\n+   end if;\n+end;"}, {"sha": "3976d7992333c421ec50685f4f56584c1106024a", "filename": "gcc/testsuite/gnat.dg/boolean_subtype.adb", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_subtype.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_subtype.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_subtype.adb?ref=b5b1842549c359a16002b52b0de2b82183c1735b", "patch": "@@ -0,0 +1,42 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2\" }\n+\n+procedure boolean_subtype is\n+\n+   subtype Component_T is Boolean;\n+\n+   function Condition return Boolean is\n+   begin\n+      return True;\n+   end;\n+\n+   V : Integer := 0;\n+\n+   function Component_Value return Integer is\n+   begin\n+      V := V + 1;\n+      return V;\n+   end;\n+\n+   Most_Significant  : Component_T := False;\n+   Least_Significant : Component_T := True;\n+\n+begin\n+\n+   if Condition then\n+      Most_Significant := True;\n+   end if;\n+\n+   if Condition then\n+      Least_Significant := Component_T'Val (Component_Value);\n+   end if;\n+\n+   if Least_Significant < Most_Significant then\n+      Least_Significant := Most_Significant;\n+   end if;\n+\n+   if Least_Significant /= True then\n+      raise Program_Error;\n+   end if;\n+\n+end;"}, {"sha": "4172fc013ce993c81c823fde7688ac69584e2612", "filename": "gcc/testsuite/gnat.dg/frame_overflow.adb", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb?ref=b5b1842549c359a16002b52b0de2b82183c1735b", "patch": "@@ -0,0 +1,33 @@\n+-- { dg-do compile }\n+\n+procedure frame_overflow is\n+\n+   type Bitpos_Range_T is new Positive;\n+   type Bitmap_Array_T is array (Bitpos_Range_T) of Boolean;\n+\n+   type Bitmap_T is record\n+      Bits : Bitmap_Array_T := (others => False);\n+   end record;\n+   \n+   function -- { dg-error \"too large\" \"\" }\n+     Set_In (Bitmap : Bitmap_T; Bitpos : Bitpos_Range_T)  return Bitmap_T\n+   is\n+      Result: Bitmap_T := Bitmap;\n+   begin\n+      Result.Bits (Bitpos) := True;\n+      return Result;\n+   end;\n+\n+   function -- { dg-error \"too large\" \"\" }\n+     Negate (Bitmap : Bitmap_T) return Bitmap_T is\n+      Result: Bitmap_T;\n+   begin\n+      for E in Bitpos_Range_T loop\n+        Result.Bits (E) := not Bitmap.Bits (E);\n+      end loop;\n+      return Result;\n+  end;\n+\n+begin\n+   null;\n+end;"}, {"sha": "a1c72daae876358cfa0f2d95bc2e6827ca2980bf", "filename": "gcc/testsuite/gnat.dg/pointer_array.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_array.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_array.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_array.adb?ref=b5b1842549c359a16002b52b0de2b82183c1735b", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do compile }\n+\n+procedure pointer_array is\n+\n+   type Node;\n+   type Node_Ptr is access Node;\n+   type Node is array (1..10) of Node_Ptr;\n+\n+   procedure Process (N : Node_Ptr) is\n+   begin\n+      null;\n+   end;\n+\n+begin\n+   null;\n+end;"}, {"sha": "8ed2e0d54891cdf245a1cc4ed16b4bd4f2ee007b", "filename": "gcc/testsuite/gnat.dg/pointer_conversion.adb", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_conversion.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b1842549c359a16002b52b0de2b82183c1735b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_conversion.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_conversion.adb?ref=b5b1842549c359a16002b52b0de2b82183c1735b", "patch": "@@ -0,0 +1,25 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+with Unchecked_Conversion;\n+\n+procedure pointer_conversion is\n+\n+   type int1 is new integer;\n+   type int2 is new integer;\n+   type a1 is access int1;\n+   type a2 is access int2;\n+\n+   function to_a2 is new Unchecked_Conversion (a1, a2);\n+\n+   v1 : a1 := new int1;\n+   v2 : a2 := to_a2 (v1);\n+\n+begin\n+   v1.all := 1;\n+   v2.all := 0;\n+\n+   if v1.all /= 0 then\n+      raise Program_Error;\n+   end if;\n+end;"}]}