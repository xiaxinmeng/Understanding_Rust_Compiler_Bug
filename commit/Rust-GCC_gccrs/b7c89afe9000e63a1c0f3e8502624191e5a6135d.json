{"sha": "b7c89afe9000e63a1c0f3e8502624191e5a6135d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdjODlhZmU5MDAwZTYzYTFjMGYzZTg1MDI2MjQxOTFlNWE2MTM1ZA==", "commit": {"author": {"name": "Tom Rix", "email": "trix@redhat.com", "date": "2002-04-22T23:20:12Z"}, "committer": {"name": "Tom Rix", "email": "trix@gcc.gnu.org", "date": "2002-04-22T23:20:12Z"}, "message": "Generate constant for shift once.\n\nFrom-SVN: r52644", "tree": {"sha": "3881fba225a555ff9b2c4eac61d4a9b10ff23adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3881fba225a555ff9b2c4eac61d4a9b10ff23adb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7c89afe9000e63a1c0f3e8502624191e5a6135d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7c89afe9000e63a1c0f3e8502624191e5a6135d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7c89afe9000e63a1c0f3e8502624191e5a6135d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7c89afe9000e63a1c0f3e8502624191e5a6135d/comments", "author": {"login": "trixirt", "id": 7824193, "node_id": "MDQ6VXNlcjc4MjQxOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7824193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixirt", "html_url": "https://github.com/trixirt", "followers_url": "https://api.github.com/users/trixirt/followers", "following_url": "https://api.github.com/users/trixirt/following{/other_user}", "gists_url": "https://api.github.com/users/trixirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixirt/subscriptions", "organizations_url": "https://api.github.com/users/trixirt/orgs", "repos_url": "https://api.github.com/users/trixirt/repos", "events_url": "https://api.github.com/users/trixirt/events{/privacy}", "received_events_url": "https://api.github.com/users/trixirt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6067f1feb2d3d76de19372a366baf3fd3b883505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6067f1feb2d3d76de19372a366baf3fd3b883505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6067f1feb2d3d76de19372a366baf3fd3b883505"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "b10f351c85ce90a574b73fcd7ac8e601d3432b1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7c89afe9000e63a1c0f3e8502624191e5a6135d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7c89afe9000e63a1c0f3e8502624191e5a6135d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7c89afe9000e63a1c0f3e8502624191e5a6135d", "patch": "@@ -1,3 +1,7 @@\n+2002-04-22  Tom Rix  <trix@redhat.com>\n+\n+\t* expmed.c (init_expmed): Generate shifted constant once.\n+\n 2002-04-22  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-lex.c (lex_charconst): Call convert to get constant in"}, {"sha": "e60ccbf7924162fd5d8491694d209a3e644e1132", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7c89afe9000e63a1c0f3e8502624191e5a6135d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7c89afe9000e63a1c0f3e8502624191e5a6135d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=b7c89afe9000e63a1c0f3e8502624191e5a6135d", "patch": "@@ -144,19 +144,18 @@ init_expmed ()\n \n   for (m = 1; m < MAX_BITS_PER_WORD; m++)\n     {\n+      rtx c_int = GEN_INT ((HOST_WIDE_INT) 1 << m);\n       shift_cost[m] = shiftadd_cost[m] = shiftsub_cost[m] = 32000;\n \n       XEXP (SET_SRC (PATTERN (shift_insn)), 1) = GEN_INT (m);\n       if (recog (PATTERN (shift_insn), shift_insn, &dummy) >= 0)\n \tshift_cost[m] = rtx_cost (SET_SRC (PATTERN (shift_insn)), SET);\n \n-      XEXP (XEXP (SET_SRC (PATTERN (shiftadd_insn)), 0), 1)\n-\t= GEN_INT ((HOST_WIDE_INT) 1 << m);\n+      XEXP (XEXP (SET_SRC (PATTERN (shiftadd_insn)), 0), 1) = c_int;\n       if (recog (PATTERN (shiftadd_insn), shiftadd_insn, &dummy) >= 0)\n \tshiftadd_cost[m] = rtx_cost (SET_SRC (PATTERN (shiftadd_insn)), SET);\n \n-      XEXP (XEXP (SET_SRC (PATTERN (shiftsub_insn)), 0), 1)\n-\t= GEN_INT ((HOST_WIDE_INT) 1 << m);\n+      XEXP (XEXP (SET_SRC (PATTERN (shiftsub_insn)), 0), 1) = c_int;\n       if (recog (PATTERN (shiftsub_insn), shiftsub_insn, &dummy) >= 0)\n \tshiftsub_cost[m] = rtx_cost (SET_SRC (PATTERN (shiftsub_insn)), SET);\n     }"}]}