{"sha": "84ff566c63cde517c7d963a554e338531fb059f1", "node_id": "C_kwDOANBUbNoAKDg0ZmY1NjZjNjNjZGU1MTdjN2Q5NjNhNTU0ZTMzODUzMWZiMDU5ZjE", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-07-09T01:54:44Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2022-07-09T01:56:25Z"}, "message": "[PATCH][s390]: Fix the usage of store_bit_field in the backend.\n\nHi All,\n\nI seem to have broken the s390 bootstrap because I added a new parameter to the\nstore_bit_field function to indicate whether the value the field of is being set\nis currently undefined.\n\nIf it's undefined we use a subreg instead.  In this case the value of false\nrestores the old behavior.\n\nOk for master?\n\nThanks,\nTamar\n\ngcc/ChangeLog:\n\n\t* config/s390/s390.cc (s390_expand_atomic): Pass false to store_bit_field to\n\tindicate that the value is not undefined.", "tree": {"sha": "8d5643c27b8b20e16a09855636d0a5073a521c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d5643c27b8b20e16a09855636d0a5073a521c56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ff566c63cde517c7d963a554e338531fb059f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ff566c63cde517c7d963a554e338531fb059f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ff566c63cde517c7d963a554e338531fb059f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ff566c63cde517c7d963a554e338531fb059f1/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71e3daa31cfa35ee58e5899cb00767be92227fd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e3daa31cfa35ee58e5899cb00767be92227fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e3daa31cfa35ee58e5899cb00767be92227fd2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5aaf76a94908c4d8f09aca5ac64ef3a418615b9e", "filename": "gcc/config/s390/s390.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ff566c63cde517c7d963a554e338531fb059f1/gcc%2Fconfig%2Fs390%2Fs390.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ff566c63cde517c7d963a554e338531fb059f1/gcc%2Fconfig%2Fs390%2Fs390.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.cc?ref=84ff566c63cde517c7d963a554e338531fb059f1", "patch": "@@ -7468,7 +7468,7 @@ s390_expand_atomic (machine_mode mode, enum rtx_code code,\n     case SET:\n       if (ac.aligned && MEM_P (val))\n \tstore_bit_field (new_rtx, GET_MODE_BITSIZE (mode), 0,\n-\t\t\t 0, 0, SImode, val, false);\n+\t\t\t 0, 0, SImode, val, false, false);\n       else\n \t{\n \t  new_rtx = expand_simple_binop (SImode, AND, new_rtx, ac.modemaski,"}]}