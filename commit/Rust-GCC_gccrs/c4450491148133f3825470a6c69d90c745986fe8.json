{"sha": "c4450491148133f3825470a6c69d90c745986fe8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0NTA0OTExNDgxMzNmMzgyNTQ3MGE2YzY5ZDkwYzc0NTk4NmZlOA==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@linux.alibaba.com", "date": "2019-03-04T01:38:25Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2019-03-04T01:38:25Z"}, "message": "re PR tree-optimization/89487 (ICE in expand_expr_addr_expr_1, at expr.c:7993)\n\n\tPR tree-optimization/89487\n\t* tree-loop-distribution.c (has_nonaddressable_dataref_p): New.\n\t(create_rdg_vertices): Compute has_nonaddressable_dataref_p.\n\t(distribute_loop): Don't do runtime alias check if there is non-\n\taddressable data reference.\n\t* tree-ssa-loop-ivopts.c (may_be_nonaddressable_p): Check if VAR_DECL\n\tis a register variable.\n\n\t* gcc/testsuite/gcc.dg/tree-ssa/pr89487.c: New test.\n\nFrom-SVN: r269361", "tree": {"sha": "03e205483e741149342892e40475d2986cbb6741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03e205483e741149342892e40475d2986cbb6741"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4450491148133f3825470a6c69d90c745986fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4450491148133f3825470a6c69d90c745986fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4450491148133f3825470a6c69d90c745986fe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4450491148133f3825470a6c69d90c745986fe8/comments", "author": null, "committer": null, "parents": [{"sha": "19deb34365246c8dd0bcab74c1637ad2bdf47cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19deb34365246c8dd0bcab74c1637ad2bdf47cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19deb34365246c8dd0bcab74c1637ad2bdf47cca"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "024e018a25c3e8295691c23813a50bd71dfc7645", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4450491148133f3825470a6c69d90c745986fe8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4450491148133f3825470a6c69d90c745986fe8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4450491148133f3825470a6c69d90c745986fe8", "patch": "@@ -1,3 +1,13 @@\n+2019-03-04  Bin Cheng  <bin.cheng@linux.alibaba.com>\n+\n+\tPR tree-optimization/89487\n+\t* tree-loop-distribution.c (has_nonaddressable_dataref_p): New.\n+\t(create_rdg_vertices): Compute has_nonaddressable_dataref_p.\n+\t(distribute_loop): Don't do runtime alias check if there is non-\n+\taddressable data reference.\n+\t* tree-ssa-loop-ivopts.c (may_be_nonaddressable_p): Check if VAR_DECL\n+\tis a register variable.\n+\n 2019-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/89506"}, {"sha": "0b089b9ceab58d9311b8391449c2323f323285e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4450491148133f3825470a6c69d90c745986fe8", "patch": "@@ -1,3 +1,8 @@\n+2018-03-04  Bin Cheng  <bin.cheng@linux.alibaba.com>\n+\n+\tPR tree-optimization/89487\n+\t* gcc/testsuite/gcc.dg/tree-ssa/pr89487.c: New test.\n+\n 2019-03-03  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/77583"}, {"sha": "a02419675ff5c6b83c02ef61d2e98ed77e26a851", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr89487.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89487.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89487.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89487.c?ref=c4450491148133f3825470a6c69d90c745986fe8", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-distribution\" } */\n+\n+void\n+caml_interprete (void)\n+{\n+  register int *pc asm(\"%r15\");\n+  register int *sp asm(\"%r14\");\n+  int i;\n+\n+  for (i = 0; i < 3; ++i)\n+    *--sp = pc[i];\n+}"}, {"sha": "81283d19871440eab64ff344fe8d7a5522525249", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=c4450491148133f3825470a6c69d90c745986fe8", "patch": "@@ -160,6 +160,9 @@ static vec<loop_p> loop_nest;\n /* Vector of data references in the loop to be distributed.  */\n static vec<data_reference_p> datarefs_vec;\n \n+/* If there is nonaddressable data reference in above vector.  */\n+static bool has_nonaddressable_dataref_p;\n+\n /* Store index of data reference in aux field.  */\n #define DR_INDEX(dr)      ((uintptr_t) (dr)->aux)\n \n@@ -467,6 +470,7 @@ create_rdg_vertices (struct graph *rdg, vec<gimple *> stmts, loop_p loop)\n \t  else\n \t    RDGV_HAS_MEM_WRITE (v) = true;\n \t  RDGV_DATAREFS (v).safe_push (dr);\n+\t  has_nonaddressable_dataref_p |= may_be_nonaddressable_p (dr->ref);\n \t}\n     }\n   return true;\n@@ -2757,6 +2761,7 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n     }\n \n   datarefs_vec.create (20);\n+  has_nonaddressable_dataref_p = false;\n   rdg = build_rdg (loop, cd);\n   if (!rdg)\n     {\n@@ -2885,8 +2890,10 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n   if (partitions.length () > 1)\n     {\n       /* Don't support loop nest distribution under runtime alias check\n-\t since it's not likely to enable many vectorization opportunities.  */\n-      if (loop->inner)\n+\t since it's not likely to enable many vectorization opportunities.\n+\t Also if loop has any data reference which may be not addressable\n+\t since alias check needs to take, compare address of the object.  */\n+      if (loop->inner || has_nonaddressable_dataref_p)\n \tmerge_dep_scc_partitions (rdg, &partitions, false);\n       else\n \t{"}, {"sha": "a44b4cbf40d5bac7ff53f71d4333f9d1e97cb7ca", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4450491148133f3825470a6c69d90c745986fe8/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=c4450491148133f3825470a6c69d90c745986fe8", "patch": "@@ -2247,6 +2247,10 @@ may_be_nonaddressable_p (tree expr)\n {\n   switch (TREE_CODE (expr))\n     {\n+    case VAR_DECL:\n+      /* Check if it's a register variable.  */\n+      return DECL_HARD_REGISTER (expr);\n+\n     case TARGET_MEM_REF:\n       /* TARGET_MEM_REFs are translated directly to valid MEMs on the\n \t target, thus they are always addressable.  */"}]}