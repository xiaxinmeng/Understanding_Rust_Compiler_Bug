{"sha": "ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0MzM4NzkyYjc2ZTQ2YjZjMTFkZGM2OWQ3ZThlOGE4N2Q0Y2Y0Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-20T06:59:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-20T06:59:27Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r205088", "tree": {"sha": "8b97bd28d33f544931a2c23347d6b1b8238b4f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b97bd28d33f544931a2c23347d6b1b8238b4f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42/comments", "author": null, "committer": null, "parents": [{"sha": "eb7bdcb0273113159a9ab332e0e6d23889516067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7bdcb0273113159a9ab332e0e6d23889516067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb7bdcb0273113159a9ab332e0e6d23889516067"}], "stats": {"total": 81, "additions": 33, "deletions": 48}, "files": [{"sha": "db98222c9ecc6f78951448c88f770af85b3f219d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 48, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac4338792b76e46b6c11ddc69d7e8e8a87d4cf42", "patch": "@@ -11,8 +11,7 @@\n \t(GdbSubprinterTypeList): New subclass of GdbSubprinter.\n \t(GdbSubprinterRegex): New subclass of GdbSubprinter.\n \t(GdbPrettyPrinters.add_printer): Remove in favor of...\n-\t(GdbPrettyPrinters.add_printer_for_types): ...this new method\n-\tand...\n+\t(GdbPrettyPrinters.add_printer_for_types): ...this new method and...\n \t(GdbPrettyPrinters.add_printer_for_regex): ...this other new method.\n \t(GdbPrettyPrinters.__call__): Update search for subprinter\n \tto use handles_type method.\n@@ -28,8 +27,7 @@\n 2013-11-19  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadedge.c (thread_across_edge): After threading\n-\tthrough a joiner, allow threading a normal block requiring\n-\tduplication.\n+\tthrough a joiner, allow threading a normal block requiring duplication.\n \n \t* tree-ssa-threadupdate.c (thread_block_1): Improve code to detect\n \tjump threading requests that would muck up the loop structures.\n@@ -69,8 +67,8 @@\n \t* common/config/i386/i386-common.c: Enable\n \t-freorder-blocks-and-partition at -O2 and up for x86.\n \t* doc/invoke.texi: Update -freorder-blocks-and-partition default.\n-\t* opts.c (finish_options): Only warn if -freorder-blocks-and-\n-\tpartition was set on command line.\n+\t* opts.c (finish_options): Only warn if\n+\t-freorder-blocks-and-partition was set on command line.\n \n 2013-11-19  Sriraman Tallam  <tmsriram@google.com>\n \n@@ -141,12 +139,10 @@\n \t(bitmap_intersection_of_preds): Remove usage of ENTRY_BLOCK_PTR macro.\n \t(inverted_post_order_compute): Remove uses of macros: ENTRY_BLOCK_PTR,\n \tEXIT_BLOCK_PTR.\n-\t(compute_dominance_frontiers_1): Remove usage of ENTRY_BLOCK_PTR\n-\tmacro.\n+\t(compute_dominance_frontiers_1): Remove usage of ENTRY_BLOCK_PTR macro.\n \t(post_order_compute): Remove uses of macros: ENTRY_BLOCK_PTR,\n \tEXIT_BLOCK_PTR.\n-\t(connect_infinite_loops_to_exit): Remove usage of EXIT_BLOCK_PTR\n-\tmacro.\n+\t(connect_infinite_loops_to_exit): Remove usage of EXIT_BLOCK_PTR macro.\n \t(remove_fake_edges): Remove usage of ENTRY_BLOCK_PTR macro.\n \t(add_noreturn_fake_exit_edges): Remove usage of EXIT_BLOCK_PTR macro.\n \t(find_pdom): Remove uses of macros: ENTRY_BLOCK_PTR, EXIT_BLOCK_PTR.\n@@ -184,8 +180,7 @@\n \t(verify_flow_info): Likewise.\n \t* cfgloop.c (flow_bb_inside_loop_p): Likewise.\n \t(num_loop_branches): Remove usage of EXIT_BLOCK_PTR macro.\n-\t(disambiguate_multiple_latches): Remove usage of ENTRY_BLOCK_PTR\n-\tmacro.\n+\t(disambiguate_multiple_latches): Remove usage of ENTRY_BLOCK_PTR macro.\n \t(get_loop_exit_edges): Remove usage of EXIT_BLOCK_PTR macro.\n \t(bb_loop_header_p): Remove usage of ENTRY_BLOCK_PTR macro.\n \t(get_loop_body_in_bfs_order): Remove usage of EXIT_BLOCK_PTR macro.\n@@ -269,8 +264,7 @@\n \t* dominance.c (iterate_fix_dominators): Remove usage of\n \tENTRY_BLOCK_PTR macro.\n \t(calc_idoms): Remove uses of macros: ENTRY_BLOCK_PTR, EXIT_BLOCK_PTR.\n-\t(determine_dominators_for_sons): Remove usage of ENTRY_BLOCK_PTR\n-\tmacro.\n+\t(determine_dominators_for_sons): Remove usage of ENTRY_BLOCK_PTR macro.\n \t(calc_dfs_tree): Remove uses of macros: ENTRY_BLOCK_PTR,\n \tEXIT_BLOCK_PTR.\n \t(prune_bbs_to_update_dominators): Remove usage of ENTRY_BLOCK_PTR\n@@ -336,8 +330,7 @@\n \t(find_return_bb): Remove usage of EXIT_BLOCK_PTR macro.\n \t(verify_non_ssa_vars): Remove usage of ENTRY_BLOCK_PTR macro.\n \t* ira-build.c (ira_loop_tree_body_rev_postorder): Likewise.\n-\t* ira-color.c (print_loop_title): Remove usage of EXIT_BLOCK_PTR\n-\tmacro.\n+\t* ira-color.c (print_loop_title): Remove usage of EXIT_BLOCK_PTR macro.\n \t* ira-emit.c (entered_from_non_parent_p): Remove usage of\n \tENTRY_BLOCK_PTR macro.\n \t(ira_emit): Remove usage of EXIT_BLOCK_PTR macro.\n@@ -377,8 +370,7 @@\n \t(create_pre_exit): Remove usage of EXIT_BLOCK_PTR macro.\n \t* modulo-sched.c (rest_of_handle_sms): Likewise.\n \t(canon_loop): Likewise.\n-\t* omp-low.c (build_omp_regions): Remove usage of ENTRY_BLOCK_PTR\n-\tmacro.\n+\t* omp-low.c (build_omp_regions): Remove usage of ENTRY_BLOCK_PTR macro.\n \t* postreload-gcse.c (eliminate_partially_redundant_loads): Remove uses\n \tof macros: ENTRY_BLOCK_PTR, EXIT_BLOCK_PTR.\n \t* predict.c (rebuild_frequencies): Remove usage of ENTRY_BLOCK_PTR\n@@ -657,8 +649,7 @@\n 2013-11-19  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64.md\n-\t(aarch64_movdi_<mode>low, *add_<shift>_si_uxtw):\n-\tAdjust whitespace.\n+\t(aarch64_movdi_<mode>low, *add_<shift>_si_uxtw): Adjust whitespace.\n \n 2013-11-19  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n@@ -672,8 +663,8 @@\n \n 2013-11-19  Basile Starynkevitch  <basile@starynkevitch.net>\n \n-        * plugin.def (PLUGIN_INCLUDE_FILE): New event, invoked in \n-        cb_file_change.\n+\t* plugin.def (PLUGIN_INCLUDE_FILE): New event, invoked in\n+\tcb_file_change.\n \n 2013-11-19  Peter Bergner  <bergner@vnet.ibm.com>\n \n@@ -688,8 +679,7 @@\n \t(gimple): Convert from being a \"union gimple_statement_d *\"\n \tto a \"struct gimple_statement_base *\".\n \t(const_gimple): Likewise (with \"const\").\n-\t* ggc.h (ggc_alloc_cleared_gimple_statement_d_stat): Replace\n-\twith...\n+\t* ggc.h (ggc_alloc_cleared_gimple_statement_d_stat): Replace with...\n \t(ggc_alloc_cleared_gimple_statement_stat): ...this.\n \t* gimple-pretty-print.c (debug): Change parameter from a\n \t\"gimple_statement_d &\" to a \"gimple_statement_base &\".\n@@ -705,9 +695,8 @@\n \tclass by adding \"desc\", \"tag\" and \"variable_size\" to GTY, thus\n \tusing opting-in to gengtype's support for simple inheritance.\n \t(gimple_statement_with_ops_base): Convert to a subclass of\n-\tgimple_statement_base, dropping initial \"gsbase\" field.  Note\n-\tthat this type is abstract, with no GSS_ value, and thus no GTY\n-\ttag value.\n+\tgimple_statement_base, dropping initial \"gsbase\" field.  Note that\n+\tthis type is abstract, with no GSS_ value, and thus no GTY tag value.\n \t(gimple_statement_with_ops): Convert to a subclass of\n \tgimple_statement_with_ops_base, dropping initial \"opbase\" field.\n \tAdd tag value to GTY marking.  Update marking of op field to\n@@ -718,8 +707,7 @@\n \t(gimple_statement_with_memory_ops): Convert to a subclass of\n \tpublic gimple_statement_with_memory_ops_base, dropping initial\n \t\"membase\" field.  Add tag value to GTY marking.  Update marking\n-\tof op field to reflect how num_ops field is accessed via\n-\tinheritance.\n+\tof op field to reflect how num_ops field is accessed via inheritance.\n \t(gimple_statement_call): Analogous changes that also update the\n \tmarking of the \"u\" union.\n \t(gimple_statement_omp): Convert to a subclass of\n@@ -771,8 +759,7 @@\n \t* tree-ssa-ccp.c (gimple_htab): Convert underlying type from\n \tgimple_statement_d to gimple_statement_base.\n \n-\t* gimple.h (gimple_use_ops): Port from union to usage of\n-\tdyn_cast.\n+\t* gimple.h (gimple_use_ops): Port from union to usage of dyn_cast.\n \t(gimple_set_use_ops): Port from union to usage of as_a.\n \t(gimple_set_vuse): Likewise.\n \t(gimple_set_vdef): Likewise.\n@@ -1170,9 +1157,9 @@\n \tPR tree-optimization/59164\n \t* tree-vect-loop-manip.c (vect_update_ivs_after_vectorizer):\n \tUncomment assert.\n-\t* tree-vect-loop.c (vect_analyze_loop_operations): Adjust\n-\tcheck whether we can create an epilogue loop to reflect the\n-\tcases where we create one.\n+\t* tree-vect-loop.c (vect_analyze_loop_operations): Adjust check\n+\twhether we can create an epilogue loop to reflect thecases where\n+\twe create one.\n \n 2013-11-19  Andrew MacLeod  <amacleod@redhat.com>\n \n@@ -1240,14 +1227,14 @@\n \n 2013-11-19  Jan Hubicka  <jh@suse.cz>\n \n-\t* cgraph.c (cgraph_create_indirect_edge): Use get_polymorphic_call_info.\n-\t* cgraph.h (cgraph_indirect_call_info): Add outer_type, maybe_in_construction\n-\tand maybe_derived_type.\n+\t* cgraph.c (cgraph_create_indirect_edge): Use\n+\tget_polymorphic_call_info.\n+\t* cgraph.h (cgraph_indirect_call_info): Add outer_type,\n+\tmaybe_in_construction and maybe_derived_type.\n \t* ipa-utils.h (ipa_polymorphic_call_context): New structure.\n \t(ipa_dummy_polymorphic_call_context): New global var.\n \t(possible_polymorphic_call_targets): Add context paramter.\n-\t(dump_possible_polymorphic_call_targets): Likewise; update\n-\twrappers.\n+\t(dump_possible_polymorphic_call_targets): Likewise; update wrappers.\n \t(possible_polymorphic_call_target_p): Likewise.\n \t(get_polymorphic_call_info): New function.\n \t* ipa-devirt.c (ipa_dummy_polymorphic_call_context): New function.\n@@ -1256,8 +1243,8 @@\n \t(maybe_record_node): Add FINALP parameter.\n \t(record_binfo): Add OUTER_TYPE and OFFSET; walk the inner\n \tby info by get_binfo_at_offset.\n-\t(possible_polymorphic_call_targets_1): Add OUTER_TYPE/OFFSET parameters;\n-\tpass them to record-binfo.\n+\t(possible_polymorphic_call_targets_1): Add OUTER_TYPE/OFFSET\n+\tparameters; pass them to record-binfo.\n \t(polymorphic_call_target_d): Add context and FINAL.\n \t(polymorphic_call_target_hasher::hash): Hash context.\n \t(polymorphic_call_target_hasher::equal): Compare context.\n@@ -1300,8 +1287,7 @@\n \t* tree-ssa-loop-ivopts.c (enum ainc_type): New.\n \t(address_cost_data): New field.\n \t(get_address_cost): Compute auto-increment rtx cost in ainc_costs.\n-\tUse ainc_costs for auto-increment rtx patterns.\n-\tCleanup TWS.\n+\tUse ainc_costs for auto-increment rtx patterns.  Cleanup TWS.\n \n 2013-11-19  James Greenhalgh  <james.greenhalgh@arm.com>\n \n@@ -1320,7 +1306,7 @@\n \t(any_remaining_duplicated_blocks): Likewise.\n \t(ssa_fix_duplicate_block_edges): Handle multiple duplicated\n \tblocks on a jump threading path.\n-\t\n+\n \t* tree-ssa-threadupdate.c (thread_through_loop_header):  Do not\n \tthread through a joiner which has the latch edge.\n \n@@ -1467,15 +1453,15 @@\n \n 2013-11-18  Jan Hubicka  <jh@suse.cz>\n \n-\t* profile.c (compute_branch_probabilities): Do not sanity check run_max.\n+\t* profile.c (compute_branch_probabilities): Do not sanity check\n+\trun_max.\n \n 2013-11-18 Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* tree.c (int_fits_type_p): Change GET_MODE_BITSIZE to\n \tGET_MODE_PRECISION.\n \t* fold-const.c (fold_single_bit_test_into_sign_test)\n-\t(fold_binary_loc):  Change GET_MODE_BITSIZE to\n-\tGET_MODE_PRECISION.\n+\t(fold_binary_loc):  Change GET_MODE_BITSIZE to GET_MODE_PRECISION.\n \n 2013-11-18  Teresa Johnson  <tejohnson@google.com>\n \n@@ -1521,7 +1507,6 @@\n \t(ssa_fix_duplicate_block_edges): Corresponding changes.\n \t(ssa_fixup_template_block, thread_single_edge):  Likewise.\n \n->>>>>>> .r205063\n 2013-11-18  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi: Extend -fsanitize=undefined documentation."}]}