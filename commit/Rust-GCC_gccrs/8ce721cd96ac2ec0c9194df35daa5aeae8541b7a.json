{"sha": "8ce721cd96ac2ec0c9194df35daa5aeae8541b7a", "node_id": "C_kwDOANBUbNoAKDhjZTcyMWNkOTZhYzJlYzBjOTE5NGRmMzVkYWE1YWVhZTg1NDFiN2E", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2021-12-06T10:39:35Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-01-23T10:25:47Z"}, "message": "[PATCH 4/15] arm: Add testsuite library support for PACBTI target\n\nAdd targeting-checking entities for PACBTI in testsuite\nframework.\n\nPre-approved with the requested changes here\n<https://gcc.gnu.org/pipermail/gcc-patches/2021-December/586331.html>.\n\ngcc/testsuite/ChangeLog\n\n\t* lib/target-supports.exp:\n\t(check_effective_target_arm_pacbti_hw): New.\n\ngcc/ChangeLog:\n\t* doc/sourcebuild.texi: Document arm_pacbti_hw.\n\nCo-Authored-By: Tejas Belagod  <tbelagod@arm.com>", "tree": {"sha": "2b768e9077fd16b75c5ce8721a8fa7a33e02ed4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b768e9077fd16b75c5ce8721a8fa7a33e02ed4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14fab5fb9aa6432ca59fb02b7b82ac17093f4de2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14fab5fb9aa6432ca59fb02b7b82ac17093f4de2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14fab5fb9aa6432ca59fb02b7b82ac17093f4de2"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "be4318221cc70fcf0a8159efc865802f6d1ee0bd", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=8ce721cd96ac2ec0c9194df35daa5aeae8541b7a", "patch": "@@ -2195,6 +2195,10 @@ ARM target supports options to generate instructions from ARMv8.1-M with\n the Custom Datapath Extension (CDE) and M-Profile Vector Extension (MVE).\n Some multilibs may be incompatible with these options.\n \n+@item arm_pacbti_hw\n+Test system supports executing Pointer Authentication and Branch Target\n+Identification instructions.\n+\n @item arm_prefer_ldrd_strd\n ARM target prefers @code{LDRD} and @code{STRD} instructions over\n @code{LDM} and @code{STM} instructions.\n@@ -2284,6 +2288,12 @@ ARM target generates Thumb-2 code for @code{-mthumb} but does not\n support executing the Armv8.1-M Mainline Low Overhead Loop\n instructions @code{DLS} and @code{LE}.\n \n+@item mbranch_protection_ok\n+ARM target supporting @code{-mbranch-protection=standard}.\n+\n+@item arm_pacbti_hw\n+Test system supports for executing non nop pacbti instructions.\n+\n @end table\n \n @subsubsection AArch64-specific attributes"}, {"sha": "a9ee288dab5b732e58962ffac2228f8299f2a066", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce721cd96ac2ec0c9194df35daa5aeae8541b7a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8ce721cd96ac2ec0c9194df35daa5aeae8541b7a", "patch": "@@ -5218,6 +5218,22 @@ proc check_effective_target_arm_cmse_clear_ok {} {\n     } \"-mcmse\"];\n }\n \n+# Return 1 if the target supports executing PACBTI instructions, 0\n+# otherwise.\n+\n+proc check_effective_target_arm_pacbti_hw {} {\n+    return [check_runtime arm_pacbti_hw_available {\n+\t__attribute__ ((naked)) int\n+\tmain (void)\n+\t{\n+\t  asm (\"pac r12, lr, sp\");\n+\t  asm (\"mov r0, #0\");\n+\t  asm (\"autg r12, lr, sp\");\n+\t  asm (\"bx lr\");\n+\t}\n+    } \"-march=armv8.1-m.main+pacbti+fp -mbranch-protection=standard -mthumb -mfloat-abi=hard\"]\n+}\n+\n # Return 1 if this compilation turns on string_ops_prefer_neon on.\n \n proc check_effective_target_arm_tune_string_ops_prefer_neon { } {"}]}